uint64_t Characteristic.Properties.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t Characteristic.Properties.init(rawValue:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

void static Characteristic.Properties.broadcast.getter(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

void static Characteristic.Properties.read.getter(_QWORD *a1@<X8>)
{
  *a1 = 2;
}

void static Characteristic.Properties.writeWithoutResponse.getter(_QWORD *a1@<X8>)
{
  *a1 = 4;
}

void static Characteristic.Properties.write.getter(_QWORD *a1@<X8>)
{
  *a1 = 8;
}

void static Characteristic.Properties.notify.getter(_QWORD *a1@<X8>)
{
  *a1 = 16;
}

void static Characteristic.Properties.indicate.getter(_QWORD *a1@<X8>)
{
  *a1 = 32;
}

void static Characteristic.Properties.authenticatedSignedWrites.getter(_QWORD *a1@<X8>)
{
  *a1 = 64;
}

void static Characteristic.Properties.extendedProperties.getter(_QWORD *a1@<X8>)
{
  *a1 = 128;
}

void static Characteristic.Properties.notifyEncryptionRequired.getter(_QWORD *a1@<X8>)
{
  *a1 = 256;
}

void static Characteristic.Properties.indicateEncryptionRequired.getter(_QWORD *a1@<X8>)
{
  *a1 = 512;
}

uint64_t sub_23B58487C@<X0>(uint64_t result@<X0>, uint64_t *a2@<X8>)
{
  *a2 = result & 0x3FF;
  return result;
}

uint64_t Characteristic.Properties.description.getter()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  unint64_t v3;
  unint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;

  v1 = *v0;
  if ((*v0 & 1) == 0)
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4AF8];
    if ((v1 & 2) == 0)
      goto LABEL_12;
    goto LABEL_7;
  }
  v2 = sub_23B58548C(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v4 = v2[2];
  v3 = v2[3];
  if (v4 >= v3 >> 1)
    v2 = sub_23B58548C((_QWORD *)(v3 > 1), v4 + 1, 1, v2);
  v2[2] = v4 + 1;
  v5 = &v2[2 * v4];
  v5[4] = 0x616364616F72622ELL;
  v5[5] = 0xEA00000000007473;
  if ((v1 & 2) != 0)
  {
LABEL_7:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v2 = sub_23B58548C(0, v2[2] + 1, 1, v2);
    v7 = v2[2];
    v6 = v2[3];
    if (v7 >= v6 >> 1)
      v2 = sub_23B58548C((_QWORD *)(v6 > 1), v7 + 1, 1, v2);
    v2[2] = v7 + 1;
    v8 = &v2[2 * v7];
    v8[4] = 0x646165722ELL;
    v8[5] = 0xE500000000000000;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v2 = sub_23B58548C(0, v2[2] + 1, 1, v2);
    v10 = v2[2];
    v9 = v2[3];
    if (v10 >= v9 >> 1)
      v2 = sub_23B58548C((_QWORD *)(v9 > 1), v10 + 1, 1, v2);
    v2[2] = v10 + 1;
    v11 = &v2[2 * v10];
    v11[4] = 0xD000000000000015;
    v11[5] = 0x800000023B603D80;
    if ((v1 & 8) == 0)
    {
LABEL_14:
      if ((v1 & 0x10) == 0)
        goto LABEL_15;
      goto LABEL_31;
    }
  }
  else if ((v1 & 8) == 0)
  {
    goto LABEL_14;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_23B58548C(0, v2[2] + 1, 1, v2);
  v13 = v2[2];
  v12 = v2[3];
  if (v13 >= v12 >> 1)
    v2 = sub_23B58548C((_QWORD *)(v12 > 1), v13 + 1, 1, v2);
  v2[2] = v13 + 1;
  v14 = &v2[2 * v13];
  v14[4] = 0x65746972772ELL;
  v14[5] = 0xE600000000000000;
  if ((v1 & 0x10) == 0)
  {
LABEL_15:
    if ((v1 & 0x20) == 0)
      goto LABEL_16;
    goto LABEL_36;
  }
LABEL_31:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_23B58548C(0, v2[2] + 1, 1, v2);
  v16 = v2[2];
  v15 = v2[3];
  if (v16 >= v15 >> 1)
    v2 = sub_23B58548C((_QWORD *)(v15 > 1), v16 + 1, 1, v2);
  v2[2] = v16 + 1;
  v17 = &v2[2 * v16];
  v17[4] = 0x796669746F6E2ELL;
  v17[5] = 0xE700000000000000;
  if ((v1 & 0x20) == 0)
  {
LABEL_16:
    if ((v1 & 0x40) == 0)
      goto LABEL_17;
    goto LABEL_41;
  }
LABEL_36:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_23B58548C(0, v2[2] + 1, 1, v2);
  v19 = v2[2];
  v18 = v2[3];
  if (v19 >= v18 >> 1)
    v2 = sub_23B58548C((_QWORD *)(v18 > 1), v19 + 1, 1, v2);
  v2[2] = v19 + 1;
  v20 = &v2[2 * v19];
  v20[4] = 0x74616369646E692ELL;
  v20[5] = 0xE900000000000065;
  if ((v1 & 0x40) == 0)
  {
LABEL_17:
    if ((v1 & 0x80) == 0)
      goto LABEL_18;
    goto LABEL_46;
  }
LABEL_41:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_23B58548C(0, v2[2] + 1, 1, v2);
  v22 = v2[2];
  v21 = v2[3];
  if (v22 >= v21 >> 1)
    v2 = sub_23B58548C((_QWORD *)(v21 > 1), v22 + 1, 1, v2);
  v2[2] = v22 + 1;
  v23 = &v2[2 * v22];
  v23[4] = 0xD00000000000001ALL;
  v23[5] = 0x800000023B603D60;
  if ((v1 & 0x80) == 0)
  {
LABEL_18:
    if ((v1 & 0x100) == 0)
      goto LABEL_19;
    goto LABEL_51;
  }
LABEL_46:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_23B58548C(0, v2[2] + 1, 1, v2);
  v25 = v2[2];
  v24 = v2[3];
  if (v25 >= v24 >> 1)
    v2 = sub_23B58548C((_QWORD *)(v24 > 1), v25 + 1, 1, v2);
  v2[2] = v25 + 1;
  v26 = &v2[2 * v25];
  v26[4] = 0xD000000000000013;
  v26[5] = 0x800000023B603D40;
  if ((v1 & 0x100) == 0)
  {
LABEL_19:
    if ((v1 & 0x200) == 0)
      goto LABEL_61;
    goto LABEL_56;
  }
LABEL_51:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_23B58548C(0, v2[2] + 1, 1, v2);
  v28 = v2[2];
  v27 = v2[3];
  if (v28 >= v27 >> 1)
    v2 = sub_23B58548C((_QWORD *)(v27 > 1), v28 + 1, 1, v2);
  v2[2] = v28 + 1;
  v29 = &v2[2 * v28];
  v29[4] = 0xD000000000000019;
  v29[5] = 0x800000023B603D20;
  if ((v1 & 0x200) != 0)
  {
LABEL_56:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v2 = sub_23B58548C(0, v2[2] + 1, 1, v2);
    v31 = v2[2];
    v30 = v2[3];
    if (v31 >= v30 >> 1)
      v2 = sub_23B58548C((_QWORD *)(v30 > 1), v31 + 1, 1, v2);
    v2[2] = v31 + 1;
    v32 = &v2[2 * v31];
    v32[4] = 0xD00000000000001BLL;
    v32[5] = 0x800000023B603D00;
  }
LABEL_61:
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A340F0);
  sub_23B58500C();
  sub_23B6018E0();
  swift_bridgeObjectRelease();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  return 91;
}

_QWORD *sub_23B584E58@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

BOOL sub_23B584E64(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

void sub_23B584E7C(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

_QWORD *sub_23B584E84@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_23B584E98@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_QWORD *sub_23B584EAC@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_23B584EC0(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_23B584EF0@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_23B584F1C@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_23B584F40(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_23B584F54(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

_QWORD *sub_23B584F68(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_23B584F7C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_23B584F90(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_23B584FA4(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_23B584FB8(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x23B868960]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

unint64_t sub_23B58500C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A340F8;
  if (!qword_256A340F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A340F0);
    result = MEMORY[0x23B868978](MEMORY[0x24BEE12B0], v1);
    atomic_store(result, (unint64_t *)&qword_256A340F8);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x23B86896C](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

BOOL sub_23B58509C()
{
  _QWORD *v0;

  return *v0 == 0;
}

uint64_t sub_23B5850AC()
{
  return sub_23B601BE0();
}

_QWORD *sub_23B5850C4(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

_QWORD *sub_23B5850D8@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_23B5850E8(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_23B5850F8(uint64_t a1, uint64_t a2)
{
  return sub_23B585240(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF9E0]);
}

uint64_t sub_23B585104(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_23B601904();
  *a2 = 0;
  return result;
}

uint64_t sub_23B585178(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_23B601910();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_23B5851F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_23B60191C();
  v2 = sub_23B6018F8();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_23B585234(uint64_t a1, uint64_t a2)
{
  return sub_23B585240(a1, a2, MEMORY[0x24BEE0CD8]);
}

uint64_t sub_23B585240(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_23B60191C();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_23B58527C()
{
  sub_23B60191C();
  sub_23B60194C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23B5852BC()
{
  uint64_t v0;

  sub_23B60191C();
  sub_23B601E8C();
  sub_23B60194C();
  v0 = sub_23B601EB0();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_23B58532C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_23B60191C();
  v2 = v1;
  if (v0 == sub_23B60191C() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_23B601DFC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_23B5853B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_23B6018F8();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_23B5853F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_23B60191C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_23B585420()
{
  sub_23B585738(&qword_2542FD5F8, (uint64_t)&unk_23B6075FC);
  sub_23B585738((unint64_t *)&unk_256A34140, (uint64_t)&unk_23B6075A4);
  return sub_23B601D60();
}

_QWORD *sub_23B58548C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A341F8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_23B585D0C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

unint64_t sub_23B58559C()
{
  unint64_t result;

  result = qword_256A34100;
  if (!qword_256A34100)
  {
    result = MEMORY[0x23B868978](&protocol conformance descriptor for Characteristic.Properties, &type metadata for Characteristic.Properties);
    atomic_store(result, (unint64_t *)&qword_256A34100);
  }
  return result;
}

unint64_t sub_23B5855E4()
{
  unint64_t result;

  result = qword_256A34108;
  if (!qword_256A34108)
  {
    result = MEMORY[0x23B868978](&protocol conformance descriptor for Characteristic.Properties, &type metadata for Characteristic.Properties);
    atomic_store(result, (unint64_t *)&qword_256A34108);
  }
  return result;
}

unint64_t sub_23B58562C()
{
  unint64_t result;

  result = qword_256A34110;
  if (!qword_256A34110)
  {
    result = MEMORY[0x23B868978](&protocol conformance descriptor for Characteristic.Properties, &type metadata for Characteristic.Properties);
    atomic_store(result, (unint64_t *)&qword_256A34110);
  }
  return result;
}

unint64_t sub_23B585674()
{
  unint64_t result;

  result = qword_256A34118;
  if (!qword_256A34118)
  {
    result = MEMORY[0x23B868978](&protocol conformance descriptor for Characteristic.Properties, &type metadata for Characteristic.Properties);
    atomic_store(result, (unint64_t *)&qword_256A34118);
  }
  return result;
}

ValueMetadata *type metadata accessor for Characteristic.Properties()
{
  return &type metadata for Characteristic.Properties;
}

void type metadata accessor for CBManagerState(uint64_t a1)
{
  sub_23B586220(a1, (unint64_t *)&unk_256A34120);
}

void type metadata accessor for CBConnectionEventMatchingOption(uint64_t a1)
{
  sub_23B586220(a1, &qword_2542FD608);
}

uint64_t sub_23B5856F0()
{
  return sub_23B585738(&qword_256A34130, (uint64_t)&unk_23B60756C);
}

uint64_t sub_23B585714()
{
  return sub_23B585738(&qword_256A34138, (uint64_t)&unk_23B607544);
}

uint64_t sub_23B585738(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    type metadata accessor for CBConnectionEventMatchingOption(255);
    result = MEMORY[0x23B868978](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23B585778()
{
  return sub_23B585738(&qword_2542FD600, (uint64_t)&unk_23B6075D4);
}

uint64_t sub_23B58579C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23B5857C4(a1, a2, a3, a4, (uint64_t *)&unk_256A341E0, (uint64_t *)&unk_2542FD1E8);
}

uint64_t sub_23B5857B0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23B5857C4(a1, a2, a3, a4, (uint64_t *)&unk_256A341D0, (uint64_t *)&unk_2542FD1F8);
}

uint64_t sub_23B5857C4(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_23B601D0C();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_23B585FF0(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

_QWORD *sub_23B5859D0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_256A34BA0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4])
          memmove(v12, a4 + 4, 48 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_23B585EE0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_23B585AF4(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A341F0);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * v11 - 64;
      v12 = v10 + 32;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32])
          memmove(v12, a4 + 32, v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (char *)MEMORY[0x24BEE4AF8];
      v12 = (char *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_23B585DFC(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_23B585BEC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23B5857C4(a1, a2, a3, a4, (uint64_t *)&unk_256A34160, (uint64_t *)&unk_256A35CF0);
}

_QWORD *sub_23B585C00(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A34158);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_23B586108(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_23B585D0C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_23B601D54();
  __break(1u);
  return result;
}

char *sub_23B585DFC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  result = (char *)sub_23B601D54();
  __break(1u);
  return result;
}

uint64_t sub_23B585EE0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 48 * a1 + 32;
    v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A34150);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_23B601D54();
  __break(1u);
  return result;
}

uint64_t sub_23B585FF0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a5) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_23B601D54();
  __break(1u);
  return result;
}

uint64_t sub_23B586108(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_23B601D54();
  __break(1u);
  return result;
}

void type metadata accessor for CBPairingType(uint64_t a1)
{
  sub_23B586220(a1, &qword_256A34200);
}

void type metadata accessor for CBConnectionEvent(uint64_t a1)
{
  sub_23B586220(a1, &qword_256A34208);
}

void sub_23B586220(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t MockCBDiscovery.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC15FindMyBluetooth15MockCBDiscovery_id;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34270);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MockCBDiscovery.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  sub_23B601820();
  swift_task_alloc();
  v1 = swift_allocObject();
  swift_defaultActor_initialize();
  sub_23B601814();
  type metadata accessor for CBDiscovery(0);
  sub_23B6015D4();
  v2 = v1 + OBJC_IVAR____TtC15FindMyBluetooth15MockCBDiscovery_scanContinuation;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34288);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  v4 = (_QWORD *)(v1 + OBJC_IVAR____TtC15FindMyBluetooth15MockCBDiscovery_mockScanResponder);
  *v4 = 0;
  v4[1] = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15FindMyBluetooth15MockCBDiscovery_scanTask) = 0;
  swift_task_dealloc();
  return sub_23B586498(*(uint64_t (**)(uint64_t))(v0 + 8), v0, v1);
}

uint64_t MockCBDiscovery.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  sub_23B601820();
  swift_task_alloc();
  swift_defaultActor_initialize();
  sub_23B601814();
  type metadata accessor for CBDiscovery(0);
  sub_23B6015D4();
  v2 = v0 + OBJC_IVAR____TtC15FindMyBluetooth15MockCBDiscovery_scanContinuation;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34288);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  v4 = (_QWORD *)(v0 + OBJC_IVAR____TtC15FindMyBluetooth15MockCBDiscovery_mockScanResponder);
  *v4 = 0;
  v4[1] = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC15FindMyBluetooth15MockCBDiscovery_scanTask) = 0;
  swift_task_dealloc();
  return sub_23B586498(*(uint64_t (**)(uint64_t))(v1 + 8), v1, v0);
}

uint64_t sub_23B586498(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

uint64_t sub_23B5864A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v2 + OBJC_IVAR____TtC15FindMyBluetooth15MockCBDiscovery_mockScanResponder);
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC15FindMyBluetooth15MockCBDiscovery_mockScanResponder);
  *v3 = a1;
  v3[1] = a2;
  swift_retain();
  return sub_23B5864E4(v4);
}

uint64_t sub_23B5864E4(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_23B5864F4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[5] = a1;
  v2[6] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A342B0);
  v2[7] = v3;
  v2[8] = *(_QWORD *)(v3 - 8);
  v2[9] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A342B8);
  v2[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B58657C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 48) + OBJC_IVAR____TtC15FindMyBluetooth15MockCBDiscovery_scanContinuation;
  swift_beginAccess();
  sub_23B5866E4(v2, v1);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34288);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v1, 1, v3);
  sub_23B587ED4(v1, &qword_256A342B8);
  v5 = *(_QWORD *)(v0 + 72);
  if (v4 == 1)
  {
    v6 = *(_QWORD *)(v0 + 56);
    v7 = *(_QWORD *)(v0 + 64);
    type metadata accessor for DeviceChange(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 104))(v5, *MEMORY[0x24BEE6CA0], v6);
    sub_23B601B44();
  }
  else
  {
    sub_23B586900();
    swift_allocError();
    *v8 = 1;
    swift_willThrow();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5866E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A342B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23B58672C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD530);
  MEMORY[0x24BDAC7A8]();
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A342B8);
  MEMORY[0x24BDAC7A8]();
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34288);
  v9 = *(_QWORD *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v7, a1, v8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  v10 = a2 + OBJC_IVAR____TtC15FindMyBluetooth15MockCBDiscovery_scanContinuation;
  swift_beginAccess();
  sub_23B587CB4((uint64_t)v7, v10);
  swift_endAccess();
  swift_retain();
  sub_23B601B08();
  v11 = sub_23B601A78();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v5, 1, 1, v11);
  v12 = sub_23B58792C(&qword_256A342E0, (uint64_t)&protocol conformance descriptor for MockCBDiscovery);
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = a2;
  v13[3] = v12;
  v13[4] = a2;
  swift_retain_n();
  *(_QWORD *)(a2 + OBJC_IVAR____TtC15FindMyBluetooth15MockCBDiscovery_scanTask) = sub_23B5CD39C((uint64_t)v5, (uint64_t)&unk_256A34448, (uint64_t)v13);
  return swift_release();
}

uint64_t sub_23B5868F8(uint64_t a1)
{
  uint64_t v1;

  return sub_23B58672C(a1, v1);
}

unint64_t sub_23B586900()
{
  unint64_t result;

  result = qword_256A342C0;
  if (!qword_256A342C0)
  {
    result = MEMORY[0x23B868978](&protocol conformance descriptor for CBDiscovery.Error, &type metadata for CBDiscovery.Error);
    atomic_store(result, (unint64_t *)&qword_256A342C0);
  }
  return result;
}

uint64_t sub_23B586944(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[4];

  __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD530);
  MEMORY[0x24BDAC7A8]();
  v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23B601A78();
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = a2;
  v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  swift_retain();
  if (v8 == 1)
  {
    sub_23B587ED4((uint64_t)v4, &qword_2542FD530);
    v9 = 0;
    v10 = 0;
  }
  else
  {
    sub_23B601A6C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    if (v7[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v9 = sub_23B601A18();
      v10 = v11;
      swift_unknownObjectRelease();
    }
    else
    {
      v9 = 0;
      v10 = 0;
    }
  }
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = &unk_256A34480;
  *(_QWORD *)(v12 + 24) = v7;
  if (v10 | v9)
  {
    v14[0] = 0;
    v14[1] = 0;
    v14[2] = v9;
    v14[3] = v10;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_23B586B18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 40) = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A342B8);
  *(_QWORD *)(v4 + 48) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B586B78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(v0 + 40);
  v1 = *(_QWORD *)(v0 + 48);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34288);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v1, 1, 1, v3);
  v4 = v2 + OBJC_IVAR____TtC15FindMyBluetooth15MockCBDiscovery_scanContinuation;
  swift_beginAccess();
  sub_23B587CB4(v1, v4);
  swift_endAccess();
  v5 = OBJC_IVAR____TtC15FindMyBluetooth15MockCBDiscovery_scanTask;
  if (*(_QWORD *)(v2 + OBJC_IVAR____TtC15FindMyBluetooth15MockCBDiscovery_scanTask))
  {
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A34490);
    sub_23B601ACC();
    swift_release();
  }
  *(_QWORD *)(v2 + v5) = 0;
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B586C78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[11] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34288);
  v4[12] = v5;
  v4[13] = *(_QWORD *)(v5 - 8);
  v4[14] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A34450);
  v4[15] = swift_task_alloc();
  v6 = type metadata accessor for DeviceChange(0);
  v4[16] = v6;
  v4[17] = *(_QWORD *)(v6 - 8);
  v4[18] = swift_task_alloc();
  v4[19] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A342B8);
  v4[20] = swift_task_alloc();
  v4[21] = swift_task_alloc();
  v4[22] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A34458);
  v4[23] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34460);
  v4[24] = v7;
  v4[25] = *(_QWORD *)(v7 - 8);
  v4[26] = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34468);
  v4[27] = v8;
  v4[28] = *(_QWORD *)(v8 - 8);
  v4[29] = swift_task_alloc();
  return swift_task_switch();
}

void sub_23B586DF8()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  void (*v4)(_QWORD);

  v1 = v0[11] + OBJC_IVAR____TtC15FindMyBluetooth15MockCBDiscovery_mockScanResponder;
  v2 = *(int **)v1;
  v0[30] = *(_QWORD *)v1;
  if (v2)
  {
    v0[31] = *(_QWORD *)(v1 + 8);
    v4 = (void (*)(_QWORD))((char *)v2 + *v2);
    swift_retain();
    v3 = (_QWORD *)swift_task_alloc();
    v0[32] = v3;
    *v3 = v0;
    v3[1] = sub_23B586E88;
    v4(v0[26]);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_23B586E88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 240);
  *(_QWORD *)(*(_QWORD *)v1 + 264) = v0;
  swift_task_dealloc();
  sub_23B5864E4(v2);
  return swift_task_switch();
}

uint64_t sub_23B586F04()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = v0[25];
  v1 = v0[26];
  v3 = v0[24];
  sub_23B601AA8();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = sub_23B58792C(&qword_256A342E0, (uint64_t)&protocol conformance descriptor for MockCBDiscovery);
  v5 = OBJC_IVAR____TtC15FindMyBluetooth15MockCBDiscovery_scanContinuation;
  v0[34] = v4;
  v0[35] = v5;
  swift_beginAccess();
  v6 = (_QWORD *)swift_task_alloc();
  v0[36] = v6;
  *v6 = v0;
  v6[1] = sub_23B586FE0;
  return sub_23B601B38();
}

uint64_t sub_23B586FE0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B587044()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;

  v1 = *(_QWORD *)(v0 + 184);
  v2 = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 136) + 48))(v1, 1, *(_QWORD *)(v0 + 128));
  v3 = *(_QWORD *)(v0 + 280);
  if (v2 == 1)
  {
    v4 = *(_QWORD *)(v0 + 176);
    v5 = *(_QWORD *)(v0 + 96);
    v6 = *(_QWORD *)(v0 + 104);
    v7 = *(_QWORD *)(v0 + 88) + v3;
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 224) + 8))(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 216));
    sub_23B5866E4(v7, v4);
    v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
    v9 = *(_QWORD *)(v0 + 176);
    if (v8)
    {
      sub_23B587ED4(*(_QWORD *)(v0 + 176), &qword_256A342B8);
    }
    else
    {
      v20 = *(_QWORD *)(v0 + 104);
      v19 = *(_QWORD *)(v0 + 112);
      v21 = *(_QWORD *)(v0 + 96);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v20 + 16))(v19, *(_QWORD *)(v0 + 176), v21);
      sub_23B587ED4(v9, &qword_256A342B8);
      *(_QWORD *)(v0 + 80) = 0;
      sub_23B601B20();
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v10 = *(_QWORD *)(v0 + 168);
    v11 = *(_QWORD *)(v0 + 96);
    v12 = *(_QWORD *)(v0 + 104);
    v13 = *(_QWORD *)(v0 + 88) + v3;
    sub_23B587D74(v1, *(_QWORD *)(v0 + 152));
    sub_23B5866E4(v13, v10);
    v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11);
    v15 = *(_QWORD *)(v0 + 168);
    v16 = *(_QWORD *)(v0 + 152);
    if (v14)
    {
      v17 = *(_QWORD *)(v0 + 120);
      sub_23B587DB8(*(_QWORD *)(v0 + 152));
      sub_23B587ED4(v15, &qword_256A342B8);
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34470);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
    }
    else
    {
      v23 = *(_QWORD *)(v0 + 144);
      v25 = *(_QWORD *)(v0 + 112);
      v24 = *(_QWORD *)(v0 + 120);
      v26 = *(_QWORD *)(v0 + 96);
      v27 = *(_QWORD *)(v0 + 104);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v27 + 16))(v25, *(_QWORD *)(v0 + 168), v26);
      sub_23B587ED4(v15, &qword_256A342B8);
      sub_23B587DF4(v16, v23);
      sub_23B601B14();
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, v26);
      sub_23B587DB8(v16);
      v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34470);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v24, 0, 1, v28);
    }
    sub_23B587ED4(*(_QWORD *)(v0 + 120), &qword_256A34450);
    v29 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 296) = v29;
    *v29 = v0;
    v29[1] = sub_23B58735C;
    return sub_23B601B38();
  }
}

uint64_t sub_23B58735C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B5873C0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(void **)(v0 + 264);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 88) + OBJC_IVAR____TtC15FindMyBluetooth15MockCBDiscovery_scanContinuation;
  swift_beginAccess();
  sub_23B5866E4(v5, v2);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3))
  {
    v6 = *(_QWORD *)(v0 + 160);

    sub_23B587ED4(v6, &qword_256A342B8);
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 160);
    v9 = *(_QWORD *)(v0 + 104);
    v8 = *(_QWORD *)(v0 + 112);
    v10 = *(_QWORD *)(v0 + 96);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v8, v7, v10);
    sub_23B587ED4(v7, &qword_256A342B8);
    *(_QWORD *)(v0 + 64) = v1;
    sub_23B601B20();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B587538()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 224) + 8))(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 216));
  v1 = *(void **)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 88) + OBJC_IVAR____TtC15FindMyBluetooth15MockCBDiscovery_scanContinuation;
  swift_beginAccess();
  sub_23B5866E4(v5, v2);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3))
  {
    v6 = *(_QWORD *)(v0 + 160);

    sub_23B587ED4(v6, &qword_256A342B8);
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 160);
    v9 = *(_QWORD *)(v0 + 104);
    v8 = *(_QWORD *)(v0 + 112);
    v10 = *(_QWORD *)(v0 + 96);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v8, v7, v10);
    sub_23B587ED4(v7, &qword_256A342B8);
    *(_QWORD *)(v0 + 64) = v1;
    sub_23B601B20();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t MockCBDiscovery.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC15FindMyBluetooth15MockCBDiscovery_id;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34270);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_23B587ED4(v0 + OBJC_IVAR____TtC15FindMyBluetooth15MockCBDiscovery_scanContinuation, &qword_256A342B8);
  sub_23B5864E4(*(_QWORD *)(v0 + OBJC_IVAR____TtC15FindMyBluetooth15MockCBDiscovery_mockScanResponder));
  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t MockCBDiscovery.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC15FindMyBluetooth15MockCBDiscovery_id;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34270);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_23B587ED4(v0 + OBJC_IVAR____TtC15FindMyBluetooth15MockCBDiscovery_scanContinuation, &qword_256A342B8);
  sub_23B5864E4(*(_QWORD *)(v0 + OBJC_IVAR____TtC15FindMyBluetooth15MockCBDiscovery_mockScanResponder));
  swift_release();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t MockCBDiscovery.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23B5877E8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23B5877F4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23B587844;
  return sub_23B5864F4(a1);
}

uint64_t sub_23B587844()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23B58788C(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_23B58792C(&qword_256A342D0, (uint64_t)&protocol conformance descriptor for MockCBDiscovery);
  a1[2] = sub_23B58792C(&qword_256A342D8, (uint64_t)&protocol conformance descriptor for MockCBDiscovery);
  result = sub_23B58792C(&qword_256A342E0, (uint64_t)&protocol conformance descriptor for MockCBDiscovery);
  a1[3] = result;
  return result;
}

uint64_t type metadata accessor for MockCBDiscovery()
{
  uint64_t result;

  result = qword_256A34318;
  if (!qword_256A34318)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23B58792C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for MockCBDiscovery();
    result = MEMORY[0x23B868978](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23B587970()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A342E8;
  if (!qword_256A342E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A34270);
    result = MEMORY[0x23B868978](MEMORY[0x24BE316D0], v1);
    atomic_store(result, (unint64_t *)&qword_256A342E8);
  }
  return result;
}

uint64_t sub_23B5879BC@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC15FindMyBluetooth15MockCBDiscovery_id;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34270);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_23B587A08()
{
  return sub_23B5EC2A8();
}

uint64_t sub_23B587A28()
{
  return type metadata accessor for MockCBDiscovery();
}

void sub_23B587A30()
{
  unint64_t v0;
  unint64_t v1;

  sub_23B587C08();
  if (v0 <= 0x3F)
  {
    sub_23B587C5C();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for MockCBDiscovery()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MockCBDiscovery.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(v0 + 192) + *(_QWORD *)(v0 + 192));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_23B587B38;
  return v4();
}

uint64_t sub_23B587B38(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t dispatch thunk of MockCBDiscovery.setMockScanResponder(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of MockCBDiscovery.scan(config:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 208) + *(_QWORD *)(*(_QWORD *)v2 + 208));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_23B587844;
  return v8(a1, a2);
}

void sub_23B587C08()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256A34338)
  {
    type metadata accessor for CBDiscovery(255);
    v0 = sub_23B6015C8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256A34338);
  }
}

void sub_23B587C5C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256A34340)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A34288);
    v0 = sub_23B601BBC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256A34340);
  }
}

uint64_t sub_23B587CB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A342B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_23B587CFC(uint64_t a1)
{
  uint64_t v1;

  return sub_23B586944(a1, v1);
}

uint64_t sub_23B587D08(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23B587FA4;
  return sub_23B586C78(a1, v4, v5, v6);
}

uint64_t sub_23B587D74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DeviceChange(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23B587DB8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DeviceChange(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23B587DF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DeviceChange(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t objectdestroyTm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B587E68(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23B587844;
  return sub_23B586B18(a1, v4, v5, v6);
}

uint64_t sub_23B587ED4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_23B587F10()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B587F34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23B587FA4;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_256A371D0 + dword_256A371D0))(a1, v4);
}

uint64_t ServiceUUID.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23B601820();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t ServiceUUID.init(uuid:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_23B601820();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

uint64_t ServiceUUID.init(stringLiteral:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD228);
  MEMORY[0x24BDAC7A8]();
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B6017CC();
  swift_bridgeObjectRelease();
  v4 = sub_23B601820();
  v5 = *(_QWORD *)(v4 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(a1, v3, v4);
  __break(1u);
  return result;
}

uint64_t ServiceUUID.hash(into:)()
{
  sub_23B601820();
  sub_23B5884D4(&qword_2542FD220, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  return sub_23B6018D4();
}

uint64_t ServiceUUID.hashValue.getter()
{
  sub_23B601E8C();
  sub_23B601820();
  sub_23B5884D4(&qword_2542FD220, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23B6018D4();
  return sub_23B601EB0();
}

uint64_t sub_23B5881AC()
{
  sub_23B601E8C();
  sub_23B601820();
  sub_23B5884D4(&qword_2542FD220, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23B6018D4();
  return sub_23B601EB0();
}

uint64_t sub_23B588218()
{
  sub_23B601820();
  sub_23B5884D4(&qword_2542FD220, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  return sub_23B6018D4();
}

uint64_t sub_23B588270()
{
  sub_23B601E8C();
  sub_23B601820();
  sub_23B5884D4(&qword_2542FD220, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23B6018D4();
  return sub_23B601EB0();
}

uint64_t sub_23B5882DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD228);
  MEMORY[0x24BDAC7A8]();
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B6017CC();
  swift_bridgeObjectRelease();
  v4 = sub_23B601820();
  v5 = *(_QWORD *)(v4 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(a1, v3, v4);
  __break(1u);
  return result;
}

uint64_t ServiceUUID.description.getter()
{
  _QWORD v1[2];

  strcpy((char *)v1, "ServiceUUID(");
  sub_23B6017D8();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  return v1[0];
}

uint64_t sub_23B588408()
{
  return sub_23B5884D4(&qword_256A34498, (uint64_t (*)(uint64_t))type metadata accessor for ServiceUUID, (uint64_t)&protocol conformance descriptor for ServiceUUID);
}

uint64_t type metadata accessor for ServiceUUID()
{
  uint64_t result;

  result = qword_256A34508;
  if (!qword_256A34508)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23B588470()
{
  return MEMORY[0x24BEE0D80];
}

uint64_t sub_23B58847C()
{
  return sub_23B5884D4(&qword_256A344A0, (uint64_t (*)(uint64_t))type metadata accessor for ServiceUUID, (uint64_t)&protocol conformance descriptor for ServiceUUID);
}

uint64_t sub_23B5884A8()
{
  return sub_23B5884D4(&qword_256A344A8, (uint64_t (*)(uint64_t))type metadata accessor for ServiceUUID, (uint64_t)&protocol conformance descriptor for ServiceUUID);
}

uint64_t sub_23B5884D4(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x23B868978](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23B588514()
{
  return MEMORY[0x24BEE0D90];
}

uint64_t sub_23B588520()
{
  return MEMORY[0x24BEE0D88];
}

uint64_t sub_23B58852C()
{
  _QWORD v1[2];

  strcpy((char *)v1, "ServiceUUID(");
  sub_23B6017D8();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  return v1[0];
}

uint64_t initializeBufferWithCopyOfBuffer for ServiceUUID(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23B601820();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for ServiceUUID(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23B601820();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for ServiceUUID(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23B601820();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for ServiceUUID(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23B601820();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for ServiceUUID(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23B601820();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for ServiceUUID(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23B601820();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for ServiceUUID()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23B588724(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23B601820();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for ServiceUUID()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23B58876C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23B601820();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_23B5887AC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23B601820();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of CharacteristicIdentifier.id.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ServiceIdentifier.id.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_23B588824()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_23B60185C();
  __swift_allocate_value_buffer(v0, qword_256A34540);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_256A34540);
  if (qword_2542FD4A0 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_2542FD480);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t Service.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC15FindMyBluetooth7Service_id;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1F8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

id sub_23B5888FC()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15FindMyBluetooth7Service_underlyingObject), sel_isPrimary);
}

uint64_t sub_23B588924(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v4 = v2;
  v3[4] = a2;
  v3[5] = v4;
  v3[3] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A34AE0);
  v28 = swift_task_alloc();
  v3[6] = v28;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A34678);
  v27 = swift_task_alloc();
  v3[7] = v27;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  v24 = *(_QWORD *)(v26 - 8);
  v23 = swift_task_alloc();
  v3[8] = v23;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD1E0);
  v21 = *(_QWORD *)(v7 - 8);
  v22 = v7;
  v20 = swift_task_alloc();
  v3[9] = v20;
  type metadata accessor for PeerPath();
  v25 = swift_task_alloc();
  v3[10] = v25;
  sub_23B601820();
  v3[11] = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1F8);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = swift_task_alloc();
  v3[12] = v10;
  swift_defaultActor_initialize();
  swift_weakInit();
  v11 = v4 + OBJC_IVAR____TtC15FindMyBluetooth7Service_discoverCharacteristicsContinuation;
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD510);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC15FindMyBluetooth7Service_characteristics) = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v4 + OBJC_IVAR____TtC15FindMyBluetooth7Service_autoDiscoverCount) = 0;
  v13 = *(void **)(a2 + 16);
  v3[13] = v13;
  v14 = v13;
  v15 = objc_msgSend(v14, sel_UUID);
  CBUUID.uuidValue.getter();

  type metadata accessor for Service();
  sub_23B6015D4();
  v16 = v4 + OBJC_IVAR____TtC15FindMyBluetooth7Service_id;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v4 + OBJC_IVAR____TtC15FindMyBluetooth7Service_id, v10, v8);
  swift_weakAssign();
  *(_QWORD *)(v4 + OBJC_IVAR____TtC15FindMyBluetooth7Service_underlyingObject) = v14;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v20, a1 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_peerPath, v22);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v23, a1 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_id, v26);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v27, v16, v8);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(v27, 0, 1, v8);
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v28, 1, 1, v17);
  v18 = v14;
  sub_23B5C9F08(v20, v23, v27, v28, v25);
  sub_23B58F5D8(v25, v4 + OBJC_IVAR____TtC15FindMyBluetooth7Service_peerPath);
  return swift_task_switch();
}

uint64_t sub_23B588C7C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  void *v10;
  uint64_t v11;

  if (qword_256A340A0 != -1)
    swift_once();
  v1 = sub_23B60185C();
  __swift_project_value_buffer(v1, (uint64_t)qword_256A34540);
  swift_retain_n();
  v2 = sub_23B601844();
  v3 = sub_23B601B68();
  if (os_log_type_enabled(v2, v3))
  {
    v10 = *(void **)(v0 + 104);
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v11 = v5;
    *(_DWORD *)v4 = 136315138;
    swift_retain();
    v6 = sub_23B58D07C((uint64_t (*)(uint64_t))type metadata accessor for Service, (unint64_t *)&unk_256A34600, (uint64_t)&protocol conformance descriptor for Service);
    v8 = v7;
    swift_release();
    *(_QWORD *)(v0 + 16) = sub_23B58E160(v6, v8, &v11);
    sub_23B601BC8();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_23B583000, v2, v3, "%s init", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v5, -1, -1);
    MEMORY[0x23B868A2C](v4, -1, -1);
    swift_release();
    swift_release();

  }
  else
  {

    swift_release_n();
    swift_release();
    swift_release();

  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 40));
}

uint64_t Service.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = v0;
  if (qword_256A340A0 != -1)
    swift_once();
  v2 = sub_23B60185C();
  __swift_project_value_buffer(v2, (uint64_t)qword_256A34540);
  swift_retain_n();
  v3 = sub_23B601844();
  v4 = sub_23B601B68();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v13 = v6;
    *(_DWORD *)v5 = 136315138;
    swift_retain();
    v7 = sub_23B58D07C((uint64_t (*)(uint64_t))type metadata accessor for Service, (unint64_t *)&unk_256A34600, (uint64_t)&protocol conformance descriptor for Service);
    v9 = v8;
    swift_release();
    sub_23B58E160(v7, v9, &v13);
    sub_23B601BC8();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_23B583000, v3, v4, "%s deinit", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v6, -1, -1);
    MEMORY[0x23B868A2C](v5, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  v10 = v1 + OBJC_IVAR____TtC15FindMyBluetooth7Service_id;
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1F8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  sub_23B589184(v1 + OBJC_IVAR____TtC15FindMyBluetooth7Service_peerPath);
  swift_weakDestroy();
  sub_23B587ED4(v1 + OBJC_IVAR____TtC15FindMyBluetooth7Service_discoverCharacteristicsContinuation, (uint64_t *)&unk_256A35810);

  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v1;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t sub_23B589184(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PeerPath();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t Service.__deallocating_deinit()
{
  Service.deinit();
  return swift_defaultActor_deallocate();
}

uint64_t sub_23B5891D8(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;

  v2[6] = a1;
  v2[7] = v1;
  v2[8] = *v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35810);
  v2[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B58923C()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 80) = Strong;
  if (Strong)
  {
    v2 = *(_QWORD *)(v0 + 72);
    v3 = *(_QWORD *)(v0 + 56) + OBJC_IVAR____TtC15FindMyBluetooth7Service_discoverCharacteristicsContinuation;
    swift_beginAccess();
    sub_23B58E7A0(v3, v2);
    v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD510);
    LODWORD(v3) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v2, 1, v4);
    sub_23B587ED4(v2, (uint64_t *)&unk_256A35810);
    if ((_DWORD)v3 == 1)
      return swift_task_switch();
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_release();
  }
  else
  {
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5893E4()
{
  uint64_t v0;

  objc_msgSend(*(id *)(*(_QWORD *)(v0 + 80) + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_underlyingObject), sel_state);
  return swift_task_switch();
}

uint64_t sub_23B589498()
{
  uint64_t v0;

  type metadata accessor for CentralManager.Error();
  sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
  swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B589540()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;

  v1 = v0[10];
  v2 = v0[7];
  v3 = v0[8];
  v4 = v0[6];
  v5 = (_QWORD *)swift_task_alloc();
  v0[11] = v5;
  v5[2] = v2;
  v5[3] = v4;
  v5[4] = v3;
  v6 = (_QWORD *)swift_task_alloc();
  v0[12] = v6;
  v6[2] = v2;
  v6[3] = v1;
  v6[4] = v3;
  sub_23B5884D4(&qword_256A34570, (uint64_t (*)(uint64_t))type metadata accessor for Service, (uint64_t)&protocol conformance descriptor for Service);
  v7 = (_QWORD *)swift_task_alloc();
  v0[13] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A34578);
  *v7 = v0;
  v7[1] = sub_23B589630;
  return sub_23B601E08();
}

uint64_t sub_23B589630()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_23B5896AC()
{
  uint64_t v0;
  uint64_t v1;

  swift_release();
  v1 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_23B5896F0()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B589740(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[22] = a3;
  v4[23] = a4;
  v4[20] = a1;
  v4[21] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A34AE0);
  v4[24] = swift_task_alloc();
  v4[25] = type metadata accessor for PeerPath();
  v4[26] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1E8);
  v4[27] = v5;
  v4[28] = *(_QWORD *)(v5 - 8);
  v4[29] = swift_task_alloc();
  v4[30] = swift_task_alloc();
  v4[31] = swift_task_alloc();
  v4[32] = swift_task_alloc();
  v6 = sub_23B601820();
  v4[33] = v6;
  v4[34] = *(_QWORD *)(v6 - 8);
  v4[35] = swift_task_alloc();
  v4[36] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B589854()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v2 = v0[22];
  v1 = v0[23];
  v3 = v0[21];
  sub_23B5884D4(&qword_256A34570, (uint64_t (*)(uint64_t))type metadata accessor for Service, (uint64_t)&protocol conformance descriptor for Service);
  v4 = (_QWORD *)swift_task_alloc();
  v0[37] = v4;
  v4[2] = v3;
  v4[3] = v2;
  v4[4] = v1;
  v5 = (_QWORD *)swift_task_alloc();
  v0[38] = v5;
  *v5 = v0;
  v5[1] = sub_23B589924;
  return sub_23B601E14();
}

uint64_t sub_23B589924()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 312) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B589998()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t *v39;
  unint64_t v40;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  int64_t v54;
  unint64_t v55;
  int64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  _BOOL4 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  void (*v75)(uint64_t, uint64_t);
  uint64_t v76;
  uint64_t *v77;
  int isUniquelyReferenced_nonNull_native;
  _QWORD *v79;
  char v80;
  unint64_t v81;
  uint64_t v82;
  _BOOL8 v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  unint64_t v87;
  char v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  BOOL v92;
  uint64_t v93;
  uint64_t inited;
  id v95;
  _QWORD *v96;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  int64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  int64_t v110;
  unint64_t v111;
  void (*v112)(uint64_t, unint64_t, uint64_t);
  uint64_t v113[2];

  v1 = objc_msgSend(*(id *)(*(_QWORD *)(v0 + 168) + OBJC_IVAR____TtC15FindMyBluetooth7Service_underlyingObject), sel_characteristics);
  if (v1)
  {
    v2 = v1;
    v3 = *(_QWORD *)(v0 + 176);
    sub_23B58F7DC(0, &qword_256A34698);
    v4 = sub_23B6019DC();
    *(_QWORD *)(v0 + 320) = v4;

    if (v3)
      v5 = v3;
    else
      v5 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 328) = sub_23B5BA588(v5);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 336) = OBJC_IVAR____TtC15FindMyBluetooth7Service_characteristics;
    swift_beginAccess();
    v6 = swift_bridgeObjectRetain();
    v7 = sub_23B58BB44(v6);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 344) = sub_23B5BA588(v7);
    swift_bridgeObjectRelease();
    if (v4 >> 62)
      goto LABEL_71;
    v8 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    *(_QWORD *)(v0 + 352) = v8;
    if (v8)
    {
      do
      {
        v9 = 0;
        *(_QWORD *)(v0 + 360) = OBJC_IVAR____TtC15FindMyBluetooth7Service_peerPath;
        while (1)
        {
          v10 = *(_QWORD *)(v0 + 320);
          v11 = (v10 & 0xC000000000000001) != 0
              ? (id)MEMORY[0x23B868228](v9)
              : *(id *)(v10 + 8 * v9 + 32);
          v12 = v11;
          *(_QWORD *)(v0 + 368) = v11;
          *(_QWORD *)(v0 + 376) = v9 + 1;
          if (__OFADD__(v9, 1))
            break;
          v13 = *(_QWORD *)(v0 + 344);
          v15 = *(_QWORD *)(v0 + 280);
          v14 = *(_QWORD *)(v0 + 288);
          v16 = *(_QWORD *)(v0 + 264);
          v17 = *(_QWORD *)(v0 + 272);
          v18 = *(_QWORD *)(v0 + 256);
          v19 = objc_msgSend(v11, sel_UUID);
          CBUUID.uuidValue.getter();

          (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v15, v14, v16);
          type metadata accessor for Characteristic();
          sub_23B6015D4();
          if ((sub_23B5AE550(v18, v13) & 1) == 0)
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_256A346A0);
            inited = swift_initStackObject();
            *(_QWORD *)(v0 + 384) = inited;
            *(_QWORD *)(inited + 16) = v12;
            swift_allocObject();
            swift_retain();
            v95 = v12;
            v96 = (_QWORD *)swift_task_alloc();
            *(_QWORD *)(v0 + 392) = v96;
            *v96 = v0;
            v96[1] = sub_23B58A568;
            return sub_23B5A55F0(*(_QWORD *)(v0 + 168), inited);
          }
          v20 = *(_QWORD *)(v0 + 288);
          v21 = *(_QWORD *)(v0 + 264);
          v22 = *(_QWORD *)(v0 + 272);
          v23 = *(_QWORD *)(v0 + 256);
          v24 = *(_QWORD *)(v0 + 216);
          v25 = *(_QWORD *)(v0 + 224);

          (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
          (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
          v9 = *(_QWORD *)(v0 + 376);
          if (v9 == *(_QWORD *)(v0 + 352))
            goto LABEL_14;
        }
        __break(1u);
LABEL_67:
        __break(1u);
LABEL_68:
        __break(1u);
LABEL_69:
        __break(1u);
LABEL_70:
        __break(1u);
LABEL_71:
        swift_bridgeObjectRetain();
        v101 = sub_23B601D24();
        swift_bridgeObjectRelease();
        *(_QWORD *)(v0 + 352) = v101;
      }
      while (v101);
    }
LABEL_14:
    v26 = *(_QWORD *)(v0 + 328);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v27 = swift_bridgeObjectRetain();
    v28 = sub_23B58BB44(v27);
    swift_bridgeObjectRelease();
    v29 = sub_23B5BA588(v28);
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v29 + 16) <= *(_QWORD *)(v26 + 16) >> 3)
    {
      v113[0] = *(_QWORD *)(v0 + 328);
      sub_23B5B1BC8(v29);
      swift_bridgeObjectRelease();
      v30 = v113[0];
    }
    else
    {
      v30 = sub_23B5B2178(v29, *(_QWORD *)(v0 + 328));
      swift_bridgeObjectRelease();
    }
    v42 = 0;
    v43 = -1;
    v104 = v30 + 56;
    v44 = -1 << *(_BYTE *)(v30 + 32);
    v45 = *(_QWORD *)(v0 + 224);
    if (-v44 < 64)
      v43 = ~(-1 << -(char)v44);
    v46 = v43 & *(_QWORD *)(v30 + 56);
    v103 = *(_QWORD *)(v0 + 168) + OBJC_IVAR____TtC15FindMyBluetooth7Service_peerPath;
    v102 = *(_QWORD *)(v0 + 200);
    v105 = (unint64_t)(63 - v44) >> 6;
    v107 = v30;
    v109 = *(_QWORD *)(v0 + 224);
    while (1)
    {
      if (v46)
      {
        v51 = __clz(__rbit64(v46));
        v52 = (v46 - 1) & v46;
        v53 = v51 | (v42 << 6);
      }
      else
      {
        v54 = v42 + 1;
        if (__OFADD__(v42, 1))
          goto LABEL_69;
        if (v54 >= v105)
        {
LABEL_62:
          (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v45 + 56))(*(_QWORD *)(v0 + 192), 1, 1, *(_QWORD *)(v0 + 216));
LABEL_63:
          swift_release();
          goto LABEL_64;
        }
        v55 = *(_QWORD *)(v104 + 8 * v54);
        ++v42;
        if (!v55)
        {
          v42 = v54 + 1;
          if (v54 + 1 >= v105)
            goto LABEL_62;
          v55 = *(_QWORD *)(v104 + 8 * v42);
          if (!v55)
          {
            v42 = v54 + 2;
            if (v54 + 2 >= v105)
              goto LABEL_62;
            v55 = *(_QWORD *)(v104 + 8 * v42);
            if (!v55)
            {
              v56 = v54 + 3;
              if (v56 >= v105)
                goto LABEL_62;
              v55 = *(_QWORD *)(v104 + 8 * v56);
              if (!v55)
              {
                while (1)
                {
                  v42 = v56 + 1;
                  if (__OFADD__(v56, 1))
                    goto LABEL_70;
                  if (v42 >= v105)
                    goto LABEL_62;
                  v55 = *(_QWORD *)(v104 + 8 * v42);
                  ++v56;
                  if (v55)
                    goto LABEL_41;
                }
              }
              v42 = v56;
            }
          }
        }
LABEL_41:
        v52 = (v55 - 1) & v55;
        v53 = __clz(__rbit64(v55)) + (v42 << 6);
      }
      v57 = *(_QWORD *)(v0 + 216);
      v58 = *(_QWORD *)(v0 + 192);
      v108 = *(_QWORD *)(v45 + 72);
      v112 = *(void (**)(uint64_t, unint64_t, uint64_t))(v45 + 16);
      v112(v58, *(_QWORD *)(v30 + 48) + v108 * v53, v57);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v45 + 56))(v58, 0, 1, v57);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v58, 1, v57) == 1)
        goto LABEL_63;
      v111 = v52;
      v110 = v42;
      (*(void (**)(_QWORD, _QWORD, _QWORD))(v45 + 32))(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 216));
      if (qword_256A340A0 != -1)
        swift_once();
      v59 = *(_QWORD *)(v0 + 232);
      v60 = *(_QWORD *)(v0 + 240);
      v61 = *(_QWORD *)(v0 + 216);
      v62 = sub_23B60185C();
      __swift_project_value_buffer(v62, (uint64_t)qword_256A34540);
      v112(v59, v60, v61);
      swift_retain();
      v63 = sub_23B601844();
      v64 = sub_23B601B8C();
      v65 = os_log_type_enabled(v63, v64);
      v66 = *(_QWORD *)(v0 + 232);
      v67 = *(_QWORD *)(v0 + 216);
      if (v65)
      {
        v68 = *(_QWORD *)(v0 + 208);
        v69 = swift_slowAlloc();
        v106 = swift_slowAlloc();
        v113[0] = v106;
        *(_DWORD *)v69 = 136446466;
        sub_23B58E8B8(v103, v68);
        v70 = (uint64_t *)(v68 + *(int *)(v102 + 32));
        v71 = *v70;
        v72 = v70[1];
        swift_bridgeObjectRetain();
        sub_23B589184(v68);
        *(_QWORD *)(v69 + 4) = sub_23B58E160(v71, v72, v113);
        swift_bridgeObjectRelease();
        swift_release();
        *(_WORD *)(v69 + 12) = 2082;
        sub_23B58F61C((unint64_t *)&qword_256A34658, (uint64_t *)&unk_2542FD1E8, MEMORY[0x24BE316E8]);
        v73 = sub_23B601DE4();
        *(_QWORD *)(v69 + 14) = sub_23B58E160(v73, v74, v113);
        swift_bridgeObjectRelease();
        v75 = *(void (**)(uint64_t, uint64_t))(v109 + 8);
        v75(v66, v67);
        _os_log_impl(&dword_23B583000, v63, v64, "%{public}s: No characteristics discovered for %{public}s", (uint8_t *)v69, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x23B868A2C](v106, -1, -1);
        MEMORY[0x23B868A2C](v69, -1, -1);
      }
      else
      {
        swift_release();
        v75 = *(void (**)(uint64_t, uint64_t))(v45 + 8);
        v75(v66, v67);
      }

      v76 = *(_QWORD *)(v0 + 240);
      v77 = (uint64_t *)(*(_QWORD *)(v0 + 168) + *(_QWORD *)(v0 + 336));
      swift_beginAccess();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v113[0] = *v77;
      v79 = (_QWORD *)v113[0];
      *v77 = 0x8000000000000000;
      v81 = sub_23B58EDF0(v76, (uint64_t *)&unk_2542FD1E8, &qword_256A34590, &qword_256A34680);
      v82 = v79[2];
      v83 = (v80 & 1) == 0;
      v84 = v82 + v83;
      if (__OFADD__(v82, v83))
        goto LABEL_67;
      v85 = v80;
      if (v79[3] >= v84)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v46 = v111;
          if ((v80 & 1) != 0)
            goto LABEL_24;
        }
        else
        {
          sub_23B5B4BF8();
          v79 = (_QWORD *)v113[0];
          v46 = v111;
          if ((v85 & 1) != 0)
            goto LABEL_24;
        }
      }
      else
      {
        v86 = *(_QWORD *)(v0 + 240);
        sub_23B5B2D68(v84, isUniquelyReferenced_nonNull_native);
        v79 = (_QWORD *)v113[0];
        v87 = sub_23B58EDF0(v86, (uint64_t *)&unk_2542FD1E8, &qword_256A34590, &qword_256A34680);
        if ((v85 & 1) != (v88 & 1))
          return sub_23B601E2C();
        v81 = v87;
        v46 = v111;
        if ((v85 & 1) != 0)
        {
LABEL_24:
          v47 = v79[7];
          v48 = *(_QWORD *)(v47 + 8 * v81);
          *(_QWORD *)(v47 + 8 * v81) = 0;
          goto LABEL_25;
        }
      }
      v89 = *(_QWORD *)(v0 + 240);
      v90 = *(_QWORD *)(v0 + 216);
      v79[(v81 >> 6) + 8] |= 1 << v81;
      v112(v79[6] + v81 * v108, v89, v90);
      *(_QWORD *)(v79[7] + 8 * v81) = 0;
      v91 = v79[2];
      v92 = __OFADD__(v91, 1);
      v93 = v91 + 1;
      if (v92)
        goto LABEL_68;
      v79[2] = v93;
      v48 = 1;
LABEL_25:
      v49 = *(_QWORD *)(v0 + 240);
      v50 = *(_QWORD *)(v0 + 216);
      *(_QWORD *)(*(_QWORD *)(v0 + 168) + *(_QWORD *)(v0 + 336)) = v79;
      swift_bridgeObjectRelease();
      sub_23B58F6F0(v48);
      swift_endAccess();
      v75(v49, v50);
      v30 = v107;
      v45 = v109;
      v42 = v110;
    }
  }
  if (qword_256A340A0 != -1)
    swift_once();
  v31 = sub_23B60185C();
  __swift_project_value_buffer(v31, (uint64_t)qword_256A34540);
  swift_retain();
  v32 = sub_23B601844();
  v33 = sub_23B601B74();
  if (os_log_type_enabled(v32, v33))
  {
    v34 = *(_QWORD *)(v0 + 200);
    v35 = *(_QWORD *)(v0 + 208);
    v36 = *(_QWORD *)(v0 + 168);
    v37 = (uint8_t *)swift_slowAlloc();
    v38 = swift_slowAlloc();
    *(_DWORD *)v37 = 136446210;
    v113[0] = v38;
    sub_23B58E8B8(v36 + OBJC_IVAR____TtC15FindMyBluetooth7Service_peerPath, v35);
    v39 = (uint64_t *)(v35 + *(int *)(v34 + 32));
    v41 = *v39;
    v40 = v39[1];
    swift_bridgeObjectRetain();
    sub_23B589184(v35);
    *(_QWORD *)(v0 + 136) = sub_23B58E160(v41, v40, v113);
    sub_23B601BC8();
    swift_bridgeObjectRelease();
    swift_release();
    _os_log_impl(&dword_23B583000, v32, v33, "%{public}s: CBService.characteristics was unexpectedly nil!", v37, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v38, -1, -1);
    MEMORY[0x23B868A2C](v37, -1, -1);
  }
  else
  {
    swift_release();
  }

LABEL_64:
  v98 = *(uint64_t **)(v0 + 160);
  swift_beginAccess();
  v99 = swift_bridgeObjectRetain();
  v100 = sub_23B58BEA0(v99);
  swift_bridgeObjectRelease();
  *v98 = v100;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B58A568(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 400) = a1;
  *(_QWORD *)(v3 + 408) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_23B58A600()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 272);
  v4 = *(_QWORD *)(v0 + 256);
  v5 = *(_QWORD *)(v0 + 216);
  v6 = *(_QWORD *)(v0 + 224);

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B58A6CC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  char isUniquelyReferenced_nonNull_native;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v9;

  v1 = v0[50];
  v2 = v0[31];
  v3 = v0[27];
  v4 = v0[28];
  v5 = (uint64_t *)(v0[21] + v0[42]);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 16))(v2, v0[32], v3);
  swift_beginAccess();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v5;
  *v5 = 0x8000000000000000;
  sub_23B5B8DA8(v1, v2, isUniquelyReferenced_nonNull_native);
  *v5 = v9;
  swift_bridgeObjectRelease();
  v7 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v0[52] = v7;
  v7(v2, v3);
  swift_endAccess();
  return swift_task_switch();
}

uint64_t sub_23B58A7B8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 424) = sub_23B5E60AC();
  *(_QWORD *)(v0 + 432) = v1;
  return swift_task_switch();
}

uint64_t sub_23B58A7FC()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  _BOOL4 v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  int64_t v53;
  unint64_t v54;
  int64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t, unint64_t, uint64_t);
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  _BOOL4 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  void (*v74)(uint64_t, uint64_t);
  uint64_t v75;
  uint64_t *v76;
  int isUniquelyReferenced_nonNull_native;
  _QWORD *v78;
  char v79;
  unint64_t v80;
  uint64_t v81;
  _BOOL8 v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  unint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  BOOL v91;
  uint64_t v92;
  uint64_t inited;
  id v94;
  _QWORD *v95;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  os_log_type_t type[8];
  int64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  int64_t v115;
  uint64_t v116;
  void (*v117)(uint64_t, uint64_t);
  unint64_t v118;
  void (*v119)(uint64_t, uint64_t);
  uint64_t v120;
  void (*v121)(unint64_t, uint64_t, uint64_t);
  uint64_t v122[2];

  if (qword_256A340A0 != -1)
    goto LABEL_62;
  while (1)
  {
    v109 = sub_23B60185C();
    __swift_project_value_buffer(v109, (uint64_t)qword_256A34540);
    swift_retain_n();
    swift_bridgeObjectRetain();
    v1 = sub_23B601844();
    v2 = sub_23B601B8C();
    v3 = os_log_type_enabled(v1, v2);
    v4 = *(_QWORD *)(v0 + 432);
    if (v3)
    {
      v102 = *(_QWORD *)(v0 + 424);
      v119 = *(void (**)(uint64_t, uint64_t))(v0 + 416);
      v110 = *(void **)(v0 + 368);
      v116 = *(_QWORD *)(v0 + 288);
      v112 = *(_QWORD *)(v0 + 272);
      v114 = *(_QWORD *)(v0 + 264);
      v5 = *(_QWORD *)(v0 + 208);
      v105 = *(_QWORD *)(v0 + 216);
      v107 = *(_QWORD *)(v0 + 256);
      v6 = *(_QWORD *)(v0 + 168) + *(_QWORD *)(v0 + 360);
      v7 = *(_QWORD *)(v0 + 200);
      v8 = swift_slowAlloc();
      v9 = swift_slowAlloc();
      v122[0] = v9;
      *(_DWORD *)v8 = 136446466;
      sub_23B58E8B8(v6, v5);
      v10 = (uint64_t *)(v5 + *(int *)(v7 + 32));
      v11 = *v10;
      v12 = v10[1];
      swift_bridgeObjectRetain();
      sub_23B589184(v5);
      *(_QWORD *)(v0 + 144) = sub_23B58E160(v11, v12, v122);
      sub_23B601BC8();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v8 + 12) = 2082;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 152) = sub_23B58E160(v102, v4, v122);
      sub_23B601BC8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23B583000, v1, v2, "%{public}s: Discovered characteristic: %{public}s", (uint8_t *)v8, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B868A2C](v9, -1, -1);
      MEMORY[0x23B868A2C](v8, -1, -1);

      swift_release();
      v119(v107, v105);
      (*(void (**)(uint64_t, uint64_t))(v112 + 8))(v116, v114);
    }
    else
    {
      v13 = *(void **)(v0 + 368);
      v117 = *(void (**)(uint64_t, uint64_t))(v0 + 416);
      v120 = *(_QWORD *)(v0 + 288);
      v14 = *(_QWORD *)(v0 + 264);
      v15 = *(_QWORD *)(v0 + 272);
      v16 = *(_QWORD *)(v0 + 256);
      v17 = *(_QWORD *)(v0 + 216);

      swift_bridgeObjectRelease_n();
      swift_release_n();
      swift_release();

      v117(v16, v17);
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v120, v14);
    }
    v18 = *(_QWORD *)(v0 + 376);
    if (v18 == *(_QWORD *)(v0 + 352))
    {
LABEL_12:
      v35 = *(_QWORD *)(v0 + 328);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v36 = swift_bridgeObjectRetain();
      v37 = sub_23B58BB44(v36);
      swift_bridgeObjectRelease();
      v38 = sub_23B5BA588(v37);
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v38 + 16) <= *(_QWORD *)(v35 + 16) >> 3)
      {
        v122[0] = *(_QWORD *)(v0 + 328);
        sub_23B5B1BC8(v38);
        swift_bridgeObjectRelease();
        v39 = v122[0];
      }
      else
      {
        v39 = sub_23B5B2178(v38, *(_QWORD *)(v0 + 328));
        swift_bridgeObjectRelease();
      }
      v40 = 0;
      v41 = -1;
      *(_QWORD *)type = v39 + 56;
      v42 = -1 << *(_BYTE *)(v39 + 32);
      v43 = *(_QWORD *)(v0 + 224);
      if (-v42 < 64)
        v41 = ~(-1 << -(char)v42);
      v44 = v41 & *(_QWORD *)(v39 + 56);
      v101 = *(_QWORD *)(v0 + 168) + OBJC_IVAR____TtC15FindMyBluetooth7Service_peerPath;
      v100 = *(_QWORD *)(v0 + 200);
      v104 = (unint64_t)(63 - v42) >> 6;
      v113 = *(_QWORD *)(v0 + 224);
      v108 = v39;
      while (1)
      {
        if (v44)
        {
          v50 = __clz(__rbit64(v44));
          v51 = (v44 - 1) & v44;
          v52 = v50 | (v40 << 6);
        }
        else
        {
          v53 = v40 + 1;
          if (__OFADD__(v40, 1))
            goto LABEL_60;
          if (v53 >= v104)
          {
LABEL_54:
            (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v43 + 56))(*(_QWORD *)(v0 + 192), 1, 1, *(_QWORD *)(v0 + 216));
LABEL_55:
            swift_release();
            v97 = *(uint64_t **)(v0 + 160);
            swift_beginAccess();
            v98 = swift_bridgeObjectRetain();
            v99 = sub_23B58BEA0(v98);
            swift_bridgeObjectRelease();
            *v97 = v99;
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            return (*(uint64_t (**)(void))(v0 + 8))();
          }
          v54 = *(_QWORD *)(*(_QWORD *)type + 8 * v53);
          ++v40;
          if (!v54)
          {
            v40 = v53 + 1;
            if (v53 + 1 >= v104)
              goto LABEL_54;
            v54 = *(_QWORD *)(*(_QWORD *)type + 8 * v40);
            if (!v54)
            {
              v40 = v53 + 2;
              if (v53 + 2 >= v104)
                goto LABEL_54;
              v54 = *(_QWORD *)(*(_QWORD *)type + 8 * v40);
              if (!v54)
              {
                v55 = v53 + 3;
                if (v55 >= v104)
                  goto LABEL_54;
                v54 = *(_QWORD *)(*(_QWORD *)type + 8 * v55);
                if (!v54)
                {
                  while (1)
                  {
                    v40 = v55 + 1;
                    if (__OFADD__(v55, 1))
                      goto LABEL_61;
                    if (v40 >= v104)
                      goto LABEL_54;
                    v54 = *(_QWORD *)(*(_QWORD *)type + 8 * v40);
                    ++v55;
                    if (v54)
                      goto LABEL_35;
                  }
                }
                v40 = v55;
              }
            }
          }
LABEL_35:
          v51 = (v54 - 1) & v54;
          v52 = __clz(__rbit64(v54)) + (v40 << 6);
        }
        v56 = *(_QWORD *)(v0 + 216);
        v57 = *(_QWORD *)(v0 + 192);
        v111 = *(_QWORD *)(v43 + 72);
        v58 = *(void (**)(uint64_t, unint64_t, uint64_t))(v43 + 16);
        v58(v57, *(_QWORD *)(v39 + 48) + v111 * v52, v56);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v43 + 56))(v57, 0, 1, v56);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v57, 1, v56) == 1)
          goto LABEL_55;
        v118 = v51;
        (*(void (**)(_QWORD, _QWORD, _QWORD))(v43 + 32))(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 216));
        if (qword_256A340A0 != -1)
          swift_once();
        v115 = v40;
        v59 = *(_QWORD *)(v0 + 232);
        v60 = *(_QWORD *)(v0 + 240);
        v61 = *(_QWORD *)(v0 + 216);
        __swift_project_value_buffer(v109, (uint64_t)qword_256A34540);
        v121 = (void (*)(unint64_t, uint64_t, uint64_t))v58;
        v58(v59, v60, v61);
        swift_retain();
        v62 = sub_23B601844();
        v63 = sub_23B601B8C();
        v64 = os_log_type_enabled(v62, v63);
        v65 = *(_QWORD *)(v0 + 232);
        v66 = *(_QWORD *)(v0 + 216);
        if (v64)
        {
          v67 = *(_QWORD *)(v0 + 208);
          v68 = swift_slowAlloc();
          v106 = swift_slowAlloc();
          v122[0] = v106;
          *(_DWORD *)v68 = 136446466;
          sub_23B58E8B8(v101, v67);
          v69 = (uint64_t *)(v67 + *(int *)(v100 + 32));
          v70 = *v69;
          v71 = v69[1];
          swift_bridgeObjectRetain();
          sub_23B589184(v67);
          *(_QWORD *)(v68 + 4) = sub_23B58E160(v70, v71, v122);
          swift_bridgeObjectRelease();
          swift_release();
          *(_WORD *)(v68 + 12) = 2082;
          sub_23B58F61C((unint64_t *)&qword_256A34658, (uint64_t *)&unk_2542FD1E8, MEMORY[0x24BE316E8]);
          v72 = sub_23B601DE4();
          *(_QWORD *)(v68 + 14) = sub_23B58E160(v72, v73, v122);
          swift_bridgeObjectRelease();
          v74 = *(void (**)(uint64_t, uint64_t))(v113 + 8);
          v74(v65, v66);
          _os_log_impl(&dword_23B583000, v62, v63, "%{public}s: No characteristics discovered for %{public}s", (uint8_t *)v68, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x23B868A2C](v106, -1, -1);
          MEMORY[0x23B868A2C](v68, -1, -1);
        }
        else
        {
          swift_release();
          v74 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
          v74(v65, v66);
        }

        v75 = *(_QWORD *)(v0 + 240);
        v76 = (uint64_t *)(*(_QWORD *)(v0 + 168) + *(_QWORD *)(v0 + 336));
        swift_beginAccess();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v122[0] = *v76;
        v78 = (_QWORD *)v122[0];
        *v76 = 0x8000000000000000;
        v80 = sub_23B58EDF0(v75, (uint64_t *)&unk_2542FD1E8, &qword_256A34590, &qword_256A34680);
        v81 = v78[2];
        v82 = (v79 & 1) == 0;
        v83 = v81 + v82;
        if (__OFADD__(v81, v82))
        {
          __break(1u);
          goto LABEL_58;
        }
        v84 = v79;
        if (v78[3] >= v83)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            v44 = v118;
            if ((v79 & 1) != 0)
              goto LABEL_18;
          }
          else
          {
            sub_23B5B4BF8();
            v78 = (_QWORD *)v122[0];
            v44 = v118;
            if ((v84 & 1) != 0)
              goto LABEL_18;
          }
        }
        else
        {
          v85 = *(_QWORD *)(v0 + 240);
          sub_23B5B2D68(v83, isUniquelyReferenced_nonNull_native);
          v78 = (_QWORD *)v122[0];
          v86 = sub_23B58EDF0(v85, (uint64_t *)&unk_2542FD1E8, &qword_256A34590, &qword_256A34680);
          if ((v84 & 1) != (v87 & 1))
            return sub_23B601E2C();
          v80 = v86;
          v44 = v118;
          if ((v84 & 1) != 0)
          {
LABEL_18:
            v45 = v78[7];
            v46 = 8 * v80;
            v47 = *(_QWORD *)(v45 + 8 * v80);
            *(_QWORD *)(v45 + v46) = 0;
            goto LABEL_19;
          }
        }
        v88 = *(_QWORD *)(v0 + 240);
        v89 = *(_QWORD *)(v0 + 216);
        v78[(v80 >> 6) + 8] |= 1 << v80;
        v121(v78[6] + v80 * v111, v88, v89);
        *(_QWORD *)(v78[7] + 8 * v80) = 0;
        v90 = v78[2];
        v91 = __OFADD__(v90, 1);
        v92 = v90 + 1;
        if (v91)
          goto LABEL_59;
        v78[2] = v92;
        v47 = 1;
LABEL_19:
        v48 = *(_QWORD *)(v0 + 240);
        v49 = *(_QWORD *)(v0 + 216);
        *(_QWORD *)(*(_QWORD *)(v0 + 168) + *(_QWORD *)(v0 + 336)) = v78;
        swift_bridgeObjectRelease();
        sub_23B58F6F0(v47);
        swift_endAccess();
        v74(v48, v49);
        v39 = v108;
        v43 = v113;
        v40 = v115;
      }
    }
LABEL_6:
    v19 = *(_QWORD *)(v0 + 320);
    v20 = (v19 & 0xC000000000000001) != 0 ? (id)MEMORY[0x23B868228](v18) : *(id *)(v19 + 8 * v18 + 32);
    v21 = v20;
    *(_QWORD *)(v0 + 368) = v20;
    *(_QWORD *)(v0 + 376) = v18 + 1;
    if (!__OFADD__(v18, 1))
      break;
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    swift_once();
  }
  v22 = *(_QWORD *)(v0 + 344);
  v24 = *(_QWORD *)(v0 + 280);
  v23 = *(_QWORD *)(v0 + 288);
  v25 = *(_QWORD *)(v0 + 264);
  v26 = *(_QWORD *)(v0 + 272);
  v27 = *(_QWORD *)(v0 + 256);
  v28 = objc_msgSend(v20, sel_UUID);
  CBUUID.uuidValue.getter();

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v24, v23, v25);
  type metadata accessor for Characteristic();
  sub_23B6015D4();
  if ((sub_23B5AE550(v27, v22) & 1) != 0)
  {
    v29 = *(_QWORD *)(v0 + 288);
    v30 = *(_QWORD *)(v0 + 264);
    v31 = *(_QWORD *)(v0 + 272);
    v32 = *(_QWORD *)(v0 + 256);
    v33 = *(_QWORD *)(v0 + 216);
    v34 = *(_QWORD *)(v0 + 224);

    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v32, v33);
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v29, v30);
    v18 = *(_QWORD *)(v0 + 376);
    if (v18 == *(_QWORD *)(v0 + 352))
      goto LABEL_12;
    goto LABEL_6;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A346A0);
  inited = swift_initStackObject();
  *(_QWORD *)(v0 + 384) = inited;
  *(_QWORD *)(inited + 16) = v21;
  swift_allocObject();
  swift_retain();
  v94 = v21;
  v95 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 392) = v95;
  *v95 = v0;
  v95[1] = sub_23B58A568;
  return sub_23B5A55F0(*(_QWORD *)(v0 + 168), inited);
}

uint64_t sub_23B58B3C0()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B58B45C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v21;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD530);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35810);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD510);
  v15 = *(_QWORD *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v13, a1, v14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
  v16 = a2 + OBJC_IVAR____TtC15FindMyBluetooth7Service_discoverCharacteristicsContinuation;
  swift_beginAccess();
  sub_23B58EC70((uint64_t)v13, v16);
  swift_endAccess();
  v17 = sub_23B601A78();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v10, 1, 1, v17);
  v18 = sub_23B5884D4(&qword_256A34570, (uint64_t (*)(uint64_t))type metadata accessor for Service, (uint64_t)&protocol conformance descriptor for Service);
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = a2;
  v19[3] = v18;
  v19[4] = a3;
  v19[5] = a2;
  v19[6] = a4;
  swift_bridgeObjectRetain();
  swift_retain_n();
  sub_23B5CD0FC((uint64_t)v10, (uint64_t)&unk_256A346B0, (uint64_t)v19);
  return swift_release();
}

uint64_t sub_23B58B61C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[5] = a4;
  v5[6] = a5;
  v5[7] = type metadata accessor for PeerPath();
  v5[8] = swift_task_alloc();
  v6 = sub_23B601820();
  v5[9] = v6;
  v5[10] = *(_QWORD *)(v6 - 8);
  v5[11] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1E8);
  v5[12] = v7;
  v5[13] = *(_QWORD *)(v7 - 8);
  v5[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B58B6D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  void *v29;
  void *v30;
  void (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v1 = *(_QWORD *)(v0 + 40);
  if (v1)
  {
    v2 = *(_QWORD *)(v1 + 16);
    v3 = MEMORY[0x24BEE4AF8];
    if (v2)
    {
      v4 = *(_QWORD *)(v0 + 104);
      v37 = *(_QWORD *)(v0 + 80);
      v39 = MEMORY[0x24BEE4AF8];
      sub_23B601CAC();
      v5 = objc_opt_self();
      v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
      v34 = *(_QWORD *)(v4 + 72);
      v35 = (id)v5;
      v7 = v4;
      v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
      do
      {
        v8 = *(_QWORD *)(v0 + 112);
        v10 = *(_QWORD *)(v0 + 88);
        v9 = *(_QWORD *)(v0 + 96);
        v11 = *(_QWORD *)(v0 + 72);
        v32(v8, v6, v9);
        sub_23B6015BC();
        v12 = (void *)sub_23B6017E4();
        v13 = objc_msgSend(v35, sel_UUIDWithNSUUID_, v12);

        (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v10, v11);
        (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
        sub_23B601C94();
        sub_23B601CB8();
        sub_23B601CC4();
        sub_23B601CA0();
        v6 += v34;
        --v2;
      }
      while (v2);
      v3 = v39;
    }
  }
  else
  {
    v3 = 0;
  }
  if (qword_256A340A0 != -1)
    swift_once();
  v14 = sub_23B60185C();
  __swift_project_value_buffer(v14, (uint64_t)qword_256A34540);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  v15 = sub_23B601844();
  v16 = sub_23B601B5C();
  if (os_log_type_enabled(v15, v16))
  {
    v18 = *(_QWORD *)(v0 + 56);
    v17 = *(_QWORD *)(v0 + 64);
    v19 = *(_QWORD *)(v0 + 48);
    v33 = *(_QWORD *)(v0 + 40);
    v38 = v3;
    v20 = swift_slowAlloc();
    v36 = (id)swift_slowAlloc();
    v39 = (uint64_t)v36;
    *(_DWORD *)v20 = 136446466;
    sub_23B58E8B8(v19 + OBJC_IVAR____TtC15FindMyBluetooth7Service_peerPath, v17);
    v21 = (uint64_t *)(v17 + *(int *)(v18 + 32));
    v23 = *v21;
    v22 = v21[1];
    swift_bridgeObjectRetain();
    sub_23B589184(v17);
    *(_QWORD *)(v0 + 16) = sub_23B58E160(v23, v22, &v39);
    sub_23B601BC8();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v20 + 12) = 2082;
    *(_QWORD *)(v0 + 24) = v33;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A346B8);
    v24 = sub_23B601928();
    *(_QWORD *)(v0 + 32) = sub_23B58E160(v24, v25, &v39);
    sub_23B601BC8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23B583000, v15, v16, "%{public}s: Calling discoverCharacteristics: %{public}s", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v36, -1, -1);
    v26 = v20;
    v3 = v38;
    MEMORY[0x23B868A2C](v26, -1, -1);
  }
  else
  {
    swift_release_n();
    swift_bridgeObjectRelease_n();
  }

  v27 = *(void **)(*(_QWORD *)(v0 + 48) + OBJC_IVAR____TtC15FindMyBluetooth7Service_underlyingObject);
  v28 = objc_msgSend(v27, sel_peripheral);
  if (v28)
  {
    v29 = v28;
    if (v3)
    {
      sub_23B58F7DC(0, &qword_256A34B40);
      v30 = (void *)sub_23B6019D0();
      swift_bridgeObjectRelease();
    }
    else
    {
      v30 = 0;
    }
    objc_msgSend(v29, sel_discoverCharacteristics_forService_, v30, v27);

  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B58BB44(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t i;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t (*v30)(unint64_t, char *, uint64_t);
  char *v31;
  char *v32;
  unint64_t v33;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256A34AE0);
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v3 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1E8);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v32 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v31 = (char *)&v28 - v8;
  v9 = a1 + 64;
  v10 = 1 << *(_BYTE *)(a1 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(a1 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v15 = 0;
  v33 = MEMORY[0x24BEE4AF8];
  if (v12)
    goto LABEL_7;
LABEL_8:
  while (2)
  {
    v18 = v15 + 1;
    if (!__OFADD__(v15, 1))
    {
      if (v18 < v13)
      {
        v19 = *(_QWORD *)(v9 + 8 * v18);
        ++v15;
        if (v19)
          goto LABEL_23;
        v15 = v18 + 1;
        if (v18 + 1 >= v13)
          goto LABEL_32;
        v19 = *(_QWORD *)(v9 + 8 * v15);
        if (v19)
          goto LABEL_23;
        v15 = v18 + 2;
        if (v18 + 2 >= v13)
          goto LABEL_32;
        v19 = *(_QWORD *)(v9 + 8 * v15);
        if (v19)
          goto LABEL_23;
        v15 = v18 + 3;
        if (v18 + 3 >= v13)
          goto LABEL_32;
        v19 = *(_QWORD *)(v9 + 8 * v15);
        if (v19)
        {
LABEL_23:
          v12 = (v19 - 1) & v19;
          for (i = __clz(__rbit64(v19)) + (v15 << 6); ; i = v16 | (v15 << 6))
          {
            v21 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * i);
            if (!v21)
              break;
            (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v3, v21 + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_id, v4);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
              goto LABEL_6;
            v22 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
            v22(v31, v3, v4);
            v30 = (uint64_t (*)(unint64_t, char *, uint64_t))v22;
            v22(v32, v31, v4);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v33 = sub_23B58579C(0, *(_QWORD *)(v33 + 16) + 1, 1, v33);
            v24 = *(_QWORD *)(v33 + 16);
            v23 = *(_QWORD *)(v33 + 24);
            v25 = v24 + 1;
            if (v24 >= v23 >> 1)
            {
              v28 = *(_QWORD *)(v33 + 16);
              v29 = v24 + 1;
              v27 = sub_23B58579C(v23 > 1, v24 + 1, 1, v33);
              v24 = v28;
              v25 = v29;
              v33 = v27;
            }
            v26 = v33;
            *(_QWORD *)(v33 + 16) = v25;
            result = v30(v26+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v24, v32, v4);
            if (!v12)
              goto LABEL_8;
LABEL_7:
            v16 = __clz(__rbit64(v12));
            v12 &= v12 - 1;
          }
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
LABEL_6:
          result = sub_23B587ED4((uint64_t)v3, &qword_256A34AE0);
          if (!v12)
            continue;
          goto LABEL_7;
        }
        v20 = v18 + 4;
        if (v20 < v13)
        {
          v19 = *(_QWORD *)(v9 + 8 * v20);
          if (v19)
          {
            v15 = v20;
            goto LABEL_23;
          }
          while (1)
          {
            v15 = v20 + 1;
            if (__OFADD__(v20, 1))
              goto LABEL_34;
            if (v15 >= v13)
              break;
            v19 = *(_QWORD *)(v9 + 8 * v15);
            ++v20;
            if (v19)
              goto LABEL_23;
          }
        }
      }
LABEL_32:
      swift_release();
      return v33;
    }
    break;
  }
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_23B58BEA0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;

  v15 = MEMORY[0x24BEE4AF8];
  v2 = a1 + 64;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v6 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (v5)
  {
    v9 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    v10 = v9 | (v8 << 6);
LABEL_22:
    if (*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v10))
    {
      v14 = swift_retain();
      MEMORY[0x23B867F7C](v14);
      if (*(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_23B601A00();
      sub_23B601A0C();
      result = sub_23B6019F4();
    }
  }
  v11 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v11 >= v6)
    goto LABEL_26;
  v12 = *(_QWORD *)(v2 + 8 * v11);
  ++v8;
  if (v12)
    goto LABEL_21;
  v8 = v11 + 1;
  if (v11 + 1 >= v6)
    goto LABEL_26;
  v12 = *(_QWORD *)(v2 + 8 * v8);
  if (v12)
    goto LABEL_21;
  v8 = v11 + 2;
  if (v11 + 2 >= v6)
    goto LABEL_26;
  v12 = *(_QWORD *)(v2 + 8 * v8);
  if (v12)
    goto LABEL_21;
  v8 = v11 + 3;
  if (v11 + 3 >= v6)
    goto LABEL_26;
  v12 = *(_QWORD *)(v2 + 8 * v8);
  if (v12)
  {
LABEL_21:
    v5 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v8 << 6);
    goto LABEL_22;
  }
  v13 = v11 + 4;
  if (v13 >= v6)
  {
LABEL_26:
    swift_release();
    return v15;
  }
  v12 = *(_QWORD *)(v2 + 8 * v13);
  if (v12)
  {
    v8 = v13;
    goto LABEL_21;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v6)
      goto LABEL_26;
    v12 = *(_QWORD *)(v2 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_21;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_23B58C064(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  _QWORD *v20;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD530);
  MEMORY[0x24BDAC7A8]();
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PeerPath();
  MEMORY[0x24BDAC7A8]();
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256A340A0 != -1)
    swift_once();
  v9 = sub_23B60185C();
  __swift_project_value_buffer(v9, (uint64_t)qword_256A34540);
  swift_retain();
  v10 = sub_23B601844();
  v11 = sub_23B601B8C();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc();
    v23 = a2;
    v13 = (uint8_t *)v12;
    v14 = swift_slowAlloc();
    *(_DWORD *)v13 = 136446210;
    v25 = v14;
    v22 = v13 + 4;
    sub_23B58E8B8(a1 + OBJC_IVAR____TtC15FindMyBluetooth7Service_peerPath, (uint64_t)v8);
    v15 = (uint64_t *)&v8[*(int *)(v6 + 32)];
    v17 = *v15;
    v16 = v15[1];
    swift_bridgeObjectRetain();
    sub_23B589184((uint64_t)v8);
    v24 = sub_23B58E160(v17, v16, &v25);
    sub_23B601BC8();
    swift_bridgeObjectRelease();
    swift_release();
    _os_log_impl(&dword_23B583000, v10, v11, "%{public}s cancelling characteristic discovery.", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v14, -1, -1);
    v18 = v13;
    a2 = v23;
    MEMORY[0x23B868A2C](v18, -1, -1);
  }
  else
  {
    swift_release();
  }

  sub_23B601A60();
  v19 = sub_23B601A78();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v5, 0, 1, v19);
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = 0;
  v20[3] = 0;
  v20[4] = a1;
  v20[5] = a2;
  swift_retain();
  swift_retain();
  sub_23B5CD39C((uint64_t)v5, (uint64_t)&unk_256A34690, (uint64_t)v20);
  return swift_release();
}

uint64_t sub_23B58C318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[7] = a4;
  v5[8] = a5;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35810);
  v5[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B58C378()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD510);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v1, 1, 1, v3);
  v4 = v2 + OBJC_IVAR____TtC15FindMyBluetooth7Service_discoverCharacteristicsContinuation;
  swift_beginAccess();
  sub_23B58EC70(v1, v4);
  swift_endAccess();
  *(_QWORD *)(v0 + 40) = 0;
  *(_BYTE *)(v0 + 48) = 1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v5;
  *v5 = v0;
  v5[1] = sub_23B58C444;
  return sub_23B593B60((uint64_t *)(v0 + 40));
}

uint64_t sub_23B58C444()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 88) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23B58C4B8()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B58C4EC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[8] = a1;
  v2[9] = v1;
  v3 = sub_23B601820();
  v2[10] = v3;
  v2[11] = *(_QWORD *)(v3 - 8);
  v2[12] = swift_task_alloc();
  v2[13] = type metadata accessor for PeerPath();
  v2[14] = swift_task_alloc();
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1E8);
  v2[15] = v4;
  v2[16] = *(_QWORD *)(v4 - 8);
  v2[17] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B58C59C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *log;
  uint64_t v47;
  os_log_type_t type;
  uint64_t v49;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = OBJC_IVAR____TtC15FindMyBluetooth7Service_characteristics;
  *(_QWORD *)(v0 + 144) = OBJC_IVAR____TtC15FindMyBluetooth7Service_characteristics;
  v3 = (uint64_t *)(v1 + v2);
  swift_beginAccess();
  v4 = *v3;
  if (*(_QWORD *)(v4 + 16))
  {
    v5 = *(_QWORD *)(v0 + 64);
    swift_bridgeObjectRetain();
    v6 = sub_23B58EDF0(v5, (uint64_t *)&unk_2542FD1E8, &qword_256A34590, &qword_256A34680);
    if ((v7 & 1) != 0)
    {
      v8 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v6);
      swift_retain();
      swift_bridgeObjectRelease();
      if (v8)
      {
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        return (*(uint64_t (**)(uint64_t))(v0 + 8))(v8);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  v10 = *(_QWORD *)(v0 + 72);
  v11 = *(_QWORD *)(v10 + OBJC_IVAR____TtC15FindMyBluetooth7Service_autoDiscoverCount);
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
  {
    __break(1u);
    goto LABEL_15;
  }
  *(_QWORD *)(v10 + OBJC_IVAR____TtC15FindMyBluetooth7Service_autoDiscoverCount) = v13;
  if (v13 >= 2)
  {
    if (qword_256A340A0 == -1)
    {
LABEL_9:
      v14 = *(_QWORD *)(v0 + 64);
      v16 = *(_QWORD *)(v0 + 128);
      v15 = *(_QWORD *)(v0 + 136);
      v17 = *(_QWORD *)(v0 + 120);
      v18 = sub_23B60185C();
      __swift_project_value_buffer(v18, (uint64_t)qword_256A34540);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v15, v14, v17);
      swift_retain();
      v19 = sub_23B601844();
      v20 = sub_23B601B74();
      v21 = os_log_type_enabled(v19, v20);
      v23 = *(_QWORD *)(v0 + 128);
      v22 = *(_QWORD *)(v0 + 136);
      v24 = *(_QWORD *)(v0 + 120);
      if (v21)
      {
        v42 = *(_QWORD *)(v0 + 120);
        v25 = *(_QWORD *)(v0 + 104);
        v26 = *(_QWORD *)(v0 + 112);
        v27 = *(_QWORD *)(v0 + 96);
        v44 = *(_QWORD *)(v0 + 80);
        v45 = *(_QWORD *)(v0 + 88);
        type = v20;
        log = v19;
        v28 = *(_QWORD *)(v0 + 72);
        v29 = swift_slowAlloc();
        v47 = swift_slowAlloc();
        v49 = v47;
        *(_DWORD *)v29 = 136446466;
        sub_23B58E8B8(v28 + OBJC_IVAR____TtC15FindMyBluetooth7Service_peerPath, v26);
        v30 = (uint64_t *)(v26 + *(int *)(v25 + 32));
        v43 = v23;
        v31 = *v30;
        v32 = v30[1];
        swift_bridgeObjectRetain();
        sub_23B589184(v26);
        *(_QWORD *)(v0 + 48) = sub_23B58E160(v31, v32, &v49);
        sub_23B601BC8();
        swift_release();
        swift_bridgeObjectRelease();
        *(_WORD *)(v29 + 12) = 2082;
        sub_23B6015BC();
        sub_23B5884D4((unint64_t *)&qword_256A347A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
        v33 = sub_23B601DE4();
        v35 = v34;
        (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v27, v44);
        *(_QWORD *)(v0 + 56) = sub_23B58E160(v33, v35, &v49);
        sub_23B601BC8();
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v22, v42);
        v19 = log;
        _os_log_impl(&dword_23B583000, log, type, "%{public}s: Inefficient autoDiscovery for %{public}s", (uint8_t *)v29, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x23B868A2C](v47, -1, -1);
        MEMORY[0x23B868A2C](v29, -1, -1);
      }
      else
      {
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
      }

      goto LABEL_13;
    }
LABEL_15:
    swift_once();
    goto LABEL_9;
  }
LABEL_13:
  v36 = *(_QWORD *)(v0 + 120);
  v37 = *(_QWORD *)(v0 + 128);
  v38 = *(_QWORD *)(v0 + 64);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A341E0);
  v39 = (*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  v40 = swift_allocObject();
  *(_QWORD *)(v0 + 152) = v40;
  *(_OWORD *)(v40 + 16) = xmmword_23B607AF0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v37 + 16))(v40 + v39, v38, v36);
  v41 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 160) = v41;
  *v41 = v0;
  v41[1] = sub_23B58C9FC;
  return sub_23B5891D8(v40);
}

uint64_t sub_23B58C9FC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 168) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_23B58CA88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 72) + *(_QWORD *)(v0 + 144));
  if (*(_QWORD *)(v1 + 16))
  {
    v2 = *(_QWORD *)(v0 + 64);
    swift_bridgeObjectRetain();
    v3 = sub_23B58EDF0(v2, (uint64_t *)&unk_2542FD1E8, &qword_256A34590, &qword_256A34680);
    if ((v4 & 1) != 0)
    {
      v5 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v3);
      swift_retain();
      swift_bridgeObjectRelease();
      if (v5)
      {
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        return (*(uint64_t (**)(uint64_t))(v0 + 8))(v5);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  if (qword_256A340A0 != -1)
    swift_once();
  v7 = sub_23B60185C();
  __swift_project_value_buffer(v7, (uint64_t)qword_256A34540);
  swift_retain_n();
  v8 = sub_23B601844();
  v9 = sub_23B601B74();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v15 = v11;
    *(_DWORD *)v10 = 136315138;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A34588);
    sub_23B58F61C(&qword_256A34590, (uint64_t *)&unk_2542FD1E8, MEMORY[0x24BE316D0]);
    v12 = sub_23B6018BC();
    v14 = v13;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 40) = sub_23B58E160(v12, v14, &v15);
    sub_23B601BC8();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_23B583000, v8, v9, "Missing characteristic during auto-discovery: %s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v11, -1, -1);
    MEMORY[0x23B868A2C](v10, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  type metadata accessor for CentralManager.Error();
  sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
  swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B58CDCC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Service.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23B58CE34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC15FindMyBluetooth7Service_id;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1F8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_23B58CE7C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23B58CEC8;
  return sub_23B5891D8(a1);
}

uint64_t sub_23B58CEC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t sub_23B58CF1C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23B58F8B4;
  return sub_23B58C4EC(a1);
}

uint64_t sub_23B58CF68()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (__cdecl *v3)();

  v3 = (uint64_t (__cdecl *)())((char *)&dword_256A35040 + dword_256A35040);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23B58CFC0;
  return v3();
}

uint64_t sub_23B58CFC0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v6;

  v6 = *v2;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
}

uint64_t sub_23B58D018()
{
  return sub_23B58D07C((uint64_t (*)(uint64_t))type metadata accessor for Service, (unint64_t *)&unk_256A34600, (uint64_t)&protocol conformance descriptor for Service);
}

uint64_t sub_23B58D058()
{
  return sub_23B58D07C((uint64_t (*)(uint64_t))type metadata accessor for MockService, &qword_256A34638, (uint64_t)&protocol conformance descriptor for MockService);
}

uint64_t sub_23B58D07C(uint64_t (*a1)(uint64_t), unint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[2];
  uint64_t v15;
  unint64_t v16;

  v7 = sub_23B601820();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8]();
  v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = 0;
  v16 = 0xE000000000000000;
  sub_23B601C40();
  swift_bridgeObjectRelease();
  v15 = 60;
  v16 = 0xE100000000000000;
  v14[0] = v3;
  v11 = a1(0);
  v12 = sub_23B5884D4(a2, a1, a3);
  sub_23B601DCC();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  MEMORY[0x23B86839C](v11, v12);
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  v14[0] = 91;
  v14[1] = 0xE100000000000000;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1F8);
  sub_23B58F61C(&qword_256A34A00, (uint64_t *)&unk_2542FD1F8, MEMORY[0x24BE316E8]);
  sub_23B601DCC();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  sub_23B6015BC();
  shortCBUUIDDescription(uuid:)();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  return v15;
}

uint64_t sub_23B58D2BC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[14] = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD510);
  v1[15] = v2;
  v1[16] = *(_QWORD *)(v2 - 8);
  v1[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35810);
  v1[18] = swift_task_alloc();
  v1[19] = swift_task_alloc();
  v1[20] = type metadata accessor for PeerPath();
  v1[21] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B58D378()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  os_log_type_t type;
  uint64_t v37;
  uint64_t v38[2];

  if (qword_256A340A0 != -1)
    swift_once();
  v1 = sub_23B60185C();
  __swift_project_value_buffer(v1, (uint64_t)qword_256A34540);
  swift_retain_n();
  v2 = sub_23B601844();
  v3 = sub_23B601B8C();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = *(_QWORD *)(v0 + 160);
    v5 = *(_QWORD *)(v0 + 168);
    type = v3;
    v6 = *(_QWORD *)(v0 + 112);
    v7 = swift_slowAlloc();
    v37 = swift_slowAlloc();
    v38[0] = v37;
    *(_DWORD *)v7 = 136446466;
    sub_23B58E8B8(v6 + OBJC_IVAR____TtC15FindMyBluetooth7Service_peerPath, v5);
    v8 = (uint64_t *)(v5 + *(int *)(v4 + 32));
    v9 = *v8;
    v10 = v8[1];
    swift_bridgeObjectRetain();
    sub_23B589184(v5);
    *(_QWORD *)(v0 + 96) = sub_23B58E160(v9, v10, v38);
    sub_23B601BC8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2082;
    swift_retain();
    v11 = sub_23B58D07C((uint64_t (*)(uint64_t))type metadata accessor for Service, (unint64_t *)&unk_256A34600, (uint64_t)&protocol conformance descriptor for Service);
    v13 = v12;
    swift_release();
    *(_QWORD *)(v0 + 104) = sub_23B58E160(v11, v13, v38);
    sub_23B601BC8();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_23B583000, v2, type, "%{public}s: Invalidated service: %{public}s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v37, -1, -1);
    MEMORY[0x23B868A2C](v7, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  if ((sub_23B601AD8() & 1) == 0)
  {
    v14 = *(_QWORD *)(v0 + 152);
    v15 = *(_QWORD *)(v0 + 120);
    v16 = *(_QWORD *)(v0 + 128);
    v17 = *(_QWORD *)(v0 + 112) + OBJC_IVAR____TtC15FindMyBluetooth7Service_discoverCharacteristicsContinuation;
    swift_beginAccess();
    sub_23B58E7A0(v17, v14);
    v18 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15);
    v19 = *(_QWORD *)(v0 + 152);
    if (v18)
    {
      sub_23B587ED4(*(_QWORD *)(v0 + 152), (uint64_t *)&unk_256A35810);
    }
    else
    {
      v21 = *(_QWORD *)(v0 + 128);
      v20 = *(_QWORD *)(v0 + 136);
      v22 = *(_QWORD *)(v0 + 120);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v21 + 16))(v20, *(_QWORD *)(v0 + 152), v22);
      sub_23B587ED4(v19, (uint64_t *)&unk_256A35810);
      sub_23B601A3C();
      sub_23B5884D4(&qword_256A34628, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
      v23 = swift_allocError();
      sub_23B601898();
      *(_QWORD *)(v0 + 88) = v23;
      sub_23B601A24();
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
    }
  }
  v24 = *(_QWORD *)(v0 + 144);
  v25 = *(_QWORD *)(v0 + 112);
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 128) + 56))(v24, 1, 1, *(_QWORD *)(v0 + 120));
  v26 = v25 + OBJC_IVAR____TtC15FindMyBluetooth7Service_discoverCharacteristicsContinuation;
  swift_beginAccess();
  sub_23B58EC70(v24, v26);
  swift_endAccess();
  *(_QWORD *)(v0 + 176) = OBJC_IVAR____TtC15FindMyBluetooth7Service_characteristics;
  swift_beginAccess();
  v27 = swift_bridgeObjectRetain();
  v28 = sub_23B58BEA0(v27);
  *(_QWORD *)(v0 + 184) = v28;
  result = swift_bridgeObjectRelease();
  if (!(v28 >> 62))
  {
    v30 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
    *(_QWORD *)(v0 + 192) = v30;
    if (v30)
      goto LABEL_12;
LABEL_18:
    v34 = *(_QWORD *)(v0 + 176);
    v35 = *(_QWORD *)(v0 + 112);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v35 + v34) = MEMORY[0x24BEE4B00];
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  swift_bridgeObjectRetain();
  v30 = sub_23B601D24();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 192) = v30;
  if (!v30)
    goto LABEL_18;
LABEL_12:
  if (v30 < 1)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v0 + 200) = 0;
    v31 = *(_QWORD *)(v0 + 184);
    if ((v31 & 0xC000000000000001) != 0)
    {
      v32 = MEMORY[0x23B868228](0);
    }
    else
    {
      v32 = *(_QWORD *)(v31 + 32);
      swift_retain();
    }
    *(_QWORD *)(v0 + 208) = v32;
    v33 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 216) = v33;
    *v33 = v0;
    v33[1] = sub_23B58D8A8;
    return sub_23B5A3DDC();
  }
  return result;
}

uint64_t sub_23B58D8A8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B58D900()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v1 = *(_QWORD *)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 192);
  swift_release();
  if (v1 + 1 == v2)
  {
    v3 = *(_QWORD *)(v0 + 176);
    v4 = *(_QWORD *)(v0 + 112);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v4 + v3) = MEMORY[0x24BEE4B00];
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 200) + 1;
    *(_QWORD *)(v0 + 200) = v6;
    v7 = *(_QWORD *)(v0 + 184);
    if ((v7 & 0xC000000000000001) != 0)
    {
      v8 = MEMORY[0x23B868228]();
    }
    else
    {
      v8 = *(_QWORD *)(v7 + 8 * v6 + 32);
      swift_retain();
    }
    *(_QWORD *)(v0 + 208) = v8;
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 216) = v9;
    *v9 = v0;
    v9[1] = sub_23B58D8A8;
    return sub_23B5A3DDC();
  }
}

uint64_t sub_23B58DA0C(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v3 + 32) = a2;
  *(_QWORD *)(v3 + 40) = v2;
  *(_BYTE *)(v3 + 140) = a1;
  *(_QWORD *)(v3 + 48) = type metadata accessor for PeerPath();
  *(_QWORD *)(v3 + 56) = swift_task_alloc();
  sub_23B601820();
  *(_QWORD *)(v3 + 64) = swift_task_alloc();
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1E8);
  *(_QWORD *)(v3 + 72) = v4;
  *(_QWORD *)(v3 + 80) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v3 + 88) = swift_task_alloc();
  *(_QWORD *)(v3 + 96) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B58DAC8()
{
  uint64_t v0;
  uint64_t Strong;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  _QWORD *v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  os_log_type_t type;
  uint64_t v31[2];

  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 104) = Strong;
  if (Strong)
  {
    v2 = objc_msgSend(*(id *)(*(_QWORD *)(v0 + 32) + 16), sel_UUID);
    CBUUID.uuidValue.getter();

    type metadata accessor for Characteristic();
    sub_23B6015D4();
    if (qword_256A340A0 != -1)
      swift_once();
    v4 = *(_QWORD *)(v0 + 88);
    v3 = *(_QWORD *)(v0 + 96);
    v5 = *(_QWORD *)(v0 + 72);
    v6 = *(_QWORD *)(v0 + 80);
    v7 = sub_23B60185C();
    __swift_project_value_buffer(v7, (uint64_t)qword_256A34540);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, v3, v5);
    swift_retain();
    v8 = sub_23B601844();
    v9 = sub_23B601B8C();
    v10 = os_log_type_enabled(v8, v9);
    v12 = *(_QWORD *)(v0 + 80);
    v11 = *(_QWORD *)(v0 + 88);
    v13 = *(_QWORD *)(v0 + 72);
    if (v10)
    {
      type = v9;
      v14 = *(_QWORD *)(v0 + 48);
      v15 = *(_QWORD *)(v0 + 56);
      v16 = *(_QWORD *)(v0 + 40);
      v27 = *(unsigned __int8 *)(v0 + 140);
      v28 = *(_QWORD *)(v0 + 80);
      v17 = swift_slowAlloc();
      v29 = swift_slowAlloc();
      v31[0] = v29;
      *(_DWORD *)v17 = 136446722;
      sub_23B58E8B8(v16 + OBJC_IVAR____TtC15FindMyBluetooth7Service_peerPath, v15);
      v18 = (uint64_t *)(v15 + *(int *)(v14 + 32));
      v26 = v13;
      v19 = *v18;
      v20 = v18[1];
      swift_bridgeObjectRetain();
      sub_23B589184(v15);
      *(_QWORD *)(v0 + 16) = sub_23B58E160(v19, v20, v31);
      sub_23B601BC8();
      swift_bridgeObjectRelease();
      swift_release();
      *(_WORD *)(v17 + 12) = 1024;
      *(_DWORD *)(v0 + 136) = v27;
      sub_23B601BC8();
      *(_WORD *)(v17 + 18) = 2082;
      sub_23B58F61C((unint64_t *)&qword_256A34658, (uint64_t *)&unk_2542FD1E8, MEMORY[0x24BE316E8]);
      v21 = sub_23B601DE4();
      *(_QWORD *)(v0 + 24) = sub_23B58E160(v21, v22, v31);
      sub_23B601BC8();
      swift_bridgeObjectRelease();
      v23 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
      v23(v11, v26);
      _os_log_impl(&dword_23B583000, v8, type, "%{public}s: Calling setNotify(%{BOOL}d) for %{public}s", (uint8_t *)v17, 0x1Cu);
      swift_arrayDestroy();
      MEMORY[0x23B868A2C](v29, -1, -1);
      MEMORY[0x23B868A2C](v17, -1, -1);
    }
    else
    {
      swift_release();
      v23 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
      v23(v11, v13);
    }

    *(_QWORD *)(v0 + 112) = v23;
    v25 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v25;
    *v25 = v0;
    v25[1] = sub_23B58DED8;
    return sub_23B58FFC0(*(_BYTE *)(v0 + 140), *(_QWORD *)(v0 + 32));
  }
  else
  {
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23B58DED8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B58DF3C()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 112);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 72);
  swift_release();
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B58DFB8()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 112);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 72);
  swift_release();
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Identifier<A>.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  _QWORD v5[2];

  v0 = sub_23B601820();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8]();
  v3 = (char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5[0] = 91;
  v5[1] = 0xE100000000000000;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1F8);
  sub_23B58F61C(&qword_256A34A00, (uint64_t *)&unk_2542FD1F8, MEMORY[0x24BE316E8]);
  sub_23B601DCC();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  sub_23B6015BC();
  shortCBUUIDDescription(uuid:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  return v5[0];
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  _QWORD v5[2];

  v0 = sub_23B601820();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5[0] = 91;
  v5[1] = 0xE100000000000000;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1E8);
  sub_23B5ABF5C();
  sub_23B601DCC();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  sub_23B6015BC();
  shortCBUUIDDescription(uuid:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  return v5[0];
}

uint64_t sub_23B58E160(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_23B58E230(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_23B58F834((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_23B58F834((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  return v7;
}

uint64_t sub_23B58E230(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_23B601BD4();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_23B58E3E8(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_23B601C88();
  if (!v8)
  {
    sub_23B601D0C();
    __break(1u);
LABEL_17:
    result = sub_23B601D54();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_23B58E3E8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_23B58E47C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_23B58E654(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_23B58E654(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_23B58E47C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_23B58E5F0(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_23B601C4C();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_23B601D0C();
      __break(1u);
LABEL_10:
      v2 = sub_23B601964();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_23B601D54();
    __break(1u);
LABEL_14:
    result = sub_23B601D0C();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

_QWORD *sub_23B58E5F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A341F0);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_23B58E654(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A341F0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_23B601D54();
  __break(1u);
  return result;
}

uint64_t sub_23B58E7A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35810);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23B58E7E8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23B587844;
  return sub_23B589740(a1, v4, v5, v6);
}

uint64_t sub_23B58E854()
{
  uint64_t v0;

  return sub_23B58C064(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t type metadata accessor for Service()
{
  uint64_t result;

  result = qword_2542FD4B8;
  if (!qword_2542FD4B8)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_23B58E89C(uint64_t a1)
{
  return sub_23B58EDF0(a1, (uint64_t *)&unk_2542FD1E8, &qword_256A34590, &qword_256A34680);
}

uint64_t sub_23B58E8B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PeerPath();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23B58E8FC()
{
  return sub_23B5884D4(qword_256A34598, (uint64_t (*)(uint64_t))type metadata accessor for Characteristic, (uint64_t)&protocol conformance descriptor for Characteristic);
}

uint64_t sub_23B58E928(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_23B5884D4(&qword_256A345F8, (uint64_t (*)(uint64_t))type metadata accessor for Service, (uint64_t)&protocol conformance descriptor for Service);
  result = sub_23B5884D4((unint64_t *)&unk_256A34600, (uint64_t (*)(uint64_t))type metadata accessor for Service, (uint64_t)&protocol conformance descriptor for Service);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_23B58E984()
{
  return sub_23B5884D4(&qword_256A34570, (uint64_t (*)(uint64_t))type metadata accessor for Service, (uint64_t)&protocol conformance descriptor for Service);
}

uint64_t sub_23B58E9B0()
{
  return type metadata accessor for Service();
}

void sub_23B58E9B8()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_23B58EBC4();
  if (v0 <= 0x3F)
  {
    type metadata accessor for PeerPath();
    if (v1 <= 0x3F)
    {
      sub_23B58EC18();
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for Service()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Service.isPrimary.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of Service.discover(characteristicIdentifiers:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 256) + *(_QWORD *)(*(_QWORD *)v1 + 256));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23B58EB10;
  return v6(a1);
}

uint64_t sub_23B58EB10(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t dispatch thunk of Service.subscript.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 264) + *(_QWORD *)(*(_QWORD *)v1 + 264));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23B58F8B8;
  return v6(a1);
}

void sub_23B58EBC4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2542FD690)
  {
    type metadata accessor for Service();
    v0 = sub_23B6015C8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2542FD690);
  }
}

void sub_23B58EC18()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2542FD520)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542FD510);
    v0 = sub_23B601BBC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2542FD520);
  }
}

uint64_t sub_23B58EC70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35810);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_23B58ECB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23B601E8C();
  sub_23B60194C();
  v4 = sub_23B601EB0();
  return sub_23B58EF38(a1, a2, v4);
}

unint64_t sub_23B58ED1C(uint64_t a1)
{
  uint64_t v2;

  sub_23B601820();
  sub_23B5884D4(&qword_2542FD220, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  v2 = sub_23B6018C8();
  return sub_23B58F018(a1, v2);
}

unint64_t sub_23B58ED88(uint64_t a1)
{
  return sub_23B58EDF0(a1, &qword_256A359A0, &qword_256A34640, &qword_256A34648);
}

unint64_t sub_23B58EDA4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23B601C04();
  return sub_23B58F290(a1, v2);
}

unint64_t sub_23B58EDD4(uint64_t a1)
{
  return sub_23B58EDF0(a1, (uint64_t *)&unk_2542FD1F8, &qword_256A34660, &qword_256A34668);
}

unint64_t sub_23B58EDF0(uint64_t a1, uint64_t *a2, unint64_t *a3, unint64_t *a4)
{
  uint64_t v8;

  __swift_instantiateConcreteTypeFromMangledName(a2);
  sub_23B58F61C(a3, a2, MEMORY[0x24BE316D0]);
  v8 = sub_23B6018C8();
  return sub_23B58F158(a1, v8, a2, a4);
}

unint64_t sub_23B58EE84(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = MEMORY[0x23B868444](*(_QWORD *)(v1 + 40), a1, 1);
  return sub_23B58F3C4(a1, v3);
}

unint64_t sub_23B58EEB8(uint64_t a1)
{
  uint64_t v2;

  sub_23B60191C();
  sub_23B601E8C();
  sub_23B60194C();
  v2 = sub_23B601EB0();
  swift_bridgeObjectRelease();
  return sub_23B58F464(a1, v2);
}

unint64_t sub_23B58EF38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_23B601DFC() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_23B601DFC() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_23B58F018(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  char v14;
  _QWORD v16[2];

  v3 = v2;
  v16[1] = a1;
  v5 = sub_23B601820();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v3 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    v13 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    do
    {
      v13(v8, *(_QWORD *)(v3 + 48) + v12 * v10, v5);
      sub_23B5884D4(&qword_256A34630, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v14 = sub_23B6018EC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if ((v14 & 1) != 0)
        break;
      v10 = (v10 + 1) & v11;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

unint64_t sub_23B58F158(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, unint64_t, uint64_t);
  char v16;
  _QWORD v18[2];
  uint64_t *v19;
  unint64_t *v20;

  v19 = a3;
  v20 = a4;
  v5 = v4;
  v18[1] = a1;
  v7 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8]();
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = -1 << *(_BYTE *)(v5 + 32);
  v12 = a2 & ~v11;
  if (((*(_QWORD *)(v5 + 64 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0)
  {
    v13 = ~v11;
    v14 = *(_QWORD *)(v8 + 72);
    v15 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
    do
    {
      v15(v10, *(_QWORD *)(v5 + 48) + v14 * v12, v7);
      sub_23B58F61C(v20, v19, MEMORY[0x24BE316D8]);
      v16 = sub_23B6018EC();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      if ((v16 & 1) != 0)
        break;
      v12 = (v12 + 1) & v13;
    }
    while (((*(_QWORD *)(v5 + 64 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0);
  }
  return v12;
}

unint64_t sub_23B58F290(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_23B58F354(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x23B8681D4](v9, a1);
      sub_23B58F390((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_23B58F354(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_23B58F390(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 8))();
  return a1;
}

unint64_t sub_23B58F3C4(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_23B58F464(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_23B60191C();
    v8 = v7;
    if (v6 == sub_23B60191C() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_23B601DFC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_23B60191C();
          v15 = v14;
          if (v13 == sub_23B60191C() && v15 == v16)
            break;
          v18 = sub_23B601DFC();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

uint64_t sub_23B58F5D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PeerPath();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23B58F61C(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x23B868978](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23B58F65C()
{
  return objectdestroyTm_0((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_23B58F66C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_23B587FA4;
  return sub_23B58C318(a1, v4, v5, v7, v6);
}

uint64_t sub_23B58F6E4(uint64_t a1)
{
  uint64_t *v1;

  return sub_23B58B45C(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_23B58F6F0(uint64_t result)
{
  if (result != 1)
    return swift_release();
  return result;
}

uint64_t sub_23B58F700()
{
  return objectdestroyTm_0((void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t objectdestroyTm_0(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_unknownObjectRelease();
  a1(*(_QWORD *)(v1 + 32));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B58F75C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_23B587844;
  return sub_23B58B61C(a1, v4, v5, v6, v7);
}

uint64_t sub_23B58F7DC(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_0(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_23B58F834(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_23B58F8BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t result;
  int64_t v16;
  unint64_t v17;
  unint64_t i;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t (*v31)(unint64_t, char *, uint64_t);
  char *v32;
  char *v33;
  unint64_t v34;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34678);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1F8);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v33 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v32 = (char *)&v29 - v9;
  v10 = a1 + 64;
  v11 = 1 << *(_BYTE *)(a1 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(a1 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v16 = 0;
  v34 = MEMORY[0x24BEE4AF8];
  if (v13)
    goto LABEL_7;
LABEL_8:
  while (2)
  {
    v19 = v16 + 1;
    if (!__OFADD__(v16, 1))
    {
      if (v19 < v14)
      {
        v20 = *(_QWORD *)(v10 + 8 * v19);
        ++v16;
        if (v20)
          goto LABEL_23;
        v16 = v19 + 1;
        if (v19 + 1 >= v14)
          goto LABEL_32;
        v20 = *(_QWORD *)(v10 + 8 * v16);
        if (v20)
          goto LABEL_23;
        v16 = v19 + 2;
        if (v19 + 2 >= v14)
          goto LABEL_32;
        v20 = *(_QWORD *)(v10 + 8 * v16);
        if (v20)
          goto LABEL_23;
        v16 = v19 + 3;
        if (v19 + 3 >= v14)
          goto LABEL_32;
        v20 = *(_QWORD *)(v10 + 8 * v16);
        if (v20)
        {
LABEL_23:
          v13 = (v20 - 1) & v20;
          for (i = __clz(__rbit64(v20)) + (v16 << 6); ; i = v17 | (v16 << 6))
          {
            v22 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * i);
            if (!v22)
              break;
            (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v4, v22 + OBJC_IVAR____TtC15FindMyBluetooth7Service_id, v5);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
              goto LABEL_6;
            v23 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
            v23(v32, v4, v5);
            v31 = (uint64_t (*)(unint64_t, char *, uint64_t))v23;
            v23(v33, v32, v5);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v34 = sub_23B5857B0(0, *(_QWORD *)(v34 + 16) + 1, 1, v34);
            v25 = *(_QWORD *)(v34 + 16);
            v24 = *(_QWORD *)(v34 + 24);
            v26 = v25 + 1;
            if (v25 >= v24 >> 1)
            {
              v29 = *(_QWORD *)(v34 + 16);
              v30 = v25 + 1;
              v28 = sub_23B5857B0(v24 > 1, v25 + 1, 1, v34);
              v25 = v29;
              v26 = v30;
              v34 = v28;
            }
            v27 = v34;
            *(_QWORD *)(v34 + 16) = v26;
            result = v31(v27+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v25, v33, v5);
            if (!v13)
              goto LABEL_8;
LABEL_7:
            v17 = __clz(__rbit64(v13));
            v13 &= v13 - 1;
          }
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
LABEL_6:
          result = sub_23B587ED4((uint64_t)v4, &qword_256A34678);
          if (!v13)
            continue;
          goto LABEL_7;
        }
        v21 = v19 + 4;
        if (v21 < v14)
        {
          v20 = *(_QWORD *)(v10 + 8 * v21);
          if (v20)
          {
            v16 = v21;
            goto LABEL_23;
          }
          while (1)
          {
            v16 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_34;
            if (v16 >= v14)
              break;
            v20 = *(_QWORD *)(v10 + 8 * v16);
            ++v21;
            if (v20)
              goto LABEL_23;
          }
        }
      }
LABEL_32:
      swift_release();
      return v34;
    }
    break;
  }
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_23B58FC18(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[4] = a1;
  v2[5] = v1;
  v2[6] = type metadata accessor for PeerPath();
  v2[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B58FC74()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t (*v15)(void);
  _QWORD *v17;
  NSObject *log;
  uint64_t v19;
  uint64_t v20;

  v1 = *(void **)(v0[5] + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_underlyingObject);
  if (objc_msgSend(v1, sel_state) == (id)2)
  {
    v2 = *(void **)(v0[4] + 16);
    if (qword_256A340A8 != -1)
      swift_once();
    v3 = sub_23B60185C();
    __swift_project_value_buffer(v3, (uint64_t)qword_256A346C0);
    swift_retain_n();
    v4 = v2;
    v5 = sub_23B601844();
    v6 = sub_23B601B8C();
    if (os_log_type_enabled(v5, v6))
    {
      log = v5;
      v7 = v0[6];
      v8 = v0[7];
      v9 = v0[5];
      v10 = swift_slowAlloc();
      v17 = (_QWORD *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      v20 = v19;
      *(_DWORD *)v10 = 136446466;
      sub_23B58E8B8(v9 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_peerPath, v8);
      v11 = (uint64_t *)(v8 + *(int *)(v7 + 32));
      v13 = *v11;
      v12 = v11[1];
      swift_bridgeObjectRetain();
      sub_23B5A3CA0(v8, (uint64_t (*)(_QWORD))type metadata accessor for PeerPath);
      v0[2] = sub_23B58E160(v13, v12, &v20);
      sub_23B601BC8();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v10 + 12) = 2112;
      v0[3] = v4;
      v14 = v4;
      sub_23B601BC8();
      *v17 = v4;

      v5 = log;
      _os_log_impl(&dword_23B583000, log, v6, "%{public}s: calling readValue() for %@", (uint8_t *)v10, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35D50);
      swift_arrayDestroy();
      MEMORY[0x23B868A2C](v17, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x23B868A2C](v19, -1, -1);
      MEMORY[0x23B868A2C](v10, -1, -1);
    }
    else
    {
      swift_release_n();

    }
    objc_msgSend(v1, sel_readValueForCharacteristic_, v4);
    swift_task_dealloc();
    v15 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    v15 = (uint64_t (*)(void))v0[1];
  }
  return v15();
}

uint64_t sub_23B58FFC0(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v3 + 32) = a2;
  *(_QWORD *)(v3 + 40) = v2;
  *(_BYTE *)(v3 + 108) = a1;
  *(_QWORD *)(v3 + 48) = type metadata accessor for PeerPath();
  *(_QWORD *)(v3 + 56) = swift_task_alloc();
  sub_23B601820();
  *(_QWORD *)(v3 + 64) = swift_task_alloc();
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1E8);
  *(_QWORD *)(v3 + 72) = v4;
  *(_QWORD *)(v3 + 80) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v3 + 88) = swift_task_alloc();
  *(_QWORD *)(v3 + 96) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B59007C()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t (*v25)(void);
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  os_log_type_t type;
  void *v34;
  void *v35;
  uint64_t v36[2];

  v1 = *(void **)(*(_QWORD *)(v0 + 40) + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_underlyingObject);
  if (objc_msgSend(v1, sel_state) == (id)2)
  {
    v35 = *(void **)(*(_QWORD *)(v0 + 32) + 16);
    v2 = objc_msgSend(v35, sel_UUID);
    CBUUID.uuidValue.getter();

    type metadata accessor for Characteristic();
    sub_23B6015D4();
    if (qword_256A340A8 != -1)
      swift_once();
    v4 = *(_QWORD *)(v0 + 88);
    v3 = *(_QWORD *)(v0 + 96);
    v6 = *(_QWORD *)(v0 + 72);
    v5 = *(_QWORD *)(v0 + 80);
    v7 = sub_23B60185C();
    __swift_project_value_buffer(v7, (uint64_t)qword_256A346C0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v3, v6);
    swift_retain();
    v8 = sub_23B601844();
    v9 = sub_23B601B8C();
    v10 = os_log_type_enabled(v8, v9);
    v12 = *(_QWORD *)(v0 + 80);
    v11 = *(_QWORD *)(v0 + 88);
    v13 = *(_QWORD *)(v0 + 72);
    if (v10)
    {
      v31 = *(_QWORD *)(v0 + 80);
      type = v9;
      v14 = *(_QWORD *)(v0 + 48);
      v15 = *(_QWORD *)(v0 + 56);
      v16 = *(_QWORD *)(v0 + 40);
      v30 = *(unsigned __int8 *)(v0 + 108);
      v34 = v1;
      v17 = swift_slowAlloc();
      v32 = swift_slowAlloc();
      v36[0] = v32;
      *(_DWORD *)v17 = 136446722;
      sub_23B58E8B8(v16 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_peerPath, v15);
      v18 = (uint64_t *)(v15 + *(int *)(v14 + 32));
      v29 = v11;
      v20 = *v18;
      v19 = v18[1];
      swift_bridgeObjectRetain();
      sub_23B5A3CA0(v15, (uint64_t (*)(_QWORD))type metadata accessor for PeerPath);
      *(_QWORD *)(v0 + 16) = sub_23B58E160(v20, v19, v36);
      sub_23B601BC8();
      swift_bridgeObjectRelease();
      swift_release();
      *(_WORD *)(v17 + 12) = 1024;
      *(_DWORD *)(v0 + 104) = v30;
      sub_23B601BC8();
      *(_WORD *)(v17 + 18) = 2082;
      sub_23B5A2D9C((unint64_t *)&qword_256A34658, (uint64_t *)&unk_2542FD1E8);
      v21 = sub_23B601DE4();
      *(_QWORD *)(v0 + 24) = sub_23B58E160(v21, v22, v36);
      sub_23B601BC8();
      swift_bridgeObjectRelease();
      v23 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
      v23(v29, v13);
      _os_log_impl(&dword_23B583000, v8, type, "%{public}s: calling setNotifyValue(%{BOOL}d) for %{public}s", (uint8_t *)v17, 0x1Cu);
      swift_arrayDestroy();
      MEMORY[0x23B868A2C](v32, -1, -1);
      v24 = v17;
      v1 = v34;
      MEMORY[0x23B868A2C](v24, -1, -1);
    }
    else
    {
      swift_release();
      v23 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
      v23(v11, v13);
    }

    v26 = *(_QWORD *)(v0 + 96);
    v27 = *(_QWORD *)(v0 + 72);
    objc_msgSend(v1, sel_setNotifyValue_forCharacteristic_, *(unsigned __int8 *)(v0 + 108), v35);
    v23(v26, v27);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v25 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v25 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v25();
}

uint64_t sub_23B5904A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[12] = a4;
  v5[13] = v4;
  v5[10] = a2;
  v5[11] = a3;
  v5[9] = a1;
  v5[14] = type metadata accessor for PeerPath();
  v5[15] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B59050C()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void);
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void *v28;
  NSObject *v29;
  os_log_type_t v30;
  _BOOL4 v31;
  unint64_t v32;
  uint64_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v39;
  uint64_t v40;
  NSObject *log;
  void *v42;
  uint64_t v43;
  uint64_t v44[2];

  v1 = *(void **)(v0[13] + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_underlyingObject);
  if (objc_msgSend(v1, sel_state) == (id)2)
  {
    v43 = *(_QWORD *)(v0[11] + 16);
    if (qword_256A340A8 != -1)
      swift_once();
    v2 = v0[9];
    v3 = v0[10];
    v4 = sub_23B60185C();
    __swift_project_value_buffer(v4, (uint64_t)qword_256A346C0);
    swift_retain_n();
    sub_23B5A294C(v2, v3);
    swift_retain();
    sub_23B5A294C(v2, v3);
    v5 = sub_23B601844();
    v6 = sub_23B601B8C();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = v0[14];
      v8 = v0[15];
      v9 = v0[13];
      v39 = v0[12];
      log = v5;
      v10 = v0[9];
      v11 = v0[10];
      v42 = v1;
      v12 = swift_slowAlloc();
      v40 = swift_slowAlloc();
      v44[0] = v40;
      *(_DWORD *)v12 = 136446978;
      sub_23B58E8B8(v9 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_peerPath, v8);
      v13 = (uint64_t *)(v8 + *(int *)(v7 + 32));
      v15 = *v13;
      v14 = v13[1];
      swift_bridgeObjectRetain();
      sub_23B5A3CA0(v8, (uint64_t (*)(_QWORD))type metadata accessor for PeerPath);
      v0[5] = sub_23B58E160(v15, v14, v44);
      sub_23B601BC8();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v12 + 12) = 2082;
      sub_23B5A294C(v10, v11);
      v16 = sub_23B6016F4();
      v18 = v17;
      sub_23B5A2990(v10, v11);
      v0[6] = sub_23B58E160(v16, v18, v44);
      sub_23B601BC8();
      swift_bridgeObjectRelease();
      sub_23B5A2990(v10, v11);
      sub_23B5A2990(v10, v11);
      *(_WORD *)(v12 + 22) = 2048;
      v0[7] = v39;
      sub_23B601BC8();
      *(_WORD *)(v12 + 32) = 2082;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
      sub_23B5A2D9C(&qword_256A34AD0, &qword_256A359A0);
      v19 = sub_23B601DE4();
      v0[8] = sub_23B58E160(v19, v20, v44);
      sub_23B601BC8();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_23B583000, log, v6, "%{public}s: calling writeValue(%{public}s),  type: %ld for %{public}s)", (uint8_t *)v12, 0x2Au);
      swift_arrayDestroy();
      MEMORY[0x23B868A2C](v40, -1, -1);
      v21 = v12;
      v1 = v42;
      MEMORY[0x23B868A2C](v21, -1, -1);

    }
    else
    {
      v24 = v0[9];
      v23 = v0[10];
      swift_release_n();
      sub_23B5A2990(v24, v23);
      sub_23B5A2990(v24, v23);
      swift_release_n();

    }
    v25 = v0[12];
    v27 = v0[9];
    v26 = v0[10];
    v28 = (void *)sub_23B60173C();
    objc_msgSend(v1, sel_writeValue_forCharacteristic_type_, v28, v43, v25);

    sub_23B5A294C(v27, v26);
    sub_23B5A294C(v27, v26);
    v29 = sub_23B601844();
    v30 = sub_23B601B68();
    v31 = os_log_type_enabled(v29, v30);
    v33 = v0[9];
    v32 = v0[10];
    if (v31)
    {
      v34 = (uint8_t *)swift_slowAlloc();
      v35 = swift_slowAlloc();
      v44[0] = v35;
      *(_DWORD *)v34 = 136315138;
      v0[2] = v33;
      v0[3] = v32;
      sub_23B5A2D58();
      v36 = sub_23B601670();
      v0[4] = sub_23B58E160(v36, v37, v44);
      sub_23B601BC8();
      swift_bridgeObjectRelease();
      sub_23B5A2990(v33, v32);
      sub_23B5A2990(v33, v32);
      _os_log_impl(&dword_23B583000, v29, v30, "data: %s", v34, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B868A2C](v35, -1, -1);
      MEMORY[0x23B868A2C](v34, -1, -1);
    }
    else
    {
      sub_23B5A2990(v0[9], v0[10]);
      sub_23B5A2990(v33, v32);
    }

    swift_task_dealloc();
    v22 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    v22 = (uint64_t (*)(void))v0[1];
  }
  return v22();
}

uint64_t sub_23B590AEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_23B60185C();
  __swift_allocate_value_buffer(v0, qword_256A346C0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_256A346C0);
  if (qword_2542FD4A0 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_2542FD480);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t Peripheral.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_id;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_23B590BC4(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A346E0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B5A3C5C(a1, (uint64_t)v6, (uint64_t *)&unk_256A346E0);
  v7 = *a2 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_macAddress;
  swift_beginAccess();
  sub_23B5A2728((uint64_t)v6, v7, (uint64_t *)&unk_256A346E0);
  return swift_endAccess();
}

uint64_t sub_23B590C7C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_macAddress;
  swift_beginAccess();
  return sub_23B5A3C5C(v3, a1, (uint64_t *)&unk_256A346E0);
}

uint64_t sub_23B590CD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_macAddress;
  swift_beginAccess();
  sub_23B5A2728(a1, v3, (uint64_t *)&unk_256A346E0);
  return swift_endAccess();
}

uint64_t (*sub_23B590D34())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_23B590D7C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_advertisementData);
  swift_beginAccess();
  *v3 = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23B590DE4()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_23B590E2C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_advertisementData);
  swift_beginAccess();
  *v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_23B590E7C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

id sub_23B590EC0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  id result;
  char v4;

  result = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_underlyingObject), sel_state);
  if ((unint64_t)result < 4)
    v4 = (_BYTE)result + 1;
  else
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_23B590F00@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_lastSeen;
  swift_beginAccess();
  v4 = sub_23B601790();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, v3, v4);
}

uint64_t sub_23B590F68(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = sub_23B601790();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v8 = *a2 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_lastSeen;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 40))(v8, v7, v4);
  return swift_endAccess();
}

uint64_t sub_23B59102C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_lastSeen;
  swift_beginAccess();
  v4 = sub_23B601790();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_23B591090(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_lastSeen;
  swift_beginAccess();
  v4 = sub_23B601790();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*sub_23B5910FC())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_23B591140()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_rssi;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_23B591188(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = v2 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_rssi;
  result = swift_beginAccess();
  *(_QWORD *)v5 = a1;
  *(_BYTE *)(v5 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_23B5911E4())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t Peripheral.isConnectable.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_isConnectable);
}

BOOL sub_23B591238()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_underlyingObject), sel_state) == (id)2;
}

id sub_23B591268()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_underlyingObject), sel_isConnectedToSystem);
}

uint64_t sub_23B591290()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_underlyingObject);
  if (objc_msgSend(v1, sel_state) == (id)2)
    return 1;
  else
    return (uint64_t)objc_msgSend(v1, sel_isConnectedToSystem);
}

uint64_t sub_23B5912E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_23B5912FC()
{
  uint64_t v0;
  uint64_t Strong;

  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 32) = Strong;
  if (Strong)
    return swift_task_switch();
  type metadata accessor for CentralManager.Error();
  sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
  swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5913C4()
{
  uint64_t *v0;

  sub_23B5CD7BC(v0[3], v0[2]);
  v0[5] = 0;
  return swift_task_switch();
}

uint64_t sub_23B591424()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B591458()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23B59148C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t, uint64_t);
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  _QWORD *v29;
  id v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  os_log_t log;
  os_log_type_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  uint64_t v63[3];

  v9 = v7;
  *(_QWORD *)(v8 + 152) = a3;
  *(_QWORD *)(v8 + 160) = v7;
  *(_QWORD *)(v8 + 136) = a1;
  *(_QWORD *)(v8 + 144) = a2;
  v11 = sub_23B60185C();
  *(_QWORD *)(v8 + 168) = v11;
  v49 = *(_QWORD *)(v11 - 8);
  v50 = v11;
  v52 = swift_task_alloc();
  *(_QWORD *)(v8 + 176) = v52;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A34AE0);
  v60 = swift_task_alloc();
  *(_QWORD *)(v8 + 184) = v60;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A34678);
  v59 = swift_task_alloc();
  *(_QWORD *)(v8 + 192) = v59;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD1E0);
  v42 = *(_QWORD *)(v12 - 8);
  log = (os_log_t)v12;
  v58 = swift_task_alloc();
  *(_QWORD *)(v8 + 200) = v58;
  type metadata accessor for PeerPath();
  v57 = swift_task_alloc();
  *(_QWORD *)(v8 + 208) = v57;
  v13 = sub_23B601790();
  v40 = *(_QWORD *)(v13 - 8);
  v41 = v13;
  v53 = swift_task_alloc();
  *(_QWORD *)(v8 + 216) = v53;
  sub_23B601820();
  *(_QWORD *)(v8 + 224) = swift_task_alloc();
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  v48 = *(_QWORD *)(v39 - 8);
  v54 = swift_task_alloc();
  *(_QWORD *)(v8 + 232) = v54;
  swift_defaultActor_initialize();
  v14 = v7 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_macAddress;
  v15 = sub_23B601634();
  v38 = v14;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = (_QWORD *)(v7 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_advertisementData);
  *(_QWORD *)(v7 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_advertisementData) = 0;
  v17 = v7 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_rssi;
  *(_QWORD *)v17 = 0;
  *(_BYTE *)(v17 + 8) = 1;
  swift_weakInit();
  v18 = v7 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_pairingContinuation;
  v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD510);
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56);
  v20(v18, 1, 1, v19);
  v20(v7 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_connectContinuation, 1, 1, v19);
  v20(v7 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_cancelConnectContinuation, 1, 1, v19);
  v20(v7 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_discoverServicesContinuation, 1, 1, v19);
  *(_QWORD *)(v7 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_services) = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v7 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_delegateTrampoline) = 0;
  *(_QWORD *)(v7 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_autoDiscoverCount) = 0;
  v21 = *(void **)(a2 + 16);
  *(_QWORD *)(v8 + 240) = v21;
  v22 = v21;
  v23 = objc_msgSend(v22, sel_delegate);
  swift_unknownObjectRelease();
  if (!v23)
  {
    v34 = objc_msgSend(v22, sel_identifier);
    sub_23B6017FC();

    type metadata accessor for Peripheral();
    sub_23B6015D4();
    v51 = v7 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_id;
    (*(void (**)(void))(v48 + 32))();
    swift_weakAssign();
    *(_QWORD *)(v7 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_underlyingObject) = v22;
    swift_beginAccess();
    v35 = v22;
    sub_23B5A2D10(a3, v38);
    swift_endAccess();
    *(_BYTE *)(v7 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_isConnectable) = a4 & 1;
    swift_beginAccess();
    *v16 = a5;
    swift_bridgeObjectRelease();
    swift_beginAccess();
    *(_QWORD *)v17 = a6;
    *(_BYTE *)(v17 + 8) = a7 & 1;
    sub_23B601784();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 32))(v7 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_lastSeen, v53, v41);
    (*(void (**)(uint64_t, uint64_t, os_log_t))(v42 + 16))(v58, a1 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_id, log);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16))(v54, v51, v39);
    v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1F8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v59, 1, 1, v36);
    v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1E8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v60, 1, 1, v37);
    sub_23B5C9F08(v58, v54, v59, v60, v57);
    sub_23B58F5D8(v57, v7 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_peerPath);
    swift_task_switch();
    return;
  }
  swift_bridgeObjectRelease();
  if (qword_256A340A8 != -1)
    swift_once();
  v24 = __swift_project_value_buffer(v50, (uint64_t)qword_256A346C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 16))(v52, v24, v50);
  v25 = v22;
  v26 = sub_23B601844();
  v27 = sub_23B601B74();
  if (!os_log_type_enabled(v26, v27))
  {

    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v52, v50);
    goto LABEL_9;
  }
  v46 = v27;
  v28 = swift_slowAlloc();
  v29 = (_QWORD *)swift_slowAlloc();
  v62 = swift_slowAlloc();
  v63[0] = v62;
  *(_DWORD *)v28 = 138412546;
  *(_QWORD *)(v8 + 104) = v25;
  v30 = v25;
  sub_23B601BC8();
  *v29 = v25;

  *(_WORD *)(v28 + 12) = 2080;
  v31 = objc_msgSend(v30, sel_delegate);
  if (v31)
  {
    *(_QWORD *)(v8 + 120) = v31;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A34AE8);
    v32 = sub_23B601928();
    *(_QWORD *)(v8 + 112) = sub_23B58E160(v32, v33, v63);
    sub_23B601BC8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B583000, v26, v46, "CBPeripheral %@ already has delegate: %s", (uint8_t *)v28, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35D50);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v29, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v62, -1, -1);
    MEMORY[0x23B868A2C](v28, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v52, v50);
LABEL_9:
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();

    sub_23B587ED4(v9 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_macAddress, (uint64_t *)&unk_256A346E0);
    swift_bridgeObjectRelease();
    swift_weakDestroy();
    sub_23B587ED4(v9 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_pairingContinuation, (uint64_t *)&unk_256A35810);
    sub_23B587ED4(v9 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_connectContinuation, (uint64_t *)&unk_256A35810);
    sub_23B587ED4(v9 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_cancelConnectContinuation, (uint64_t *)&unk_256A35810);
    sub_23B587ED4(v9 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_discoverServicesContinuation, (uint64_t *)&unk_256A35810);
    swift_bridgeObjectRelease();

    type metadata accessor for Peripheral();
    swift_defaultActor_destroy();
    swift_release();
    swift_release();
    sub_23B587ED4(a3, (uint64_t *)&unk_256A346E0);
    swift_deallocPartialClassInstance();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    (*(void (**)(void))(v8 + 8))();
    return;
  }

  __break(1u);
}

uint64_t sub_23B591E1C()
{
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23B591E5C()
{
  _QWORD *v0;
  void *v1;
  objc_class *v2;
  id v3;

  v1 = *(void **)(v0[17] + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_delegateQueue);
  v0[31] = v1;
  v2 = (objc_class *)type metadata accessor for DelegateTrampoline_CBPeripheralPrivateDelegate();
  v0[32] = v2;
  v0[33] = objc_allocWithZone(v2);
  v3 = v1;
  return swift_task_switch();
}

uint64_t sub_23B591EBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  void *v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  void *v11;
  uint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v20;
  uint64_t v21;
  uint64_t v22;

  v2 = *(_QWORD *)(v0 + 256);
  v1 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 248);
  v4 = *(_QWORD *)(v0 + 160);
  swift_weakInit();
  swift_weakAssign();
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15FindMyBluetooth46DelegateTrampoline_CBPeripheralPrivateDelegate_delegateQueue) = v3;
  *(_QWORD *)(v0 + 88) = v1;
  *(_QWORD *)(v0 + 96) = v2;
  v5 = objc_msgSendSuper2((objc_super *)(v0 + 88), sel_init);
  swift_release();
  v6 = OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_delegateTrampoline;
  v7 = *(void **)(v4 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_delegateTrampoline);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_delegateTrampoline) = v5;

  objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_underlyingObject), sel_setDelegate_, *(_QWORD *)(v4 + v6));
  if (qword_256A340A8 != -1)
    swift_once();
  __swift_project_value_buffer(*(_QWORD *)(v0 + 168), (uint64_t)qword_256A346C0);
  swift_retain_n();
  v8 = sub_23B601844();
  v9 = sub_23B601B68();
  v10 = os_log_type_enabled(v8, v9);
  v11 = *(void **)(v0 + 240);
  v12 = *(_QWORD *)(v0 + 152);
  if (v10)
  {
    v21 = *(_QWORD *)(v0 + 152);
    v20 = *(void **)(v0 + 240);
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v22 = v14;
    *(_DWORD *)v13 = 136315138;
    swift_retain();
    v15 = sub_23B598BAC((uint64_t (*)(uint64_t))type metadata accessor for Peripheral, &qword_2542FD268, (uint64_t)&protocol conformance descriptor for Peripheral);
    v17 = v16;
    swift_release();
    *(_QWORD *)(v0 + 128) = sub_23B58E160(v15, v17, &v22);
    sub_23B601BC8();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_23B583000, v8, v9, "%s init", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v14, -1, -1);
    MEMORY[0x23B868A2C](v13, -1, -1);
    swift_release();
    swift_release();

    v18 = v21;
  }
  else
  {
    swift_release();
    swift_release();

    swift_release_n();
    v18 = v12;
  }
  sub_23B587ED4(v18, (uint64_t *)&unk_256A346E0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 160));
}

uint64_t Peripheral.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v1 = v0;
  v2 = OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_underlyingObject;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_underlyingObject), sel_setDelegate_, 0);
  if (qword_256A340A8 != -1)
    swift_once();
  v3 = sub_23B60185C();
  __swift_project_value_buffer(v3, (uint64_t)qword_256A346C0);
  swift_retain_n();
  v4 = sub_23B601844();
  v5 = sub_23B601B68();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v16 = v7;
    *(_DWORD *)v6 = 136315138;
    swift_retain();
    v8 = sub_23B598BAC((uint64_t (*)(uint64_t))type metadata accessor for Peripheral, &qword_2542FD268, (uint64_t)&protocol conformance descriptor for Peripheral);
    v10 = v9;
    swift_release();
    sub_23B58E160(v8, v10, &v16);
    sub_23B601BC8();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_23B583000, v4, v5, "%s deinit", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v7, -1, -1);
    MEMORY[0x23B868A2C](v6, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  v11 = v1 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_id;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  sub_23B587ED4(v1 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_macAddress, (uint64_t *)&unk_256A346E0);
  swift_bridgeObjectRelease();
  v13 = v1 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_lastSeen;
  v14 = sub_23B601790();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  sub_23B5A3CA0(v1 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_peerPath, (uint64_t (*)(_QWORD))type metadata accessor for PeerPath);
  swift_weakDestroy();

  sub_23B587ED4(v1 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_pairingContinuation, (uint64_t *)&unk_256A35810);
  sub_23B587ED4(v1 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_connectContinuation, (uint64_t *)&unk_256A35810);
  sub_23B587ED4(v1 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_cancelConnectContinuation, (uint64_t *)&unk_256A35810);
  sub_23B587ED4(v1 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_discoverServicesContinuation, (uint64_t *)&unk_256A35810);
  swift_bridgeObjectRelease();

  swift_defaultActor_destroy();
  return v1;
}

uint64_t Peripheral.__deallocating_deinit()
{
  Peripheral.deinit();
  return swift_defaultActor_deallocate();
}

uint64_t sub_23B59252C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A34708);
  *(_QWORD *)(v1 + 24) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B592588()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 24);
  *(_BYTE *)(v0 + 48) = 18;
  v2 = type metadata accessor for Peripheral.Options();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v3;
  *v3 = v0;
  v3[1] = sub_23B592608;
  return sub_23B5926CC((_BYTE *)(v0 + 48), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23B592608()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 24);
  v3 = *v1;
  *(_QWORD *)(v3 + 40) = v0;
  swift_task_dealloc();
  sub_23B587ED4(v2, &qword_256A34708);
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_23B592698()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5926CC(_BYTE *a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 40) = a2;
  *(_QWORD *)(v3 + 48) = v2;
  *(_QWORD *)(v3 + 56) = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A34708);
  *(_QWORD *)(v3 + 64) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35810);
  *(_QWORD *)(v3 + 72) = swift_task_alloc();
  *(_BYTE *)(v3 + 184) = *a1;
  return swift_task_switch();
}

uint64_t sub_23B592760()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t Strong;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;

  v1 = *(void **)(*(_QWORD *)(v0 + 48) + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_underlyingObject);
  *(_QWORD *)(v0 + 80) = v1;
  if (objc_msgSend(v1, sel_state) != (id)2)
  {
    if (*(_BYTE *)(*(_QWORD *)(v0 + 48) + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_isConnectable) == 1
      && (*(_QWORD *)(v0 + 88) = OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_owningCentralManager,
          v2 = swift_weakLoadStrong(),
          (*(_QWORD *)(v0 + 96) = v2) != 0))
    {
      v3 = *(_QWORD *)(v0 + 72);
      v4 = *(_QWORD *)(v0 + 48) + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_connectContinuation;
      swift_beginAccess();
      sub_23B5A3C5C(v4, v3, (uint64_t *)&unk_256A35810);
      v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD510);
      LODWORD(v4) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 1, v5);
      sub_23B587ED4(v3, (uint64_t *)&unk_256A35810);
      if ((_DWORD)v4 == 1)
      {
        v6 = *(_QWORD *)(v0 + 64);
        sub_23B5A3C5C(*(_QWORD *)(v0 + 40), v6, &qword_256A34708);
        v7 = type metadata accessor for Peripheral.Options();
        v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7);
        v9 = *(uint64_t **)(v0 + 64);
        if (v8 == 1)
        {
          sub_23B587ED4((uint64_t)v9, &qword_256A34708);
        }
        else
        {
          v10 = *v9;
          sub_23B5A3CA0((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for Peripheral.Options);
          if ((v10 & 2) != 0)
          {
            v13 = *(_QWORD *)(v0 + 96);
            v14 = *(_BYTE *)(v0 + 184);
            v15 = *(_QWORD *)(v0 + 48);
            v16 = *(_QWORD *)(v0 + 56);
            v17 = *(_QWORD *)(v0 + 40);
            v18 = swift_task_alloc();
            *(_QWORD *)(v0 + 152) = v18;
            *(_QWORD *)(v18 + 16) = v15;
            *(_BYTE *)(v18 + 24) = v14;
            *(_QWORD *)(v18 + 32) = v17;
            *(_QWORD *)(v18 + 40) = v13;
            *(_QWORD *)(v18 + 48) = v16;
            v19 = swift_task_alloc();
            *(_QWORD *)(v0 + 160) = v19;
            *(_QWORD *)(v19 + 16) = v15;
            *(_QWORD *)(v19 + 24) = v16;
            sub_23B5884D4(&qword_2542FD260, (uint64_t (*)(uint64_t))type metadata accessor for Peripheral, (uint64_t)&protocol conformance descriptor for Peripheral);
            v20 = (_QWORD *)swift_task_alloc();
            *(_QWORD *)(v0 + 168) = v20;
            *v20 = v0;
            v20[1] = sub_23B593074;
            return sub_23B601E08();
          }
        }
        Strong = swift_weakLoadStrong();
        *(_QWORD *)(v0 + 104) = Strong;
        if (Strong)
          return swift_task_switch();
      }
      type metadata accessor for CentralManager.Error();
      sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      swift_release();
    }
    else
    {
      type metadata accessor for CentralManager.Error();
      sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B592B78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 104) + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_pairingAgent);
  *(_QWORD *)(v0 + 112) = v1;
  if (v1)
  {
    swift_retain();
    return swift_task_switch();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23B592BD0()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 185) = objc_msgSend(*(id *)(*(_QWORD *)(v0 + 112)+ OBJC_IVAR____TtC15FindMyBluetooth12PairingAgent_underlyingObject), sel_isPeerPaired_, *(_QWORD *)(v0 + 80));
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23B592C38()
{
  uint64_t v0;
  int v1;
  uint64_t Strong;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v1 = *(unsigned __int8 *)(v0 + 185);
  swift_release();
  if (v1 == 1)
  {
    Strong = swift_weakLoadStrong();
    *(_QWORD *)(v0 + 120) = Strong;
    if (Strong)
    {
      return swift_task_switch();
    }
    else
    {
      type metadata accessor for CentralManager.Error();
      sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      swift_release();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 96);
    v5 = *(_BYTE *)(v0 + 184);
    v6 = *(_QWORD *)(v0 + 48);
    v7 = *(_QWORD *)(v0 + 56);
    v8 = *(_QWORD *)(v0 + 40);
    v9 = swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v9;
    *(_QWORD *)(v9 + 16) = v6;
    *(_BYTE *)(v9 + 24) = v5;
    *(_QWORD *)(v9 + 32) = v8;
    *(_QWORD *)(v9 + 40) = v4;
    *(_QWORD *)(v9 + 48) = v7;
    v10 = swift_task_alloc();
    *(_QWORD *)(v0 + 160) = v10;
    *(_QWORD *)(v10 + 16) = v6;
    *(_QWORD *)(v10 + 24) = v7;
    sub_23B5884D4(&qword_2542FD260, (uint64_t (*)(uint64_t))type metadata accessor for Peripheral, (uint64_t)&protocol conformance descriptor for Peripheral);
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 168) = v11;
    *v11 = v0;
    v11[1] = sub_23B593074;
    return sub_23B601E08();
  }
}

void sub_23B592E10()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0[15] + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_pairingAgent);
  v0[16] = v1;
  if (v1)
  {
    swift_retain();
    v2 = (_QWORD *)swift_task_alloc();
    v0[17] = (uint64_t)v2;
    *v2 = v0;
    v2[1] = sub_23B592E84;
    sub_23B5C507C(v0[6]);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_23B592E84()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_23B592EF8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  swift_release();
  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_BYTE *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 40);
  v6 = swift_task_alloc();
  *(_QWORD *)(v0 + 152) = v6;
  *(_QWORD *)(v6 + 16) = v3;
  *(_BYTE *)(v6 + 24) = v2;
  *(_QWORD *)(v6 + 32) = v5;
  *(_QWORD *)(v6 + 40) = v1;
  *(_QWORD *)(v6 + 48) = v4;
  v7 = swift_task_alloc();
  *(_QWORD *)(v0 + 160) = v7;
  *(_QWORD *)(v7 + 16) = v3;
  *(_QWORD *)(v7 + 24) = v4;
  sub_23B5884D4(&qword_2542FD260, (uint64_t (*)(uint64_t))type metadata accessor for Peripheral, (uint64_t)&protocol conformance descriptor for Peripheral);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 168) = v8;
  *v8 = v0;
  v8[1] = sub_23B593074;
  return sub_23B601E08();
}

uint64_t sub_23B592FE8()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23B593028()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B593074()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 176) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_23B5930F0()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B593134()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B59318C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  *(_QWORD *)(v6 + 40) = a5;
  *(_QWORD *)(v6 + 48) = a6;
  *(_QWORD *)(v6 + 24) = a2;
  *(_QWORD *)(v6 + 32) = a4;
  *(_BYTE *)(v6 + 80) = a3;
  *(_QWORD *)(v6 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_23B5931AC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  _QWORD *v6;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_BYTE *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 24);
  sub_23B5884D4(&qword_2542FD260, (uint64_t (*)(uint64_t))type metadata accessor for Peripheral, (uint64_t)&protocol conformance descriptor for Peripheral);
  v4 = swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v4;
  v5 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v4 + 16) = v3;
  *(_BYTE *)(v4 + 24) = v2;
  *(_OWORD *)(v4 + 32) = v5;
  *(_QWORD *)(v4 + 48) = v1;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v6;
  *v6 = v0;
  v6[1] = sub_23B593294;
  return sub_23B601E14();
}

uint64_t sub_23B593294()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23B593308()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B59333C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;

  v30 = a5;
  v31 = a6;
  v28 = a4;
  v29 = a3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34708);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD530);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35810);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD510);
  v18 = *(_QWORD *)(v17 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v16, a1, v17);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v16, 0, 1, v17);
  v19 = a2 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_connectContinuation;
  swift_beginAccess();
  sub_23B5A2728((uint64_t)v16, v19, (uint64_t *)&unk_256A35810);
  swift_endAccess();
  v20 = sub_23B601A78();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v13, 1, 1, v20);
  sub_23B5A3C5C(v28, (uint64_t)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_256A34708);
  v21 = sub_23B5884D4(&qword_2542FD260, (uint64_t (*)(uint64_t))type metadata accessor for Peripheral, (uint64_t)&protocol conformance descriptor for Peripheral);
  v22 = (*(unsigned __int8 *)(v9 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v23 = (v10 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = a2;
  *(_QWORD *)(v24 + 24) = v21;
  *(_QWORD *)(v24 + 32) = a2;
  *(_BYTE *)(v24 + 40) = v29;
  sub_23B5A3B48((uint64_t)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v24 + v22, &qword_256A34708);
  v25 = v31;
  *(_QWORD *)(v24 + v23) = v30;
  *(_QWORD *)(v24 + ((v23 + 15) & 0xFFFFFFFFFFFFFFF8)) = v25;
  swift_retain_n();
  swift_retain();
  sub_23B5CD0FC((uint64_t)v13, (uint64_t)&unk_256A34B88, v24);
  return swift_release();
}

uint64_t sub_23B5935A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v7 + 72) = a6;
  *(_QWORD *)(v7 + 80) = a7;
  *(_BYTE *)(v7 + 144) = a5;
  *(_QWORD *)(v7 + 64) = a4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35810);
  *(_QWORD *)(v7 + 88) = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD510);
  *(_QWORD *)(v7 + 96) = v8;
  *(_QWORD *)(v7 + 104) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v7 + 112) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B593634()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  unsigned __int8 v12;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 72);
  v12 = *(_BYTE *)(v0 + 144);
  v2 = sub_23B5A353C(&v12, v1);
  *(_QWORD *)(v0 + 120) = v2;
  if (qword_256A340A8 != -1)
    swift_once();
  v3 = sub_23B60185C();
  __swift_project_value_buffer(v3, (uint64_t)qword_256A346C0);
  swift_bridgeObjectRetain_n();
  v4 = sub_23B601844();
  v5 = sub_23B601B68();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v13 = v7;
    *(_DWORD *)v6 = 136315138;
    *(_QWORD *)(v0 + 48) = v2;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD4E0);
    v8 = sub_23B601928();
    *(_QWORD *)(v0 + 56) = sub_23B58E160(v8, v9, &v13);
    sub_23B601BC8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23B583000, v4, v5, "Connecting with options: %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v7, -1, -1);
    MEMORY[0x23B868A2C](v6, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v10;
  *v10 = v0;
  v10[1] = sub_23B593840;
  return sub_23B5CE0A0(*(_QWORD *)(v0 + 64), v2);
}

uint64_t sub_23B593840()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B5938A4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5938E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRelease();
  v5 = v4 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_connectContinuation;
  swift_beginAccess();
  sub_23B5A3C5C(v5, v3, (uint64_t *)&unk_256A35810);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1))
  {
    v6 = *(_QWORD *)(v0 + 88);

    sub_23B587ED4(v6, (uint64_t *)&unk_256A35810);
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 136);
    v9 = *(_QWORD *)(v0 + 104);
    v8 = *(_QWORD *)(v0 + 112);
    v11 = *(_QWORD *)(v0 + 88);
    v10 = *(_QWORD *)(v0 + 96);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v8, v11, v10);
    sub_23B587ED4(v11, (uint64_t *)&unk_256A35810);
    *(_QWORD *)(v0 + 40) = v7;
    sub_23B601A24();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B593A08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 32) = a4;
  return swift_task_switch();
}

uint64_t sub_23B593A20()
{
  uint64_t v0;
  _QWORD *v1;

  sub_23B597AC4(&OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_connectContinuation);
  *(_QWORD *)(v0 + 16) = 0;
  *(_BYTE *)(v0 + 24) = 1;
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  *v1 = v0;
  v1[1] = sub_23B593A8C;
  return sub_23B593B60((uint64_t *)(v0 + 16));
}

uint64_t sub_23B593A8C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23B593AF8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B593B04()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 32) = v0;
  *(_QWORD *)(v1 + 16) = 0;
  *(_BYTE *)(v1 + 24) = 1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 40) = v2;
  *v2 = v1;
  v2[1] = sub_23B593A8C;
  return sub_23B593B60((uint64_t *)(v1 + 16));
}

uint64_t sub_23B593B60(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v2 + 40) = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35810);
  v4 = swift_task_alloc();
  v5 = *a1;
  *(_QWORD *)(v2 + 48) = v4;
  *(_QWORD *)(v2 + 56) = v5;
  *(_BYTE *)(v2 + 96) = *((_BYTE *)a1 + 8);
  return swift_task_switch();
}

uint64_t sub_23B593BCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v12)(void);

  if (objc_msgSend(*(id *)(*(_QWORD *)(v0 + 40) + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_underlyingObject), sel_state))
  {
    v1 = *(_QWORD *)(v0 + 48);
    v2 = *(_QWORD *)(v0 + 40) + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_cancelConnectContinuation;
    swift_beginAccess();
    sub_23B5A3C5C(v2, v1, (uint64_t *)&unk_256A35810);
    v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD510);
    LODWORD(v2) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v1, 1, v3);
    sub_23B587ED4(v1, (uint64_t *)&unk_256A35810);
    if ((_DWORD)v2 == 1)
    {
      Strong = swift_weakLoadStrong();
      *(_QWORD *)(v0 + 64) = Strong;
      if (Strong)
      {
        v5 = Strong;
        v6 = *(_BYTE *)(v0 + 96);
        v7 = *(_QWORD *)(v0 + 56);
        v8 = *(_QWORD *)(v0 + 40);
        sub_23B5884D4(&qword_2542FD260, (uint64_t (*)(uint64_t))type metadata accessor for Peripheral, (uint64_t)&protocol conformance descriptor for Peripheral);
        v9 = swift_task_alloc();
        *(_QWORD *)(v0 + 72) = v9;
        *(_QWORD *)(v9 + 16) = v8;
        *(_QWORD *)(v9 + 24) = v7;
        *(_BYTE *)(v9 + 32) = v6;
        *(_QWORD *)(v9 + 40) = v5;
        v10 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 80) = v10;
        *v10 = v0;
        v10[1] = sub_23B593E44;
        return sub_23B601E14();
      }
    }
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    v12 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    swift_task_dealloc();
    v12 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v12();
}

uint64_t sub_23B593E44()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B593EB8()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B593EF4()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B593F38(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD530);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35810);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD510);
  v17 = *(_QWORD *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v15, a1, v16);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v16);
  v18 = a2 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_cancelConnectContinuation;
  swift_beginAccess();
  sub_23B5A2728((uint64_t)v15, v18, (uint64_t *)&unk_256A35810);
  swift_endAccess();
  v19 = sub_23B601A78();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v12, 1, 1, v19);
  v20 = sub_23B5884D4(&qword_2542FD260, (uint64_t (*)(uint64_t))type metadata accessor for Peripheral, (uint64_t)&protocol conformance descriptor for Peripheral);
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = a2;
  *(_QWORD *)(v21 + 24) = v20;
  *(_QWORD *)(v21 + 32) = a2;
  *(_QWORD *)(v21 + 40) = a3;
  *(_BYTE *)(v21 + 48) = a4 & 1;
  *(_QWORD *)(v21 + 56) = a5;
  swift_retain_n();
  swift_retain();
  sub_23B5CD0FC((uint64_t)v12, (uint64_t)&unk_256A34B58, v21);
  return swift_release();
}

uint64_t sub_23B594114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v7 + 56) = a5;
  *(_QWORD *)(v7 + 64) = a7;
  *(_BYTE *)(v7 + 128) = a6;
  *(_QWORD *)(v7 + 48) = a4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35810);
  *(_QWORD *)(v7 + 72) = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD510);
  *(_QWORD *)(v7 + 80) = v8;
  *(_QWORD *)(v7 + 88) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v7 + 96) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5941A8()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  char v6;

  v1 = *(_BYTE *)(v0 + 128);
  v5 = *(_QWORD *)(v0 + 56);
  v6 = v1 & 1;
  v2 = sub_23B5A3908(&v5);
  *(_QWORD *)(v0 + 104) = v2;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v3;
  *v3 = v0;
  v3[1] = sub_23B594228;
  return sub_23B5CE584(*(_QWORD *)(v0 + 48), v2);
}

uint64_t sub_23B594228()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B59428C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5942D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRelease();
  v5 = v4 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_cancelConnectContinuation;
  swift_beginAccess();
  sub_23B5A3C5C(v5, v3, (uint64_t *)&unk_256A35810);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1))
  {
    v6 = *(_QWORD *)(v0 + 72);

    sub_23B587ED4(v6, (uint64_t *)&unk_256A35810);
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 120);
    v9 = *(_QWORD *)(v0 + 88);
    v8 = *(_QWORD *)(v0 + 96);
    v11 = *(_QWORD *)(v0 + 72);
    v10 = *(_QWORD *)(v0 + 80);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v8, v11, v10);
    sub_23B587ED4(v11, (uint64_t *)&unk_256A35810);
    *(_QWORD *)(v0 + 40) = v7;
    sub_23B601A24();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5943F0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_23B594408()
{
  uint64_t v0;
  uint64_t Strong;

  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 24) = Strong;
  if (Strong)
    return swift_task_switch();
  type metadata accessor for CentralManager.Error();
  sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
  swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_23B5944D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 24) + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_pairingAgent);
  *(_QWORD *)(v0 + 32) = v1;
  if (v1)
  {
    swift_retain();
    return swift_task_switch();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23B59452C()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 40) = objc_msgSend(*(id *)(*(_QWORD *)(v0 + 32)+ OBJC_IVAR____TtC15FindMyBluetooth12PairingAgent_underlyingObject), sel_isPeerPaired_, *(_QWORD *)(*(_QWORD *)(v0 + 16)+ OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_underlyingObject));
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23B59459C()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 40));
}

uint64_t sub_23B5945D4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_23B5945EC()
{
  uint64_t v0;
  uint64_t Strong;

  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 24) = Strong;
  if (Strong)
    return swift_task_switch();
  type metadata accessor for CentralManager.Error();
  sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
  swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23B5946B4()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0[3] + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_pairingAgent);
  v0[4] = v1;
  if (v1)
  {
    swift_retain();
    v2 = (_QWORD *)swift_task_alloc();
    v0[5] = (uint64_t)v2;
    *v2 = v0;
    v2[1] = sub_23B594728;
    sub_23B5C4460(v0[2]);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_23B594728()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_23B59479C()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5947D0()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23B594810()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B594844()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_23B59485C()
{
  uint64_t v0;
  uint64_t Strong;

  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 24) = Strong;
  if (Strong)
    return swift_task_switch();
  type metadata accessor for CentralManager.Error();
  sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
  swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23B594924()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0[3] + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_pairingAgent);
  v0[4] = v1;
  if (v1)
  {
    swift_retain();
    v2 = (_QWORD *)swift_task_alloc();
    v0[5] = (uint64_t)v2;
    *v2 = v0;
    v2[1] = sub_23B594998;
    sub_23B5C507C(v0[2]);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_23B594998()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_23B594A0C()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23B594A4C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[13] = a1;
  v2[14] = v1;
  v2[15] = type metadata accessor for PeerPath();
  v2[16] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A346E0);
  v2[17] = swift_task_alloc();
  v2[18] = swift_task_alloc();
  v3 = sub_23B601634();
  v2[19] = v3;
  v2[20] = *(_QWORD *)(v3 - 8);
  v2[21] = swift_task_alloc();
  v2[22] = swift_task_alloc();
  v2[23] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B594B20()
{
  _QWORD *v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  void (*v36)(uint64_t, uint64_t);
  uint64_t v37;
  unint64_t v38;
  void (*v39)(uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  NSObject *log;
  os_log_type_t type;
  uint64_t v45;
  uint64_t v46[2];

  Strong = swift_weakLoadStrong();
  swift_release();
  if (Strong)
  {
    v2 = v0[19];
    v3 = v0[20];
    v4 = v0[18];
    v5 = v0[14] + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_macAddress;
    swift_beginAccess();
    sub_23B5A3C5C(v5, v4, (uint64_t *)&unk_256A346E0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, v2) == 1)
    {
      v6 = v0[19];
      v7 = v0[20];
      v8 = v0[17];
      v9 = v0[13];
      sub_23B587ED4(v0[18], (uint64_t *)&unk_256A346E0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v8, v9, v6);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(v8, 0, 1, v6);
      swift_beginAccess();
      sub_23B5A2728(v8, v5, (uint64_t *)&unk_256A346E0);
      swift_endAccess();
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[20] + 32))(v0[23], v0[18], v0[19]);
      if (qword_256A340A8 != -1)
        swift_once();
      v11 = v0[13];
      v13 = v0[22];
      v12 = v0[23];
      v15 = v0[20];
      v14 = v0[21];
      v16 = v0[19];
      v17 = sub_23B60185C();
      __swift_project_value_buffer(v17, (uint64_t)qword_256A346C0);
      v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16);
      v18(v13, v12, v16);
      v18(v14, v11, v16);
      swift_retain_n();
      v19 = sub_23B601844();
      v20 = sub_23B601B8C();
      v21 = os_log_type_enabled(v19, v20);
      v22 = v0[22];
      v23 = v0[23];
      v25 = v0[20];
      v24 = v0[21];
      v26 = v0[19];
      if (v21)
      {
        type = v20;
        log = v19;
        v28 = v0[15];
        v27 = v0[16];
        v45 = v0[23];
        v29 = v0[14];
        v41 = v0[20];
        v30 = swift_slowAlloc();
        v42 = swift_slowAlloc();
        v46[0] = v42;
        *(_DWORD *)v30 = 136447235;
        sub_23B58E8B8(v29 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_peerPath, v27);
        v31 = (uint64_t *)(v27 + *(int *)(v28 + 32));
        v32 = *v31;
        v33 = v31[1];
        swift_bridgeObjectRetain();
        sub_23B5A3CA0(v27, (uint64_t (*)(_QWORD))type metadata accessor for PeerPath);
        v0[8] = sub_23B58E160(v32, v33, v46);
        sub_23B601BC8();
        swift_bridgeObjectRelease();
        swift_release_n();
        *(_WORD *)(v30 + 12) = 2160;
        v0[9] = 1752392040;
        sub_23B601BC8();
        *(_WORD *)(v30 + 22) = 2081;
        sub_23B5884D4(&qword_256A34768, (uint64_t (*)(uint64_t))MEMORY[0x24BE31730], MEMORY[0x24BE31750]);
        v34 = sub_23B601DE4();
        v0[10] = sub_23B58E160(v34, v35, v46);
        sub_23B601BC8();
        swift_bridgeObjectRelease();
        v36 = *(void (**)(uint64_t, uint64_t))(v41 + 8);
        v36(v22, v26);
        *(_WORD *)(v30 + 32) = 2160;
        v0[11] = 1752392040;
        sub_23B601BC8();
        *(_WORD *)(v30 + 42) = 2081;
        v37 = sub_23B601DE4();
        v0[12] = sub_23B58E160(v37, v38, v46);
        sub_23B601BC8();
        swift_bridgeObjectRelease();
        v36(v24, v26);
        _os_log_impl(&dword_23B583000, log, type, "%{public}s: Not setting MAC address. Existing: %{private,mask.hash}s new: %{private,mask.hash}s", (uint8_t *)v30, 0x34u);
        swift_arrayDestroy();
        MEMORY[0x23B868A2C](v42, -1, -1);
        MEMORY[0x23B868A2C](v30, -1, -1);

        v36(v45, v26);
      }
      else
      {

        v39 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
        v39(v24, v26);
        v39(v22, v26);
        swift_release_n();
        v39(v23, v26);
      }
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v10 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v10 = (uint64_t (*)(void))v0[1];
  }
  return v10();
}

uint64_t sub_23B5950D0(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;

  v2[6] = a1;
  v2[7] = v1;
  v2[8] = *v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35810);
  v2[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B595134()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;

  Strong = swift_weakLoadStrong();
  swift_release();
  if (Strong
    && objc_msgSend(*(id *)(*(_QWORD *)(v0 + 56) + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_underlyingObject), sel_state) == (id)2&& (v2 = *(_QWORD *)(v0 + 72), v3 = *(_QWORD *)(v0 + 56) + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_discoverServicesContinuation, swift_beginAccess(), sub_23B5A3C5C(v3, v2, (uint64_t *)&unk_256A35810), v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD510), LODWORD(v3) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v2, 1, v4), sub_23B587ED4(v2, (uint64_t *)&unk_256A35810), (_DWORD)v3 == 1))
  {
    v5 = *(_QWORD *)(v0 + 56);
    v6 = *(_QWORD *)(v0 + 64);
    v7 = *(_QWORD *)(v0 + 48);
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 80) = v8;
    v8[2] = v5;
    v8[3] = v7;
    v8[4] = v6;
    v9 = swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v9;
    *(_QWORD *)(v9 + 16) = v5;
    *(_QWORD *)(v9 + 24) = v6;
    sub_23B5884D4(&qword_2542FD260, (uint64_t (*)(uint64_t))type metadata accessor for Peripheral, (uint64_t)&protocol conformance descriptor for Peripheral);
    v10 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 96) = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A34788);
    *v10 = v0;
    v10[1] = sub_23B595404;
    return sub_23B601E08();
  }
  else
  {
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23B595404()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_23B595480()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_23B5954BC()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B595500(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[21] = a3;
  v4[22] = a4;
  v4[19] = a1;
  v4[20] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A34678);
  v4[23] = swift_task_alloc();
  v4[24] = type metadata accessor for PeerPath();
  v4[25] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1F8);
  v4[26] = v5;
  v4[27] = *(_QWORD *)(v5 - 8);
  v4[28] = swift_task_alloc();
  v4[29] = swift_task_alloc();
  v4[30] = swift_task_alloc();
  v4[31] = swift_task_alloc();
  v6 = sub_23B601820();
  v4[32] = v6;
  v4[33] = *(_QWORD *)(v6 - 8);
  v4[34] = swift_task_alloc();
  v4[35] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B595614()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v2 = v0[21];
  v1 = v0[22];
  v3 = v0[20];
  sub_23B5884D4(&qword_2542FD260, (uint64_t (*)(uint64_t))type metadata accessor for Peripheral, (uint64_t)&protocol conformance descriptor for Peripheral);
  v4 = (_QWORD *)swift_task_alloc();
  v0[36] = v4;
  v4[2] = v3;
  v4[3] = v2;
  v4[4] = v1;
  v5 = (_QWORD *)swift_task_alloc();
  v0[37] = v5;
  *v5 = v0;
  v5[1] = sub_23B5956E4;
  return sub_23B601E14();
}

uint64_t sub_23B5956E4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 304) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B595758()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  int64_t v45;
  unint64_t v46;
  int64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, unint64_t, uint64_t);
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  _BOOL4 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  void (*v68)(uint64_t, uint64_t);
  uint64_t v69;
  uint64_t *v70;
  int isUniquelyReferenced_nonNull_native;
  _QWORD *v72;
  char v73;
  unint64_t v74;
  uint64_t v75;
  _BOOL8 v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  unint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  BOOL v85;
  uint64_t v86;
  uint64_t inited;
  id v88;
  _QWORD *v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  int64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  int64_t v101;
  unint64_t v102;
  void (*v103)(unint64_t, uint64_t, uint64_t);
  uint64_t v104[2];

  v1 = objc_msgSend(*(id *)(*(_QWORD *)(v0 + 160) + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_underlyingObject), sel_services);
  if (!v1)
  {
LABEL_59:
    v90 = *(uint64_t **)(v0 + 152);
    swift_beginAccess();
    v91 = swift_bridgeObjectRetain();
    v92 = sub_23B58BEA0(v91);
    swift_bridgeObjectRelease();
    *v90 = v92;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v2 = v1;
  v3 = *(_QWORD *)(v0 + 168);
  sub_23B58F7DC(0, &qword_256A34AB0);
  v4 = sub_23B6019DC();
  *(_QWORD *)(v0 + 312) = v4;

  if (v3)
    v5 = v3;
  else
    v5 = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRetain();
  *(_QWORD *)(v0 + 320) = sub_23B5BAB00(v5);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 328) = OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_services;
  swift_beginAccess();
  v6 = swift_bridgeObjectRetain();
  v7 = sub_23B58F8BC(v6);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 336) = sub_23B5BAB00(v7);
  swift_bridgeObjectRelease();
  if (v4 >> 62)
    goto LABEL_65;
  v8 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  *(_QWORD *)(v0 + 344) = v8;
  if (v8)
  {
    do
    {
      v9 = 0;
      *(_QWORD *)(v0 + 352) = OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_peerPath;
      while (1)
      {
        v10 = *(_QWORD *)(v0 + 312);
        v11 = (v10 & 0xC000000000000001) != 0 ? (id)MEMORY[0x23B868228](v9) : *(id *)(v10 + 8 * v9 + 32);
        v12 = v11;
        *(_QWORD *)(v0 + 360) = v11;
        *(_QWORD *)(v0 + 368) = v9 + 1;
        if (__OFADD__(v9, 1))
          break;
        v13 = *(_QWORD *)(v0 + 336);
        v15 = *(_QWORD *)(v0 + 272);
        v14 = *(_QWORD *)(v0 + 280);
        v16 = *(_QWORD *)(v0 + 256);
        v17 = *(_QWORD *)(v0 + 264);
        v18 = *(_QWORD *)(v0 + 248);
        v19 = objc_msgSend(v11, sel_UUID);
        CBUUID.uuidValue.getter();

        (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v15, v14, v16);
        type metadata accessor for Service();
        sub_23B6015D4();
        if ((sub_23B5AE56C(v18, v13) & 1) == 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_256A34B28);
          inited = swift_initStackObject();
          *(_QWORD *)(v0 + 376) = inited;
          *(_QWORD *)(inited + 16) = v12;
          swift_allocObject();
          swift_retain();
          v88 = v12;
          v89 = (_QWORD *)swift_task_alloc();
          *(_QWORD *)(v0 + 384) = v89;
          *v89 = v0;
          v89[1] = sub_23B596158;
          return sub_23B588924(*(_QWORD *)(v0 + 160), inited);
        }
        v20 = *(_QWORD *)(v0 + 280);
        v21 = *(_QWORD *)(v0 + 256);
        v22 = *(_QWORD *)(v0 + 264);
        v23 = *(_QWORD *)(v0 + 248);
        v24 = *(_QWORD *)(v0 + 208);
        v25 = *(_QWORD *)(v0 + 216);

        (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
        (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
        v9 = *(_QWORD *)(v0 + 368);
        if (v9 == *(_QWORD *)(v0 + 344))
          goto LABEL_14;
      }
      __break(1u);
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      swift_bridgeObjectRetain();
      v93 = sub_23B601D24();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 344) = v93;
    }
    while (v93);
  }
LABEL_14:
  v26 = *(_QWORD *)(v0 + 320);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v27 = swift_bridgeObjectRetain();
  v28 = sub_23B58F8BC(v27);
  swift_bridgeObjectRelease();
  v29 = sub_23B5BAB00(v28);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v29 + 16) <= *(_QWORD *)(v26 + 16) >> 3)
  {
    v104[0] = *(_QWORD *)(v0 + 320);
    sub_23B5B1EA0(v29);
    result = swift_bridgeObjectRelease();
    v30 = v104[0];
  }
  else
  {
    v30 = sub_23B5B2770(v29, *(_QWORD *)(v0 + 320));
    result = swift_bridgeObjectRelease();
  }
  v32 = 0;
  v33 = -1;
  v96 = v30 + 56;
  v34 = -1 << *(_BYTE *)(v30 + 32);
  v35 = *(_QWORD *)(v0 + 216);
  if (-v34 < 64)
    v33 = ~(-1 << -(char)v34);
  v36 = v33 & *(_QWORD *)(v30 + 56);
  v95 = *(_QWORD *)(v0 + 160) + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_peerPath;
  v94 = *(_QWORD *)(v0 + 192);
  v97 = (unint64_t)(63 - v34) >> 6;
  v98 = v30;
  v100 = *(_QWORD *)(v0 + 216);
  while (1)
  {
    if (v36)
    {
      v42 = __clz(__rbit64(v36));
      v43 = (v36 - 1) & v36;
      v44 = v42 | (v32 << 6);
      goto LABEL_39;
    }
    v45 = v32 + 1;
    if (__OFADD__(v32, 1))
      goto LABEL_64;
    if (v45 >= v97)
    {
LABEL_57:
      (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v35 + 56))(*(_QWORD *)(v0 + 184), 1, 1, *(_QWORD *)(v0 + 208));
LABEL_58:
      swift_release();
      goto LABEL_59;
    }
    v46 = *(_QWORD *)(v96 + 8 * v45);
    ++v32;
    if (!v46)
    {
      v32 = v45 + 1;
      if (v45 + 1 >= v97)
        goto LABEL_57;
      v46 = *(_QWORD *)(v96 + 8 * v32);
      if (!v46)
      {
        v32 = v45 + 2;
        if (v45 + 2 >= v97)
          goto LABEL_57;
        v46 = *(_QWORD *)(v96 + 8 * v32);
        if (!v46)
          break;
      }
    }
LABEL_38:
    v43 = (v46 - 1) & v46;
    v44 = __clz(__rbit64(v46)) + (v32 << 6);
LABEL_39:
    v48 = *(_QWORD *)(v0 + 208);
    v49 = *(_QWORD *)(v0 + 184);
    v99 = *(_QWORD *)(v35 + 72);
    v50 = *(void (**)(uint64_t, unint64_t, uint64_t))(v35 + 16);
    v50(v49, *(_QWORD *)(v30 + 48) + v99 * v44, v48);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v35 + 56))(v49, 0, 1, v48);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v49, 1, v48) == 1)
      goto LABEL_58;
    v102 = v43;
    v101 = v32;
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v35 + 32))(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 208));
    if (qword_256A340A8 != -1)
      swift_once();
    v52 = *(_QWORD *)(v0 + 224);
    v51 = *(_QWORD *)(v0 + 232);
    v53 = *(_QWORD *)(v0 + 208);
    v54 = sub_23B60185C();
    __swift_project_value_buffer(v54, (uint64_t)qword_256A346C0);
    v103 = (void (*)(unint64_t, uint64_t, uint64_t))v50;
    v50(v52, v51, v53);
    swift_retain();
    v55 = sub_23B601844();
    v56 = sub_23B601B8C();
    v57 = os_log_type_enabled(v55, v56);
    v58 = *(_QWORD *)(v0 + 224);
    v59 = *(_QWORD *)(v0 + 208);
    if (v57)
    {
      v60 = *(_QWORD *)(v0 + 200);
      v61 = swift_slowAlloc();
      v62 = swift_slowAlloc();
      v104[0] = v62;
      *(_DWORD *)v61 = 136446466;
      sub_23B58E8B8(v95, v60);
      v63 = (uint64_t *)(v60 + *(int *)(v94 + 32));
      v64 = *v63;
      v65 = v63[1];
      swift_bridgeObjectRetain();
      sub_23B5A3CA0(v60, (uint64_t (*)(_QWORD))type metadata accessor for PeerPath);
      *(_QWORD *)(v61 + 4) = sub_23B58E160(v64, v65, v104);
      swift_bridgeObjectRelease();
      swift_release();
      *(_WORD *)(v61 + 12) = 2082;
      sub_23B5A2D9C(&qword_256A34A00, (uint64_t *)&unk_2542FD1F8);
      v66 = sub_23B601DE4();
      *(_QWORD *)(v61 + 14) = sub_23B58E160(v66, v67, v104);
      swift_bridgeObjectRelease();
      v68 = *(void (**)(uint64_t, uint64_t))(v100 + 8);
      v68(v58, v59);
      _os_log_impl(&dword_23B583000, v55, v56, "%{public}s: No service discovered for %{public}s", (uint8_t *)v61, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B868A2C](v62, -1, -1);
      MEMORY[0x23B868A2C](v61, -1, -1);
    }
    else
    {
      swift_release();
      v68 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
      v68(v58, v59);
    }

    v69 = *(_QWORD *)(v0 + 232);
    v70 = (uint64_t *)(*(_QWORD *)(v0 + 160) + *(_QWORD *)(v0 + 328));
    swift_beginAccess();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v104[0] = *v70;
    v72 = (_QWORD *)v104[0];
    *v70 = 0x8000000000000000;
    v74 = sub_23B58EDD4(v69);
    v75 = v72[2];
    v76 = (v73 & 1) == 0;
    v77 = v75 + v76;
    if (__OFADD__(v75, v76))
      goto LABEL_62;
    v78 = v73;
    if (v72[3] >= v77)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v36 = v102;
        if ((v73 & 1) != 0)
          goto LABEL_21;
      }
      else
      {
        sub_23B5B502C();
        v72 = (_QWORD *)v104[0];
        v36 = v102;
        if ((v78 & 1) != 0)
          goto LABEL_21;
      }
    }
    else
    {
      v79 = *(_QWORD *)(v0 + 232);
      sub_23B5B3414(v77, isUniquelyReferenced_nonNull_native);
      v72 = (_QWORD *)v104[0];
      v80 = sub_23B58EDD4(v79);
      if ((v78 & 1) != (v81 & 1))
        return sub_23B601E2C();
      v74 = v80;
      v36 = v102;
      if ((v78 & 1) != 0)
      {
LABEL_21:
        v37 = v72[7];
        v38 = 8 * v74;
        v39 = *(_QWORD *)(v37 + 8 * v74);
        *(_QWORD *)(v37 + v38) = 0;
        goto LABEL_22;
      }
    }
    v82 = *(_QWORD *)(v0 + 232);
    v83 = *(_QWORD *)(v0 + 208);
    v72[(v74 >> 6) + 8] |= 1 << v74;
    v103(v72[6] + v74 * v99, v82, v83);
    *(_QWORD *)(v72[7] + 8 * v74) = 0;
    v84 = v72[2];
    v85 = __OFADD__(v84, 1);
    v86 = v84 + 1;
    if (v85)
      goto LABEL_63;
    v72[2] = v86;
    v39 = 1;
LABEL_22:
    v40 = *(_QWORD *)(v0 + 232);
    v41 = *(_QWORD *)(v0 + 208);
    *(_QWORD *)(*(_QWORD *)(v0 + 160) + *(_QWORD *)(v0 + 328)) = v72;
    swift_bridgeObjectRelease();
    sub_23B58F6F0(v39);
    swift_endAccess();
    result = ((uint64_t (*)(uint64_t, uint64_t))v68)(v40, v41);
    v30 = v98;
    v35 = v100;
    v32 = v101;
  }
  v47 = v45 + 3;
  if (v47 >= v97)
    goto LABEL_57;
  v46 = *(_QWORD *)(v96 + 8 * v47);
  if (v46)
  {
    v32 = v47;
    goto LABEL_38;
  }
  while (1)
  {
    v32 = v47 + 1;
    if (__OFADD__(v47, 1))
      break;
    if (v32 >= v97)
      goto LABEL_57;
    v46 = *(_QWORD *)(v96 + 8 * v32);
    ++v47;
    if (v46)
      goto LABEL_38;
  }
  __break(1u);
  return result;
}

uint64_t sub_23B596158(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 392) = a1;
  *(_QWORD *)(v3 + 400) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_23B5961F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 280);
  v2 = *(_QWORD *)(v0 + 256);
  v3 = *(_QWORD *)(v0 + 264);
  v4 = *(_QWORD *)(v0 + 248);
  v5 = *(_QWORD *)(v0 + 208);
  v6 = *(_QWORD *)(v0 + 216);

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5962BC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  char isUniquelyReferenced_nonNull_native;
  void (*v7)(uint64_t, uint64_t);
  _QWORD *v8;
  uint64_t (__cdecl *v10)();
  uint64_t v11;

  v1 = v0[49];
  v2 = v0[30];
  v3 = v0[26];
  v4 = v0[27];
  v5 = (uint64_t *)(v0[20] + v0[41]);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 16))(v2, v0[31], v3);
  swift_beginAccess();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v11 = *v5;
  *v5 = 0x8000000000000000;
  sub_23B5B8F34(v1, v2, isUniquelyReferenced_nonNull_native);
  *v5 = v11;
  swift_bridgeObjectRelease();
  v7 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v0[51] = v7;
  v7(v2, v3);
  swift_endAccess();
  v10 = (uint64_t (__cdecl *)())((char *)&dword_256A35040 + dword_256A35040);
  v8 = (_QWORD *)swift_task_alloc();
  v0[52] = v8;
  *v8 = v0;
  v8[1] = sub_23B5963D0;
  return v10();
}

uint64_t sub_23B5963D0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 424) = a1;
  *(_QWORD *)(v3 + 432) = a2;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B596430()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  _BOOL4 v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  int64_t v53;
  unint64_t v54;
  int64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t, unint64_t, uint64_t);
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  _BOOL4 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  void (*v75)(uint64_t, uint64_t);
  uint64_t v76;
  uint64_t *v77;
  int isUniquelyReferenced_nonNull_native;
  _QWORD *v79;
  char v80;
  unint64_t v81;
  uint64_t v82;
  _BOOL8 v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  unint64_t v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  BOOL v92;
  uint64_t v93;
  uint64_t inited;
  id v95;
  _QWORD *v96;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  os_log_type_t typea;
  os_log_type_t type[8];
  int64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  void *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  void (*v118)(uint64_t, uint64_t);
  int64_t v119;
  void (*v120)(uint64_t, uint64_t);
  uint64_t v121;
  void (*v122)(unint64_t, uint64_t, uint64_t);
  uint64_t v123[2];

  if (qword_256A340A8 != -1)
    goto LABEL_62;
  while (1)
  {
    v110 = sub_23B60185C();
    __swift_project_value_buffer(v110, (uint64_t)qword_256A346C0);
    swift_retain_n();
    swift_bridgeObjectRetain();
    v1 = sub_23B601844();
    v2 = sub_23B601B8C();
    v3 = os_log_type_enabled(v1, v2);
    v4 = *(_QWORD *)(v0 + 432);
    if (v3)
    {
      v103 = *(_QWORD *)(v0 + 424);
      v120 = *(void (**)(uint64_t, uint64_t))(v0 + 408);
      v111 = *(void **)(v0 + 360);
      v117 = *(_QWORD *)(v0 + 280);
      v113 = *(_QWORD *)(v0 + 264);
      v115 = *(_QWORD *)(v0 + 256);
      v107 = *(_QWORD *)(v0 + 208);
      v108 = *(_QWORD *)(v0 + 248);
      v5 = *(_QWORD *)(v0 + 160) + *(_QWORD *)(v0 + 352);
      typea = v2;
      v7 = *(_QWORD *)(v0 + 192);
      v6 = *(_QWORD *)(v0 + 200);
      v8 = swift_slowAlloc();
      v9 = swift_slowAlloc();
      v123[0] = v9;
      *(_DWORD *)v8 = 136446466;
      sub_23B58E8B8(v5, v6);
      v10 = (uint64_t *)(v6 + *(int *)(v7 + 32));
      v11 = *v10;
      v12 = v10[1];
      swift_bridgeObjectRetain();
      sub_23B5A3CA0(v6, (uint64_t (*)(_QWORD))type metadata accessor for PeerPath);
      *(_QWORD *)(v0 + 136) = sub_23B58E160(v11, v12, v123);
      sub_23B601BC8();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v8 + 12) = 2082;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 144) = sub_23B58E160(v103, v4, v123);
      sub_23B601BC8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23B583000, v1, typea, "%{public}s: Discovered service: %{public}s", (uint8_t *)v8, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B868A2C](v9, -1, -1);
      MEMORY[0x23B868A2C](v8, -1, -1);

      swift_release();
      v120(v108, v107);
      (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v117, v115);
    }
    else
    {
      v13 = *(void **)(v0 + 360);
      v118 = *(void (**)(uint64_t, uint64_t))(v0 + 408);
      v121 = *(_QWORD *)(v0 + 280);
      v14 = *(_QWORD *)(v0 + 256);
      v15 = *(_QWORD *)(v0 + 264);
      v16 = *(_QWORD *)(v0 + 248);
      v17 = *(_QWORD *)(v0 + 208);

      swift_bridgeObjectRelease_n();
      swift_release_n();
      swift_release();

      v118(v16, v17);
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v121, v14);
    }
    v18 = *(_QWORD *)(v0 + 368);
    if (v18 == *(_QWORD *)(v0 + 344))
    {
LABEL_12:
      v35 = *(_QWORD *)(v0 + 320);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v36 = swift_bridgeObjectRetain();
      v37 = sub_23B58F8BC(v36);
      swift_bridgeObjectRelease();
      v38 = sub_23B5BAB00(v37);
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v38 + 16) <= *(_QWORD *)(v35 + 16) >> 3)
      {
        v123[0] = *(_QWORD *)(v0 + 320);
        sub_23B5B1EA0(v38);
        swift_bridgeObjectRelease();
        v39 = v123[0];
      }
      else
      {
        v39 = sub_23B5B2770(v38, *(_QWORD *)(v0 + 320));
        swift_bridgeObjectRelease();
      }
      v40 = 0;
      v41 = -1;
      *(_QWORD *)type = v39 + 56;
      v42 = -1 << *(_BYTE *)(v39 + 32);
      v43 = *(_QWORD *)(v0 + 216);
      if (-v42 < 64)
        v41 = ~(-1 << -(char)v42);
      v44 = v41 & *(_QWORD *)(v39 + 56);
      v102 = *(_QWORD *)(v0 + 160) + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_peerPath;
      v101 = *(_QWORD *)(v0 + 192);
      v106 = (unint64_t)(63 - v42) >> 6;
      v109 = v39;
      v114 = *(_QWORD *)(v0 + 216);
      while (1)
      {
        if (v44)
        {
          v50 = __clz(__rbit64(v44));
          v51 = (v44 - 1) & v44;
          v52 = v50 | (v40 << 6);
        }
        else
        {
          v53 = v40 + 1;
          if (__OFADD__(v40, 1))
            goto LABEL_60;
          if (v53 >= v106)
          {
LABEL_54:
            (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v43 + 56))(*(_QWORD *)(v0 + 184), 1, 1, *(_QWORD *)(v0 + 208));
LABEL_55:
            swift_release();
            v98 = *(uint64_t **)(v0 + 152);
            swift_beginAccess();
            v99 = swift_bridgeObjectRetain();
            v100 = sub_23B58BEA0(v99);
            swift_bridgeObjectRelease();
            *v98 = v100;
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            return (*(uint64_t (**)(void))(v0 + 8))();
          }
          v54 = *(_QWORD *)(*(_QWORD *)type + 8 * v53);
          ++v40;
          if (!v54)
          {
            v40 = v53 + 1;
            if (v53 + 1 >= v106)
              goto LABEL_54;
            v54 = *(_QWORD *)(*(_QWORD *)type + 8 * v40);
            if (!v54)
            {
              v40 = v53 + 2;
              if (v53 + 2 >= v106)
                goto LABEL_54;
              v54 = *(_QWORD *)(*(_QWORD *)type + 8 * v40);
              if (!v54)
              {
                v55 = v53 + 3;
                if (v55 >= v106)
                  goto LABEL_54;
                v54 = *(_QWORD *)(*(_QWORD *)type + 8 * v55);
                if (!v54)
                {
                  while (1)
                  {
                    v40 = v55 + 1;
                    if (__OFADD__(v55, 1))
                      goto LABEL_61;
                    if (v40 >= v106)
                      goto LABEL_54;
                    v54 = *(_QWORD *)(*(_QWORD *)type + 8 * v40);
                    ++v55;
                    if (v54)
                      goto LABEL_35;
                  }
                }
                v40 = v55;
              }
            }
          }
LABEL_35:
          v51 = (v54 - 1) & v54;
          v52 = __clz(__rbit64(v54)) + (v40 << 6);
        }
        v56 = *(_QWORD *)(v0 + 208);
        v57 = *(_QWORD *)(v0 + 184);
        v112 = *(_QWORD *)(v43 + 72);
        v58 = *(void (**)(uint64_t, unint64_t, uint64_t))(v43 + 16);
        v58(v57, *(_QWORD *)(v39 + 48) + v112 * v52, v56);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v43 + 56))(v57, 0, 1, v56);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v57, 1, v56) == 1)
          goto LABEL_55;
        v116 = v51;
        v119 = v40;
        (*(void (**)(_QWORD, _QWORD, _QWORD))(v43 + 32))(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 208));
        if (qword_256A340A8 != -1)
          swift_once();
        v59 = *(_QWORD *)(v0 + 224);
        v60 = *(_QWORD *)(v0 + 232);
        v61 = *(_QWORD *)(v0 + 208);
        __swift_project_value_buffer(v110, (uint64_t)qword_256A346C0);
        v122 = (void (*)(unint64_t, uint64_t, uint64_t))v58;
        v58(v59, v60, v61);
        swift_retain();
        v62 = sub_23B601844();
        v63 = sub_23B601B8C();
        v64 = os_log_type_enabled(v62, v63);
        v65 = *(_QWORD *)(v0 + 224);
        v66 = *(_QWORD *)(v0 + 208);
        if (v64)
        {
          v67 = *(_QWORD *)(v0 + 200);
          v68 = swift_slowAlloc();
          v69 = swift_slowAlloc();
          v123[0] = v69;
          *(_DWORD *)v68 = 136446466;
          sub_23B58E8B8(v102, v67);
          v70 = (uint64_t *)(v67 + *(int *)(v101 + 32));
          v71 = *v70;
          v72 = v70[1];
          swift_bridgeObjectRetain();
          sub_23B5A3CA0(v67, (uint64_t (*)(_QWORD))type metadata accessor for PeerPath);
          *(_QWORD *)(v68 + 4) = sub_23B58E160(v71, v72, v123);
          swift_bridgeObjectRelease();
          swift_release();
          *(_WORD *)(v68 + 12) = 2082;
          sub_23B5A2D9C(&qword_256A34A00, (uint64_t *)&unk_2542FD1F8);
          v73 = sub_23B601DE4();
          *(_QWORD *)(v68 + 14) = sub_23B58E160(v73, v74, v123);
          swift_bridgeObjectRelease();
          v75 = *(void (**)(uint64_t, uint64_t))(v114 + 8);
          v75(v65, v66);
          _os_log_impl(&dword_23B583000, v62, v63, "%{public}s: No service discovered for %{public}s", (uint8_t *)v68, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x23B868A2C](v69, -1, -1);
          MEMORY[0x23B868A2C](v68, -1, -1);
        }
        else
        {
          swift_release();
          v75 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
          v75(v65, v66);
        }

        v76 = *(_QWORD *)(v0 + 232);
        v77 = (uint64_t *)(*(_QWORD *)(v0 + 160) + *(_QWORD *)(v0 + 328));
        swift_beginAccess();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v123[0] = *v77;
        v79 = (_QWORD *)v123[0];
        *v77 = 0x8000000000000000;
        v81 = sub_23B58EDD4(v76);
        v82 = v79[2];
        v83 = (v80 & 1) == 0;
        v84 = v82 + v83;
        if (__OFADD__(v82, v83))
        {
          __break(1u);
          goto LABEL_58;
        }
        v85 = v80;
        if (v79[3] >= v84)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            if ((v80 & 1) != 0)
              goto LABEL_18;
          }
          else
          {
            sub_23B5B502C();
            v79 = (_QWORD *)v123[0];
            if ((v85 & 1) != 0)
              goto LABEL_18;
          }
        }
        else
        {
          v86 = *(_QWORD *)(v0 + 232);
          sub_23B5B3414(v84, isUniquelyReferenced_nonNull_native);
          v79 = (_QWORD *)v123[0];
          v87 = sub_23B58EDD4(v86);
          if ((v85 & 1) != (v88 & 1))
            return sub_23B601E2C();
          v81 = v87;
          if ((v85 & 1) != 0)
          {
LABEL_18:
            v45 = v79[7];
            v46 = 8 * v81;
            v47 = *(_QWORD *)(v45 + 8 * v81);
            *(_QWORD *)(v45 + v46) = 0;
            goto LABEL_19;
          }
        }
        v89 = *(_QWORD *)(v0 + 232);
        v90 = *(_QWORD *)(v0 + 208);
        v79[(v81 >> 6) + 8] |= 1 << v81;
        v122(v79[6] + v81 * v112, v89, v90);
        *(_QWORD *)(v79[7] + 8 * v81) = 0;
        v91 = v79[2];
        v92 = __OFADD__(v91, 1);
        v93 = v91 + 1;
        if (v92)
          goto LABEL_59;
        v79[2] = v93;
        v47 = 1;
LABEL_19:
        v48 = *(_QWORD *)(v0 + 232);
        v49 = *(_QWORD *)(v0 + 208);
        *(_QWORD *)(*(_QWORD *)(v0 + 160) + *(_QWORD *)(v0 + 328)) = v79;
        swift_bridgeObjectRelease();
        sub_23B58F6F0(v47);
        swift_endAccess();
        v75(v48, v49);
        v39 = v109;
        v43 = v114;
        v44 = v116;
        v40 = v119;
      }
    }
LABEL_6:
    v19 = *(_QWORD *)(v0 + 312);
    v20 = (v19 & 0xC000000000000001) != 0 ? (id)MEMORY[0x23B868228](v18) : *(id *)(v19 + 8 * v18 + 32);
    v21 = v20;
    *(_QWORD *)(v0 + 360) = v20;
    *(_QWORD *)(v0 + 368) = v18 + 1;
    if (!__OFADD__(v18, 1))
      break;
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    swift_once();
  }
  v22 = *(_QWORD *)(v0 + 336);
  v24 = *(_QWORD *)(v0 + 272);
  v23 = *(_QWORD *)(v0 + 280);
  v26 = *(_QWORD *)(v0 + 256);
  v25 = *(_QWORD *)(v0 + 264);
  v27 = *(_QWORD *)(v0 + 248);
  v28 = objc_msgSend(v20, sel_UUID);
  CBUUID.uuidValue.getter();

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v24, v23, v26);
  type metadata accessor for Service();
  sub_23B6015D4();
  if ((sub_23B5AE56C(v27, v22) & 1) != 0)
  {
    v29 = *(_QWORD *)(v0 + 280);
    v30 = *(_QWORD *)(v0 + 256);
    v31 = *(_QWORD *)(v0 + 264);
    v32 = *(_QWORD *)(v0 + 248);
    v33 = *(_QWORD *)(v0 + 208);
    v34 = *(_QWORD *)(v0 + 216);

    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v32, v33);
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v29, v30);
    v18 = *(_QWORD *)(v0 + 368);
    if (v18 == *(_QWORD *)(v0 + 344))
      goto LABEL_12;
    goto LABEL_6;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A34B28);
  inited = swift_initStackObject();
  *(_QWORD *)(v0 + 376) = inited;
  *(_QWORD *)(inited + 16) = v21;
  swift_allocObject();
  swift_retain();
  v95 = v21;
  v96 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 384) = v96;
  *v96 = v0;
  v96[1] = sub_23B596158;
  return sub_23B588924(*(_QWORD *)(v0 + 160), inited);
}

uint64_t sub_23B596FBC()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B597058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v21;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD530);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35810);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD510);
  v15 = *(_QWORD *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v13, a1, v14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
  v16 = a2 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_discoverServicesContinuation;
  swift_beginAccess();
  sub_23B5A2728((uint64_t)v13, v16, (uint64_t *)&unk_256A35810);
  swift_endAccess();
  v17 = sub_23B601A78();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v10, 1, 1, v17);
  v18 = sub_23B5884D4(&qword_2542FD260, (uint64_t (*)(uint64_t))type metadata accessor for Peripheral, (uint64_t)&protocol conformance descriptor for Peripheral);
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = a2;
  v19[3] = v18;
  v19[4] = a3;
  v19[5] = a2;
  v19[6] = a4;
  swift_bridgeObjectRetain();
  swift_retain_n();
  sub_23B5CD0FC((uint64_t)v10, (uint64_t)&unk_256A34B38, (uint64_t)v19);
  return swift_release();
}

uint64_t sub_23B597228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[5] = a4;
  v5[6] = a5;
  v5[7] = type metadata accessor for PeerPath();
  v5[8] = swift_task_alloc();
  v6 = sub_23B601820();
  v5[9] = v6;
  v5[10] = *(_QWORD *)(v6 - 8);
  v5[11] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1F8);
  v5[12] = v7;
  v5[13] = *(_QWORD *)(v7 - 8);
  v5[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5972DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  void *v26;
  void *v27;
  void (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v1 = *(_QWORD *)(v0 + 40);
  if (v1)
  {
    v2 = *(_QWORD *)(v1 + 16);
    v3 = MEMORY[0x24BEE4AF8];
    if (v2)
    {
      v4 = *(_QWORD *)(v0 + 104);
      v32 = *(_QWORD *)(v0 + 80);
      v34 = MEMORY[0x24BEE4AF8];
      sub_23B601CAC();
      v5 = objc_opt_self();
      v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
      v30 = *(_QWORD *)(v4 + 72);
      v31 = (id)v5;
      v7 = v4;
      v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
      do
      {
        v8 = *(_QWORD *)(v0 + 112);
        v10 = *(_QWORD *)(v0 + 88);
        v9 = *(_QWORD *)(v0 + 96);
        v11 = *(_QWORD *)(v0 + 72);
        v29(v8, v6, v9);
        sub_23B6015BC();
        v12 = (void *)sub_23B6017E4();
        v13 = objc_msgSend(v31, sel_UUIDWithNSUUID_, v12);

        (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v10, v11);
        (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
        sub_23B601C94();
        sub_23B601CB8();
        sub_23B601CC4();
        sub_23B601CA0();
        v6 += v30;
        --v2;
      }
      while (v2);
      v3 = v34;
    }
  }
  else
  {
    v3 = 0;
  }
  if (qword_256A340A8 != -1)
    swift_once();
  v14 = sub_23B60185C();
  __swift_project_value_buffer(v14, (uint64_t)qword_256A346C0);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  v15 = sub_23B601844();
  v16 = sub_23B601B8C();
  if (os_log_type_enabled(v15, v16))
  {
    v18 = *(_QWORD *)(v0 + 56);
    v17 = *(_QWORD *)(v0 + 64);
    v19 = *(_QWORD *)(v0 + 48);
    v20 = swift_slowAlloc();
    v33 = swift_slowAlloc();
    v34 = v33;
    *(_DWORD *)v20 = 136446466;
    sub_23B58E8B8(v19 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_peerPath, v17);
    v21 = (uint64_t *)(v17 + *(int *)(v18 + 32));
    v23 = *v21;
    v22 = v21[1];
    swift_bridgeObjectRetain();
    sub_23B5A3CA0(v17, (uint64_t (*)(_QWORD))type metadata accessor for PeerPath);
    *(_QWORD *)(v0 + 16) = sub_23B58E160(v23, v22, &v34);
    sub_23B601BC8();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v20 + 12) = 2082;
    *(_QWORD *)(v0 + 24) = v3;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A34B48);
    v24 = sub_23B601928();
    *(_QWORD *)(v0 + 32) = sub_23B58E160(v24, v25, &v34);
    sub_23B601BC8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23B583000, v15, v16, "%{public}s: Calling discoverServices: %{public}s", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v33, -1, -1);
    MEMORY[0x23B868A2C](v20, -1, -1);
  }
  else
  {
    swift_release_n();
    swift_bridgeObjectRelease_n();
  }

  v26 = *(void **)(*(_QWORD *)(v0 + 48) + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_underlyingObject);
  if (v3)
  {
    sub_23B58F7DC(0, &qword_256A34B40);
    v27 = (void *)sub_23B6019D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v27 = 0;
  }
  objc_msgSend(v26, sel_discoverServices_, v27);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B597718(uint64_t a1, uint64_t a2, const char *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  _QWORD *v27;
  uint8_t *v29;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD530);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for PeerPath();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256A340A8 != -1)
    swift_once();
  v15 = sub_23B60185C();
  __swift_project_value_buffer(v15, (uint64_t)qword_256A346C0);
  swift_retain();
  v16 = sub_23B601844();
  v17 = sub_23B601B8C();
  if (os_log_type_enabled(v16, v17))
  {
    v30 = a3;
    v18 = swift_slowAlloc();
    v32 = a5;
    v19 = (uint8_t *)v18;
    v20 = swift_slowAlloc();
    v31 = a4;
    v21 = v20;
    *(_DWORD *)v19 = 136446210;
    v34 = v20;
    v29 = v19 + 4;
    sub_23B58E8B8(a1 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_peerPath, (uint64_t)v14);
    v22 = (uint64_t *)&v14[*(int *)(v12 + 32)];
    v24 = *v22;
    v23 = v22[1];
    swift_bridgeObjectRetain();
    sub_23B5A3CA0((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for PeerPath);
    v33 = sub_23B58E160(v24, v23, &v34);
    sub_23B601BC8();
    swift_bridgeObjectRelease();
    swift_release();
    _os_log_impl(&dword_23B583000, v16, v17, v30, v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v21, -1, -1);
    v25 = v19;
    a5 = v32;
    MEMORY[0x23B868A2C](v25, -1, -1);
  }
  else
  {
    swift_release();
  }

  sub_23B601A60();
  v26 = sub_23B601A78();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v11, 0, 1, v26);
  v27 = (_QWORD *)swift_allocObject();
  v27[2] = 0;
  v27[3] = 0;
  v27[4] = a1;
  swift_retain();
  sub_23B5CD39C((uint64_t)v11, a5, (uint64_t)v27);
  return swift_release();
}

uint64_t sub_23B5979D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 32) = a4;
  return swift_task_switch();
}

uint64_t sub_23B5979EC()
{
  uint64_t v0;
  _QWORD *v1;

  sub_23B597AC4(&OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_discoverServicesContinuation);
  *(_QWORD *)(v0 + 16) = 0;
  *(_BYTE *)(v0 + 24) = 1;
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  *v1 = v0;
  v1[1] = sub_23B597A58;
  return sub_23B593B60((uint64_t *)(v0 + 16));
}

uint64_t sub_23B597A58()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23B597AC4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[3];

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD510);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35810);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v16 - v11;
  v13 = v1 + *a1;
  swift_beginAccess();
  sub_23B5A3C5C(v13, (uint64_t)v12, (uint64_t *)&unk_256A35810);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v12, 1, v3))
  {
    sub_23B587ED4((uint64_t)v12, (uint64_t *)&unk_256A35810);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v12, v3);
    sub_23B587ED4((uint64_t)v12, (uint64_t *)&unk_256A35810);
    sub_23B601A3C();
    sub_23B5884D4(&qword_256A34628, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    v14 = swift_allocError();
    sub_23B601898();
    v16[0] = v14;
    sub_23B601A24();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v10, 1, 1, v3);
  swift_beginAccess();
  sub_23B5A2728((uint64_t)v10, v13, (uint64_t *)&unk_256A35810);
  return swift_endAccess();
}

uint64_t sub_23B597CC4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[7] = a1;
  v2[8] = v1;
  v3 = sub_23B601820();
  v2[9] = v3;
  v2[10] = *(_QWORD *)(v3 - 8);
  v2[11] = swift_task_alloc();
  v2[12] = type metadata accessor for PeerPath();
  v2[13] = swift_task_alloc();
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1F8);
  v2[14] = v4;
  v2[15] = *(_QWORD *)(v4 - 8);
  v2[16] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B597D74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *log;
  uint64_t v47;
  os_log_type_t type;
  uint64_t v49;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_services;
  *(_QWORD *)(v0 + 136) = OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_services;
  v3 = (uint64_t *)(v1 + v2);
  swift_beginAccess();
  v4 = *v3;
  if (*(_QWORD *)(*v3 + 16))
  {
    v5 = *(_QWORD *)(v0 + 56);
    swift_bridgeObjectRetain();
    v6 = sub_23B58EDD4(v5);
    if ((v7 & 1) != 0)
    {
      v8 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v6);
      swift_retain();
      swift_bridgeObjectRelease();
      if (v8)
      {
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        return (*(uint64_t (**)(uint64_t))(v0 + 8))(v8);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  v10 = *(_QWORD *)(v0 + 64);
  v11 = *(_QWORD *)(v10 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_autoDiscoverCount);
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
  {
    __break(1u);
    goto LABEL_15;
  }
  *(_QWORD *)(v10 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_autoDiscoverCount) = v13;
  if (v13 >= 2)
  {
    if (qword_256A340A8 == -1)
    {
LABEL_9:
      v14 = *(_QWORD *)(v0 + 56);
      v16 = *(_QWORD *)(v0 + 120);
      v15 = *(_QWORD *)(v0 + 128);
      v17 = *(_QWORD *)(v0 + 112);
      v18 = sub_23B60185C();
      __swift_project_value_buffer(v18, (uint64_t)qword_256A346C0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v15, v14, v17);
      swift_retain();
      v19 = sub_23B601844();
      v20 = sub_23B601B74();
      v21 = os_log_type_enabled(v19, v20);
      v23 = *(_QWORD *)(v0 + 120);
      v22 = *(_QWORD *)(v0 + 128);
      v24 = *(_QWORD *)(v0 + 112);
      if (v21)
      {
        v42 = *(_QWORD *)(v0 + 112);
        v25 = *(_QWORD *)(v0 + 96);
        v26 = *(_QWORD *)(v0 + 104);
        v27 = *(_QWORD *)(v0 + 88);
        v44 = *(_QWORD *)(v0 + 72);
        v45 = *(_QWORD *)(v0 + 80);
        type = v20;
        log = v19;
        v28 = *(_QWORD *)(v0 + 64);
        v29 = swift_slowAlloc();
        v47 = swift_slowAlloc();
        v49 = v47;
        *(_DWORD *)v29 = 136446466;
        sub_23B58E8B8(v28 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_peerPath, v26);
        v30 = (uint64_t *)(v26 + *(int *)(v25 + 32));
        v43 = v23;
        v31 = *v30;
        v32 = v30[1];
        swift_bridgeObjectRetain();
        sub_23B5A3CA0(v26, (uint64_t (*)(_QWORD))type metadata accessor for PeerPath);
        *(_QWORD *)(v0 + 40) = sub_23B58E160(v31, v32, &v49);
        sub_23B601BC8();
        swift_release();
        swift_bridgeObjectRelease();
        *(_WORD *)(v29 + 12) = 2082;
        sub_23B6015BC();
        sub_23B5884D4((unint64_t *)&qword_256A347A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
        v33 = sub_23B601DE4();
        v35 = v34;
        (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v27, v44);
        *(_QWORD *)(v0 + 48) = sub_23B58E160(v33, v35, &v49);
        sub_23B601BC8();
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v22, v42);
        v19 = log;
        _os_log_impl(&dword_23B583000, log, type, "%{public}s: Inefficient autoDiscovery for %{public}s", (uint8_t *)v29, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x23B868A2C](v47, -1, -1);
        MEMORY[0x23B868A2C](v29, -1, -1);
      }
      else
      {
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
      }

      goto LABEL_13;
    }
LABEL_15:
    swift_once();
    goto LABEL_9;
  }
LABEL_13:
  v36 = *(_QWORD *)(v0 + 112);
  v37 = *(_QWORD *)(v0 + 120);
  v38 = *(_QWORD *)(v0 + 56);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A341D0);
  v39 = (*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  v40 = swift_allocObject();
  *(_QWORD *)(v0 + 144) = v40;
  *(_OWORD *)(v40 + 16) = xmmword_23B607AF0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v37 + 16))(v40 + v39, v38, v36);
  v41 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 152) = v41;
  *v41 = v0;
  v41[1] = sub_23B5981C8;
  return sub_23B5950D0(v40);
}

uint64_t sub_23B5981C8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_23B598254()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  uint64_t v5;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 64) + *(_QWORD *)(v0 + 136));
  if (*(_QWORD *)(v1 + 16))
  {
    v2 = *(_QWORD *)(v0 + 56);
    swift_bridgeObjectRetain();
    v3 = sub_23B58EDD4(v2);
    if ((v4 & 1) != 0)
    {
      v5 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v3);
      swift_retain();
      swift_bridgeObjectRelease();
      if (v5)
      {
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        return (*(uint64_t (**)(uint64_t))(v0 + 8))(v5);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  type metadata accessor for CentralManager.Error();
  sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
  swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B598394()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23B5983F0(uint64_t a1, uint64_t a2)
{
  sub_23B598408(a1, a2, (SEL *)&selRef_tag_);
}

void sub_23B5983FC(uint64_t a1, uint64_t a2)
{
  sub_23B598408(a1, a2, (SEL *)&selRef_untag_);
}

void sub_23B598408(uint64_t a1, uint64_t a2, SEL *a3)
{
  uint64_t v3;
  void *v5;
  id v6;

  v5 = *(void **)(v3 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_underlyingObject);
  v6 = (id)sub_23B6018F8();
  objc_msgSend(v5, *a3, v6);

}

id sub_23B598454()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_underlyingObject);
  v2 = (void *)sub_23B6018F8();
  v3 = objc_msgSend(v1, sel_hasTag_, v2);

  return v3;
}

void sub_23B5984A0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_underlyingObject);
  v2 = (void *)sub_23B6018F8();
  v3 = (id)sub_23B6018F8();
  objc_msgSend(v1, sel_setCustomProperty_value_, v2, v3);

}

uint64_t sub_23B598514()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_underlyingObject);
  v2 = (void *)sub_23B6018F8();
  v3 = objc_msgSend(v1, sel_customProperty_, v2);

  if (!v3)
    return 0;
  v4 = sub_23B60191C();

  return v4;
}

uint64_t sub_23B598598()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_23B5985B0()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_underlyingObject), sel_customPropertyNames);
  if (v1)
  {
    v2 = v1;
    v3 = sub_23B6019DC();

  }
  else
  {
    v3 = MEMORY[0x24BEE4AF8];
  }
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v3);
}

uint64_t Peripheral.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23B598634@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_id;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_23B59867C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = v1;
  return swift_task_switch();
}

uint64_t sub_23B598694()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48) + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_macAddress;
  swift_beginAccess();
  sub_23B5A3C5C(v2, v1, (uint64_t *)&unk_256A346E0);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5986F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_23B59870C()
{
  uint64_t v0;

  sub_23B590EC0(*(_BYTE **)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B59873C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = v1;
  return swift_task_switch();
}

uint64_t sub_23B598754()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48) + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_lastSeen;
  swift_beginAccess();
  v3 = sub_23B601790();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(v1, v2, v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5987C0()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_isConnectable);
}

uint64_t sub_23B5987D0(_BYTE *a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23B587FA4;
  return sub_23B5926CC(a1, a2);
}

uint64_t sub_23B59882C(uint64_t *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23B587844;
  return sub_23B593B60(a1);
}

uint64_t sub_23B598878()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_23B5988D4;
  v2[2] = v0;
  return swift_task_switch();
}

uint64_t sub_23B5988D4(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  swift_task_dealloc();
  if (v1)
    v5 = 0;
  else
    v5 = a1 & 1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t sub_23B598930()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_23B587FA4;
  v2[2] = v0;
  return swift_task_switch();
}

uint64_t sub_23B59898C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_23B587FA4;
  v2[2] = v0;
  return swift_task_switch();
}

uint64_t sub_23B5989E8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23B587FA4;
  return sub_23B594A4C(a1);
}

uint64_t sub_23B598A34(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23B58CEC8;
  return sub_23B5950D0(a1);
}

uint64_t sub_23B598A80(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23B58F8B4;
  return sub_23B597CC4(a1);
}

uint64_t sub_23B598ACC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (__cdecl *v3)();

  v3 = (uint64_t (__cdecl *)())((char *)&dword_256A35D90 + dword_256A35D90);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23B58CFC0;
  return v3();
}

uint64_t sub_23B598B24()
{
  return sub_23B598BAC((uint64_t (*)(uint64_t))type metadata accessor for Peripheral, &qword_2542FD268, (uint64_t)&protocol conformance descriptor for Peripheral);
}

uint64_t sub_23B598B64()
{
  return sub_23B598BAC((uint64_t (*)(uint64_t))type metadata accessor for MockPeripheral, (unint64_t *)&unk_256A35E20, (uint64_t)&protocol conformance descriptor for MockPeripheral);
}

uint64_t sub_23B598B88()
{
  return sub_23B598BAC((uint64_t (*)(uint64_t))type metadata accessor for Peripheral, &qword_2542FD268, (uint64_t)&protocol conformance descriptor for Peripheral);
}

uint64_t sub_23B598BAC(uint64_t (*a1)(uint64_t), unint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  sub_23B601C40();
  swift_bridgeObjectRelease();
  v6 = a1(0);
  v7 = sub_23B5884D4(a2, a1, a3);
  sub_23B601DCC();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  MEMORY[0x23B86839C](v6, v7);
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  sub_23B5A2D9C(&qword_256A34AD0, &qword_256A359A0);
  sub_23B601DE4();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  return 60;
}

uint64_t sub_23B598D24()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[34] = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD510);
  v1[35] = v2;
  v1[36] = *(_QWORD *)(v2 - 8);
  v1[37] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35810);
  v1[38] = swift_task_alloc();
  v1[39] = swift_task_alloc();
  v1[40] = swift_task_alloc();
  v1[41] = swift_task_alloc();
  v1[42] = swift_task_alloc();
  v1[43] = type metadata accessor for PeerPath();
  v1[44] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B598E04()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t);
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t result;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70[2];

  if (qword_256A340A8 != -1)
    swift_once();
  v1 = sub_23B60185C();
  __swift_project_value_buffer(v1, (uint64_t)qword_256A346C0);
  swift_retain_n();
  v2 = sub_23B601844();
  v3 = sub_23B601B8C();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = *(_QWORD *)(v0 + 344);
    v5 = *(_QWORD *)(v0 + 352);
    v6 = *(_QWORD *)(v0 + 272);
    v7 = swift_slowAlloc();
    v69 = swift_slowAlloc();
    v70[0] = v69;
    *(_DWORD *)v7 = 136446466;
    sub_23B58E8B8(v6 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_peerPath, v5);
    v8 = (uint64_t *)(v5 + *(int *)(v4 + 32));
    v9 = *v8;
    v10 = v8[1];
    swift_bridgeObjectRetain();
    sub_23B5A3CA0(v5, (uint64_t (*)(_QWORD))type metadata accessor for PeerPath);
    *(_QWORD *)(v0 + 256) = sub_23B58E160(v9, v10, v70);
    sub_23B601BC8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2082;
    swift_retain();
    v11 = sub_23B598BAC((uint64_t (*)(uint64_t))type metadata accessor for Peripheral, &qword_2542FD268, (uint64_t)&protocol conformance descriptor for Peripheral);
    v13 = v12;
    swift_release();
    *(_QWORD *)(v0 + 264) = sub_23B58E160(v11, v13, v70);
    sub_23B601BC8();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_23B583000, v2, v3, "%{public}s: Invalidated peripheral: %{public}s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v69, -1, -1);
    MEMORY[0x23B868A2C](v7, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  v14 = (_QWORD *)&unk_2542FE000;
  if ((sub_23B601AD8() & 1) == 0)
  {
    v15 = *(_QWORD *)(v0 + 336);
    v16 = *(_QWORD *)(v0 + 280);
    v17 = *(_QWORD *)(v0 + 288);
    v18 = *(_QWORD *)(v0 + 272) + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_pairingContinuation;
    swift_beginAccess();
    sub_23B5A3C5C(v18, v15, (uint64_t *)&unk_256A35810);
    v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
    v20 = v19(v15, 1, v16);
    v21 = *(_QWORD *)(v0 + 336);
    if (v20)
    {
      sub_23B587ED4(*(_QWORD *)(v0 + 336), (uint64_t *)&unk_256A35810);
    }
    else
    {
      v23 = *(_QWORD *)(v0 + 288);
      v22 = *(_QWORD *)(v0 + 296);
      v24 = *(_QWORD *)(v0 + 280);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v23 + 16))(v22, *(_QWORD *)(v0 + 336), v24);
      sub_23B587ED4(v21, (uint64_t *)&unk_256A35810);
      sub_23B601A3C();
      sub_23B5884D4(&qword_256A34628, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
      v25 = swift_allocError();
      sub_23B601898();
      *(_QWORD *)(v0 + 248) = v25;
      sub_23B601A24();
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
    }
    v26 = *(_QWORD *)(v0 + 328);
    v27 = *(_QWORD *)(v0 + 280);
    v28 = *(_QWORD *)(v0 + 272) + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_connectContinuation;
    swift_beginAccess();
    sub_23B5A3C5C(v28, v26, (uint64_t *)&unk_256A35810);
    v29 = v19(v26, 1, v27);
    v30 = *(_QWORD *)(v0 + 328);
    if (v29)
    {
      sub_23B587ED4(*(_QWORD *)(v0 + 328), (uint64_t *)&unk_256A35810);
    }
    else
    {
      v32 = *(_QWORD *)(v0 + 288);
      v31 = *(_QWORD *)(v0 + 296);
      v33 = *(_QWORD *)(v0 + 280);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v32 + 16))(v31, *(_QWORD *)(v0 + 328), v33);
      sub_23B587ED4(v30, (uint64_t *)&unk_256A35810);
      sub_23B601A3C();
      sub_23B5884D4(&qword_256A34628, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
      v34 = swift_allocError();
      sub_23B601898();
      *(_QWORD *)(v0 + 240) = v34;
      sub_23B601A24();
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
    }
    v35 = *(_QWORD *)(v0 + 320);
    v36 = *(_QWORD *)(v0 + 280);
    v37 = *(_QWORD *)(v0 + 272) + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_cancelConnectContinuation;
    swift_beginAccess();
    sub_23B5A3C5C(v37, v35, (uint64_t *)&unk_256A35810);
    v38 = v19(v35, 1, v36);
    v39 = *(_QWORD *)(v0 + 320);
    if (v38)
    {
      sub_23B587ED4(*(_QWORD *)(v0 + 320), (uint64_t *)&unk_256A35810);
    }
    else
    {
      v41 = *(_QWORD *)(v0 + 288);
      v40 = *(_QWORD *)(v0 + 296);
      v42 = *(_QWORD *)(v0 + 280);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v41 + 16))(v40, *(_QWORD *)(v0 + 320), v42);
      sub_23B587ED4(v39, (uint64_t *)&unk_256A35810);
      sub_23B601A30();
      (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v40, v42);
    }
    v43 = *(_QWORD *)(v0 + 312);
    v44 = *(_QWORD *)(v0 + 280);
    v45 = *(_QWORD *)(v0 + 272) + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_discoverServicesContinuation;
    swift_beginAccess();
    sub_23B5A3C5C(v45, v43, (uint64_t *)&unk_256A35810);
    v46 = v19(v43, 1, v44);
    v47 = *(_QWORD *)(v0 + 312);
    if (v46)
    {
      sub_23B587ED4(*(_QWORD *)(v0 + 312), (uint64_t *)&unk_256A35810);
    }
    else
    {
      v49 = *(_QWORD *)(v0 + 288);
      v48 = *(_QWORD *)(v0 + 296);
      v50 = *(_QWORD *)(v0 + 280);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v49 + 16))(v48, *(_QWORD *)(v0 + 312), v50);
      sub_23B587ED4(v47, (uint64_t *)&unk_256A35810);
      sub_23B601A3C();
      sub_23B5884D4(&qword_256A34628, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
      v51 = swift_allocError();
      sub_23B601898();
      *(_QWORD *)(v0 + 232) = v51;
      sub_23B601A24();
      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v48, v50);
    }
    v14 = &unk_2542FE000;
  }
  v52 = *(_QWORD *)(v0 + 304);
  v53 = *(_QWORD *)(v0 + 280);
  v54 = *(_QWORD *)(v0 + 272);
  v55 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 288) + 56);
  v55(v52, 1, 1, v53);
  v56 = v54 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_pairingContinuation;
  swift_beginAccess();
  sub_23B5A2728(v52, v56, (uint64_t *)&unk_256A35810);
  swift_endAccess();
  v55(v52, 1, 1, v53);
  v57 = v54 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_connectContinuation;
  swift_beginAccess();
  sub_23B5A2728(v52, v57, (uint64_t *)&unk_256A35810);
  swift_endAccess();
  v55(v52, 1, 1, v53);
  v58 = v54 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_cancelConnectContinuation;
  swift_beginAccess();
  sub_23B5A2728(v52, v58, (uint64_t *)&unk_256A35810);
  swift_endAccess();
  v55(v52, 1, 1, v53);
  v59 = v54 + v14[27];
  swift_beginAccess();
  sub_23B5A2728(v52, v59, (uint64_t *)&unk_256A35810);
  swift_endAccess();
  *(_QWORD *)(v0 + 360) = OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_services;
  swift_beginAccess();
  v60 = swift_bridgeObjectRetain();
  v61 = sub_23B58BEA0(v60);
  *(_QWORD *)(v0 + 368) = v61;
  result = swift_bridgeObjectRelease();
  if (!(v61 >> 62))
  {
    v63 = *(_QWORD *)((v61 & 0xFFFFFFFFFFFFF8) + 0x10);
    *(_QWORD *)(v0 + 376) = v63;
    if (v63)
      goto LABEL_22;
LABEL_28:
    v67 = *(_QWORD *)(v0 + 360);
    v68 = *(_QWORD *)(v0 + 272);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v68 + v67) = MEMORY[0x24BEE4B00];
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  swift_bridgeObjectRetain();
  v63 = sub_23B601D24();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 376) = v63;
  if (!v63)
    goto LABEL_28;
LABEL_22:
  if (v63 < 1)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v0 + 384) = 0;
    v64 = *(_QWORD *)(v0 + 368);
    if ((v64 & 0xC000000000000001) != 0)
    {
      v65 = MEMORY[0x23B868228](0);
    }
    else
    {
      v65 = *(_QWORD *)(v64 + 32);
      swift_retain();
    }
    *(_QWORD *)(v0 + 392) = v65;
    v66 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 400) = v66;
    *v66 = v0;
    v66[1] = sub_23B599730;
    return sub_23B58D2BC();
  }
  return result;
}

uint64_t sub_23B599730()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B599788()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v1 = *(_QWORD *)(v0 + 384);
  v2 = *(_QWORD *)(v0 + 376);
  swift_release();
  if (v1 + 1 == v2)
  {
    v3 = *(_QWORD *)(v0 + 360);
    v4 = *(_QWORD *)(v0 + 272);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v4 + v3) = MEMORY[0x24BEE4B00];
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 384) + 1;
    *(_QWORD *)(v0 + 384) = v6;
    v7 = *(_QWORD *)(v0 + 368);
    if ((v7 & 0xC000000000000001) != 0)
    {
      v8 = MEMORY[0x23B868228]();
    }
    else
    {
      v8 = *(_QWORD *)(v7 + 8 * v6 + 32);
      swift_retain();
    }
    *(_QWORD *)(v0 + 392) = v8;
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 400) = v9;
    *v9 = v0;
    v9[1] = sub_23B599730;
    return sub_23B58D2BC();
  }
}

uint64_t sub_23B5998C8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[9] = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD510);
  v1[10] = v2;
  v1[11] = *(_QWORD *)(v2 - 8);
  v1[12] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35810);
  v1[13] = swift_task_alloc();
  v1[14] = swift_task_alloc();
  v1[15] = type metadata accessor for PeerPath();
  v1[16] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B599984()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  if (qword_256A340A8 != -1)
    swift_once();
  v1 = sub_23B60185C();
  __swift_project_value_buffer(v1, (uint64_t)qword_256A346C0);
  swift_retain();
  v2 = sub_23B601844();
  v3 = sub_23B601B8C();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = *(_QWORD *)(v0 + 120);
    v5 = *(_QWORD *)(v0 + 128);
    v6 = *(_QWORD *)(v0 + 72);
    v7 = (uint8_t *)swift_slowAlloc();
    v23 = swift_slowAlloc();
    v8 = v23;
    *(_DWORD *)v7 = 136446210;
    sub_23B58E8B8(v6 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_peerPath, v5);
    v9 = (uint64_t *)(v5 + *(int *)(v4 + 32));
    v10 = *v9;
    v11 = v9[1];
    swift_bridgeObjectRetain();
    sub_23B5A3CA0(v5, (uint64_t (*)(_QWORD))type metadata accessor for PeerPath);
    *(_QWORD *)(v0 + 64) = sub_23B58E160(v10, v11, &v23);
    sub_23B601BC8();
    swift_bridgeObjectRelease();
    swift_release();
    _os_log_impl(&dword_23B583000, v2, v3, "%{public}s: connected.", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v8, -1, -1);
    MEMORY[0x23B868A2C](v7, -1, -1);
  }
  else
  {
    swift_release();
  }

  v12 = *(_QWORD *)(v0 + 112);
  v13 = *(_QWORD *)(v0 + 80);
  v14 = *(_QWORD *)(v0 + 88);
  v15 = *(_QWORD *)(v0 + 72) + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_connectContinuation;
  swift_beginAccess();
  sub_23B5A3C5C(v15, v12, (uint64_t *)&unk_256A35810);
  v16 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v17 = *(_QWORD *)(v0 + 112);
  if (v16)
  {
    sub_23B587ED4(*(_QWORD *)(v0 + 112), (uint64_t *)&unk_256A35810);
  }
  else
  {
    v19 = *(_QWORD *)(v0 + 88);
    v18 = *(_QWORD *)(v0 + 96);
    v20 = *(_QWORD *)(v0 + 80);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v19 + 16))(v18, *(_QWORD *)(v0 + 112), v20);
    sub_23B587ED4(v17, (uint64_t *)&unk_256A35810);
    sub_23B601A30();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  }
  v21 = *(_QWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 88) + 56))(v21, 1, 1, *(_QWORD *)(v0 + 80));
  swift_beginAccess();
  sub_23B5A2728(v21, v15, (uint64_t *)&unk_256A35810);
  swift_endAccess();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B599CA4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[15] = a1;
  v2[16] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD510);
  v2[17] = v3;
  v2[18] = *(_QWORD *)(v3 - 8);
  v2[19] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35810);
  v2[20] = swift_task_alloc();
  v2[21] = swift_task_alloc();
  v2[22] = swift_task_alloc();
  v2[23] = type metadata accessor for PeerPath();
  v2[24] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B599DA0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  NSObject *v38;
  uint64_t v39[2];

  v39[1] = *MEMORY[0x24BDAC8D0];
  if (qword_256A340A8 != -1)
    swift_once();
  v1 = *(void **)(v0 + 120);
  v2 = sub_23B60185C();
  __swift_project_value_buffer(v2, (uint64_t)qword_256A346C0);
  swift_retain();
  v3 = v1;
  swift_retain();
  v4 = v1;
  v5 = sub_23B601844();
  v6 = sub_23B601B74();
  if (os_log_type_enabled(v5, v6))
  {
    v38 = v5;
    v7 = *(_QWORD *)(v0 + 184);
    v8 = *(_QWORD *)(v0 + 192);
    v9 = *(_QWORD *)(v0 + 128);
    v35 = *(_QWORD *)(v0 + 120);
    v10 = swift_slowAlloc();
    v36 = (_QWORD *)swift_slowAlloc();
    v37 = swift_slowAlloc();
    v39[0] = v37;
    *(_DWORD *)v10 = 136446466;
    sub_23B58E8B8(v9 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_peerPath, v8);
    v11 = (uint64_t *)(v8 + *(int *)(v7 + 32));
    v13 = *v11;
    v12 = v11[1];
    swift_bridgeObjectRetain();
    sub_23B5A3CA0(v8, (uint64_t (*)(_QWORD))type metadata accessor for PeerPath);
    *(_QWORD *)(v0 + 96) = sub_23B58E160(v13, v12, v39);
    sub_23B601BC8();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v10 + 12) = 2114;
    if (v35)
    {
      v14 = v1;
      v15 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 112) = v15;
      sub_23B601BC8();
    }
    else
    {
      *(_QWORD *)(v0 + 104) = 0;
      sub_23B601BC8();
      v15 = 0;
    }
    v5 = v38;
    *v36 = v15;

    _os_log_impl(&dword_23B583000, v38, v6, "%{public}s: failedToConnect: %{public}@", (uint8_t *)v10, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35D50);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v36, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v37, -1, -1);
    MEMORY[0x23B868A2C](v10, -1, -1);
  }
  else
  {
    swift_release_n();

  }
  v16 = *(_QWORD *)(v0 + 128) + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_connectContinuation;
  v17 = *(_QWORD *)(v0 + 136);
  v18 = *(_QWORD *)(v0 + 144);
  if (!*(_QWORD *)(v0 + 120))
  {
    v26 = *(_QWORD *)(v0 + 168);
    swift_beginAccess();
    sub_23B5A3C5C(v16, v26, (uint64_t *)&unk_256A35810);
    v27 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v26, 1, v17);
    v21 = *(_QWORD *)(v0 + 168);
    if (!v27)
    {
      v33 = *(_QWORD *)(v0 + 144);
      v32 = *(_QWORD *)(v0 + 152);
      v34 = *(_QWORD *)(v0 + 136);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v33 + 16))(v32, *(_QWORD *)(v0 + 168), v34);
      sub_23B587ED4(v21, (uint64_t *)&unk_256A35810);
      sub_23B601A30();
      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v34);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  v19 = *(_QWORD *)(v0 + 176);
  swift_beginAccess();
  sub_23B5A3C5C(v16, v19, (uint64_t *)&unk_256A35810);
  v20 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v19, 1, v17);
  v21 = *(_QWORD *)(v0 + 176);
  if (v20)
  {
LABEL_13:
    sub_23B587ED4(v21, (uint64_t *)&unk_256A35810);
    goto LABEL_14;
  }
  v23 = *(_QWORD *)(v0 + 144);
  v22 = *(_QWORD *)(v0 + 152);
  v24 = *(_QWORD *)(v0 + 136);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v23 + 16))(v22, *(_QWORD *)(v0 + 176), v24);
  v25 = v1;
  sub_23B587ED4(v21, (uint64_t *)&unk_256A35810);
  *(_QWORD *)(v0 + 88) = v1;
  sub_23B601A24();
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
LABEL_14:
  v28 = *(_QWORD *)(v0 + 160);
  v29 = *(_QWORD *)(v0 + 128);
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 144) + 56))(v28, 1, 1, *(_QWORD *)(v0 + 136));
  v30 = v29 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_connectContinuation;
  swift_beginAccess();
  sub_23B5A2728(v28, v30, (uint64_t *)&unk_256A35810);
  swift_endAccess();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B59A298(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[18] = a1;
  v2[19] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD510);
  v2[20] = v3;
  v2[21] = *(_QWORD *)(v3 - 8);
  v2[22] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35810);
  v2[23] = swift_task_alloc();
  v2[24] = swift_task_alloc();
  v2[25] = swift_task_alloc();
  v2[26] = type metadata accessor for PeerPath();
  v2[27] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B59A360()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;
  id v3;
  uint64_t v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  os_log_type_t type;
  uint64_t v52;
  uint64_t v53;

  v1 = *(void **)(v0 + 144);
  v2 = &unk_2542FE000;
  if (!v1)
  {
    if (qword_256A340A8 != -1)
      swift_once();
    v16 = sub_23B60185C();
    __swift_project_value_buffer(v16, (uint64_t)qword_256A346C0);
    swift_retain();
    v17 = sub_23B601844();
    v18 = sub_23B601B8C();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = *(_QWORD *)(v0 + 208);
      v20 = *(_QWORD *)(v0 + 216);
      v21 = *(_QWORD *)(v0 + 152);
      v22 = (uint8_t *)swift_slowAlloc();
      v23 = swift_slowAlloc();
      *(_DWORD *)v22 = 136446210;
      v53 = v23;
      sub_23B58E8B8(v21 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_peerPath, v20);
      v24 = (uint64_t *)(v20 + *(int *)(v19 + 32));
      v26 = *v24;
      v25 = v24[1];
      swift_bridgeObjectRetain();
      v27 = v20;
      v2 = (_QWORD *)&unk_2542FE000;
      sub_23B5A3CA0(v27, (uint64_t (*)(_QWORD))type metadata accessor for PeerPath);
      *(_QWORD *)(v0 + 112) = sub_23B58E160(v26, v25, &v53);
      sub_23B601BC8();
      swift_bridgeObjectRelease();
      swift_release();
      _os_log_impl(&dword_23B583000, v17, v18, "%{public}s: disconnected.", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B868A2C](v23, -1, -1);
      MEMORY[0x23B868A2C](v22, -1, -1);
    }
    else
    {
      swift_release();
    }

    v37 = *(_QWORD *)(v0 + 192);
    v38 = *(_QWORD *)(v0 + 160);
    v39 = *(_QWORD *)(v0 + 168);
    v40 = *(_QWORD *)(v0 + 152) + v2[26];
    swift_beginAccess();
    sub_23B5A3C5C(v40, v37, (uint64_t *)&unk_256A35810);
    v41 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38);
    v33 = *(_QWORD *)(v0 + 192);
    if (!v41)
    {
      v48 = *(_QWORD *)(v0 + 168);
      v47 = *(_QWORD *)(v0 + 176);
      v49 = *(_QWORD *)(v0 + 160);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v48 + 16))(v47, *(_QWORD *)(v0 + 192), v49);
      sub_23B587ED4(v33, (uint64_t *)&unk_256A35810);
      sub_23B601A30();
      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v47, v49);
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  v3 = v1;
  if (qword_256A340A8 != -1)
    swift_once();
  v4 = sub_23B60185C();
  __swift_project_value_buffer(v4, (uint64_t)qword_256A346C0);
  v5 = v1;
  swift_retain();
  v6 = sub_23B601844();
  v7 = sub_23B601B74();
  if (os_log_type_enabled(v6, v7))
  {
    type = v7;
    v9 = *(_QWORD *)(v0 + 208);
    v8 = *(_QWORD *)(v0 + 216);
    v10 = *(_QWORD *)(v0 + 152);
    v11 = swift_slowAlloc();
    v50 = (_QWORD *)swift_slowAlloc();
    v52 = swift_slowAlloc();
    v53 = v52;
    *(_DWORD *)v11 = 136446466;
    sub_23B58E8B8(v10 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_peerPath, v8);
    v12 = (uint64_t *)(v8 + *(int *)(v9 + 32));
    v13 = *v12;
    v14 = v12[1];
    swift_bridgeObjectRetain();
    sub_23B5A3CA0(v8, (uint64_t (*)(_QWORD))type metadata accessor for PeerPath);
    *(_QWORD *)(v0 + 128) = sub_23B58E160(v13, v14, &v53);
    v2 = (_QWORD *)&unk_2542FE000;
    sub_23B601BC8();
    swift_bridgeObjectRelease();
    swift_release();
    *(_WORD *)(v11 + 12) = 2112;
    v15 = sub_23B6016C4();
    *(_QWORD *)(v0 + 136) = v15;
    sub_23B601BC8();
    *v50 = v15;

    _os_log_impl(&dword_23B583000, v6, type, "%{public}s: disconnected with error: %@", (uint8_t *)v11, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35D50);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v50, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v52, -1, -1);
    MEMORY[0x23B868A2C](v11, -1, -1);

  }
  else
  {
    swift_release();

  }
  v28 = *(_QWORD *)(v0 + 200);
  v29 = *(_QWORD *)(v0 + 160);
  v30 = *(_QWORD *)(v0 + 168);
  v31 = *(_QWORD *)(v0 + 152) + v2[26];
  swift_beginAccess();
  sub_23B5A3C5C(v31, v28, (uint64_t *)&unk_256A35810);
  v32 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29);
  v33 = *(_QWORD *)(v0 + 200);
  if (v32)
  {

LABEL_16:
    sub_23B587ED4(v33, (uint64_t *)&unk_256A35810);
    goto LABEL_17;
  }
  v35 = *(_QWORD *)(v0 + 168);
  v34 = *(_QWORD *)(v0 + 176);
  v36 = *(_QWORD *)(v0 + 160);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v35 + 16))(v34, *(_QWORD *)(v0 + 200), v36);
  sub_23B587ED4(v33, (uint64_t *)&unk_256A35810);
  *(_QWORD *)(v0 + 120) = v1;
  sub_23B601A24();
  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v36);
LABEL_17:
  v42 = *(_QWORD *)(v0 + 184);
  v43 = *(_QWORD *)(v0 + 152);
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 168) + 56))(v42, 1, 1, *(_QWORD *)(v0 + 160));
  v44 = v43 + v2[26];
  swift_beginAccess();
  sub_23B5A2728(v42, v44, (uint64_t *)&unk_256A35810);
  swift_endAccess();
  v45 = (_QWORD *)(v43 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_services);
  swift_beginAccess();
  *v45 = MEMORY[0x24BEE4B00];
  swift_bridgeObjectRelease();
  *(_QWORD *)(v43 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_autoDiscoverCount) = 0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B59A9F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  v3[8] = type metadata accessor for PeerPath();
  v3[9] = swift_task_alloc();
  v4 = sub_23B601820();
  v3[10] = v4;
  v3[11] = *(_QWORD *)(v4 - 8);
  v3[12] = swift_task_alloc();
  v3[13] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B59AA90()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v27;
  os_log_type_t type;
  uint64_t v29;

  v1 = *(void **)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 88);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  sub_23B6015BC();
  v6 = objc_msgSend(v1, sel_identifier);
  sub_23B6017FC();

  LOBYTE(v6) = _s15FindMyBluetooth11ServiceUUIDV2eeoiySbAC_ACtFZ_0();
  v7 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v7(v3, v4);
  v7(v2, v4);
  if ((v6 & 1) == 0)
    return sub_23B601D18();
  if (qword_256A340A8 != -1)
    swift_once();
  v8 = sub_23B60185C();
  __swift_project_value_buffer(v8, (uint64_t)qword_256A346C0);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  v9 = sub_23B601844();
  v10 = sub_23B601B8C();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = *(_QWORD *)(v0 + 64);
    v12 = *(_QWORD *)(v0 + 72);
    type = v10;
    v13 = *(_QWORD *)(v0 + 56);
    v14 = swift_slowAlloc();
    v27 = swift_slowAlloc();
    v29 = v27;
    *(_DWORD *)v14 = 136446722;
    sub_23B58E8B8(v13 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_peerPath, v12);
    v15 = (uint64_t *)(v12 + *(int *)(v11 + 32));
    v17 = *v15;
    v16 = v15[1];
    swift_bridgeObjectRetain();
    sub_23B5A3CA0(v12, (uint64_t (*)(_QWORD))type metadata accessor for PeerPath);
    *(_QWORD *)(v0 + 16) = sub_23B58E160(v17, v16, &v29);
    sub_23B601BC8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2080;
    swift_retain();
    v18 = sub_23B598BAC((uint64_t (*)(uint64_t))type metadata accessor for Peripheral, &qword_2542FD268, (uint64_t)&protocol conformance descriptor for Peripheral);
    v20 = v19;
    swift_release();
    *(_QWORD *)(v0 + 24) = sub_23B58E160(v18, v20, &v29);
    sub_23B601BC8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 22) = 2080;
    v21 = sub_23B58F7DC(0, &qword_256A34AB0);
    v22 = swift_bridgeObjectRetain();
    v23 = MEMORY[0x23B867FAC](v22, v21);
    v25 = v24;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 32) = sub_23B58E160(v23, v25, &v29);
    sub_23B601BC8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B583000, v9, type, "%{public}s: NOT IMPLEMENTED -- didModifyServices for %s invalidatedServices: %s", (uint8_t *)v14, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v27, -1, -1);
    MEMORY[0x23B868A2C](v14, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B59AEC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[9] = a3;
  v4[10] = v3;
  v4[7] = a1;
  v4[8] = a2;
  v4[11] = type metadata accessor for PeerPath();
  v4[12] = swift_task_alloc();
  v5 = sub_23B601820();
  v4[13] = v5;
  v4[14] = *(_QWORD *)(v5 - 8);
  v4[15] = swift_task_alloc();
  v4[16] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B59AF94()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void (*v7)(uint64_t, uint64_t);
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  id v24;
  uint64_t v25;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32[2];

  v32[1] = *MEMORY[0x24BDAC8D0];
  v1 = *(void **)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 112);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  sub_23B6015BC();
  v6 = objc_msgSend(v1, sel_identifier);
  sub_23B6017FC();

  LOBYTE(v6) = _s15FindMyBluetooth11ServiceUUIDV2eeoiySbAC_ACtFZ_0();
  v7 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v7(v3, v4);
  v7(v2, v4);
  if ((v6 & 1) == 0)
    return sub_23B601D18();
  if (qword_256A340A8 != -1)
    swift_once();
  v8 = *(void **)(v0 + 72);
  v9 = sub_23B60185C();
  __swift_project_value_buffer(v9, (uint64_t)qword_256A346C0);
  swift_retain_n();
  v10 = v8;
  swift_retain();
  v11 = v8;
  v12 = sub_23B601844();
  v13 = sub_23B601B8C();
  if (os_log_type_enabled(v12, v13))
  {
    v27 = v13;
    v14 = *(_QWORD *)(v0 + 88);
    v15 = *(_QWORD *)(v0 + 96);
    v16 = *(_QWORD *)(v0 + 80);
    v29 = *(_QWORD *)(v0 + 72);
    v28 = *(_QWORD *)(v0 + 64);
    v17 = swift_slowAlloc();
    v30 = (_QWORD *)swift_slowAlloc();
    v31 = swift_slowAlloc();
    v32[0] = v31;
    *(_DWORD *)v17 = 136446978;
    sub_23B58E8B8(v16 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_peerPath, v15);
    v18 = (uint64_t *)(v15 + *(int *)(v14 + 32));
    v20 = *v18;
    v19 = v18[1];
    swift_bridgeObjectRetain();
    sub_23B5A3CA0(v15, (uint64_t (*)(_QWORD))type metadata accessor for PeerPath);
    *(_QWORD *)(v0 + 16) = sub_23B58E160(v20, v19, v32);
    sub_23B601BC8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2080;
    swift_retain();
    v21 = sub_23B598BAC((uint64_t (*)(uint64_t))type metadata accessor for Peripheral, &qword_2542FD268, (uint64_t)&protocol conformance descriptor for Peripheral);
    v23 = v22;
    swift_release();
    *(_QWORD *)(v0 + 24) = sub_23B58E160(v21, v23, v32);
    sub_23B601BC8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 22) = 2048;
    *(_QWORD *)(v0 + 32) = v28;
    sub_23B601BC8();
    *(_WORD *)(v17 + 32) = 2112;
    if (v29)
    {
      v24 = v8;
      v25 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 48) = v25;
      sub_23B601BC8();
    }
    else
    {
      *(_QWORD *)(v0 + 40) = 0;
      sub_23B601BC8();
      v25 = 0;
    }
    *v30 = v25;

    _os_log_impl(&dword_23B583000, v12, v27, "%{public}s: NOT IMPLEMENTED -- didReadRSSI for %s rssi: %ld, error: %@", (uint8_t *)v17, 0x2Au);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35D50);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v30, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v31, -1, -1);
    MEMORY[0x23B868A2C](v17, -1, -1);
  }
  else
  {
    swift_release_n();

  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B59B48C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[12] = a2;
  v3[13] = v2;
  v3[11] = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35810);
  v3[14] = swift_task_alloc();
  v3[15] = swift_task_alloc();
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD510);
  v3[16] = v4;
  v3[17] = *(_QWORD *)(v4 - 8);
  v3[18] = swift_task_alloc();
  v5 = sub_23B601820();
  v3[19] = v5;
  v3[20] = *(_QWORD *)(v5 - 8);
  v3[21] = swift_task_alloc();
  v3[22] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B59B560()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  if ((sub_23B601AD8() & 1) != 0)
  {
    if (qword_256A340A8 != -1)
      swift_once();
    v1 = sub_23B60185C();
    __swift_project_value_buffer(v1, (uint64_t)qword_256A346C0);
    v2 = sub_23B601844();
    v3 = sub_23B601B74();
    if (!os_log_type_enabled(v2, v3))
      goto LABEL_13;
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v30 = v5;
    *(_DWORD *)v4 = 136446210;
    *(_QWORD *)(v0 + 80) = sub_23B58E160(0xD000000000000022, 0x800000023B604560, &v30);
    sub_23B601BC8();
    _os_log_impl(&dword_23B583000, v2, v3, "%{public}s Not resuming continuation in cancelled task.", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v5, -1, -1);
    v6 = v4;
    goto LABEL_12;
  }
  v8 = *(_QWORD *)(v0 + 168);
  v7 = *(_QWORD *)(v0 + 176);
  v9 = *(_QWORD *)(v0 + 152);
  v10 = *(_QWORD *)(v0 + 160);
  v11 = *(void **)(v0 + 88);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  sub_23B6015BC();
  v12 = objc_msgSend(v11, sel_identifier);
  sub_23B6017FC();

  LOBYTE(v12) = _s15FindMyBluetooth11ServiceUUIDV2eeoiySbAC_ACtFZ_0();
  v13 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  v13(v8, v9);
  v13(v7, v9);
  if ((v12 & 1) != 0)
  {
    v14 = *(_QWORD *)(v0 + 128);
    v15 = *(_QWORD *)(v0 + 136);
    v16 = *(_QWORD *)(v0 + 120);
    v17 = *(_QWORD *)(v0 + 104) + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_discoverServicesContinuation;
    swift_beginAccess();
    sub_23B5A3C5C(v17, v16, (uint64_t *)&unk_256A35810);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v16, 1, v14) != 1)
    {
      v23 = *(_QWORD *)(v0 + 96);
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 136) + 32))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128));
      if (v23)
      {
        v24 = *(void **)(v0 + 96);
        *(_QWORD *)(v0 + 72) = v24;
        v25 = v24;
        sub_23B601A24();
      }
      else
      {
        sub_23B601A30();
      }
      v27 = *(_QWORD *)(v0 + 136);
      v26 = *(_QWORD *)(v0 + 144);
      v28 = *(_QWORD *)(v0 + 128);
      v29 = *(_QWORD *)(v0 + 112);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56))(v29, 1, 1, v28);
      swift_beginAccess();
      sub_23B5A2728(v29, v17, (uint64_t *)&unk_256A35810);
      swift_endAccess();
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
      goto LABEL_14;
    }
    sub_23B587ED4(*(_QWORD *)(v0 + 120), (uint64_t *)&unk_256A35810);
    if (qword_256A340A8 != -1)
      swift_once();
    v18 = sub_23B60185C();
    __swift_project_value_buffer(v18, (uint64_t)qword_256A346C0);
    v2 = sub_23B601844();
    v19 = sub_23B601B74();
    if (!os_log_type_enabled(v2, v19))
    {
LABEL_13:

LABEL_14:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    v20 = (uint8_t *)swift_slowAlloc();
    v21 = swift_slowAlloc();
    v30 = v21;
    *(_DWORD *)v20 = 136446210;
    *(_QWORD *)(v0 + 64) = sub_23B58E160(0xD000000000000022, 0x800000023B604560, &v30);
    sub_23B601BC8();
    _os_log_impl(&dword_23B583000, v2, v19, "%{public}s called with no discoverServicesContinuation", v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v21, -1, -1);
    v6 = v20;
LABEL_12:
    MEMORY[0x23B868A2C](v6, -1, -1);
    goto LABEL_13;
  }
  return sub_23B601D18();
}

uint64_t sub_23B59BA58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[15] = a3;
  v4[16] = v3;
  v4[13] = a1;
  v4[14] = a2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35810);
  v4[17] = swift_task_alloc();
  v4[18] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD510);
  v4[19] = v5;
  v4[20] = *(_QWORD *)(v5 - 8);
  v4[21] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1F8);
  v4[22] = v6;
  v4[23] = *(_QWORD *)(v6 - 8);
  v4[24] = swift_task_alloc();
  v7 = sub_23B601820();
  v4[25] = v7;
  v4[26] = *(_QWORD *)(v7 - 8);
  v4[27] = swift_task_alloc();
  v4[28] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B59BB58()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  id v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22[2];

  if ((sub_23B601AD8() & 1) != 0)
  {
    if (qword_256A340A8 != -1)
      swift_once();
    v1 = sub_23B60185C();
    __swift_project_value_buffer(v1, (uint64_t)qword_256A346C0);
    v2 = sub_23B601844();
    v3 = sub_23B601B74();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc();
      v5 = swift_slowAlloc();
      v22[0] = v5;
      *(_DWORD *)v4 = 136446210;
      *(_QWORD *)(v0 + 96) = sub_23B58E160(0xD000000000000032, 0x800000023B604520, v22);
      sub_23B601BC8();
      _os_log_impl(&dword_23B583000, v2, v3, "%{public}s Not resuming continuation in cancelled task.", v4, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B868A2C](v5, -1, -1);
      MEMORY[0x23B868A2C](v4, -1, -1);
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 216);
    v7 = *(_QWORD *)(v0 + 224);
    v9 = *(_QWORD *)(v0 + 200);
    v10 = *(_QWORD *)(v0 + 208);
    v11 = *(void **)(v0 + 104);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
    sub_23B6015BC();
    v12 = objc_msgSend(v11, sel_identifier);
    sub_23B6017FC();

    LOBYTE(v12) = _s15FindMyBluetooth11ServiceUUIDV2eeoiySbAC_ACtFZ_0();
    v13 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v13(v8, v9);
    v13(v7, v9);
    if ((v12 & 1) != 0)
    {
      v14 = *(_QWORD *)(v0 + 128);
      v15 = objc_msgSend(*(id *)(v0 + 112), sel_UUID);
      CBUUID.uuidValue.getter();

      type metadata accessor for Service();
      sub_23B6015D4();
      v16 = (uint64_t *)(v14 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_services);
      swift_beginAccess();
      v17 = *v16;
      if (*(_QWORD *)(v17 + 16))
      {
        v18 = *(_QWORD *)(v0 + 192);
        swift_bridgeObjectRetain();
        v19 = sub_23B58EDD4(v18);
        if ((v20 & 1) != 0)
        {
          v21 = *(_QWORD *)(*(_QWORD *)(v17 + 56) + 8 * v19);
          *(_QWORD *)(v0 + 232) = v21;
          swift_retain();
          swift_bridgeObjectRelease();
          if (v21)
          {
            swift_retain();
            return swift_task_switch();
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
      sub_23B601C40();
      swift_bridgeObjectRelease();
      v22[0] = 0xD000000000000014;
      v22[1] = 0x800000023B6044D0;
      sub_23B5A2D9C(&qword_256A34A00, (uint64_t *)&unk_2542FD1F8);
      sub_23B601DE4();
      sub_23B601958();
      swift_bridgeObjectRelease();
    }
    return sub_23B601D18();
  }
}

uint64_t sub_23B59BF98()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0[29];
  v2 = v0[18];
  v3 = OBJC_IVAR____TtC15FindMyBluetooth7Service_discoverCharacteristicsContinuation;
  v0[30] = OBJC_IVAR____TtC15FindMyBluetooth7Service_discoverCharacteristicsContinuation;
  v4 = v1 + v3;
  swift_beginAccess();
  sub_23B5A3C5C(v4, v2, (uint64_t *)&unk_256A35810);
  return swift_task_switch();
}

uint64_t sub_23B59C01C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  void *v6;
  id v7;

  v1 = v0[19];
  v2 = v0[20];
  v3 = v0[18];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_23B587ED4(v3, (uint64_t *)&unk_256A35810);
    return sub_23B601D18();
  }
  else
  {
    v5 = v0[15];
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 32))(v0[21], v3, v1);
    if (v5)
    {
      v6 = (void *)v0[15];
      v0[11] = v6;
      v7 = v6;
      sub_23B601A24();
    }
    else
    {
      sub_23B601A30();
    }
    return swift_task_switch();
  }
}

uint64_t sub_23B59C140()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[17];
  v2 = v0[29] + v0[30];
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v0[20] + 56))(v1, 1, 1, v0[19]);
  swift_beginAccess();
  sub_23B5A2728(v1, v2, (uint64_t *)&unk_256A35810);
  swift_endAccess();
  return swift_task_switch();
}

uint64_t sub_23B59C1D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 184);
  v1 = *(_QWORD *)(v0 + 192);
  v4 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 176);
  v5 = *(_QWORD *)(v0 + 152);
  v6 = *(_QWORD *)(v0 + 160);
  swift_release_n();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B59C280(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4[22] = a3;
  v4[23] = v3;
  v4[20] = a1;
  v4[21] = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34A38);
  v4[24] = v5;
  v4[25] = *(_QWORD *)(v5 - 8);
  v4[26] = swift_task_alloc();
  v4[27] = type metadata accessor for PeerPath();
  v4[28] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A34A40);
  v4[29] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34A48);
  v4[30] = v6;
  v4[31] = *(_QWORD *)(v6 - 8);
  v4[32] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1E8);
  v4[33] = v7;
  v4[34] = *(_QWORD *)(v7 - 8);
  v4[35] = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1F8);
  v4[36] = v8;
  v4[37] = *(_QWORD *)(v8 - 8);
  v4[38] = swift_task_alloc();
  v4[39] = swift_task_alloc();
  v9 = sub_23B601820();
  v4[40] = v9;
  v4[41] = *(_QWORD *)(v9 - 8);
  v4[42] = swift_task_alloc();
  v4[43] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B59C3FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  void (*v7)(uint64_t, uint64_t);
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  void *v18;
  id v19;
  _QWORD *v20;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  _BOOL4 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  void (*v43)(uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  os_log_type_t type;
  uint64_t typea;
  uint64_t v64[2];

  v2 = *(_QWORD *)(v0 + 336);
  v1 = *(_QWORD *)(v0 + 344);
  v3 = *(_QWORD *)(v0 + 320);
  v4 = *(_QWORD *)(v0 + 328);
  v5 = *(void **)(v0 + 160);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  sub_23B6015BC();
  v6 = objc_msgSend(v5, sel_identifier);
  sub_23B6017FC();

  LOBYTE(v6) = _s15FindMyBluetooth11ServiceUUIDV2eeoiySbAC_ACtFZ_0();
  v7 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v7(v2, v3);
  v7(v1, v3);
  if ((v6 & 1) != 0
    && (v8 = objc_msgSend(*(id *)(v0 + 168), sel_service),
        (*(_QWORD *)(v0 + 352) = v8) != 0))
  {
    v9 = v8;
    v10 = *(_QWORD *)(v0 + 184);
    v11 = objc_msgSend(v8, sel_UUID);
    CBUUID.uuidValue.getter();

    type metadata accessor for Service();
    sub_23B6015D4();
    v12 = (uint64_t *)(v10 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_services);
    swift_beginAccess();
    v13 = *v12;
    if (*(_QWORD *)(v13 + 16))
    {
      v14 = *(_QWORD *)(v0 + 312);
      swift_bridgeObjectRetain();
      v15 = sub_23B58EDD4(v14);
      if ((v16 & 1) != 0)
      {
        v17 = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v15);
        *(_QWORD *)(v0 + 360) = v17;
        swift_retain();
        swift_bridgeObjectRelease();
        if (v17)
        {
          v18 = *(void **)(v0 + 168);
          swift_retain();
          v19 = objc_msgSend(v18, sel_UUID);
          CBUUID.uuidValue.getter();

          type metadata accessor for Characteristic();
          sub_23B6015D4();
          v20 = (_QWORD *)swift_task_alloc();
          *(_QWORD *)(v0 + 368) = v20;
          *v20 = v0;
          v20[1] = sub_23B59CC90;
          return sub_23B58C4EC(*(_QWORD *)(v0 + 280));
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    if (qword_256A340A8 != -1)
      swift_once();
    v23 = *(_QWORD *)(v0 + 304);
    v24 = *(_QWORD *)(v0 + 312);
    v25 = *(_QWORD *)(v0 + 288);
    v26 = *(_QWORD *)(v0 + 296);
    v27 = sub_23B60185C();
    __swift_project_value_buffer(v27, (uint64_t)qword_256A346C0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v23, v24, v25);
    swift_retain();
    v28 = sub_23B601844();
    v29 = sub_23B601B80();
    v30 = os_log_type_enabled(v28, v29);
    v32 = *(_QWORD *)(v0 + 296);
    v31 = *(_QWORD *)(v0 + 304);
    v33 = *(_QWORD *)(v0 + 288);
    if (v30)
    {
      type = v29;
      v34 = *(_QWORD *)(v0 + 216);
      v35 = *(_QWORD *)(v0 + 224);
      v60 = *(_QWORD *)(v0 + 304);
      v36 = *(_QWORD *)(v0 + 184);
      v37 = swift_slowAlloc();
      v61 = swift_slowAlloc();
      v64[0] = v61;
      *(_DWORD *)v37 = 136446466;
      sub_23B58E8B8(v36 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_peerPath, v35);
      v38 = (uint64_t *)(v35 + *(int *)(v34 + 32));
      v58 = v32;
      v40 = *v38;
      v39 = v38[1];
      swift_bridgeObjectRetain();
      sub_23B5A3CA0(v35, (uint64_t (*)(_QWORD))type metadata accessor for PeerPath);
      *(_QWORD *)(v0 + 88) = sub_23B58E160(v40, v39, v64);
      sub_23B601BC8();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 12) = 2082;
      sub_23B5A2D9C(&qword_256A34A00, (uint64_t *)&unk_2542FD1F8);
      v41 = sub_23B601DE4();
      *(_QWORD *)(v0 + 96) = sub_23B58E160(v41, v42, v64);
      sub_23B601BC8();
      swift_bridgeObjectRelease();
      v43 = *(void (**)(uint64_t, uint64_t))(v58 + 8);
      v43(v60, v33);
      _os_log_impl(&dword_23B583000, v28, type, "%{public}s: Missing service for %{public}s", (uint8_t *)v37, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B868A2C](v61, -1, -1);
      MEMORY[0x23B868A2C](v37, -1, -1);
    }
    else
    {
      swift_release();
      v43 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
      v43(v31, v33);
    }

    v44 = *(_QWORD *)(v0 + 312);
    v45 = *(_QWORD *)(v0 + 288);
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    v22 = (void *)swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();

    v43(v44, v45);
  }
  else
  {
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    v22 = (void *)swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  if (qword_256A340A8 != -1)
    swift_once();
  v46 = sub_23B60185C();
  __swift_project_value_buffer(v46, (uint64_t)qword_256A346C0);
  swift_retain();
  v47 = v22;
  v48 = sub_23B601844();
  v49 = sub_23B601B80();
  if (os_log_type_enabled(v48, v49))
  {
    v50 = *(_QWORD *)(v0 + 216);
    v51 = *(_QWORD *)(v0 + 224);
    v52 = *(_QWORD *)(v0 + 184);
    v53 = swift_slowAlloc();
    v59 = (_QWORD *)swift_slowAlloc();
    typea = swift_slowAlloc();
    v64[0] = typea;
    *(_DWORD *)v53 = 136446722;
    sub_23B58E8B8(v52 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_peerPath, v51);
    v54 = (uint64_t *)(v51 + *(int *)(v50 + 32));
    v55 = *v54;
    v56 = v54[1];
    swift_bridgeObjectRetain();
    sub_23B5A3CA0(v51, (uint64_t (*)(_QWORD))type metadata accessor for PeerPath);
    *(_QWORD *)(v0 + 136) = sub_23B58E160(v55, v56, v64);
    sub_23B601BC8();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v53 + 12) = 2082;
    *(_QWORD *)(v0 + 120) = sub_23B58E160(0xD000000000000026, 0x800000023B6044A0, v64);
    sub_23B601BC8();
    *(_WORD *)(v53 + 22) = 2114;
    v57 = sub_23B6016C4();
    *(_QWORD *)(v0 + 80) = v57;
    sub_23B601BC8();
    *v59 = v57;

    _os_log_impl(&dword_23B583000, v48, v49, "%{public}s: Error in Peripheral delegate %{public}s: %{public}@", (uint8_t *)v53, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35D50);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v59, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](typea, -1, -1);
    MEMORY[0x23B868A2C](v53, -1, -1);

  }
  else
  {
    swift_release();

  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B59CC90(uint64_t a1)
{
  void *v1;
  uint64_t v2;

  *(_QWORD *)(*(_QWORD *)v2 + 376) = a1;
  swift_task_dealloc();
  if (v1)

  return swift_task_switch();
}

uint64_t sub_23B59CD0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 232);
  v2 = *(_QWORD *)(v0 + 376) + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_updateValueContinuation;
  swift_beginAccess();
  sub_23B5A3C5C(v2, v1, &qword_256A34A40);
  return swift_task_switch();
}

uint64_t sub_23B59CD8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  _BOOL4 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  unint64_t v34;
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  void *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53[2];

  v2 = *(_QWORD *)(v0 + 240);
  v1 = *(_QWORD *)(v0 + 248);
  v3 = *(_QWORD *)(v0 + 232);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v3, 1, v2) == 1)
  {
    v4 = *(void **)(v0 + 352);
    v5 = *(_QWORD *)(v0 + 296);
    v48 = *(_QWORD *)(v0 + 288);
    v50 = *(_QWORD *)(v0 + 312);
    v6 = *(_QWORD *)(v0 + 272);
    v7 = *(_QWORD *)(v0 + 280);
    v8 = *(_QWORD *)(v0 + 264);
    sub_23B587ED4(v3, &qword_256A34A40);
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    v9 = (void *)swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_release_n();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v50, v48);
    if (qword_256A340A8 != -1)
      swift_once();
    v10 = sub_23B60185C();
    __swift_project_value_buffer(v10, (uint64_t)qword_256A346C0);
    swift_retain();
    v11 = v9;
    v12 = sub_23B601844();
    v13 = sub_23B601B80();
    v14 = v9;
    if (os_log_type_enabled(v12, v13))
    {
      v15 = *(_QWORD *)(v0 + 216);
      v16 = *(_QWORD *)(v0 + 224);
      v17 = *(_QWORD *)(v0 + 184);
      v45 = v14;
      v18 = swift_slowAlloc();
      v46 = (_QWORD *)swift_slowAlloc();
      v51 = swift_slowAlloc();
      v53[0] = v51;
      *(_DWORD *)v18 = 136446722;
      sub_23B58E8B8(v17 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_peerPath, v16);
      v19 = (uint64_t *)(v16 + *(int *)(v15 + 32));
      v20 = *v19;
      v21 = v19[1];
      swift_bridgeObjectRetain();
      sub_23B5A3CA0(v16, (uint64_t (*)(_QWORD))type metadata accessor for PeerPath);
      *(_QWORD *)(v0 + 136) = sub_23B58E160(v20, v21, v53);
      sub_23B601BC8();
      swift_bridgeObjectRelease();
      swift_release();
      *(_WORD *)(v18 + 12) = 2082;
      *(_QWORD *)(v0 + 120) = sub_23B58E160(0xD000000000000026, 0x800000023B6044A0, v53);
      sub_23B601BC8();
      *(_WORD *)(v18 + 22) = 2114;
      v22 = sub_23B6016C4();
      *(_QWORD *)(v0 + 80) = v22;
      sub_23B601BC8();
      *v46 = v22;

      _os_log_impl(&dword_23B583000, v12, v13, "%{public}s: Error in Peripheral delegate %{public}s: %{public}@", (uint8_t *)v18, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35D50);
      swift_arrayDestroy();
      MEMORY[0x23B868A2C](v46, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x23B868A2C](v51, -1, -1);
      MEMORY[0x23B868A2C](v18, -1, -1);

    }
    else
    {
      swift_release();

    }
    goto LABEL_14;
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v1 + 32))(*(_QWORD *)(v0 + 256), v3, v2);
  if (qword_256A340A8 != -1)
    swift_once();
  v23 = sub_23B60185C();
  __swift_project_value_buffer(v23, (uint64_t)qword_256A346C0);
  swift_retain();
  v24 = sub_23B601844();
  v25 = sub_23B601B5C();
  v26 = os_log_type_enabled(v24, v25);
  v27 = *(_QWORD *)(v0 + 376);
  if (v26)
  {
    v28 = *(_QWORD *)(v0 + 216);
    v29 = *(_QWORD *)(v0 + 224);
    v30 = (uint8_t *)swift_slowAlloc();
    v31 = swift_slowAlloc();
    *(_DWORD *)v30 = 136315138;
    v53[0] = v31;
    sub_23B58E8B8(v27 + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_peerPath, v29);
    v32 = (uint64_t *)(v29 + *(int *)(v28 + 32));
    v33 = *v32;
    v34 = v32[1];
    swift_bridgeObjectRetain();
    sub_23B5A3CA0(v29, (uint64_t (*)(_QWORD))type metadata accessor for PeerPath);
    *(_QWORD *)(v0 + 152) = sub_23B58E160(v33, v34, v53);
    sub_23B601BC8();
    swift_bridgeObjectRelease();
    swift_release();
    _os_log_impl(&dword_23B583000, v24, v25, "%s: didUpdateValue", v30, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v31, -1, -1);
    MEMORY[0x23B868A2C](v30, -1, -1);
  }
  else
  {
    swift_release();
  }

  v35 = *(void **)(v0 + 176);
  if (v35)
  {
    v36 = *(void **)(v0 + 352);
    v47 = *(_QWORD *)(v0 + 296);
    v37 = *(_QWORD *)(v0 + 280);
    v49 = *(_QWORD *)(v0 + 288);
    v52 = *(_QWORD *)(v0 + 312);
    v39 = *(_QWORD *)(v0 + 264);
    v38 = *(_QWORD *)(v0 + 272);
    v41 = *(_QWORD *)(v0 + 248);
    v40 = *(_QWORD *)(v0 + 256);
    v42 = *(_QWORD *)(v0 + 240);
    *(_QWORD *)(v0 + 144) = v35;
    v43 = v35;
    sub_23B601B20();
    swift_release_n();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v40, v42);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v39);
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v52, v49);
LABEL_14:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  return swift_task_switch();
}

uint64_t sub_23B59D41C()
{
  _QWORD *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0[47]
                                                             + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_underlyingObject), sel_value));
  if (v1)
  {
    v2 = v1;
    v3 = sub_23B601748();
    v5 = v4;

    v0[48] = v3;
    v0[49] = v5;
  }
  return swift_task_switch();
}

uint64_t sub_23B59D4A8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = *(_QWORD *)(v0 + 384);
  v1 = *(_QWORD *)(v0 + 392);
  v15 = *(_QWORD *)(v0 + 288);
  v16 = *(_QWORD *)(v0 + 312);
  v13 = *(_QWORD *)(v0 + 280);
  v14 = *(_QWORD *)(v0 + 296);
  v10 = *(void **)(v0 + 352);
  v11 = *(_QWORD *)(v0 + 272);
  v3 = *(_QWORD *)(v0 + 256);
  v12 = *(_QWORD *)(v0 + 264);
  v4 = *(_QWORD *)(v0 + 240);
  v6 = *(_QWORD *)(v0 + 200);
  v5 = *(_QWORD *)(v0 + 208);
  v8 = *(_QWORD *)(v0 + 192);
  v9 = *(_QWORD *)(v0 + 248);
  *(_QWORD *)(v0 + 64) = v2;
  *(_QWORD *)(v0 + 72) = v1;
  sub_23B5A294C(v2, v1);
  sub_23B601B14();
  swift_release();
  sub_23B5A2990(v2, v1);
  swift_release();
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v8);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v3, v4);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v13, v12);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v16, v15);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B59D628()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(void **)(v0 + 352);
  v9 = *(_QWORD *)(v0 + 296);
  v2 = *(_QWORD *)(v0 + 280);
  v10 = *(_QWORD *)(v0 + 288);
  v11 = *(_QWORD *)(v0 + 312);
  v4 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 272);
  v6 = *(_QWORD *)(v0 + 248);
  v5 = *(_QWORD *)(v0 + 256);
  v7 = *(_QWORD *)(v0 + 240);
  *(_QWORD *)(v0 + 128) = 0;
  sub_23B601B20();
  swift_release_n();
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v11, v10);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B59D74C()
{
  uint64_t v0;
  void *v1;
  id v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41[2];

  if (qword_256A340A8 != -1)
    swift_once();
  v1 = *(void **)(v0 + 168);
  v39 = sub_23B60185C();
  __swift_project_value_buffer(v39, (uint64_t)qword_256A346C0);
  swift_retain_n();
  v2 = v1;
  v3 = sub_23B601844();
  v4 = sub_23B601B74();
  if (os_log_type_enabled(v3, v4))
  {
    v6 = *(_QWORD *)(v0 + 216);
    v5 = *(_QWORD *)(v0 + 224);
    v7 = *(_QWORD *)(v0 + 184);
    v8 = *(void **)(v0 + 168);
    v9 = swift_slowAlloc();
    v35 = (_QWORD *)swift_slowAlloc();
    v37 = swift_slowAlloc();
    v41[0] = v37;
    *(_DWORD *)v9 = 136446466;
    sub_23B58E8B8(v7 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_peerPath, v5);
    v10 = (uint64_t *)(v5 + *(int *)(v6 + 32));
    v12 = *v10;
    v11 = v10[1];
    swift_bridgeObjectRetain();
    sub_23B5A3CA0(v5, (uint64_t (*)(_QWORD))type metadata accessor for PeerPath);
    *(_QWORD *)(v0 + 104) = sub_23B58E160(v12, v11, v41);
    sub_23B601BC8();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v9 + 12) = 2112;
    *(_QWORD *)(v0 + 112) = v8;
    v13 = v8;
    sub_23B601BC8();
    *v35 = v8;

    _os_log_impl(&dword_23B583000, v3, v4, "%{public}s: got update for unknown characteristic: %@", (uint8_t *)v9, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35D50);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v35, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v37, -1, -1);
    MEMORY[0x23B868A2C](v9, -1, -1);
  }
  else
  {
    v14 = *(void **)(v0 + 168);
    swift_release_n();

  }
  v15 = *(void **)(v0 + 352);
  v38 = *(_QWORD *)(v0 + 312);
  v16 = *(_QWORD *)(v0 + 288);
  v17 = *(_QWORD *)(v0 + 296);
  v18 = *(_QWORD *)(v0 + 272);
  v19 = *(_QWORD *)(v0 + 280);
  v20 = *(_QWORD *)(v0 + 264);
  type metadata accessor for CentralManager.Error();
  sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
  v21 = (void *)swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_release_n();

  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v19, v20);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v38, v16);
  if (qword_256A340A8 != -1)
    swift_once();
  __swift_project_value_buffer(v39, (uint64_t)qword_256A346C0);
  swift_retain();
  v22 = v21;
  v23 = sub_23B601844();
  v24 = sub_23B601B80();
  v25 = v21;
  if (os_log_type_enabled(v23, v24))
  {
    v26 = *(_QWORD *)(v0 + 216);
    v27 = *(_QWORD *)(v0 + 224);
    v28 = *(_QWORD *)(v0 + 184);
    v29 = swift_slowAlloc();
    v36 = (_QWORD *)swift_slowAlloc();
    v40 = swift_slowAlloc();
    v41[0] = v40;
    *(_DWORD *)v29 = 136446722;
    sub_23B58E8B8(v28 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_peerPath, v27);
    v30 = (uint64_t *)(v27 + *(int *)(v26 + 32));
    v31 = *v30;
    v32 = v30[1];
    swift_bridgeObjectRetain();
    sub_23B5A3CA0(v27, (uint64_t (*)(_QWORD))type metadata accessor for PeerPath);
    *(_QWORD *)(v0 + 136) = sub_23B58E160(v31, v32, v41);
    sub_23B601BC8();
    swift_bridgeObjectRelease();
    swift_release();
    *(_WORD *)(v29 + 12) = 2082;
    *(_QWORD *)(v0 + 120) = sub_23B58E160(0xD000000000000026, 0x800000023B6044A0, v41);
    sub_23B601BC8();
    *(_WORD *)(v29 + 22) = 2114;
    v33 = sub_23B6016C4();
    *(_QWORD *)(v0 + 80) = v33;
    sub_23B601BC8();
    *v36 = v33;

    _os_log_impl(&dword_23B583000, v23, v24, "%{public}s: Error in Peripheral delegate %{public}s: %{public}@", (uint8_t *)v29, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35D50);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v36, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v40, -1, -1);
    MEMORY[0x23B868A2C](v29, -1, -1);

  }
  else
  {
    swift_release();

  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B59DD64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[13] = a3;
  v4[14] = v3;
  v4[11] = a1;
  v4[12] = a2;
  v4[15] = type metadata accessor for PeerPath();
  v4[16] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1E8);
  v4[17] = v5;
  v4[18] = *(_QWORD *)(v5 - 8);
  v4[19] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1F8);
  v4[20] = v6;
  v4[21] = *(_QWORD *)(v6 - 8);
  v4[22] = swift_task_alloc();
  v4[23] = swift_task_alloc();
  v7 = sub_23B601820();
  v4[24] = v7;
  v4[25] = *(_QWORD *)(v7 - 8);
  v4[26] = swift_task_alloc();
  v4[27] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B59DE64()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  void (*v12)(uint64_t, uint64_t);
  __objc2_class_ro *v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  void *v24;
  id v25;
  _QWORD *v26;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  _BOOL4 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  void (*v49)(uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  id v54;
  os_log_type_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  unint64_t v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  os_log_type_t type;
  uint64_t typea;
  uint64_t v71[2];

  if ((sub_23B601AD8() & 1) != 0)
  {
    if (qword_256A340A8 != -1)
      swift_once();
    v1 = sub_23B60185C();
    __swift_project_value_buffer(v1, (uint64_t)qword_256A346C0);
    v2 = sub_23B601844();
    v3 = sub_23B601B74();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc();
      v5 = swift_slowAlloc();
      v71[0] = v5;
      *(_DWORD *)v4 = 136446210;
      *(_QWORD *)(v0 + 80) = sub_23B58E160(0xD000000000000025, 0x800000023B604470, v71);
      sub_23B601BC8();
      _os_log_impl(&dword_23B583000, v2, v3, "%{public}s Not resuming continuation in cancelled task.", v4, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B868A2C](v5, -1, -1);
      MEMORY[0x23B868A2C](v4, -1, -1);
    }
    goto LABEL_25;
  }
  v7 = *(_QWORD *)(v0 + 208);
  v6 = *(_QWORD *)(v0 + 216);
  v8 = *(_QWORD *)(v0 + 192);
  v9 = *(_QWORD *)(v0 + 200);
  v10 = *(void **)(v0 + 88);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  sub_23B6015BC();
  v11 = objc_msgSend(v10, sel_identifier);
  sub_23B6017FC();

  LOBYTE(v11) = _s15FindMyBluetooth11ServiceUUIDV2eeoiySbAC_ACtFZ_0();
  v12 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v12(v7, v8);
  v12(v6, v8);
  v13 = &CBDiscovery;
  if ((v11 & 1) != 0
    && (v14 = objc_msgSend(*(id *)(v0 + 96), sel_service),
        (*(_QWORD *)(v0 + 224) = v14) != 0))
  {
    v15 = v14;
    v16 = *(_QWORD *)(v0 + 112);
    v17 = objc_msgSend(v14, sel_UUID);
    CBUUID.uuidValue.getter();

    type metadata accessor for Service();
    sub_23B6015D4();
    v18 = (uint64_t *)(v16 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_services);
    swift_beginAccess();
    v19 = *v18;
    if (*(_QWORD *)(v19 + 16))
    {
      v20 = *(_QWORD *)(v0 + 184);
      swift_bridgeObjectRetain();
      v21 = sub_23B58EDD4(v20);
      if ((v22 & 1) != 0)
      {
        v23 = *(_QWORD *)(*(_QWORD *)(v19 + 56) + 8 * v21);
        *(_QWORD *)(v0 + 232) = v23;
        swift_retain();
        swift_bridgeObjectRelease();
        if (v23)
        {
          v24 = *(void **)(v0 + 96);
          swift_retain();
          v25 = objc_msgSend(v24, sel_UUID);
          CBUUID.uuidValue.getter();

          type metadata accessor for Characteristic();
          sub_23B6015D4();
          v26 = (_QWORD *)swift_task_alloc();
          *(_QWORD *)(v0 + 240) = v26;
          *v26 = v0;
          v26[1] = sub_23B59E868;
          return sub_23B58C4EC(*(_QWORD *)(v0 + 152));
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    if (qword_256A340A8 != -1)
      swift_once();
    v29 = *(_QWORD *)(v0 + 176);
    v30 = *(_QWORD *)(v0 + 184);
    v31 = *(_QWORD *)(v0 + 160);
    v32 = *(_QWORD *)(v0 + 168);
    v33 = sub_23B60185C();
    __swift_project_value_buffer(v33, (uint64_t)qword_256A346C0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16))(v29, v30, v31);
    swift_retain();
    v34 = sub_23B601844();
    v35 = sub_23B601B80();
    v36 = os_log_type_enabled(v34, v35);
    v38 = *(_QWORD *)(v0 + 168);
    v37 = *(_QWORD *)(v0 + 176);
    v39 = *(_QWORD *)(v0 + 160);
    if (v36)
    {
      type = v35;
      v40 = *(_QWORD *)(v0 + 120);
      v41 = *(_QWORD *)(v0 + 128);
      v66 = *(_QWORD *)(v0 + 176);
      v42 = *(_QWORD *)(v0 + 112);
      v65 = *(_QWORD *)(v0 + 160);
      v43 = swift_slowAlloc();
      v67 = swift_slowAlloc();
      v71[0] = v67;
      *(_DWORD *)v43 = 136446466;
      sub_23B58E8B8(v42 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_peerPath, v41);
      v44 = (uint64_t *)(v41 + *(int *)(v40 + 32));
      v45 = *v44;
      v46 = v44[1];
      swift_bridgeObjectRetain();
      sub_23B5A3CA0(v41, (uint64_t (*)(_QWORD))type metadata accessor for PeerPath);
      *(_QWORD *)(v0 + 64) = sub_23B58E160(v45, v46, v71);
      sub_23B601BC8();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 12) = 2082;
      sub_23B5A2D9C(&qword_256A34A00, (uint64_t *)&unk_2542FD1F8);
      v47 = sub_23B601DE4();
      *(_QWORD *)(v0 + 72) = sub_23B58E160(v47, v48, v71);
      sub_23B601BC8();
      swift_bridgeObjectRelease();
      v49 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
      v49(v66, v65);
      _os_log_impl(&dword_23B583000, v34, type, "%{public}s: Missing service for %{public}s", (uint8_t *)v43, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B868A2C](v67, -1, -1);
      MEMORY[0x23B868A2C](v43, -1, -1);

    }
    else
    {
      swift_release();
      v49 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
      v49(v37, v39);

    }
    v50 = *(_QWORD *)(v0 + 184);
    v51 = *(_QWORD *)(v0 + 160);
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    v28 = (void *)swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();

    v49(v50, v51);
    v13 = &CBDiscovery;
  }
  else
  {
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    v28 = (void *)swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  if (v13[2].name != (char *)-1)
    swift_once();
  v52 = sub_23B60185C();
  __swift_project_value_buffer(v52, (uint64_t)qword_256A346C0);
  swift_retain();
  v53 = v28;
  swift_retain();
  v54 = v28;
  v2 = sub_23B601844();
  v55 = sub_23B601B80();
  if (!os_log_type_enabled(v2, v55))
  {

    swift_release_n();
LABEL_25:

    goto LABEL_26;
  }
  v56 = *(_QWORD *)(v0 + 120);
  v57 = *(_QWORD *)(v0 + 128);
  v58 = *(_QWORD *)(v0 + 112);
  v59 = swift_slowAlloc();
  v68 = (_QWORD *)swift_slowAlloc();
  typea = swift_slowAlloc();
  v71[0] = typea;
  *(_DWORD *)v59 = 136446722;
  sub_23B58E8B8(v58 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_peerPath, v57);
  v60 = (uint64_t *)(v57 + *(int *)(v56 + 32));
  v61 = *v60;
  v62 = v60[1];
  swift_bridgeObjectRetain();
  sub_23B5A3CA0(v57, (uint64_t (*)(_QWORD))type metadata accessor for PeerPath);
  *(_QWORD *)(v0 + 56) = sub_23B58E160(v61, v62, v71);
  sub_23B601BC8();
  swift_release_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v59 + 12) = 2082;
  *(_QWORD *)(v0 + 40) = sub_23B58E160(0xD000000000000025, 0x800000023B604470, v71);
  sub_23B601BC8();
  *(_WORD *)(v59 + 22) = 2114;
  v63 = v28;
  v64 = _swift_stdlib_bridgeErrorToNSError();
  *(_QWORD *)(v0 + 48) = v64;
  sub_23B601BC8();
  *v68 = v64;

  _os_log_impl(&dword_23B583000, v2, v55, "%{public}s: Error in Peripheral delegate %{public}s: %{public}@", (uint8_t *)v59, 0x20u);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35D50);
  swift_arrayDestroy();
  MEMORY[0x23B868A2C](v68, -1, -1);
  swift_arrayDestroy();
  MEMORY[0x23B868A2C](typea, -1, -1);
  MEMORY[0x23B868A2C](v59, -1, -1);

LABEL_26:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B59E868(uint64_t a1)
{
  uint64_t v1;
  uint64_t **v2;
  uint64_t *v3;
  _QWORD *v5;

  v3 = *v2;
  v3[31] = a1;
  v3[32] = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();
  v5 = (_QWORD *)swift_task_alloc();
  v3[33] = (uint64_t)v5;
  *v5 = v3;
  v5[1] = sub_23B59E90C;
  return sub_23B5A4620(v3[13]);
}

uint64_t sub_23B59E90C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 272) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B59E970()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(void **)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 168);
  v6 = *(_QWORD *)(v0 + 144);
  v5 = *(_QWORD *)(v0 + 152);
  v7 = *(_QWORD *)(v0 + 136);
  swift_release();

  swift_release_n();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B59EA38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v21;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 152);
  v6 = *(_QWORD *)(v0 + 136);

  swift_release_n();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v7 = *(void **)(v0 + 256);
  if (qword_256A340A8 != -1)
    swift_once();
  v8 = sub_23B60185C();
  __swift_project_value_buffer(v8, (uint64_t)qword_256A346C0);
  swift_retain();
  v9 = v7;
  swift_retain();
  v10 = v7;
  v11 = sub_23B601844();
  v12 = sub_23B601B80();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = *(_QWORD *)(v0 + 120);
    v14 = *(_QWORD *)(v0 + 128);
    v15 = *(_QWORD *)(v0 + 112);
    v16 = swift_slowAlloc();
    v23 = (_QWORD *)swift_slowAlloc();
    v24 = swift_slowAlloc();
    v25 = v24;
    *(_DWORD *)v16 = 136446722;
    sub_23B58E8B8(v15 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_peerPath, v14);
    v17 = (uint64_t *)(v14 + *(int *)(v13 + 32));
    v18 = *v17;
    v19 = v17[1];
    swift_bridgeObjectRetain();
    sub_23B5A3CA0(v14, (uint64_t (*)(_QWORD))type metadata accessor for PeerPath);
    *(_QWORD *)(v0 + 56) = sub_23B58E160(v18, v19, &v25);
    sub_23B601BC8();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v16 + 12) = 2082;
    *(_QWORD *)(v0 + 40) = sub_23B58E160(0xD000000000000025, 0x800000023B604470, &v25);
    sub_23B601BC8();
    *(_WORD *)(v16 + 22) = 2114;
    v20 = v7;
    v21 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 48) = v21;
    sub_23B601BC8();
    *v23 = v21;

    _os_log_impl(&dword_23B583000, v11, v12, "%{public}s: Error in Peripheral delegate %{public}s: %{public}@", (uint8_t *)v16, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35D50);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v23, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v24, -1, -1);
    MEMORY[0x23B868A2C](v16, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B59EDC0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  uint64_t v22;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *(void **)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 168);
  v6 = *(_QWORD *)(v0 + 144);
  v5 = *(_QWORD *)(v0 + 152);
  v7 = *(_QWORD *)(v0 + 136);
  swift_release();

  swift_release_n();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  v8 = *(void **)(v0 + 272);
  if (qword_256A340A8 != -1)
    swift_once();
  v9 = sub_23B60185C();
  __swift_project_value_buffer(v9, (uint64_t)qword_256A346C0);
  swift_retain();
  v10 = v8;
  swift_retain();
  v11 = v8;
  v12 = sub_23B601844();
  v13 = sub_23B601B80();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = *(_QWORD *)(v0 + 120);
    v15 = *(_QWORD *)(v0 + 128);
    v16 = *(_QWORD *)(v0 + 112);
    v17 = swift_slowAlloc();
    v24 = (_QWORD *)swift_slowAlloc();
    v25 = swift_slowAlloc();
    v26 = v25;
    *(_DWORD *)v17 = 136446722;
    sub_23B58E8B8(v16 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_peerPath, v15);
    v18 = (uint64_t *)(v15 + *(int *)(v14 + 32));
    v19 = *v18;
    v20 = v18[1];
    swift_bridgeObjectRetain();
    sub_23B5A3CA0(v15, (uint64_t (*)(_QWORD))type metadata accessor for PeerPath);
    *(_QWORD *)(v0 + 56) = sub_23B58E160(v19, v20, &v26);
    sub_23B601BC8();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v17 + 12) = 2082;
    *(_QWORD *)(v0 + 40) = sub_23B58E160(0xD000000000000025, 0x800000023B604470, &v26);
    sub_23B601BC8();
    *(_WORD *)(v17 + 22) = 2114;
    v21 = v8;
    v22 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 48) = v22;
    sub_23B601BC8();
    *v24 = v22;

    _os_log_impl(&dword_23B583000, v12, v13, "%{public}s: Error in Peripheral delegate %{public}s: %{public}@", (uint8_t *)v17, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35D50);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v24, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v25, -1, -1);
    MEMORY[0x23B868A2C](v17, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B59F150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[13] = a3;
  v4[14] = v3;
  v4[11] = a1;
  v4[12] = a2;
  v4[15] = type metadata accessor for PeerPath();
  v4[16] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1E8);
  v4[17] = v5;
  v4[18] = *(_QWORD *)(v5 - 8);
  v4[19] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1F8);
  v4[20] = v6;
  v4[21] = *(_QWORD *)(v6 - 8);
  v4[22] = swift_task_alloc();
  v4[23] = swift_task_alloc();
  v7 = sub_23B601820();
  v4[24] = v7;
  v4[25] = *(_QWORD *)(v7 - 8);
  v4[26] = swift_task_alloc();
  v4[27] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B59F250()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  void (*v12)(uint64_t, uint64_t);
  __objc2_class_ro *v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  void *v24;
  id v25;
  _QWORD *v26;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  _BOOL4 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  void (*v49)(uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  id v54;
  os_log_type_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  unint64_t v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  os_log_type_t type;
  uint64_t typea;
  uint64_t v71[2];

  if ((sub_23B601AD8() & 1) != 0)
  {
    if (qword_256A340A8 != -1)
      swift_once();
    v1 = sub_23B60185C();
    __swift_project_value_buffer(v1, (uint64_t)qword_256A346C0);
    v2 = sub_23B601844();
    v3 = sub_23B601B74();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc();
      v5 = swift_slowAlloc();
      v71[0] = v5;
      *(_DWORD *)v4 = 136446210;
      *(_QWORD *)(v0 + 80) = sub_23B58E160(0xD000000000000032, 0x800000023B604430, v71);
      sub_23B601BC8();
      _os_log_impl(&dword_23B583000, v2, v3, "%{public}s Not resuming continuation in cancelled task.", v4, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B868A2C](v5, -1, -1);
      MEMORY[0x23B868A2C](v4, -1, -1);
    }
    goto LABEL_25;
  }
  v7 = *(_QWORD *)(v0 + 208);
  v6 = *(_QWORD *)(v0 + 216);
  v8 = *(_QWORD *)(v0 + 192);
  v9 = *(_QWORD *)(v0 + 200);
  v10 = *(void **)(v0 + 88);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  sub_23B6015BC();
  v11 = objc_msgSend(v10, sel_identifier);
  sub_23B6017FC();

  LOBYTE(v11) = _s15FindMyBluetooth11ServiceUUIDV2eeoiySbAC_ACtFZ_0();
  v12 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v12(v7, v8);
  v12(v6, v8);
  v13 = &CBDiscovery;
  if ((v11 & 1) != 0
    && (v14 = objc_msgSend(*(id *)(v0 + 96), sel_service),
        (*(_QWORD *)(v0 + 224) = v14) != 0))
  {
    v15 = v14;
    v16 = *(_QWORD *)(v0 + 112);
    v17 = objc_msgSend(v14, sel_UUID);
    CBUUID.uuidValue.getter();

    type metadata accessor for Service();
    sub_23B6015D4();
    v18 = (uint64_t *)(v16 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_services);
    swift_beginAccess();
    v19 = *v18;
    if (*(_QWORD *)(v19 + 16))
    {
      v20 = *(_QWORD *)(v0 + 184);
      swift_bridgeObjectRetain();
      v21 = sub_23B58EDD4(v20);
      if ((v22 & 1) != 0)
      {
        v23 = *(_QWORD *)(*(_QWORD *)(v19 + 56) + 8 * v21);
        *(_QWORD *)(v0 + 232) = v23;
        swift_retain();
        swift_bridgeObjectRelease();
        if (v23)
        {
          v24 = *(void **)(v0 + 96);
          swift_retain();
          v25 = objc_msgSend(v24, sel_UUID);
          CBUUID.uuidValue.getter();

          type metadata accessor for Characteristic();
          sub_23B6015D4();
          v26 = (_QWORD *)swift_task_alloc();
          *(_QWORD *)(v0 + 240) = v26;
          *v26 = v0;
          v26[1] = sub_23B59FC54;
          return sub_23B58C4EC(*(_QWORD *)(v0 + 152));
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    if (qword_256A340A8 != -1)
      swift_once();
    v29 = *(_QWORD *)(v0 + 176);
    v30 = *(_QWORD *)(v0 + 184);
    v31 = *(_QWORD *)(v0 + 160);
    v32 = *(_QWORD *)(v0 + 168);
    v33 = sub_23B60185C();
    __swift_project_value_buffer(v33, (uint64_t)qword_256A346C0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16))(v29, v30, v31);
    swift_retain();
    v34 = sub_23B601844();
    v35 = sub_23B601B80();
    v36 = os_log_type_enabled(v34, v35);
    v38 = *(_QWORD *)(v0 + 168);
    v37 = *(_QWORD *)(v0 + 176);
    v39 = *(_QWORD *)(v0 + 160);
    if (v36)
    {
      type = v35;
      v40 = *(_QWORD *)(v0 + 120);
      v41 = *(_QWORD *)(v0 + 128);
      v66 = *(_QWORD *)(v0 + 176);
      v42 = *(_QWORD *)(v0 + 112);
      v65 = *(_QWORD *)(v0 + 160);
      v43 = swift_slowAlloc();
      v67 = swift_slowAlloc();
      v71[0] = v67;
      *(_DWORD *)v43 = 136446466;
      sub_23B58E8B8(v42 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_peerPath, v41);
      v44 = (uint64_t *)(v41 + *(int *)(v40 + 32));
      v45 = *v44;
      v46 = v44[1];
      swift_bridgeObjectRetain();
      sub_23B5A3CA0(v41, (uint64_t (*)(_QWORD))type metadata accessor for PeerPath);
      *(_QWORD *)(v0 + 64) = sub_23B58E160(v45, v46, v71);
      sub_23B601BC8();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 12) = 2082;
      sub_23B5A2D9C(&qword_256A34A00, (uint64_t *)&unk_2542FD1F8);
      v47 = sub_23B601DE4();
      *(_QWORD *)(v0 + 72) = sub_23B58E160(v47, v48, v71);
      sub_23B601BC8();
      swift_bridgeObjectRelease();
      v49 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
      v49(v66, v65);
      _os_log_impl(&dword_23B583000, v34, type, "%{public}s: Missing service for %{public}s", (uint8_t *)v43, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B868A2C](v67, -1, -1);
      MEMORY[0x23B868A2C](v43, -1, -1);

    }
    else
    {
      swift_release();
      v49 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
      v49(v37, v39);

    }
    v50 = *(_QWORD *)(v0 + 184);
    v51 = *(_QWORD *)(v0 + 160);
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    v28 = (void *)swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();

    v49(v50, v51);
    v13 = &CBDiscovery;
  }
  else
  {
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    v28 = (void *)swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  if (v13[2].name != (char *)-1)
    swift_once();
  v52 = sub_23B60185C();
  __swift_project_value_buffer(v52, (uint64_t)qword_256A346C0);
  swift_retain();
  v53 = v28;
  swift_retain();
  v54 = v28;
  v2 = sub_23B601844();
  v55 = sub_23B601B80();
  if (!os_log_type_enabled(v2, v55))
  {

    swift_release_n();
LABEL_25:

    goto LABEL_26;
  }
  v56 = *(_QWORD *)(v0 + 120);
  v57 = *(_QWORD *)(v0 + 128);
  v58 = *(_QWORD *)(v0 + 112);
  v59 = swift_slowAlloc();
  v68 = (_QWORD *)swift_slowAlloc();
  typea = swift_slowAlloc();
  v71[0] = typea;
  *(_DWORD *)v59 = 136446722;
  sub_23B58E8B8(v58 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_peerPath, v57);
  v60 = (uint64_t *)(v57 + *(int *)(v56 + 32));
  v61 = *v60;
  v62 = v60[1];
  swift_bridgeObjectRetain();
  sub_23B5A3CA0(v57, (uint64_t (*)(_QWORD))type metadata accessor for PeerPath);
  *(_QWORD *)(v0 + 56) = sub_23B58E160(v61, v62, v71);
  sub_23B601BC8();
  swift_release_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v59 + 12) = 2082;
  *(_QWORD *)(v0 + 40) = sub_23B58E160(0xD000000000000032, 0x800000023B604430, v71);
  sub_23B601BC8();
  *(_WORD *)(v59 + 22) = 2114;
  v63 = v28;
  v64 = _swift_stdlib_bridgeErrorToNSError();
  *(_QWORD *)(v0 + 48) = v64;
  sub_23B601BC8();
  *v68 = v64;

  _os_log_impl(&dword_23B583000, v2, v55, "%{public}s: Error in Peripheral delegate %{public}s: %{public}@", (uint8_t *)v59, 0x20u);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35D50);
  swift_arrayDestroy();
  MEMORY[0x23B868A2C](v68, -1, -1);
  swift_arrayDestroy();
  MEMORY[0x23B868A2C](typea, -1, -1);
  MEMORY[0x23B868A2C](v59, -1, -1);

LABEL_26:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B59FC54(uint64_t a1)
{
  uint64_t v1;
  uint64_t **v2;
  uint64_t *v3;
  _QWORD *v5;

  v3 = *v2;
  v3[31] = a1;
  v3[32] = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();
  v5 = (_QWORD *)swift_task_alloc();
  v3[33] = (uint64_t)v5;
  *v5 = v3;
  v5[1] = sub_23B59FCF8;
  return sub_23B5A4D6C(v3[13]);
}

uint64_t sub_23B59FCF8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 272) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B59FD5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v21;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 152);
  v6 = *(_QWORD *)(v0 + 136);

  swift_release_n();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v7 = *(void **)(v0 + 256);
  if (qword_256A340A8 != -1)
    swift_once();
  v8 = sub_23B60185C();
  __swift_project_value_buffer(v8, (uint64_t)qword_256A346C0);
  swift_retain();
  v9 = v7;
  swift_retain();
  v10 = v7;
  v11 = sub_23B601844();
  v12 = sub_23B601B80();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = *(_QWORD *)(v0 + 120);
    v14 = *(_QWORD *)(v0 + 128);
    v15 = *(_QWORD *)(v0 + 112);
    v16 = swift_slowAlloc();
    v23 = (_QWORD *)swift_slowAlloc();
    v24 = swift_slowAlloc();
    v25 = v24;
    *(_DWORD *)v16 = 136446722;
    sub_23B58E8B8(v15 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_peerPath, v14);
    v17 = (uint64_t *)(v14 + *(int *)(v13 + 32));
    v18 = *v17;
    v19 = v17[1];
    swift_bridgeObjectRetain();
    sub_23B5A3CA0(v14, (uint64_t (*)(_QWORD))type metadata accessor for PeerPath);
    *(_QWORD *)(v0 + 56) = sub_23B58E160(v18, v19, &v25);
    sub_23B601BC8();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v16 + 12) = 2082;
    *(_QWORD *)(v0 + 40) = sub_23B58E160(0xD000000000000032, 0x800000023B604430, &v25);
    sub_23B601BC8();
    *(_WORD *)(v16 + 22) = 2114;
    v20 = v7;
    v21 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 48) = v21;
    sub_23B601BC8();
    *v23 = v21;

    _os_log_impl(&dword_23B583000, v11, v12, "%{public}s: Error in Peripheral delegate %{public}s: %{public}@", (uint8_t *)v16, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35D50);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v23, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v24, -1, -1);
    MEMORY[0x23B868A2C](v16, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5A00E4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  uint64_t v22;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *(void **)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 168);
  v6 = *(_QWORD *)(v0 + 144);
  v5 = *(_QWORD *)(v0 + 152);
  v7 = *(_QWORD *)(v0 + 136);
  swift_release();

  swift_release_n();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  v8 = *(void **)(v0 + 272);
  if (qword_256A340A8 != -1)
    swift_once();
  v9 = sub_23B60185C();
  __swift_project_value_buffer(v9, (uint64_t)qword_256A346C0);
  swift_retain();
  v10 = v8;
  swift_retain();
  v11 = v8;
  v12 = sub_23B601844();
  v13 = sub_23B601B80();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = *(_QWORD *)(v0 + 120);
    v15 = *(_QWORD *)(v0 + 128);
    v16 = *(_QWORD *)(v0 + 112);
    v17 = swift_slowAlloc();
    v24 = (_QWORD *)swift_slowAlloc();
    v25 = swift_slowAlloc();
    v26 = v25;
    *(_DWORD *)v17 = 136446722;
    sub_23B58E8B8(v16 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_peerPath, v15);
    v18 = (uint64_t *)(v15 + *(int *)(v14 + 32));
    v19 = *v18;
    v20 = v18[1];
    swift_bridgeObjectRetain();
    sub_23B5A3CA0(v15, (uint64_t (*)(_QWORD))type metadata accessor for PeerPath);
    *(_QWORD *)(v0 + 56) = sub_23B58E160(v19, v20, &v26);
    sub_23B601BC8();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v17 + 12) = 2082;
    *(_QWORD *)(v0 + 40) = sub_23B58E160(0xD000000000000032, 0x800000023B604430, &v26);
    sub_23B601BC8();
    *(_WORD *)(v17 + 22) = 2114;
    v21 = v8;
    v22 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 48) = v22;
    sub_23B601BC8();
    *v24 = v22;

    _os_log_impl(&dword_23B583000, v12, v13, "%{public}s: Error in Peripheral delegate %{public}s: %{public}@", (uint8_t *)v17, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35D50);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v24, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v25, -1, -1);
    MEMORY[0x23B868A2C](v17, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5A0474(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[4] = a1;
  v2[5] = v1;
  v2[6] = type metadata accessor for PeerPath();
  v2[7] = swift_task_alloc();
  v3 = sub_23B601820();
  v2[8] = v3;
  v2[9] = *(_QWORD *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5A0508()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void (*v7)(uint64_t, uint64_t);
  void *v8;
  uint64_t v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  void *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *(void **)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 72);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  sub_23B6015BC();
  v6 = objc_msgSend(v1, sel_identifier);
  sub_23B6017FC();

  LOBYTE(v6) = _s15FindMyBluetooth11ServiceUUIDV2eeoiySbAC_ACtFZ_0();
  v7 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v7(v3, v4);
  v7(v2, v4);
  if ((v6 & 1) == 0)
    return sub_23B601D18();
  if (qword_256A340A8 != -1)
    swift_once();
  v8 = *(void **)(v0 + 32);
  v9 = sub_23B60185C();
  __swift_project_value_buffer(v9, (uint64_t)qword_256A346C0);
  swift_retain_n();
  v10 = v8;
  v11 = sub_23B601844();
  v12 = sub_23B601B8C();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = *(_QWORD *)(v0 + 48);
    v14 = *(_QWORD *)(v0 + 56);
    v16 = *(void **)(v0 + 32);
    v15 = *(_QWORD *)(v0 + 40);
    v17 = swift_slowAlloc();
    v24 = (_QWORD *)swift_slowAlloc();
    v25 = swift_slowAlloc();
    v26 = v25;
    *(_DWORD *)v17 = 136446466;
    sub_23B58E8B8(v15 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_peerPath, v14);
    v18 = (uint64_t *)(v14 + *(int *)(v13 + 32));
    v19 = *v18;
    v20 = v18[1];
    swift_bridgeObjectRetain();
    sub_23B5A3CA0(v14, (uint64_t (*)(_QWORD))type metadata accessor for PeerPath);
    *(_QWORD *)(v0 + 16) = sub_23B58E160(v19, v20, &v26);
    sub_23B601BC8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2112;
    *(_QWORD *)(v0 + 24) = v16;
    v21 = v16;
    sub_23B601BC8();
    *v24 = v16;

    _os_log_impl(&dword_23B583000, v11, v12, "%{public}s: NOT IMPLEMENTED -- peripheralIsReadyToSendWithoutWriteResponse: %@", (uint8_t *)v17, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35D50);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v24, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v25, -1, -1);
    MEMORY[0x23B868A2C](v17, -1, -1);

  }
  else
  {
    v23 = *(void **)(v0 + 32);

    swift_release_n();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5A0898(void *a1)
{
  return sub_23B5A1870(a1, (uint64_t)&unk_250C81928, (uint64_t)&unk_256A34AC0);
}

uint64_t sub_23B5A08AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[3] = a4;
  v5[4] = a5;
  v5[2] = a1;
  v6 = sub_23B601820();
  v5[5] = v6;
  v5[6] = *(_QWORD *)(v6 - 8);
  v5[7] = swift_task_alloc();
  v5[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5A0920()
{
  uint64_t v0;
  uint64_t Strong;

  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 72) = Strong;
  if (Strong)
    return swift_task_switch();
  **(_BYTE **)(v0 + 16) = 1;
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5A09A0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  void (*v7)(uint64_t, uint64_t);

  v1 = v0[8];
  v3 = v0[6];
  v2 = v0[7];
  v5 = (void *)v0[4];
  v4 = v0[5];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  sub_23B6015BC();
  v6 = objc_msgSend(v5, sel_identifier);
  sub_23B6017FC();

  LOBYTE(v6) = _s15FindMyBluetooth11ServiceUUIDV2eeoiySbAC_ACtFZ_0();
  v7 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v7(v2, v4);
  v7(v1, v4);
  if ((v6 & 1) == 0)
    return sub_23B601D18();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23B5A0ADC()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 16) = *(_QWORD *)(v0 + 72) == 0;
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5A0B6C(void *a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  id v13;
  uint64_t result;
  uint64_t v15;
  _QWORD *v16;
  char *v17;
  id v18;
  uint64_t v19;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD530);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23B601880();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (uint64_t *)((char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *(void **)&v2[OBJC_IVAR____TtC15FindMyBluetooth46DelegateTrampoline_CBPeripheralPrivateDelegate_delegateQueue];
  *v11 = v12;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BEE5610], v8);
  v13 = v12;
  LOBYTE(v12) = sub_23B60188C();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v9 + 8))(v11, v8);
  if ((v12 & 1) != 0)
  {
    v15 = sub_23B601A78();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v7, 1, 1, v15);
    v16 = (_QWORD *)swift_allocObject();
    v16[2] = 0;
    v16[3] = 0;
    v16[4] = v2;
    v16[5] = a1;
    v16[6] = a2;
    v17 = v2;
    v18 = a1;
    swift_bridgeObjectRetain();
    sub_23B5CD248((uint64_t)v7, (uint64_t)&unk_256A34AA0, (uint64_t)v16);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23B5A0CDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[4] = a5;
  v6[5] = a6;
  v6[2] = a1;
  v6[3] = a4;
  return swift_task_switch();
}

uint64_t sub_23B5A0CF8()
{
  uint64_t v0;
  uint64_t Strong;
  _QWORD *v2;

  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 48) = Strong;
  if (Strong)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 56) = v2;
    *v2 = v0;
    v2[1] = sub_23B5A0D84;
    return sub_23B59A9F8(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  }
  else
  {
    **(_BYTE **)(v0 + 16) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23B5A0D84()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23B5A0DE0()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 16) = *(_QWORD *)(v0 + 48) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5A0E84(void *a1, void *a2, void *a3)
{
  return sub_23B5A161C(a1, a2, a3, (uint64_t)&unk_250C818D8, (uint64_t)&unk_256A34A88);
}

uint64_t sub_23B5A0E98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[5] = a6;
  v7[6] = a7;
  v7[3] = a4;
  v7[4] = a5;
  v7[2] = a1;
  return swift_task_switch();
}

uint64_t sub_23B5A0EB8()
{
  uint64_t v0;
  uint64_t Strong;
  id v2;
  _QWORD *v3;

  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 56) = Strong;
  if (Strong)
  {
    v2 = objc_msgSend(*(id *)(v0 + 40), sel_integerValue);
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 64) = v3;
    *v3 = v0;
    v3[1] = sub_23B5A0F60;
    return sub_23B59AEC8(*(_QWORD *)(v0 + 32), (uint64_t)v2, *(_QWORD *)(v0 + 48));
  }
  else
  {
    **(_BYTE **)(v0 + 16) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23B5A0F60()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23B5A0FBC()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 16) = *(_QWORD *)(v0 + 56) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5A0FE4(void *a1, void *a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  id v13;
  uint64_t result;
  uint64_t v15;
  _QWORD *v16;
  char *v17;
  id v18;
  id v19;
  uint64_t v20;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD530);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23B601880();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (uint64_t *)((char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *(void **)&v2[OBJC_IVAR____TtC15FindMyBluetooth46DelegateTrampoline_CBPeripheralPrivateDelegate_delegateQueue];
  *v11 = v12;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BEE5610], v8);
  v13 = v12;
  LOBYTE(v12) = sub_23B60188C();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v9 + 8))(v11, v8);
  if ((v12 & 1) != 0)
  {
    v15 = sub_23B601A78();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v7, 1, 1, v15);
    v16 = (_QWORD *)swift_allocObject();
    v16[2] = 0;
    v16[3] = 0;
    v16[4] = v2;
    v16[5] = a1;
    v16[6] = a2;
    v17 = v2;
    v18 = a1;
    v19 = a2;
    sub_23B5CD248((uint64_t)v7, (uint64_t)&unk_256A34A70, (uint64_t)v16);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23B5A1154(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[4] = a5;
  v6[5] = a6;
  v6[2] = a1;
  v6[3] = a4;
  return swift_task_switch();
}

uint64_t sub_23B5A1170()
{
  uint64_t v0;
  uint64_t Strong;
  _QWORD *v2;

  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 48) = Strong;
  if (Strong)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 56) = v2;
    *v2 = v0;
    v2[1] = sub_23B5A11FC;
    return sub_23B59B48C(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  }
  else
  {
    **(_BYTE **)(v0 + 16) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23B5A11FC()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23B5A12B8(void *a1, void *a2, void *a3)
{
  return sub_23B5A161C(a1, a2, a3, (uint64_t)&unk_250C81888, (uint64_t)&unk_256A34A58);
}

uint64_t sub_23B5A12CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[5] = a6;
  v7[6] = a7;
  v7[3] = a4;
  v7[4] = a5;
  v7[2] = a1;
  return swift_task_switch();
}

uint64_t sub_23B5A12EC()
{
  uint64_t v0;
  uint64_t Strong;
  _QWORD *v2;

  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 56) = Strong;
  if (Strong)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 64) = v2;
    *v2 = v0;
    v2[1] = sub_23B5A137C;
    return sub_23B59BA58(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  }
  else
  {
    **(_BYTE **)(v0 + 16) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23B5A137C()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

void sub_23B5A13E4(void *a1, uint64_t a2, void *a3, void *a4, void *a5, void (*a6)(id, id, void *))
{
  id v10;
  id v11;
  id v12;
  id v13;

  v13 = a3;
  v10 = a4;
  v11 = a1;
  v12 = a5;
  a6(v13, v10, a5);

}

uint64_t sub_23B5A1468(void *a1, void *a2, void *a3)
{
  return sub_23B5A161C(a1, a2, a3, (uint64_t)&unk_250C81860, (uint64_t)&unk_256A34A28);
}

uint64_t sub_23B5A147C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[5] = a6;
  v7[6] = a7;
  v7[3] = a4;
  v7[4] = a5;
  v7[2] = a1;
  return swift_task_switch();
}

uint64_t sub_23B5A149C()
{
  uint64_t v0;
  uint64_t Strong;
  _QWORD *v2;

  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 56) = Strong;
  if (Strong)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 64) = v2;
    *v2 = v0;
    v2[1] = sub_23B5A137C;
    return sub_23B59C280(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  }
  else
  {
    **(_BYTE **)(v0 + 16) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23B5A1538(void *a1, void *a2, void *a3)
{
  return sub_23B5A161C(a1, a2, a3, (uint64_t)&unk_250C81838, (uint64_t)&unk_256A34A10);
}

uint64_t sub_23B5A154C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[5] = a6;
  v7[6] = a7;
  v7[3] = a4;
  v7[4] = a5;
  v7[2] = a1;
  return swift_task_switch();
}

uint64_t sub_23B5A156C()
{
  uint64_t v0;
  uint64_t Strong;
  _QWORD *v2;

  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 56) = Strong;
  if (Strong)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 64) = v2;
    *v2 = v0;
    v2[1] = sub_23B5A137C;
    return sub_23B59DD64(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  }
  else
  {
    **(_BYTE **)(v0 + 16) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23B5A1608(void *a1, void *a2, void *a3)
{
  return sub_23B5A161C(a1, a2, a3, (uint64_t)&unk_250C81810, (uint64_t)&unk_256A349E8);
}

uint64_t sub_23B5A161C(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  id v17;
  uint64_t result;
  uint64_t v19;
  _QWORD *v20;
  char *v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;

  v26 = a5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD530);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23B601880();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (uint64_t *)((char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = *(void **)&v5[OBJC_IVAR____TtC15FindMyBluetooth46DelegateTrampoline_CBPeripheralPrivateDelegate_delegateQueue];
  *v15 = v16;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x24BEE5610], v12);
  v17 = v16;
  LOBYTE(v16) = sub_23B60188C();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v13 + 8))(v15, v12);
  if ((v16 & 1) != 0)
  {
    v19 = sub_23B601A78();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v11, 1, 1, v19);
    v20 = (_QWORD *)swift_allocObject();
    v20[2] = 0;
    v20[3] = 0;
    v20[4] = v5;
    v20[5] = a1;
    v20[6] = a2;
    v20[7] = a3;
    v21 = v5;
    v22 = a1;
    v23 = a2;
    v24 = a3;
    sub_23B5CD248((uint64_t)v11, v26, (uint64_t)v20);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23B5A17A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[5] = a6;
  v7[6] = a7;
  v7[3] = a4;
  v7[4] = a5;
  v7[2] = a1;
  return swift_task_switch();
}

uint64_t sub_23B5A17C0()
{
  uint64_t v0;
  uint64_t Strong;
  _QWORD *v2;

  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 56) = Strong;
  if (Strong)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 64) = v2;
    *v2 = v0;
    v2[1] = sub_23B5A137C;
    return sub_23B59F150(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  }
  else
  {
    **(_BYTE **)(v0 + 16) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23B5A185C(void *a1)
{
  return sub_23B5A1870(a1, (uint64_t)&unk_250C817E8, (uint64_t)&unk_256A349D0);
}

uint64_t sub_23B5A1870(void *a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  id v14;
  uint64_t result;
  uint64_t v16;
  _QWORD *v17;
  char *v18;
  id v19;
  uint64_t v20;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD530);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23B601880();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (uint64_t *)((char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = *(void **)&v3[OBJC_IVAR____TtC15FindMyBluetooth46DelegateTrampoline_CBPeripheralPrivateDelegate_delegateQueue];
  *v12 = v13;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BEE5610], v9);
  v14 = v13;
  LOBYTE(v13) = sub_23B60188C();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v10 + 8))(v12, v9);
  if ((v13 & 1) != 0)
  {
    v16 = sub_23B601A78();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 1, 1, v16);
    v17 = (_QWORD *)swift_allocObject();
    v17[2] = 0;
    v17[3] = 0;
    v17[4] = v3;
    v17[5] = a1;
    v18 = v3;
    v19 = a1;
    sub_23B5CD248((uint64_t)v8, a3, (uint64_t)v17);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23B5A19D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[3] = a4;
  v5[4] = a5;
  v5[2] = a1;
  return swift_task_switch();
}

uint64_t sub_23B5A19F4()
{
  uint64_t v0;
  uint64_t Strong;
  _QWORD *v2;

  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 40) = Strong;
  if (Strong)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 48) = v2;
    *v2 = v0;
    v2[1] = sub_23B5A1A80;
    return sub_23B5A0474(*(_QWORD *)(v0 + 32));
  }
  else
  {
    **(_BYTE **)(v0 + 16) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23B5A1A80()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23B5A1ADC()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 16) = *(_QWORD *)(v0 + 40) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_23B5A1B68()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DelegateTrampoline_CBPeripheralPrivateDelegate();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_23B5A1BD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_BYTE *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 48);
  v7 = swift_task_alloc();
  v8 = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 16) = v7;
  *(_QWORD *)v7 = v2;
  *(_QWORD *)(v7 + 8) = sub_23B587FA4;
  *(_QWORD *)(v7 + 48) = v6;
  *(_OWORD *)(v7 + 32) = v8;
  *(_BYTE *)(v7 + 80) = v5;
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = v4;
  return swift_task_switch();
}

uint64_t sub_23B5A1C5C()
{
  uint64_t v0;

  return sub_23B597718(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), "%{public}s cancelling connection.", (uint64_t)&unk_250C819C8, (uint64_t)&unk_256A34B78);
}

uint64_t type metadata accessor for Peripheral()
{
  uint64_t result;

  result = qword_2542FD270;
  if (!qword_2542FD270)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23B5A1CC8(uint64_t a1)
{
  uint64_t v1;

  return sub_23B593F38(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_23B5A1CD8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23B587FA4;
  return sub_23B595500(a1, v4, v5, v6);
}

uint64_t sub_23B5A1D44()
{
  uint64_t v0;

  return sub_23B597718(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), "%{public}s cancelling service discovery.", (uint64_t)&unk_250C81950, (uint64_t)&unk_256A34B20);
}

uint64_t sub_23B5A1D74()
{
  return sub_23B5884D4(qword_256A347B0, (uint64_t (*)(uint64_t))type metadata accessor for Service, (uint64_t)&protocol conformance descriptor for Service);
}

uint64_t sub_23B5A1DA0(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_23B5884D4((unint64_t *)&unk_2542FD250, (uint64_t (*)(uint64_t))type metadata accessor for Peripheral, (uint64_t)&protocol conformance descriptor for Peripheral);
  result = sub_23B5884D4(&qword_2542FD268, (uint64_t (*)(uint64_t))type metadata accessor for Peripheral, (uint64_t)&protocol conformance descriptor for Peripheral);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_23B5A1DFC()
{
  return sub_23B5884D4(&qword_2542FD260, (uint64_t (*)(uint64_t))type metadata accessor for Peripheral, (uint64_t)&protocol conformance descriptor for Peripheral);
}

uint64_t sub_23B5A1E28@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_macAddress;
  swift_beginAccess();
  return sub_23B5A3C5C(v3, a2, (uint64_t *)&unk_256A346E0);
}

uint64_t sub_23B5A1E88@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_advertisementData);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23B5A1EE8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *a1 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_rssi;
  result = swift_beginAccess();
  v5 = *(_BYTE *)(v3 + 8);
  *(_QWORD *)a2 = *(_QWORD *)v3;
  *(_BYTE *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_23B5A1F40(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t result;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  v4 = *a2 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_rssi;
  result = swift_beginAccess();
  *(_QWORD *)v4 = v2;
  *(_BYTE *)(v4 + 8) = v3;
  return result;
}

uint64_t sub_23B5A1F9C()
{
  return type metadata accessor for Peripheral();
}

void sub_23B5A1FA4()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  sub_23B5A26B0(319, (unint64_t *)&unk_2542FD660, (uint64_t (*)(uint64_t))type metadata accessor for Peripheral, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BE316B0]);
  if (v0 <= 0x3F)
  {
    sub_23B5A26B0(319, (unint64_t *)&unk_2542FD208, (uint64_t (*)(uint64_t))MEMORY[0x24BE31730], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    if (v1 <= 0x3F)
    {
      sub_23B601790();
      if (v2 <= 0x3F)
      {
        type metadata accessor for PeerPath();
        if (v3 <= 0x3F)
        {
          sub_23B58EC18();
          if (v4 <= 0x3F)
            swift_updateClassMetadata2();
        }
      }
    }
  }
}

uint64_t method lookup function for Peripheral()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Peripheral.macAddress.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of Peripheral.macAddress.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of Peripheral.macAddress.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of Peripheral.advertisementData.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of Peripheral.advertisementData.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of Peripheral.advertisementData.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of Peripheral.state.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of Peripheral.lastSeen.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of Peripheral.lastSeen.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of Peripheral.lastSeen.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of Peripheral.rssi.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of Peripheral.rssi.setter(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 304))(a1, a2 & 1);
}

uint64_t dispatch thunk of Peripheral.rssi.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t dispatch thunk of Peripheral.connected.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t dispatch thunk of Peripheral.isConnectedToSystem.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of Peripheral.isConnected.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))();
}

uint64_t dispatch thunk of Peripheral.pairingInfo.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 344) + *(_QWORD *)(*(_QWORD *)v1 + 344));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23B587844;
  return v6(a1);
}

uint64_t dispatch thunk of Peripheral.connect()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 552) + *(_QWORD *)(*(_QWORD *)v0 + 552));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_23B587FA4;
  return v4();
}

uint64_t dispatch thunk of Peripheral.connect(useCase:options:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 560) + *(_QWORD *)(*(_QWORD *)v2 + 560));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_23B587FA4;
  return v8(a1, a2);
}

uint64_t dispatch thunk of Peripheral.cancelConnection()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 568) + *(_QWORD *)(*(_QWORD *)v0 + 568));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_23B587FA4;
  return v4();
}

uint64_t dispatch thunk of Peripheral.cancelConnection(options:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 576) + *(_QWORD *)(*(_QWORD *)v1 + 576));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23B587FA4;
  return v6(a1);
}

uint64_t dispatch thunk of Peripheral.isPaired.getter()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 584) + *(_QWORD *)(*(_QWORD *)v0 + 584));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_23B58EB10;
  return v4();
}

uint64_t dispatch thunk of Peripheral.pair()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 592) + *(_QWORD *)(*(_QWORD *)v0 + 592));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_23B587FA4;
  return v4();
}

uint64_t dispatch thunk of Peripheral.unpair()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 600) + *(_QWORD *)(*(_QWORD *)v0 + 600));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_23B587FA4;
  return v4();
}

uint64_t dispatch thunk of Peripheral.set(macAddress:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 608) + *(_QWORD *)(*(_QWORD *)v1 + 608));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23B587FA4;
  return v6(a1);
}

uint64_t dispatch thunk of Peripheral.discover(serviceIdentifiers:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 616) + *(_QWORD *)(*(_QWORD *)v1 + 616));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23B58EB10;
  return v6(a1);
}

uint64_t dispatch thunk of Peripheral.subscript.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 624) + *(_QWORD *)(*(_QWORD *)v1 + 624));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23B58F8B8;
  return v6(a1);
}

uint64_t dispatch thunk of Peripheral.tag(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 632))();
}

uint64_t dispatch thunk of Peripheral.untag(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 640))();
}

uint64_t dispatch thunk of Peripheral.hasTag(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 648))();
}

uint64_t dispatch thunk of Peripheral.set(customProperty:value:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 656))();
}

uint64_t dispatch thunk of Peripheral.customProperty(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 664))();
}

uint64_t dispatch thunk of Peripheral.customPropertyNames.getter()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 672) + *(_QWORD *)(*(_QWORD *)v0 + 672));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_23B587B38;
  return v4();
}

void sub_23B5A26B0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t type metadata accessor for DelegateTrampoline_CBPeripheralPrivateDelegate()
{
  return objc_opt_self();
}

uint64_t sub_23B5A2728(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_23B5A2770(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v5;

  v4 = swift_task_alloc();
  v5 = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_23B587FA4;
  *(_OWORD *)(v4 + 24) = v5;
  *(_QWORD *)(v4 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_23B5A27DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  v4 = *(_QWORD *)(v1 + 48);
  v5 = *(_QWORD *)(v1 + 56);
  v6 = swift_task_alloc();
  v7 = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 16) = v6;
  *(_QWORD *)v6 = v2;
  *(_QWORD *)(v6 + 8) = sub_23B587FA4;
  *(_QWORD *)(v6 + 40) = v4;
  *(_QWORD *)(v6 + 48) = v5;
  *(_OWORD *)(v6 + 24) = v7;
  *(_QWORD *)(v6 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_23B5A2858(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  v4 = *(_QWORD *)(v1 + 48);
  v5 = *(_QWORD *)(v1 + 56);
  v6 = swift_task_alloc();
  v7 = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 16) = v6;
  *(_QWORD *)v6 = v2;
  *(_QWORD *)(v6 + 8) = sub_23B587FA4;
  *(_QWORD *)(v6 + 40) = v4;
  *(_QWORD *)(v6 + 48) = v5;
  *(_OWORD *)(v6 + 24) = v7;
  *(_QWORD *)(v6 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_23B5A28D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  v4 = *(_QWORD *)(v1 + 48);
  v5 = *(_QWORD *)(v1 + 56);
  v6 = swift_task_alloc();
  v7 = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 16) = v6;
  *(_QWORD *)v6 = v2;
  *(_QWORD *)(v6 + 8) = sub_23B587FA4;
  *(_QWORD *)(v6 + 40) = v4;
  *(_QWORD *)(v6 + 48) = v5;
  *(_OWORD *)(v6 + 24) = v7;
  *(_QWORD *)(v6 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_23B5A294C(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_23B5A2990(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_23B5A29D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  v4 = *(_QWORD *)(v1 + 48);
  v5 = *(_QWORD *)(v1 + 56);
  v6 = swift_task_alloc();
  v7 = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 16) = v6;
  *(_QWORD *)v6 = v2;
  *(_QWORD *)(v6 + 8) = sub_23B587FA4;
  *(_QWORD *)(v6 + 40) = v4;
  *(_QWORD *)(v6 + 48) = v5;
  *(_OWORD *)(v6 + 24) = v7;
  *(_QWORD *)(v6 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_23B5A2A50()
{
  return objectdestroy_71Tm((void (*)(_QWORD))MEMORY[0x24BEE4CA0]);
}

uint64_t sub_23B5A2A5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(v1 + 48);
  v5 = swift_task_alloc();
  v6 = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = sub_23B587FA4;
  *(_QWORD *)(v5 + 40) = v4;
  *(_OWORD *)(v5 + 24) = v6;
  *(_QWORD *)(v5 + 16) = a1;
  return swift_task_switch();
}

uint64_t objectdestroy_46Tm()
{
  id *v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_23B5A2B1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  v4 = *(_QWORD *)(v1 + 48);
  v5 = *(_QWORD *)(v1 + 56);
  v6 = swift_task_alloc();
  v7 = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 16) = v6;
  *(_QWORD *)v6 = v2;
  *(_QWORD *)(v6 + 8) = sub_23B587844;
  *(_QWORD *)(v6 + 40) = v4;
  *(_QWORD *)(v6 + 48) = v5;
  *(_OWORD *)(v6 + 24) = v7;
  *(_QWORD *)(v6 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_23B5A2B94()
{
  return objectdestroy_71Tm((void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t objectdestroy_71Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_unknownObjectRelease();

  a1(*(_QWORD *)(v1 + 48));
  return swift_deallocObject();
}

uint64_t sub_23B5A2BE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(v1 + 48);
  v5 = swift_task_alloc();
  v6 = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = sub_23B587FA4;
  *(_QWORD *)(v5 + 40) = v4;
  *(_OWORD *)(v5 + 24) = v6;
  *(_QWORD *)(v5 + 16) = a1;
  return swift_task_switch();
}

uint64_t objectdestroyTm_1()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_23B5A2C98(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_23B587FA4;
  return sub_23B5A08AC(a1, v4, v5, v7, v6);
}

uint64_t sub_23B5A2D10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A346E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

unint64_t sub_23B5A2D58()
{
  unint64_t result;

  result = qword_256A34AF8;
  if (!qword_256A34AF8)
  {
    result = MEMORY[0x23B868978](MEMORY[0x24BDCDDC0], MEMORY[0x24BDCDDE8]);
    atomic_store(result, &qword_256A34AF8);
  }
  return result;
}

uint64_t sub_23B5A2D9C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x23B868978](MEMORY[0x24BE316E8], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23B5A2DE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23B587FA4;
  v3[4] = v2;
  return swift_task_switch();
}

uint64_t sub_23B5A2E40(uint64_t a1)
{
  uint64_t *v1;

  return sub_23B597058(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_23B5A2E4C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v4 = *a1;
  v3 = a1[1];
  sub_23B58F834((uint64_t)(a1 + 2), (uint64_t)(a2 + 2));
  *a2 = v4;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23B5A2E8C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  char v22;
  _OWORD *v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t i;
  _OWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  char v33;
  unint64_t v34;
  uint64_t v35;
  _BOOL8 v36;
  uint64_t v37;
  char v38;
  unint64_t v39;
  char v40;
  _QWORD *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t result;
  _OWORD v46[2];
  _OWORD v47[2];
  __int128 v48;
  _OWORD v49[2];
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v7 = -1 << *(_BYTE *)(a1 + 32);
  v8 = ~v7;
  v9 = *(_QWORD *)(a1 + 64);
  v10 = -v7;
  v50 = a1;
  v51 = a1 + 64;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v52 = v8;
  v53 = 0;
  v54 = v11 & v9;
  v55 = a2;
  v56 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_23B5A31E0(&v48);
  v12 = *((_QWORD *)&v48 + 1);
  if (!*((_QWORD *)&v48 + 1))
    goto LABEL_27;
  v13 = v48;
  sub_23B5A39B0(v49, v47);
  v14 = *(_QWORD **)a5;
  v16 = sub_23B58ECB8(v13, v12);
  v17 = v14[2];
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v20 = v15;
  if (v14[3] >= v19)
  {
    if ((a4 & 1) != 0)
    {
      if ((v15 & 1) != 0)
        goto LABEL_12;
    }
    else
    {
      sub_23B5B4E3C();
      if ((v20 & 1) != 0)
        goto LABEL_12;
    }
LABEL_14:
    v24 = *(_QWORD **)a5;
    *(_QWORD *)(*(_QWORD *)a5 + 8 * (v16 >> 6) + 64) |= 1 << v16;
    v25 = (uint64_t *)(v24[6] + 16 * v16);
    *v25 = v13;
    v25[1] = v12;
    sub_23B5A39B0(v47, (_OWORD *)(v24[7] + 32 * v16));
    v26 = v24[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v24[2] = v28;
LABEL_16:
    sub_23B5A31E0(&v48);
    for (i = *((_QWORD *)&v48 + 1); *((_QWORD *)&v48 + 1); i = *((_QWORD *)&v48 + 1))
    {
      v31 = v48;
      sub_23B5A39B0(v49, v47);
      v32 = *(_QWORD **)a5;
      v34 = sub_23B58ECB8(v31, i);
      v35 = v32[2];
      v36 = (v33 & 1) == 0;
      v37 = v35 + v36;
      if (__OFADD__(v35, v36))
        goto LABEL_28;
      v38 = v33;
      if (v32[3] < v37)
      {
        sub_23B5B3118(v37, 1);
        v39 = sub_23B58ECB8(v31, i);
        if ((v38 & 1) != (v40 & 1))
          goto LABEL_30;
        v34 = v39;
      }
      if ((v38 & 1) != 0)
      {
        sub_23B58F834((uint64_t)v47, (uint64_t)v46);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v47);
        swift_bridgeObjectRelease();
        v30 = (_OWORD *)(*(_QWORD *)(*(_QWORD *)a5 + 56) + 32 * v34);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v30);
        sub_23B5A39B0(v46, v30);
      }
      else
      {
        v41 = *(_QWORD **)a5;
        *(_QWORD *)(*(_QWORD *)a5 + 8 * (v34 >> 6) + 64) |= 1 << v34;
        v42 = (uint64_t *)(v41[6] + 16 * v34);
        *v42 = v31;
        v42[1] = i;
        sub_23B5A39B0(v47, (_OWORD *)(v41[7] + 32 * v34));
        v43 = v41[2];
        v27 = __OFADD__(v43, 1);
        v44 = v43 + 1;
        if (v27)
          goto LABEL_29;
        v41[2] = v44;
      }
      sub_23B5A31E0(&v48);
    }
LABEL_27:
    swift_release();
    swift_bridgeObjectRelease();
    sub_23B5A39A8();
    return swift_release();
  }
  sub_23B5B3118(v19, a4 & 1);
  v21 = sub_23B58ECB8(v13, v12);
  if ((v20 & 1) == (v22 & 1))
  {
    v16 = v21;
    if ((v20 & 1) == 0)
      goto LABEL_14;
LABEL_12:
    sub_23B58F834((uint64_t)v47, (uint64_t)v46);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v47);
    swift_bridgeObjectRelease();
    v23 = (_OWORD *)(*(_QWORD *)(*(_QWORD *)a5 + 56) + 32 * v16);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v23);
    sub_23B5A39B0(v46, v23);
    goto LABEL_16;
  }
LABEL_30:
  result = sub_23B601E2C();
  __break(1u);
  return result;
}

uint64_t sub_23B5A31E0@<X0>(_OWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  int64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  void (*v19)(_OWORD *);
  uint64_t result;
  _OWORD v21[3];
  _OWORD v22[3];
  __int128 v23;
  _OWORD v24[2];

  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  v7 = v5;
  v8 = v1[4];
  if (v8)
  {
    v9 = (v8 - 1) & v8;
    v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_3:
    v11 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v10);
    v13 = *v11;
    v12 = v11[1];
    sub_23B58F834(*(_QWORD *)(v3 + 56) + 32 * v10, (uint64_t)v24);
    *(_QWORD *)&v23 = v13;
    *((_QWORD *)&v23 + 1) = v12;
    swift_bridgeObjectRetain();
    goto LABEL_23;
  }
  v14 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return result;
  }
  v15 = (unint64_t)(v6 + 64) >> 6;
  if (v14 < v15)
  {
    v16 = *(_QWORD *)(v4 + 8 * v14);
    if (v16)
    {
LABEL_7:
      v9 = (v16 - 1) & v16;
      v10 = __clz(__rbit64(v16)) + (v14 << 6);
      v7 = v14;
      goto LABEL_3;
    }
    v17 = v5 + 2;
    v7 = v5 + 1;
    if (v5 + 2 < v15)
    {
      v16 = *(_QWORD *)(v4 + 8 * v17);
      if (v16)
      {
LABEL_10:
        v14 = v17;
        goto LABEL_7;
      }
      v7 = v5 + 2;
      if (v5 + 3 < v15)
      {
        v16 = *(_QWORD *)(v4 + 8 * (v5 + 3));
        if (v16)
        {
          v14 = v5 + 3;
          goto LABEL_7;
        }
        v17 = v5 + 4;
        v7 = v5 + 3;
        if (v5 + 4 < v15)
        {
          v16 = *(_QWORD *)(v4 + 8 * v17);
          if (v16)
            goto LABEL_10;
          v14 = v5 + 5;
          v7 = v5 + 4;
          if (v5 + 5 < v15)
          {
            v16 = *(_QWORD *)(v4 + 8 * v14);
            if (v16)
              goto LABEL_7;
            v7 = v15 - 1;
            v18 = v5 + 6;
            while (v15 != v18)
            {
              v16 = *(_QWORD *)(v4 + 8 * v18++);
              if (v16)
              {
                v14 = v18 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  v9 = 0;
  memset(v24, 0, sizeof(v24));
  v23 = 0u;
LABEL_23:
  *v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  v19 = (void (*)(_OWORD *))v1[5];
  result = sub_23B5A3B48((uint64_t)&v23, (uint64_t)v22, &qword_256A34B60);
  if (*((_QWORD *)&v22[0] + 1))
  {
    v21[0] = v22[0];
    v21[1] = v22[1];
    v21[2] = v22[2];
    v19(v21);
    return sub_23B587ED4((uint64_t)v21, &qword_256A34B68);
  }
  else
  {
    a1[1] = 0u;
    a1[2] = 0u;
    *a1 = 0u;
  }
  return result;
}

uint64_t sub_23B5A33C4()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B5A33F8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_23B587FA4;
  return sub_23B597228(a1, v4, v5, v6, v7);
}

uint64_t sub_23B5A3478()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B5A34AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(_BYTE *)(v1 + 48);
  v9 = *(_QWORD *)(v1 + 56);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_23B587FA4;
  return sub_23B594114(a1, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_23B5A353C(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  _BYTE *v15;
  int v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t inited;
  uint64_t v21;
  int v22;
  unint64_t v23;
  uint64_t v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  unsigned int (*v27)(uint64_t *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  _BYTE v36[88];
  uint64_t v37;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34B98);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v36[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34708);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (uint64_t *)&v36[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (uint64_t *)&v36[-v12];
  MEMORY[0x24BDAC7A8](v11);
  v15 = &v36[-v14];
  v16 = *a1;
  sub_23B5A3C5C(a2, (uint64_t)&v36[-v14], &qword_256A34708);
  if (v16 == 18)
  {
    v17 = type metadata accessor for Peripheral.Options();
    v18 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v15, 1, v17);
    sub_23B587ED4((uint64_t)v15, &qword_256A34708);
    v19 = 0;
    if (v18 == 1)
      return v19;
    v19 = MEMORY[0x24BEE4B00];
  }
  else
  {
    sub_23B587ED4((uint64_t)v15, &qword_256A34708);
    __swift_instantiateConcreteTypeFromMangledName(qword_256A34BA0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_23B607AF0;
    *(_QWORD *)(inited + 32) = sub_23B60191C();
    *(_QWORD *)(inited + 40) = v21;
    LOBYTE(v37) = v16;
    v22 = sub_23B5C2350();
    *(_QWORD *)(inited + 72) = MEMORY[0x24BEE44F0];
    *(_DWORD *)(inited + 48) = v22;
    v23 = sub_23B5CF09C(inited);
    v24 = MEMORY[0x24BEE4B00];
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v37 = v24;
    sub_23B5A2E8C(v23, (uint64_t)sub_23B5A2E4C, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v37);
    v19 = v37;
    swift_bridgeObjectRelease();
  }
  sub_23B5A3C5C(a2, (uint64_t)v13, &qword_256A34708);
  v26 = type metadata accessor for Peripheral.Options();
  v27 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48);
  if (v27(v13, 1, v26) == 1)
  {
    sub_23B587ED4((uint64_t)v13, &qword_256A34708);
  }
  else
  {
    v28 = *v13;
    sub_23B5A3CA0((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for Peripheral.Options);
    v37 = v28;
    v29 = sub_23B5E88E8();
    if (v29)
    {
      v30 = v29;
      v31 = swift_isUniquelyReferenced_nonNull_native();
      v37 = v19;
      sub_23B5A2E8C(v30, (uint64_t)sub_23B5A2E4C, 0, v31, (uint64_t)&v37);
      v19 = v37;
      swift_bridgeObjectRelease();
    }
  }
  sub_23B5A3C5C(a2, (uint64_t)v10, &qword_256A34708);
  if (v27(v10, 1, v26) == 1)
  {
    sub_23B587ED4((uint64_t)v10, &qword_256A34708);
  }
  else
  {
    sub_23B5A3C5C((uint64_t)v10 + *(int *)(v26 + 20), (uint64_t)v6, &qword_256A34B98);
    sub_23B5A3CA0((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for Peripheral.Options);
    v32 = type metadata accessor for PeripheralPairingInfo();
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48))(v6, 1, v32) == 1)
    {
      sub_23B587ED4((uint64_t)v6, &qword_256A34B98);
    }
    else
    {
      v33 = sub_23B5F5804();
      sub_23B5A3CA0((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for PeripheralPairingInfo);
      v34 = swift_isUniquelyReferenced_nonNull_native();
      v37 = v19;
      sub_23B5A2E8C(v33, (uint64_t)sub_23B5A2E4C, 0, v34, (uint64_t)&v37);
      v19 = v37;
      swift_bridgeObjectRelease();
    }
  }
  return v19;
}

uint64_t sub_23B5A3908(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;

  v1 = 0;
  if ((a1[1] & 1) == 0)
  {
    v6 = *a1;
    v2 = sub_23B5E8BC8();
    v1 = MEMORY[0x24BEE4B00];
    if (v2)
    {
      v3 = v2;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v6 = v1;
      sub_23B5A2E8C(v3, (uint64_t)sub_23B5A2E4C, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v6);
      v1 = v6;
      swift_bridgeObjectRelease();
    }
  }
  return v1;
}

uint64_t sub_23B5A39A8()
{
  return swift_release();
}

_OWORD *sub_23B5A39B0(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_23B5A39C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23B587FA4;
  v3[4] = v2;
  return swift_task_switch();
}

uint64_t sub_23B5A3A24(uint64_t a1)
{
  uint64_t v1;

  return sub_23B59333C(a1, *(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_23B5A3A38()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A34708) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_unknownObjectRelease();
  swift_release();
  v3 = type metadata accessor for Peripheral.Options();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v0 + v2, 1, v3))
  {
    v4 = v0 + v2 + *(int *)(v3 + 20);
    v5 = type metadata accessor for PeripheralPairingInfo();
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
    {
      v6 = sub_23B601634();
      (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
      sub_23B5A2990(*(_QWORD *)(v4 + *(int *)(v5 + 20)), *(_QWORD *)(v4 + *(int *)(v5 + 20) + 8));
    }
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B5A3B48(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_23B5A3B8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD *v12;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A34708) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = *(_QWORD *)(v1 + 32);
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v10 = v1 + v5;
  v11 = *(_BYTE *)(v1 + 40);
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_23B587FA4;
  return sub_23B5935A0(a1, v6, v7, v8, v11, v10, v9);
}

uint64_t sub_23B5A3C5C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_23B5A3CA0(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_23B5A3CFC()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_23B5A3D6C()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 88));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UnsafeSendableBox(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UnsafeSendableBox);
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x23B868924](a1, v6, a5);
}

uint64_t sub_23B5A3DDC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[25] = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD510);
  v1[26] = v2;
  v1[27] = *(_QWORD *)(v2 - 8);
  v1[28] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35810);
  v1[29] = swift_task_alloc();
  v1[30] = swift_task_alloc();
  v1[31] = swift_task_alloc();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34A48);
  v1[32] = v3;
  v1[33] = *(_QWORD *)(v3 - 8);
  v1[34] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A34A40);
  v1[35] = swift_task_alloc();
  v1[36] = swift_task_alloc();
  v1[37] = type metadata accessor for PeerPath();
  v1[38] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5A3F04()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t, uint64_t);
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  os_log_type_t type;
  uint64_t v53;
  uint64_t v54;

  if (qword_256A340B0 != -1)
    swift_once();
  v1 = sub_23B60185C();
  __swift_project_value_buffer(v1, (uint64_t)qword_256A34C30);
  swift_retain_n();
  v2 = sub_23B601844();
  v3 = sub_23B601B8C();
  if (os_log_type_enabled(v2, v3))
  {
    v5 = *(_QWORD *)(v0 + 296);
    v4 = *(_QWORD *)(v0 + 304);
    type = v3;
    v6 = *(_QWORD *)(v0 + 200);
    v7 = swift_slowAlloc();
    v53 = swift_slowAlloc();
    v54 = v53;
    *(_DWORD *)v7 = 136446466;
    sub_23B58E8B8(v6 + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_peerPath, v4);
    v8 = (uint64_t *)(v4 + *(int *)(v5 + 32));
    v9 = *v8;
    v10 = v8[1];
    swift_bridgeObjectRetain();
    sub_23B589184(v4);
    *(_QWORD *)(v0 + 184) = sub_23B58E160(v9, v10, &v54);
    sub_23B601BC8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2082;
    swift_retain();
    v11 = sub_23B5AABD0((uint64_t (*)(uint64_t))type metadata accessor for Characteristic, (unint64_t *)&unk_256A34CC0, (uint64_t)&protocol conformance descriptor for Characteristic);
    v13 = v12;
    swift_release();
    *(_QWORD *)(v0 + 192) = sub_23B58E160(v11, v13, &v54);
    sub_23B601BC8();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_23B583000, v2, type, "%{public}s: Invalidate characteristic: %{public}s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v53, -1, -1);
    MEMORY[0x23B868A2C](v7, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  v14 = *(_QWORD *)(v0 + 288);
  v15 = *(_QWORD *)(v0 + 256);
  v16 = *(_QWORD *)(v0 + 264);
  v17 = *(_QWORD *)(v0 + 200) + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_updateValueContinuation;
  swift_beginAccess();
  sub_23B5A3C5C(v17, v14, &qword_256A34A40);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15);
  v19 = *(_QWORD *)(v0 + 288);
  if (v18)
  {
    sub_23B587ED4(*(_QWORD *)(v0 + 288), &qword_256A34A40);
  }
  else
  {
    v21 = *(_QWORD *)(v0 + 264);
    v20 = *(_QWORD *)(v0 + 272);
    v22 = *(_QWORD *)(v0 + 256);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v21 + 16))(v20, *(_QWORD *)(v0 + 288), v22);
    sub_23B587ED4(v19, &qword_256A34A40);
    sub_23B601A3C();
    sub_23B5884D4(&qword_256A34628, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    v23 = swift_allocError();
    sub_23B601898();
    *(_QWORD *)(v0 + 176) = v23;
    sub_23B601B20();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
  }
  v24 = *(_QWORD *)(v0 + 280);
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 264) + 56))(v24, 1, 1, *(_QWORD *)(v0 + 256));
  swift_beginAccess();
  sub_23B5A2728(v24, v17, &qword_256A34A40);
  swift_endAccess();
  if ((sub_23B601AD8() & 1) == 0)
  {
    v25 = *(_QWORD *)(v0 + 248);
    v26 = *(_QWORD *)(v0 + 208);
    v27 = *(_QWORD *)(v0 + 216);
    v28 = *(_QWORD *)(v0 + 200) + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_writeValueContinuation;
    swift_beginAccess();
    sub_23B5A3C5C(v28, v25, (uint64_t *)&unk_256A35810);
    v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 48);
    v30 = v29(v25, 1, v26);
    v31 = *(_QWORD *)(v0 + 248);
    if (v30)
    {
      sub_23B587ED4(*(_QWORD *)(v0 + 248), (uint64_t *)&unk_256A35810);
    }
    else
    {
      v33 = *(_QWORD *)(v0 + 216);
      v32 = *(_QWORD *)(v0 + 224);
      v34 = *(_QWORD *)(v0 + 208);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v33 + 16))(v32, *(_QWORD *)(v0 + 248), v34);
      sub_23B587ED4(v31, (uint64_t *)&unk_256A35810);
      sub_23B601A3C();
      sub_23B5884D4(&qword_256A34628, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
      v35 = swift_allocError();
      sub_23B601898();
      *(_QWORD *)(v0 + 168) = v35;
      sub_23B601A24();
      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v34);
    }
    v36 = *(_QWORD *)(v0 + 240);
    v37 = *(_QWORD *)(v0 + 208);
    v38 = *(_QWORD *)(v0 + 200) + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_notificationStateContinuation;
    swift_beginAccess();
    sub_23B5A3C5C(v38, v36, (uint64_t *)&unk_256A35810);
    v39 = v29(v36, 1, v37);
    v40 = *(_QWORD *)(v0 + 240);
    if (v39)
    {
      sub_23B587ED4(*(_QWORD *)(v0 + 240), (uint64_t *)&unk_256A35810);
    }
    else
    {
      v42 = *(_QWORD *)(v0 + 216);
      v41 = *(_QWORD *)(v0 + 224);
      v43 = *(_QWORD *)(v0 + 208);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v42 + 16))(v41, *(_QWORD *)(v0 + 240), v43);
      sub_23B587ED4(v40, (uint64_t *)&unk_256A35810);
      sub_23B601A3C();
      sub_23B5884D4(&qword_256A34628, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
      v44 = swift_allocError();
      sub_23B601898();
      *(_QWORD *)(v0 + 160) = v44;
      sub_23B601A24();
      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v41, v43);
    }
  }
  v45 = *(_QWORD *)(v0 + 232);
  v46 = *(_QWORD *)(v0 + 208);
  v47 = *(_QWORD *)(v0 + 200);
  v48 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 216) + 56);
  v48(v45, 1, 1, v46);
  v49 = v47 + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_writeValueContinuation;
  swift_beginAccess();
  sub_23B5A2728(v45, v49, (uint64_t *)&unk_256A35810);
  swift_endAccess();
  v48(v45, 1, 1, v46);
  v50 = v47 + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_notificationStateContinuation;
  swift_beginAccess();
  sub_23B5A2728(v45, v50, (uint64_t *)&unk_256A35810);
  swift_endAccess();
  *(_BYTE *)(v47 + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_updatingState) = 0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5A4620(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[13] = a1;
  v2[14] = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35810);
  v2[15] = swift_task_alloc();
  v2[16] = swift_task_alloc();
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD510);
  v2[17] = v3;
  v2[18] = *(_QWORD *)(v3 - 8);
  v2[19] = swift_task_alloc();
  v2[20] = type metadata accessor for PeerPath();
  v2[21] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5A4710()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(void);
  uint64_t v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42[2];

  v42[1] = *MEMORY[0x24BDAC8D0];
  if (qword_256A340B0 != -1)
    swift_once();
  v1 = (void *)v0[13];
  v2 = sub_23B60185C();
  __swift_project_value_buffer(v2, (uint64_t)qword_256A34C30);
  swift_retain();
  v3 = v1;
  swift_retain();
  v4 = v1;
  v5 = sub_23B601844();
  v6 = sub_23B601B8C();
  if (os_log_type_enabled(v5, v6))
  {
    v38 = v5;
    v8 = v0[20];
    v7 = v0[21];
    v9 = v0[14];
    v39 = v0[13];
    v10 = swift_slowAlloc();
    v40 = (_QWORD *)swift_slowAlloc();
    v41 = swift_slowAlloc();
    v42[0] = v41;
    *(_DWORD *)v10 = 136446466;
    sub_23B58E8B8(v9 + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_peerPath, v7);
    v11 = (uint64_t *)(v7 + *(int *)(v8 + 32));
    v13 = *v11;
    v12 = v11[1];
    swift_bridgeObjectRetain();
    sub_23B589184(v7);
    v0[10] = sub_23B58E160(v13, v12, v42);
    sub_23B601BC8();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v10 + 12) = 2114;
    if (v39)
    {
      v14 = v1;
      v15 = _swift_stdlib_bridgeErrorToNSError();
      v0[12] = v15;
      sub_23B601BC8();
    }
    else
    {
      v0[11] = 0;
      sub_23B601BC8();
      v15 = 0;
    }
    *v40 = v15;

    _os_log_impl(&dword_23B583000, v38, v6, "%{public}s: writeValueContinuation with error %{public}@", (uint8_t *)v10, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35D50);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v40, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v41, -1, -1);
    MEMORY[0x23B868A2C](v10, -1, -1);

  }
  else
  {
    swift_release_n();

  }
  v16 = v0[17];
  v17 = v0[18];
  v18 = v0[16];
  v19 = v0[14] + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_writeValueContinuation;
  swift_beginAccess();
  sub_23B5A3C5C(v19, v18, (uint64_t *)&unk_256A35810);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v18, 1, v16) == 1)
  {
    sub_23B587ED4(v0[16], (uint64_t *)&unk_256A35810);
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v20 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    v21 = v0[13];
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[18] + 32))(v0[19], v0[16], v0[17]);
    if (v21)
    {
      v0[9] = v1;
      v22 = v1;
      sub_23B601A24();
    }
    else
    {
      sub_23B601A30();
    }
    swift_retain();
    v23 = sub_23B601844();
    v24 = sub_23B601B8C();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = v0[20];
      v26 = v0[21];
      v27 = v0[14];
      v28 = (uint8_t *)swift_slowAlloc();
      v29 = swift_slowAlloc();
      *(_DWORD *)v28 = 136446210;
      v42[0] = v29;
      sub_23B58E8B8(v27 + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_peerPath, v26);
      v30 = (uint64_t *)(v26 + *(int *)(v25 + 32));
      v32 = *v30;
      v31 = v30[1];
      swift_bridgeObjectRetain();
      sub_23B589184(v26);
      v0[8] = sub_23B58E160(v32, v31, v42);
      sub_23B601BC8();
      swift_bridgeObjectRelease();
      swift_release();
      _os_log_impl(&dword_23B583000, v23, v24, "%{public}s: Clearing writeValueContinuation", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B868A2C](v29, -1, -1);
      MEMORY[0x23B868A2C](v28, -1, -1);
    }
    else
    {
      swift_release();
    }

    v34 = v0[18];
    v33 = v0[19];
    v35 = v0[17];
    v36 = v0[15];
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 56))(v36, 1, 1, v35);
    swift_beginAccess();
    sub_23B5A2728(v36, v19, (uint64_t *)&unk_256A35810);
    swift_endAccess();
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v35);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v20 = (uint64_t (*)(void))v0[1];
  }
  return v20();
}

uint64_t sub_23B5A4D6C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[13] = a1;
  v2[14] = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35810);
  v2[15] = swift_task_alloc();
  v2[16] = swift_task_alloc();
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD510);
  v2[17] = v3;
  v2[18] = *(_QWORD *)(v3 - 8);
  v2[19] = swift_task_alloc();
  v2[20] = type metadata accessor for PeerPath();
  v2[21] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5A4E5C()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(void);
  uint64_t v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42[2];

  v42[1] = *MEMORY[0x24BDAC8D0];
  if (qword_256A340B0 != -1)
    swift_once();
  v1 = (void *)v0[13];
  v2 = sub_23B60185C();
  __swift_project_value_buffer(v2, (uint64_t)qword_256A34C30);
  swift_retain();
  v3 = v1;
  swift_retain();
  v4 = v1;
  v5 = sub_23B601844();
  v6 = sub_23B601B8C();
  if (os_log_type_enabled(v5, v6))
  {
    v38 = v5;
    v8 = v0[20];
    v7 = v0[21];
    v9 = v0[14];
    v39 = v0[13];
    v10 = swift_slowAlloc();
    v40 = (_QWORD *)swift_slowAlloc();
    v41 = swift_slowAlloc();
    v42[0] = v41;
    *(_DWORD *)v10 = 136446466;
    sub_23B58E8B8(v9 + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_peerPath, v7);
    v11 = (uint64_t *)(v7 + *(int *)(v8 + 32));
    v13 = *v11;
    v12 = v11[1];
    swift_bridgeObjectRetain();
    sub_23B589184(v7);
    v0[10] = sub_23B58E160(v13, v12, v42);
    sub_23B601BC8();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v10 + 12) = 2114;
    if (v39)
    {
      v14 = v1;
      v15 = _swift_stdlib_bridgeErrorToNSError();
      v0[12] = v15;
      sub_23B601BC8();
    }
    else
    {
      v0[11] = 0;
      sub_23B601BC8();
      v15 = 0;
    }
    *v40 = v15;

    _os_log_impl(&dword_23B583000, v38, v6, "%{public}s: updateNotificationState with error %{public}@", (uint8_t *)v10, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35D50);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v40, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v41, -1, -1);
    MEMORY[0x23B868A2C](v10, -1, -1);

  }
  else
  {
    swift_release_n();

  }
  v16 = v0[17];
  v17 = v0[18];
  v18 = v0[16];
  v19 = v0[14] + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_notificationStateContinuation;
  swift_beginAccess();
  sub_23B5A3C5C(v19, v18, (uint64_t *)&unk_256A35810);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v18, 1, v16) == 1)
  {
    sub_23B587ED4(v0[16], (uint64_t *)&unk_256A35810);
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v20 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    v21 = v0[13];
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[18] + 32))(v0[19], v0[16], v0[17]);
    if (v21)
    {
      v0[9] = v1;
      v22 = v1;
      sub_23B601A24();
    }
    else
    {
      sub_23B601A30();
    }
    swift_retain();
    v23 = sub_23B601844();
    v24 = sub_23B601B8C();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = v0[20];
      v26 = v0[21];
      v27 = v0[14];
      v28 = (uint8_t *)swift_slowAlloc();
      v29 = swift_slowAlloc();
      *(_DWORD *)v28 = 136446210;
      v42[0] = v29;
      sub_23B58E8B8(v27 + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_peerPath, v26);
      v30 = (uint64_t *)(v26 + *(int *)(v25 + 32));
      v32 = *v30;
      v31 = v30[1];
      swift_bridgeObjectRetain();
      sub_23B589184(v26);
      v0[8] = sub_23B58E160(v32, v31, v42);
      sub_23B601BC8();
      swift_bridgeObjectRelease();
      swift_release();
      _os_log_impl(&dword_23B583000, v23, v24, "%{public}s: Clearing notificationStateContinuation", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B868A2C](v29, -1, -1);
      MEMORY[0x23B868A2C](v28, -1, -1);
    }
    else
    {
      swift_release();
    }

    v34 = v0[18];
    v33 = v0[19];
    v35 = v0[17];
    v36 = v0[15];
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 56))(v36, 1, 1, v35);
    swift_beginAccess();
    sub_23B5A2728(v36, v19, (uint64_t *)&unk_256A35810);
    swift_endAccess();
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v35);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v20 = (uint64_t (*)(void))v0[1];
  }
  return v20();
}

uint64_t sub_23B5A54B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_23B60185C();
  __swift_allocate_value_buffer(v0, qword_256A34C30);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_256A34C30);
  if (qword_2542FD4A0 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_2542FD480);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t Characteristic.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_id;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_23B5A5590@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_23B58487C((uint64_t)objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_underlyingObject), sel_properties), a1);
}

id sub_23B5A55C8()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_underlyingObject), sel_isNotifying);
}

uint64_t sub_23B5A55F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v4 = v2;
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A34AE0);
  v34 = swift_task_alloc();
  v3[6] = v34;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A34678);
  v33 = swift_task_alloc();
  v3[7] = v33;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  v30 = *(_QWORD *)(v7 - 8);
  v31 = v7;
  v29 = swift_task_alloc();
  v3[8] = v29;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD1E0);
  v26 = *(_QWORD *)(v28 - 8);
  v27 = swift_task_alloc();
  v3[9] = v27;
  v25 = type metadata accessor for PeerPath();
  v32 = swift_task_alloc();
  v3[10] = v32;
  sub_23B601820();
  v3[11] = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1E8);
  v9 = *(_QWORD *)(v8 - 8);
  v24 = v8;
  v10 = swift_task_alloc();
  v3[12] = v10;
  swift_defaultActor_initialize();
  *(_BYTE *)(v2 + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_updatingState) = 0;
  v11 = v2 + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_updateValueContinuation;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34A48);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = v2 + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_writeValueContinuation;
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD510);
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
  v15(v13, 1, 1, v14);
  v15(v4 + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_notificationStateContinuation, 1, 1, v14);
  swift_weakInit();
  v16 = *(void **)(a2 + 16);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_underlyingObject) = v16;
  v17 = objc_msgSend(v16, sel_UUID);
  CBUUID.uuidValue.getter();

  type metadata accessor for Characteristic();
  sub_23B6015D4();
  v18 = v4 + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_id;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v4 + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_id, v10, v24);
  swift_weakAssign();
  v19 = a1 + OBJC_IVAR____TtC15FindMyBluetooth7Service_peerPath;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v27, a1 + OBJC_IVAR____TtC15FindMyBluetooth7Service_peerPath, v28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v29, v19 + *(int *)(v25 + 20), v31);
  v20 = a1 + OBJC_IVAR____TtC15FindMyBluetooth7Service_id;
  v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1F8);
  v22 = *(_QWORD *)(v21 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v33, v20, v21);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v22 + 56))(v33, 0, 1, v21);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v34, v18, v24);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(v34, 0, 1, v24);
  sub_23B5C9F08(v27, v29, v33, v34, v32);
  sub_23B58F5D8(v32, v4 + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_peerPath);
  return swift_task_switch();
}

uint64_t sub_23B5A59B0()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;

  if (qword_256A340B0 != -1)
    swift_once();
  v1 = sub_23B60185C();
  __swift_project_value_buffer(v1, (uint64_t)qword_256A34C30);
  swift_retain_n();
  v2 = sub_23B601844();
  v3 = sub_23B601B68();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v9 = v5;
    *(_DWORD *)v4 = 136315138;
    v6 = sub_23B5E60AC();
    *(_QWORD *)(v0 + 16) = sub_23B58E160(v6, v7, &v9);
    sub_23B601BC8();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_23B583000, v2, v3, "%s init", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v5, -1, -1);
    MEMORY[0x23B868A2C](v4, -1, -1);
    swift_release();
    swift_release();

  }
  else
  {
    swift_release_n();
    swift_release();
    swift_release();

  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 40));
}

uint64_t Characteristic.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = v0;
  if (qword_256A340B0 != -1)
    swift_once();
  v2 = sub_23B60185C();
  __swift_project_value_buffer(v2, (uint64_t)qword_256A34C30);
  swift_retain_n();
  v3 = sub_23B601844();
  v4 = sub_23B601B68();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v13 = v6;
    *(_DWORD *)v5 = 136315138;
    swift_retain();
    v7 = sub_23B5AABD0((uint64_t (*)(uint64_t))type metadata accessor for Characteristic, (unint64_t *)&unk_256A34CC0, (uint64_t)&protocol conformance descriptor for Characteristic);
    v9 = v8;
    swift_release();
    sub_23B58E160(v7, v9, &v13);
    sub_23B601BC8();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_23B583000, v3, v4, "%s deinit", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v6, -1, -1);
    MEMORY[0x23B868A2C](v5, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  v10 = v1 + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_id;
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  sub_23B589184(v1 + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_peerPath);
  sub_23B587ED4(v1 + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_updateValueContinuation, &qword_256A34A40);
  sub_23B587ED4(v1 + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_writeValueContinuation, (uint64_t *)&unk_256A35810);
  sub_23B587ED4(v1 + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_notificationStateContinuation, (uint64_t *)&unk_256A35810);
  swift_weakDestroy();

  swift_defaultActor_destroy();
  return v1;
}

uint64_t Characteristic.__deallocating_deinit()
{
  Characteristic.deinit();
  return swift_defaultActor_deallocate();
}

uint64_t sub_23B5A5E88()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_23B5A5EA0()
{
  uint64_t v0;
  uint64_t Strong;

  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 24) = Strong;
  if (Strong)
    return swift_task_switch();
  type metadata accessor for CentralManager.Error();
  sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
  swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5A5F68()
{
  uint64_t v0;
  uint64_t Strong;

  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 32) = Strong;
  if (!Strong)
  {
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    *(_QWORD *)(v0 + 48) = swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  return swift_task_switch();
}

uint64_t sub_23B5A602C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 40) = objc_msgSend(*(id *)(*(_QWORD *)(v0 + 32) + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_underlyingObject), sel_maximumWriteValueLengthForType_, 1);
  return swift_task_switch();
}

uint64_t sub_23B5A6088()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23B5A60C8()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 40));
}

uint64_t sub_23B5A6100(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[9] = a1;
  v2[10] = v1;
  v2[11] = type metadata accessor for PeerPath();
  v2[12] = swift_task_alloc();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34C68);
  v2[13] = v3;
  v2[14] = *(_QWORD *)(v3 - 8);
  v2[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A34A40);
  v2[16] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5A61AC()
{
  uint64_t v0;
  uint64_t Strong;
  void *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t inited;
  id v25;
  uint64_t v26;
  uint64_t v27[2];

  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 136) = Strong;
  if (!Strong)
  {
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
LABEL_9:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v2 = *(void **)(*(_QWORD *)(v0 + 80) + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_underlyingObject);
  sub_23B58487C((uint64_t)objc_msgSend(v2, sel_properties), v27);
  if ((v27[0] & 2) == 0)
  {
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    swift_allocError();
    *v3 = 2;
LABEL_8:
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_release();
    goto LABEL_9;
  }
  v4 = *(_QWORD *)(v0 + 80);
  v5 = OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_updatingState;
  v6 = *(unsigned __int8 *)(v4 + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_updatingState);
  if (v6 == 2 || v6 == 1)
  {
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    swift_allocError();
    goto LABEL_8;
  }
  v8 = *(_QWORD *)(v0 + 128);
  v9 = v4 + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_updateValueContinuation;
  swift_beginAccess();
  sub_23B5A3C5C(v9, v8, &qword_256A34A40);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34A48);
  LODWORD(v9) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v8, 1, v10);
  sub_23B587ED4(v8, &qword_256A34A40);
  if ((_DWORD)v9 != 1)
    return sub_23B5A698C();
  v11 = *(_QWORD *)(v0 + 112);
  v12 = *(_QWORD *)(v0 + 120);
  v13 = *(_QWORD *)(v0 + 104);
  *(_BYTE *)(v4 + v5) = 1;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v11 + 104))(v12, *MEMORY[0x24BEE6CA0], v13);
  sub_23B601B44();
  if (qword_256A340B0 != -1)
    swift_once();
  v14 = sub_23B60185C();
  __swift_project_value_buffer(v14, (uint64_t)qword_256A34C30);
  swift_retain();
  v15 = sub_23B601844();
  v16 = sub_23B601B8C();
  if (os_log_type_enabled(v15, v16))
  {
    v18 = *(_QWORD *)(v0 + 88);
    v17 = *(_QWORD *)(v0 + 96);
    v19 = *(_QWORD *)(v0 + 80);
    v20 = (uint8_t *)swift_slowAlloc();
    v26 = swift_slowAlloc();
    *(_DWORD *)v20 = 136446210;
    v27[0] = v26;
    sub_23B58E8B8(v19 + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_peerPath, v17);
    v21 = (uint64_t *)(v17 + *(int *)(v18 + 32));
    v22 = *v21;
    v23 = v21[1];
    swift_bridgeObjectRetain();
    sub_23B589184(v17);
    *(_QWORD *)(v0 + 64) = sub_23B58E160(v22, v23, v27);
    sub_23B601BC8();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B583000, v15, v16, "%{public}s: read()", v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v26, -1, -1);
    MEMORY[0x23B868A2C](v20, -1, -1);

  }
  else
  {

    swift_release();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A346A0);
  inited = swift_initStackObject();
  *(_QWORD *)(v0 + 144) = inited;
  *(_QWORD *)(inited + 16) = v2;
  v25 = v2;
  return swift_task_switch();
}

uint64_t sub_23B5A66A8()
{
  uint64_t *v0;
  uint64_t Strong;
  _QWORD *v2;
  uint64_t v4;

  Strong = swift_weakLoadStrong();
  v0[19] = Strong;
  if (Strong)
  {
    v2 = (_QWORD *)swift_task_alloc();
    v0[20] = (uint64_t)v2;
    *v2 = v0;
    v2[1] = sub_23B5A67B4;
    return sub_23B58FC18(v0[18]);
  }
  else
  {
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    v4 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_release();
    v0[22] = v4;
    return swift_task_switch();
  }
}

uint64_t sub_23B5A67B4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 168) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B5A6818()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 144);
  swift_release();
  swift_setDeallocating();

  return swift_task_switch();
}

uint64_t sub_23B5A6868()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5A68C4()
{
  uint64_t v0;

  swift_release();
  swift_release();
  *(_QWORD *)(v0 + 176) = *(_QWORD *)(v0 + 168);
  return swift_task_switch();
}

uint64_t sub_23B5A6910()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 72);
  swift_release();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34C70);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5A698C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD v14[2];
  uint64_t v15;

  v1 = v0;
  v2 = type metadata accessor for PeerPath();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_BYTE *)(v0 + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_updatingState))
  {
    if (qword_256A340B0 != -1)
      swift_once();
    v5 = sub_23B60185C();
    __swift_project_value_buffer(v5, (uint64_t)qword_256A34C30);
    swift_retain();
    v6 = sub_23B601844();
    v7 = sub_23B601B80();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      v9 = swift_slowAlloc();
      *(_DWORD *)v8 = 136446210;
      v15 = v9;
      v14[0] = v8 + 4;
      sub_23B58E8B8(v1 + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_peerPath, (uint64_t)v4);
      v10 = (uint64_t *)&v4[*(int *)(v2 + 32)];
      v11 = *v10;
      v12 = v10[1];
      swift_bridgeObjectRetain();
      sub_23B589184((uint64_t)v4);
      v14[1] = sub_23B58E160(v11, v12, &v15);
      sub_23B601BC8();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23B583000, v6, v7, "%{public}s: Unexpectedly in .idle updateMode while having a continuation!", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B868A2C](v9, -1, -1);
      MEMORY[0x23B868A2C](v8, -1, -1);

    }
    else
    {

      swift_release();
    }
  }
  type metadata accessor for CentralManager.Error();
  sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
  swift_allocError();
  swift_storeEnumTagMultiPayload();
  return swift_willThrow();
}

uint64_t sub_23B5A6CA0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[4];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD530);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23B601A78();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = a2;
  v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  swift_retain();
  if (v9 == 1)
  {
    sub_23B587ED4((uint64_t)v5, &qword_2542FD530);
    v10 = 0;
    v11 = 0;
  }
  else
  {
    sub_23B601A6C();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
    if (v8[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v10 = sub_23B601A18();
      v11 = v12;
      swift_unknownObjectRelease();
    }
    else
    {
      v10 = 0;
      v11 = 0;
    }
  }
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = &unk_256A34DB0;
  *(_QWORD *)(v13 + 24) = v8;
  if (v11 | v10)
  {
    v15[0] = 0;
    v15[1] = 0;
    v15[2] = v10;
    v15[3] = v11;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_23B5A6E74()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23B587FA4;
  return sub_23B5A6EBC();
}

uint64_t sub_23B5A6EBC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[15] = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35810);
  v1[16] = swift_task_alloc();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34A48);
  v1[17] = v2;
  v1[18] = *(_QWORD *)(v2 - 8);
  v1[19] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A34A40);
  v1[20] = swift_task_alloc();
  v1[21] = swift_task_alloc();
  v1[22] = type metadata accessor for PeerPath();
  v1[23] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5A6F9C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;

  if (qword_256A340B0 != -1)
    swift_once();
  v1 = (_QWORD *)(v0 + 120);
  v2 = sub_23B60185C();
  __swift_project_value_buffer(v2, (uint64_t)qword_256A34C30);
  swift_retain();
  v3 = sub_23B601844();
  v4 = sub_23B601B8C();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v0 + 184);
    v6 = *(_QWORD *)(v0 + 120);
    v48 = *(_QWORD *)(v0 + 176);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v49 = v8;
    *(_DWORD *)v7 = 136446210;
    sub_23B58E8B8(v6 + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_peerPath, v5);
    v9 = (uint64_t *)(v5 + *(int *)(v48 + 32));
    v10 = *v9;
    v11 = v9[1];
    swift_bridgeObjectRetain();
    sub_23B589184(v5);
    v12 = v10;
    v1 = (_QWORD *)(v0 + 120);
    *(_QWORD *)(v0 + 112) = sub_23B58E160(v12, v11, &v49);
    sub_23B601BC8();
    swift_bridgeObjectRelease();
    swift_release();
    _os_log_impl(&dword_23B583000, v3, v4, "%{public}s: Setting updatingState to .idle", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v8, -1, -1);
    MEMORY[0x23B868A2C](v7, -1, -1);
  }
  else
  {
    swift_release();
  }

  *(_BYTE *)(*v1 + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_updatingState) = 0;
  swift_retain();
  v13 = sub_23B601844();
  v14 = sub_23B601B8C();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = *(_QWORD *)(v0 + 176);
    v16 = *(_QWORD *)(v0 + 184);
    v17 = *(_QWORD *)(v0 + 120);
    v18 = (uint8_t *)swift_slowAlloc();
    v19 = swift_slowAlloc();
    v49 = v19;
    *(_DWORD *)v18 = 136446210;
    sub_23B58E8B8(v17 + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_peerPath, v16);
    v20 = (uint64_t *)(v16 + *(int *)(v15 + 32));
    v21 = *v20;
    v22 = v20[1];
    swift_bridgeObjectRetain();
    sub_23B589184(v16);
    *(_QWORD *)(v0 + 104) = sub_23B58E160(v21, v22, &v49);
    sub_23B601BC8();
    swift_bridgeObjectRelease();
    swift_release();
    _os_log_impl(&dword_23B583000, v13, v14, "%{public}s: Clearing updateValueContinuation", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v19, -1, -1);
    MEMORY[0x23B868A2C](v18, -1, -1);
  }
  else
  {
    swift_release();
  }

  v23 = *(_QWORD *)(v0 + 168);
  v24 = *(_QWORD *)(v0 + 136);
  v25 = *(_QWORD *)(v0 + 144);
  v26 = *(_QWORD *)(v0 + 120) + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_updateValueContinuation;
  swift_beginAccess();
  sub_23B5A3C5C(v26, v23, &qword_256A34A40);
  v27 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24);
  v28 = *(_QWORD *)(v0 + 168);
  if (v27)
  {
    sub_23B587ED4(*(_QWORD *)(v0 + 168), &qword_256A34A40);
  }
  else
  {
    v30 = *(_QWORD *)(v0 + 144);
    v29 = *(_QWORD *)(v0 + 152);
    v31 = *(_QWORD *)(v0 + 136);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v30 + 16))(v29, *(_QWORD *)(v0 + 168), v31);
    sub_23B587ED4(v28, &qword_256A34A40);
    *(_QWORD *)(v0 + 96) = 0;
    sub_23B601B20();
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v31);
  }
  v32 = *(_QWORD *)(v0 + 160);
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 144) + 56))(v32, 1, 1, *(_QWORD *)(v0 + 136));
  swift_beginAccess();
  sub_23B5A2728(v32, v26, &qword_256A34A40);
  swift_endAccess();
  swift_retain();
  v33 = sub_23B601844();
  v34 = sub_23B601B8C();
  if (os_log_type_enabled(v33, v34))
  {
    v35 = *(_QWORD *)(v0 + 176);
    v36 = *(_QWORD *)(v0 + 184);
    v37 = *(_QWORD *)(v0 + 120);
    v38 = (uint8_t *)swift_slowAlloc();
    v39 = swift_slowAlloc();
    v49 = v39;
    *(_DWORD *)v38 = 136446210;
    sub_23B58E8B8(v37 + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_peerPath, v36);
    v40 = (uint64_t *)(v36 + *(int *)(v35 + 32));
    v42 = *v40;
    v41 = v40[1];
    swift_bridgeObjectRetain();
    sub_23B589184(v36);
    *(_QWORD *)(v0 + 88) = sub_23B58E160(v42, v41, &v49);
    sub_23B601BC8();
    swift_bridgeObjectRelease();
    swift_release();
    _os_log_impl(&dword_23B583000, v33, v34, "%{public}s: Clearing notificationStateContinuation", v38, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v39, -1, -1);
    MEMORY[0x23B868A2C](v38, -1, -1);
  }
  else
  {
    swift_release();
  }

  v44 = *(_QWORD *)(v0 + 120);
  v43 = *(_QWORD *)(v0 + 128);
  v45 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD510);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v43, 1, 1, v45);
  v46 = v44 + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_notificationStateContinuation;
  swift_beginAccess();
  sub_23B5A2728(v43, v46, (uint64_t *)&unk_256A35810);
  swift_endAccess();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5A75FC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[14] = a1;
  v2[15] = v1;
  v2[16] = type metadata accessor for PeerPath();
  v2[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35810);
  v2[18] = swift_task_alloc();
  v2[19] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5A768C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 112) + 16);
  *(_QWORD *)(v0 + 160) = v1;
  if (v1)
  {
    v2 = (char *)&loc_23B5A76D0 + 4 * byte_23B607CE8[*(_QWORD *)(swift_bridgeObjectRetain() + 40) >> 62];
    __asm { BR              X9 }
  }
  type metadata accessor for CentralManager.Error();
  sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
  swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5A7A00(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 208) = a1;
  *(_QWORD *)(v3 + 216) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

void sub_23B5A7A6C()
{
  __asm { BR              X14 }
}

void sub_23B5A7EF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t *a16)
{
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  NSObject *v19;
  uint64_t v20;
  os_log_type_t v21;
  uint64_t v22;
  unint64_t v23;

  *(_QWORD *)(v20 + 14) = BYTE6(v18);
  *(_WORD *)(v20 + 22) = 2080;
  *(_QWORD *)(v16 + 64) = v17;
  *(_QWORD *)(v16 + 72) = v18;
  sub_23B5A2D58();
  v22 = sub_23B601670();
  *(_QWORD *)(v20 + 24) = sub_23B58E160(v22, v23, a16);
  swift_bridgeObjectRelease();
  sub_23B5A2990(v17, v18);
  sub_23B5A2990(v17, v18);
  _os_log_impl(&dword_23B583000, v19, v21, "%{public}s: Sending packet [%ld bytes]: %s", (uint8_t *)v20, 0x20u);
  swift_arrayDestroy();
  MEMORY[0x23B868A2C](a14, -1, -1);
  MEMORY[0x23B868A2C](v20, -1, -1);
  JUMPOUT(0x23B5A7FF8);
}

uint64_t sub_23B5A80E8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 288) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B5A8174()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;

  v1 = *(_QWORD *)(v0 + 264);
  v2 = *(_QWORD *)(v0 + 160);
  sub_23B5A2990(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 256));
  if (v1 == v2)
  {
    swift_bridgeObjectRelease();
    swift_retain();
    v3 = sub_23B601844();
    v4 = sub_23B601B8C();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = *(_QWORD *)(v0 + 128);
      v6 = *(_QWORD *)(v0 + 136);
      v7 = *(_QWORD *)(v0 + 120) + *(_QWORD *)(v0 + 232);
      v8 = (uint8_t *)swift_slowAlloc();
      v9 = swift_slowAlloc();
      v33 = v9;
      *(_DWORD *)v8 = 136446210;
      sub_23B58E8B8(v7, v6);
      v10 = (uint64_t *)(v6 + *(int *)(v5 + 32));
      v12 = *v10;
      v11 = v10[1];
      swift_bridgeObjectRetain();
      sub_23B589184(v6);
      *(_QWORD *)(v0 + 88) = sub_23B58E160(v12, v11, &v33);
      sub_23B601BC8();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23B583000, v3, v4, "%{public}s: Clearing writeValueContinuation", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B868A2C](v9, -1, -1);
      MEMORY[0x23B868A2C](v8, -1, -1);

    }
    else
    {

      swift_release();
    }
    v26 = *(_QWORD *)(v0 + 144);
    v27 = *(_QWORD *)(v0 + 120) + *(_QWORD *)(v0 + 176);
    (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 192) + 56))(v26, 1, 1, *(_QWORD *)(v0 + 184));
    swift_beginAccess();
    sub_23B5A2728(v26, v27, (uint64_t *)&unk_256A35810);
    swift_endAccess();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 264);
    v14 = *(_QWORD *)(v0 + 112) + 16 * v13;
    v15 = *(_QWORD *)(v14 + 32);
    *(_QWORD *)(v0 + 248) = v15;
    v16 = *(_QWORD *)(v14 + 40);
    *(_QWORD *)(v0 + 256) = v16;
    *(_QWORD *)(v0 + 264) = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      JUMPOUT(0x23B5A86ACLL);
    }
    sub_23B5A294C(v15, v16);
    sub_23B5A294C(v15, v16);
    swift_retain();
    sub_23B5A294C(v15, v16);
    v17 = sub_23B601844();
    v18 = sub_23B601B8C();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = *(_QWORD *)(v0 + 128);
      v20 = *(_QWORD *)(v0 + 136);
      v21 = *(_QWORD *)(v0 + 120) + *(_QWORD *)(v0 + 232);
      v22 = swift_slowAlloc();
      *(_QWORD *)(v0 + 80) = swift_slowAlloc();
      *(_DWORD *)v22 = 136446722;
      sub_23B58E8B8(v21, v20);
      v23 = (uint64_t *)(v20 + *(int *)(v19 + 32));
      v25 = *v23;
      v24 = v23[1];
      swift_bridgeObjectRetain();
      sub_23B589184(v20);
      *(_QWORD *)(v22 + 4) = sub_23B58E160(v25, v24, (uint64_t *)(v0 + 80));
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2048;
      __asm { BR              X10 }
    }
    swift_release();
    sub_23B5A2990(v15, v16);
    sub_23B5A2990(v15, v16);

    v29 = *(_QWORD *)(v0 + 168);
    v30 = *(_QWORD *)(v0 + 120);
    v31 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 272) = v31;
    v31[2] = v30;
    v31[3] = v29;
    v31[4] = v15;
    v31[5] = v16;
    v32 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 280) = v32;
    *v32 = v0;
    v32[1] = sub_23B5A80E8;
    return sub_23B601E14();
  }
}

uint64_t sub_23B5A86C4()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5A871C()
{
  uint64_t v0;

  sub_23B5A2990(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 256));
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5A8780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;

  v7[14] = a6;
  v7[15] = a7;
  v7[12] = a4;
  v7[13] = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD510);
  v7[16] = v8;
  v7[17] = *(_QWORD *)(v8 - 8);
  v7[18] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35810);
  v7[19] = swift_task_alloc();
  v7[20] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5A8820()
{
  uint64_t v0;
  void *v1;
  uint64_t inited;
  id v3;

  v1 = *(void **)(*(_QWORD *)(v0 + 120) + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_underlyingObject);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A346A0);
  inited = swift_initStackObject();
  *(_QWORD *)(v0 + 168) = inited;
  *(_QWORD *)(inited + 16) = v1;
  v3 = v1;
  return swift_task_switch();
}

uint64_t sub_23B5A8894()
{
  uint64_t *v0;
  uint64_t Strong;
  _QWORD *v2;
  uint64_t v4;

  Strong = swift_weakLoadStrong();
  v0[22] = Strong;
  if (Strong)
  {
    v2 = (_QWORD *)swift_task_alloc();
    v0[23] = (uint64_t)v2;
    *v2 = v0;
    v2[1] = sub_23B5A8990;
    return sub_23B5904A8(v0[13], v0[14], v0[21], 0);
  }
  else
  {
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    v4 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    v0[25] = v4;
    return swift_task_switch();
  }
}

uint64_t sub_23B5A8990()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 192) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B5A89F4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 168);
  swift_release();
  swift_setDeallocating();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5A8A50()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 200) = *(_QWORD *)(v0 + 192);
  return swift_task_switch();
}

uint64_t sub_23B5A8A94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;

  v2 = *(_QWORD *)(v0 + 160);
  v1 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 120);
  swift_setDeallocating();

  v6 = v5 + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_writeValueContinuation;
  swift_beginAccess();
  sub_23B5A3C5C(v6, v2, (uint64_t *)&unk_256A35810);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3))
  {
    sub_23B587ED4(*(_QWORD *)(v0 + 160), (uint64_t *)&unk_256A35810);
  }
  else
  {
    v7 = *(void **)(v0 + 200);
    v8 = *(_QWORD *)(v0 + 160);
    v10 = *(_QWORD *)(v0 + 136);
    v9 = *(_QWORD *)(v0 + 144);
    v11 = *(_QWORD *)(v0 + 128);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v9, v8, v11);
    sub_23B587ED4(v8, (uint64_t *)&unk_256A35810);
    *(_QWORD *)(v0 + 88) = v7;
    v12 = v7;
    sub_23B601A24();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  }
  v13 = *(void **)(v0 + 200);
  v14 = *(_QWORD *)(v0 + 152);
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 136) + 56))(v14, 1, 1, *(_QWORD *)(v0 + 128));
  swift_beginAccess();
  sub_23B5A2728(v14, v6, (uint64_t *)&unk_256A35810);
  swift_endAccess();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5A8C28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[15] = a2;
  v3[16] = v2;
  v3[14] = a1;
  v3[17] = type metadata accessor for PeerPath();
  v3[18] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35810);
  v3[19] = swift_task_alloc();
  v3[20] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5A8CBC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 120) + 16);
  *(_QWORD *)(v0 + 168) = v1;
  if (v1)
  {
    v2 = (char *)&loc_23B5A8D00 + 4 * byte_23B607CEC[*(_QWORD *)(swift_bridgeObjectRetain() + 40) >> 62];
    __asm { BR              X9 }
  }
  type metadata accessor for CentralManager.Error();
  sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
  swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5A9030(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 216) = a1;
  *(_QWORD *)(v3 + 224) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

void sub_23B5A909C()
{
  __asm { BR              X14 }
}

uint64_t sub_23B5A9234()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 240) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B5A9298()
{
  uint64_t *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v31;
  uint64_t v32;

  if (qword_256A340B0 != -1)
    swift_once();
  v1 = sub_23B60185C();
  v0[31] = __swift_project_value_buffer(v1, (uint64_t)qword_256A34C30);
  swift_bridgeObjectRetain();
  swift_retain();
  v2 = sub_23B601844();
  v3 = sub_23B601B8C();
  v4 = &OBJC_IVAR____TtC15FindMyBluetooth15MockCBDiscovery_id;
  if (os_log_type_enabled(v2, v3))
  {
    v5 = v0[17];
    v6 = v0[18];
    v7 = v0[16];
    v31 = v0[21];
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    v32 = v9;
    *(_DWORD *)v8 = 136446466;
    sub_23B58E8B8(v7 + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_peerPath, v6);
    v10 = (uint64_t *)(v6 + *(int *)(v5 + 32));
    v12 = *v10;
    v11 = v10[1];
    swift_bridgeObjectRetain();
    sub_23B589184(v6);
    v13 = v12;
    v4 = &OBJC_IVAR____TtC15FindMyBluetooth15MockCBDiscovery_id;
    v0[12] = sub_23B58E160(v13, v11, &v32);
    sub_23B601BC8();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2048;
    v0[13] = v31;
    sub_23B601BC8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B583000, v2, v3, "%{public}s: Sending %ld packets.", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v9, -1, -1);
    MEMORY[0x23B868A2C](v8, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease();
    swift_release();
  }
  v14 = v0[15];
  v0[32] = v4[2];
  v0[33] = sub_23B5884D4(&qword_256A34C80, (uint64_t (*)(uint64_t))type metadata accessor for Characteristic, (uint64_t)&protocol conformance descriptor for Characteristic);
  v15 = *(_QWORD *)(v14 + 32);
  v0[34] = v15;
  v16 = *(_QWORD *)(v14 + 40);
  v0[35] = v16;
  v0[36] = 1;
  swift_bridgeObjectRetain();
  sub_23B5A294C(v15, v16);
  sub_23B5A294C(v15, v16);
  swift_retain();
  sub_23B5A294C(v15, v16);
  v17 = sub_23B601844();
  v18 = sub_23B601B8C();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = v0[17];
    v20 = v0[18];
    v21 = v0[16] + v0[32];
    v22 = swift_slowAlloc();
    v0[10] = swift_slowAlloc();
    *(_DWORD *)v22 = 136446722;
    sub_23B58E8B8(v21, v20);
    v23 = (uint64_t *)(v20 + *(int *)(v19 + 32));
    v25 = *v23;
    v24 = v23[1];
    swift_bridgeObjectRetain();
    sub_23B589184(v20);
    *(_QWORD *)(v22 + 4) = sub_23B58E160(v25, v24, v0 + 10);
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2048;
    __asm { BR              X10 }
  }
  swift_release();
  sub_23B5A2990(v15, v16);
  sub_23B5A2990(v15, v16);

  v26 = v0[22];
  v27 = v0[16];
  v28 = (_QWORD *)swift_task_alloc();
  v0[37] = (uint64_t)v28;
  v28[2] = v27;
  v28[3] = v26;
  v28[4] = v15;
  v28[5] = v16;
  v29 = (_QWORD *)swift_task_alloc();
  v0[38] = (uint64_t)v29;
  *v29 = v0;
  v29[1] = sub_23B5A97CC;
  return sub_23B601E14();
}

uint64_t sub_23B5A97CC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 312) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B5A9858()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;

  v1 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 168);
  sub_23B5A2990(*(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 280));
  if (v1 == v2)
  {
    swift_bridgeObjectRelease();
    swift_retain();
    v3 = sub_23B601844();
    v4 = sub_23B601B8C();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = *(_QWORD *)(v0 + 136);
      v6 = *(_QWORD *)(v0 + 144);
      v7 = *(_QWORD *)(v0 + 128) + *(_QWORD *)(v0 + 256);
      v8 = (uint8_t *)swift_slowAlloc();
      v9 = swift_slowAlloc();
      v33 = v9;
      *(_DWORD *)v8 = 136446210;
      sub_23B58E8B8(v7, v6);
      v10 = (uint64_t *)(v6 + *(int *)(v5 + 32));
      v12 = *v10;
      v11 = v10[1];
      swift_bridgeObjectRetain();
      sub_23B589184(v6);
      *(_QWORD *)(v0 + 88) = sub_23B58E160(v12, v11, &v33);
      sub_23B601BC8();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23B583000, v3, v4, "%{public}s: Clearing writeValueContinuation", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B868A2C](v9, -1, -1);
      MEMORY[0x23B868A2C](v8, -1, -1);

    }
    else
    {

      swift_release();
    }
    v26 = *(_QWORD *)(v0 + 152);
    v27 = *(_QWORD *)(v0 + 128) + *(_QWORD *)(v0 + 184);
    (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 200) + 56))(v26, 1, 1, *(_QWORD *)(v0 + 192));
    swift_beginAccess();
    sub_23B5A2728(v26, v27, (uint64_t *)&unk_256A35810);
    swift_endAccess();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 288);
    v14 = *(_QWORD *)(v0 + 120) + 16 * v13;
    v15 = *(_QWORD *)(v14 + 32);
    *(_QWORD *)(v0 + 272) = v15;
    v16 = *(_QWORD *)(v14 + 40);
    *(_QWORD *)(v0 + 280) = v16;
    *(_QWORD *)(v0 + 288) = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      JUMPOUT(0x23B5A9D94);
    }
    sub_23B5A294C(v15, v16);
    sub_23B5A294C(v15, v16);
    swift_retain();
    sub_23B5A294C(v15, v16);
    v17 = sub_23B601844();
    v18 = sub_23B601B8C();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = *(_QWORD *)(v0 + 136);
      v20 = *(_QWORD *)(v0 + 144);
      v21 = *(_QWORD *)(v0 + 128) + *(_QWORD *)(v0 + 256);
      v22 = swift_slowAlloc();
      *(_QWORD *)(v0 + 80) = swift_slowAlloc();
      *(_DWORD *)v22 = 136446722;
      sub_23B58E8B8(v21, v20);
      v23 = (uint64_t *)(v20 + *(int *)(v19 + 32));
      v25 = *v23;
      v24 = v23[1];
      swift_bridgeObjectRetain();
      sub_23B589184(v20);
      *(_QWORD *)(v22 + 4) = sub_23B58E160(v25, v24, (uint64_t *)(v0 + 80));
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2048;
      __asm { BR              X10 }
    }
    swift_release();
    sub_23B5A2990(v15, v16);
    sub_23B5A2990(v15, v16);

    v29 = *(_QWORD *)(v0 + 176);
    v30 = *(_QWORD *)(v0 + 128);
    v31 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 296) = v31;
    v31[2] = v30;
    v31[3] = v29;
    v31[4] = v15;
    v31[5] = v16;
    v32 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 304) = v32;
    *v32 = v0;
    v32[1] = sub_23B5A97CC;
    return sub_23B601E14();
  }
}

uint64_t sub_23B5A9DAC()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5A9E04()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5A9E5C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 272);
  v2 = *(_QWORD *)(v0 + 280);
  v3 = *(_QWORD *)(v0 + 112);
  swift_release();
  sub_23B5A2990(v1, v2);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34C70);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5A9EE8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[8] = a1;
  v2[9] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34C68);
  v2[10] = v3;
  v2[11] = *(_QWORD *)(v3 - 8);
  v2[12] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A34A40);
  v2[13] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35810);
  v2[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5A9F94()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;

  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 120) = Strong;
  if (!Strong)
  {
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
LABEL_9:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v2 = Strong;
  sub_23B58487C((uint64_t)objc_msgSend(*(id *)(*(_QWORD *)(v0 + 72) + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_underlyingObject), sel_properties), &v20);
  if ((v20 & 0x20) == 0)
  {
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    swift_allocError();
    *v3 = 32;
LABEL_8:
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_release();
    goto LABEL_9;
  }
  v4 = *(_QWORD *)(v0 + 72);
  v5 = OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_updatingState;
  v6 = *(unsigned __int8 *)(v4 + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_updatingState);
  if (v6 == 2 || v6 == 1)
  {
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    swift_allocError();
    goto LABEL_8;
  }
  v8 = *(_QWORD *)(v0 + 112);
  v9 = v4 + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_notificationStateContinuation;
  swift_beginAccess();
  sub_23B5A3C5C(v9, v8, (uint64_t *)&unk_256A35810);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD510);
  LODWORD(v9) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v8, 1, v10);
  sub_23B587ED4(v8, (uint64_t *)&unk_256A35810);
  if ((_DWORD)v9 != 1)
    return sub_23B5A698C();
  v11 = *(_QWORD *)(v0 + 104);
  v12 = *(_QWORD *)(v0 + 72) + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_updateValueContinuation;
  swift_beginAccess();
  sub_23B5A3C5C(v12, v11, &qword_256A34A40);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34A48);
  LODWORD(v12) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v11, 1, v13);
  sub_23B587ED4(v11, &qword_256A34A40);
  if ((_DWORD)v12 != 1)
    return sub_23B5A698C();
  v14 = *(_QWORD *)(v0 + 88);
  v15 = *(_QWORD *)(v0 + 96);
  v17 = *(_QWORD *)(v0 + 72);
  v16 = *(_QWORD *)(v0 + 80);
  *(_BYTE *)(v4 + v5) = 2;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v14 + 104))(v15, *MEMORY[0x24BEE6CA0], v16);
  sub_23B601B44();
  sub_23B5884D4(&qword_256A34C80, (uint64_t (*)(uint64_t))type metadata accessor for Characteristic, (uint64_t)&protocol conformance descriptor for Characteristic);
  v18 = swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v18;
  *(_QWORD *)(v18 + 16) = v17;
  *(_QWORD *)(v18 + 24) = v2;
  v19 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 136) = v19;
  *v19 = v0;
  v19[1] = sub_23B5AA3A0;
  return sub_23B601E14();
}

uint64_t sub_23B5AA3A0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B5AA410()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5AA468()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 64);
  swift_release();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34C70);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5AA4E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD v25[2];
  uint64_t v26;

  v25[1] = a6;
  v26 = a7;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD530);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35810);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD510);
  v19 = *(_QWORD *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v17, a1, v18);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v17, 0, 1, v18);
  v20 = a2 + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_writeValueContinuation;
  swift_beginAccess();
  sub_23B5A2728((uint64_t)v17, v20, (uint64_t *)&unk_256A35810);
  swift_endAccess();
  v21 = sub_23B601A78();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v14, 1, 1, v21);
  v22 = sub_23B5884D4(&qword_256A34C80, (uint64_t (*)(uint64_t))type metadata accessor for Characteristic, (uint64_t)&protocol conformance descriptor for Characteristic);
  v23 = (_QWORD *)swift_allocObject();
  v23[2] = a2;
  v23[3] = v22;
  v23[4] = a3;
  v23[5] = a4;
  v23[6] = a5;
  v23[7] = a2;
  swift_retain_n();
  swift_retain();
  sub_23B5A294C(a4, a5);
  sub_23B5CD0FC((uint64_t)v14, v26, (uint64_t)v23);
  return swift_release();
}

uint64_t sub_23B5AA6C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;

  v7[14] = a6;
  v7[15] = a7;
  v7[12] = a4;
  v7[13] = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD510);
  v7[16] = v8;
  v7[17] = *(_QWORD *)(v8 - 8);
  v7[18] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35810);
  v7[19] = swift_task_alloc();
  v7[20] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5AA760()
{
  uint64_t v0;
  void *v1;
  uint64_t inited;
  id v3;

  v1 = *(void **)(*(_QWORD *)(v0 + 120) + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_underlyingObject);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A346A0);
  inited = swift_initStackObject();
  *(_QWORD *)(v0 + 168) = inited;
  *(_QWORD *)(inited + 16) = v1;
  v3 = v1;
  return swift_task_switch();
}

uint64_t sub_23B5AA7D4()
{
  uint64_t *v0;
  uint64_t Strong;
  _QWORD *v2;
  uint64_t v4;

  Strong = swift_weakLoadStrong();
  v0[22] = Strong;
  if (Strong)
  {
    v2 = (_QWORD *)swift_task_alloc();
    v0[23] = (uint64_t)v2;
    *v2 = v0;
    v2[1] = sub_23B5AA8D0;
    return sub_23B5904A8(v0[13], v0[14], v0[21], 0);
  }
  else
  {
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    v4 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    v0[25] = v4;
    return swift_task_switch();
  }
}

uint64_t sub_23B5AA8D0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 192) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B5AA934()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 200) = *(_QWORD *)(v0 + 192);
  return swift_task_switch();
}

uint64_t Characteristic.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23B5AA984@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_id;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_23B5AA9CC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_23B58CEC8;
  v2[2] = v0;
  return swift_task_switch();
}

uint64_t sub_23B5AAA28(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23B587FA4;
  return sub_23B5A6100(a1);
}

uint64_t sub_23B5AAA78(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23B587844;
  return sub_23B5A75FC(a1);
}

uint64_t sub_23B5AAAC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23B587FA4;
  return sub_23B5A8C28(a1, a2);
}

uint64_t sub_23B5AAB24()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_23B5AAB3C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_23B5E60AC();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_23B5AAB6C()
{
  return sub_23B5AABD0((uint64_t (*)(uint64_t))type metadata accessor for Characteristic, (unint64_t *)&unk_256A34CC0, (uint64_t)&protocol conformance descriptor for Characteristic);
}

uint64_t sub_23B5AABAC()
{
  return sub_23B5AABD0((uint64_t (*)(uint64_t))type metadata accessor for MockCharacteristic, &qword_256A34D40, (uint64_t)&protocol conformance descriptor for MockCharacteristic);
}

uint64_t sub_23B5AABD0(uint64_t (*a1)(uint64_t), unint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  sub_23B601C40();
  swift_bridgeObjectRelease();
  v6 = a1(0);
  v7 = sub_23B5884D4(a2, a1, a3);
  sub_23B601DCC();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  MEMORY[0x23B86839C](v6, v7);
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1E8);
  sub_23B5ABF5C();
  sub_23B601DE4();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  return 60;
}

uint64_t sub_23B5AAD38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34A40);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34A48);
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  v9 = a2 + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_updateValueContinuation;
  swift_beginAccess();
  sub_23B5A2728((uint64_t)v6, v9, &qword_256A34A40);
  swift_endAccess();
  swift_retain();
  return sub_23B601B08();
}

uint64_t sub_23B5AAE48(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[4];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD530);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23B601A78();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = a2;
  v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  swift_retain();
  if (v9 == 1)
  {
    sub_23B587ED4((uint64_t)v5, &qword_2542FD530);
  }
  else
  {
    sub_23B601A6C();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
    if (v8[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v10 = sub_23B601A18();
      v12 = v11;
      swift_unknownObjectRelease();
      if (v12 | v10)
      {
        v14[0] = 0;
        v14[1] = 0;
        v14[2] = v10;
        v14[3] = v12;
      }
    }
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_23B5AB008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  *(_QWORD *)(v4 + 16) = a4;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 24) = v5;
  *v5 = v4;
  v5[1] = sub_23B5AB054;
  return sub_23B5A6EBC();
}

uint64_t sub_23B5AB054()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;

  v1 = *v0;
  v4 = *v0;
  swift_task_dealloc();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 32) = v2;
  *v2 = v4;
  v2[1] = sub_23B5AB0B8;
  return sub_23B5AB100();
}

uint64_t sub_23B5AB0B8()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23B5AB100()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35810);
  *(_QWORD *)(v1 + 48) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5AB15C()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;

  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 56) = Strong;
  if (!Strong)
  {
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
LABEL_10:
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v2 = Strong;
  sub_23B58487C((uint64_t)objc_msgSend(*(id *)(*(_QWORD *)(v0 + 40) + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_underlyingObject), sel_properties), &v13);
  if ((v13 & 0x20) == 0)
  {
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    swift_allocError();
    *v3 = 32;
LABEL_9:
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_release();
    goto LABEL_10;
  }
  v4 = *(_QWORD *)(v0 + 40);
  v5 = OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_updatingState;
  if (*(_BYTE *)(v4 + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_updatingState) != 2)
  {
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    swift_allocError();
    goto LABEL_9;
  }
  v6 = *(_QWORD *)(v0 + 48);
  v7 = v4 + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_notificationStateContinuation;
  swift_beginAccess();
  sub_23B5A3C5C(v7, v6, (uint64_t *)&unk_256A35810);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD510);
  LODWORD(v7) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8);
  sub_23B587ED4(v6, (uint64_t *)&unk_256A35810);
  v9 = *(_QWORD *)(v0 + 40);
  if ((_DWORD)v7 != 1)
    return sub_23B5A698C();
  *(_BYTE *)(v4 + v5) = 0;
  sub_23B5884D4(&qword_256A34C80, (uint64_t (*)(uint64_t))type metadata accessor for Characteristic, (uint64_t)&protocol conformance descriptor for Characteristic);
  v10 = swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v10;
  *(_QWORD *)(v10 + 16) = v9;
  *(_QWORD *)(v10 + 24) = v2;
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v11;
  *v11 = v0;
  v11[1] = sub_23B5AB480;
  return sub_23B601E14();
}

uint64_t sub_23B5AB480()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B5AB4F4()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5AB530()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5AB574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[12] = a4;
  v5[13] = a5;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35810);
  v5[14] = swift_task_alloc();
  v5[15] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD510);
  v5[16] = v6;
  v5[17] = *(_QWORD *)(v6 - 8);
  v5[18] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5AB610()
{
  _QWORD *v0;
  void *v1;
  uint64_t inited;
  id v3;
  _QWORD *v4;

  v1 = *(void **)(v0[13] + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_underlyingObject);
  v0[19] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A346A0);
  inited = swift_initStackObject();
  v0[20] = inited;
  *(_QWORD *)(inited + 16) = v1;
  v3 = v1;
  v4 = (_QWORD *)swift_task_alloc();
  v0[21] = v4;
  *v4 = v0;
  v4[1] = sub_23B5AB6A8;
  return sub_23B58DA0C(1, inited);
}

uint64_t sub_23B5AB6A8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 176) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

BOOL static Characteristic.UpdatingState.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_23B5AB748(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v22;

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD530);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35810);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD510);
  v16 = *(_QWORD *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v14, a1, v15);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
  v17 = a2 + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_notificationStateContinuation;
  swift_beginAccess();
  sub_23B5A2728((uint64_t)v14, v17, (uint64_t *)&unk_256A35810);
  swift_endAccess();
  v18 = sub_23B601A78();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v11, 1, 1, v18);
  v19 = sub_23B5884D4(&qword_256A34C80, (uint64_t (*)(uint64_t))type metadata accessor for Characteristic, (uint64_t)&protocol conformance descriptor for Characteristic);
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = a2;
  v20[3] = v19;
  v20[4] = a3;
  v20[5] = a2;
  swift_retain_n();
  swift_retain();
  sub_23B5CD0FC((uint64_t)v11, a5, (uint64_t)v20);
  return swift_release();
}

uint64_t sub_23B5AB910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[12] = a4;
  v5[13] = a5;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35810);
  v5[14] = swift_task_alloc();
  v5[15] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD510);
  v5[16] = v6;
  v5[17] = *(_QWORD *)(v6 - 8);
  v5[18] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5AB9AC()
{
  _QWORD *v0;
  void *v1;
  uint64_t inited;
  id v3;
  _QWORD *v4;

  v1 = *(void **)(v0[13] + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_underlyingObject);
  v0[19] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A346A0);
  inited = swift_initStackObject();
  v0[20] = inited;
  *(_QWORD *)(inited + 16) = v1;
  v3 = v1;
  v4 = (_QWORD *)swift_task_alloc();
  v0[21] = v4;
  *v4 = v0;
  v4[1] = sub_23B5ABA44;
  return sub_23B58DA0C(0, inited);
}

uint64_t sub_23B5ABA44()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 176) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23B5ABAD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 112);
  swift_setDeallocating();

  v6 = v5 + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_notificationStateContinuation;
  swift_beginAccess();
  sub_23B5A3C5C(v6, v4, (uint64_t *)&unk_256A35810);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, v2))
  {
    sub_23B587ED4(*(_QWORD *)(v0 + 112), (uint64_t *)&unk_256A35810);
  }
  else
  {
    v7 = *(void **)(v0 + 176);
    v9 = *(_QWORD *)(v0 + 136);
    v8 = *(_QWORD *)(v0 + 144);
    v10 = *(_QWORD *)(v0 + 128);
    v11 = *(_QWORD *)(v0 + 112);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v8, v11, v10);
    sub_23B587ED4(v11, (uint64_t *)&unk_256A35810);
    *(_QWORD *)(v0 + 88) = v7;
    v12 = v7;
    sub_23B601A24();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  v13 = *(void **)(v0 + 176);
  v14 = *(_QWORD *)(v0 + 120);
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 136) + 56))(v14, 1, 1, *(_QWORD *)(v0 + 128));
  swift_beginAccess();
  sub_23B5A2728(v14, v6, (uint64_t *)&unk_256A35810);
  swift_endAccess();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Characteristic.UpdatingState.hash(into:)()
{
  return sub_23B601E98();
}

uint64_t Characteristic.UpdatingState.hashValue.getter()
{
  sub_23B601E8C();
  sub_23B601E98();
  return sub_23B601EB0();
}

BOOL sub_23B5ABCD0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_23B5ABCE4()
{
  sub_23B601E8C();
  sub_23B601E98();
  return sub_23B601EB0();
}

uint64_t sub_23B5ABD28()
{
  return sub_23B601E98();
}

uint64_t sub_23B5ABD50()
{
  sub_23B601E8C();
  sub_23B601E98();
  return sub_23B601EB0();
}

uint64_t sub_23B5ABEA8(uint64_t a1)
{
  uint64_t v1;

  return sub_23B5AAD38(a1, v1);
}

uint64_t type metadata accessor for Characteristic()
{
  uint64_t result;

  result = qword_2542FD3E0;
  if (!qword_2542FD3E0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23B5ABF04(uint64_t a1)
{
  uint64_t v1;

  return sub_23B5AA4E4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), (uint64_t)&unk_250C81CA0, (uint64_t)&unk_256A34DA0);
}

uint64_t sub_23B5ABF30(uint64_t a1)
{
  uint64_t v1;

  return sub_23B5AA4E4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), (uint64_t)&unk_250C81C00, (uint64_t)&unk_256A34D50);
}

unint64_t sub_23B5ABF5C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A34658;
  if (!qword_256A34658)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542FD1E8);
    result = MEMORY[0x23B868978](MEMORY[0x24BE316E8], v1);
    atomic_store(result, (unint64_t *)&qword_256A34658);
  }
  return result;
}

uint64_t sub_23B5ABFA8(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_23B5884D4(&qword_256A34CB8, (uint64_t (*)(uint64_t))type metadata accessor for Characteristic, (uint64_t)&protocol conformance descriptor for Characteristic);
  result = sub_23B5884D4((unint64_t *)&unk_256A34CC0, (uint64_t (*)(uint64_t))type metadata accessor for Characteristic, (uint64_t)&protocol conformance descriptor for Characteristic);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_23B5AC004()
{
  return sub_23B5884D4(&qword_256A34C80, (uint64_t (*)(uint64_t))type metadata accessor for Characteristic, (uint64_t)&protocol conformance descriptor for Characteristic);
}

unint64_t sub_23B5AC034()
{
  unint64_t result;

  result = qword_256A34CD0;
  if (!qword_256A34CD0)
  {
    result = MEMORY[0x23B868978](&protocol conformance descriptor for Characteristic.UpdatingState, &type metadata for Characteristic.UpdatingState);
    atomic_store(result, (unint64_t *)&qword_256A34CD0);
  }
  return result;
}

uint64_t sub_23B5AC078()
{
  return type metadata accessor for Characteristic();
}

void sub_23B5AC080()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_23B5AC344();
  if (v0 <= 0x3F)
  {
    type metadata accessor for PeerPath();
    if (v1 <= 0x3F)
    {
      sub_23B5AC398(319, &qword_256A34D20, &qword_256A34A48);
      if (v2 <= 0x3F)
      {
        sub_23B5AC398(319, (unint64_t *)&qword_2542FD520, (uint64_t *)&unk_2542FD510);
        if (v3 <= 0x3F)
          swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t method lookup function for Characteristic()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Characteristic.properties.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of Characteristic.isNotifying.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of Characteristic.mtu.getter()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 296) + *(_QWORD *)(*(_QWORD *)v0 + 296));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_23B58EB10;
  return v4();
}

uint64_t dispatch thunk of Characteristic.read()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 304) + *(_QWORD *)(*(_QWORD *)v1 + 304));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23B587FA4;
  return v6(a1);
}

uint64_t dispatch thunk of Characteristic.writeWithoutResponse(data:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 312) + *(_QWORD *)(*(_QWORD *)v1 + 312));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23B587844;
  return v6(a1);
}

uint64_t dispatch thunk of Characteristic.write(data:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 320) + *(_QWORD *)(*(_QWORD *)v2 + 320));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_23B587FA4;
  return v8(a1, a2);
}

void sub_23B5AC344()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2542FD678)
  {
    type metadata accessor for Characteristic();
    v0 = sub_23B6015C8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2542FD678);
  }
}

void sub_23B5AC398(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    v4 = sub_23B601BBC();
    if (!v5)
      atomic_store(v4, a2);
  }
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for Characteristic.UpdatingState(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for Characteristic.UpdatingState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23B5AC4D0 + 4 * byte_23B607CF5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23B5AC504 + 4 * byte_23B607CF0[v4]))();
}

uint64_t sub_23B5AC504(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B5AC50C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23B5AC514);
  return result;
}

uint64_t sub_23B5AC520(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23B5AC528);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23B5AC52C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B5AC534(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B5AC540(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_23B5AC54C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for Characteristic.UpdatingState()
{
  return &type metadata for Characteristic.UpdatingState;
}

uint64_t sub_23B5AC568(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v9 = v1[6];
  v8 = v1[7];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_23B587FA4;
  return sub_23B5AA6C0(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_23B5AC5F4(uint64_t a1)
{
  uint64_t v1;

  return sub_23B5AAD38(a1, v1);
}

uint64_t sub_23B5AC614(uint64_t a1)
{
  uint64_t v1;

  return sub_23B5AB748(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (uint64_t)&unk_250C81C28, (uint64_t)&unk_256A34D60);
}

uint64_t sub_23B5AC640(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_23B587FA4;
  return sub_23B5AB574(a1, v4, v5, v7, v6);
}

uint64_t sub_23B5AC6B8(uint64_t a1)
{
  uint64_t v1;

  return sub_23B5AAE48(a1, v1);
}

uint64_t sub_23B5AC6C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23B587FA4;
  v3[2] = v2;
  v4 = (_QWORD *)swift_task_alloc();
  v3[3] = v4;
  *v4 = v3;
  v4[1] = sub_23B5AB054;
  return sub_23B5A6EBC();
}

uint64_t sub_23B5AC730(uint64_t a1)
{
  uint64_t v1;

  return sub_23B5AB748(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (uint64_t)&unk_250C81C78, (uint64_t)&unk_256A34D90);
}

uint64_t objectdestroy_30Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B5AC790(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_23B587844;
  return sub_23B5AB910(a1, v4, v5, v7, v6);
}

uint64_t objectdestroyTm_2()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  sub_23B5A2990(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B5AC848(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v9 = v1[6];
  v8 = v1[7];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_23B587FA4;
  return sub_23B5A8780(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_23B5AC8D4(uint64_t a1)
{
  uint64_t v1;

  return sub_23B5A6CA0(a1, v1);
}

uint64_t sub_23B5AC8E0()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23B587FA4;
  v2 = (_QWORD *)swift_task_alloc();
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_23B587FA4;
  return sub_23B5A6EBC();
}

uint64_t sub_23B5AC948()
{
  swift_release();
  return swift_deallocObject();
}

FindMyBluetooth::PeripheralState_optional __swiftcall PeripheralState.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 5;
  if ((unint64_t)(rawValue + 1) < 5)
    v2 = rawValue + 1;
  *v1 = v2;
  return (FindMyBluetooth::PeripheralState_optional)rawValue;
}

uint64_t PeripheralState.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0 - 1;
}

unint64_t sub_23B5AC9A0()
{
  unint64_t result;

  result = qword_256A34DC0;
  if (!qword_256A34DC0)
  {
    result = MEMORY[0x23B868978](&protocol conformance descriptor for PeripheralState, &type metadata for PeripheralState);
    atomic_store(result, (unint64_t *)&qword_256A34DC0);
  }
  return result;
}

uint64_t sub_23B5AC9E4()
{
  sub_23B601E8C();
  sub_23B601E98();
  return sub_23B601EB0();
}

uint64_t sub_23B5ACA28()
{
  return sub_23B601E98();
}

uint64_t sub_23B5ACA54()
{
  sub_23B601E8C();
  sub_23B601E98();
  return sub_23B601EB0();
}

FindMyBluetooth::PeripheralState_optional sub_23B5ACA94(Swift::Int *a1)
{
  return PeripheralState.init(rawValue:)(*a1);
}

void sub_23B5ACA9C(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1 - 1;
}

uint64_t getEnumTagSinglePayload for PeripheralState(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PeripheralState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23B5ACB88 + 4 * byte_23B607E9D[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23B5ACBBC + 4 * asc_23B607E98[v4]))();
}

uint64_t sub_23B5ACBBC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B5ACBC4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23B5ACBCCLL);
  return result;
}

uint64_t sub_23B5ACBD8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23B5ACBE0);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23B5ACBE4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B5ACBEC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PeripheralState()
{
  return &type metadata for PeripheralState;
}

void CBUUID.uuidValue.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[4];
  void *v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD228);
  v2 = MEMORY[0x24BDAC7A8](v1);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v12[2] = (char *)v12 - v4;
  v5 = MEMORY[0x24BDAC7A8](v3);
  MEMORY[0x24BDAC7A8](v5);
  v6 = sub_23B601820();
  v7 = MEMORY[0x24BDAC7A8](v6);
  MEMORY[0x24BDAC7A8](v7);
  v12[3] = (char *)v12 - v8;
  v13 = v0;
  v9 = objc_msgSend(v0, sel_data);
  sub_23B601748();
  v11 = v10;

  __asm { BR              X10 }
}

void sub_23B5ACD70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;

  sub_23B5A2990(v0, v7);
  if (BYTE6(v7) == 16)
  {
    v13 = objc_msgSend(*(id *)(v8 - 128), sel_data);
    sub_23B601748();
    v15 = v14;

    __asm { BR              X10 }
  }
  if (BYTE6(v7) == 4)
  {
    *(_QWORD *)(v8 - 152) = v4;
    *(_QWORD *)(v8 - 136) = v3;
    v9 = *(_QWORD *)(v8 - 144);
    sub_23B6017CC();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v9, 1, v2) != 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32))(v5, v9, v2);
      *(_QWORD *)(v8 - 120) = sub_23B6017C0();
      v10 = objc_msgSend(*(id *)(v8 - 128), sel_data);
      sub_23B601748();
      v12 = v11;

      __asm { BR              X10 }
    }
    __break(1u);
  }
  else
  {
    if (BYTE6(v7) != 2)
    {
      sub_23B601D18();
      __break(1u);
      JUMPOUT(0x23B5AD5B4);
    }
    sub_23B6017CC();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v6, 1, v2) != 1)
    {
      *(_QWORD *)(v8 - 144) = v1;
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v1 + 32))(*(_QWORD *)(v8 - 136), v6, v2);
      *(_QWORD *)(v8 - 112) = sub_23B6017C0();
      v16 = objc_msgSend(*(id *)(v8 - 128), sel_data);
      sub_23B601748();
      v18 = v17;

      __asm { BR              X10 }
    }
  }
  __break(1u);
  JUMPOUT(0x23B5AD544);
}

void shortCBUUIDDescription(uuid:)()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[24];

  v7[22] = *MEMORY[0x24BDAC8D0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD228);
  MEMORY[0x24BDAC7A8]();
  v1 = (char *)v7 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B6017CC();
  v2 = sub_23B601820();
  v3 = *(_QWORD *)(v2 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) != 1)
  {
    sub_23B60179C();
    v5 = v4;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v1, v2);
    v7[20] = sub_23B60179C();
    v7[21] = v6;
    __asm { BR              X9 }
  }
  sub_23B5AE16C((uint64_t)v1);
  sub_23B601D18();
  __break(1u);
  JUMPOUT(0x23B5ADDD4);
}

uint64_t sub_23B5ADE04(_BYTE *a1, uint64_t a2, char **a3)
{
  _BYTE *v4;
  char v5;
  char *v6;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;

  v4 = a1;
  v5 = *a1;
  v6 = *a3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a3 = v6;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    v6 = sub_23B5AE158((uint64_t)v6);
  if (*((_QWORD *)v6 + 2) < 3uLL)
  {
    __break(1u);
  }
  else
  {
    v6[34] = v5;
    *a3 = v6;
    LOBYTE(v4) = v4[1];
    result = swift_isUniquelyReferenced_nonNull_native();
    *a3 = v6;
    if ((result & 1) != 0)
      goto LABEL_5;
  }
  result = (uint64_t)sub_23B5AE158((uint64_t)v6);
  v6 = (char *)result;
LABEL_5:
  if (*((_QWORD *)v6 + 2) < 4uLL)
  {
    __break(1u);
  }
  else
  {
    v6[35] = (char)v4;
    *a3 = v6;
  }
  return result;
}

uint64_t sub_23B5ADEB8(_BYTE *a1, uint64_t a2, char **a3)
{
  _BYTE *v4;
  char v5;
  char *v6;
  char isUniquelyReferenced_nonNull_native;
  char v8;
  char v9;
  uint64_t result;

  v4 = a1;
  v5 = *a1;
  v6 = *a3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a3 = v6;
  if ((isUniquelyReferenced_nonNull_native & 1) != 0)
  {
    if (*((_QWORD *)v6 + 2))
      goto LABEL_3;
  }
  else
  {
    v6 = sub_23B5AE158((uint64_t)v6);
    if (*((_QWORD *)v6 + 2))
    {
LABEL_3:
      v6[32] = v5;
      *a3 = v6;
      v5 = v4[1];
      v8 = swift_isUniquelyReferenced_nonNull_native();
      *a3 = v6;
      if ((v8 & 1) != 0)
        goto LABEL_4;
      goto LABEL_12;
    }
  }
  __break(1u);
LABEL_12:
  v6 = sub_23B5AE158((uint64_t)v6);
LABEL_4:
  if (*((_QWORD *)v6 + 2) < 2uLL)
  {
    __break(1u);
  }
  else
  {
    v6[33] = v5;
    *a3 = v6;
    v5 = v4[2];
    v9 = swift_isUniquelyReferenced_nonNull_native();
    *a3 = v6;
    if ((v9 & 1) != 0)
      goto LABEL_6;
  }
  v6 = sub_23B5AE158((uint64_t)v6);
LABEL_6:
  if (*((_QWORD *)v6 + 2) < 3uLL)
  {
    __break(1u);
  }
  else
  {
    v6[34] = v5;
    *a3 = v6;
    LOBYTE(v4) = v4[3];
    result = swift_isUniquelyReferenced_nonNull_native();
    *a3 = v6;
    if ((result & 1) != 0)
      goto LABEL_8;
  }
  result = (uint64_t)sub_23B5AE158((uint64_t)v6);
  v6 = (char *)result;
LABEL_8:
  if (*((_QWORD *)v6 + 2) < 4uLL)
  {
    __break(1u);
  }
  else
  {
    v6[35] = (char)v4;
    *a3 = v6;
  }
  return result;
}

uint64_t sub_23B5ADFE4()
{
  return sub_23B601808();
}

uint64_t sub_23B5AE038(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return ((uint64_t (*)(void))((char *)&loc_23B5AE048 + dword_23B5AE0A4[a4 >> 62]))();
}

uint64_t sub_23B5AE05C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 < 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (BYTE6(a4) <= a2)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (a2 + 1 < a1)
  {
LABEL_7:
    __break(1u);
    JUMPOUT(0x23B5AE0A4);
  }
  return sub_23B601724();
}

uint64_t sub_23B5AE0B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  result = sub_23B601688();
  v10 = result;
  if (result)
  {
    result = sub_23B6016AC();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v10 += a1 - result;
  }
  v11 = __OFSUB__(a2, a1);
  v12 = a2 - a1;
  if (v11)
  {
    __break(1u);
    goto LABEL_13;
  }
  v13 = sub_23B6016A0();
  if (v13 >= v12)
    v14 = v12;
  else
    v14 = v13;
  v15 = v10 + v14;
  if (v10)
    v16 = v15;
  else
    v16 = 0;
  return a5(v10, v16, a4);
}

char *sub_23B5AE158(uint64_t a1)
{
  return sub_23B585AF4(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_23B5AE16C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD228);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_23B5AE1AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A347A0;
  if (!qword_256A347A0)
  {
    v1 = sub_23B601820();
    result = MEMORY[0x23B868978](MEMORY[0x24BDCEAB8], v1);
    atomic_store(result, (unint64_t *)&qword_256A347A0);
  }
  return result;
}

uint64_t sub_23B5AE1F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t result;
  int64_t v16;
  unint64_t v17;
  unint64_t i;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t (*v31)(unint64_t, char *, uint64_t);
  char *v32;
  char *v33;
  unint64_t v34;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34AE0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1E8);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v33 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v32 = (char *)&v29 - v9;
  v10 = a1 + 64;
  v11 = 1 << *(_BYTE *)(a1 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(a1 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v16 = 0;
  v34 = MEMORY[0x24BEE4AF8];
  if (v13)
    goto LABEL_7;
LABEL_8:
  while (2)
  {
    v19 = v16 + 1;
    if (!__OFADD__(v16, 1))
    {
      if (v19 < v14)
      {
        v20 = *(_QWORD *)(v10 + 8 * v19);
        ++v16;
        if (v20)
          goto LABEL_23;
        v16 = v19 + 1;
        if (v19 + 1 >= v14)
          goto LABEL_32;
        v20 = *(_QWORD *)(v10 + 8 * v16);
        if (v20)
          goto LABEL_23;
        v16 = v19 + 2;
        if (v19 + 2 >= v14)
          goto LABEL_32;
        v20 = *(_QWORD *)(v10 + 8 * v16);
        if (v20)
          goto LABEL_23;
        v16 = v19 + 3;
        if (v19 + 3 >= v14)
          goto LABEL_32;
        v20 = *(_QWORD *)(v10 + 8 * v16);
        if (v20)
        {
LABEL_23:
          v13 = (v20 - 1) & v20;
          for (i = __clz(__rbit64(v20)) + (v16 << 6); ; i = v17 | (v16 << 6))
          {
            v22 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * i);
            if (!v22)
              break;
            (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v4, v22 + OBJC_IVAR____TtC15FindMyBluetooth18MockCharacteristic_id, v5);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
              goto LABEL_6;
            v23 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
            v23(v32, v4, v5);
            v31 = (uint64_t (*)(unint64_t, char *, uint64_t))v23;
            v23(v33, v32, v5);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v34 = sub_23B58579C(0, *(_QWORD *)(v34 + 16) + 1, 1, v34);
            v25 = *(_QWORD *)(v34 + 16);
            v24 = *(_QWORD *)(v34 + 24);
            v26 = v25 + 1;
            if (v25 >= v24 >> 1)
            {
              v29 = *(_QWORD *)(v34 + 16);
              v30 = v25 + 1;
              v28 = sub_23B58579C(v24 > 1, v25 + 1, 1, v34);
              v25 = v29;
              v26 = v30;
              v34 = v28;
            }
            v27 = v34;
            *(_QWORD *)(v34 + 16) = v26;
            result = v31(v27+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v25, v33, v5);
            if (!v13)
              goto LABEL_8;
LABEL_7:
            v17 = __clz(__rbit64(v13));
            v13 &= v13 - 1;
          }
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
LABEL_6:
          result = sub_23B587ED4((uint64_t)v4, &qword_256A34AE0);
          if (!v13)
            continue;
          goto LABEL_7;
        }
        v21 = v19 + 4;
        if (v21 < v14)
        {
          v20 = *(_QWORD *)(v10 + 8 * v21);
          if (v20)
          {
            v16 = v21;
            goto LABEL_23;
          }
          while (1)
          {
            v16 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_34;
            if (v16 >= v14)
              break;
            v20 = *(_QWORD *)(v10 + 8 * v16);
            ++v21;
            if (v20)
              goto LABEL_23;
          }
        }
      }
LABEL_32:
      swift_release();
      return v34;
    }
    break;
  }
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_23B5AE550(uint64_t a1, uint64_t a2)
{
  return sub_23B5AE588(a1, a2, (uint64_t *)&unk_2542FD1E8, &qword_256A34590, &qword_256A34680);
}

uint64_t sub_23B5AE56C(uint64_t a1, uint64_t a2)
{
  return sub_23B5AE588(a1, a2, (uint64_t *)&unk_2542FD1F8, &qword_256A34660, &qword_256A34668);
}

uint64_t sub_23B5AE588(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4, unint64_t *a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void (*v15)(char *, unint64_t, uint64_t);
  char v16;
  uint64_t v18;
  uint64_t v19;
  unint64_t *v20;
  uint64_t v21;

  v20 = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v21 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a2 + 16)
    && (sub_23B58F61C(a4, a3, MEMORY[0x24BE316D0]),
        v11 = sub_23B6018C8(),
        v12 = -1 << *(_BYTE *)(a2 + 32),
        v13 = v11 & ~v12,
        ((*(_QWORD *)(a2 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0))
  {
    v19 = ~v12;
    v14 = *(_QWORD *)(v21 + 72);
    v15 = *(void (**)(char *, unint64_t, uint64_t))(v21 + 16);
    do
    {
      v15(v10, *(_QWORD *)(a2 + 48) + v14 * v13, v8);
      sub_23B58F61C(v20, a3, MEMORY[0x24BE316D8]);
      v16 = sub_23B6018EC();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v8);
      if ((v16 & 1) != 0)
        break;
      v13 = (v13 + 1) & v19;
    }
    while (((*(_QWORD *)(a2 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  else
  {
    v16 = 0;
  }
  return v16 & 1;
}

BOOL sub_23B5AE710(char a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL8 result;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  sub_23B601E8C();
  v4 = qword_23B608090[a1];
  sub_23B601E98();
  v5 = sub_23B601EB0();
  v6 = -1 << *(_BYTE *)(a2 + 32);
  v7 = v5 & ~v6;
  v8 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
    return 0;
  v9 = *(_QWORD *)(a2 + 48);
  if (qword_23B608090[*(char *)(v9 + v7)] == v4)
    return 1;
  v11 = ~v6;
  v12 = (v7 + 1) & v11;
  if (((*(_QWORD *)(v8 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
    return 0;
  do
  {
    v13 = qword_23B608090[*(char *)(v9 + v12)];
    result = v13 == v4;
    if (v13 == v4)
      break;
    v12 = (v12 + 1) & v11;
  }
  while (((*(_QWORD *)(v8 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0);
  return result;
}

uint64_t sub_23B5AE814(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  BOOL v17;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_23B601E8C();
    sub_23B60194C();
    v6 = sub_23B601EB0();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_23B601DFC() & 1) != 0)
        return 1;
      v14 = ~v7;
      v15 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
      {
        while (1)
        {
          v16 = (_QWORD *)(v10 + 16 * v15);
          v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_23B601DFC() & 1) != 0)
            break;
          result = 0;
          v15 = (v15 + 1) & v14;
          if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_23B5AE948(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, unint64_t, uint64_t);
  char v12;
  uint64_t v14;
  uint64_t v15;

  v3 = sub_23B601820();
  v15 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a2 + 16)
    && (sub_23B5884D4(&qword_2542FD220, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]),
        v6 = sub_23B6018C8(),
        v7 = -1 << *(_BYTE *)(a2 + 32),
        v8 = v6 & ~v7,
        ((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0))
  {
    v9 = ~v7;
    v10 = *(_QWORD *)(v15 + 72);
    v11 = *(void (**)(char *, unint64_t, uint64_t))(v15 + 16);
    do
    {
      v11(v5, *(_QWORD *)(a2 + 48) + v10 * v8, v3);
      sub_23B5884D4(&qword_256A34630, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v12 = sub_23B6018EC();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v5, v3);
      if ((v12 & 1) != 0)
        break;
      v8 = (v8 + 1) & v9;
    }
    while (((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  else
  {
    v12 = 0;
  }
  return v12 & 1;
}

uint64_t sub_23B5AEACC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[3] = v0;
  v2 = sub_23B601820();
  v1[4] = v2;
  v1[5] = *(_QWORD *)(v2 - 8);
  v1[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5AEB2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 40);
  v1 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(v0 + 32);
  sub_23B601C40();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 16) = v3;
  v5 = type metadata accessor for Service();
  v6 = sub_23B5884D4((unint64_t *)&unk_256A34600, (uint64_t (*)(uint64_t))type metadata accessor for Service, (uint64_t)&protocol conformance descriptor for Service);
  sub_23B601DCC();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  MEMORY[0x23B86839C](v5, v6);
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1F8);
  sub_23B58F61C(&qword_256A34A00, (uint64_t *)&unk_2542FD1F8, MEMORY[0x24BE316E8]);
  sub_23B601DCC();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  sub_23B6015BC();
  shortCBUUIDDescription(uuid:)();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v4);
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC15FindMyBluetooth7Service_underlyingObject), sel_isPrimary);
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, unint64_t))(v0 + 8))(60, 0xE100000000000000);
}

uint64_t sub_23B5AEDDC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[3] = v0;
  v2 = sub_23B601820();
  v1[4] = v2;
  v1[5] = *(_QWORD *)(v2 - 8);
  v1[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5AEE3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 40);
  v1 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(v0 + 32);
  sub_23B601C40();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 16) = v3;
  v5 = type metadata accessor for MockService();
  v6 = sub_23B5884D4(&qword_256A34638, (uint64_t (*)(uint64_t))type metadata accessor for MockService, (uint64_t)&protocol conformance descriptor for MockService);
  sub_23B601DCC();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  MEMORY[0x23B86839C](v5, v6);
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1F8);
  sub_23B58F61C(&qword_256A34A00, (uint64_t *)&unk_2542FD1F8, MEMORY[0x24BE316E8]);
  sub_23B601DCC();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  sub_23B6015BC();
  shortCBUUIDDescription(uuid:)();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v4);
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, unint64_t))(v0 + 8))(60, 0xE100000000000000);
}

uint64_t MockService.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC15FindMyBluetooth11MockService_id;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1F8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MockService.isPrimary.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15FindMyBluetooth11MockService_isPrimary);
}

id sub_23B5AF134@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15FindMyBluetooth11MockService_mockBehavior);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a2 = *v3;
  a2[1] = v5;
  a2[2] = v6;
  return sub_23B5AF27C(v4, v5, v6);
}

void sub_23B5AF190(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15FindMyBluetooth11MockService_mockBehavior);
  swift_beginAccess();
  v6 = *v5;
  v7 = v5[1];
  v8 = v5[2];
  *v5 = v2;
  v5[1] = v3;
  v5[2] = v4;
  sub_23B5AF27C(v2, v3, v4);
  sub_23B5AF2F8(v6, v7, v8);
}

id sub_23B5AF224@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC15FindMyBluetooth11MockService_mockBehavior);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_23B5AF27C(v4, v5, v6);
}

id sub_23B5AF27C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id result;

  if (a3 < 0)
    return (id)(a3 & 0x7FFFFFFFFFFFFFFFLL);
  return result;
}

__n128 sub_23B5AF28C(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 result;
  __int128 v8;

  v8 = *a1;
  v2 = *((_QWORD *)a1 + 2);
  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC15FindMyBluetooth11MockService_mockBehavior);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *(_OWORD *)v3 = v8;
  v3[2] = v2;
  sub_23B5AF2F8(v4, v5, v6);
  return result;
}

void sub_23B5AF2F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 < 0)

}

uint64_t (*sub_23B5AF308())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_23B5AF34C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 88) = v1;
  *(_OWORD *)(v2 + 96) = *(_OWORD *)a1;
  *(_QWORD *)(v2 + 112) = *(_QWORD *)(a1 + 16);
  return swift_task_switch();
}

uint64_t sub_23B5AF374()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v1 = v0[13];
  v2 = v0[14];
  v3 = v0[12];
  v4 = (uint64_t *)(v0[11] + OBJC_IVAR____TtC15FindMyBluetooth11MockService_mockBehavior);
  swift_beginAccess();
  v5 = *v4;
  v6 = v4[1];
  v7 = v4[2];
  *v4 = v3;
  v4[1] = v1;
  v4[2] = v2;
  sub_23B5AF27C(v3, v1, v2);
  sub_23B5AF2F8(v5, v6, v7);
  result = swift_weakLoadStrong();
  v0[15] = result;
  if (result)
    return swift_task_switch();
  __break(1u);
  return result;
}

uint64_t sub_23B5AF434()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v1 = v0[14];
  v3 = v0[12];
  v2 = v0[13];
  v4 = (uint64_t *)(v0[15] + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_mockBehavior);
  swift_beginAccess();
  v5 = *v4;
  v6 = v4[1];
  v7 = v4[2];
  *v4 = v3;
  v4[1] = v2;
  v4[2] = v1;
  sub_23B5AF27C(v3, v2, v1);
  sub_23B5AF2F8(v5, v6, v7);
  result = swift_weakLoadStrong();
  v0[16] = result;
  if (result)
    return swift_task_switch();
  __break(1u);
  return result;
}

uint64_t sub_23B5AF4FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v0 + 104);
  v1 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 96);
  v4 = (uint64_t *)(*(_QWORD *)(v0 + 128) + OBJC_IVAR____TtC15FindMyBluetooth18MockCentralManager_mockBehavior);
  swift_beginAccess();
  v5 = *v4;
  v6 = v4[1];
  v7 = v4[2];
  *v4 = v3;
  v4[1] = v2;
  v4[2] = v1;
  sub_23B5AF27C(v3, v2, v1);
  sub_23B5AF2F8(v5, v6, v7);
  swift_release();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t MockService.__allocating_init(peripheral:identifier:isPrimary:)(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v3[2] = a1;
  v3[3] = a2;
  v5 = sub_23B601820();
  v3[4] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[5] = v6;
  v7 = swift_task_alloc();
  v3[6] = v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1F8);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = swift_task_alloc();
  v3[7] = v10;
  v11 = swift_allocObject();
  v3[8] = v11;
  swift_defaultActor_initialize();
  swift_weakInit();
  *(_QWORD *)(v11 + OBJC_IVAR____TtC15FindMyBluetooth11MockService_mockCharacteristics) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v11 + OBJC_IVAR____TtC15FindMyBluetooth11MockService_characteristics) = MEMORY[0x24BEE4B00];
  *(_BYTE *)(v11 + OBJC_IVAR____TtC15FindMyBluetooth11MockService_discoveryInProgress) = 0;
  v12 = (_QWORD *)(v11 + OBJC_IVAR____TtC15FindMyBluetooth11MockService_mockBehavior);
  v12[1] = 0;
  v12[2] = 0;
  *v12 = 10000000000000000;
  swift_weakAssign();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v7, a2, v5);
  type metadata accessor for Service();
  sub_23B6015D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v11 + OBJC_IVAR____TtC15FindMyBluetooth11MockService_id, v10, v8);
  *(_BYTE *)(v11 + OBJC_IVAR____TtC15FindMyBluetooth11MockService_isPrimary) = a3;
  return swift_task_switch();
}

uint64_t sub_23B5AF75C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 24);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v1);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 64));
}

uint64_t MockService.init(peripheral:identifier:isPrimary:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4[3] = a2;
  v4[4] = v3;
  v4[2] = a1;
  v6 = sub_23B601820();
  v4[5] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v4[6] = v7;
  v8 = swift_task_alloc();
  v4[7] = v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1F8);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = swift_task_alloc();
  v4[8] = v11;
  swift_defaultActor_initialize();
  swift_weakInit();
  *(_QWORD *)(v3 + OBJC_IVAR____TtC15FindMyBluetooth11MockService_mockCharacteristics) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v3 + OBJC_IVAR____TtC15FindMyBluetooth11MockService_characteristics) = MEMORY[0x24BEE4B00];
  *(_BYTE *)(v3 + OBJC_IVAR____TtC15FindMyBluetooth11MockService_discoveryInProgress) = 0;
  v12 = (_QWORD *)(v3 + OBJC_IVAR____TtC15FindMyBluetooth11MockService_mockBehavior);
  v12[1] = 0;
  v12[2] = 0;
  *v12 = 10000000000000000;
  swift_weakAssign();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v8, a2, v6);
  type metadata accessor for Service();
  sub_23B6015D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v3 + OBJC_IVAR____TtC15FindMyBluetooth11MockService_id, v11, v9);
  *(_BYTE *)(v3 + OBJC_IVAR____TtC15FindMyBluetooth11MockService_isPrimary) = a3;
  return swift_task_switch();
}

uint64_t sub_23B5AF960()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 24);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v1);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 32));
}

uint64_t sub_23B5AF9D0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[17] = a1;
  v2[18] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A34AE0);
  v2[19] = swift_task_alloc();
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1E8);
  v2[20] = v3;
  v2[21] = *(_QWORD *)(v3 - 8);
  v2[22] = swift_task_alloc();
  v2[23] = swift_task_alloc();
  v2[24] = swift_task_alloc();
  v4 = sub_23B601CE8();
  v2[25] = v4;
  v2[26] = *(_QWORD *)(v4 - 8);
  v2[27] = swift_task_alloc();
  v2[28] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5AFAAC()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;

  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 232) = Strong;
  if (!Strong)
  {
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    goto LABEL_5;
  }
  v2 = *(_QWORD *)(v0 + 144);
  v3 = OBJC_IVAR____TtC15FindMyBluetooth11MockService_discoveryInProgress;
  *(_QWORD *)(v0 + 240) = OBJC_IVAR____TtC15FindMyBluetooth11MockService_discoveryInProgress;
  if ((*(_BYTE *)(v2 + v3) & 1) != 0)
  {
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_release();
LABEL_5:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  return swift_task_switch();
}

uint64_t sub_23B5AFC44()
{
  uint64_t v0;
  _BYTE *v1;

  v1 = (_BYTE *)(*(_QWORD *)(v0 + 232) + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_state);
  swift_beginAccess();
  *(_BYTE *)(v0 + 304) = *v1;
  return swift_task_switch();
}

uint64_t sub_23B5AFCAC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  id v7;
  _QWORD *v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  if (*(_BYTE *)(v0 + 304) == 3)
  {
    v1 = (uint64_t *)(*(_QWORD *)(v0 + 144) + OBJC_IVAR____TtC15FindMyBluetooth11MockService_mockBehavior);
    swift_beginAccess();
    v2 = *v1;
    *(_QWORD *)(v0 + 248) = *v1;
    v3 = v1[1];
    *(_QWORD *)(v0 + 256) = v3;
    v4 = v1[2];
    *(_QWORD *)(v0 + 264) = v4;
    *(_BYTE *)(*(_QWORD *)(v0 + 144) + *(_QWORD *)(v0 + 240)) = 1;
    if (v4 < 0)
    {
      v7 = (id)(v4 & 0x7FFFFFFFFFFFFFFFLL);
      sub_23B601CDC();
      v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_256A34E00 + dword_256A34E00);
      v8 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 272) = v8;
      *v8 = v0;
      v8[1] = sub_23B5AFEAC;
    }
    else
    {
      sub_23B601CDC();
      v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_256A34E00 + dword_256A34E00);
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 288) = v5;
      *v5 = v0;
      v5[1] = sub_23B5AFF24;
    }
    return v9(v2, v3, 0, 0, 1);
  }
  else
  {
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23B5AFEAC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 280) = v0;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v2[26] + 8))(v2[27], v2[25]);
  return swift_task_switch();
}

uint64_t sub_23B5AFF24()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 296) = v0;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v2[26] + 8))(v2[28], v2[25]);
  return swift_task_switch();
}

uint64_t sub_23B5AFF9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  __objc2_class_ro *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char isUniquelyReferenced_nonNull_native;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  void (*v38)(uint64_t, uint64_t);
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  int64_t v56;
  unint64_t v57;
  int64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t, unint64_t, uint64_t);
  uint64_t v63;
  int v64;
  _QWORD *v65;
  char v66;
  unint64_t v67;
  uint64_t v68;
  _BOOL8 v69;
  char v70;
  uint64_t v71;
  unint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  _QWORD *v80;
  char *v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = MEMORY[0x24BEE4AF8];
  if (v1)
    v4 = v1;
  else
    v4 = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRetain();
  v78 = sub_23B5BA588(v4);
  swift_bridgeObjectRelease();
  v5 = OBJC_IVAR____TtC15FindMyBluetooth11MockService_mockCharacteristics;
  v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC15FindMyBluetooth11MockService_mockCharacteristics);
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_23B601D24();
    if (v7)
      goto LABEL_6;
  }
  else
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v7)
    {
LABEL_6:
      v96 = v3;
      result = sub_23B5B9E0C(0, v7 & ~(v7 >> 63), 0);
      if (v7 < 0)
        goto LABEL_81;
      v90 = v5;
      v93 = v2;
      v9 = 0;
      v10 = (_QWORD *)v92;
      v11 = *(_QWORD *)(v92 + 168);
      v12 = v96;
      do
      {
        v13 = v10[24];
        v14 = v10[20];
        if ((v6 & 0xC000000000000001) != 0)
        {
          v15 = MEMORY[0x23B868228](v9, v6);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v13, v15 + OBJC_IVAR____TtC15FindMyBluetooth18MockCharacteristic_id, v14);
          swift_unknownObjectRelease();
        }
        else
        {
          (*(void (**)(_QWORD, uint64_t, _QWORD))(v11 + 16))(v10[24], *(_QWORD *)(v6 + 8 * v9 + 32) + OBJC_IVAR____TtC15FindMyBluetooth18MockCharacteristic_id, v10[20]);
        }
        v17 = *(_QWORD *)(v96 + 16);
        v16 = *(_QWORD *)(v96 + 24);
        if (v17 >= v16 >> 1)
          sub_23B5B9E0C(v16 > 1, v17 + 1, 1);
        v18 = *(_QWORD *)(v92 + 192);
        v19 = *(_QWORD *)(v92 + 160);
        ++v9;
        *(_QWORD *)(v96 + 16) = v17 + 1;
        v20 = v96
            + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))
            + *(_QWORD *)(v11 + 72) * v17;
        v10 = (_QWORD *)v92;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v11 + 32))(v20, v18, v19);
      }
      while (v7 != v9);
      swift_bridgeObjectRelease();
      v2 = v93;
      v5 = v90;
      goto LABEL_17;
    }
  }
  swift_bridgeObjectRelease();
  v12 = MEMORY[0x24BEE4AF8];
  v10 = (_QWORD *)v92;
LABEL_17:
  v94 = sub_23B5BA588(v12);
  swift_bridgeObjectRelease();
  v21 = *(_QWORD *)(v2 + v5);
  if (v21 >> 62)
    goto LABEL_37;
  v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v23 = &CBDiscovery;
  while (v22)
  {
    v24 = 0;
    v79 = &v23[49].name[v10[18]];
    v80 = v10 + 14;
    v84 = v22;
    v85 = v21 & 0xC000000000000001;
    v82 = v21 & 0xFFFFFFFFFFFFFF8;
    v83 = v21;
    v81 = (char *)(v21 + 32);
    v89 = (_QWORD *)v10[21];
    v91 = v94 + 56;
    while (v85)
    {
      v87 = MEMORY[0x23B868228](v24, v83);
      v28 = __OFADD__(v24++, 1);
      if (v28)
        goto LABEL_35;
LABEL_28:
      if (*(_QWORD *)(v94 + 16))
      {
        v29 = v87 + OBJC_IVAR____TtC15FindMyBluetooth18MockCharacteristic_id;
        v21 = v94;
        sub_23B58F61C(&qword_256A34590, (uint64_t *)&unk_2542FD1E8, MEMORY[0x24BE316D0]);
        v30 = sub_23B6018C8();
        v31 = -1 << *(_BYTE *)(v94 + 32);
        v32 = v30 & ~v31;
        if (((*(_QWORD *)(v91 + ((v32 >> 3) & 0xFFFFFFFFFFFFF8)) >> v32) & 1) != 0)
        {
          v33 = ~v31;
          v34 = v89[9];
          v21 = v89[2];
          while (1)
          {
            v35 = v10[23];
            v36 = v10[20];
            ((void (*)(uint64_t, unint64_t, uint64_t))v21)(v35, *(_QWORD *)(v94 + 48) + v32 * v34, v36);
            sub_23B58F61C(&qword_256A34680, (uint64_t *)&unk_2542FD1E8, MEMORY[0x24BE316D8]);
            v37 = sub_23B6018EC();
            v38 = (void (*)(uint64_t, uint64_t))v89[1];
            v38(v35, v36);
            if ((v37 & 1) != 0)
              break;
            v32 = (v32 + 1) & v33;
            v10 = (_QWORD *)v92;
            if (((*(_QWORD *)(v91 + ((v32 >> 3) & 0xFFFFFFFFFFFFF8)) >> v32) & 1) == 0)
              goto LABEL_21;
          }
          v25 = *(_QWORD *)(v92 + 184);
          v26 = *(_QWORD *)(v92 + 160);
          ((void (*)(uint64_t, uint64_t, uint64_t))v21)(v25, v29, v26);
          v21 = (unint64_t)v80;
          swift_beginAccess();
          swift_retain();
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v97 = *(_QWORD *)v79;
          *(_QWORD *)v79 = 0x8000000000000000;
          sub_23B5B90FC(v87, v25, isUniquelyReferenced_nonNull_native, (uint64_t *)&unk_2542FD1E8, (uint64_t (*)(uint64_t))sub_23B58E89C, &qword_256A350A8, &qword_256A34590);
          *(_QWORD *)v79 = v97;
          swift_bridgeObjectRelease();
          v38(v25, v26);
          v10 = (_QWORD *)v92;
          swift_endAccess();
        }
      }
LABEL_21:
      swift_release();
      if (v24 == v84)
        goto LABEL_38;
    }
    if (v24 >= *(_QWORD *)(v82 + 16))
      goto LABEL_36;
    v87 = *(_QWORD *)&v81[8 * v24];
    swift_retain();
    v28 = __OFADD__(v24++, 1);
    if (!v28)
      goto LABEL_28;
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    swift_bridgeObjectRetain();
    v22 = sub_23B601D24();
    v23 = &CBDiscovery;
  }
LABEL_38:
  swift_bridgeObjectRelease();
  v39 = v10[18];
  swift_bridgeObjectRelease();
  v40 = (_QWORD *)(v39 + OBJC_IVAR____TtC15FindMyBluetooth11MockService_characteristics);
  swift_beginAccess();
  v41 = swift_bridgeObjectRetain();
  v42 = sub_23B5AE1F4(v41);
  swift_bridgeObjectRelease();
  v43 = sub_23B5BA588(v42);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v43 + 16) <= *(_QWORD *)(v78 + 16) >> 3)
  {
    sub_23B5B1BC8(v43);
    result = swift_bridgeObjectRelease();
    v44 = v78;
  }
  else
  {
    v44 = sub_23B5B2178(v43, v78);
    result = swift_bridgeObjectRelease();
  }
  v45 = 0;
  v86 = v44 + 56;
  v46 = -1;
  v47 = -1 << *(_BYTE *)(v44 + 32);
  v95 = *(_QWORD *)(v92 + 168);
  if (-v47 < 64)
    v46 = ~(-1 << -(char)v47);
  v48 = v46 & *(_QWORD *)(v44 + 56);
  v88 = (unint64_t)(63 - v47) >> 6;
  while (1)
  {
    if (v48)
    {
      v53 = __clz(__rbit64(v48));
      v48 &= v48 - 1;
      v54 = v53 | (v45 << 6);
      v55 = v95;
    }
    else
    {
      v56 = v45 + 1;
      v55 = v95;
      if (__OFADD__(v45, 1))
        goto LABEL_79;
      if (v56 >= v88)
      {
LABEL_74:
        (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v95 + 56))(*(_QWORD *)(v92 + 152), 1, 1, *(_QWORD *)(v92 + 160));
LABEL_75:
        swift_release();
        *(_BYTE *)(*(_QWORD *)(v92 + 144) + *(_QWORD *)(v92 + 240)) = 0;
        swift_release();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        return (*(uint64_t (**)(_QWORD))(v92 + 8))(MEMORY[0x24BEE4AF8]);
      }
      v57 = *(_QWORD *)(v86 + 8 * v56);
      ++v45;
      if (!v57)
      {
        v45 = v56 + 1;
        if (v56 + 1 >= v88)
          goto LABEL_74;
        v57 = *(_QWORD *)(v86 + 8 * v45);
        if (!v57)
        {
          v45 = v56 + 2;
          if (v56 + 2 >= v88)
            goto LABEL_74;
          v57 = *(_QWORD *)(v86 + 8 * v45);
          if (!v57)
          {
            v58 = v56 + 3;
            if (v58 >= v88)
              goto LABEL_74;
            v57 = *(_QWORD *)(v86 + 8 * v58);
            if (!v57)
            {
              while (1)
              {
                v45 = v58 + 1;
                if (__OFADD__(v58, 1))
                  goto LABEL_80;
                if (v45 >= v88)
                  goto LABEL_74;
                v57 = *(_QWORD *)(v86 + 8 * v45);
                ++v58;
                if (v57)
                  goto LABEL_61;
              }
            }
            v45 = v58;
          }
        }
      }
LABEL_61:
      v48 = (v57 - 1) & v57;
      v54 = __clz(__rbit64(v57)) + (v45 << 6);
    }
    v60 = *(_QWORD *)(v92 + 152);
    v59 = *(_QWORD *)(v92 + 160);
    v61 = *(_QWORD *)(v55 + 72);
    v62 = *(void (**)(uint64_t, unint64_t, uint64_t))(v55 + 16);
    v62(v60, *(_QWORD *)(v44 + 48) + v61 * v54, v59);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v55 + 56))(v60, 0, 1, v59);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v60, 1, v59) == 1)
      goto LABEL_75;
    v63 = *(_QWORD *)(v92 + 176);
    (*(void (**)(uint64_t, _QWORD, _QWORD))(v55 + 32))(v63, *(_QWORD *)(v92 + 152), *(_QWORD *)(v92 + 160));
    swift_beginAccess();
    v64 = swift_isUniquelyReferenced_nonNull_native();
    v98 = (_QWORD *)*v40;
    v65 = (_QWORD *)*v40;
    *v40 = 0x8000000000000000;
    v67 = sub_23B58E89C(v63);
    v68 = v65[2];
    v69 = (v66 & 1) == 0;
    result = v68 + v69;
    if (__OFADD__(v68, v69))
      break;
    v70 = v66;
    if (v65[3] >= result)
    {
      if ((v64 & 1) != 0)
      {
        if ((v66 & 1) != 0)
          goto LABEL_44;
      }
      else
      {
        sub_23B5B5294((uint64_t *)&unk_2542FD1E8, &qword_256A350A8);
        v65 = v98;
        if ((v70 & 1) != 0)
          goto LABEL_44;
      }
    }
    else
    {
      v71 = *(_QWORD *)(v92 + 176);
      sub_23B5B3430(result, v64, (uint64_t *)&unk_2542FD1E8, &qword_256A350A8, &qword_256A34590);
      v65 = v98;
      v72 = sub_23B58E89C(v71);
      if ((v70 & 1) != (v73 & 1))
        return sub_23B601E2C();
      v67 = v72;
      if ((v70 & 1) != 0)
      {
LABEL_44:
        v49 = v65[7];
        v50 = *(_QWORD *)(v49 + 8 * v67);
        *(_QWORD *)(v49 + 8 * v67) = 0;
        goto LABEL_45;
      }
    }
    v74 = *(_QWORD *)(v92 + 176);
    v75 = *(_QWORD *)(v92 + 160);
    v65[(v67 >> 6) + 8] |= 1 << v67;
    result = ((uint64_t (*)(unint64_t, uint64_t, uint64_t))v62)(v65[6] + v67 * v61, v74, v75);
    *(_QWORD *)(v65[7] + 8 * v67) = 0;
    v76 = v65[2];
    v28 = __OFADD__(v76, 1);
    v77 = v76 + 1;
    if (v28)
      goto LABEL_78;
    v65[2] = v77;
    v50 = 1;
LABEL_45:
    v51 = *(_QWORD *)(v92 + 176);
    v52 = *(_QWORD *)(v92 + 160);
    *v40 = v65;
    swift_bridgeObjectRelease();
    sub_23B58F6F0(v50);
    swift_endAccess();
    result = (*(uint64_t (**)(uint64_t, uint64_t))(v95 + 8))(v51, v52);
  }
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
  return result;
}

uint64_t sub_23B5B0914()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5B0994()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 144) + *(_QWORD *)(v0 + 240)) = 0;
  swift_willThrow();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5B0A38()
{
  uint64_t v0;

  sub_23B5AF2F8(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 264));
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5B0AC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = v1;
  return swift_task_switch();
}

uint64_t sub_23B5B0AE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = OBJC_IVAR____TtC15FindMyBluetooth11MockService_characteristics;
  *(_QWORD *)(v0 + 56) = OBJC_IVAR____TtC15FindMyBluetooth11MockService_characteristics;
  v3 = (uint64_t *)(v1 + v2);
  swift_beginAccess();
  v4 = *v3;
  if (*(_QWORD *)(v4 + 16))
  {
    v5 = *(_QWORD *)(v0 + 40);
    swift_bridgeObjectRetain();
    v6 = sub_23B58E89C(v5);
    if ((v7 & 1) != 0)
    {
      v8 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v6);
      swift_retain();
      swift_bridgeObjectRelease();
      if (v8)
        return (*(uint64_t (**)(uint64_t))(v0 + 8))(v8);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  v10 = *(_QWORD *)(v0 + 40);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A341E0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1E8);
  *(_QWORD *)(v0 + 64) = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_DWORD *)(v12 + 80);
  *(_DWORD *)(v0 + 96) = v13;
  v14 = (v13 + 32) & ~(unint64_t)v13;
  v15 = swift_allocObject();
  *(_QWORD *)(v0 + 72) = v15;
  *(_OWORD *)(v15 + 16) = xmmword_23B607AF0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v12 + 16))(v15 + v14, v10, v11);
  v16 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v16;
  *v16 = v0;
  v16[1] = sub_23B5B0C4C;
  return sub_23B5AF9D0(v15);
}

uint64_t sub_23B5B0C4C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
  }
  return swift_task_switch();
}

uint64_t sub_23B5B0D10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  uint64_t v5;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 48) + *(_QWORD *)(v0 + 56));
  if (*(_QWORD *)(v1 + 16))
  {
    v2 = *(_QWORD *)(v0 + 40);
    swift_bridgeObjectRetain();
    v3 = sub_23B58E89C(v2);
    if ((v4 & 1) != 0)
    {
      v5 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v3);
      swift_retain();
      swift_bridgeObjectRelease();
      if (v5)
        return (*(uint64_t (**)(uint64_t))(v0 + 8))(v5);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  type metadata accessor for CentralManager.Error();
  sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
  swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5B0E08()
{
  uint64_t v0;

  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5B0E78(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC15FindMyBluetooth11MockService_mockCharacteristics) = a1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t MockService.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC15FindMyBluetooth11MockService_id;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1F8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_weakDestroy();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23B5AF2F8(*(_QWORD *)(v0 + OBJC_IVAR____TtC15FindMyBluetooth11MockService_mockBehavior), *(_QWORD *)(v0 + OBJC_IVAR____TtC15FindMyBluetooth11MockService_mockBehavior + 8), *(_QWORD *)(v0 + OBJC_IVAR____TtC15FindMyBluetooth11MockService_mockBehavior + 16));
  swift_defaultActor_destroy();
  return v0;
}

uint64_t MockService.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC15FindMyBluetooth11MockService_id;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1F8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_weakDestroy();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23B5AF2F8(*(_QWORD *)(v0 + OBJC_IVAR____TtC15FindMyBluetooth11MockService_mockBehavior), *(_QWORD *)(v0 + OBJC_IVAR____TtC15FindMyBluetooth11MockService_mockBehavior + 8), *(_QWORD *)(v0 + OBJC_IVAR____TtC15FindMyBluetooth11MockService_mockBehavior + 16));
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t MockService.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23B5B0FE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC15FindMyBluetooth11MockService_id;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1F8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_23B5B102C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15FindMyBluetooth11MockService_isPrimary);
}

uint64_t sub_23B5B103C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23B58CEC8;
  return sub_23B5AF9D0(a1);
}

uint64_t sub_23B5B1088(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23B58F8B4;
  v4[5] = a1;
  v4[6] = v1;
  return swift_task_switch();
}

uint64_t sub_23B5B10E8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (__cdecl *v3)();

  v3 = (uint64_t (__cdecl *)())((char *)&dword_256A35038 + dword_256A35038);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23B58CFC0;
  return v3();
}

uint64_t sub_23B5B1140()
{
  return sub_23B58D058();
}

uint64_t sub_23B5B1160(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;

  *(_QWORD *)(v6 + 56) = v5;
  v12 = sub_23B601CD0();
  *(_QWORD *)(v6 + 64) = v12;
  *(_QWORD *)(v6 + 72) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v6 + 80) = swift_task_alloc();
  *(_QWORD *)(v6 + 88) = swift_task_alloc();
  *(_QWORD *)(v6 + 40) = a1;
  *(_QWORD *)(v6 + 48) = a2;
  *(_QWORD *)(v6 + 16) = a3;
  *(_QWORD *)(v6 + 24) = a4;
  *(_BYTE *)(v6 + 32) = a5 & 1;
  return swift_task_switch();
}

uint64_t sub_23B5B1204()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  _QWORD *v5;

  v1 = v0[10];
  v2 = v0[8];
  v3 = v0[9];
  sub_23B601CE8();
  sub_23B5884D4(&qword_256A350B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6E10], MEMORY[0x24BEE6E20]);
  sub_23B601E38();
  sub_23B5884D4(&qword_256A350B8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6DC8], MEMORY[0x24BEE6E00]);
  sub_23B601CF4();
  v4 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[12] = v4;
  v4(v1, v2);
  v5 = (_QWORD *)swift_task_alloc();
  v0[13] = v5;
  *v5 = v0;
  v5[1] = sub_23B5B131C;
  return sub_23B601E44();
}

uint64_t sub_23B5B131C()
{
  uint64_t v0;
  uint64_t *v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(void (**)(uint64_t, uint64_t))(*v1 + 96);
  v3 = *(_QWORD *)(*v1 + 88);
  v4 = *(_QWORD *)(*v1 + 64);
  v5 = *v1;
  *(_QWORD *)(v5 + 112) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_23B5B13C8()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5B1404(uint64_t a1, char *a2, uint64_t *a3, unint64_t *a4, uint64_t *a5, unint64_t *a6)
{
  uint64_t *v6;
  uint64_t *v9;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(_QWORD, _QWORD, _QWORD);
  void (*v24)(_QWORD, _QWORD, _QWORD);
  char v25;
  void (*v26)(char *, uint64_t);
  uint64_t *v27;
  char isUniquelyReferenced_nonNull_native;
  char *v29;
  uint64_t *v31;
  uint64_t v32;
  uint64_t *v33;
  unint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  unint64_t *v38;
  char *v39;
  uint64_t v40;

  v38 = a6;
  v33 = a5;
  v9 = v6;
  v12 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *v6;
  v37 = a3;
  sub_23B58F61C(a4, a3, MEMORY[0x24BE316D0]);
  swift_bridgeObjectRetain();
  v39 = a2;
  v17 = sub_23B6018C8();
  v18 = -1 << *(_BYTE *)(v16 + 32);
  v19 = v17 & ~v18;
  v20 = *(_QWORD *)(v16 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19;
  v34 = a4;
  if ((v20 & 1) != 0)
  {
    v31 = v6;
    v32 = a1;
    v35 = ~v18;
    v21 = v13;
    v22 = *(_QWORD *)(v13 + 72);
    v36 = v21;
    v23 = *(void (**)(_QWORD, _QWORD, _QWORD))(v21 + 16);
    while (1)
    {
      v24 = v23;
      v23(v15, *(_QWORD *)(v16 + 48) + v22 * v19, v12);
      sub_23B58F61C(v38, v37, MEMORY[0x24BE316D8]);
      v25 = sub_23B6018EC();
      v26 = *(void (**)(char *, uint64_t))(v36 + 8);
      v26(v15, v12);
      if ((v25 & 1) != 0)
        break;
      v19 = (v19 + 1) & v35;
      v23 = v24;
      if (((*(_QWORD *)(v16 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v9 = v31;
        a1 = v32;
        v27 = v33;
        v13 = v36;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v26(v39, v12);
    v24(v32, *(_QWORD *)(*v31 + 48) + v22 * v19, v12);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v23 = *(void (**)(_QWORD, _QWORD, _QWORD))(v13 + 16);
    v27 = v33;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v29 = v39;
    v23(v15, v39, v12);
    v40 = *v9;
    *v9 = 0x8000000000000000;
    sub_23B5B96D0((uint64_t)v15, v19, isUniquelyReferenced_nonNull_native, v37, v27, v34, v38);
    *v9 = v40;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(a1, v29, v12);
    return 1;
  }
}

uint64_t sub_23B5B1684(_BYTE *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;

  v5 = *v2;
  sub_23B601E8C();
  v6 = qword_23B608090[(char)a2];
  sub_23B601E98();
  v7 = sub_23B601EB0();
  v8 = -1 << *(_BYTE *)(v5 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v5 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v14 = *v2;
    *v2 = 0x8000000000000000;
    sub_23B5B9904(a2, v9, isUniquelyReferenced_nonNull_native);
    *v2 = v14;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v10 = *(_QWORD *)(v5 + 48);
  if (qword_23B608090[*(char *)(v10 + v9)] != v6)
  {
    v11 = ~v8;
    do
    {
      v9 = (v9 + 1) & v11;
      if (((*(_QWORD *)(v5 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_7;
    }
    while (qword_23B608090[*(char *)(v10 + v9)] != v6);
  }
  result = 0;
  LOBYTE(a2) = *(_BYTE *)(*(_QWORD *)(*v2 + 48) + v9);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_23B5B17C0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_23B601E8C();
  swift_bridgeObjectRetain();
  sub_23B60194C();
  v8 = sub_23B601EB0();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_23B601DFC() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_23B601DFC() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_23B5B9A70(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_23B5B196C(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_23B601820();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_23B5884D4(&qword_2542FD220, v11, MEMORY[0x24BDCEA88]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_23B6018C8();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_23B5884D4(&qword_256A34630, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v21 = sub_23B6018EC();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_23B5B9C08((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_23B5B1BC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  unint64_t i;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  int64_t v25;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1E8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34AE0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v24 - v12;
  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return result;
  v14 = a1 + 56;
  v15 = 1 << *(_BYTE *)(a1 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(a1 + 56);
  v25 = (unint64_t)(v15 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v18 = 0;
  if (!v17)
    goto LABEL_6;
LABEL_5:
  v19 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  for (i = v19 | (v18 << 6); ; i = __clz(__rbit64(v22)) + (v18 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v13, *(_QWORD *)(a1 + 48) + *(_QWORD *)(v4 + 72) * i, v3);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v13, 0, 1, v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v13, 1, v3) == 1)
      return swift_release();
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v13, v3);
    sub_23B5B5DBC((uint64_t)v6, (uint64_t *)&unk_2542FD1E8, &qword_256A34590, &qword_256A34680, &qword_256A350A0, (uint64_t)v10);
    sub_23B587ED4((uint64_t)v10, &qword_256A34AE0);
    result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    if (v17)
      goto LABEL_5;
LABEL_6:
    v21 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v21 >= v25)
      goto LABEL_25;
    v22 = *(_QWORD *)(v14 + 8 * v21);
    ++v18;
    if (!v22)
    {
      v18 = v21 + 1;
      if (v21 + 1 >= v25)
        goto LABEL_25;
      v22 = *(_QWORD *)(v14 + 8 * v18);
      if (!v22)
      {
        v18 = v21 + 2;
        if (v21 + 2 >= v25)
          goto LABEL_25;
        v22 = *(_QWORD *)(v14 + 8 * v18);
        if (!v22)
        {
          v18 = v21 + 3;
          if (v21 + 3 >= v25)
            goto LABEL_25;
          v22 = *(_QWORD *)(v14 + 8 * v18);
          if (!v22)
            break;
        }
      }
    }
LABEL_21:
    v17 = (v22 - 1) & v22;
  }
  v23 = v21 + 4;
  if (v23 >= v25)
  {
LABEL_25:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v13, 1, 1, v3);
    return swift_release();
  }
  v22 = *(_QWORD *)(v14 + 8 * v23);
  if (v22)
  {
    v18 = v23;
    goto LABEL_21;
  }
  while (1)
  {
    v18 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v18 >= v25)
      goto LABEL_25;
    v22 = *(_QWORD *)(v14 + 8 * v18);
    ++v23;
    if (v22)
      goto LABEL_21;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_23B5B1EA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  unint64_t i;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  int64_t v25;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1F8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34678);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v24 - v12;
  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return result;
  v14 = a1 + 56;
  v15 = 1 << *(_BYTE *)(a1 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(a1 + 56);
  v25 = (unint64_t)(v15 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v18 = 0;
  if (!v17)
    goto LABEL_6;
LABEL_5:
  v19 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  for (i = v19 | (v18 << 6); ; i = __clz(__rbit64(v22)) + (v18 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v13, *(_QWORD *)(a1 + 48) + *(_QWORD *)(v4 + 72) * i, v3);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v13, 0, 1, v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v13, 1, v3) == 1)
      return swift_release();
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v13, v3);
    sub_23B5B5DBC((uint64_t)v6, (uint64_t *)&unk_2542FD1F8, &qword_256A34660, &qword_256A34668, &qword_256A35090, (uint64_t)v10);
    sub_23B587ED4((uint64_t)v10, &qword_256A34678);
    result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    if (v17)
      goto LABEL_5;
LABEL_6:
    v21 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v21 >= v25)
      goto LABEL_25;
    v22 = *(_QWORD *)(v14 + 8 * v21);
    ++v18;
    if (!v22)
    {
      v18 = v21 + 1;
      if (v21 + 1 >= v25)
        goto LABEL_25;
      v22 = *(_QWORD *)(v14 + 8 * v18);
      if (!v22)
      {
        v18 = v21 + 2;
        if (v21 + 2 >= v25)
          goto LABEL_25;
        v22 = *(_QWORD *)(v14 + 8 * v18);
        if (!v22)
        {
          v18 = v21 + 3;
          if (v21 + 3 >= v25)
            goto LABEL_25;
          v22 = *(_QWORD *)(v14 + 8 * v18);
          if (!v22)
            break;
        }
      }
    }
LABEL_21:
    v17 = (v22 - 1) & v22;
  }
  v23 = v21 + 4;
  if (v23 >= v25)
  {
LABEL_25:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v13, 1, 1, v3);
    return swift_release();
  }
  v22 = *(_QWORD *)(v14 + 8 * v23);
  if (v22)
  {
    v18 = v23;
    goto LABEL_21;
  }
  while (1)
  {
    v18 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v18 >= v25)
      goto LABEL_25;
    v22 = *(_QWORD *)(v14 + 8 * v18);
    ++v23;
    if (v22)
      goto LABEL_21;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_23B5B2178(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, unint64_t, uint64_t);
  char v29;
  void (*v30)(char *, uint64_t);
  unint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t isStackAllocationSafe;
  char v35;
  unint64_t v36;
  size_t v37;
  uint64_t v38;
  void *v39;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int64_t v46;
  char *v47;
  uint64_t v48;
  unint64_t v49;
  int64_t v50;
  char *v51;
  char *v52;
  _QWORD v53[7];

  v53[5] = *MEMORY[0x24BDAC8D0];
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34AE0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1E8);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v52 = (char *)&v41 - v12;
  if (!*(_QWORD *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x24BEE4B08];
  }
  v13 = -1 << *(_BYTE *)(a1 + 32);
  if (-v13 < 64)
    v14 = ~(-1 << -(char)v13);
  else
    v14 = -1;
  v15 = v14 & *(_QWORD *)(a1 + 56);
  v53[0] = a1;
  v53[1] = a1 + 56;
  v44 = ~v13;
  v45 = a1 + 56;
  v53[2] = ~v13;
  v16 = (unint64_t)(63 - v13) >> 6;
  v51 = (char *)(a2 + 56);
  v41 = v16 - 1;
  swift_bridgeObjectRetain();
  v17 = 0;
  v46 = v16;
  v47 = v6;
  v42 = a1 + 104;
  v43 = v16 - 6;
  v48 = a1;
  if (!v15)
    goto LABEL_16;
LABEL_6:
  v18 = (v15 - 1) & v15;
  v19 = __clz(__rbit64(v15)) | (v17 << 6);
  v20 = v17;
LABEL_7:
  (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v6, *(_QWORD *)(a1 + 48) + *(_QWORD *)(v8 + 72) * v19, v7);
  v21 = 0;
  while (1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, v21, 1, v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      sub_23B5A39A8();
      sub_23B587ED4((uint64_t)v6, &qword_256A34AE0);
      return a2;
    }
    v49 = v18;
    v50 = v20;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v52, v6, v7);
    sub_23B58F61C(&qword_256A34590, (uint64_t *)&unk_2542FD1E8, MEMORY[0x24BE316D0]);
    v22 = sub_23B6018C8();
    v23 = a2;
    v24 = -1 << *(_BYTE *)(a2 + 32);
    v25 = v22 & ~v24;
    if (((*(_QWORD *)&v51[(v25 >> 3) & 0xFFFFFFFFFFFFF8] >> v25) & 1) != 0)
      break;
    v30 = *(void (**)(char *, uint64_t))(v8 + 8);
LABEL_15:
    v30(v52, v7);
    v15 = v49;
    v17 = v50;
    a2 = v23;
    v6 = v47;
    a1 = v48;
    if (v49)
      goto LABEL_6;
LABEL_16:
    v20 = v17 + 1;
    if (__OFADD__(v17, 1))
      __break(1u);
    if (v20 >= v46)
    {
      v18 = 0;
      v21 = 1;
      v20 = v17;
    }
    else
    {
      v31 = *(_QWORD *)(v45 + 8 * v20);
      if (v31)
        goto LABEL_19;
      v32 = v17 + 2;
      if (v17 + 2 >= v46)
      {
        v18 = 0;
        v21 = 1;
      }
      else
      {
        v31 = *(_QWORD *)(v45 + 8 * v32);
        if (v31)
          goto LABEL_23;
        if (v17 + 3 >= v46)
          goto LABEL_36;
        v31 = *(_QWORD *)(v45 + 8 * (v17 + 3));
        if (v31)
        {
          v20 = v17 + 3;
          goto LABEL_19;
        }
        v32 = v17 + 4;
        if (v17 + 4 >= v46)
        {
          v18 = 0;
          v21 = 1;
          v20 = v17 + 3;
        }
        else
        {
          v31 = *(_QWORD *)(v45 + 8 * v32);
          if (v31)
          {
LABEL_23:
            v20 = v32;
LABEL_19:
            v18 = (v31 - 1) & v31;
            v19 = __clz(__rbit64(v31)) + (v20 << 6);
            goto LABEL_7;
          }
          v20 = v17 + 5;
          if (v17 + 5 >= v46)
          {
LABEL_36:
            v18 = 0;
            v21 = 1;
            v20 = v32;
          }
          else
          {
            v31 = *(_QWORD *)(v45 + 8 * v20);
            if (v31)
              goto LABEL_19;
            v33 = v17;
            while (v43 != v33)
            {
              v31 = *(_QWORD *)(v42 + 8 * v33++);
              if (v31)
              {
                v20 = v33 + 5;
                goto LABEL_19;
              }
            }
            v18 = 0;
            v21 = 1;
            v20 = v41;
          }
        }
      }
    }
  }
  v26 = ~v24;
  v27 = *(_QWORD *)(v8 + 72);
  v28 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  while (1)
  {
    v28(v11, *(_QWORD *)(v23 + 48) + v27 * v25, v7);
    sub_23B58F61C(&qword_256A34680, (uint64_t *)&unk_2542FD1E8, MEMORY[0x24BE316D8]);
    v29 = sub_23B6018EC();
    v30 = *(void (**)(char *, uint64_t))(v8 + 8);
    v30(v11, v7);
    if ((v29 & 1) != 0)
      break;
    v25 = (v25 + 1) & v26;
    if (((*(_QWORD *)&v51[(v25 >> 3) & 0xFFFFFFFFFFFFF8] >> v25) & 1) == 0)
      goto LABEL_15;
  }
  v53[3] = v50;
  v53[4] = v49;
  isStackAllocationSafe = ((uint64_t (*)(char *, uint64_t))v30)(v52, v7);
  v35 = *(_BYTE *)(v23 + 32);
  v36 = (unint64_t)((1 << v35) + 63) >> 6;
  v37 = 8 * v36;
  if ((v35 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    memcpy((char *)&v41 - ((v37 + 15) & 0x3FFFFFFFFFFFFFF0), v51, v37);
    v38 = sub_23B5B6C74((unint64_t *)((char *)&v41 - ((v37 + 15) & 0x3FFFFFFFFFFFFFF0)), v36, v23, v25, v53);
    swift_release();
    sub_23B5A39A8();
  }
  else
  {
    v39 = (void *)swift_slowAlloc();
    memcpy(v39, v51, v37);
    v38 = sub_23B5B6C74((unint64_t *)v39, v36, v23, v25, v53);
    swift_release();
    sub_23B5A39A8();
    MEMORY[0x23B868A2C](v39, -1, -1);
  }
  return v38;
}

uint64_t sub_23B5B2770(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, unint64_t, uint64_t);
  char v29;
  void (*v30)(char *, uint64_t);
  unint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t isStackAllocationSafe;
  char v35;
  unint64_t v36;
  size_t v37;
  uint64_t v38;
  void *v39;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int64_t v46;
  char *v47;
  uint64_t v48;
  unint64_t v49;
  int64_t v50;
  char *v51;
  char *v52;
  _QWORD v53[7];

  v53[5] = *MEMORY[0x24BDAC8D0];
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34678);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1F8);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v52 = (char *)&v41 - v12;
  if (!*(_QWORD *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x24BEE4B08];
  }
  v13 = -1 << *(_BYTE *)(a1 + 32);
  if (-v13 < 64)
    v14 = ~(-1 << -(char)v13);
  else
    v14 = -1;
  v15 = v14 & *(_QWORD *)(a1 + 56);
  v53[0] = a1;
  v53[1] = a1 + 56;
  v44 = ~v13;
  v45 = a1 + 56;
  v53[2] = ~v13;
  v16 = (unint64_t)(63 - v13) >> 6;
  v51 = (char *)(a2 + 56);
  v41 = v16 - 1;
  swift_bridgeObjectRetain();
  v17 = 0;
  v46 = v16;
  v47 = v6;
  v42 = a1 + 104;
  v43 = v16 - 6;
  v48 = a1;
  if (!v15)
    goto LABEL_16;
LABEL_6:
  v18 = (v15 - 1) & v15;
  v19 = __clz(__rbit64(v15)) | (v17 << 6);
  v20 = v17;
LABEL_7:
  (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v6, *(_QWORD *)(a1 + 48) + *(_QWORD *)(v8 + 72) * v19, v7);
  v21 = 0;
  while (1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, v21, 1, v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      sub_23B5A39A8();
      sub_23B587ED4((uint64_t)v6, &qword_256A34678);
      return a2;
    }
    v49 = v18;
    v50 = v20;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v52, v6, v7);
    sub_23B58F61C(&qword_256A34660, (uint64_t *)&unk_2542FD1F8, MEMORY[0x24BE316D0]);
    v22 = sub_23B6018C8();
    v23 = a2;
    v24 = -1 << *(_BYTE *)(a2 + 32);
    v25 = v22 & ~v24;
    if (((*(_QWORD *)&v51[(v25 >> 3) & 0xFFFFFFFFFFFFF8] >> v25) & 1) != 0)
      break;
    v30 = *(void (**)(char *, uint64_t))(v8 + 8);
LABEL_15:
    v30(v52, v7);
    v15 = v49;
    v17 = v50;
    a2 = v23;
    v6 = v47;
    a1 = v48;
    if (v49)
      goto LABEL_6;
LABEL_16:
    v20 = v17 + 1;
    if (__OFADD__(v17, 1))
      __break(1u);
    if (v20 >= v46)
    {
      v18 = 0;
      v21 = 1;
      v20 = v17;
    }
    else
    {
      v31 = *(_QWORD *)(v45 + 8 * v20);
      if (v31)
        goto LABEL_19;
      v32 = v17 + 2;
      if (v17 + 2 >= v46)
      {
        v18 = 0;
        v21 = 1;
      }
      else
      {
        v31 = *(_QWORD *)(v45 + 8 * v32);
        if (v31)
          goto LABEL_23;
        if (v17 + 3 >= v46)
          goto LABEL_36;
        v31 = *(_QWORD *)(v45 + 8 * (v17 + 3));
        if (v31)
        {
          v20 = v17 + 3;
          goto LABEL_19;
        }
        v32 = v17 + 4;
        if (v17 + 4 >= v46)
        {
          v18 = 0;
          v21 = 1;
          v20 = v17 + 3;
        }
        else
        {
          v31 = *(_QWORD *)(v45 + 8 * v32);
          if (v31)
          {
LABEL_23:
            v20 = v32;
LABEL_19:
            v18 = (v31 - 1) & v31;
            v19 = __clz(__rbit64(v31)) + (v20 << 6);
            goto LABEL_7;
          }
          v20 = v17 + 5;
          if (v17 + 5 >= v46)
          {
LABEL_36:
            v18 = 0;
            v21 = 1;
            v20 = v32;
          }
          else
          {
            v31 = *(_QWORD *)(v45 + 8 * v20);
            if (v31)
              goto LABEL_19;
            v33 = v17;
            while (v43 != v33)
            {
              v31 = *(_QWORD *)(v42 + 8 * v33++);
              if (v31)
              {
                v20 = v33 + 5;
                goto LABEL_19;
              }
            }
            v18 = 0;
            v21 = 1;
            v20 = v41;
          }
        }
      }
    }
  }
  v26 = ~v24;
  v27 = *(_QWORD *)(v8 + 72);
  v28 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  while (1)
  {
    v28(v11, *(_QWORD *)(v23 + 48) + v27 * v25, v7);
    sub_23B58F61C(&qword_256A34668, (uint64_t *)&unk_2542FD1F8, MEMORY[0x24BE316D8]);
    v29 = sub_23B6018EC();
    v30 = *(void (**)(char *, uint64_t))(v8 + 8);
    v30(v11, v7);
    if ((v29 & 1) != 0)
      break;
    v25 = (v25 + 1) & v26;
    if (((*(_QWORD *)&v51[(v25 >> 3) & 0xFFFFFFFFFFFFF8] >> v25) & 1) == 0)
      goto LABEL_15;
  }
  v53[3] = v50;
  v53[4] = v49;
  isStackAllocationSafe = ((uint64_t (*)(char *, uint64_t))v30)(v52, v7);
  v35 = *(_BYTE *)(v23 + 32);
  v36 = (unint64_t)((1 << v35) + 63) >> 6;
  v37 = 8 * v36;
  if ((v35 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    memcpy((char *)&v41 - ((v37 + 15) & 0x3FFFFFFFFFFFFFF0), v51, v37);
    v38 = sub_23B5B70D4((unint64_t *)((char *)&v41 - ((v37 + 15) & 0x3FFFFFFFFFFFFFF0)), v36, v23, v25, v53);
    swift_release();
    sub_23B5A39A8();
  }
  else
  {
    v39 = (void *)swift_slowAlloc();
    memcpy(v39, v51, v37);
    v38 = sub_23B5B70D4((unint64_t *)v39, v36, v23, v25, v53);
    swift_release();
    sub_23B5A39A8();
    MEMORY[0x23B868A2C](v39, -1, -1);
  }
  return v38;
}

uint64_t sub_23B5B2D68(uint64_t a1, int a2)
{
  return sub_23B5B3430(a1, a2, (uint64_t *)&unk_2542FD1E8, &qword_256A350D0, &qword_256A34590);
}

uint64_t sub_23B5B2D84(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t i;
  int v42;

  v3 = v2;
  v5 = sub_23B601820();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A350C8);
  v42 = a2;
  v10 = sub_23B601D3C();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v40 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v38 = v2;
  v39 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  for (i = v9; ; v9 = i)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v39)
      break;
    v23 = v40;
    v24 = v40[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v39)
        goto LABEL_34;
      v24 = v40[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v39)
        {
LABEL_34:
          swift_release();
          v3 = v38;
          if ((v42 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v40[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v39)
              goto LABEL_34;
            v24 = v40[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v42 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
      v28 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
      v28 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
      swift_retain();
    }
    sub_23B5884D4(&qword_2542FD220, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_23B6018C8();
    v29 = -1 << *(_BYTE *)(v11 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v16 + 8 * v31);
      }
      while (v35 == -1);
      v19 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v26 * v19, v8, v5);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v19) = v28;
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v38;
  v23 = v40;
  if ((v42 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v36 = 1 << *(_BYTE *)(v9 + 32);
  if (v36 >= 64)
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v36;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_23B5B3118(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;
  _OWORD v35[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD620);
  v6 = sub_23B601D3C();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v34 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33)
          goto LABEL_34;
        v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v33)
            goto LABEL_34;
          v19 = v34[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              v3 = v2;
              if ((a2 & 1) != 0)
              {
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 >= 64)
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v34 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_41;
                if (v13 >= v33)
                  goto LABEL_34;
                v19 = v34[v13];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v13 = v20;
          }
        }
LABEL_21:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v21;
      v22 = v21[1];
      v24 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
      if ((a2 & 1) != 0)
      {
        sub_23B5A39B0(v24, v35);
      }
      else
      {
        sub_23B58F834((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_23B601E8C();
      sub_23B60194C();
      result = sub_23B601EB0();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v22;
      result = (uint64_t)sub_23B5A39B0(v35, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v14));
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_23B5B3414(uint64_t a1, int a2)
{
  return sub_23B5B3430(a1, a2, (uint64_t *)&unk_2542FD1F8, &qword_256A350C0, &qword_256A34660);
}

uint64_t sub_23B5B3430(uint64_t a1, int a2, uint64_t *a3, uint64_t *a4, unint64_t *a5)
{
  uint64_t *v5;
  uint64_t *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t result;
  int64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  _QWORD *v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  int64_t v44;
  _QWORD *v45;
  uint64_t i;
  uint64_t *v47;
  unint64_t *v48;
  int v49;

  v47 = a3;
  v48 = a5;
  v7 = v5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *v5;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  v49 = a2;
  v14 = sub_23B601D3C();
  v15 = v13;
  v16 = v14;
  if (!*(_QWORD *)(v15 + 16))
    goto LABEL_41;
  v17 = 1 << *(_BYTE *)(v15 + 32);
  v18 = *(_QWORD *)(v15 + 64);
  v45 = (_QWORD *)(v15 + 64);
  if (v17 < 64)
    v19 = ~(-1 << v17);
  else
    v19 = -1;
  v20 = v19 & v18;
  v43 = v7;
  v44 = (unint64_t)(v17 + 63) >> 6;
  v21 = v14 + 64;
  result = swift_retain();
  v23 = 0;
  for (i = v15; ; v15 = i)
  {
    if (v20)
    {
      v25 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      v26 = v25 | (v23 << 6);
      goto LABEL_22;
    }
    v27 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v27 >= v44)
      break;
    v28 = v45;
    v29 = v45[v27];
    ++v23;
    if (!v29)
    {
      v23 = v27 + 1;
      if (v27 + 1 >= v44)
        goto LABEL_34;
      v29 = v45[v23];
      if (!v29)
      {
        v30 = v27 + 2;
        if (v30 >= v44)
        {
LABEL_34:
          swift_release();
          v7 = v43;
          if ((v49 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v29 = v45[v30];
        if (!v29)
        {
          while (1)
          {
            v23 = v30 + 1;
            if (__OFADD__(v30, 1))
              goto LABEL_43;
            if (v23 >= v44)
              goto LABEL_34;
            v29 = v45[v23];
            ++v30;
            if (v29)
              goto LABEL_21;
          }
        }
        v23 = v30;
      }
    }
LABEL_21:
    v20 = (v29 - 1) & v29;
    v26 = __clz(__rbit64(v29)) + (v23 << 6);
LABEL_22:
    v31 = *(_QWORD *)(v10 + 72);
    v32 = *(_QWORD *)(v15 + 48) + v31 * v26;
    if ((v49 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 32))(v12, v32, v9);
      v33 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 8 * v26);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v12, v32, v9);
      v33 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 8 * v26);
      swift_retain();
    }
    sub_23B58F61C(v48, v47, MEMORY[0x24BE316D0]);
    result = sub_23B6018C8();
    v34 = -1 << *(_BYTE *)(v16 + 32);
    v35 = result & ~v34;
    v36 = v35 >> 6;
    if (((-1 << v35) & ~*(_QWORD *)(v21 + 8 * (v35 >> 6))) != 0)
    {
      v24 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v21 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v37 = 0;
      v38 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v39 = v36 == v38;
        if (v36 == v38)
          v36 = 0;
        v37 |= v39;
        v40 = *(_QWORD *)(v21 + 8 * v36);
      }
      while (v40 == -1);
      v24 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(_QWORD *)(v21 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v10 + 32))(*(_QWORD *)(v16 + 48) + v31 * v24, v12, v9);
    *(_QWORD *)(*(_QWORD *)(v16 + 56) + 8 * v24) = v33;
    ++*(_QWORD *)(v16 + 16);
  }
  swift_release();
  v7 = v43;
  v28 = v45;
  if ((v49 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v41 = 1 << *(_BYTE *)(v15 + 32);
  if (v41 >= 64)
    bzero(v28, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v28 = -1 << v41;
  *(_QWORD *)(v15 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v7 = v16;
  return result;
}

uint64_t sub_23B5B37C4(uint64_t a1, int a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  uint64_t i;
  int v44;

  v5 = v3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v44 = a2;
  v12 = sub_23B601D3C();
  v13 = v12;
  if (!*(_QWORD *)(v11 + 16))
    goto LABEL_41;
  v14 = 1 << *(_BYTE *)(v11 + 32);
  v15 = *(_QWORD *)(v11 + 64);
  v42 = (_QWORD *)(v11 + 64);
  if (v14 < 64)
    v16 = ~(-1 << v14);
  else
    v16 = -1;
  v17 = v16 & v15;
  v40 = v3;
  v41 = (unint64_t)(v14 + 63) >> 6;
  v18 = v12 + 64;
  result = swift_retain();
  v20 = 0;
  for (i = v11; ; v11 = i)
  {
    if (v17)
    {
      v22 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41)
      break;
    v25 = v42;
    v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      v20 = v24 + 1;
      if (v24 + 1 >= v41)
        goto LABEL_34;
      v26 = v42[v20];
      if (!v26)
      {
        v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          v5 = v40;
          if ((v44 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            v20 = v27 + 1;
            if (__OFADD__(v27, 1))
              goto LABEL_43;
            if (v20 >= v41)
              goto LABEL_34;
            v26 = v42[v20];
            ++v27;
            if (v26)
              goto LABEL_21;
          }
        }
        v20 = v27;
      }
    }
LABEL_21:
    v17 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    v28 = *(_QWORD *)(v8 + 72);
    v29 = *(_QWORD *)(v11 + 48) + v28 * v23;
    if ((v44 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 32))(v10, v29, v7);
      v30 = *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v10, v29, v7);
      v30 = *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v23);
      swift_retain();
    }
    sub_23B58F61C(&qword_256A34640, &qword_256A359A0, MEMORY[0x24BE316D0]);
    result = sub_23B6018C8();
    v31 = -1 << *(_BYTE *)(v13 + 32);
    v32 = result & ~v31;
    v33 = v32 >> 6;
    if (((-1 << v32) & ~*(_QWORD *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      v21 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v34 = 0;
      v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v36 = v33 == v35;
        if (v33 == v35)
          v33 = 0;
        v34 |= v36;
        v37 = *(_QWORD *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(_QWORD *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v8 + 32))(*(_QWORD *)(v13 + 48) + v28 * v21, v10, v7);
    *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v21) = v30;
    ++*(_QWORD *)(v13 + 16);
  }
  swift_release();
  v5 = v40;
  v25 = v42;
  if ((v44 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v38 = 1 << *(_BYTE *)(v11 + 32);
  if (v38 >= 64)
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v25 = -1 << v38;
  *(_QWORD *)(v11 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v5 = v13;
  return result;
}

uint64_t sub_23B5B3B60(uint64_t a1, int a2)
{
  return sub_23B5B3430(a1, a2, (uint64_t *)&unk_2542FD1F8, &qword_256A35098, &qword_256A34660);
}

uint64_t sub_23B5B3B7C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  __int128 v31;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A35E30);
  result = sub_23B601D3C();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v30 = v3;
    v8 = 0;
    v9 = (_QWORD *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v20 = v19 | (v8 << 6);
      }
      else
      {
        v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v21 >= v13)
          goto LABEL_33;
        v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          v8 = v21 + 1;
          if (v21 + 1 >= v13)
            goto LABEL_33;
          v22 = v9[v8];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v13)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v30;
                goto LABEL_40;
              }
              v29 = 1 << *(_BYTE *)(v5 + 32);
              if (v29 >= 64)
                bzero((void *)(v5 + 64), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v9 = -1 << v29;
              v3 = v30;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                v8 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_42;
                if (v8 >= v13)
                  goto LABEL_33;
                v22 = v9[v8];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v8 = v23;
          }
        }
LABEL_30:
        v12 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      v28 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + v20);
      v31 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + 16 * v20);
      if ((a2 & 1) == 0)
        sub_23B5A294C(v31, *((unint64_t *)&v31 + 1));
      result = MEMORY[0x23B868444](*(_QWORD *)(v7 + 40), v28, 1);
      v15 = -1 << *(_BYTE *)(v7 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v26 = v17 == v25;
          if (v17 == v25)
            v17 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v14 + 8 * v17);
        }
        while (v27 == -1);
        v18 = __clz(__rbit64(~v27)) + (v17 << 6);
      }
      *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_BYTE *)(*(_QWORD *)(v7 + 48) + v18) = v28;
      *(_OWORD *)(*(_QWORD *)(v7 + 56) + 16 * v18) = v31;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_23B5B3E44(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  _QWORD *v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[4];
  int v43;
  uint64_t *v44;
  int64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;

  v3 = v2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD580);
  v51 = *(_QWORD *)(v5 - 8);
  v52 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v50 = &v42[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_23B601820();
  v49 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = &v42[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD610);
  v11 = sub_23B601D3C();
  v12 = v11;
  if (!*(_QWORD *)(v10 + 16))
    goto LABEL_41;
  v13 = 1 << *(_BYTE *)(v10 + 32);
  v14 = *(_QWORD *)(v10 + 64);
  v46 = (_QWORD *)(v10 + 64);
  if (v13 < 64)
    v15 = ~(-1 << v13);
  else
    v15 = -1;
  v16 = v15 & v14;
  v44 = v2;
  v45 = (unint64_t)(v13 + 63) >> 6;
  v17 = v11 + 64;
  v48 = v10;
  result = swift_retain();
  v19 = 0;
  v43 = a2;
  v20 = 16;
  if ((a2 & 1) != 0)
    v20 = 32;
  v47 = v20;
  v21 = v20;
  while (1)
  {
    if (v16)
    {
      v23 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v24 = v23 | (v19 << 6);
      goto LABEL_24;
    }
    v25 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v45)
      break;
    v26 = v46;
    v27 = v46[v25];
    ++v19;
    if (!v27)
    {
      v19 = v25 + 1;
      if (v25 + 1 >= v45)
        goto LABEL_34;
      v27 = v46[v19];
      if (!v27)
      {
        v28 = v25 + 2;
        if (v28 >= v45)
        {
LABEL_34:
          v40 = v48;
          swift_release();
          v3 = v44;
          if ((v43 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v27 = v46[v28];
        if (!v27)
        {
          while (1)
          {
            v19 = v28 + 1;
            if (__OFADD__(v28, 1))
              goto LABEL_43;
            if (v19 >= v45)
              goto LABEL_34;
            v27 = v46[v19];
            ++v28;
            if (v27)
              goto LABEL_23;
          }
        }
        v19 = v28;
      }
    }
LABEL_23:
    v16 = (v27 - 1) & v27;
    v24 = __clz(__rbit64(v27)) + (v19 << 6);
LABEL_24:
    v29 = v48;
    v30 = *(_QWORD *)(v49 + 72);
    (*(void (**)(_BYTE *, unint64_t, uint64_t))(v49 + v21))(v9, *(_QWORD *)(v48 + 48) + v30 * v24, v7);
    v31 = *(_QWORD *)(v29 + 56);
    v32 = *(_QWORD *)(v51 + 72);
    (*(void (**)(_BYTE *, unint64_t, uint64_t))(v51 + v21))(v50, v31 + v32 * v24, v52);
    sub_23B5884D4(&qword_2542FD220, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_23B6018C8();
    v33 = -1 << *(_BYTE *)(v12 + 32);
    v34 = result & ~v33;
    v35 = v34 >> 6;
    if (((-1 << v34) & ~*(_QWORD *)(v17 + 8 * (v34 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v34) & ~*(_QWORD *)(v17 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v36 = 0;
      v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v38 = v35 == v37;
        if (v35 == v37)
          v35 = 0;
        v36 |= v38;
        v39 = *(_QWORD *)(v17 + 8 * v35);
      }
      while (v39 == -1);
      v22 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(_QWORD *)(v17 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*(void (**)(unint64_t, _BYTE *, uint64_t))(v49 + 32))(*(_QWORD *)(v12 + 48) + v30 * v22, v9, v7);
    result = (*(uint64_t (**)(unint64_t, _BYTE *, uint64_t))(v51 + 32))(*(_QWORD *)(v12 + 56) + v32 * v22, v50, v52);
    ++*(_QWORD *)(v12 + 16);
  }
  v40 = v48;
  swift_release();
  v3 = v44;
  v26 = v46;
  if ((v43 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v41 = 1 << *(_BYTE *)(v40 + 32);
  if (v41 >= 64)
    bzero(v26, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v26 = -1 << v41;
  *(_QWORD *)(v40 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v12;
  return result;
}

uint64_t sub_23B5B4240(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t i;
  int v42;

  v3 = v2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A35078);
  v42 = a2;
  v10 = sub_23B601D3C();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v40 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v38 = v2;
  v39 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  for (i = v9; ; v9 = i)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v39)
      break;
    v23 = v40;
    v24 = v40[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v39)
        goto LABEL_34;
      v24 = v40[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v39)
        {
LABEL_34:
          swift_release();
          v3 = v38;
          if ((v42 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v40[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v39)
              goto LABEL_34;
            v24 = v40[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v42 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
      v28 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
      v28 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
      swift_bridgeObjectRetain();
    }
    sub_23B58F61C(&qword_256A34640, &qword_256A359A0, MEMORY[0x24BE316D0]);
    result = sub_23B6018C8();
    v29 = -1 << *(_BYTE *)(v11 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v16 + 8 * v31);
      }
      while (v35 == -1);
      v19 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v26 * v19, v8, v5);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v19) = v28;
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v38;
  v23 = v40;
  if ((v42 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v36 = 1 << *(_BYTE *)(v9 + 32);
  if (v36 >= 64)
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v36;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_23B5B45D8(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t i;
  int v42;

  v3 = v2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A35030);
  v42 = a2;
  v10 = sub_23B601D3C();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v40 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v38 = v2;
  v39 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  for (i = v9; ; v9 = i)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v39)
      break;
    v23 = v40;
    v24 = v40[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v39)
        goto LABEL_34;
      v24 = v40[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v39)
        {
LABEL_34:
          swift_release();
          v3 = v38;
          if ((v42 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v40[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v39)
              goto LABEL_34;
            v24 = v40[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v42 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
      v28 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
      v28 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
      swift_retain();
    }
    sub_23B58F61C(&qword_256A34640, &qword_256A359A0, MEMORY[0x24BE316D0]);
    result = sub_23B6018C8();
    v29 = -1 << *(_BYTE *)(v11 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v16 + 8 * v31);
      }
      while (v35 == -1);
      v19 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v26 * v19, v8, v5);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v19) = v28;
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v38;
  v23 = v40;
  if ((v42 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v36 = 1 << *(_BYTE *)(v9 + 32);
  if (v36 >= 64)
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v36;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_23B5B4970(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_23B601820();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

uint64_t sub_23B5B4A08(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

uint64_t sub_23B5B4AA4(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v9 = a4[6];
  v10 = __swift_instantiateConcreteTypeFromMangledName(a5);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * a1, a2, v10);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v12 = a4[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a4[2] = v14;
  return result;
}

uint64_t sub_23B5B4B3C(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_23B601820();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  v10 = a4[7];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD580);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, a3, v11);
  v13 = a4[2];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    a4[2] = v15;
  return result;
}

void *sub_23B5B4BF8()
{
  return sub_23B5B5294((uint64_t *)&unk_2542FD1E8, &qword_256A350D0);
}

void *sub_23B5B4C0C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_23B601820();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A350C8);
  v24 = v0;
  v5 = *v0;
  v6 = sub_23B601D30();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v24 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v25 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = 8 * v16;
    v19 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v16);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v19;
    result = (void *)swift_retain();
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23B5B4E3C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD620);
  v2 = *v0;
  v3 = sub_23B601D30();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_23B58F834(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_23B5A39B0(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_23B5B5020()
{
  return sub_23B5B504C(&qword_256A35028);
}

void *sub_23B5B502C()
{
  return sub_23B5B5294((uint64_t *)&unk_2542FD1F8, &qword_256A350C0);
}

void *sub_23B5B5040()
{
  return sub_23B5B504C(&qword_256A35058);
}

void *sub_23B5B504C(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *result;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  int64_t v28;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v26 = v1;
  v7 = *v1;
  v8 = sub_23B601D30();
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v26 = v9;
    return result;
  }
  result = (void *)(v8 + 64);
  v11 = (unint64_t)((1 << *(_BYTE *)(v9 + 32)) + 63) >> 6;
  if (v9 != v7 || (unint64_t)result >= v7 + 64 + 8 * v11)
    result = memmove(result, (const void *)(v7 + 64), 8 * v11);
  v27 = v7 + 64;
  v13 = 0;
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v7 + 16);
  v14 = 1 << *(_BYTE *)(v7 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v7 + 64);
  v28 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v18 = v17 | (v13 << 6);
      goto LABEL_12;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v28)
      goto LABEL_26;
    v23 = *(_QWORD *)(v27 + 8 * v22);
    ++v13;
    if (!v23)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v28)
        goto LABEL_26;
      v23 = *(_QWORD *)(v27 + 8 * v13);
      if (!v23)
        break;
    }
LABEL_25:
    v16 = (v23 - 1) & v23;
    v18 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v4 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v6, *(_QWORD *)(v7 + 48) + v19, v3);
    v20 = 8 * v18;
    v21 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v18);
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(*(_QWORD *)(v9 + 48) + v19, v6, v3);
    *(_QWORD *)(*(_QWORD *)(v9 + 56) + v20) = v21;
    result = (void *)swift_retain();
  }
  v24 = v22 + 2;
  if (v24 >= v28)
    goto LABEL_26;
  v23 = *(_QWORD *)(v27 + 8 * v24);
  if (v23)
  {
    v13 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v13 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v13 >= v28)
      goto LABEL_26;
    v23 = *(_QWORD *)(v27 + 8 * v13);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23B5B5280()
{
  return sub_23B5B5294((uint64_t *)&unk_2542FD1F8, &qword_256A35098);
}

void *sub_23B5B5294(uint64_t *a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *result;
  unint64_t v12;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  int64_t v29;

  v4 = __swift_instantiateConcreteTypeFromMangledName(a1);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v27 = v2;
  v8 = *v2;
  v9 = sub_23B601D30();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v27 = v10;
    return result;
  }
  result = (void *)(v9 + 64);
  v12 = (unint64_t)((1 << *(_BYTE *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v8 + 64 + 8 * v12)
    result = memmove(result, (const void *)(v8 + 64), 8 * v12);
  v28 = v8 + 64;
  v14 = 0;
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(v8 + 16);
  v15 = 1 << *(_BYTE *)(v8 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v8 + 64);
  v29 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      v18 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v19 = v18 | (v14 << 6);
      goto LABEL_12;
    }
    v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v29)
      goto LABEL_26;
    v24 = *(_QWORD *)(v28 + 8 * v23);
    ++v14;
    if (!v24)
    {
      v14 = v23 + 1;
      if (v23 + 1 >= v29)
        goto LABEL_26;
      v24 = *(_QWORD *)(v28 + 8 * v14);
      if (!v24)
        break;
    }
LABEL_25:
    v17 = (v24 - 1) & v24;
    v19 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v5 + 72) * v19;
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v7, *(_QWORD *)(v8 + 48) + v20, v4);
    v21 = 8 * v19;
    v22 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v19);
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v10 + 48) + v20, v7, v4);
    *(_QWORD *)(*(_QWORD *)(v10 + 56) + v21) = v22;
    result = (void *)swift_retain();
  }
  v25 = v23 + 2;
  if (v25 >= v29)
    goto LABEL_26;
  v24 = *(_QWORD *)(v28 + 8 * v25);
  if (v24)
  {
    v14 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v14 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v14 >= v29)
      goto LABEL_26;
    v24 = *(_QWORD *)(v28 + 8 * v14);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23B5B54C0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A35E30);
  v2 = *v0;
  v3 = sub_23B601D30();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    v16 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + 16 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + 16 * v15) = v16;
    result = (void *)sub_23B5A294C(v16, *((unint64_t *)&v16 + 1));
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

char *sub_23B5B5668()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *result;
  char *v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  int64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;

  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD580);
  v37 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v40 = (char *)&v33 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_23B601820();
  v36 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v38 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD610);
  v33 = v0;
  v3 = *v0;
  v4 = sub_23B601D30();
  v5 = *(_QWORD *)(v3 + 16);
  v43 = v4;
  if (!v5)
  {
    result = (char *)swift_release();
    v32 = v43;
    v31 = v33;
LABEL_25:
    *v31 = v32;
    return result;
  }
  v6 = v4;
  result = (char *)(v4 + 64);
  v8 = (char *)(v3 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v6 + 32)) + 63) >> 6;
  v34 = v3 + 64;
  if (v6 != v3 || result >= &v8[8 * v9])
  {
    result = (char *)memmove(result, v8, 8 * v9);
    v6 = v43;
  }
  v10 = 0;
  *(_QWORD *)(v6 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v42 = v3;
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v35 = (unint64_t)(v11 + 63) >> 6;
  v14 = v36;
  v15 = v37;
  v17 = v38;
  v16 = v39;
  v18 = v41;
  v19 = v43;
  while (1)
  {
    if (v13)
    {
      v20 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v44 = v10;
      v21 = v20 | (v10 << 6);
      v22 = v42;
      goto LABEL_9;
    }
    v27 = v10 + 1;
    v22 = v42;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v27 >= v35)
      goto LABEL_23;
    v28 = *(_QWORD *)(v34 + 8 * v27);
    v29 = v10 + 1;
    if (!v28)
    {
      v29 = v27 + 1;
      if (v27 + 1 >= v35)
        goto LABEL_23;
      v28 = *(_QWORD *)(v34 + 8 * v29);
      if (!v28)
        break;
    }
LABEL_22:
    v13 = (v28 - 1) & v28;
    v44 = v29;
    v21 = __clz(__rbit64(v28)) + (v29 << 6);
LABEL_9:
    v23 = *(_QWORD *)(v14 + 72) * v21;
    (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v17, *(_QWORD *)(v22 + 48) + v23, v16);
    v24 = *(_QWORD *)(v15 + 72) * v21;
    v25 = *(_QWORD *)(v22 + 56) + v24;
    v26 = v40;
    (*(void (**)(char *, unint64_t, uint64_t))(v15 + 16))(v40, v25, v18);
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(*(_QWORD *)(v19 + 48) + v23, v17, v16);
    result = (char *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v15 + 32))(*(_QWORD *)(v19 + 56) + v24, v26, v18);
    v10 = v44;
  }
  v30 = v27 + 2;
  if (v30 >= v35)
  {
LABEL_23:
    result = (char *)swift_release();
    v31 = v33;
    v32 = v43;
    goto LABEL_25;
  }
  v28 = *(_QWORD *)(v34 + 8 * v30);
  if (v28)
  {
    v29 = v30;
    goto LABEL_22;
  }
  while (1)
  {
    v29 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v29 >= v35)
      goto LABEL_23;
    v28 = *(_QWORD *)(v34 + 8 * v29);
    ++v30;
    if (v28)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_23B5B594C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  int64_t v25;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A35078);
  v23 = v0;
  v5 = *v0;
  v6 = sub_23B601D30();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_23:
    result = (void *)swift_release();
    *v23 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v24 = v5 + 64;
  v10 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v11 = 1 << *(_BYTE *)(v5 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v5 + 64);
  v25 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25)
      goto LABEL_23;
    v20 = *(_QWORD *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v25)
        goto LABEL_23;
      v20 = *(_QWORD *)(v24 + 8 * v10);
      if (!v20)
        break;
    }
LABEL_22:
    v13 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    v16 = *(_QWORD *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v16, v1);
    v17 = 8 * v15;
    v18 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v15);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v16, v4, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v17) = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v21 = v19 + 2;
  if (v21 >= v25)
    goto LABEL_23;
  v20 = *(_QWORD *)(v24 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v25)
      goto LABEL_23;
    v20 = *(_QWORD *)(v24 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_23B5B5B84()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  int64_t v25;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A35030);
  v23 = v0;
  v5 = *v0;
  v6 = sub_23B601D30();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_23:
    result = (void *)swift_release();
    *v23 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v24 = v5 + 64;
  v10 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v11 = 1 << *(_BYTE *)(v5 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v5 + 64);
  v25 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25)
      goto LABEL_23;
    v20 = *(_QWORD *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v25)
        goto LABEL_23;
      v20 = *(_QWORD *)(v24 + 8 * v10);
      if (!v20)
        break;
    }
LABEL_22:
    v13 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    v16 = *(_QWORD *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v16, v1);
    v17 = 8 * v15;
    v18 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v15);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v16, v4, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v17) = v18;
    result = (void *)swift_retain();
  }
  v21 = v19 + 2;
  if (v21 >= v25)
    goto LABEL_23;
  v20 = *(_QWORD *)(v24 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v25)
      goto LABEL_23;
    v20 = *(_QWORD *)(v24 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_23B5B5DBC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, unint64_t *a3@<X2>, unint64_t *a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t *v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, unint64_t, uint64_t);
  char v22;
  uint64_t v23;
  uint64_t *v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  uint64_t v28;
  unint64_t *v29;
  uint64_t *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t *v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;

  v31 = a5;
  v34 = a4;
  v11 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v6;
  v36 = a2;
  sub_23B58F61C(a3, a2, MEMORY[0x24BE316D0]);
  swift_bridgeObjectRetain();
  v33 = a1;
  v16 = sub_23B6018C8();
  v17 = -1 << *(_BYTE *)(v15 + 32);
  v18 = v16 & ~v17;
  if (((*(_QWORD *)(v15 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) != 0)
  {
    v29 = a3;
    v30 = v6;
    v32 = a6;
    v19 = ~v17;
    v20 = *(_QWORD *)(v12 + 72);
    v35 = v12;
    v21 = *(void (**)(char *, unint64_t, uint64_t))(v12 + 16);
    while (1)
    {
      v21(v14, *(_QWORD *)(v15 + 48) + v20 * v18, v11);
      sub_23B58F61C(v34, v36, MEMORY[0x24BE316D8]);
      v22 = sub_23B6018EC();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v11);
      if ((v22 & 1) != 0)
        break;
      v18 = (v18 + 1) & v19;
      if (((*(_QWORD *)(v15 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v23 = 1;
        a6 = v32;
        v12 = v35;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(a6, v23, 1, v11);
      }
    }
    swift_bridgeObjectRelease();
    v24 = v30;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v26 = *v24;
    v37 = *v24;
    *v24 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_23B5B7828(v36, v31);
      v26 = v37;
    }
    v12 = v35;
    a6 = v32;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v35 + 32))(v32, *(_QWORD *)(v26 + 48) + v20 * v18, v11);
    sub_23B5B8B24(v18, v36, v29);
    *v24 = v37;
    swift_bridgeObjectRelease();
    v23 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v23 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(a6, v23, 1, v11);
}

uint64_t sub_23B5B6014(uint64_t a1, uint64_t *a2, uint64_t *a3, unint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, unint64_t, uint64_t);
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t *v42;
  unint64_t *v43;

  v42 = a2;
  v43 = a4;
  v6 = v4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v41 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v11 = sub_23B601C28();
  v12 = v11;
  if (*(_QWORD *)(v10 + 16))
  {
    v13 = 1 << *(_BYTE *)(v10 + 32);
    v14 = *(_QWORD *)(v10 + 56);
    v40 = (_QWORD *)(v10 + 56);
    if (v13 < 64)
      v15 = ~(-1 << v13);
    else
      v15 = -1;
    v16 = v15 & v14;
    v38 = v4;
    v39 = (unint64_t)(v13 + 63) >> 6;
    v17 = v11 + 56;
    result = swift_retain();
    v19 = 0;
    while (1)
    {
      if (v16)
      {
        v21 = __clz(__rbit64(v16));
        v16 &= v16 - 1;
        v22 = v21 | (v19 << 6);
      }
      else
      {
        v23 = v19 + 1;
        if (__OFADD__(v19, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v23 >= v39)
          goto LABEL_33;
        v24 = v40[v23];
        ++v19;
        if (!v24)
        {
          v19 = v23 + 1;
          if (v23 + 1 >= v39)
            goto LABEL_33;
          v24 = v40[v19];
          if (!v24)
          {
            v19 = v23 + 2;
            if (v23 + 2 >= v39)
              goto LABEL_33;
            v24 = v40[v19];
            if (!v24)
            {
              v25 = v23 + 3;
              if (v25 >= v39)
              {
LABEL_33:
                swift_release();
                v6 = v38;
                v37 = 1 << *(_BYTE *)(v10 + 32);
                if (v37 > 63)
                  bzero(v40, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v40 = -1 << v37;
                *(_QWORD *)(v10 + 16) = 0;
                break;
              }
              v24 = v40[v25];
              if (!v24)
              {
                while (1)
                {
                  v19 = v25 + 1;
                  if (__OFADD__(v25, 1))
                    goto LABEL_39;
                  if (v19 >= v39)
                    goto LABEL_33;
                  v24 = v40[v19];
                  ++v25;
                  if (v24)
                    goto LABEL_23;
                }
              }
              v19 = v25;
            }
          }
        }
LABEL_23:
        v16 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v19 << 6);
      }
      v26 = v10;
      v27 = *(_QWORD *)(v10 + 48);
      v28 = *(_QWORD *)(v41 + 72);
      v29 = *(void (**)(char *, unint64_t, uint64_t))(v41 + 32);
      v29(v9, v27 + v28 * v22, v7);
      sub_23B58F61C(v43, v42, MEMORY[0x24BE316D0]);
      result = sub_23B6018C8();
      v30 = -1 << *(_BYTE *)(v12 + 32);
      v31 = result & ~v30;
      v32 = v31 >> 6;
      if (((-1 << v31) & ~*(_QWORD *)(v17 + 8 * (v31 >> 6))) != 0)
      {
        v20 = __clz(__rbit64((-1 << v31) & ~*(_QWORD *)(v17 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v33 = 0;
        v34 = (unint64_t)(63 - v30) >> 6;
        do
        {
          if (++v32 == v34 && (v33 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v35 = v32 == v34;
          if (v32 == v34)
            v32 = 0;
          v33 |= v35;
          v36 = *(_QWORD *)(v17 + 8 * v32);
        }
        while (v36 == -1);
        v20 = __clz(__rbit64(~v36)) + (v32 << 6);
      }
      *(_QWORD *)(v17 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v29)(*(_QWORD *)(v12 + 48) + v20 * v28, v9, v7);
      ++*(_QWORD *)(v12 + 16);
      v10 = v26;
    }
  }
  result = swift_release();
  *v6 = v12;
  return result;
}

uint64_t sub_23B5B6378()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A35088);
  result = sub_23B601C28();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (_QWORD *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                v26 = 1 << *(_BYTE *)(v2 + 32);
                if (v26 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v26;
                v1 = v0;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v14);
      sub_23B601E8C();
      sub_23B601E98();
      result = sub_23B601EB0();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_BYTE *)(*(_QWORD *)(v4 + 48) + v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_23B5B662C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A35050);
  v3 = sub_23B601C28();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_23B601E8C();
      sub_23B60194C();
      result = sub_23B601EB0();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_23B5B6908()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, unint64_t, uint64_t);
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  int64_t v34;
  _QWORD *v35;
  uint64_t v36;

  v1 = v0;
  v2 = sub_23B601820();
  v36 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A35048);
  v6 = sub_23B601C28();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v9 = *(_QWORD *)(v5 + 56);
    v35 = (_QWORD *)(v5 + 56);
    if (v8 < 64)
      v10 = ~(-1 << v8);
    else
      v10 = -1;
    v11 = v10 & v9;
    v33 = v0;
    v34 = (unint64_t)(v8 + 63) >> 6;
    v12 = v6 + 56;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v17 = v16 | (v14 << 6);
      }
      else
      {
        v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v34)
          goto LABEL_33;
        v19 = v35[v18];
        ++v14;
        if (!v19)
        {
          v14 = v18 + 1;
          if (v18 + 1 >= v34)
            goto LABEL_33;
          v19 = v35[v14];
          if (!v19)
          {
            v14 = v18 + 2;
            if (v18 + 2 >= v34)
              goto LABEL_33;
            v19 = v35[v14];
            if (!v19)
            {
              v20 = v18 + 3;
              if (v20 >= v34)
              {
LABEL_33:
                swift_release();
                v1 = v33;
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 > 63)
                  bzero(v35, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v35 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
                break;
              }
              v19 = v35[v20];
              if (!v19)
              {
                while (1)
                {
                  v14 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_39;
                  if (v14 >= v34)
                    goto LABEL_33;
                  v19 = v35[v14];
                  ++v20;
                  if (v19)
                    goto LABEL_23;
                }
              }
              v14 = v20;
            }
          }
        }
LABEL_23:
        v11 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      v21 = v5;
      v22 = *(_QWORD *)(v5 + 48);
      v23 = *(_QWORD *)(v36 + 72);
      v24 = *(void (**)(char *, unint64_t, uint64_t))(v36 + 32);
      v24(v4, v22 + v23 * v17, v2);
      sub_23B5884D4(&qword_2542FD220, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
      result = sub_23B6018C8();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v12 + 8 * v27);
        }
        while (v31 == -1);
        v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v24)(*(_QWORD *)(v7 + 48) + v15 * v23, v4, v2);
      ++*(_QWORD *)(v7 + 16);
      v5 = v21;
    }
  }
  result = swift_release();
  *v1 = v7;
  return result;
}

uint64_t sub_23B5B6C74(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, unint64_t, uint64_t);
  char v39;
  int64_t v40;
  int64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t *v50;
  char *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;

  v48 = a2;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34AE0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1E8);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v14);
  v56 = (char *)&v47 - v18;
  v19 = *(_QWORD *)(a3 + 16);
  v20 = (a4 >> 3) & 0x1FFFFFFFFFFFFFF8;
  v21 = *(unint64_t *)((char *)a1 + v20) & ((-1 << a4) - 1);
  v50 = a1;
  v51 = v11;
  *(unint64_t *)((char *)a1 + v20) = v21;
  v22 = v19 - 1;
  v54 = a3 + 56;
  v55 = a3;
  v52 = a5;
  while (2)
  {
    v49 = v22;
    do
    {
      while (1)
      {
        v25 = *a5;
        v24 = a5[1];
        v27 = a5[2];
        v26 = a5[3];
        v28 = a5[4];
        v53 = v27;
        if (v28)
        {
          v29 = (v28 - 1) & v28;
          v30 = __clz(__rbit64(v28)) | (v26 << 6);
LABEL_7:
          (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v11, *(_QWORD *)(v25 + 48) + *(_QWORD *)(v13 + 72) * v30, v12);
          v31 = 0;
          goto LABEL_8;
        }
        v40 = v26 + 1;
        if (__OFADD__(v26, 1))
        {
          __break(1u);
          goto LABEL_42;
        }
        v41 = (unint64_t)(v27 + 64) >> 6;
        if (v40 >= v41)
        {
          v29 = 0;
          v31 = 1;
          goto LABEL_8;
        }
        v42 = *(_QWORD *)(v24 + 8 * v40);
        if (v42)
          goto LABEL_17;
        if (v26 + 2 >= v41)
          goto LABEL_34;
        v42 = *(_QWORD *)(v24 + 8 * (v26 + 2));
        if (v42)
        {
          v40 = v26 + 2;
LABEL_17:
          v29 = (v42 - 1) & v42;
          v30 = __clz(__rbit64(v42)) + (v40 << 6);
          v26 = v40;
          goto LABEL_7;
        }
        if (v26 + 3 >= v41)
        {
          v29 = 0;
          v31 = 1;
          v26 += 2;
          goto LABEL_8;
        }
        v42 = *(_QWORD *)(v24 + 8 * (v26 + 3));
        if (v42)
        {
          v40 = v26 + 3;
          goto LABEL_17;
        }
        v40 = v26 + 4;
        if (v26 + 4 < v41)
        {
          v42 = *(_QWORD *)(v24 + 8 * v40);
          if (v42)
            goto LABEL_17;
          v40 = v41 - 1;
          v45 = v26 + 5;
          while (v41 != v45)
          {
            v42 = *(_QWORD *)(v24 + 8 * v45++);
            if (v42)
            {
              v40 = v45 - 1;
              goto LABEL_17;
            }
          }
LABEL_34:
          v29 = 0;
          v31 = 1;
          v26 = v40;
          goto LABEL_8;
        }
        v29 = 0;
        v31 = 1;
        v26 += 3;
LABEL_8:
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, v31, 1, v12);
        *a5 = v25;
        a5[1] = v24;
        a5[2] = v53;
        a5[3] = v26;
        a5[4] = v29;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
        {
          sub_23B587ED4((uint64_t)v11, &qword_256A34AE0);
          v46 = v55;
          swift_retain();
          return sub_23B5B7534(v50, v48, v49, v46, (uint64_t *)&unk_2542FD1E8, &qword_256A350A0, &qword_256A34590);
        }
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v56, v11, v12);
        v32 = v55;
        sub_23B58F61C(&qword_256A34590, (uint64_t *)&unk_2542FD1E8, MEMORY[0x24BE316D0]);
        v33 = sub_23B6018C8();
        v34 = -1 << *(_BYTE *)(v32 + 32);
        v35 = v33 & ~v34;
        if (((*(_QWORD *)(v54 + ((v35 >> 3) & 0xFFFFFFFFFFFFF8)) >> v35) & 1) != 0)
          break;
        v23 = *(uint64_t (**)(char *, uint64_t))(v13 + 8);
LABEL_4:
        result = v23(v56, v12);
        v11 = v51;
        a5 = v52;
      }
      v36 = ~v34;
      v37 = *(_QWORD *)(v13 + 72);
      v38 = *(void (**)(char *, unint64_t, uint64_t))(v13 + 16);
      while (1)
      {
        v38(v16, *(_QWORD *)(v55 + 48) + v37 * v35, v12);
        sub_23B58F61C(&qword_256A34680, (uint64_t *)&unk_2542FD1E8, MEMORY[0x24BE316D8]);
        v39 = sub_23B6018EC();
        v23 = *(uint64_t (**)(char *, uint64_t))(v13 + 8);
        v23(v16, v12);
        if ((v39 & 1) != 0)
          break;
        v35 = (v35 + 1) & v36;
        if (((*(_QWORD *)(v54 + ((v35 >> 3) & 0xFFFFFFFFFFFFF8)) >> v35) & 1) == 0)
          goto LABEL_4;
      }
      result = v23(v56, v12);
      v43 = (v35 >> 3) & 0x1FFFFFFFFFFFFFF8;
      v11 = v51;
      v44 = *(unint64_t *)((char *)v50 + v43);
      *(unint64_t *)((char *)v50 + v43) = v44 & ~(1 << v35);
      a5 = v52;
    }
    while ((v44 & (1 << v35)) == 0);
    v22 = v49 - 1;
    if (__OFSUB__(v49, 1))
    {
LABEL_42:
      __break(1u);
      return result;
    }
    if (v49 != 1)
      continue;
    return MEMORY[0x24BEE4B08];
  }
}

uint64_t sub_23B5B70D4(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, unint64_t, uint64_t);
  char v39;
  int64_t v40;
  int64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t *v50;
  char *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;

  v48 = a2;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34678);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1F8);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v14);
  v56 = (char *)&v47 - v18;
  v19 = *(_QWORD *)(a3 + 16);
  v20 = (a4 >> 3) & 0x1FFFFFFFFFFFFFF8;
  v21 = *(unint64_t *)((char *)a1 + v20) & ((-1 << a4) - 1);
  v50 = a1;
  v51 = v11;
  *(unint64_t *)((char *)a1 + v20) = v21;
  v22 = v19 - 1;
  v54 = a3 + 56;
  v55 = a3;
  v52 = a5;
  while (2)
  {
    v49 = v22;
    do
    {
      while (1)
      {
        v25 = *a5;
        v24 = a5[1];
        v27 = a5[2];
        v26 = a5[3];
        v28 = a5[4];
        v53 = v27;
        if (v28)
        {
          v29 = (v28 - 1) & v28;
          v30 = __clz(__rbit64(v28)) | (v26 << 6);
LABEL_7:
          (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v11, *(_QWORD *)(v25 + 48) + *(_QWORD *)(v13 + 72) * v30, v12);
          v31 = 0;
          goto LABEL_8;
        }
        v40 = v26 + 1;
        if (__OFADD__(v26, 1))
        {
          __break(1u);
          goto LABEL_42;
        }
        v41 = (unint64_t)(v27 + 64) >> 6;
        if (v40 >= v41)
        {
          v29 = 0;
          v31 = 1;
          goto LABEL_8;
        }
        v42 = *(_QWORD *)(v24 + 8 * v40);
        if (v42)
          goto LABEL_17;
        if (v26 + 2 >= v41)
          goto LABEL_34;
        v42 = *(_QWORD *)(v24 + 8 * (v26 + 2));
        if (v42)
        {
          v40 = v26 + 2;
LABEL_17:
          v29 = (v42 - 1) & v42;
          v30 = __clz(__rbit64(v42)) + (v40 << 6);
          v26 = v40;
          goto LABEL_7;
        }
        if (v26 + 3 >= v41)
        {
          v29 = 0;
          v31 = 1;
          v26 += 2;
          goto LABEL_8;
        }
        v42 = *(_QWORD *)(v24 + 8 * (v26 + 3));
        if (v42)
        {
          v40 = v26 + 3;
          goto LABEL_17;
        }
        v40 = v26 + 4;
        if (v26 + 4 < v41)
        {
          v42 = *(_QWORD *)(v24 + 8 * v40);
          if (v42)
            goto LABEL_17;
          v40 = v41 - 1;
          v45 = v26 + 5;
          while (v41 != v45)
          {
            v42 = *(_QWORD *)(v24 + 8 * v45++);
            if (v42)
            {
              v40 = v45 - 1;
              goto LABEL_17;
            }
          }
LABEL_34:
          v29 = 0;
          v31 = 1;
          v26 = v40;
          goto LABEL_8;
        }
        v29 = 0;
        v31 = 1;
        v26 += 3;
LABEL_8:
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, v31, 1, v12);
        *a5 = v25;
        a5[1] = v24;
        a5[2] = v53;
        a5[3] = v26;
        a5[4] = v29;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
        {
          sub_23B587ED4((uint64_t)v11, &qword_256A34678);
          v46 = v55;
          swift_retain();
          return sub_23B5B7534(v50, v48, v49, v46, (uint64_t *)&unk_2542FD1F8, &qword_256A35090, &qword_256A34660);
        }
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v56, v11, v12);
        v32 = v55;
        sub_23B58F61C(&qword_256A34660, (uint64_t *)&unk_2542FD1F8, MEMORY[0x24BE316D0]);
        v33 = sub_23B6018C8();
        v34 = -1 << *(_BYTE *)(v32 + 32);
        v35 = v33 & ~v34;
        if (((*(_QWORD *)(v54 + ((v35 >> 3) & 0xFFFFFFFFFFFFF8)) >> v35) & 1) != 0)
          break;
        v23 = *(uint64_t (**)(char *, uint64_t))(v13 + 8);
LABEL_4:
        result = v23(v56, v12);
        v11 = v51;
        a5 = v52;
      }
      v36 = ~v34;
      v37 = *(_QWORD *)(v13 + 72);
      v38 = *(void (**)(char *, unint64_t, uint64_t))(v13 + 16);
      while (1)
      {
        v38(v16, *(_QWORD *)(v55 + 48) + v37 * v35, v12);
        sub_23B58F61C(&qword_256A34668, (uint64_t *)&unk_2542FD1F8, MEMORY[0x24BE316D8]);
        v39 = sub_23B6018EC();
        v23 = *(uint64_t (**)(char *, uint64_t))(v13 + 8);
        v23(v16, v12);
        if ((v39 & 1) != 0)
          break;
        v35 = (v35 + 1) & v36;
        if (((*(_QWORD *)(v54 + ((v35 >> 3) & 0xFFFFFFFFFFFFF8)) >> v35) & 1) == 0)
          goto LABEL_4;
      }
      result = v23(v56, v12);
      v43 = (v35 >> 3) & 0x1FFFFFFFFFFFFFF8;
      v11 = v51;
      v44 = *(unint64_t *)((char *)v50 + v43);
      *(unint64_t *)((char *)v50 + v43) = v44 & ~(1 << v35);
      a5 = v52;
    }
    while ((v44 & (1 << v35)) == 0);
    v22 = v49 - 1;
    if (__OFSUB__(v49, 1))
    {
LABEL_42:
      __break(1u);
      return result;
    }
    if (v49 != 1)
      continue;
    return MEMORY[0x24BEE4B08];
  }
}

uint64_t sub_23B5B7534(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t *a6, unint64_t *a7)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t result;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v37;
  unint64_t *v38;
  uint64_t v39;
  uint64_t *v40;
  unint64_t *v41;
  uint64_t v42;

  v40 = a5;
  v41 = a7;
  v12 = __swift_instantiateConcreteTypeFromMangledName(a5);
  v42 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return MEMORY[0x24BEE4B08];
  }
  if (*(_QWORD *)(a4 + 16) == a3)
    return a4;
  __swift_instantiateConcreteTypeFromMangledName(a6);
  result = sub_23B601C34();
  v15 = result;
  v38 = a1;
  v39 = a2;
  if (a2 < 1)
    v17 = 0;
  else
    v17 = *a1;
  v18 = 0;
  v19 = result + 56;
  while (1)
  {
    if (v17)
    {
      v20 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v21 = v20 | (v18 << 6);
    }
    else
    {
      v22 = v18 + 1;
      if (__OFADD__(v18, 1))
        goto LABEL_40;
      if (v22 >= v39)
      {
LABEL_37:
        swift_release();
        return v15;
      }
      v23 = v38[v22];
      ++v18;
      if (!v23)
      {
        v18 = v22 + 1;
        if (v22 + 1 >= v39)
          goto LABEL_37;
        v23 = v38[v18];
        if (!v23)
        {
          v18 = v22 + 2;
          if (v22 + 2 >= v39)
            goto LABEL_37;
          v23 = v38[v18];
          if (!v23)
          {
            v24 = v22 + 3;
            if (v24 >= v39)
              goto LABEL_37;
            v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                v18 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_41;
                if (v18 >= v39)
                  goto LABEL_37;
                v23 = v38[v18];
                ++v24;
                if (v23)
                  goto LABEL_24;
              }
            }
            v18 = v24;
          }
        }
      }
LABEL_24:
      v17 = (v23 - 1) & v23;
      v21 = __clz(__rbit64(v23)) + (v18 << 6);
    }
    v25 = a4;
    v26 = *(_QWORD *)(a4 + 48);
    v27 = *(_QWORD *)(v42 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v42 + 16))(v14, v26 + v27 * v21, v12);
    sub_23B58F61C(v41, v40, MEMORY[0x24BE316D0]);
    result = sub_23B6018C8();
    v28 = -1 << *(_BYTE *)(v15 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v19 + 8 * (v29 >> 6))) != 0)
    {
      v31 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v19 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v34 = v30 == v33;
        if (v30 == v33)
          v30 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v19 + 8 * v30);
      }
      while (v35 == -1);
      v31 = __clz(__rbit64(~v35)) + (v30 << 6);
    }
    *(_QWORD *)(v19 + ((v31 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v31;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v42 + 32))(*(_QWORD *)(v15 + 48) + v31 * v27, v14, v12);
    ++*(_QWORD *)(v15 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    a4 = v25;
    if (!a3)
      goto LABEL_37;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

void *sub_23B5B7828(uint64_t *a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *result;
  uint64_t v13;
  unint64_t v14;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t *v28;

  v4 = v2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(a1);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v9 = *v2;
  v10 = sub_23B601C1C();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
  {
    result = (void *)swift_release();
LABEL_30:
    *v4 = v11;
    return result;
  }
  v28 = v4;
  result = (void *)(v10 + 56);
  v13 = v9 + 56;
  v14 = (unint64_t)((1 << *(_BYTE *)(v11 + 32)) + 63) >> 6;
  if (v11 != v9 || (unint64_t)result >= v9 + 56 + 8 * v14)
    result = memmove(result, (const void *)(v9 + 56), 8 * v14);
  v16 = 0;
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v9 + 16);
  v17 = 1 << *(_BYTE *)(v9 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & *(_QWORD *)(v9 + 56);
  v20 = (unint64_t)(v17 + 63) >> 6;
  while (1)
  {
    if (v19)
    {
      v21 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v22 = v21 | (v16 << 6);
      goto LABEL_12;
    }
    v24 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v24 >= v20)
      goto LABEL_28;
    v25 = *(_QWORD *)(v13 + 8 * v24);
    ++v16;
    if (!v25)
    {
      v16 = v24 + 1;
      if (v24 + 1 >= v20)
        goto LABEL_28;
      v25 = *(_QWORD *)(v13 + 8 * v16);
      if (!v25)
      {
        v16 = v24 + 2;
        if (v24 + 2 >= v20)
          goto LABEL_28;
        v25 = *(_QWORD *)(v13 + 8 * v16);
        if (!v25)
          break;
      }
    }
LABEL_27:
    v19 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v16 << 6);
LABEL_12:
    v23 = *(_QWORD *)(v6 + 72) * v22;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, *(_QWORD *)(v9 + 48) + v23, v5);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v23, v8, v5);
  }
  v26 = v24 + 3;
  if (v26 >= v20)
  {
LABEL_28:
    result = (void *)swift_release();
    v4 = v28;
    goto LABEL_30;
  }
  v25 = *(_QWORD *)(v13 + 8 * v26);
  if (v25)
  {
    v16 = v26;
    goto LABEL_27;
  }
  while (1)
  {
    v16 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v16 >= v20)
      goto LABEL_28;
    v25 = *(_QWORD *)(v13 + 8 * v16);
    ++v26;
    if (v25)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
  return result;
}

void *sub_23B5B7A48()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A35088);
  v2 = *v0;
  v3 = sub_23B601C1C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_23B5B7BD8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A35050);
  v2 = *v0;
  v3 = sub_23B601C1C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_23B5B7D88()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  uint64_t v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;

  v1 = v0;
  v2 = sub_23B601820();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A35048);
  v6 = *v0;
  v7 = sub_23B601C1C();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_30:
    *v1 = v8;
    return result;
  }
  v25 = v1;
  result = (void *)(v7 + 56);
  v10 = v6 + 56;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v11)
    result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v6 + 56);
  v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v21 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v21);
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v17)
        goto LABEL_28;
      v22 = *(_QWORD *)(v10 + 8 * v13);
      if (!v22)
      {
        v13 = v21 + 2;
        if (v21 + 2 >= v17)
          goto LABEL_28;
        v22 = *(_QWORD *)(v10 + 8 * v13);
        if (!v22)
          break;
      }
    }
LABEL_27:
    v16 = (v22 - 1) & v22;
    v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v3 + 72) * v19;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v20, v2);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v20, v5, v2);
  }
  v23 = v21 + 3;
  if (v23 >= v17)
  {
LABEL_28:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_30;
  }
  v22 = *(_QWORD *)(v10 + 8 * v23);
  if (v22)
  {
    v13 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_23B5B7FAC(uint64_t a1, uint64_t *a2, uint64_t *a3, unint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  int64_t v38;
  uint64_t *v39;
  unint64_t *v40;

  v39 = a2;
  v40 = a4;
  v6 = v4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v12 = sub_23B601C28();
  v13 = v12;
  if (!*(_QWORD *)(v11 + 16))
  {
    result = swift_release();
LABEL_35:
    *v6 = v13;
    return result;
  }
  v14 = 1 << *(_BYTE *)(v11 + 32);
  v15 = *(_QWORD *)(v11 + 56);
  v36 = v4;
  v37 = v11 + 56;
  if (v14 < 64)
    v16 = ~(-1 << v14);
  else
    v16 = -1;
  v17 = v16 & v15;
  v38 = (unint64_t)(v14 + 63) >> 6;
  v18 = v12 + 56;
  result = swift_retain();
  v20 = 0;
  while (1)
  {
    if (v17)
    {
      v22 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v23 = v22 | (v20 << 6);
      goto LABEL_24;
    }
    v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v24 >= v38)
      goto LABEL_33;
    v25 = *(_QWORD *)(v37 + 8 * v24);
    ++v20;
    if (!v25)
    {
      v20 = v24 + 1;
      if (v24 + 1 >= v38)
        goto LABEL_33;
      v25 = *(_QWORD *)(v37 + 8 * v20);
      if (!v25)
      {
        v20 = v24 + 2;
        if (v24 + 2 >= v38)
          goto LABEL_33;
        v25 = *(_QWORD *)(v37 + 8 * v20);
        if (!v25)
          break;
      }
    }
LABEL_23:
    v17 = (v25 - 1) & v25;
    v23 = __clz(__rbit64(v25)) + (v20 << 6);
LABEL_24:
    v27 = *(_QWORD *)(v8 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v10, *(_QWORD *)(v11 + 48) + v27 * v23, v7);
    sub_23B58F61C(v40, v39, MEMORY[0x24BE316D0]);
    result = sub_23B6018C8();
    v28 = -1 << *(_BYTE *)(v13 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v18 + 8 * (v29 >> 6))) != 0)
    {
      v21 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v18 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v18 + 8 * v30);
      }
      while (v34 == -1);
      v21 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v8 + 32))(*(_QWORD *)(v13 + 48) + v21 * v27, v10, v7);
    ++*(_QWORD *)(v13 + 16);
  }
  v26 = v24 + 3;
  if (v26 >= v38)
  {
LABEL_33:
    result = swift_release_n();
    v6 = v36;
    goto LABEL_35;
  }
  v25 = *(_QWORD *)(v37 + 8 * v26);
  if (v25)
  {
    v20 = v26;
    goto LABEL_23;
  }
  while (1)
  {
    v20 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v20 >= v38)
      goto LABEL_33;
    v25 = *(_QWORD *)(v37 + 8 * v20);
    ++v26;
    if (v25)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_23B5B82CC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A35088);
  result = sub_23B601C28();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v14);
    sub_23B601E8C();
    sub_23B601E98();
    result = sub_23B601EB0();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_23B5B8550()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A35050);
  v3 = sub_23B601C28();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_23B601E8C();
    swift_bridgeObjectRetain();
    sub_23B60194C();
    result = sub_23B601EB0();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_23B5B87FC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;

  v1 = v0;
  v2 = sub_23B601820();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A35048);
  v7 = sub_23B601C28();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v8;
    return result;
  }
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v10 = *(_QWORD *)(v6 + 56);
  v31 = v0;
  v32 = v6 + 56;
  if (v9 < 64)
    v11 = ~(-1 << v9);
  else
    v11 = -1;
  v12 = v11 & v10;
  v33 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 56;
  result = swift_retain();
  v15 = 0;
  while (1)
  {
    if (v12)
    {
      v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v18 = v17 | (v15 << 6);
      goto LABEL_24;
    }
    v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v19 >= v33)
      goto LABEL_33;
    v20 = *(_QWORD *)(v32 + 8 * v19);
    ++v15;
    if (!v20)
    {
      v15 = v19 + 1;
      if (v19 + 1 >= v33)
        goto LABEL_33;
      v20 = *(_QWORD *)(v32 + 8 * v15);
      if (!v20)
      {
        v15 = v19 + 2;
        if (v19 + 2 >= v33)
          goto LABEL_33;
        v20 = *(_QWORD *)(v32 + 8 * v15);
        if (!v20)
          break;
      }
    }
LABEL_23:
    v12 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_24:
    v22 = *(_QWORD *)(v3 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v22 * v18, v2);
    sub_23B5884D4(&qword_2542FD220, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_23B6018C8();
    v23 = -1 << *(_BYTE *)(v8 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6))) != 0)
    {
      v16 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v13 + 8 * v25);
      }
      while (v29 == -1);
      v16 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v16 * v22, v5, v2);
    ++*(_QWORD *)(v8 + 16);
  }
  v21 = v19 + 3;
  if (v21 >= v33)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v31;
    goto LABEL_35;
  }
  v20 = *(_QWORD *)(v32 + 8 * v21);
  if (v20)
  {
    v15 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    v15 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v15 >= v33)
      goto LABEL_33;
    v20 = *(_QWORD *)(v32 + 8 * v15);
    ++v21;
    if (v20)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_23B5B8B24(int64_t a1, uint64_t *a2, unint64_t *a3)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t *v27;
  void (*v28)(char *, unint64_t, uint64_t);
  unint64_t v29;
  uint64_t *v30;
  unint64_t *v31;
  uint64_t v32;

  v30 = a2;
  v31 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v32 = *(_QWORD *)(v5 - 8);
  result = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v3;
  v10 = *v3 + 56;
  v11 = -1 << *(_BYTE *)(*v3 + 32);
  v12 = (a1 + 1) & ~v11;
  if (((1 << v12) & *(_QWORD *)(v10 + 8 * (v12 >> 6))) != 0)
  {
    v27 = v3;
    v13 = ~v11;
    swift_retain();
    v14 = sub_23B601BF8();
    if ((*(_QWORD *)(v10 + 8 * (v12 >> 6)) & (1 << v12)) != 0)
    {
      v29 = (v14 + 1) & v13;
      v15 = *(_QWORD *)(v32 + 72);
      v28 = *(void (**)(char *, unint64_t, uint64_t))(v32 + 16);
      do
      {
        v16 = v15;
        v17 = v15 * v12;
        v28(v8, *(_QWORD *)(v9 + 48) + v15 * v12, v5);
        sub_23B58F61C(v31, v30, MEMORY[0x24BE316D0]);
        v18 = sub_23B6018C8();
        (*(void (**)(char *, uint64_t))(v32 + 8))(v8, v5);
        v19 = v18 & v13;
        if (a1 >= (uint64_t)v29)
        {
          if (v19 >= v29 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v15 = v16;
            v22 = v16 * a1;
            if (v16 * a1 < v17
              || *(_QWORD *)(v9 + 48) + v16 * a1 >= (unint64_t)(*(_QWORD *)(v9 + 48) + v17 + v16))
            {
              swift_arrayInitWithTakeFrontToBack();
              a1 = v12;
            }
            else
            {
              a1 = v12;
              if (v22 != v17)
              {
                swift_arrayInitWithTakeBackToFront();
                a1 = v12;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v29 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v15 = v16;
LABEL_5:
        v12 = (v12 + 1) & v13;
      }
      while (((*(_QWORD *)(v10 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0);
    }
    *(_QWORD *)(v10 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    result = swift_release();
    v3 = v27;
  }
  else
  {
    *(_QWORD *)(v10 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  v23 = *v3;
  v24 = *(_QWORD *)(*v3 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v23 + 16) = v26;
    ++*(_DWORD *)(v23 + 36);
  }
  return result;
}

uint64_t sub_23B5B8DA8(uint64_t a1, uint64_t a2, char a3)
{
  return sub_23B5B90FC(a1, a2, a3, (uint64_t *)&unk_2542FD1E8, (uint64_t (*)(uint64_t))sub_23B58E89C, &qword_256A350D0, &qword_256A34590);
}

uint64_t sub_23B5B8DCC(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t v25;

  v4 = (_QWORD **)v3;
  v8 = sub_23B601820();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_23B58ED1C(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];
      result = swift_release();
      *(_QWORD *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_23B5B4C0C();
    goto LABEL_7;
  }
  sub_23B5B2D84(v17, a3 & 1);
  v23 = sub_23B58ED1C(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    result = sub_23B601E2C();
    __break(1u);
    return result;
  }
  v14 = v23;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_23B5B4970(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_23B5B8F28(uint64_t a1, uint64_t a2, char a3)
{
  return sub_23B5B8F64(a1, a2, a3, &qword_256A35028);
}

uint64_t sub_23B5B8F34(uint64_t a1, uint64_t a2, char a3)
{
  return sub_23B5B90FC(a1, a2, a3, (uint64_t *)&unk_2542FD1F8, (uint64_t (*)(uint64_t))sub_23B58EDD4, &qword_256A350C0, &qword_256A34660);
}

uint64_t sub_23B5B8F58(uint64_t a1, uint64_t a2, char a3)
{
  return sub_23B5B8F64(a1, a2, a3, &qword_256A35058);
}

uint64_t sub_23B5B8F64(uint64_t a1, uint64_t a2, char a3, uint64_t *a4)
{
  _QWORD *v4;
  _QWORD **v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t result;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;

  v6 = (_QWORD **)v4;
  v27 = a1;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (_QWORD *)*v4;
  v15 = sub_23B58ED88(a2);
  v16 = v13[2];
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_14;
  }
  v19 = v14;
  v20 = v13[3];
  if (v20 >= v18 && (a3 & 1) != 0)
  {
LABEL_7:
    v21 = *v6;
    if ((v19 & 1) != 0)
    {
LABEL_8:
      v22 = v21[7];
      result = swift_release();
      *(_QWORD *)(v22 + 8 * v15) = v27;
      return result;
    }
    goto LABEL_11;
  }
  if (v20 >= v18 && (a3 & 1) == 0)
  {
    sub_23B5B504C(a4);
    goto LABEL_7;
  }
  sub_23B5B37C4(v18, a3 & 1, a4);
  v24 = sub_23B58ED88(a2);
  if ((v19 & 1) != (v25 & 1))
  {
LABEL_14:
    result = sub_23B601E2C();
    __break(1u);
    return result;
  }
  v15 = v24;
  v21 = *v6;
  if ((v19 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, v9);
  return sub_23B5B4A08(v15, (uint64_t)v12, v27, v21);
}

uint64_t sub_23B5B90D8(uint64_t a1, uint64_t a2, char a3)
{
  return sub_23B5B90FC(a1, a2, a3, (uint64_t *)&unk_2542FD1F8, (uint64_t (*)(uint64_t))sub_23B58EDD4, &qword_256A35098, &qword_256A34660);
}

uint64_t sub_23B5B90FC(uint64_t a1, uint64_t a2, char a3, uint64_t *a4, uint64_t (*a5)(uint64_t), uint64_t *a6, unint64_t *a7)
{
  _QWORD *v7;
  _QWORD **v10;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  char v28;
  unint64_t *v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;

  v29 = a7;
  v31 = a6;
  v32 = a1;
  v10 = (_QWORD **)v7;
  v30 = __swift_instantiateConcreteTypeFromMangledName(a4);
  v13 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (_QWORD *)*v7;
  v18 = a5(a2);
  v19 = v16[2];
  v20 = (v17 & 1) == 0;
  v21 = v19 + v20;
  if (__OFADD__(v19, v20))
  {
    __break(1u);
    goto LABEL_14;
  }
  v22 = v17;
  v23 = v16[3];
  if (v23 >= v21 && (a3 & 1) != 0)
  {
LABEL_7:
    v24 = *v10;
    if ((v22 & 1) != 0)
    {
LABEL_8:
      v25 = v24[7];
      result = swift_release();
      *(_QWORD *)(v25 + 8 * v18) = v32;
      return result;
    }
    goto LABEL_11;
  }
  if (v23 >= v21 && (a3 & 1) == 0)
  {
    sub_23B5B5294(a4, v31);
    goto LABEL_7;
  }
  sub_23B5B3430(v21, a3 & 1, a4, v31, v29);
  v27 = a5(a2);
  if ((v22 & 1) != (v28 & 1))
  {
LABEL_14:
    result = sub_23B601E2C();
    __break(1u);
    return result;
  }
  v18 = v27;
  v24 = *v10;
  if ((v22 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a2, v30);
  return sub_23B5B4AA4(v18, (uint64_t)v15, v32, v24, a4);
}

uint64_t sub_23B5B9284(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  unint64_t v24;
  char v25;
  uint64_t v26;

  v4 = (_QWORD **)v3;
  v8 = sub_23B601820();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_23B58ED1C(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = v20[7];
        v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD580);
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v14, a1, v22);
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_23B5B5668();
      goto LABEL_7;
    }
    sub_23B5B3E44(v17, a3 & 1);
    v24 = sub_23B58ED1C(a2);
    if ((v18 & 1) == (v25 & 1))
    {
      v14 = v24;
      v20 = *v4;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_23B5B4B3C(v14, (uint64_t)v11, a1, v20);
    }
  }
  result = sub_23B601E2C();
  __break(1u);
  return result;
}

uint64_t sub_23B5B9410(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t v25;

  v4 = (_QWORD **)v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_23B58ED88(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_23B5B594C();
    goto LABEL_7;
  }
  sub_23B5B4240(v17, a3 & 1);
  v23 = sub_23B58ED88(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    result = sub_23B601E2C();
    __break(1u);
    return result;
  }
  v14 = v23;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_23B5B4A08(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_23B5B9570(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t v25;

  v4 = (_QWORD **)v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_23B58ED88(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];
      result = swift_release();
      *(_QWORD *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_23B5B5B84();
    goto LABEL_7;
  }
  sub_23B5B45D8(v17, a3 & 1);
  v23 = sub_23B58ED88(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    result = sub_23B601E2C();
    __break(1u);
    return result;
  }
  v14 = v23;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_23B5B4A08(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_23B5B96D0(uint64_t a1, unint64_t a2, char a3, uint64_t *a4, uint64_t *a5, unint64_t *a6, unint64_t *a7)
{
  uint64_t *v7;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, unint64_t, uint64_t);
  char v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;
  unint64_t *v32;
  uint64_t v33;
  uint64_t v34;

  v32 = a7;
  v34 = a1;
  v13 = __swift_instantiateConcreteTypeFromMangledName(a4);
  v33 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(*v7 + 16);
  v17 = *(_QWORD *)(*v7 + 24);
  v31 = v7;
  if (v17 > v16 && (a3 & 1) != 0)
    goto LABEL_12;
  v18 = v16 + 1;
  if ((a3 & 1) != 0)
  {
    sub_23B5B6014(v18, a4, a5, a6);
  }
  else
  {
    if (v17 > v16)
    {
      sub_23B5B7828(a4, a5);
      goto LABEL_12;
    }
    sub_23B5B7FAC(v18, a4, a5, a6);
  }
  v19 = *v7;
  sub_23B58F61C(a6, a4, MEMORY[0x24BE316D0]);
  v20 = sub_23B6018C8();
  v21 = -1 << *(_BYTE *)(v19 + 32);
  a2 = v20 & ~v21;
  if (((*(_QWORD *)(v19 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v22 = ~v21;
    v23 = *(_QWORD *)(v33 + 72);
    v24 = *(void (**)(char *, unint64_t, uint64_t))(v33 + 16);
    do
    {
      v24(v15, *(_QWORD *)(v19 + 48) + v23 * a2, v13);
      sub_23B58F61C(v32, a4, MEMORY[0x24BE316D8]);
      v25 = sub_23B6018EC();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v15, v13);
      if ((v25 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v22;
    }
    while (((*(_QWORD *)(v19 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v26 = *v31;
  *(_QWORD *)(v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v33 + 32))(*(_QWORD *)(v26 + 48) + *(_QWORD *)(v33 + 72) * a2, v34, v13);
  v28 = *(_QWORD *)(v26 + 16);
  v29 = __OFADD__(v28, 1);
  v30 = v28 + 1;
  if (!v29)
  {
    *(_QWORD *)(v26 + 16) = v30;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_23B601E20();
  __break(1u);
  return result;
}

uint64_t sub_23B5B9904(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  char v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_23B5B6378();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_23B5B7A48();
      goto LABEL_14;
    }
    sub_23B5B82CC();
  }
  v8 = *v3;
  sub_23B601E8C();
  v9 = qword_23B608090[v5];
  sub_23B601E98();
  result = sub_23B601EB0();
  v10 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v10;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v11 = *(_QWORD *)(v8 + 48);
    if (qword_23B608090[*(char *)(v11 + a2)] == v9)
    {
LABEL_13:
      result = sub_23B601E20();
      __break(1u);
    }
    else
    {
      v12 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v12;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (qword_23B608090[*(char *)(v11 + a2)] == v9)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v13 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v13 + 48) + a2) = v5;
  v14 = *(_QWORD *)(v13 + 16);
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
    __break(1u);
  else
    *(_QWORD *)(v13 + 16) = v16;
  return result;
}

uint64_t sub_23B5B9A70(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_23B5B662C();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_23B5B7BD8();
      goto LABEL_22;
    }
    sub_23B5B8550();
  }
  v11 = *v4;
  sub_23B601E8C();
  sub_23B60194C();
  result = sub_23B601EB0();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_23B601DFC(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_23B601E20();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_23B601DFC();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

uint64_t sub_23B5B9C08(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v26 = a1;
  v6 = sub_23B601820();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v25 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_23B5B6908();
  }
  else
  {
    if (v11 > v10)
    {
      sub_23B5B7D88();
      goto LABEL_12;
    }
    sub_23B5B87FC();
  }
  v12 = *v3;
  sub_23B5884D4(&qword_2542FD220, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  v13 = sub_23B6018C8();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v15 = ~v14;
    v16 = *(_QWORD *)(v7 + 72);
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v17(v9, *(_QWORD *)(v12 + 48) + v16 * a2, v6);
      sub_23B5884D4(&qword_256A34630, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v18 = sub_23B6018EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v18 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v15;
    }
    while (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v19 = v26;
  v20 = *v25;
  *(_QWORD *)(*v25 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v20 + 48) + *(_QWORD *)(v7 + 72) * a2, v19, v6);
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (!v23)
  {
    *(_QWORD *)(v20 + 16) = v24;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_23B601E20();
  __break(1u);
  return result;
}

uint64_t sub_23B5B9E0C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23B5B9EB8(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_256A341E0, (uint64_t *)&unk_2542FD1E8);
  *v3 = result;
  return result;
}

uint64_t sub_23B5B9E38(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23B5B9EB8(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_256A341D0, (uint64_t *)&unk_2542FD1F8);
  *v3 = result;
  return result;
}

uint64_t sub_23B5B9E64(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23B5BA098(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_23B5B9E80(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23B5BA23C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_23B5B9E9C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23B5BA41C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23B5B9EB8(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_23B601D54();
  __break(1u);
  return result;
}

uint64_t sub_23B5BA098(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A35060);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8)
      memmove(v10 + 4, a4 + 4, 24 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A35068);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_23B601D54();
  __break(1u);
  return result;
}

uint64_t sub_23B5BA23C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A35080);
  v10 = *(_QWORD *)(sub_23B601820() - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1)
    goto LABEL_34;
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(sub_23B601820() - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (char *)v13 + v17;
  v19 = (char *)a4 + v17;
  if ((a1 & 1) != 0)
  {
    if (v13 < a4 || v18 >= &v19[*(_QWORD *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v20 = *(_QWORD *)(v16 + 72) * v8;
  v21 = &v18[v20];
  v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  result = sub_23B601D54();
  __break(1u);
  return result;
}

uint64_t sub_23B5BA41C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A35070);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_23B601D54();
  __break(1u);
  return result;
}

uint64_t sub_23B5BA588(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  void (*v15)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1E8);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v17 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34AE0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a1 + 16);
  sub_23B58F61C(&qword_256A34590, (uint64_t *)&unk_2542FD1E8, MEMORY[0x24BE316D0]);
  v18 = sub_23B601B50();
  if (v12)
  {
    v13 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v17 = *(_QWORD *)(v3 + 72);
    v14 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    while (1)
    {
      v14(v11, v13, v2);
      v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
      v15(v11, 0, 1, v2);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v11, 1, v2) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v11, v2);
      sub_23B5B1404((uint64_t)v8, v6, (uint64_t *)&unk_2542FD1E8, &qword_256A34590, &qword_256A350A0, &qword_256A34680);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      v13 += v17;
      if (!--v12)
        goto LABEL_7;
    }
  }
  else
  {
    v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
LABEL_7:
    v15(v11, 1, 1, v2);
  }
  return v18;
}

uint64_t sub_23B5BA778()
{
  return sub_23B5884D4(qword_256A34E10, (uint64_t (*)(uint64_t))type metadata accessor for MockCharacteristic, (uint64_t)&protocol conformance descriptor for MockCharacteristic);
}

uint64_t sub_23B5BA7A4(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_23B5884D4(&qword_256A34E70, (uint64_t (*)(uint64_t))type metadata accessor for MockService, (uint64_t)&protocol conformance descriptor for MockService);
  result = sub_23B5884D4(&qword_256A34638, (uint64_t (*)(uint64_t))type metadata accessor for MockService, (uint64_t)&protocol conformance descriptor for MockService);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t type metadata accessor for MockService()
{
  uint64_t result;

  result = qword_256A34EB0;
  if (!qword_256A34EB0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23B5BA83C()
{
  return sub_23B5884D4((unint64_t *)&unk_256A34E78, (uint64_t (*)(uint64_t))type metadata accessor for MockService, (uint64_t)&protocol conformance descriptor for MockService);
}

uint64_t sub_23B5BA870()
{
  return type metadata accessor for MockService();
}

void sub_23B5BA878()
{
  unint64_t v0;

  sub_23B58EBC4();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for MockService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MockService.mockBehavior.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of MockService.mockBehavior.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of MockService.mockBehavior.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of MockService.setMockingBehavior(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 264) + *(_QWORD *)(*(_QWORD *)v1 + 264));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23B587844;
  return v6(a1);
}

uint64_t dispatch thunk of MockService.__allocating_init(peripheral:identifier:isPrimary:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v3 + 272) + *(_QWORD *)(v3 + 272));
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_23B58EB10;
  return v10(a1, a2, a3);
}

uint64_t dispatch thunk of MockService.discover(characteristicIdentifiers:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 280) + *(_QWORD *)(*(_QWORD *)v1 + 280));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23B58F8B8;
  return v6(a1);
}

uint64_t dispatch thunk of MockService.subscript.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 288) + *(_QWORD *)(*(_QWORD *)v1 + 288));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23B58F8B8;
  return v6(a1);
}

uint64_t dispatch thunk of MockService.setMockCharacteristics(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t sub_23B5BAB00(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  void (*v15)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1F8);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v17 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34678);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a1 + 16);
  sub_23B58F61C(&qword_256A34660, (uint64_t *)&unk_2542FD1F8, MEMORY[0x24BE316D0]);
  v18 = sub_23B601B50();
  if (v12)
  {
    v13 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v17 = *(_QWORD *)(v3 + 72);
    v14 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    while (1)
    {
      v14(v11, v13, v2);
      v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
      v15(v11, 0, 1, v2);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v11, 1, v2) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v11, v2);
      sub_23B5B1404((uint64_t)v8, v6, (uint64_t *)&unk_2542FD1F8, &qword_256A34660, &qword_256A35090, &qword_256A34668);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      v13 += v17;
      if (!--v12)
        goto LABEL_7;
    }
  }
  else
  {
    v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
LABEL_7:
    v15(v11, 1, 1, v2);
  }
  return v18;
}

uint64_t sub_23B5BACF0(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  unsigned __int8 *v4;
  unsigned int v5;
  char v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  sub_23B5BAFC4();
  result = sub_23B601B50();
  v7 = result;
  if (v2)
  {
    v4 = (unsigned __int8 *)(a1 + 32);
    do
    {
      v5 = *v4++;
      sub_23B5B1684(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_23B5BAD60(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = sub_23B601B50();
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain();
      sub_23B5B17C0(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_23B5BADF4(uint64_t a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;

  v2 = sub_23B601820();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v4 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x24BDAC7A8](v2);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v18 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD228);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 + 16);
  sub_23B5884D4(&qword_2542FD220, v3, MEMORY[0x24BDCEA88]);
  v19 = sub_23B601B50();
  if (v13)
  {
    v14 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v18 = *(_QWORD *)(v4 + 72);
    v15 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    while (1)
    {
      v15(v12, v14, v2);
      v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
      v16(v12, 0, 1, v2);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v12, 1, v2) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v12, v2);
      sub_23B5B196C((uint64_t)v9, v7);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v2);
      v14 += v18;
      if (!--v13)
        goto LABEL_7;
    }
  }
  else
  {
    v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
LABEL_7:
    v16(v12, 1, 1, v2);
  }
  return v19;
}

unint64_t sub_23B5BAFC4()
{
  unint64_t result;

  result = qword_2542FD358;
  if (!qword_2542FD358)
  {
    result = MEMORY[0x23B868978](&protocol conformance descriptor for CentralManager.State, &type metadata for CentralManager.State);
    atomic_store(result, (unint64_t *)&qword_2542FD358);
  }
  return result;
}

uint64_t sub_23B5BB008(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t result;
  int64_t v16;
  unint64_t v17;
  unint64_t i;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t (*v31)(unint64_t, char *, uint64_t);
  char *v32;
  char *v33;
  unint64_t v34;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34678);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1F8);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v33 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v32 = (char *)&v29 - v9;
  v10 = a1 + 64;
  v11 = 1 << *(_BYTE *)(a1 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(a1 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v16 = 0;
  v34 = MEMORY[0x24BEE4AF8];
  if (v13)
    goto LABEL_7;
LABEL_8:
  while (2)
  {
    v19 = v16 + 1;
    if (!__OFADD__(v16, 1))
    {
      if (v19 < v14)
      {
        v20 = *(_QWORD *)(v10 + 8 * v19);
        ++v16;
        if (v20)
          goto LABEL_23;
        v16 = v19 + 1;
        if (v19 + 1 >= v14)
          goto LABEL_32;
        v20 = *(_QWORD *)(v10 + 8 * v16);
        if (v20)
          goto LABEL_23;
        v16 = v19 + 2;
        if (v19 + 2 >= v14)
          goto LABEL_32;
        v20 = *(_QWORD *)(v10 + 8 * v16);
        if (v20)
          goto LABEL_23;
        v16 = v19 + 3;
        if (v19 + 3 >= v14)
          goto LABEL_32;
        v20 = *(_QWORD *)(v10 + 8 * v16);
        if (v20)
        {
LABEL_23:
          v13 = (v20 - 1) & v20;
          for (i = __clz(__rbit64(v20)) + (v16 << 6); ; i = v17 | (v16 << 6))
          {
            v22 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * i);
            if (!v22)
              break;
            (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v4, v22 + OBJC_IVAR____TtC15FindMyBluetooth11MockService_id, v5);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
              goto LABEL_6;
            v23 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
            v23(v32, v4, v5);
            v31 = (uint64_t (*)(unint64_t, char *, uint64_t))v23;
            v23(v33, v32, v5);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v34 = sub_23B5857B0(0, *(_QWORD *)(v34 + 16) + 1, 1, v34);
            v25 = *(_QWORD *)(v34 + 16);
            v24 = *(_QWORD *)(v34 + 24);
            v26 = v25 + 1;
            if (v25 >= v24 >> 1)
            {
              v29 = *(_QWORD *)(v34 + 16);
              v30 = v25 + 1;
              v28 = sub_23B5857B0(v24 > 1, v25 + 1, 1, v34);
              v25 = v29;
              v26 = v30;
              v34 = v28;
            }
            v27 = v34;
            *(_QWORD *)(v34 + 16) = v26;
            result = v31(v27+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v25, v33, v5);
            if (!v13)
              goto LABEL_8;
LABEL_7:
            v17 = __clz(__rbit64(v13));
            v13 &= v13 - 1;
          }
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
LABEL_6:
          result = sub_23B587ED4((uint64_t)v4, &qword_256A34678);
          if (!v13)
            continue;
          goto LABEL_7;
        }
        v21 = v19 + 4;
        if (v21 < v14)
        {
          v20 = *(_QWORD *)(v10 + 8 * v21);
          if (v20)
          {
            v16 = v21;
            goto LABEL_23;
          }
          while (1)
          {
            v16 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_34;
            if (v16 >= v14)
              break;
            v20 = *(_QWORD *)(v10 + 8 * v16);
            ++v21;
            if (v20)
              goto LABEL_23;
          }
        }
      }
LABEL_32:
      swift_release();
      return v34;
    }
    break;
  }
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_23B5BB364()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_23B60185C();
  __swift_allocate_value_buffer(v0, qword_256A350D8);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_256A350D8);
  if (qword_2542FD4A0 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_2542FD480);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t MockPeripheral.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_id;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_23B5BB43C@<X0>(uint64_t a1@<X8>)
{
  return sub_23B5BBC0C(&OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_macAddress, (uint64_t *)&unk_256A346E0, a1);
}

uint64_t sub_23B5BB450(uint64_t a1)
{
  return sub_23B5BBC7C(a1, &OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_macAddress, (uint64_t *)&unk_256A346E0);
}

uint64_t (*sub_23B5BB464())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t MockPeripheral.advertisementData.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23B5BB4B8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_state);
  result = swift_beginAccess();
  *a1 = *v3;
  return result;
}

uint64_t sub_23B5BB504(char *a1)
{
  uint64_t v1;
  char v2;
  _BYTE *v3;
  uint64_t result;

  v2 = *a1;
  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_state);
  result = swift_beginAccess();
  *v3 = v2;
  return result;
}

uint64_t (*sub_23B5BB554())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_23B5BB598@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1 + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_lastSeen;
  swift_beginAccess();
  v4 = sub_23B601790();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, v3, v4);
}

uint64_t sub_23B5BB600(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = sub_23B601790();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v8 = *a2 + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_lastSeen;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 40))(v8, v7, v4);
  return swift_endAccess();
}

uint64_t sub_23B5BB6C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_lastSeen;
  swift_beginAccess();
  v4 = sub_23B601790();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_23B5BB728(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_lastSeen;
  swift_beginAccess();
  v4 = sub_23B601790();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*sub_23B5BB794())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t MockPeripheral.isConnectable.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_isConnectable);
}

id sub_23B5BB7E8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_mockBehavior);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a2 = *v3;
  a2[1] = v5;
  a2[2] = v6;
  return sub_23B5AF27C(v4, v5, v6);
}

void sub_23B5BB844(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_mockBehavior);
  swift_beginAccess();
  v6 = *v5;
  v7 = v5[1];
  v8 = v5[2];
  *v5 = v2;
  v5[1] = v3;
  v5[2] = v4;
  sub_23B5AF27C(v2, v3, v4);
  sub_23B5AF2F8(v6, v7, v8);
}

id sub_23B5BB8D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_mockBehavior);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_23B5AF27C(v4, v5, v6);
}

__n128 sub_23B5BB930(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 result;
  __int128 v8;

  v8 = *a1;
  v2 = *((_QWORD *)a1 + 2);
  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_mockBehavior);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *(_OWORD *)v3 = v8;
  v3[2] = v2;
  sub_23B5AF2F8(v4, v5, v6);
  return result;
}

uint64_t (*sub_23B5BB99C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_23B5BB9E0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = (_QWORD *)(*a2 + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_mockSerialNumber);
  swift_beginAccess();
  *v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23B5BBA48()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_mockSerialNumber);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_23B5BBA9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_mockSerialNumber);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_23B5BBAF8())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_23B5BBB3C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t *a5, _QWORD *a6)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;

  v10 = __swift_instantiateConcreteTypeFromMangledName(a5);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B5A3C5C(a1, (uint64_t)v12, a5);
  v13 = *a2 + *a6;
  swift_beginAccess();
  sub_23B5A2728((uint64_t)v12, v13, a5);
  return swift_endAccess();
}

uint64_t sub_23B5BBBF8@<X0>(uint64_t a1@<X8>)
{
  return sub_23B5BBC0C(&OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_mockBeaconIdentifier, &qword_2542FD228, a1);
}

uint64_t sub_23B5BBC0C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;

  v6 = v3 + *a1;
  swift_beginAccess();
  return sub_23B5A3C5C(v6, a3, a2);
}

uint64_t sub_23B5BBC68(uint64_t a1)
{
  return sub_23B5BBC7C(a1, &OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_mockBeaconIdentifier, &qword_2542FD228);
}

uint64_t sub_23B5BBC7C(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;

  v6 = v3 + *a2;
  swift_beginAccess();
  sub_23B5A2728(a1, v6, a3);
  return swift_endAccess();
}

uint64_t (*sub_23B5BBCE0())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

BOOL sub_23B5BBD24()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_state);
  swift_beginAccess();
  return *v1 == 3;
}

uint64_t sub_23B5BBD70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_23B5BBD88()
{
  uint64_t v0;
  uint64_t Strong;

  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 32) = Strong;
  if (Strong)
    return swift_task_switch();
  type metadata accessor for CentralManager.Error();
  sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
  swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5BBE50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 16);
  sub_23B6015E0();
  sub_23B6016B8();
  swift_allocObject();
  v6 = 0x1000000000;
  v7 = sub_23B601694();
  sub_23B5BF3F4((int *)&v6, 1);
  v2 = v6;
  v3 = v7 | 0x4000000000000000;
  v4 = (uint64_t *)(v1 + *(int *)(type metadata accessor for PeripheralPairingInfo() + 20));
  *v4 = v2;
  v4[1] = v3;
  return swift_task_switch();
}

uint64_t sub_23B5BBF18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = v1;
  *(_OWORD *)(v2 + 72) = *(_OWORD *)a1;
  *(_QWORD *)(v2 + 88) = *(_QWORD *)(a1 + 16);
  return swift_task_switch();
}

uint64_t sub_23B5BBF40()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v1 = v0[10];
  v2 = v0[11];
  v3 = v0[9];
  v4 = (uint64_t *)(v0[8] + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_mockBehavior);
  swift_beginAccess();
  v5 = *v4;
  v6 = v4[1];
  v7 = v4[2];
  *v4 = v3;
  v4[1] = v1;
  v4[2] = v2;
  sub_23B5AF27C(v3, v1, v2);
  sub_23B5AF2F8(v5, v6, v7);
  result = swift_weakLoadStrong();
  v0[12] = result;
  if (result)
    return swift_task_switch();
  __break(1u);
  return result;
}

uint64_t sub_23B5BC000()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  v4 = (uint64_t *)(*(_QWORD *)(v0 + 96) + OBJC_IVAR____TtC15FindMyBluetooth18MockCentralManager_mockBehavior);
  swift_beginAccess();
  v5 = *v4;
  v6 = v4[1];
  v7 = v4[2];
  *v4 = v3;
  v4[1] = v2;
  v4[2] = v1;
  sub_23B5AF27C(v3, v2, v1);
  sub_23B5AF2F8(v5, v6, v7);
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t MockPeripheral.__allocating_init(centralManager:identifier:macAddress:isConnectable:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, char);

  *(_QWORD *)(v4 + 16) = a1;
  swift_allocObject();
  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, char))((char *)&dword_256A35108 + dword_256A35108);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 24) = v9;
  *v9 = v4;
  v9[1] = sub_23B5BC144;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_23B5BC144(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  swift_task_dealloc();
  v5 = swift_release();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t MockPeripheral.init(centralManager:identifier:macAddress:isConnectable:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, char);

  *(_QWORD *)(v4 + 16) = a1;
  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, char))((char *)&dword_256A35108 + dword_256A35108);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 24) = v9;
  *v9 = v4;
  v9[1] = sub_23B5C0658;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_23B5BC234(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_mockServices) = a1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23B5BC264()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A34708);
  *(_QWORD *)(v1 + 24) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5BC2C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 24);
  *(_BYTE *)(v0 + 48) = 18;
  v2 = type metadata accessor for Peripheral.Options();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v3;
  *v3 = v0;
  v3[1] = sub_23B592608;
  return sub_23B5BC338();
}

uint64_t sub_23B5BC338()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 64) = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35810);
  *(_QWORD *)(v1 + 72) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5BC394()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v1 = (_BYTE *)(*(_QWORD *)(v0 + 64) + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_state);
  swift_beginAccess();
  if (*v1 != 3)
  {
    if (*(_BYTE *)(*(_QWORD *)(v0 + 64) + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_isConnectable) == 1
      && (Strong = swift_weakLoadStrong(), (*(_QWORD *)(v0 + 80) = Strong) != 0))
    {
      v3 = Strong;
      v4 = *(_QWORD *)(v0 + 72);
      v5 = *(_QWORD *)(v0 + 64) + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_connectContinuation;
      swift_beginAccess();
      sub_23B5A3C5C(v5, v4, (uint64_t *)&unk_256A35810);
      v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD510);
      LODWORD(v5) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v4, 1, v6);
      sub_23B587ED4(v4, (uint64_t *)&unk_256A35810);
      if ((_DWORD)v5 == 1)
      {
        v7 = *(_QWORD *)(v0 + 64);
        sub_23B5884D4((unint64_t *)&unk_256A35130, (uint64_t (*)(uint64_t))type metadata accessor for MockPeripheral, (uint64_t)&protocol conformance descriptor for MockPeripheral);
        v8 = swift_task_alloc();
        *(_QWORD *)(v0 + 88) = v8;
        *(_QWORD *)(v8 + 16) = v7;
        *(_QWORD *)(v8 + 24) = v3;
        v9 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 96) = v9;
        *v9 = v0;
        v9[1] = sub_23B5BC678;
        return sub_23B601E14();
      }
      type metadata accessor for CentralManager.Error();
      sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      swift_release();
    }
    else
    {
      type metadata accessor for CentralManager.Error();
      sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
    }
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5BC678()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B5BC6EC()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5BC728()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5BC76C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v8;

  v6[3] = a5;
  v6[4] = a6;
  v8 = (_QWORD *)swift_task_alloc();
  v6[5] = v8;
  *v8 = v6;
  v8[1] = sub_23B5BC7C4;
  return sub_23B5F9C10(a5);
}

uint64_t sub_23B5BC7C4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23B5BC830()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 32) = v0;
  *(_QWORD *)(v1 + 16) = 0;
  *(_BYTE *)(v1 + 24) = 1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 40) = v2;
  *v2 = v1;
  v2[1] = sub_23B593A8C;
  return sub_23B5BC884();
}

uint64_t sub_23B5BC884()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 64) = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35810);
  *(_QWORD *)(v1 + 72) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5BC8E0()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v1 = (_BYTE *)(*(_QWORD *)(v0 + 64) + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_state);
  swift_beginAccess();
  if (*v1 != 1)
  {
    Strong = swift_weakLoadStrong();
    *(_QWORD *)(v0 + 80) = Strong;
    if (Strong)
    {
      v3 = Strong;
      v4 = *(_QWORD *)(v0 + 72);
      v5 = *(_QWORD *)(v0 + 64) + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_cancelConnectContinuation;
      swift_beginAccess();
      sub_23B5A3C5C(v5, v4, (uint64_t *)&unk_256A35810);
      v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD510);
      LODWORD(v5) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v4, 1, v6);
      sub_23B587ED4(v4, (uint64_t *)&unk_256A35810);
      if ((_DWORD)v5 == 1)
      {
        v7 = *(_QWORD *)(v0 + 64);
        sub_23B5884D4((unint64_t *)&unk_256A35130, (uint64_t (*)(uint64_t))type metadata accessor for MockPeripheral, (uint64_t)&protocol conformance descriptor for MockPeripheral);
        v8 = swift_task_alloc();
        *(_QWORD *)(v0 + 88) = v8;
        *(_QWORD *)(v8 + 16) = v7;
        *(_QWORD *)(v8 + 24) = v3;
        v9 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 96) = v9;
        *v9 = v0;
        v9[1] = sub_23B5BC678;
        return sub_23B601E14();
      }
      type metadata accessor for CentralManager.Error();
      sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      swift_release();
    }
    else
    {
      type metadata accessor for CentralManager.Error();
      sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
    }
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5BCB64(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v26 = a3;
  v27 = a6;
  v25 = a5;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD510);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD530);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35810);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v18(v17, a1, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v17, 0, 1, v9);
  v19 = a2 + *a4;
  swift_beginAccess();
  sub_23B5A2728((uint64_t)v17, v19, (uint64_t *)&unk_256A35810);
  swift_endAccess();
  v20 = sub_23B601A78();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v14, 1, 1, v20);
  v18((char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  v21 = sub_23B5884D4((unint64_t *)&unk_256A35130, (uint64_t (*)(uint64_t))type metadata accessor for MockPeripheral, (uint64_t)&protocol conformance descriptor for MockPeripheral);
  v22 = (*(unsigned __int8 *)(v10 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v23 = (char *)swift_allocObject();
  *((_QWORD *)v23 + 2) = a2;
  *((_QWORD *)v23 + 3) = v21;
  *((_QWORD *)v23 + 4) = v26;
  *((_QWORD *)v23 + 5) = a2;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v23[v22], (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  swift_retain_n();
  swift_retain();
  sub_23B5CD0FC((uint64_t)v14, v27, (uint64_t)v23);
  return swift_release();
}

uint64_t sub_23B5BCD84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v8;

  v6[3] = a5;
  v6[4] = a6;
  v8 = (_QWORD *)swift_task_alloc();
  v6[5] = v8;
  *v8 = v6;
  v8[1] = sub_23B5BCDDC;
  return sub_23B5F9F6C(a5);
}

uint64_t sub_23B5BCDDC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23B5BCE48()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 48);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD510);
  sub_23B601A24();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5BCE98()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_23B5BCEB0()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  Strong = swift_weakLoadStrong();
  swift_release();
  if (Strong)
  {
    v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
    v3 = *(unsigned __int8 *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral__isPaired);
  }
  else
  {
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
    v3 = 0;
  }
  return v2(v3);
}

uint64_t sub_23B5BCF78()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = v0;
  return swift_task_switch();
}

uint64_t sub_23B5BCF90()
{
  uint64_t v0;
  uint64_t Strong;
  _BYTE *v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
LABEL_7:
    v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  if (*(_BYTE *)(Strong + OBJC_IVAR____TtC15FindMyBluetooth18MockCentralManager_isPairingCentralManager) != 1
    || (v2 = (_BYTE *)(*(_QWORD *)(v0 + 40) + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_state),
        swift_beginAccess(),
        *v2 != 3))
  {
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_release();
    goto LABEL_7;
  }
  v3 = *(_QWORD *)(v0 + 40);
  swift_release();
  *(_BYTE *)(v3 + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral__isPaired) = 1;
  v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_23B5BD154()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_23B5BD16C()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t (*v3)(void);

  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
LABEL_6:
    v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
  if (*(_BYTE *)(Strong + OBJC_IVAR____TtC15FindMyBluetooth18MockCentralManager_isPairingCentralManager) != 1)
  {
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_release();
    goto LABEL_6;
  }
  v2 = *(_QWORD *)(v0 + 16);
  swift_release();
  *(_BYTE *)(v2 + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral__isPaired) = 0;
  v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_23B5BD2AC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[17] = a1;
  v2[18] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A34678);
  v2[19] = swift_task_alloc();
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1F8);
  v2[20] = v3;
  v2[21] = *(_QWORD *)(v3 - 8);
  v2[22] = swift_task_alloc();
  v2[23] = swift_task_alloc();
  v2[24] = swift_task_alloc();
  v4 = sub_23B601CE8();
  v2[25] = v4;
  v2[26] = *(_QWORD *)(v4 - 8);
  v2[27] = swift_task_alloc();
  v2[28] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5BD388()
{
  uint64_t v0;
  uint64_t Strong;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  _QWORD *v12;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, char);
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  Strong = swift_weakLoadStrong();
  swift_release();
  if (Strong
    && (v2 = (_BYTE *)(*(_QWORD *)(v0 + 144) + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_state),
        swift_beginAccess(),
        *v2 == 3)
    && (v3 = *(_QWORD *)(v0 + 144),
        v4 = OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_discoveryInProgress,
        *(_QWORD *)(v0 + 232) = OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_discoveryInProgress,
        (*(_BYTE *)(v3 + v4) & 1) == 0))
  {
    v6 = (uint64_t *)(v3 + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_mockBehavior);
    swift_beginAccess();
    v7 = *v6;
    *(_QWORD *)(v0 + 240) = *v6;
    v8 = v6[1];
    *(_QWORD *)(v0 + 248) = v8;
    v9 = v6[2];
    *(_QWORD *)(v0 + 256) = v9;
    *(_BYTE *)(v3 + v4) = 1;
    if (v9 < 0)
    {
      v11 = (id)(v9 & 0x7FFFFFFFFFFFFFFFLL);
      sub_23B601CDC();
      v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_256A34E00 + dword_256A34E00);
      v12 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 264) = v12;
      *v12 = v0;
      v12[1] = sub_23B5BD668;
      return v14(v7, v8, 0, 0, 1);
    }
    else
    {
      sub_23B601CDC();
      v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_256A34E00 + dword_256A34E00);
      v10 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 280) = v10;
      *v10 = v0;
      v10[1] = sub_23B5BD6E0;
      return v13(v7, v8, 0, 0, 1);
    }
  }
  else
  {
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23B5BD668()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 272) = v0;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v2[26] + 8))(v2[27], v2[25]);
  return swift_task_switch();
}

uint64_t sub_23B5BD6E0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 288) = v0;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v2[26] + 8))(v2[28], v2[25]);
  return swift_task_switch();
}

uint64_t sub_23B5BD758()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char isUniquelyReferenced_nonNull_native;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, unint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  char v37;
  void (*v38)(uint64_t, uint64_t);
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  int64_t v57;
  unint64_t v58;
  int64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t, unint64_t, uint64_t);
  uint64_t v64;
  int v65;
  _QWORD *v66;
  char v67;
  unint64_t v68;
  uint64_t v69;
  _BOOL8 v70;
  char v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = MEMORY[0x24BEE4AF8];
  if (v1)
    v4 = v1;
  else
    v4 = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRetain();
  v79 = sub_23B5BAB00(v4);
  swift_bridgeObjectRelease();
  v5 = OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_mockServices;
  v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_mockServices);
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_23B601D24();
    if (v7)
      goto LABEL_6;
  }
  else
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v7)
    {
LABEL_6:
      v93 = v3;
      result = sub_23B5B9E38(0, v7 & ~(v7 >> 63), 0);
      if (v7 < 0)
        goto LABEL_80;
      v87 = v5;
      v90 = v2;
      v9 = 0;
      v10 = (_QWORD *)v89;
      v11 = *(_QWORD *)(v89 + 168);
      v12 = v93;
      do
      {
        v13 = v10[24];
        v14 = v10[20];
        if ((v6 & 0xC000000000000001) != 0)
        {
          v15 = MEMORY[0x23B868228](v9, v6);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v13, v15 + OBJC_IVAR____TtC15FindMyBluetooth11MockService_id, v14);
          swift_unknownObjectRelease();
        }
        else
        {
          (*(void (**)(_QWORD, uint64_t, _QWORD))(v11 + 16))(v10[24], *(_QWORD *)(v6 + 8 * v9 + 32) + OBJC_IVAR____TtC15FindMyBluetooth11MockService_id, v10[20]);
        }
        v17 = *(_QWORD *)(v93 + 16);
        v16 = *(_QWORD *)(v93 + 24);
        if (v17 >= v16 >> 1)
          sub_23B5B9E38(v16 > 1, v17 + 1, 1);
        v18 = *(_QWORD *)(v89 + 192);
        v19 = *(_QWORD *)(v89 + 160);
        ++v9;
        *(_QWORD *)(v93 + 16) = v17 + 1;
        v20 = v93
            + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))
            + *(_QWORD *)(v11 + 72) * v17;
        v10 = (_QWORD *)v89;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v11 + 32))(v20, v18, v19);
      }
      while (v7 != v9);
      swift_bridgeObjectRelease();
      v2 = v90;
      v5 = v87;
      goto LABEL_17;
    }
  }
  swift_bridgeObjectRelease();
  v12 = MEMORY[0x24BEE4AF8];
  v10 = (_QWORD *)v89;
LABEL_17:
  v91 = sub_23B5BAB00(v12);
  swift_bridgeObjectRelease();
  v81 = *(_QWORD *)(v2 + v5);
  if (v81 >> 62)
    goto LABEL_36;
  v21 = *(_QWORD *)((v81 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v22 = &unk_256A35000;
  while (v21)
  {
    v23 = 0;
    v80 = (uint64_t *)(v10[18] + v22[47]);
    v82 = v21;
    v86 = (_QWORD *)v10[21];
    v88 = v91 + 56;
    while ((v81 & 0xC000000000000001) != 0)
    {
      v84 = MEMORY[0x23B868228](v23, v81);
      v27 = __OFADD__(v23++, 1);
      if (v27)
        goto LABEL_34;
LABEL_28:
      if (*(_QWORD *)(v91 + 16))
      {
        v28 = v84 + OBJC_IVAR____TtC15FindMyBluetooth11MockService_id;
        sub_23B5BF848(&qword_256A34660, MEMORY[0x24BE316D0]);
        v29 = sub_23B6018C8();
        v30 = -1 << *(_BYTE *)(v91 + 32);
        v31 = v29 & ~v30;
        if (((*(_QWORD *)(v88 + ((v31 >> 3) & 0xFFFFFFFFFFFFF8)) >> v31) & 1) != 0)
        {
          v32 = ~v30;
          v33 = v86[9];
          v34 = (void (*)(uint64_t, unint64_t, uint64_t))v86[2];
          while (1)
          {
            v35 = v10[23];
            v36 = v10[20];
            v34(v35, *(_QWORD *)(v91 + 48) + v31 * v33, v36);
            sub_23B5BF848(&qword_256A34668, MEMORY[0x24BE316D8]);
            v37 = sub_23B6018EC();
            v38 = (void (*)(uint64_t, uint64_t))v86[1];
            v38(v35, v36);
            if ((v37 & 1) != 0)
              break;
            v31 = (v31 + 1) & v32;
            v10 = (_QWORD *)v89;
            if (((*(_QWORD *)(v88 + ((v31 >> 3) & 0xFFFFFFFFFFFFF8)) >> v31) & 1) == 0)
              goto LABEL_21;
          }
          v24 = *(_QWORD *)(v89 + 184);
          v25 = *(_QWORD *)(v89 + 160);
          v34(v24, v28, v25);
          swift_beginAccess();
          swift_retain();
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v94 = *v80;
          *v80 = 0x8000000000000000;
          sub_23B5B90D8(v84, v24, isUniquelyReferenced_nonNull_native);
          *v80 = v94;
          swift_bridgeObjectRelease();
          v38(v24, v25);
          v10 = (_QWORD *)v89;
          swift_endAccess();
        }
      }
LABEL_21:
      swift_release();
      if (v23 == v82)
        goto LABEL_37;
    }
    if (v23 >= *(_QWORD *)((v81 & 0xFFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_35;
    v84 = *(_QWORD *)(v81 + 32 + 8 * v23);
    swift_retain();
    v27 = __OFADD__(v23++, 1);
    if (!v27)
      goto LABEL_28;
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
    v21 = sub_23B601D24();
    v22 = (_QWORD *)&unk_256A35000;
  }
LABEL_37:
  swift_bridgeObjectRelease();
  v39 = v10[18];
  swift_bridgeObjectRelease();
  v40 = (_QWORD *)(v39 + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_services);
  swift_beginAccess();
  v41 = swift_bridgeObjectRetain();
  v42 = sub_23B5BB008(v41);
  swift_bridgeObjectRelease();
  v43 = sub_23B5BAB00(v42);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v43 + 16) <= *(_QWORD *)(v79 + 16) >> 3)
  {
    sub_23B5B1EA0(v43);
    result = swift_bridgeObjectRelease();
    v44 = v79;
  }
  else
  {
    v44 = sub_23B5B2770(v43, v79);
    result = swift_bridgeObjectRelease();
  }
  v45 = 0;
  v92 = *(_QWORD *)(v89 + 168);
  v83 = v44 + 56;
  v46 = -1;
  v47 = -1 << *(_BYTE *)(v44 + 32);
  if (-v47 < 64)
    v46 = ~(-1 << -(char)v47);
  v48 = v46 & *(_QWORD *)(v44 + 56);
  v85 = (unint64_t)(63 - v47) >> 6;
  while (1)
  {
    if (v48)
    {
      v54 = __clz(__rbit64(v48));
      v48 &= v48 - 1;
      v55 = v54 | (v45 << 6);
      v56 = v92;
    }
    else
    {
      v57 = v45 + 1;
      v56 = v92;
      if (__OFADD__(v45, 1))
        goto LABEL_78;
      if (v57 >= v85)
      {
LABEL_73:
        (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v92 + 56))(*(_QWORD *)(v89 + 152), 1, 1, *(_QWORD *)(v89 + 160));
LABEL_74:
        swift_release();
        *(_BYTE *)(*(_QWORD *)(v89 + 144) + *(_QWORD *)(v89 + 232)) = 0;
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        return (*(uint64_t (**)(_QWORD))(v89 + 8))(MEMORY[0x24BEE4AF8]);
      }
      v58 = *(_QWORD *)(v83 + 8 * v57);
      ++v45;
      if (!v58)
      {
        v45 = v57 + 1;
        if (v57 + 1 >= v85)
          goto LABEL_73;
        v58 = *(_QWORD *)(v83 + 8 * v45);
        if (!v58)
        {
          v45 = v57 + 2;
          if (v57 + 2 >= v85)
            goto LABEL_73;
          v58 = *(_QWORD *)(v83 + 8 * v45);
          if (!v58)
          {
            v59 = v57 + 3;
            if (v59 >= v85)
              goto LABEL_73;
            v58 = *(_QWORD *)(v83 + 8 * v59);
            if (!v58)
            {
              while (1)
              {
                v45 = v59 + 1;
                if (__OFADD__(v59, 1))
                  goto LABEL_79;
                if (v45 >= v85)
                  goto LABEL_73;
                v58 = *(_QWORD *)(v83 + 8 * v45);
                ++v59;
                if (v58)
                  goto LABEL_60;
              }
            }
            v45 = v59;
          }
        }
      }
LABEL_60:
      v48 = (v58 - 1) & v58;
      v55 = __clz(__rbit64(v58)) + (v45 << 6);
    }
    v61 = *(_QWORD *)(v89 + 152);
    v60 = *(_QWORD *)(v89 + 160);
    v62 = *(_QWORD *)(v56 + 72);
    v63 = *(void (**)(uint64_t, unint64_t, uint64_t))(v56 + 16);
    v63(v61, *(_QWORD *)(v44 + 48) + v62 * v55, v60);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v56 + 56))(v61, 0, 1, v60);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48))(v61, 1, v60) == 1)
      goto LABEL_74;
    v64 = *(_QWORD *)(v89 + 176);
    (*(void (**)(uint64_t, _QWORD, _QWORD))(v56 + 32))(v64, *(_QWORD *)(v89 + 152), *(_QWORD *)(v89 + 160));
    swift_beginAccess();
    v65 = swift_isUniquelyReferenced_nonNull_native();
    v95 = (_QWORD *)*v40;
    v66 = (_QWORD *)*v40;
    *v40 = 0x8000000000000000;
    v68 = sub_23B58EDD4(v64);
    v69 = v66[2];
    v70 = (v67 & 1) == 0;
    result = v69 + v70;
    if (__OFADD__(v69, v70))
      break;
    v71 = v67;
    if (v66[3] >= result)
    {
      if ((v65 & 1) != 0)
      {
        if ((v67 & 1) != 0)
          goto LABEL_43;
      }
      else
      {
        sub_23B5B5280();
        v66 = v95;
        if ((v71 & 1) != 0)
          goto LABEL_43;
      }
    }
    else
    {
      v72 = *(_QWORD *)(v89 + 176);
      sub_23B5B3B60(result, v65);
      v66 = v95;
      v73 = sub_23B58EDD4(v72);
      if ((v71 & 1) != (v74 & 1))
        return sub_23B601E2C();
      v68 = v73;
      if ((v71 & 1) != 0)
      {
LABEL_43:
        v49 = v66[7];
        v50 = 8 * v68;
        v51 = *(_QWORD *)(v49 + 8 * v68);
        *(_QWORD *)(v49 + v50) = 0;
        goto LABEL_44;
      }
    }
    v75 = *(_QWORD *)(v89 + 176);
    v76 = *(_QWORD *)(v89 + 160);
    v66[(v68 >> 6) + 8] |= 1 << v68;
    result = ((uint64_t (*)(unint64_t, uint64_t, uint64_t))v63)(v66[6] + v68 * v62, v75, v76);
    *(_QWORD *)(v66[7] + 8 * v68) = 0;
    v77 = v66[2];
    v27 = __OFADD__(v77, 1);
    v78 = v77 + 1;
    if (v27)
      goto LABEL_77;
    v66[2] = v78;
    v51 = 1;
LABEL_44:
    v52 = *(_QWORD *)(v89 + 176);
    v53 = *(_QWORD *)(v89 + 160);
    *v40 = v66;
    swift_bridgeObjectRelease();
    sub_23B58F6F0(v51);
    swift_endAccess();
    result = (*(uint64_t (**)(uint64_t, uint64_t))(v92 + 8))(v52, v53);
  }
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
  return result;
}

uint64_t sub_23B5BE064()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5BE0DC()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 144) + *(_QWORD *)(v0 + 232)) = 0;
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5BE178()
{
  uint64_t v0;

  sub_23B5AF2F8(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 256));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5BE1FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = v1;
  return swift_task_switch();
}

uint64_t sub_23B5BE214()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_services;
  *(_QWORD *)(v0 + 56) = OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_services;
  v3 = (uint64_t *)(v1 + v2);
  swift_beginAccess();
  v4 = *v3;
  if (*(_QWORD *)(v4 + 16))
  {
    v5 = *(_QWORD *)(v0 + 40);
    swift_bridgeObjectRetain();
    v6 = sub_23B58EDD4(v5);
    if ((v7 & 1) != 0)
    {
      v8 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v6);
      swift_retain();
      swift_bridgeObjectRelease();
      if (v8)
        return (*(uint64_t (**)(uint64_t))(v0 + 8))(v8);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  v10 = *(_QWORD *)(v0 + 40);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A341D0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1F8);
  *(_QWORD *)(v0 + 64) = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_DWORD *)(v12 + 80);
  *(_DWORD *)(v0 + 96) = v13;
  v14 = (v13 + 32) & ~(unint64_t)v13;
  v15 = swift_allocObject();
  *(_QWORD *)(v0 + 72) = v15;
  *(_OWORD *)(v15 + 16) = xmmword_23B607AF0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v12 + 16))(v15 + v14, v10, v11);
  v16 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v16;
  *v16 = v0;
  v16[1] = sub_23B5BE380;
  return sub_23B5BD2AC(v15);
}

uint64_t sub_23B5BE380()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
  }
  return swift_task_switch();
}

uint64_t sub_23B5BE444()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  uint64_t v5;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 48) + *(_QWORD *)(v0 + 56));
  if (*(_QWORD *)(v1 + 16))
  {
    v2 = *(_QWORD *)(v0 + 40);
    swift_bridgeObjectRetain();
    v3 = sub_23B58EDD4(v2);
    if ((v4 & 1) != 0)
    {
      v5 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v3);
      swift_retain();
      swift_bridgeObjectRelease();
      if (v5)
        return (*(uint64_t (**)(uint64_t))(v0 + 8))(v5);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  type metadata accessor for CentralManager.Error();
  sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
  swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5BE53C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[5] = a1;
  v2[6] = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A346E0);
  v2[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5BE598()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = sub_23B601634();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v1, v3, v4);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v1, 0, 1, v4);
  v6 = v2 + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_macAddress;
  swift_beginAccess();
  sub_23B5A2728(v1, v6, (uint64_t *)&unk_256A346E0);
  swift_endAccess();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5BE660()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[8] = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35810);
  v1[9] = swift_task_alloc();
  v1[10] = swift_task_alloc();
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD510);
  v1[11] = v2;
  v1[12] = *(_QWORD *)(v2 - 8);
  v1[13] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5BE6F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 64) + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_connectContinuation;
  swift_beginAccess();
  sub_23B5A3C5C(v4, v3, (uint64_t *)&unk_256A35810);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_23B587ED4(*(_QWORD *)(v0 + 80), (uint64_t *)&unk_256A35810);
    if (qword_256A340B8 != -1)
      swift_once();
    v5 = sub_23B60185C();
    __swift_project_value_buffer(v5, (uint64_t)qword_256A350D8);
    v6 = sub_23B601844();
    v7 = sub_23B601B74();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_23B583000, v6, v7, "Missing connectContinuation!", v8, 2u);
      MEMORY[0x23B868A2C](v8, -1, -1);
    }

  }
  else
  {
    v10 = *(_QWORD *)(v0 + 96);
    v9 = *(_QWORD *)(v0 + 104);
    v11 = *(_QWORD *)(v0 + 88);
    v12 = *(_QWORD *)(v0 + 72);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v10 + 32))(v9, *(_QWORD *)(v0 + 80), v11);
    sub_23B601A30();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v12, 1, 1, v11);
    swift_beginAccess();
    sub_23B5A2728(v12, v4, (uint64_t *)&unk_256A35810);
    swift_endAccess();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5BE8E8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[9] = a1;
  v2[10] = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35810);
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD510);
  v2[13] = v3;
  v2[14] = *(_QWORD *)(v3 - 8);
  v2[15] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5BE980()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 80) + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_connectContinuation;
  swift_beginAccess();
  sub_23B5A3C5C(v4, v3, (uint64_t *)&unk_256A35810);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_23B587ED4(*(_QWORD *)(v0 + 96), (uint64_t *)&unk_256A35810);
    if (qword_256A340B8 != -1)
      swift_once();
    v5 = sub_23B60185C();
    __swift_project_value_buffer(v5, (uint64_t)qword_256A350D8);
    v6 = sub_23B601844();
    v7 = sub_23B601B74();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_23B583000, v6, v7, "Missing connectContinuation!", v8, 2u);
      MEMORY[0x23B868A2C](v8, -1, -1);
    }

  }
  else
  {
    v9 = *(_QWORD *)(v0 + 72);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 112) + 32))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
    if (v9)
    {
      v10 = *(void **)(v0 + 72);
      *(_QWORD *)(v0 + 64) = v10;
      v11 = v10;
      sub_23B601A24();
    }
    else
    {
      sub_23B601A30();
    }
    v13 = *(_QWORD *)(v0 + 112);
    v12 = *(_QWORD *)(v0 + 120);
    v14 = *(_QWORD *)(v0 + 104);
    v15 = *(_QWORD *)(v0 + 88);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v15, 1, 1, v14);
    swift_beginAccess();
    sub_23B5A2728(v15, v4, (uint64_t *)&unk_256A35810);
    swift_endAccess();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5BEBA0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[9] = a1;
  v2[10] = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35810);
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD510);
  v2[13] = v3;
  v2[14] = *(_QWORD *)(v3 - 8);
  v2[15] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5BEC38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 80) + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_cancelConnectContinuation;
  swift_beginAccess();
  sub_23B5A3C5C(v4, v3, (uint64_t *)&unk_256A35810);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_23B587ED4(*(_QWORD *)(v0 + 96), (uint64_t *)&unk_256A35810);
    if (qword_256A340B8 != -1)
      swift_once();
    v5 = sub_23B60185C();
    __swift_project_value_buffer(v5, (uint64_t)qword_256A350D8);
    v6 = sub_23B601844();
    v7 = sub_23B601B74();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_23B583000, v6, v7, "Missing cancelConnectContinuation!", v8, 2u);
      MEMORY[0x23B868A2C](v8, -1, -1);
    }

  }
  else
  {
    v9 = *(_QWORD *)(v0 + 72);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 112) + 32))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
    if (v9)
    {
      v10 = *(void **)(v0 + 72);
      *(_QWORD *)(v0 + 64) = v10;
      v11 = v10;
      sub_23B601A24();
    }
    else
    {
      sub_23B601A30();
    }
    v13 = *(_QWORD *)(v0 + 112);
    v12 = *(_QWORD *)(v0 + 120);
    v14 = *(_QWORD *)(v0 + 104);
    v15 = *(_QWORD *)(v0 + 88);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v15, 1, 1, v14);
    swift_beginAccess();
    sub_23B5A2728(v15, v4, (uint64_t *)&unk_256A35810);
    swift_endAccess();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t MockPeripheral.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_id;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_23B587ED4(v0 + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_macAddress, (uint64_t *)&unk_256A346E0);
  swift_bridgeObjectRelease();
  v3 = v0 + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_lastSeen;
  v4 = sub_23B601790();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  sub_23B5AF2F8(*(_QWORD *)(v0 + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_mockBehavior), *(_QWORD *)(v0 + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_mockBehavior + 8), *(_QWORD *)(v0 + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_mockBehavior + 16));
  swift_bridgeObjectRelease();
  sub_23B587ED4(v0 + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_mockBeaconIdentifier, &qword_2542FD228);
  swift_weakDestroy();
  sub_23B587ED4(v0 + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_connectContinuation, (uint64_t *)&unk_256A35810);
  sub_23B587ED4(v0 + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_cancelConnectContinuation, (uint64_t *)&unk_256A35810);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t MockPeripheral.__deallocating_deinit()
{
  MockPeripheral.deinit();
  return swift_defaultActor_deallocate();
}

uint64_t MockPeripheral.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23B5BEFC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_id;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_23B5BF008(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = v1;
  return swift_task_switch();
}

uint64_t sub_23B5BF020()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48) + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_macAddress;
  swift_beginAccess();
  sub_23B5A3C5C(v2, v1, (uint64_t *)&unk_256A346E0);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5BF080()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23B5BF090(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = v1;
  return swift_task_switch();
}

uint64_t sub_23B5BF0A8()
{
  uint64_t v0;
  _BYTE *v1;
  _BYTE *v2;

  v1 = *(_BYTE **)(v0 + 40);
  v2 = (_BYTE *)(*(_QWORD *)(v0 + 48) + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_state);
  swift_beginAccess();
  *v1 = *v2;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5BF0FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = v1;
  return swift_task_switch();
}

uint64_t sub_23B5BF114()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48) + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_lastSeen;
  swift_beginAccess();
  v3 = sub_23B601790();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(v1, v2, v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5BF180()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_isConnectable);
}

uint64_t sub_23B5BF190()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23B587FA4;
  return sub_23B5BC338();
}

uint64_t sub_23B5BF1D4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23B587844;
  return sub_23B5BC884();
}

uint64_t sub_23B5BF218()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_23B587FA4;
  v2[5] = v0;
  return swift_task_switch();
}

uint64_t sub_23B5BF274()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_23B587FA4;
  v2[2] = v0;
  return swift_task_switch();
}

uint64_t sub_23B5BF2D0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23B58CEC8;
  return sub_23B5BD2AC(a1);
}

uint64_t sub_23B5BF31C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23B58F8B4;
  v4[5] = a1;
  v4[6] = v1;
  return swift_task_switch();
}

uint64_t sub_23B5BF37C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (__cdecl *v3)();

  v3 = (uint64_t (__cdecl *)())((char *)&dword_256A35E18 + dword_256A35E18);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23B58CFC0;
  return v3();
}

uint64_t sub_23B5BF3D4()
{
  return sub_23B598B64();
}

char *sub_23B5BF3F4(int *a1, int a2)
{
  char *result;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  size_t v11;

  result = (char *)sub_23B6016E8();
  v5 = *a1;
  v6 = a1[1];
  if ((int)v6 < (int)v5)
  {
    __break(1u);
    goto LABEL_9;
  }
  result = (char *)sub_23B601688();
  if (!result)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  v7 = result;
  result = (char *)sub_23B6016AC();
  v8 = v5 - (_QWORD)result;
  if (__OFSUB__(v5, result))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v9 = v6 - v5;
  v10 = sub_23B6016A0();
  if (v10 >= v9)
    v11 = v9;
  else
    v11 = v10;
  return (char *)memset(&v7[v8], a2, v11);
}

uint64_t sub_23B5BF474(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v5[6] = a3;
  v5[7] = v4;
  v5[5] = a2;
  v6 = sub_23B601820();
  v5[8] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[9] = v7;
  v8 = swift_task_alloc();
  v5[10] = v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  v20 = *(_QWORD *)(v9 - 8);
  v21 = v9;
  v10 = swift_task_alloc();
  v5[11] = v10;
  swift_defaultActor_initialize();
  v11 = v4 + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_macAddress;
  v19 = v4 + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_macAddress;
  v12 = sub_23B601634();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_advertisementData) = 0;
  sub_23B601784();
  v13 = (_QWORD *)(v4 + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_mockBehavior);
  *v13 = 10000000000000000;
  v13[1] = 0;
  v13[2] = 0;
  v14 = (_QWORD *)(v4 + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_mockSerialNumber);
  *v14 = 0;
  v14[1] = 0;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v4 + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_mockBeaconIdentifier, 1, 1, v6);
  swift_weakInit();
  v15 = v4 + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_connectContinuation;
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD510);
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56);
  v17(v15, 1, 1, v16);
  v17(v4 + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_cancelConnectContinuation, 1, 1, v16);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_mockServices) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v4 + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_services) = MEMORY[0x24BEE4B00];
  *(_BYTE *)(v4 + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_discoveryInProgress) = 0;
  *(_BYTE *)(v4 + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral__isPaired) = 0;
  swift_weakAssign();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v8, a2, v6);
  type metadata accessor for Peripheral();
  sub_23B6015D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32))(v4 + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_id, v10, v21);
  swift_beginAccess();
  sub_23B5A2D10(a3, v19);
  swift_endAccess();
  *(_BYTE *)(v4 + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_isConnectable) = a4;
  *(_BYTE *)(v4 + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_state) = 1;
  return swift_task_switch();
}

uint64_t sub_23B5BF734()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 40);
  sub_23B587ED4(*(_QWORD *)(v0 + 48), (uint64_t *)&unk_256A346E0);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v1);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 56));
}

uint64_t type metadata accessor for MockPeripheral()
{
  uint64_t result;

  result = qword_256A352F8;
  if (!qword_256A352F8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23B5BF7E8(uint64_t a1)
{
  uint64_t v1;

  return sub_23B5BCB64(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), &OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_connectContinuation, (uint64_t)&unk_250C82028, (uint64_t)&unk_256A35668);
}

uint64_t sub_23B5BF818(uint64_t a1)
{
  uint64_t v1;

  return sub_23B5BCB64(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), &OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_cancelConnectContinuation, (uint64_t)&unk_250C82000, (uint64_t)&unk_256A35658);
}

uint64_t sub_23B5BF848(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542FD1F8);
    result = MEMORY[0x23B868978](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23B5BF88C()
{
  return sub_23B5884D4(qword_256A35190, (uint64_t (*)(uint64_t))type metadata accessor for MockService, (uint64_t)&protocol conformance descriptor for MockService);
}

uint64_t sub_23B5BF8B8(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_23B5884D4((unint64_t *)&unk_256A352C0, (uint64_t (*)(uint64_t))type metadata accessor for MockPeripheral, (uint64_t)&protocol conformance descriptor for MockPeripheral);
  result = sub_23B5884D4((unint64_t *)&unk_256A35E20, (uint64_t (*)(uint64_t))type metadata accessor for MockPeripheral, (uint64_t)&protocol conformance descriptor for MockPeripheral);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_23B5BF914()
{
  return sub_23B5884D4((unint64_t *)&unk_256A35130, (uint64_t (*)(uint64_t))type metadata accessor for MockPeripheral, (uint64_t)&protocol conformance descriptor for MockPeripheral);
}

uint64_t sub_23B5BF940@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_macAddress, (uint64_t *)&unk_256A346E0, a2);
}

uint64_t sub_23B5BF954(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_23B5BBB3C(a1, a2, a3, a4, (uint64_t *)&unk_256A346E0, &OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_macAddress);
}

uint64_t sub_23B5BF978@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_state);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_23B5BF9C8(char *a1, _QWORD *a2)
{
  char v2;
  _BYTE *v3;
  uint64_t result;

  v2 = *a1;
  v3 = (_BYTE *)(*a2 + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_state);
  result = swift_beginAccess();
  *v3 = v2;
  return result;
}

uint64_t sub_23B5BFA24@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_mockSerialNumber);
  swift_beginAccess();
  v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23B5BFA7C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_mockBeaconIdentifier, &qword_2542FD228, a2);
}

uint64_t keypath_getTm@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, uint64_t *a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v6;

  v6 = *a1 + *a2;
  swift_beginAccess();
  return sub_23B5A3C5C(v6, a4, a3);
}

uint64_t sub_23B5BFAF0(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_23B5BBB3C(a1, a2, a3, a4, &qword_2542FD228, &OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_mockBeaconIdentifier);
}

uint64_t sub_23B5BFB14()
{
  return type metadata accessor for MockPeripheral();
}

void sub_23B5BFB1C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  sub_23B5A26B0(319, (unint64_t *)&unk_2542FD660, (uint64_t (*)(uint64_t))type metadata accessor for Peripheral, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BE316B0]);
  if (v0 <= 0x3F)
  {
    sub_23B5A26B0(319, (unint64_t *)&unk_2542FD208, (uint64_t (*)(uint64_t))MEMORY[0x24BE31730], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    if (v1 <= 0x3F)
    {
      sub_23B601790();
      if (v2 <= 0x3F)
      {
        sub_23B5A26B0(319, qword_256A35388, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        if (v3 <= 0x3F)
        {
          sub_23B58EC18();
          if (v4 <= 0x3F)
            swift_updateClassMetadata2();
        }
      }
    }
  }
}

uint64_t method lookup function for MockPeripheral()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MockPeripheral.macAddress.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of MockPeripheral.macAddress.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of MockPeripheral.macAddress.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of MockPeripheral.state.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of MockPeripheral.state.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of MockPeripheral.state.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of MockPeripheral.lastSeen.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of MockPeripheral.lastSeen.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of MockPeripheral.lastSeen.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of MockPeripheral.mockBehavior.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of MockPeripheral.mockBehavior.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of MockPeripheral.mockBehavior.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of MockPeripheral.mockSerialNumber.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t dispatch thunk of MockPeripheral.mockSerialNumber.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t dispatch thunk of MockPeripheral.mockSerialNumber.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of MockPeripheral.mockBeaconIdentifier.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))();
}

uint64_t dispatch thunk of MockPeripheral.mockBeaconIdentifier.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 344))();
}

uint64_t dispatch thunk of MockPeripheral.mockBeaconIdentifier.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 352))();
}

uint64_t dispatch thunk of MockPeripheral.isConnected.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 360))();
}

uint64_t dispatch thunk of MockPeripheral.pairingInfo.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 536) + *(_QWORD *)(*(_QWORD *)v1 + 536));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23B587844;
  return v6(a1);
}

uint64_t dispatch thunk of MockPeripheral.setMockingBehavior(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 544) + *(_QWORD *)(*(_QWORD *)v1 + 544));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23B587FA4;
  return v6(a1);
}

uint64_t dispatch thunk of MockPeripheral.__allocating_init(centralManager:identifier:macAddress:isConnectable:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);

  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(v4 + 552) + *(_QWORD *)(v4 + 552));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v10;
  *v10 = v5;
  v10[1] = sub_23B58EB10;
  return v12(a1, a2, a3, a4);
}

uint64_t dispatch thunk of MockPeripheral.setMockServices(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 560))();
}

uint64_t dispatch thunk of MockPeripheral.connect()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 568) + *(_QWORD *)(*(_QWORD *)v0 + 568));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_23B587FA4;
  return v4();
}

uint64_t dispatch thunk of MockPeripheral.connect(useCase:options:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 576) + *(_QWORD *)(*(_QWORD *)v2 + 576));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_23B587FA4;
  return v8(a1, a2);
}

uint64_t dispatch thunk of MockPeripheral.cancelConnection()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 584) + *(_QWORD *)(*(_QWORD *)v0 + 584));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_23B587FA4;
  return v4();
}

uint64_t dispatch thunk of MockPeripheral.cancelConnection(options:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 592) + *(_QWORD *)(*(_QWORD *)v1 + 592));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23B587FA4;
  return v6(a1);
}

uint64_t dispatch thunk of MockPeripheral.isPaired.getter()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 600) + *(_QWORD *)(*(_QWORD *)v0 + 600));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_23B58EB10;
  return v4();
}

uint64_t dispatch thunk of MockPeripheral.pair()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 608) + *(_QWORD *)(*(_QWORD *)v0 + 608));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_23B587FA4;
  return v4();
}

uint64_t dispatch thunk of MockPeripheral.unpair()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 616) + *(_QWORD *)(*(_QWORD *)v0 + 616));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_23B587FA4;
  return v4();
}

uint64_t dispatch thunk of MockPeripheral.discover(serviceIdentifiers:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 624) + *(_QWORD *)(*(_QWORD *)v1 + 624));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23B58F8B8;
  return v6(a1);
}

uint64_t dispatch thunk of MockPeripheral.subscript.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 632) + *(_QWORD *)(*(_QWORD *)v1 + 632));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23B58F8B8;
  return v6(a1);
}

uint64_t dispatch thunk of MockPeripheral.set(macAddress:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 648) + *(_QWORD *)(*(_QWORD *)v1 + 648));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23B587FA4;
  return v6(a1);
}

void destroy for MockBehavior(uint64_t *a1)
{
  sub_23B5AF2F8(*a1, a1[1], a1[2]);
}

uint64_t *_s15FindMyBluetooth12MockBehaviorOwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  sub_23B5AF27C(*a2, v4, v5);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  return a1;
}

uint64_t *assignWithCopy for MockBehavior(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  sub_23B5AF27C(*a2, v4, v5);
  v6 = *a1;
  v7 = a1[1];
  v8 = a1[2];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  sub_23B5AF2F8(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t *assignWithTake for MockBehavior(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *a1;
  v6 = a1[1];
  v5 = a1[2];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = v3;
  sub_23B5AF2F8(v4, v6, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for MockBehavior(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7F && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 127);
  v3 = (((*(_QWORD *)(a1 + 16) >> 57) >> 6) | (2
                                                           * ((*(_QWORD *)(a1 + 16) >> 57) & 0x38 | *(_QWORD *)(a1 + 16) & 7))) ^ 0x7F;
  if (v3 >= 0x7E)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for MockBehavior(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7E)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 127;
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
    {
      v3 = (-a2 >> 1) & 0x3F | ((-a2 & 0x7F) << 6);
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_23B5C0450(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16) >> 63;
}

uint64_t sub_23B5C045C(uint64_t result)
{
  *(_QWORD *)(result + 16) &= ~0x8000000000000000;
  return result;
}

uint64_t sub_23B5C046C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 16) = *(_QWORD *)(result + 16) & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  return result;
}

ValueMetadata *type metadata accessor for MockBehavior()
{
  return &type metadata for MockBehavior;
}

uint64_t sub_23B5C0494()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD510) - 8)
                          + 80);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = v0 + ((v2 + 48) & ~v2);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_23B587844;
  v5[3] = v3;
  v5[4] = v4;
  v6 = (_QWORD *)swift_task_alloc();
  v5[5] = v6;
  *v6 = v5;
  v6[1] = sub_23B5BCDDC;
  return sub_23B5F9F6C(v3);
}

uint64_t objectdestroyTm_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD510);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23B5C05BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD510) - 8)
                          + 80);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = v0 + ((v2 + 48) & ~v2);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_23B587FA4;
  v5[3] = v3;
  v5[4] = v4;
  v6 = (_QWORD *)swift_task_alloc();
  v5[5] = v6;
  *v6 = v5;
  v6[1] = sub_23B5BC7C4;
  return sub_23B5F9C10(v3);
}

uint64_t CharacteristicProtocol.isolatedDescription.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1E8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = 0;
  v14 = 0xE000000000000000;
  sub_23B601C40();
  sub_23B601958();
  v12 = v2;
  v9 = *(_QWORD *)(a2 + 16);
  sub_23B601DCC();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  MEMORY[0x23B86839C](a1, v9);
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  sub_23B5ABF5C();
  sub_23B601DE4();
  sub_23B601958();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_23B601958();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a2 + 32))(&v12, a1, a2);
  Characteristic.Properties.description.getter();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  (*(void (**)(uint64_t, uint64_t))(a2 + 40))(a1, a2);
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  return v13;
}

uint64_t CharacteristicProtocol.description.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1E8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = 0;
  v14 = 0xE000000000000000;
  sub_23B601C40();
  swift_bridgeObjectRelease();
  v13 = 60;
  v14 = 0xE100000000000000;
  v12 = v2;
  v9 = *(_QWORD *)(a2 + 16);
  sub_23B601DCC();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  MEMORY[0x23B86839C](a1, v9);
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  sub_23B5ABF5C();
  sub_23B601DE4();
  sub_23B601958();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_23B601958();
  return v13;
}

uint64_t dispatch thunk of CharacteristicProtocol.id.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of CharacteristicProtocol.properties.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of CharacteristicProtocol.isNotifying.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of CharacteristicProtocol.mtu.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 48) + *(_QWORD *)(a2 + 48));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23B58EB10;
  return v7(a1, a2);
}

uint64_t dispatch thunk of CharacteristicProtocol.read()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 56) + *(_QWORD *)(a3 + 56));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23B587FA4;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of CharacteristicProtocol.writeWithoutResponse(data:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 64) + *(_QWORD *)(a3 + 64));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23B587844;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of CharacteristicProtocol.write(data:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 72) + *(_QWORD *)(a4 + 72));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_23B587FA4;
  return v11(a1, a2, a3, a4);
}

uint64_t TLVSequence.init(_:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  sub_23B5C1700(a1, a2);
  v7 = v6;
  result = sub_23B5A2990(a1, a2);
  *a3 = v7;
  a3[1] = 0;
  return result;
}

uint64_t TLVSequence.makeIterator()@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t TLVSequence.next()@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v5;
  int64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v12;
  int64_t v13;
  uint64_t v14;
  uint64_t result;
  unint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  const char *v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint32_t v26;
  unint64_t v27;
  uint64_t v28;
  os_log_type_t v29;
  uint64_t v30;

  v5 = *v1;
  v6 = v1[1];
  v7 = *(_QWORD *)(*v1 + 16);
  if (v6 >= v7)
    goto LABEL_21;
  if (v6 + 1 >= v7)
  {
    v30 = *v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A35690);
    sub_23B58F61C(&qword_256A35698, &qword_256A35690, MEMORY[0x24BDCFBD8]);
    v3 = sub_23B601670();
    v2 = v16;
    if (qword_2542FD4A0 == -1)
      goto LABEL_14;
    goto LABEL_26;
  }
  if (v6 < 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  v2 = v5 + 32;
  v8 = *(unsigned __int8 *)(v5 + 32 + v6 + 1);
  v3 = v6 + 2;
  v9 = v6 + 2 + v8;
  if (__OFADD__(v6 + 2, v8))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v9 < v3)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    swift_once();
LABEL_14:
    v17 = sub_23B60185C();
    __swift_project_value_buffer(v17, (uint64_t)qword_2542FD480);
    swift_bridgeObjectRetain();
    v18 = sub_23B601844();
    v19 = sub_23B601B74();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = swift_slowAlloc();
      v21 = swift_slowAlloc();
      v30 = v21;
      *(_DWORD *)v20 = 136446210;
      swift_bridgeObjectRetain();
      sub_23B58E160(v3, v2, &v30);
      sub_23B601BC8();
      swift_bridgeObjectRelease_n();
      v22 = "Missing length: %{public}s";
      v23 = v18;
      v24 = v19;
      v25 = (uint8_t *)v20;
      v26 = 12;
LABEL_19:
      _os_log_impl(&dword_23B583000, v23, v24, v22, v25, v26);
      swift_arrayDestroy();
      MEMORY[0x23B868A2C](v21, -1, -1);
      MEMORY[0x23B868A2C](v20, -1, -1);

LABEL_21:
      v10 = 0;
      result = 0;
      v2 = 0;
      v3 = 0;
      v14 = 0;
      goto LABEL_22;
    }
LABEL_20:

    swift_bridgeObjectRelease_n();
    goto LABEL_21;
  }
  v10 = *(unsigned __int8 *)(v2 + v6);
  if (v9 - 1 >= v7)
  {
    v30 = *v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A35690);
    sub_23B58F61C(&qword_256A35698, &qword_256A35690, MEMORY[0x24BDCFBD8]);
    v3 = sub_23B601670();
    v2 = v27;
    if (qword_2542FD4A0 == -1)
      goto LABEL_17;
    goto LABEL_29;
  }
  if (v7 < (unint64_t)v3 || v7 < v9)
  {
    __break(1u);
    goto LABEL_28;
  }
  v12 = __OFADD__(v6, v8 + 2);
  v13 = v6 + v8 + 2;
  if (v12)
  {
LABEL_28:
    __break(1u);
LABEL_29:
    swift_once();
LABEL_17:
    v28 = sub_23B60185C();
    __swift_project_value_buffer(v28, (uint64_t)qword_2542FD480);
    swift_bridgeObjectRetain();
    v18 = sub_23B601844();
    v29 = sub_23B601B74();
    if (os_log_type_enabled(v18, v29))
    {
      v20 = swift_slowAlloc();
      v21 = swift_slowAlloc();
      v30 = v21;
      *(_DWORD *)v20 = 16777986;
      sub_23B601BC8();
      *(_WORD *)(v20 + 5) = 256;
      sub_23B601BC8();
      *(_WORD *)(v20 + 8) = 2082;
      swift_bridgeObjectRetain();
      sub_23B58E160(v3, v2, &v30);
      sub_23B601BC8();
      swift_bridgeObjectRelease_n();
      v22 = "Truncated data for T:%hhu L:%hhu: %{public}s";
      v23 = v18;
      v24 = v29;
      v25 = (uint8_t *)v20;
      v26 = 18;
      goto LABEL_19;
    }
    goto LABEL_20;
  }
  v14 = (2 * v9) | 1;
  v1[1] = v13;
  result = swift_bridgeObjectRetain();
LABEL_22:
  *a1 = v10;
  a1[1] = result;
  a1[2] = v2;
  a1[3] = v3;
  a1[4] = v14;
  return result;
}

uint64_t sub_23B5C10B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _BYTE __dst[14];
  unsigned __int8 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[5];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE v37[8];
  uint64_t v38;
  uint64_t v39;

  v39 = *MEMORY[0x24BDAC8D0];
  v30 = MEMORY[0x24BEE4AF8];
  sub_23B5B9E64(0, 0, 0);
  v4 = v30;
  v28 = a1;
  v29 = a2;
  swift_bridgeObjectRetain();
  TLVSequence.next()(&v32);
  v6 = v32;
  v5 = v33;
  v8 = v34;
  v7 = v35;
  v9 = v36;
  sub_23B5C1A0C((uint64_t)&v32, (uint64_t)v37);
  if (v38)
  {
    v10 = sub_23B58F61C(&qword_256A356C0, &qword_256A356B8, MEMORY[0x24BDD0690]);
    do
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A356B8);
      v31[3] = v11;
      v31[4] = v10;
      v12 = (_QWORD *)swift_allocObject();
      v31[0] = v12;
      v12[2] = v5;
      v12[3] = v8;
      v12[4] = v7;
      v12[5] = v9;
      v13 = __swift_project_boxed_opaque_existential_1(v31, v11);
      v14 = v13[2];
      v15 = v13[3] >> 1;
      v16 = v15 - v14;
      if (__OFSUB__(v15, v14))
        __break(1u);
      if (v16)
      {
        v17 = (const void *)(v13[1] + v14);
        if (v16 <= 14)
        {
          memset(__dst, 0, sizeof(__dst));
          v27 = v15 - v14;
          memcpy(__dst, v17, v15 - v14);
          v20 = *(_QWORD *)__dst;
          v21 = *(unsigned int *)&__dst[8] | ((unint64_t)__dst[12] << 32) | ((unint64_t)__dst[13] << 40) | ((unint64_t)v27 << 48);
          sub_23B5C22FC((uint64_t)&v32);
        }
        else
        {
          sub_23B6016B8();
          swift_allocObject();
          sub_23B5C22FC((uint64_t)&v32);
          v18 = sub_23B60167C();
          v19 = v18;
          if ((unint64_t)v16 >= 0x7FFFFFFF)
          {
            sub_23B60170C();
            v20 = swift_allocObject();
            *(_QWORD *)(v20 + 16) = 0;
            *(_QWORD *)(v20 + 24) = v16;
            v21 = v19 | 0x8000000000000000;
          }
          else
          {
            v20 = v16 << 32;
            v21 = v18 | 0x4000000000000000;
          }
        }
      }
      else
      {
        sub_23B5C22FC((uint64_t)&v32);
        v20 = 0;
        v21 = 0xC000000000000000;
      }
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v31);
      sub_23B5C2324((uint64_t)&v32);
      v30 = v4;
      v23 = *(_QWORD *)(v4 + 16);
      v22 = *(_QWORD *)(v4 + 24);
      if (v23 >= v22 >> 1)
      {
        sub_23B5B9E64(v22 > 1, v23 + 1, 1);
        v4 = v30;
      }
      *(_QWORD *)(v4 + 16) = v23 + 1;
      v24 = v4 + 24 * v23;
      *(_BYTE *)(v24 + 32) = v6;
      *(_QWORD *)(v24 + 40) = v20;
      *(_QWORD *)(v24 + 48) = v21;
      TLVSequence.next()(&v32);
      v6 = v32;
      v5 = v33;
      v8 = v34;
      v7 = v35;
      v9 = v36;
      sub_23B5C1A0C((uint64_t)&v32, (uint64_t)v37);
    }
    while (v38);
  }
  swift_bridgeObjectRelease();
  return v4;
}

void sub_23B5C1370(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
}

uint64_t sub_23B5C137C()
{
  return 0;
}

uint64_t sub_23B5C1384()
{
  return 2;
}

uint64_t sub_23B5C138C()
{
  uint64_t v0;

  v0 = sub_23B5C1524();
  swift_bridgeObjectRelease();
  return v0;
}

_QWORD *sub_23B5C13C0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_23B5C13C8(a1, a2, a3, *v3, v3[1]);
}

_QWORD *sub_23B5C13C8(_QWORD *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[8];
  uint64_t v22;

  v5 = result;
  v14 = a4;
  v15 = a5;
  if (!a2)
  {
    v6 = 0;
    goto LABEL_13;
  }
  v6 = a3;
  if (!a3)
  {
LABEL_13:
    *v5 = a4;
    v5[1] = a5;
    return (_QWORD *)v6;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    v7 = a2;
    TLVSequence.next()(&v16);
    v8 = v16;
    v9 = v17;
    v10 = v18;
    v11 = v19;
    v12 = v20;
    sub_23B5C1A0C((uint64_t)&v16, (uint64_t)v21);
    if (v22)
    {
      v13 = 0;
      while (1)
      {
        *(_BYTE *)v7 = v8;
        *(_QWORD *)(v7 + 8) = v9;
        *(_QWORD *)(v7 + 16) = v10;
        *(_QWORD *)(v7 + 24) = v11;
        *(_QWORD *)(v7 + 32) = v12;
        if (v6 - 1 == v13)
          break;
        TLVSequence.next()(&v16);
        v8 = v16;
        v9 = v17;
        v10 = v18;
        v11 = v19;
        v12 = v20;
        sub_23B5C1A0C((uint64_t)&v16, (uint64_t)v21);
        v7 += 40;
        ++v13;
        if (!v22)
          goto LABEL_11;
      }
      a4 = v14;
      a5 = v15;
    }
    else
    {
      v13 = 0;
LABEL_11:
      a4 = v14;
      a5 = v15;
      v6 = v13;
    }
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_23B5C14CC()
{
  return sub_23B60197C();
}

uint64_t sub_23B5C14EC@<X0>(uint64_t a1@<X8>)
{
  _QWORD v3[5];

  TLVSequence.next()(v3);
  return sub_23B5C1A0C((uint64_t)v3, a1);
}

uint64_t sub_23B5C1524()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  BOOL v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[8];
  uint64_t v28;

  swift_bridgeObjectRetain();
  TLVSequence.next()(&v22);
  v0 = v22;
  v1 = v23;
  v2 = v24;
  v3 = v25;
  v4 = v26;
  result = sub_23B5C1A0C((uint64_t)&v22, (uint64_t)v27);
  if (v28)
  {
    v6 = 0;
    v7 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v8 = MEMORY[0x24BEE4AF8] + 32;
    while (1)
    {
      if (!v6)
      {
        v9 = v7[3];
        if ((uint64_t)((v9 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_26;
        v10 = v7;
        v11 = v9 & 0xFFFFFFFFFFFFFFFELL;
        if (v11 <= 1)
          v12 = 1;
        else
          v12 = v11;
        __swift_instantiateConcreteTypeFromMangledName(&qword_256A356B0);
        v13 = (_QWORD *)swift_allocObject();
        v14 = (uint64_t)(_swift_stdlib_malloc_size(v13) - 32) / 40;
        v13[2] = v12;
        v13[3] = 2 * v14;
        v15 = (unint64_t)(v13 + 4);
        v16 = v10[3] >> 1;
        if (v10[2])
        {
          if (v13 != v10 || v15 >= (unint64_t)&v10[5 * v16 + 4])
            memmove(v13 + 4, v10 + 4, 40 * v16);
          v10[2] = 0;
        }
        v8 = v15 + 40 * v16;
        v6 = (v14 & 0x7FFFFFFFFFFFFFFFLL) - v16;
        result = swift_release();
        v7 = v13;
      }
      v18 = __OFSUB__(v6--, 1);
      if (v18)
        break;
      *(_BYTE *)v8 = v0;
      *(_QWORD *)(v8 + 8) = v1;
      *(_QWORD *)(v8 + 16) = v2;
      *(_QWORD *)(v8 + 24) = v3;
      *(_QWORD *)(v8 + 32) = v4;
      v8 += 40;
      TLVSequence.next()(&v22);
      v0 = v22;
      v1 = v23;
      v2 = v24;
      v3 = v25;
      v4 = v26;
      result = sub_23B5C1A0C((uint64_t)&v22, (uint64_t)v27);
      if (!v28)
        goto LABEL_21;
    }
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v7 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v6 = 0;
LABEL_21:
  swift_bridgeObjectRelease();
  result = (uint64_t)v7;
  v19 = v7[3];
  if (v19 >= 2)
  {
    v20 = v19 >> 1;
    v18 = __OFSUB__(v20, v6);
    v21 = v20 - v6;
    if (v18)
    {
LABEL_27:
      __break(1u);
      return result;
    }
    v7[2] = v21;
  }
  return result;
}

void sub_23B5C1700(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = sub_23B601760();
  MEMORY[0x24BDAC7A8](v3);
  __asm { BR              X10 }
}

_QWORD *sub_23B5C177C()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  size_t v6;
  uint64_t v7;

  if (BYTE6(v0))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A341F0);
    v4 = (_QWORD *)swift_allocObject();
    v6 = _swift_stdlib_malloc_size(v4);
    v4[2] = BYTE6(v0);
    v4[3] = 2 * v6 - 64;
    sub_23B5A294C(v2, v0);
    v7 = sub_23B601700();
    sub_23B5A2990(v2, v0);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v1);
    if (v7 != BYTE6(v0))
    {
      __break(1u);
      JUMPOUT(0x23B5C1850);
    }
  }
  return v4;
}

unint64_t sub_23B5C186C()
{
  unint64_t result;

  result = qword_256A356A0;
  if (!qword_256A356A0)
  {
    result = MEMORY[0x23B868978](&protocol conformance descriptor for TLVSequence, &type metadata for TLVSequence);
    atomic_store(result, (unint64_t *)&qword_256A356A0);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for TLVSequence(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for TLVSequence()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for TLVSequence(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

_QWORD *assignWithTake for TLVSequence(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

uint64_t getEnumTagSinglePayload for TLVSequence(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TLVSequence(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TLVSequence()
{
  return &type metadata for TLVSequence;
}

uint64_t sub_23B5C1A0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A356A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_23B5C1A54(uint64_t a1, char a2, _QWORD *a3)
{
  unint64_t *v4;
  uint64_t v6;
  unsigned __int8 v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t result;
  char v12;
  uint64_t v13;
  _BOOL8 v14;
  BOOL v15;
  uint64_t v16;
  char v17;
  char v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  char v27;
  uint64_t v28;
  _BOOL8 v29;
  uint64_t v30;
  char v31;
  _QWORD *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;

  LOBYTE(v4) = a2;
  v6 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (!v6)
    return swift_bridgeObjectRelease();
  v7 = *(_BYTE *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  sub_23B5A294C(v9, v8);
  if (v8 >> 60 == 15)
    return swift_bridgeObjectRelease();
  v10 = (_QWORD *)*a3;
  result = sub_23B58EE84(v7);
  v13 = v10[2];
  v14 = (v12 & 1) == 0;
  v15 = __OFADD__(v13, v14);
  v16 = v13 + v14;
  if (v15)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v17 = v12;
  if (v10[3] < v16)
  {
    sub_23B5B3B7C(v16, v4 & 1);
    result = sub_23B58EE84(v7);
    if ((v17 & 1) == (v18 & 1))
      goto LABEL_8;
LABEL_6:
    result = sub_23B601E2C();
    __break(1u);
  }
  if ((v4 & 1) == 0)
  {
    v21 = result;
    sub_23B5B54C0();
    result = v21;
    v19 = (_QWORD *)*a3;
    if ((v17 & 1) != 0)
    {
LABEL_9:
      v20 = v19[7] + 16 * result;
      sub_23B5A2990(*(_QWORD *)v20, *(_QWORD *)(v20 + 8));
      *(_QWORD *)v20 = v9;
      *(_QWORD *)(v20 + 8) = v8;
      if (--v6)
      {
LABEL_15:
        v4 = (unint64_t *)(a1 + 72);
        do
        {
          v7 = *((_BYTE *)v4 - 16);
          v9 = *(v4 - 1);
          v8 = *v4;
          sub_23B5A294C(v9, *v4);
          if (v8 >> 60 == 15)
            break;
          v26 = (_QWORD *)*a3;
          result = sub_23B58EE84(v7);
          v28 = v26[2];
          v29 = (v27 & 1) == 0;
          v15 = __OFADD__(v28, v29);
          v30 = v28 + v29;
          if (v15)
            goto LABEL_25;
          v17 = v27;
          if (v26[3] < v30)
          {
            sub_23B5B3B7C(v30, 1);
            result = sub_23B58EE84(v7);
            if ((v17 & 1) != (v31 & 1))
              goto LABEL_6;
          }
          v32 = (_QWORD *)*a3;
          if ((v17 & 1) != 0)
          {
            v25 = v32[7] + 16 * result;
            sub_23B5A2990(*(_QWORD *)v25, *(_QWORD *)(v25 + 8));
            *(_QWORD *)v25 = v9;
            *(_QWORD *)(v25 + 8) = v8;
          }
          else
          {
            v32[(result >> 6) + 8] |= 1 << result;
            *(_BYTE *)(v32[6] + result) = v7;
            v33 = (uint64_t *)(v32[7] + 16 * result);
            *v33 = v9;
            v33[1] = v8;
            v34 = v32[2];
            v15 = __OFADD__(v34, 1);
            v35 = v34 + 1;
            if (v15)
              goto LABEL_26;
            v32[2] = v35;
          }
          v4 += 3;
        }
        while (--v6);
      }
      return swift_bridgeObjectRelease();
    }
    goto LABEL_12;
  }
LABEL_8:
  v19 = (_QWORD *)*a3;
  if ((v17 & 1) != 0)
    goto LABEL_9;
LABEL_12:
  v19[(result >> 6) + 8] |= 1 << result;
  *(_BYTE *)(v19[6] + result) = v7;
  v22 = (uint64_t *)(v19[7] + 16 * result);
  *v22 = v9;
  v22[1] = v8;
  v23 = v19[2];
  v15 = __OFADD__(v23, 1);
  v24 = v23 + 1;
  if (!v15)
  {
    v19[2] = v24;
    if (--v6)
      goto LABEL_15;
    return swift_bridgeObjectRelease();
  }
LABEL_26:
  __break(1u);
  return result;
}

void sub_23B5C1CC4(uint64_t a1, uint64_t a2)
{
  __asm { BR              X9 }
}

unint64_t sub_23B5C1D08()
{
  unint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32[13];

  if (BYTE6(v0) < 2uLL)
  {
    if (qword_2542FD4A0 != -1)
      swift_once();
    v3 = sub_23B60185C();
    __swift_project_value_buffer(v3, (uint64_t)qword_2542FD480);
    sub_23B5A294C(v2, v0);
    sub_23B5A294C(v2, v0);
    v4 = sub_23B601844();
    v5 = sub_23B601B74();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      v7 = swift_slowAlloc();
      v31 = v0;
      v32[0] = v7;
      *(_DWORD *)v6 = 136446210;
      sub_23B5A2D58();
      v8 = sub_23B601670();
      v30 = sub_23B58E160(v8, v9, v32);
      sub_23B601BC8();
      swift_bridgeObjectRelease();
      sub_23B5A2990(v2, v0);
      sub_23B5A2990(v2, v0);
      v10 = "No TLV header: %{public}s";
LABEL_23:
      _os_log_impl(&dword_23B583000, v4, v5, v10, v6, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B868A2C](v7, -1, -1);
      MEMORY[0x23B868A2C](v6, -1, -1);
LABEL_25:

      return sub_23B5E379C(MEMORY[0x24BEE4AF8]);
    }
    goto LABEL_24;
  }
  if (v1)
  {
    if (v1 == 1)
    {
      LODWORD(v11) = HIDWORD(v2) - v2;
      if (!__OFSUB__(HIDWORD(v2), (_DWORD)v2))
      {
        v11 = (int)v11;
        goto LABEL_12;
      }
      __break(1u);
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    v13 = *(_QWORD *)(v2 + 16);
    v12 = *(_QWORD *)(v2 + 24);
    v14 = __OFSUB__(v12, v13);
    v11 = v12 - v13;
    if (v14)
      goto LABEL_37;
  }
  else
  {
    v11 = BYTE6(v0);
  }
LABEL_12:
  if (v11 > 31)
  {
    if (qword_2542FD4A0 != -1)
      swift_once();
    v15 = sub_23B60185C();
    __swift_project_value_buffer(v15, (uint64_t)qword_2542FD480);
    sub_23B5A294C(v2, v0);
    sub_23B5A294C(v2, v0);
    v4 = sub_23B601844();
    v5 = sub_23B601B74();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      v7 = swift_slowAlloc();
      v31 = v0;
      v32[0] = v7;
      *(_DWORD *)v6 = 136446210;
      sub_23B5A2D58();
      v16 = sub_23B601670();
      v30 = sub_23B58E160(v16, v17, v32);
      sub_23B601BC8();
      swift_bridgeObjectRelease();
      sub_23B5A2990(v2, v0);
      sub_23B5A2990(v2, v0);
      v10 = "TLV too large: %{public}s";
      goto LABEL_23;
    }
LABEL_24:
    sub_23B5A2990(v2, v0);
    sub_23B5A2990(v2, v0);
    goto LABEL_25;
  }
  if (sub_23B60176C() != 76 || sub_23B60176C())
  {
    if (qword_2542FD4A0 != -1)
      swift_once();
    v18 = sub_23B60185C();
    __swift_project_value_buffer(v18, (uint64_t)qword_2542FD480);
    sub_23B5A294C(v2, v0);
    sub_23B5A294C(v2, v0);
    v4 = sub_23B601844();
    v5 = sub_23B601B74();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      v7 = swift_slowAlloc();
      v31 = v0;
      v32[0] = v7;
      *(_DWORD *)v6 = 136446210;
      sub_23B5A2D58();
      v19 = sub_23B601670();
      v30 = sub_23B58E160(v19, v20, v32);
      sub_23B601BC8();
      swift_bridgeObjectRelease();
      sub_23B5A2990(v2, v0);
      sub_23B5A2990(v2, v0);
      v10 = "Not parsing non-Apple TLV data: %{public}s";
      goto LABEL_23;
    }
    goto LABEL_24;
  }
  if (v1)
  {
    if (v1 == 1)
      v22 = v2 >> 32;
    else
      v22 = *(_QWORD *)(v2 + 24);
  }
  else
  {
    v22 = BYTE6(v0);
  }
  if (v22 < 2)
  {
LABEL_38:
    __break(1u);
    JUMPOUT(0x23B5C22A4);
  }
  v23 = sub_23B601724();
  v25 = v24;
  sub_23B5C1700(v23, v24);
  v27 = v26;
  sub_23B5A2990(v23, v25);
  v28 = sub_23B5C10B0(v27, 0);
  swift_release();
  if (*(_QWORD *)(v28 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A35E30);
    v29 = sub_23B601D48();
  }
  else
  {
    v29 = MEMORY[0x24BEE4B00];
  }
  v30 = v29;
  sub_23B5C1A54(v28, 1, &v30);
  swift_bridgeObjectRelease();
  return v30;
}

uint64_t sub_23B5C22B4()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_23B5C22FC(uint64_t a1)
{
  swift_unknownObjectRetain();
  return a1;
}

uint64_t sub_23B5C2324(uint64_t a1)
{
  swift_unknownObjectRelease();
  return a1;
}

uint64_t sub_23B5C2350()
{
  char *v0;

  return dword_23B60842C[*v0];
}

BOOL static ConnectUseCase.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ConnectUseCase.hash(into:)()
{
  return sub_23B601E98();
}

uint64_t ConnectUseCase.hashValue.getter()
{
  sub_23B601E8C();
  sub_23B601E98();
  return sub_23B601EB0();
}

uint64_t ConnectUseCase.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23B5C2420 + 4 * aA[*v0]))(0x41794D646E69662ELL, 0xED00006E6F697463);
}

unint64_t sub_23B5C2420()
{
  return 0xD000000000000016;
}

unint64_t sub_23B5C2518()
{
  return 0xD000000000000011;
}

uint64_t sub_23B5C2540()
{
  return 0x726961706E752ELL;
}

uint64_t sub_23B5C2558()
{
  return 0x48726961706E752ELL;
}

uint64_t sub_23B5C2578()
{
  return 0x756F5379616C702ELL;
}

unint64_t sub_23B5C25AC()
{
  unint64_t result;

  result = qword_256A356C8;
  if (!qword_256A356C8)
  {
    result = MEMORY[0x23B868978](&protocol conformance descriptor for ConnectUseCase, &type metadata for ConnectUseCase);
    atomic_store(result, (unint64_t *)&qword_256A356C8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ConnectUseCase(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xEF)
    goto LABEL_17;
  if (a2 + 17 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 17) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 17;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 17;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 17;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x12;
  v8 = v6 - 18;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ConnectUseCase(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 17 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 17) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEE)
    return ((uint64_t (*)(void))((char *)&loc_23B5C26D0 + 4 * byte_23B60833B[v4]))();
  *a1 = a2 + 17;
  return ((uint64_t (*)(void))((char *)sub_23B5C2704 + 4 * byte_23B608336[v4]))();
}

uint64_t sub_23B5C2704(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B5C270C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23B5C2714);
  return result;
}

uint64_t sub_23B5C2720(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23B5C2728);
  *(_BYTE *)result = a2 + 17;
  return result;
}

uint64_t sub_23B5C272C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B5C2734(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ConnectUseCase()
{
  return &type metadata for ConnectUseCase;
}

uint64_t ServiceProtocol.isolatedDescription.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  v4 = sub_23B601820();
  v3[6] = v4;
  v3[7] = *(_QWORD *)(v4 - 8);
  v3[8] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1F8);
  v3[9] = v5;
  v3[10] = *(_QWORD *)(v5 - 8);
  v3[11] = swift_task_alloc();
  sub_23B601A18();
  return swift_task_switch();
}

uint64_t sub_23B5C2808()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 72);
  v9 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 40);
  v10 = *(_QWORD *)(v0 + 48);
  v11 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 24);
  v5 = *(_QWORD *)(v0 + 32);
  sub_23B601C40();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 16) = v4;
  v7 = *(_QWORD *)(v5 + 16);
  sub_23B601DCC();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  MEMORY[0x23B86839C](v6, v7);
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  (*(void (**)(uint64_t, uint64_t))(v5 + 40))(v6, v5);
  sub_23B5C2D04();
  sub_23B601DCC();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  sub_23B6015BC();
  shortCBUUIDDescription(uuid:)();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v2, v10);
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v1, v3);
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  (*(void (**)(uint64_t, uint64_t))(v5 + 48))(v6, v5);
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, unint64_t))(v0 + 8))(60, 0xE100000000000000);
}

uint64_t ServiceProtocol.description.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;

  v13 = sub_23B601820();
  v5 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1F8);
  v14 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = 0;
  v18 = 0xE000000000000000;
  sub_23B601C40();
  swift_bridgeObjectRelease();
  v17 = 60;
  v18 = 0xE100000000000000;
  v15 = v2;
  v11 = *(_QWORD *)(a2 + 16);
  sub_23B601DCC();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  MEMORY[0x23B86839C](a1, v11);
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  (*(void (**)(uint64_t, uint64_t))(a2 + 40))(a1, a2);
  v15 = 91;
  v16 = 0xE100000000000000;
  sub_23B5C2D04();
  sub_23B601DCC();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  sub_23B6015BC();
  shortCBUUIDDescription(uuid:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v13);
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v10, v8);
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  return v17;
}

unint64_t sub_23B5C2D04()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A34A00;
  if (!qword_256A34A00)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542FD1F8);
    result = MEMORY[0x23B868978](MEMORY[0x24BE316E8], v1);
    atomic_store(result, &qword_256A34A00);
  }
  return result;
}

uint64_t Identifier.init(stringLiteral:)@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unsigned int v39;
  int v40;
  unsigned int v41;
  int v42;
  unsigned int v43;
  _QWORD v44[3];
  unsigned int (*v45)(char *, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;

  v44[1] = a5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD228);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)v44 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)v44 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)v44 - v19;
  v21 = sub_23B601820();
  v46 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44[2] = a4;
  v24 = sub_23B6015C8();
  if (v24 != __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1F8)
    && v24 != __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1E8))
  {
    v48 = 0;
    v49 = 0xE000000000000000;
    a1 = (unint64_t)&v48;
    sub_23B601C40();
    sub_23B601958();
    v47 = v24;
    swift_getMetatypeMetadata();
    sub_23B601928();
    sub_23B601958();
    swift_bridgeObjectRelease();
    goto LABEL_41;
  }
  sub_23B6017CC();
  v25 = v46;
  v45 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48);
  if (v45(v20, 1, v21) == 1)
    goto LABEL_36;
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v23, v20, v21);
  if ((a3 & 1) != 0)
  {
LABEL_19:
    v31 = HIDWORD(a1);
    if (HIDWORD(a1))
      goto LABEL_30;
    if (a1 >> 11 == 27)
    {
      __break(1u);
      goto LABEL_40;
    }
    LODWORD(v31) = WORD1(a1);
    if (WORD1(a1) > 0x10u)
      goto LABEL_31;
    if ((a1 & 0xFFFFFF80) != 0)
      goto LABEL_32;
    if (a1 <= 0xFF)
    {
      v39 = (a1 + 1);
      while (1)
      {
        v48 = (v39 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << (8 * ((4 - (__clz(v39) >> 3)) & 7)));
        sub_23B601940();
        if ((a3 & 2) != 0)
        {
          __break(1u);
LABEL_27:
          __break(1u);
LABEL_28:
          __break(1u);
LABEL_29:
          __break(1u);
LABEL_30:
          __break(1u);
LABEL_31:
          __break(1u);
LABEL_32:
          v40 = (a1 & 0x3F) << 8;
          if (a1 <= 0x7FF)
          {
            v41 = v40 | (a1 >> 6);
            v42 = 33217;
            goto LABEL_34;
          }
        }
        else
        {
LABEL_41:
          sub_23B601D18();
          __break(1u);
        }
        v43 = (v40 | (a1 >> 6) & 0x3F) << 8;
        if ((_DWORD)v31)
        {
          v41 = ((v43 | (a1 >> 12) & 0x3F) << 8) | (a1 >> 18);
          v42 = -2122219023;
LABEL_34:
          v39 = v41 + v42;
        }
        else
        {
          v39 = (v43 | (a1 >> 12)) + 8487393;
        }
      }
    }
    __break(1u);
LABEL_36:
    sub_23B5AE16C((uint64_t)v20);
    goto LABEL_41;
  }
  if (!a1)
  {
    __break(1u);
    goto LABEL_19;
  }
  sub_23B601940();
  if ((a3 & 2) == 0)
    goto LABEL_41;
  if (a2 != 36)
  {
    if (a2 == 8)
    {
      v26 = sub_23B6016D0();
      v28 = v27;
      v48 = sub_23B60179C();
      v49 = v29;
      sub_23B5A294C(v26, v28);
      sub_23B5C363C();
      sub_23B5A2990(v26, v28);
      v30 = v48;
      a1 = v49;
      sub_23B5A294C(v48, v49);
      sub_23B6017A8();
      if (v45(v15, 1, v21) == 1)
        goto LABEL_27;
      sub_23B6015D4();
      v32 = v26;
      v33 = v28;
      goto LABEL_16;
    }
    if (a2 == 4)
    {
      v34 = sub_23B6016D0();
      v36 = v35;
      v48 = sub_23B60179C();
      v49 = v37;
      sub_23B5A294C(v34, v36);
      sub_23B5C363C();
      sub_23B5A2990(v34, v36);
      v30 = v48;
      a1 = v49;
      sub_23B5A294C(v48, v49);
      sub_23B6017A8();
      if (v45(v18, 1, v21) == 1)
        goto LABEL_29;
      sub_23B6015D4();
      v32 = v34;
      v33 = v36;
LABEL_16:
      sub_23B5A2990(v32, v33);
      sub_23B5A2990(v30, a1);
      return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v23, v21);
    }
LABEL_40:
    v48 = 0;
    v49 = 0xE000000000000000;
    sub_23B601C40();
    swift_bridgeObjectRelease();
    v48 = 0xD000000000000014;
    v49 = 0x800000023B604B20;
    v47 = a2;
    sub_23B601DE4();
    a1 = (unint64_t)&v48;
    sub_23B601958();
    swift_bridgeObjectRelease();
    goto LABEL_41;
  }
  sub_23B6017CC();
  swift_bridgeObjectRelease();
  if (v45(v12, 1, v21) == 1)
    goto LABEL_28;
  sub_23B6015D4();
  return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v23, v21);
}

uint64_t sub_23B5C3384@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return Identifier.init(stringLiteral:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), *(_QWORD *)(a2 + 16), a3);
}

void sub_23B5C339C(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_23B5C3404()
{
  return sub_23B601718();
}

uint64_t sub_23B5C3598(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_23B601688();
  if (!result || (result = sub_23B6016AC(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_23B6016A0();
      return sub_23B601718();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_23B5C363C()
{
  __asm { BR              X15 }
}

void sub_23B5C3678(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;

  if (a3 < 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (BYTE6(v4) <= a3)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (a3 + 1 < a4)
  {
LABEL_7:
    __break(1u);
    JUMPOUT(0x23B5C36DCLL);
  }
  sub_23B5C339C(a1, a2);
}

void sub_23B5C36EC()
{
  JUMPOUT(0x23B868978);
}

uint64_t sub_23B5C36FC()
{
  return MEMORY[0x24BEE25D0];
}

void sub_23B5C3708()
{
  JUMPOUT(0x23B868978);
}

uint64_t sub_23B5C3718()
{
  return MEMORY[0x24BEE25E8];
}

uint64_t sub_23B5C3724()
{
  return MEMORY[0x24BEE25E0];
}

uint64_t dispatch thunk of ServiceProtocol.id.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of ServiceProtocol.isPrimary.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of ServiceProtocol.discover(characteristicIdentifiers:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 56) + *(_QWORD *)(a3 + 56));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23B58EB10;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of ServiceProtocol.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 64) + *(_QWORD *)(a3 + 64));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23B58F8B8;
  return v9(a1, a2, a3);
}

uint64_t sub_23B5C3834()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_23B60185C();
  __swift_allocate_value_buffer(v0, qword_2542FD2A0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_2542FD2A0);
  if (qword_2542FD4A0 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_2542FD480);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_23B5C38C4(uint64_t a1, void *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  id v16;

  v4 = v2;
  v3[7] = a2;
  v3[8] = v4;
  v3[6] = a1;
  sub_23B601820();
  v3[9] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1C0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = swift_task_alloc();
  v3[10] = v9;
  swift_defaultActor_initialize();
  *(_QWORD *)(v4 + OBJC_IVAR____TtC15FindMyBluetooth12PairingAgent_delegateTrampoline) = 0;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC15FindMyBluetooth12PairingAgent_pairingPeripherals) = MEMORY[0x24BEE4B00];
  sub_23B601814();
  v3[11] = type metadata accessor for PairingAgent();
  sub_23B6015D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v4 + OBJC_IVAR____TtC15FindMyBluetooth12PairingAgent_id, v9, v7);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC15FindMyBluetooth12PairingAgent_underlyingObject) = a2;
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_isPairingCentralManager) == 1)
  {
    v10 = qword_2542FD2C0;
    v11 = a2;
    if (v10 != -1)
      swift_once();
    v12 = sub_23B60185C();
    __swift_project_value_buffer(v12, (uint64_t)qword_2542FD2A0);
    v13 = sub_23B601844();
    v14 = sub_23B601B8C();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_23B583000, v13, v14, "Setting CBPairingAgent delegate", v15, 2u);
      MEMORY[0x23B868A2C](v15, -1, -1);
    }

    *(_BYTE *)(v4 + OBJC_IVAR____TtC15FindMyBluetooth12PairingAgent_isPairingAllowed) = 1;
  }
  else
  {
    *(_BYTE *)(v4 + OBJC_IVAR____TtC15FindMyBluetooth12PairingAgent_isPairingAllowed) = 0;
    v16 = a2;
  }
  return swift_task_switch();
}

uint64_t sub_23B5C3ADC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  objc_class *v3;
  char *v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  void *v15;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(void **)(*(_QWORD *)(v0 + 48) + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_delegateQueue);
  v3 = (objc_class *)type metadata accessor for DelegateTrampoline_CBPairingAgentDelegate();
  v4 = (char *)objc_allocWithZone(v3);
  swift_weakInit();
  *(_QWORD *)&v4[OBJC_IVAR____TtC15FindMyBluetoothP33_FB9F492088B4C388E3479FD29311B1A941DelegateTrampoline_CBPairingAgentDelegate_delegateQueue] = v2;
  swift_weakAssign();
  *(_QWORD *)(v0 + 16) = v4;
  *(_QWORD *)(v0 + 24) = v3;
  v5 = v2;
  v6 = objc_msgSendSuper2((objc_super *)(v0 + 16), sel_init);
  v7 = *(void **)(v1 + OBJC_IVAR____TtC15FindMyBluetooth12PairingAgent_delegateTrampoline);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15FindMyBluetooth12PairingAgent_delegateTrampoline) = v6;

  if (qword_2542FD2C0 != -1)
    swift_once();
  v8 = sub_23B60185C();
  __swift_project_value_buffer(v8, (uint64_t)qword_2542FD2A0);
  swift_retain_n();
  v9 = sub_23B601844();
  v10 = sub_23B601B68();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = *(_QWORD *)(v0 + 88);
    v12 = *(_QWORD *)(v0 + 64);
    v18 = *(void **)(v0 + 56);
    v13 = (uint8_t *)swift_slowAlloc();
    v17 = swift_slowAlloc();
    *(_DWORD *)v13 = 136315138;
    v19 = v17;
    v20 = 60;
    v21 = 0xE100000000000000;
    *(_QWORD *)(v0 + 32) = v12;
    v14 = sub_23B5884D4(&qword_256A357C0, (uint64_t (*)(uint64_t))type metadata accessor for PairingAgent, (uint64_t)&unk_23B6085EC);
    swift_retain();
    sub_23B601DCC();
    sub_23B601958();
    swift_bridgeObjectRelease();
    sub_23B601958();
    MEMORY[0x23B86839C](v11, v14);
    sub_23B601958();
    swift_bridgeObjectRelease();
    sub_23B601958();
    swift_release();
    *(_QWORD *)(v0 + 40) = sub_23B58E160(v20, v21, &v19);
    sub_23B601BC8();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_23B583000, v9, v10, "[%s] init", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v17, -1, -1);
    MEMORY[0x23B868A2C](v13, -1, -1);

  }
  else
  {
    v15 = *(void **)(v0 + 56);
    swift_release_n();

  }
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 64));
}

uint64_t sub_23B5C3E04()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t v7;
  void *v8;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  if (qword_2542FD2C0 != -1)
    swift_once();
  v1 = sub_23B60185C();
  __swift_project_value_buffer(v1, (uint64_t)qword_2542FD2A0);
  swift_retain_n();
  v2 = sub_23B601844();
  v3 = sub_23B601B68();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = *(_QWORD *)(v0 + 88);
    v5 = *(_QWORD *)(v0 + 64);
    v11 = *(void **)(v0 + 56);
    v6 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    *(_DWORD *)v6 = 136315138;
    v12 = v10;
    v13 = 60;
    v14 = 0xE100000000000000;
    *(_QWORD *)(v0 + 32) = v5;
    v7 = sub_23B5884D4(&qword_256A357C0, (uint64_t (*)(uint64_t))type metadata accessor for PairingAgent, (uint64_t)&unk_23B6085EC);
    swift_retain();
    sub_23B601DCC();
    sub_23B601958();
    swift_bridgeObjectRelease();
    sub_23B601958();
    MEMORY[0x23B86839C](v4, v7);
    sub_23B601958();
    swift_bridgeObjectRelease();
    sub_23B601958();
    swift_release();
    *(_QWORD *)(v0 + 40) = sub_23B58E160(v13, v14, &v12);
    sub_23B601BC8();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_23B583000, v2, v3, "[%s] init", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v10, -1, -1);
    MEMORY[0x23B868A2C](v6, -1, -1);

  }
  else
  {
    v8 = *(void **)(v0 + 56);
    swift_release_n();

  }
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 64));
}

uint64_t sub_23B5C40A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = v0;
  if (qword_2542FD2C0 != -1)
    swift_once();
  v2 = sub_23B60185C();
  __swift_project_value_buffer(v2, (uint64_t)qword_2542FD2A0);
  swift_retain_n();
  v3 = sub_23B601844();
  v4 = sub_23B601B68();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    *(_DWORD *)v5 = 136315138;
    v12 = v6;
    v7 = type metadata accessor for PairingAgent();
    v8 = sub_23B5884D4(&qword_256A357C0, (uint64_t (*)(uint64_t))type metadata accessor for PairingAgent, (uint64_t)&unk_23B6085EC);
    swift_retain();
    sub_23B601DCC();
    sub_23B601958();
    swift_bridgeObjectRelease();
    sub_23B601958();
    MEMORY[0x23B86839C](v7, v8);
    sub_23B601958();
    swift_bridgeObjectRelease();
    sub_23B601958();
    swift_release();
    sub_23B58E160(60, 0xE100000000000000, &v12);
    sub_23B601BC8();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_23B583000, v3, v4, "[%s] deinit", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v6, -1, -1);
    MEMORY[0x23B868A2C](v5, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  v9 = v0 + OBJC_IVAR____TtC15FindMyBluetooth12PairingAgent_id;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1C0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);

  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v1;
}

uint64_t sub_23B5C435C()
{
  sub_23B5C40A4();
  return swift_defaultActor_deallocate();
}

uint64_t sub_23B5C4374()
{
  return type metadata accessor for PairingAgent();
}

uint64_t type metadata accessor for PairingAgent()
{
  uint64_t result;

  result = qword_2542FD2C8;
  if (!qword_2542FD2C8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23B5C43B8()
{
  unint64_t v0;

  sub_23B5C574C();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_23B5C4460(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  v2[14] = a1;
  v2[15] = v1;
  v2[16] = *v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35810);
  v2[17] = swift_task_alloc();
  v3 = sub_23B601820();
  v2[18] = v3;
  v2[19] = *(_QWORD *)(v3 - 8);
  v2[20] = swift_task_alloc();
  v2[21] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5C44FC()
{
  uint64_t v0;

  if (*(_BYTE *)(*(_QWORD *)(v0 + 120) + OBJC_IVAR____TtC15FindMyBluetooth12PairingAgent_isPairingAllowed) == 1)
    return swift_task_switch();
  type metadata accessor for CentralManager.Error();
  sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
  swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5C45E0()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(*(_QWORD *)(v0 + 112) + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_underlyingObject);
  *(_QWORD *)(v0 + 176) = v1;
  objc_msgSend(v1, sel_state);
  return swift_task_switch();
}

uint64_t sub_23B5C4698()
{
  uint64_t v0;

  type metadata accessor for CentralManager.Error();
  sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
  swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5C4740()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t (*v3)(void);
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t);
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = v0[22];
  v2 = *(void **)(v0[15] + OBJC_IVAR____TtC15FindMyBluetooth12PairingAgent_underlyingObject);
  v0[23] = v2;
  if ((objc_msgSend(v2, sel_isPeerPaired_, v1) & 1) != 0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v3 = (uint64_t (*)(void))v0[1];
    return v3();
  }
  v4 = v0[15];
  v0[24] = OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_id;
  v0[25] = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  sub_23B6015BC();
  v5 = OBJC_IVAR____TtC15FindMyBluetooth12PairingAgent_pairingPeripherals;
  v0[26] = OBJC_IVAR____TtC15FindMyBluetooth12PairingAgent_pairingPeripherals;
  v6 = (uint64_t *)(v4 + v5);
  swift_beginAccess();
  if (*(_QWORD *)(*v6 + 16))
  {
    v7 = v0[21];
    swift_bridgeObjectRetain();
    sub_23B58ED1C(v7);
    if ((v8 & 1) != 0)
    {
      v9 = v0[21];
      v10 = v0[18];
      v11 = v0[19];
      swift_retain();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
      swift_release();
      type metadata accessor for CentralManager.Error();
      sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      v3 = (uint64_t (*)(void))v0[1];
      return v3();
    }
    swift_bridgeObjectRelease();
  }
  v14 = v0[20];
  v13 = v0[21];
  v22 = v0[16];
  v15 = v0[14];
  v20 = v0[18];
  v21 = v0[15];
  v16 = *(void (**)(uint64_t))(v0[19] + 8);
  v0[27] = v16;
  v16(v13);
  sub_23B6015BC();
  swift_beginAccess();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v23 = *v6;
  *v6 = 0x8000000000000000;
  sub_23B5B8DCC(v15, v14, isUniquelyReferenced_nonNull_native);
  *v6 = v23;
  swift_bridgeObjectRelease();
  ((void (*)(uint64_t, uint64_t))v16)(v14, v20);
  swift_endAccess();
  objc_msgSend(v2, sel_setDelegate_, *(_QWORD *)(v21 + OBJC_IVAR____TtC15FindMyBluetooth12PairingAgent_delegateTrampoline));
  sub_23B5884D4((unint64_t *)&unk_256A35798, (uint64_t (*)(uint64_t))type metadata accessor for PairingAgent, (uint64_t)&unk_23B608698);
  v18 = (_QWORD *)swift_task_alloc();
  v0[28] = v18;
  v18[2] = v21;
  v18[3] = v15;
  v18[4] = v22;
  v19 = (_QWORD *)swift_task_alloc();
  v0[29] = v19;
  *v19 = v0;
  v19[1] = sub_23B5C4A98;
  return sub_23B601E14();
}

uint64_t sub_23B5C4A98()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 240) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B5C4B0C()
{
  return swift_task_switch();
}

uint64_t sub_23B5C4B20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD510);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v1, 1, 1, v3);
  v4 = v2 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_pairingContinuation;
  swift_beginAccess();
  sub_23B58EC70(v1, v4);
  swift_endAccess();
  return swift_task_switch();
}

uint64_t sub_23B5C4BC8()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 216);
  v2 = *(void **)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 144);
  sub_23B6015BC();
  swift_beginAccess();
  sub_23B5E24AC(v3);
  v1(v3, v4);
  swift_endAccess();
  swift_release();
  objc_msgSend(v2, sel_setDelegate_, 0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5C4CA8()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5C4D00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[7] = a5;
  v6[8] = a6;
  v6[6] = a4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35810);
  v6[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5C4D64()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = v0[8];
  v1 = v0[9];
  v3 = v0[7];
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD510);
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v1, v3, v4);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v1, 0, 1, v4);
  v6 = v2 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_pairingContinuation;
  swift_beginAccess();
  sub_23B58EC70(v1, v6);
  swift_endAccess();
  return swift_task_switch();
}

uint64_t sub_23B5C4E34()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  uint64_t v5;
  uint8_t *v6;
  _QWORD *v7;
  void *v8;
  id v9;
  uint64_t v10;

  if (qword_2542FD2C0 != -1)
    swift_once();
  v1 = sub_23B60185C();
  __swift_project_value_buffer(v1, (uint64_t)qword_2542FD2A0);
  swift_retain_n();
  v2 = sub_23B601844();
  v3 = sub_23B601B8C();
  v4 = os_log_type_enabled(v2, v3);
  v5 = v0[8];
  if (v4)
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v6 = 138412290;
    v8 = *(void **)(v5 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_underlyingObject);
    v0[5] = v8;
    v9 = v8;
    sub_23B601BC8();
    *v7 = v8;
    swift_release_n();
    _os_log_impl(&dword_23B583000, v2, v3, "Calling pairPeer() on %@", v6, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35D50);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v7, -1, -1);
    MEMORY[0x23B868A2C](v6, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  v10 = OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_underlyingObject;
  v0[10] = *(_QWORD *)(v0[6] + OBJC_IVAR____TtC15FindMyBluetooth12PairingAgent_underlyingObject);
  v0[11] = v10;
  return swift_task_switch();
}

uint64_t sub_23B5C5014()
{
  _QWORD *v0;

  v0[12] = *(_QWORD *)(v0[8] + v0[11]);
  return swift_task_switch();
}

uint64_t sub_23B5C5038()
{
  uint64_t v0;

  objc_msgSend(*(id *)(v0 + 80), sel_pairPeer_, *(_QWORD *)(v0 + 96));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5C507C(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  v2[14] = a1;
  v2[15] = v1;
  v2[16] = *v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35810);
  v2[17] = swift_task_alloc();
  v3 = sub_23B601820();
  v2[18] = v3;
  v2[19] = *(_QWORD *)(v3 - 8);
  v2[20] = swift_task_alloc();
  v2[21] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5C5118()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t);
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = v0[15];
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC15FindMyBluetooth12PairingAgent_isPairingAllowed) != 1)
  {
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    swift_allocError();
    goto LABEL_7;
  }
  v2 = v0[14];
  v3 = *(void **)(v1 + OBJC_IVAR____TtC15FindMyBluetooth12PairingAgent_underlyingObject);
  v0[22] = v3;
  if (!objc_msgSend(v3, sel_isPeerPaired_, *(_QWORD *)(v2 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_underlyingObject)))
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v12 = (uint64_t (*)(void))v0[1];
    return v12();
  }
  v4 = v0[15];
  v0[23] = OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_id;
  v0[24] = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  sub_23B6015BC();
  v5 = OBJC_IVAR____TtC15FindMyBluetooth12PairingAgent_pairingPeripherals;
  v0[25] = OBJC_IVAR____TtC15FindMyBluetooth12PairingAgent_pairingPeripherals;
  v6 = (uint64_t *)(v4 + v5);
  swift_beginAccess();
  if (*(_QWORD *)(*v6 + 16))
  {
    v7 = v0[21];
    swift_bridgeObjectRetain();
    sub_23B58ED1C(v7);
    if ((v8 & 1) != 0)
    {
      v9 = v0[21];
      v10 = v0[18];
      v11 = v0[19];
      swift_retain();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
      swift_release();
      type metadata accessor for CentralManager.Error();
      sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
      swift_allocError();
LABEL_7:
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      v12 = (uint64_t (*)(void))v0[1];
      return v12();
    }
    swift_bridgeObjectRelease();
  }
  v15 = v0[20];
  v14 = v0[21];
  v23 = v0[16];
  v16 = v0[14];
  v21 = v0[18];
  v22 = v0[15];
  v17 = *(void (**)(uint64_t))(v0[19] + 8);
  v0[26] = v17;
  v17(v14);
  sub_23B6015BC();
  swift_beginAccess();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v24 = *v6;
  *v6 = 0x8000000000000000;
  sub_23B5B8DCC(v16, v15, isUniquelyReferenced_nonNull_native);
  *v6 = v24;
  swift_bridgeObjectRelease();
  ((void (*)(uint64_t, uint64_t))v17)(v15, v21);
  swift_endAccess();
  objc_msgSend(v3, sel_setDelegate_, *(_QWORD *)(v22 + OBJC_IVAR____TtC15FindMyBluetooth12PairingAgent_delegateTrampoline));
  sub_23B5884D4((unint64_t *)&unk_256A35798, (uint64_t (*)(uint64_t))type metadata accessor for PairingAgent, (uint64_t)&unk_23B608698);
  v19 = (_QWORD *)swift_task_alloc();
  v0[27] = v19;
  v19[2] = v22;
  v19[3] = v16;
  v19[4] = v23;
  v20 = (_QWORD *)swift_task_alloc();
  v0[28] = v20;
  *v20 = v0;
  v20[1] = sub_23B5C54E4;
  return sub_23B601E14();
}

uint64_t sub_23B5C54E4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 232) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B5C5558()
{
  return swift_task_switch();
}

uint64_t sub_23B5C556C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD510);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v1, 1, 1, v3);
  v4 = v2 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_pairingContinuation;
  swift_beginAccess();
  sub_23B58EC70(v1, v4);
  swift_endAccess();
  return swift_task_switch();
}

uint64_t sub_23B5C5614()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 208);
  v2 = *(void **)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 144);
  sub_23B6015BC();
  swift_beginAccess();
  sub_23B5E24AC(v3);
  v1(v3, v4);
  swift_endAccess();
  swift_release();
  objc_msgSend(v2, sel_setDelegate_, 0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5C56F4()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23B5C574C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256A356F8)
  {
    type metadata accessor for PairingAgent();
    v0 = sub_23B6015C8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256A356F8);
  }
}

uint64_t sub_23B5C57A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v24 = a4;
  v25 = a6;
  v23 = a3;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD510);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD530);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23B601A78();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  v16 = sub_23B5884D4((unint64_t *)&unk_256A35798, (uint64_t (*)(uint64_t))type metadata accessor for PairingAgent, (uint64_t)&unk_23B608698);
  v17 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v18 = (v10 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = (char *)swift_allocObject();
  *((_QWORD *)v19 + 2) = a2;
  *((_QWORD *)v19 + 3) = v16;
  *((_QWORD *)v19 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v19[v17], v11, v8);
  v20 = v24;
  *(_QWORD *)&v19[v18] = v23;
  *(_QWORD *)&v19[(v18 + 15) & 0xFFFFFFFFFFFFFFF8] = v20;
  swift_retain_n();
  swift_retain();
  sub_23B5CD0FC((uint64_t)v14, v25, (uint64_t)v19);
  return swift_release();
}

uint64_t sub_23B5C5944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[7] = a5;
  v6[8] = a6;
  v6[6] = a4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35810);
  v6[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5C59A8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = v0[8];
  v1 = v0[9];
  v3 = v0[7];
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD510);
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v1, v3, v4);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v1, 0, 1, v4);
  v6 = v2 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_pairingContinuation;
  swift_beginAccess();
  sub_23B58EC70(v1, v6);
  swift_endAccess();
  return swift_task_switch();
}

uint64_t sub_23B5C5A78()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  uint64_t v5;
  uint8_t *v6;
  _QWORD *v7;
  void *v8;
  id v9;
  uint64_t v10;

  if (qword_2542FD2C0 != -1)
    swift_once();
  v1 = sub_23B60185C();
  __swift_project_value_buffer(v1, (uint64_t)qword_2542FD2A0);
  swift_retain_n();
  v2 = sub_23B601844();
  v3 = sub_23B601B8C();
  v4 = os_log_type_enabled(v2, v3);
  v5 = v0[8];
  if (v4)
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v6 = 138412290;
    v8 = *(void **)(v5 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_underlyingObject);
    v0[5] = v8;
    v9 = v8;
    sub_23B601BC8();
    *v7 = v8;
    swift_release_n();
    _os_log_impl(&dword_23B583000, v2, v3, "Calling unpairPeer() on %@", v6, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35D50);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v7, -1, -1);
    MEMORY[0x23B868A2C](v6, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  v10 = OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_underlyingObject;
  v0[10] = *(_QWORD *)(v0[6] + OBJC_IVAR____TtC15FindMyBluetooth12PairingAgent_underlyingObject);
  v0[11] = v10;
  return swift_task_switch();
}

uint64_t sub_23B5C5C58()
{
  _QWORD *v0;

  v0[12] = *(_QWORD *)(v0[8] + v0[11]);
  return swift_task_switch();
}

uint64_t sub_23B5C5C7C()
{
  uint64_t v0;

  objc_msgSend(*(id *)(v0 + 80), sel_unpairPeer_, *(_QWORD *)(v0 + 96));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5C5CC0@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC15FindMyBluetooth12PairingAgent_id;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1C0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_23B5C5D0C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  return swift_task_switch();
}

uint64_t sub_23B5C5D24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 24);
  v1 = type metadata accessor for PairingAgent();
  v2 = sub_23B5884D4(&qword_256A357C0, (uint64_t (*)(uint64_t))type metadata accessor for PairingAgent, (uint64_t)&unk_23B6085EC);
  sub_23B601DCC();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  MEMORY[0x23B86839C](v1, v2);
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  return (*(uint64_t (**)(uint64_t, unint64_t))(v0 + 8))(60, 0xE100000000000000);
}

uint64_t sub_23B5C5E08(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = type metadata accessor for PairingAgent();
  sub_23B601DCC();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  MEMORY[0x23B86839C](v3, a2);
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  return 60;
}

uint64_t sub_23B5C5EC4(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  id v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  id v18;
  id v19;
  uint64_t v20;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD530);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23B601880();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (uint64_t *)((char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *(void **)(v2
                 + OBJC_IVAR____TtC15FindMyBluetoothP33_FB9F492088B4C388E3479FD29311B1A941DelegateTrampoline_CBPairingAgentDelegate_delegateQueue);
  *v11 = v12;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BEE5610], v8);
  v13 = v12;
  LOBYTE(v12) = sub_23B60188C();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v9 + 8))(v11, v8);
  if ((v12 & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  result = swift_weakLoadStrong();
  if (!result)
    return result;
  if (!a1)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  v15 = result;
  if (*(void **)(result + OBJC_IVAR____TtC15FindMyBluetooth12PairingAgent_underlyingObject) != a1)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v16 = sub_23B601A78();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v7, 1, 1, v16);
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = 0;
  v17[3] = 0;
  v17[4] = v15;
  v17[5] = a1;
  v17[6] = a2;
  v18 = a1;
  v19 = a2;
  sub_23B5CD0FC((uint64_t)v7, (uint64_t)&unk_256A35848, (uint64_t)v17);
  return swift_release();
}

uint64_t sub_23B5C6064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  return swift_task_switch();
}

void sub_23B5C6080()
{
  _QWORD *v0;
  _QWORD *v1;
  void (*v2)(uint64_t);

  if (v0[3])
  {
    v2 = (void (*)(uint64_t))((char *)&dword_256A35850 + dword_256A35850);
    v1 = (_QWORD *)swift_task_alloc();
    v0[5] = v1;
    *v1 = v0;
    v1[1] = sub_23B5C60F0;
    v2(v0[4]);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_23B5C60F0()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23B5C61A0(void *a1, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  id v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD530);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23B601880();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (uint64_t *)((char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = *(void **)(v3
                 + OBJC_IVAR____TtC15FindMyBluetoothP33_FB9F492088B4C388E3479FD29311B1A941DelegateTrampoline_CBPairingAgentDelegate_delegateQueue);
  *v13 = v14;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x24BEE5610], v10);
  v15 = v14;
  LOBYTE(v14) = sub_23B60188C();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v11 + 8))(v13, v10);
  if ((v14 & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  result = swift_weakLoadStrong();
  if (!result)
    return result;
  if (!a1)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  v17 = result;
  if (*(void **)(result + OBJC_IVAR____TtC15FindMyBluetooth12PairingAgent_underlyingObject) != a1)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v18 = sub_23B601A78();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v9, 1, 1, v18);
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = 0;
  v19[3] = 0;
  v19[4] = v17;
  v19[5] = a1;
  v19[6] = a2;
  v19[7] = a3;
  v20 = a1;
  v21 = a2;
  v22 = a3;
  sub_23B5CD0FC((uint64_t)v9, (uint64_t)&unk_256A35828, (uint64_t)v19);
  return swift_release();
}

uint64_t sub_23B5C6354(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  return swift_task_switch();
}

void sub_23B5C6370()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  char *v3;

  if (v0[3])
  {
    v1 = v0[4];
    if (v1)
    {
      v3 = (char *)&dword_256A35830 + dword_256A35830;
      v2 = (_QWORD *)swift_task_alloc();
      v0[6] = v2;
      *v2 = v0;
      v2[1] = sub_23B5C63F0;
      ((void (*)(uint64_t, _QWORD))v3)(v1, v0[5]);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_23B5C63F0()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23B5C64BC(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  id v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  id v18;
  id v19;
  uint64_t v20;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD530);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23B601880();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (uint64_t *)((char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *(void **)(v2
                 + OBJC_IVAR____TtC15FindMyBluetoothP33_FB9F492088B4C388E3479FD29311B1A941DelegateTrampoline_CBPairingAgentDelegate_delegateQueue);
  *v11 = v12;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BEE5610], v8);
  v13 = v12;
  LOBYTE(v12) = sub_23B60188C();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v9 + 8))(v11, v8);
  if ((v12 & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  result = swift_weakLoadStrong();
  if (!result)
    return result;
  if (!a1)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  v15 = result;
  if (*(void **)(result + OBJC_IVAR____TtC15FindMyBluetooth12PairingAgent_underlyingObject) != a1)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v16 = sub_23B601A78();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v7, 1, 1, v16);
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = 0;
  v17[3] = 0;
  v17[4] = v15;
  v17[5] = a1;
  v17[6] = a2;
  v18 = a2;
  v19 = a1;
  sub_23B5CD0FC((uint64_t)v7, (uint64_t)&unk_256A35800, (uint64_t)v17);
  return swift_release();
}

uint64_t sub_23B5C665C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  return swift_task_switch();
}

void sub_23B5C6678()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  void (*v3)(uint64_t);

  if (v0[3])
  {
    v1 = v0[4];
    if (v1)
    {
      v3 = (void (*)(uint64_t))((char *)&dword_256A35808 + dword_256A35808);
      v2 = (_QWORD *)swift_task_alloc();
      v0[5] = v2;
      *v2 = v0;
      v2[1] = sub_23B5C60F0;
      v3(v1);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_23B5C675C(void *a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  id v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD530);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23B601880();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (uint64_t *)((char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = *(void **)(v4
                 + OBJC_IVAR____TtC15FindMyBluetoothP33_FB9F492088B4C388E3479FD29311B1A941DelegateTrampoline_CBPairingAgentDelegate_delegateQueue);
  *v15 = v16;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x24BEE5610], v12);
  v17 = v16;
  LOBYTE(v16) = sub_23B60188C();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v13 + 8))(v15, v12);
  if ((v16 & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  result = swift_weakLoadStrong();
  if (!result)
    return result;
  if (!a1)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  v19 = result;
  if (*(void **)(result + OBJC_IVAR____TtC15FindMyBluetooth12PairingAgent_underlyingObject) != a1)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v20 = sub_23B601A78();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v11, 1, 1, v20);
  v21 = (_QWORD *)swift_allocObject();
  v21[2] = 0;
  v21[3] = 0;
  v21[4] = v19;
  v21[5] = a1;
  v21[6] = a2;
  v21[7] = a3;
  v21[8] = a4;
  v22 = a4;
  v23 = a1;
  v24 = a2;
  sub_23B5CD0FC((uint64_t)v11, (uint64_t)&unk_256A357E0, (uint64_t)v21);
  return swift_release();
}

uint64_t sub_23B5C6914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  v8[5] = a7;
  v8[6] = a8;
  v8[3] = a5;
  v8[4] = a6;
  v8[2] = a4;
  return swift_task_switch();
}

void sub_23B5C6934()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  _QWORD *v3;
  char *v4;

  if (!v0[3])
  {
    __break(1u);
    goto LABEL_6;
  }
  v1 = v0[4];
  if (!v1)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v2 = (void *)v0[6];
  if (v2)
  {
    objc_msgSend(v2, sel_integerValue);
    v4 = (char *)&dword_256A357E8 + dword_256A357E8;
    v3 = (_QWORD *)swift_task_alloc();
    v0[7] = v3;
    *v3 = v0;
    v3[1] = sub_23B5C69CC;
    ((void (*)(uint64_t, _QWORD))v4)(v1, v0[5]);
    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_23B5C69CC()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

id sub_23B5C6AD4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DelegateTrampoline_CBPairingAgentDelegate();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for DelegateTrampoline_CBPairingAgentDelegate()
{
  return objc_opt_self();
}

uint64_t sub_23B5C6B60()
{
  return sub_23B5884D4((unint64_t *)&unk_256A35798, (uint64_t (*)(uint64_t))type metadata accessor for PairingAgent, (uint64_t)&unk_23B608698);
}

unint64_t sub_23B5C6B90()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A357A8;
  if (!qword_256A357A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542FD1C0);
    result = MEMORY[0x23B868978](MEMORY[0x24BE316D0], v1);
    atomic_store(result, (unint64_t *)&qword_256A357A8);
  }
  return result;
}

uint64_t sub_23B5C6BDC(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_23B5884D4(&qword_256A357B8, (uint64_t (*)(uint64_t))type metadata accessor for PairingAgent, (uint64_t)&unk_23B608614);
  a1[2] = sub_23B5884D4(&qword_256A357C0, (uint64_t (*)(uint64_t))type metadata accessor for PairingAgent, (uint64_t)&unk_23B6085EC);
  result = sub_23B5884D4((unint64_t *)&unk_256A357C8, (uint64_t (*)(uint64_t))type metadata accessor for PairingAgent, (uint64_t)&unk_23B608644);
  a1[3] = result;
  return result;
}

uint64_t sub_23B5C6C54()
{
  id *v0;

  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_23B5C6C98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;
  __int128 v6;

  v5 = *(_OWORD *)(v0 + 48);
  v6 = *(_OWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_23B587FA4;
  *(_QWORD *)(v3 + 48) = v2;
  *(_OWORD *)(v3 + 16) = v6;
  *(_OWORD *)(v3 + 32) = v5;
  return swift_task_switch();
}

uint64_t sub_23B5C6D10(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[10] = a1;
  v2[11] = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35810);
  v2[12] = swift_task_alloc();
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD510);
  v2[13] = v3;
  v2[14] = *(_QWORD *)(v3 - 8);
  v2[15] = swift_task_alloc();
  v4 = sub_23B601820();
  v2[16] = v4;
  v2[17] = *(_QWORD *)(v4 - 8);
  v2[18] = swift_task_alloc();
  v2[19] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5C6DD0()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v12)(uint64_t, uint64_t);
  void *v13;
  uint64_t v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint8_t *v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  void *v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = objc_msgSend(*(id *)(v0 + 80), sel_identifier);
  sub_23B6017FC();

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC15FindMyBluetooth12PairingAgent_pairingPeripherals);
  swift_beginAccess();
  v4 = *v3;
  if (*(_QWORD *)(*v3 + 16))
  {
    v5 = *(_QWORD *)(v0 + 152);
    swift_bridgeObjectRetain();
    v6 = sub_23B58ED1C(v5);
    if ((v7 & 1) != 0)
    {
      v8 = *(_QWORD *)(v0 + 152);
      v9 = *(_QWORD *)(v0 + 128);
      v10 = *(_QWORD *)(v0 + 136);
      *(_QWORD *)(v0 + 160) = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v6);
      swift_retain();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
      return swift_task_switch();
    }
    swift_bridgeObjectRelease();
  }
  v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 136) + 8);
  v12(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 128));
  if (qword_2542FD2C0 != -1)
    swift_once();
  v13 = *(void **)(v0 + 80);
  v14 = sub_23B60185C();
  __swift_project_value_buffer(v14, (uint64_t)qword_2542FD2A0);
  v15 = v13;
  v16 = sub_23B601844();
  v17 = sub_23B601B74();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = *(_QWORD *)(v0 + 144);
    v19 = *(_QWORD *)(v0 + 128);
    v20 = *(void **)(v0 + 80);
    v27 = v12;
    v21 = (uint8_t *)swift_slowAlloc();
    v28 = swift_slowAlloc();
    v29 = v28;
    *(_DWORD *)v21 = 136446210;
    v22 = objc_msgSend(v20, sel_identifier);
    sub_23B6017FC();

    sub_23B5884D4((unint64_t *)&qword_256A347A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v23 = sub_23B601DE4();
    v25 = v24;
    v27(v18, v19);
    *(_QWORD *)(v0 + 64) = sub_23B58E160(v23, v25, &v29);
    sub_23B601BC8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23B583000, v16, v17, "peerDidComplete for unknown peripheral: %{public}s!", v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v28, -1, -1);
    MEMORY[0x23B868A2C](v21, -1, -1);
  }
  else
  {
    v26 = *(void **)(v0 + 80);

  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5C7100()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 160) + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_pairingContinuation;
  swift_beginAccess();
  sub_23B58E7A0(v2, v1);
  return swift_task_switch();
}

uint64_t sub_23B5C7174()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 96);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_23B5C8C0C(v3);
    if (qword_2542FD2C0 != -1)
      swift_once();
    v4 = sub_23B60185C();
    __swift_project_value_buffer(v4, (uint64_t)qword_2542FD2A0);
    v5 = sub_23B601844();
    v6 = sub_23B601B74();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_23B583000, v5, v6, "peerDidComplete pairing missing continuation!", v7, 2u);
      MEMORY[0x23B868A2C](v7, -1, -1);

      swift_release();
    }
    else
    {
      swift_release();

    }
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 32))(*(_QWORD *)(v0 + 120), v3, v1);
    if (qword_2542FD2C0 != -1)
      swift_once();
    v8 = sub_23B60185C();
    __swift_project_value_buffer(v8, (uint64_t)qword_2542FD2A0);
    swift_retain_n();
    v9 = sub_23B601844();
    v10 = sub_23B601B5C();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      v20 = v12;
      *(_DWORD *)v11 = 136315138;
      swift_retain();
      v13 = sub_23B598B88();
      v15 = v14;
      swift_release();
      *(_QWORD *)(v0 + 72) = sub_23B58E160(v13, v15, &v20);
      sub_23B601BC8();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_23B583000, v9, v10, "Pairing completed for %s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B868A2C](v12, -1, -1);
      MEMORY[0x23B868A2C](v11, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    v17 = *(_QWORD *)(v0 + 112);
    v16 = *(_QWORD *)(v0 + 120);
    v18 = *(_QWORD *)(v0 + 104);
    sub_23B601A30();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5C74A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[14] = a2;
  v3[15] = v2;
  v3[13] = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35810);
  v3[16] = swift_task_alloc();
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD510);
  v3[17] = v4;
  v3[18] = *(_QWORD *)(v4 - 8);
  v3[19] = swift_task_alloc();
  v5 = sub_23B601820();
  v3[20] = v5;
  v3[21] = *(_QWORD *)(v5 - 8);
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5C7564()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v12)(uint64_t, uint64_t);
  void *v13;
  uint64_t v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint8_t *v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  void *v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = objc_msgSend(*(id *)(v0 + 104), sel_identifier);
  sub_23B6017FC();

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC15FindMyBluetooth12PairingAgent_pairingPeripherals);
  swift_beginAccess();
  v4 = *v3;
  if (*(_QWORD *)(*v3 + 16))
  {
    v5 = *(_QWORD *)(v0 + 184);
    swift_bridgeObjectRetain();
    v6 = sub_23B58ED1C(v5);
    if ((v7 & 1) != 0)
    {
      v8 = *(_QWORD *)(v0 + 184);
      v9 = *(_QWORD *)(v0 + 160);
      v10 = *(_QWORD *)(v0 + 168);
      *(_QWORD *)(v0 + 192) = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v6);
      swift_retain();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
      return swift_task_switch();
    }
    swift_bridgeObjectRelease();
  }
  v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 168) + 8);
  v12(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 160));
  if (qword_2542FD2C0 != -1)
    swift_once();
  v13 = *(void **)(v0 + 104);
  v14 = sub_23B60185C();
  __swift_project_value_buffer(v14, (uint64_t)qword_2542FD2A0);
  v15 = v13;
  v16 = sub_23B601844();
  v17 = sub_23B601B74();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = *(_QWORD *)(v0 + 176);
    v19 = *(_QWORD *)(v0 + 160);
    v20 = *(void **)(v0 + 104);
    v27 = v12;
    v21 = (uint8_t *)swift_slowAlloc();
    v28 = swift_slowAlloc();
    v29 = v28;
    *(_DWORD *)v21 = 136446210;
    v22 = objc_msgSend(v20, sel_identifier);
    sub_23B6017FC();

    sub_23B5884D4((unint64_t *)&qword_256A347A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v23 = sub_23B601DE4();
    v25 = v24;
    v27(v18, v19);
    *(_QWORD *)(v0 + 64) = sub_23B58E160(v23, v25, &v29);
    sub_23B601BC8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23B583000, v16, v17, "peerDidFailToCompletePairing for unknown peripheral: %{public}s!", v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v28, -1, -1);
    MEMORY[0x23B868A2C](v21, -1, -1);
  }
  else
  {
    v26 = *(void **)(v0 + 104);

  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5C7898()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 192) + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_pairingContinuation;
  swift_beginAccess();
  sub_23B58E7A0(v2, v1);
  return swift_task_switch();
}

uint64_t sub_23B5C790C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 128);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_23B5C8C0C(v3);
    if (qword_2542FD2C0 != -1)
      swift_once();
    v4 = sub_23B60185C();
    __swift_project_value_buffer(v4, (uint64_t)qword_2542FD2A0);
    v5 = sub_23B601844();
    v6 = sub_23B601B74();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_23B583000, v5, v6, "peerDidFailToCompletePairing pairing missing continuation!", v7, 2u);
      MEMORY[0x23B868A2C](v7, -1, -1);

      swift_release();
    }
    else
    {
      swift_release();

    }
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 112);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 32))(*(_QWORD *)(v0 + 152), v3, v1);
    if (v8)
    {
      v9 = *(void **)(v0 + 112);
      v10 = v9;
      if (qword_2542FD2C0 != -1)
        swift_once();
      v11 = sub_23B60185C();
      __swift_project_value_buffer(v11, (uint64_t)qword_2542FD2A0);
      swift_retain();
      v12 = v9;
      swift_retain();
      v13 = v9;
      v14 = sub_23B601844();
      v15 = sub_23B601B74();
      if (os_log_type_enabled(v14, v15))
      {
        v16 = swift_slowAlloc();
        v36 = (_QWORD *)swift_slowAlloc();
        v37 = swift_slowAlloc();
        v38 = v37;
        *(_DWORD *)v16 = 136315394;
        swift_retain();
        v17 = sub_23B598B88();
        v19 = v18;
        swift_release();
        *(_QWORD *)(v0 + 88) = sub_23B58E160(v17, v19, &v38);
        sub_23B601BC8();
        swift_bridgeObjectRelease();
        swift_release_n();
        *(_WORD *)(v16 + 12) = 2112;
        v20 = sub_23B6016C4();
        *(_QWORD *)(v0 + 96) = v20;
        sub_23B601BC8();
        *v36 = v20;

        _os_log_impl(&dword_23B583000, v14, v15, "Pairing failed for %s, error: %@", (uint8_t *)v16, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35D50);
        swift_arrayDestroy();
        MEMORY[0x23B868A2C](v36, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x23B868A2C](v37, -1, -1);
        MEMORY[0x23B868A2C](v16, -1, -1);
      }
      else
      {
        swift_release_n();

      }
      v30 = *(_QWORD *)(v0 + 144);
      v29 = *(_QWORD *)(v0 + 152);
      v31 = *(_QWORD *)(v0 + 136);
      *(_QWORD *)(v0 + 80) = v9;
      sub_23B601A24();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v31);
    }
    else
    {
      if (qword_2542FD2C0 != -1)
        swift_once();
      v21 = sub_23B60185C();
      __swift_project_value_buffer(v21, (uint64_t)qword_2542FD2A0);
      swift_retain_n();
      v22 = sub_23B601844();
      v23 = sub_23B601B74();
      if (os_log_type_enabled(v22, v23))
      {
        v24 = (uint8_t *)swift_slowAlloc();
        v25 = swift_slowAlloc();
        v38 = v25;
        *(_DWORD *)v24 = 136315138;
        swift_retain();
        v26 = sub_23B598B88();
        v28 = v27;
        swift_release();
        *(_QWORD *)(v0 + 72) = sub_23B58E160(v26, v28, &v38);
        sub_23B601BC8();
        swift_bridgeObjectRelease();
        swift_release_n();
        _os_log_impl(&dword_23B583000, v22, v23, "Pairing failed for %s", v24, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B868A2C](v25, -1, -1);
        MEMORY[0x23B868A2C](v24, -1, -1);
      }
      else
      {
        swift_release_n();
      }

      v33 = *(_QWORD *)(v0 + 144);
      v32 = *(_QWORD *)(v0 + 152);
      v34 = *(_QWORD *)(v0 + 136);
      sub_23B601A30();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v34);
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5C7EB0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[10] = a1;
  v2[11] = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35810);
  v2[12] = swift_task_alloc();
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD510);
  v2[13] = v3;
  v2[14] = *(_QWORD *)(v3 - 8);
  v2[15] = swift_task_alloc();
  v4 = sub_23B601820();
  v2[16] = v4;
  v2[17] = *(_QWORD *)(v4 - 8);
  v2[18] = swift_task_alloc();
  v2[19] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5C7F70()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v12)(uint64_t, uint64_t);
  void *v13;
  uint64_t v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint8_t *v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  void *v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = objc_msgSend(*(id *)(v0 + 80), sel_identifier);
  sub_23B6017FC();

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC15FindMyBluetooth12PairingAgent_pairingPeripherals);
  swift_beginAccess();
  v4 = *v3;
  if (*(_QWORD *)(*v3 + 16))
  {
    v5 = *(_QWORD *)(v0 + 152);
    swift_bridgeObjectRetain();
    v6 = sub_23B58ED1C(v5);
    if ((v7 & 1) != 0)
    {
      v8 = *(_QWORD *)(v0 + 152);
      v9 = *(_QWORD *)(v0 + 128);
      v10 = *(_QWORD *)(v0 + 136);
      *(_QWORD *)(v0 + 160) = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v6);
      swift_retain();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
      return swift_task_switch();
    }
    swift_bridgeObjectRelease();
  }
  v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 136) + 8);
  v12(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 128));
  if (qword_2542FD2C0 != -1)
    swift_once();
  v13 = *(void **)(v0 + 80);
  v14 = sub_23B60185C();
  __swift_project_value_buffer(v14, (uint64_t)qword_2542FD2A0);
  v15 = v13;
  v16 = sub_23B601844();
  v17 = sub_23B601B74();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = *(_QWORD *)(v0 + 144);
    v19 = *(_QWORD *)(v0 + 128);
    v20 = *(void **)(v0 + 80);
    v27 = v12;
    v21 = (uint8_t *)swift_slowAlloc();
    v28 = swift_slowAlloc();
    v29 = v28;
    *(_DWORD *)v21 = 136446210;
    v22 = objc_msgSend(v20, sel_identifier);
    sub_23B6017FC();

    sub_23B5884D4((unint64_t *)&qword_256A347A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v23 = sub_23B601DE4();
    v25 = v24;
    v27(v18, v19);
    *(_QWORD *)(v0 + 64) = sub_23B58E160(v23, v25, &v29);
    sub_23B601BC8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23B583000, v16, v17, "peerDidUnpair for unknown peripheral: %{public}s!", v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v28, -1, -1);
    MEMORY[0x23B868A2C](v21, -1, -1);
  }
  else
  {
    v26 = *(void **)(v0 + 80);

  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5C82A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 160) + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_pairingContinuation;
  swift_beginAccess();
  sub_23B58E7A0(v2, v1);
  return swift_task_switch();
}

uint64_t sub_23B5C8314()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 96);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_23B5C8C0C(v3);
    if (qword_2542FD2C0 != -1)
      swift_once();
    v4 = sub_23B60185C();
    __swift_project_value_buffer(v4, (uint64_t)qword_2542FD2A0);
    v5 = sub_23B601844();
    v6 = sub_23B601B74();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_23B583000, v5, v6, "peerDidUnpair pairing missing continuation!", v7, 2u);
      MEMORY[0x23B868A2C](v7, -1, -1);

      swift_release();
    }
    else
    {
      swift_release();

    }
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 32))(*(_QWORD *)(v0 + 120), v3, v1);
    if (qword_2542FD2C0 != -1)
      swift_once();
    v8 = sub_23B60185C();
    __swift_project_value_buffer(v8, (uint64_t)qword_2542FD2A0);
    swift_retain_n();
    v9 = sub_23B601844();
    v10 = sub_23B601B5C();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      v20 = v12;
      *(_DWORD *)v11 = 136315138;
      swift_retain();
      v13 = sub_23B598B88();
      v15 = v14;
      swift_release();
      *(_QWORD *)(v0 + 72) = sub_23B58E160(v13, v15, &v20);
      sub_23B601BC8();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_23B583000, v9, v10, "Unpaired %s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B868A2C](v12, -1, -1);
      MEMORY[0x23B868A2C](v11, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    v17 = *(_QWORD *)(v0 + 112);
    v16 = *(_QWORD *)(v0 + 120);
    v18 = *(_QWORD *)(v0 + 104);
    sub_23B601A30();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5C8640(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  v4 = sub_23B601820();
  v3[10] = v4;
  v3[11] = *(_QWORD *)(v4 - 8);
  v3[12] = swift_task_alloc();
  v3[13] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5C86B4()
{
  uint64_t v0;
  id *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  id v18;
  uint64_t v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint8_t *v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  void (*v37)(uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v1 = (id *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 72);
  v3 = objc_msgSend(*(id *)(v0 + 56), sel_identifier);
  sub_23B6017FC();

  v4 = v2 + OBJC_IVAR____TtC15FindMyBluetooth12PairingAgent_pairingPeripherals;
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v4 + 16))
  {
    v5 = *(_QWORD *)(v0 + 104);
    swift_bridgeObjectRetain();
    sub_23B58ED1C(v5);
    if ((v6 & 1) != 0)
    {
      v7 = *(_QWORD *)(v0 + 104);
      v8 = *(_QWORD *)(v0 + 80);
      v9 = *(_QWORD *)(v0 + 88);
      swift_retain();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
      if (qword_2542FD2C0 != -1)
        swift_once();
      v10 = sub_23B60185C();
      __swift_project_value_buffer(v10, (uint64_t)qword_2542FD2A0);
      swift_retain_n();
      v11 = sub_23B601844();
      v12 = sub_23B601B5C();
      if (os_log_type_enabled(v11, v12))
      {
        v13 = (uint8_t *)swift_slowAlloc();
        v38 = swift_slowAlloc();
        v40 = v38;
        *(_DWORD *)v13 = 136315138;
        swift_retain();
        v14 = sub_23B598B88();
        v16 = v15;
        swift_release();
        *(_QWORD *)(v0 + 48) = sub_23B58E160(v14, v16, &v40);
        sub_23B601BC8();
        swift_bridgeObjectRelease();
        swift_release_n();
        _os_log_impl(&dword_23B583000, v11, v12, "Accepting pairing request for %s", v13, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B868A2C](v38, -1, -1);
        MEMORY[0x23B868A2C](v13, -1, -1);
      }
      else
      {
        swift_release_n();
      }

      v32 = *(_QWORD *)(v0 + 64);
      v33 = *(_QWORD *)(v0 + 56);
      v34 = *(void **)(*(_QWORD *)(v0 + 72) + OBJC_IVAR____TtC15FindMyBluetooth12PairingAgent_underlyingObject);
      sub_23B5CF2F4(MEMORY[0x24BEE4AF8]);
      v35 = (void *)sub_23B6018A4();
      swift_bridgeObjectRelease();
      objc_msgSend(v34, sel_respondToPairingRequest_type_accept_data_, v33, v32, 1, v35);

      swift_release();
      goto LABEL_16;
    }
    swift_bridgeObjectRelease();
  }
  v17 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 88) + 8);
  v17(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 80));
  if (qword_2542FD2C0 != -1)
    swift_once();
  v18 = *v1;
  v19 = sub_23B60185C();
  __swift_project_value_buffer(v19, (uint64_t)qword_2542FD2A0);
  v20 = v18;
  v21 = sub_23B601844();
  v22 = sub_23B601B74();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = *(_QWORD *)(v0 + 96);
    v24 = *(_QWORD *)(v0 + 80);
    v37 = v17;
    v25 = *(void **)(v0 + 56);
    v26 = (uint8_t *)swift_slowAlloc();
    v39 = swift_slowAlloc();
    v40 = v39;
    *(_DWORD *)v26 = 136446210;
    v27 = objc_msgSend(v25, sel_identifier);
    sub_23B6017FC();

    sub_23B5884D4((unint64_t *)&qword_256A347A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v28 = sub_23B601DE4();
    v30 = v29;
    v37(v23, v24);
    *(_QWORD *)(v0 + 40) = sub_23B58E160(v28, v30, &v40);
    sub_23B601BC8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23B583000, v21, v22, "peerDidRequestPairing for unknown peripheral: %{public}s!", v26, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v39, -1, -1);
    MEMORY[0x23B868A2C](v26, -1, -1);
  }
  else
  {
    v31 = *v1;

  }
LABEL_16:
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5C8B9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;

  v5 = *(_OWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_23B587844;
  *(_QWORD *)(v3 + 32) = v2;
  *(_OWORD *)(v3 + 16) = v5;
  return swift_task_switch();
}

uint64_t sub_23B5C8C0C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35810);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23B5C8C4C()
{
  id *v0;

  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_23B5C8C90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v6;

  v6 = *(_OWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = sub_23B587FA4;
  *(_QWORD *)(v4 + 32) = v2;
  *(_QWORD *)(v4 + 40) = v3;
  *(_OWORD *)(v4 + 16) = v6;
  return swift_task_switch();
}

uint64_t objectdestroy_5Tm()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_23B5C8D48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;

  v5 = *(_OWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_23B587FA4;
  *(_QWORD *)(v3 + 32) = v2;
  *(_OWORD *)(v3 + 16) = v5;
  return swift_task_switch();
}

uint64_t sub_23B5C8DB8(uint64_t a1)
{
  uint64_t *v1;

  return sub_23B5C57A0(a1, v1[2], v1[3], v1[4], (uint64_t)&unk_250C823F0, (uint64_t)&unk_256A35868);
}

uint64_t sub_23B5C8DE8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD510) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = *(_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_23B587FA4;
  return sub_23B5C4D00(a1, v6, v7, v8, v9, v10);
}

uint64_t sub_23B5C8EB0(uint64_t a1)
{
  uint64_t *v1;

  return sub_23B5C57A0(a1, v1[2], v1[3], v1[4], (uint64_t)&unk_250C82418, (uint64_t)&unk_256A35878);
}

uint64_t objectdestroy_22Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD510);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B5C8F84(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD510) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = *(_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_23B587FA4;
  return sub_23B5C5944(a1, v6, v7, v8, v9, v10);
}

uint64_t *sub_23B5C9050(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD1E0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1F8);
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34678);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    v19 = a3[7];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1E8);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34AE0);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
    v25 = a3[8];
    v26 = (uint64_t *)((char *)a1 + v25);
    v27 = (uint64_t *)((char *)a2 + v25);
    v28 = v27[1];
    *v26 = *v27;
    v26[1] = v28;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_23B5C9238(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD1E0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1F8);
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  v10 = a1 + a2[7];
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1E8);
  v12 = *(_QWORD *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23B5C9344(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD1E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = (void *)(a1 + v11);
  v13 = (const void *)(a2 + v11);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1F8);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34678);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 16))(v12, v13, v14);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v17 = a3[7];
  v18 = (void *)(a1 + v17);
  v19 = (const void *)(a2 + v17);
  v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1E8);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34AE0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v21 + 16))(v18, v19, v20);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  v23 = a3[8];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (_QWORD *)(a2 + v23);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23B5C9500(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(void *, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD1E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = (void *)(a1 + v11);
  v13 = (void *)(a2 + v11);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1F8);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34678);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 24))(v12, v13, v14);
LABEL_7:
  v20 = a3[7];
  v21 = (void *)(a1 + v20);
  v22 = (void *)(a2 + v20);
  v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1E8);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v24 + 48);
  v26 = v25(v21, 1, v23);
  v27 = v25(v22, 1, v23);
  if (!v26)
  {
    if (!v27)
    {
      (*(void (**)(void *, void *, uint64_t))(v24 + 24))(v21, v22, v23);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v24 + 8))(v21, v23);
    goto LABEL_12;
  }
  if (v27)
  {
LABEL_12:
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34AE0);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v24 + 16))(v21, v22, v23);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
LABEL_13:
  v29 = a3[8];
  v30 = (_QWORD *)(a1 + v29);
  v31 = (_QWORD *)(a2 + v29);
  *v30 = *v31;
  v30[1] = v31[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23B5C9760(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD1E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = (void *)(a1 + v11);
  v13 = (const void *)(a2 + v11);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1F8);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34678);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v17 = a3[7];
  v18 = (void *)(a1 + v17);
  v19 = (const void *)(a2 + v17);
  v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1E8);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34AE0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v21 + 32))(v18, v19, v20);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_23B5C9910(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(void *, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD1E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (void *)(a1 + v11);
  v13 = (void *)(a2 + v11);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1F8);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 32))(v12, v13, v14);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34678);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 40))(v12, v13, v14);
LABEL_7:
  v20 = a3[7];
  v21 = (void *)(a1 + v20);
  v22 = (void *)(a2 + v20);
  v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1E8);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v24 + 48);
  v26 = v25(v21, 1, v23);
  v27 = v25(v22, 1, v23);
  if (!v26)
  {
    if (!v27)
    {
      (*(void (**)(void *, void *, uint64_t))(v24 + 40))(v21, v22, v23);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v24 + 8))(v21, v23);
    goto LABEL_12;
  }
  if (v27)
  {
LABEL_12:
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34AE0);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v24 + 32))(v21, v22, v23);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
LABEL_13:
  v29 = a3[8];
  v30 = (_QWORD *)(a1 + v29);
  v31 = (uint64_t *)(a2 + v29);
  v33 = *v31;
  v32 = v31[1];
  *v30 = v33;
  v30[1] = v32;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23B5C9B60()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23B5C9B6C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v17;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD1E0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_9:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34678);
  v12 = *(_QWORD *)(v14 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v14;
    v13 = a3[6];
    goto LABEL_9;
  }
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34AE0);
  v12 = *(_QWORD *)(v15 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v15;
    v13 = a3[7];
    goto LABEL_9;
  }
  v17 = *(_QWORD *)(a1 + a3[8] + 8);
  if (v17 >= 0xFFFFFFFF)
    LODWORD(v17) = -1;
  return (v17 + 1);
}

uint64_t sub_23B5C9C70()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23B5C9C7C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD1E0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v13;
    v15 = a4[5];
LABEL_9:
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34678);
  v14 = *(_QWORD *)(v16 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v16;
    v15 = a4[6];
    goto LABEL_9;
  }
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34AE0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v15 = a4[7];
    goto LABEL_9;
  }
  *(_QWORD *)(a1 + a4[8] + 8) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for PeerPath()
{
  uint64_t result;

  result = qword_2542FD4C8;
  if (!qword_2542FD4C8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23B5C9DB8()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_23B5C9EBC(319, (unint64_t *)&qword_2542FD670, (void (*)(uint64_t))type metadata accessor for CentralManager);
  if (v0 <= 0x3F)
  {
    sub_23B5C9EBC(319, (unint64_t *)&unk_2542FD660, (void (*)(uint64_t))type metadata accessor for Peripheral);
    if (v1 <= 0x3F)
    {
      sub_23B5AC398(319, qword_2542FD698, (uint64_t *)&unk_2542FD1F8);
      if (v2 <= 0x3F)
      {
        sub_23B5AC398(319, &qword_2542FD680, (uint64_t *)&unk_2542FD1E8);
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

void sub_23B5C9EBC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_23B6015C8();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_23B5C9F08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  char *v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v57 = a3;
  v58 = a4;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34AE0);
  MEMORY[0x24BDAC7A8](v8);
  v51 = (uint64_t)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1E8);
  v53 = *(_QWORD *)(v10 - 8);
  v54 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v42 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34678);
  MEMORY[0x24BDAC7A8](v12);
  v44 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1F8);
  v43 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v41 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23B601820();
  v52 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD1E0);
  v48 = *(_QWORD *)(v18 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16))(a5, a1, v18);
  v19 = (int *)type metadata accessor for PeerPath();
  v20 = a5 + v19[5];
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  v46 = *(_QWORD *)(v21 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 16))(v20, a2, v21);
  v22 = v57;
  sub_23B5A3C5C(v57, a5 + v19[6], &qword_256A34678);
  v50 = v19;
  v23 = v19[7];
  v56 = a5;
  sub_23B5A3C5C(v58, a5 + v23, &qword_256A34AE0);
  v49 = v18;
  v55 = a1;
  v24 = v22;
  v26 = v43;
  v25 = (uint64_t)v44;
  sub_23B6015BC();
  sub_23B5AE1AC();
  v61 = sub_23B601DE4();
  v62 = v27;
  v28 = *(void (**)(char *, uint64_t))(v52 + 8);
  v28(v17, v15);
  sub_23B601958();
  v47 = v21;
  v52 = a2;
  sub_23B6015BC();
  sub_23B601DE4();
  sub_23B601958();
  swift_bridgeObjectRelease();
  v28(v17, v15);
  v29 = v24;
  v30 = v45;
  sub_23B5A3C5C(v29, v25, &qword_256A34678);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v25, 1, v30) == 1)
  {
    sub_23B587ED4(v25, &qword_256A34678);
  }
  else
  {
    v31 = v41;
    (*(void (**)(char *, uint64_t, uint64_t))(v26 + 32))(v41, v25, v30);
    v59 = 47;
    v60 = 0xE100000000000000;
    sub_23B6015BC();
    shortCBUUIDDescription(uuid:)();
    v28(v17, v15);
    sub_23B601958();
    swift_bridgeObjectRelease();
    sub_23B601958();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v31, v30);
  }
  v32 = v58;
  v33 = v51;
  sub_23B5A3C5C(v58, v51, &qword_256A34AE0);
  v34 = v53;
  v35 = v54;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48))(v33, 1, v54) == 1)
  {
    sub_23B587ED4(v32, &qword_256A34AE0);
    sub_23B587ED4(v57, &qword_256A34678);
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v52, v47);
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v55, v49);
    result = sub_23B587ED4(v33, &qword_256A34AE0);
  }
  else
  {
    v37 = v42;
    (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v42, v33, v35);
    v59 = 47;
    v60 = 0xE100000000000000;
    sub_23B6015BC();
    shortCBUUIDDescription(uuid:)();
    v28(v17, v15);
    sub_23B601958();
    swift_bridgeObjectRelease();
    sub_23B601958();
    swift_bridgeObjectRelease();
    sub_23B587ED4(v32, &qword_256A34AE0);
    sub_23B587ED4(v57, &qword_256A34678);
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v52, v47);
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v55, v49);
    result = (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v37, v35);
  }
  v38 = v62;
  v39 = (uint64_t *)(v56 + v50[8]);
  *v39 = v61;
  v39[1] = v38;
  return result;
}

uint64_t sub_23B5CA444(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 32));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_23B5CA478(_BYTE *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23B587FA4;
  return CentralManagerProtocol.await(state:)(a1, a2, a3);
}

uint64_t sub_23B5CA4DC(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v2 + 16) = v1;
  *(_BYTE *)(v2 + 129) = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD550);
  *(_QWORD *)(v2 + 24) = v3;
  *(_QWORD *)(v2 + 32) = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v2 + 40) = swift_task_alloc();
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD5B8);
  *(_QWORD *)(v2 + 48) = v4;
  *(_QWORD *)(v2 + 56) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v2 + 64) = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD590);
  *(_QWORD *)(v2 + 72) = v5;
  *(_QWORD *)(v2 + 80) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v2 + 88) = swift_task_alloc();
  return swift_task_switch();
}

void sub_23B5CA59C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager__state);
  switch(v1)
  {
    case 0:
      __asm { BR              X10 }
      return;
    case 1:
      __asm { BR              X10 }
      return;
    case 2:
      __asm { BR              X10 }
      return;
    case 3:
      __asm { BR              X10 }
      return;
    case 4:
      __asm { BR              X10 }
      return;
    case 5:
      __asm { BR              X10 }
      return;
    default:
      if (qword_2542FCCC8 != -1)
        swift_once();
      v2 = *(unsigned __int8 *)(v0 + 129);
      if (qword_2542FE088 == v1)
        __asm { BR              X10 }
      __asm { BR              X10 }
      return;
  }
}

uint64_t sub_23B5CA8A8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B5CA900()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v1 = *(char *)(v0 + 128);
  if (v1 == 7 || (v2 = *(_QWORD *)(v0 + 112), sub_23B601AE4(), v2) || qword_23B6087B0[v1] == *(_QWORD *)(v0 + 96))
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 80) + 8))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 72));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_QWORD *)(v0 + 112) = 0;
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v4;
    *v4 = v0;
    v4[1] = sub_23B5CA8A8;
    return sub_23B601AB4();
  }
}

uint64_t sub_23B5CAA3C(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v2 + 40) = v1;
  *(_BYTE *)(v2 + 153) = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD550);
  *(_QWORD *)(v2 + 48) = v3;
  *(_QWORD *)(v2 + 56) = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v2 + 64) = swift_task_alloc();
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD5B8);
  *(_QWORD *)(v2 + 72) = v4;
  *(_QWORD *)(v2 + 80) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v2 + 88) = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD590);
  *(_QWORD *)(v2 + 96) = v5;
  *(_QWORD *)(v2 + 104) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v2 + 112) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5CAAFC()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v1 = (char *)(*(_QWORD *)(v0 + 40) + OBJC_IVAR____TtC15FindMyBluetooth18MockCentralManager_state);
  swift_beginAccess();
  v2 = qword_23B6087B0[*v1];
  v3 = qword_23B6087B0[*(char *)(v0 + 153)];
  *(_QWORD *)(v0 + 120) = v3;
  if (v2 == v3)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 80);
    v5 = *(_QWORD *)(v0 + 88);
    v8 = *(_QWORD *)(v0 + 64);
    v7 = *(_QWORD *)(v0 + 72);
    v10 = *(_QWORD *)(v0 + 48);
    v9 = *(_QWORD *)(v0 + 56);
    swift_allocObject();
    swift_weakInit();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v9 + 104))(v8, *MEMORY[0x24BEE6A10], v10);
    sub_23B601AC0();
    swift_release();
    sub_23B601AA8();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    *(_QWORD *)(v0 + 128) = sub_23B5884D4((unint64_t *)&unk_256A35910, (uint64_t (*)(uint64_t))type metadata accessor for MockCentralManager, (uint64_t)&protocol conformance descriptor for MockCentralManager);
    *(_QWORD *)(v0 + 136) = 0;
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 144) = v11;
    *v11 = v0;
    v11[1] = sub_23B5CACE0;
    return sub_23B601AB4();
  }
}

uint64_t sub_23B5CACE0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B5CAD38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v1 = *(char *)(v0 + 152);
  if (v1 == 7 || (v2 = *(_QWORD *)(v0 + 136), sub_23B601AE4(), v2) || qword_23B6087B0[v1] == *(_QWORD *)(v0 + 120))
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 96));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_QWORD *)(v0 + 136) = 0;
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 144) = v4;
    *v4 = v0;
    v4[1] = sub_23B5CACE0;
    return sub_23B601AB4();
  }
}

uint64_t CentralManagerProtocol.await(state:)(_BYTE *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)(v4 + 24) = a3;
  *(_QWORD *)(v4 + 32) = v3;
  *(_QWORD *)(v4 + 16) = a2;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD5B8);
  *(_QWORD *)(v4 + 40) = v8;
  *(_QWORD *)(v4 + 48) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v4 + 56) = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD590);
  *(_QWORD *)(v4 + 64) = v9;
  *(_QWORD *)(v4 + 72) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v4 + 80) = swift_task_alloc();
  *(_BYTE *)(v4 + 154) = *a1;
  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 72) + *(_QWORD *)(a3 + 72));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 88) = v10;
  *v10 = v4;
  v10[1] = sub_23B5CAF60;
  return v12(v4 + 152, a2, a3);
}

uint64_t sub_23B5CAF60()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD **)v0;
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 24);
  swift_task_dealloc();
  v1[12] = *(_QWORD *)(*(_QWORD *)(v2 + 8) + 8);
  v1[13] = sub_23B601A18();
  v1[14] = v3;
  return swift_task_switch();
}

uint64_t sub_23B5CAFDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v5)(_QWORD, _QWORD, _QWORD);

  v1 = qword_23B6087B0[*(char *)(v0 + 152)];
  v2 = qword_23B6087B0[*(char *)(v0 + 154)];
  *(_QWORD *)(v0 + 120) = v2;
  if (v1 == v2)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v5 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))(**(int **)(*(_QWORD *)(v0 + 24) + 88)
                                                        + *(_QWORD *)(*(_QWORD *)(v0 + 24) + 88));
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 128) = v4;
    *v4 = v0;
    v4[1] = sub_23B5CB094;
    return v5(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  }
}

uint64_t sub_23B5CB094()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B5CB0E0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0[6];
  v1 = v0[7];
  v3 = v0[5];
  sub_23B601AA8();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v0[17] = 0;
  v4 = (_QWORD *)swift_task_alloc();
  v0[18] = v4;
  *v4 = v0;
  v4[1] = sub_23B5CB17C;
  return sub_23B601AB4();
}

uint64_t sub_23B5CB17C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B5CB1C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v1 = *(char *)(v0 + 153);
  if (v1 == 7 || (v2 = *(_QWORD *)(v0 + 136), sub_23B601AE4(), v2) || qword_23B6087B0[v1] == *(_QWORD *)(v0 + 120))
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 64));
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_QWORD *)(v0 + 136) = 0;
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 144) = v4;
    *v4 = v0;
    v4[1] = sub_23B5CB17C;
    return sub_23B601AB4();
  }
}

uint64_t sub_23B5CB2EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23B587FA4;
  return CentralManagerProtocol.await(states:)(a1, a2, a3);
}

uint64_t sub_23B5CB350(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[11] = a1;
  v2[12] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD550);
  v2[13] = v3;
  v2[14] = *(_QWORD *)(v3 - 8);
  v2[15] = swift_task_alloc();
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD5B8);
  v2[16] = v4;
  v2[17] = *(_QWORD *)(v4 - 8);
  v2[18] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD590);
  v2[19] = v5;
  v2[20] = *(_QWORD *)(v5 - 8);
  v2[21] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5CB40C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char v11;

  v1 = swift_bridgeObjectRetain();
  v2 = sub_23B5BACF0(v1);
  *(_QWORD *)(v0 + 176) = v2;
  swift_bridgeObjectRelease();
  sub_23B5CFB70(&v11);
  if (sub_23B5AE710(v11, v2))
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 136);
    v4 = *(_QWORD *)(v0 + 144);
    v7 = *(_QWORD *)(v0 + 120);
    v6 = *(_QWORD *)(v0 + 128);
    v9 = *(_QWORD *)(v0 + 104);
    v8 = *(_QWORD *)(v0 + 112);
    swift_allocObject();
    swift_weakInit();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v8 + 104))(v7, *MEMORY[0x24BEE6A10], v9);
    sub_23B601AC0();
    swift_release();
    sub_23B601AA8();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    *(_QWORD *)(v0 + 184) = sub_23B5884D4(&qword_2542FD3C8, type metadata accessor for CentralManager, (uint64_t)&protocol conformance descriptor for CentralManager);
    *(_QWORD *)(v0 + 192) = 0;
    v10 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 200) = v10;
    *v10 = v0;
    v10[1] = sub_23B5CB5E4;
    return sub_23B601AB4();
  }
}

uint64_t sub_23B5CB5E4()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B5CB63C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v1 = *(char *)(v0 + 208);
  if (v1 == 7)
    goto LABEL_4;
  v2 = *(_QWORD *)(v0 + 192);
  sub_23B601AE4();
  if (v2)
    goto LABEL_4;
  if (*(_QWORD *)(*(_QWORD *)(v0 + 176) + 16))
  {
    sub_23B601E8C();
    v4 = qword_23B6087B0[v1];
    v5 = *(_QWORD *)(v0 + 176);
    sub_23B601E98();
    v6 = sub_23B601EB0();
    v7 = -1 << *(_BYTE *)(v5 + 32);
    v8 = v6 & ~v7;
    if (((*(_QWORD *)(v5 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v8) & 1) != 0)
    {
      v9 = *(_QWORD *)(v0 + 176);
      v10 = *(_QWORD *)(v9 + 48);
      if (qword_23B6087B0[*(char *)(v10 + v8)] == v4)
      {
LABEL_4:
        (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 160) + 8))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 152));
        swift_bridgeObjectRelease();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        return (*(uint64_t (**)(void))(v0 + 8))();
      }
      v11 = ~v7;
      while (1)
      {
        v8 = (v8 + 1) & v11;
        if (((*(_QWORD *)(v9 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
          break;
        if (qword_23B6087B0[*(char *)(v10 + v8)] == v4)
          goto LABEL_4;
      }
    }
  }
  *(_QWORD *)(v0 + 192) = 0;
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 200) = v12;
  *v12 = v0;
  v12[1] = sub_23B5CB5E4;
  return sub_23B601AB4();
}

uint64_t sub_23B5CB830(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[14] = a1;
  v2[15] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD550);
  v2[16] = v3;
  v2[17] = *(_QWORD *)(v3 - 8);
  v2[18] = swift_task_alloc();
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD5B8);
  v2[19] = v4;
  v2[20] = *(_QWORD *)(v4 - 8);
  v2[21] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD590);
  v2[22] = v5;
  v2[23] = *(_QWORD *)(v5 - 8);
  v2[24] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5CB8EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = swift_bridgeObjectRetain();
  v3 = sub_23B5BACF0(v2);
  *(_QWORD *)(v0 + 200) = v3;
  swift_bridgeObjectRelease();
  v4 = (char *)(v1 + OBJC_IVAR____TtC15FindMyBluetooth18MockCentralManager_state);
  swift_beginAccess();
  v5 = sub_23B5AE710(*v4, v3);
  v6 = *(_QWORD *)(v0 + 168);
  if (v5)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 152);
    v9 = *(_QWORD *)(v0 + 160);
    v10 = *(_QWORD *)(v0 + 136);
    v11 = *(_QWORD *)(v0 + 144);
    v12 = *(_QWORD *)(v0 + 128);
    swift_allocObject();
    swift_weakInit();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v10 + 104))(v11, *MEMORY[0x24BEE6A10], v12);
    sub_23B601AC0();
    swift_release();
    sub_23B601AA8();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v6, v8);
    *(_QWORD *)(v0 + 208) = sub_23B5884D4((unint64_t *)&unk_256A35910, (uint64_t (*)(uint64_t))type metadata accessor for MockCentralManager, (uint64_t)&protocol conformance descriptor for MockCentralManager);
    *(_QWORD *)(v0 + 216) = 0;
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 224) = v13;
    *v13 = v0;
    v13[1] = sub_23B5CBADC;
    return sub_23B601AB4();
  }
}

uint64_t sub_23B5CBADC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B5CBB34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v1 = *(char *)(v0 + 232);
  if (v1 == 7)
    goto LABEL_4;
  v2 = *(_QWORD *)(v0 + 216);
  sub_23B601AE4();
  if (v2)
    goto LABEL_4;
  if (*(_QWORD *)(*(_QWORD *)(v0 + 200) + 16))
  {
    sub_23B601E8C();
    v4 = qword_23B6087B0[v1];
    v5 = *(_QWORD *)(v0 + 200);
    sub_23B601E98();
    v6 = sub_23B601EB0();
    v7 = -1 << *(_BYTE *)(v5 + 32);
    v8 = v6 & ~v7;
    if (((*(_QWORD *)(v5 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v8) & 1) != 0)
    {
      v9 = *(_QWORD *)(v0 + 200);
      v10 = *(_QWORD *)(v9 + 48);
      if (qword_23B6087B0[*(char *)(v10 + v8)] == v4)
      {
LABEL_4:
        (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 8))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 176));
        swift_bridgeObjectRelease();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        return (*(uint64_t (**)(void))(v0 + 8))();
      }
      v11 = ~v7;
      v12 = v9 + 56;
      while (1)
      {
        v8 = (v8 + 1) & v11;
        if (((*(_QWORD *)(v12 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
          break;
        if (qword_23B6087B0[*(char *)(v10 + v8)] == v4)
          goto LABEL_4;
      }
    }
  }
  *(_QWORD *)(v0 + 216) = 0;
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 224) = v13;
  *v13 = v0;
  v13[1] = sub_23B5CBADC;
  return sub_23B601AB4();
}

uint64_t CentralManagerProtocol.await(states:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[13] = a3;
  v4[14] = v3;
  v4[11] = a1;
  v4[12] = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD5B8);
  v4[15] = v6;
  v4[16] = *(_QWORD *)(v6 - 8);
  v4[17] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD590);
  v4[18] = v7;
  v4[19] = *(_QWORD *)(v7 - 8);
  v4[20] = swift_task_alloc();
  v4[21] = *(_QWORD *)(*(_QWORD *)(a3 + 8) + 8);
  v4[22] = sub_23B601A18();
  v4[23] = v8;
  return swift_task_switch();
}

uint64_t sub_23B5CBDE4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(_QWORD *, _QWORD, _QWORD);

  v1 = v0[13];
  v2 = swift_bridgeObjectRetain();
  v0[24] = sub_23B5BACF0(v2);
  swift_bridgeObjectRelease();
  v5 = (uint64_t (*)(_QWORD *, _QWORD, _QWORD))(**(int **)(v1 + 72) + *(_QWORD *)(v1 + 72));
  v3 = (_QWORD *)swift_task_alloc();
  v0[25] = v3;
  *v3 = v0;
  v3[1] = sub_23B5CBE74;
  return v5(v0 + 29, v0[12], v0[13]);
}

uint64_t sub_23B5CBE74()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B5CBEC0()
{
  uint64_t v0;
  _QWORD *v2;
  uint64_t (*v3)(_QWORD, _QWORD, _QWORD);

  if (sub_23B5AE710(*(_BYTE *)(v0 + 232), *(_QWORD *)(v0 + 192)))
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v3 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))(**(int **)(*(_QWORD *)(v0 + 104) + 88)
                                                        + *(_QWORD *)(*(_QWORD *)(v0 + 104) + 88));
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 208) = v2;
    *v2 = v0;
    v2[1] = sub_23B5CBF78;
    return v3(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
  }
}

uint64_t sub_23B5CBF78()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B5CBFC4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0[16];
  v1 = v0[17];
  v3 = v0[15];
  sub_23B601AA8();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v0[27] = 0;
  v4 = (_QWORD *)swift_task_alloc();
  v0[28] = v4;
  *v4 = v0;
  v4[1] = sub_23B5CC060;
  return sub_23B601AB4();
}

uint64_t sub_23B5CC060()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B5CC0AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v1 = *(char *)(v0 + 233);
  if (v1 == 7)
    goto LABEL_4;
  v2 = *(_QWORD *)(v0 + 216);
  sub_23B601AE4();
  if (v2)
    goto LABEL_4;
  if (*(_QWORD *)(*(_QWORD *)(v0 + 192) + 16))
  {
    sub_23B601E8C();
    v4 = qword_23B6087B0[v1];
    v5 = *(_QWORD *)(v0 + 192);
    sub_23B601E98();
    v6 = sub_23B601EB0();
    v7 = -1 << *(_BYTE *)(v5 + 32);
    v8 = v6 & ~v7;
    if (((*(_QWORD *)(v5 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v8) & 1) != 0)
    {
      v9 = *(_QWORD *)(v0 + 192);
      v10 = *(_QWORD *)(v9 + 48);
      if (qword_23B6087B0[*(char *)(v10 + v8)] == v4)
      {
LABEL_4:
        (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 152) + 8))(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 144));
        swift_bridgeObjectRelease();
        swift_task_dealloc();
        swift_task_dealloc();
        return (*(uint64_t (**)(void))(v0 + 8))();
      }
      v11 = ~v7;
      v12 = v9 + 56;
      while (1)
      {
        v8 = (v8 + 1) & v11;
        if (((*(_QWORD *)(v12 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
          break;
        if (qword_23B6087B0[*(char *)(v10 + v8)] == v4)
          goto LABEL_4;
      }
    }
  }
  *(_QWORD *)(v0 + 216) = 0;
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 224) = v13;
  *v13 = v0;
  v13[1] = sub_23B5CC060;
  return sub_23B601AB4();
}

uint64_t CentralManagerProtocol.isolatedDescription.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD1E0);
  v3[8] = v4;
  v3[9] = *(_QWORD *)(v4 - 8);
  v3[10] = swift_task_alloc();
  v3[11] = sub_23B601A18();
  v3[12] = v5;
  return swift_task_switch();
}

uint64_t sub_23B5CC30C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  uint64_t (*v10)(_QWORD *, _QWORD, _QWORD);

  v1 = v0[10];
  v9 = v0[9];
  v3 = v0[7];
  v2 = v0[8];
  v5 = v0[5];
  v4 = v0[6];
  sub_23B601C40();
  v0[2] = 0;
  v0[3] = 0xE000000000000000;
  sub_23B601958();
  v0[4] = v3;
  v6 = *(_QWORD *)(v4 + 16);
  sub_23B601DCC();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  MEMORY[0x23B86839C](v5, v6);
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  (*(void (**)(uint64_t, uint64_t))(v4 + 56))(v5, v4);
  sub_23B5CC96C();
  sub_23B601DE4();
  sub_23B601958();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v1, v2);
  sub_23B601958();
  v10 = (uint64_t (*)(_QWORD *, _QWORD, _QWORD))(**(int **)(v4 + 72) + *(_QWORD *)(v4 + 72));
  v7 = (_QWORD *)swift_task_alloc();
  v0[13] = v7;
  *v7 = v0;
  v7[1] = sub_23B5CC4C4;
  return v10(v0 + 14, v0[5], v0[6]);
}

uint64_t sub_23B5CC4C4()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B5CC510()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v0 + 113) = *(_BYTE *)(v0 + 112);
  sub_23B601D00();
  sub_23B601958();
  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t CentralManagerProtocol.description.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD1E0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 64))(a1, a2);
  v13 = 0;
  v14 = 0xE000000000000000;
  sub_23B601C40();
  swift_bridgeObjectRelease();
  v13 = 60;
  v14 = 0xE100000000000000;
  v12 = v2;
  v9 = *(_QWORD *)(a2 + 16);
  sub_23B601DCC();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  MEMORY[0x23B86839C](a1, v9);
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  (*(void (**)(uint64_t, uint64_t))(a2 + 56))(a1, a2);
  sub_23B5CC96C();
  sub_23B601DE4();
  sub_23B601958();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_23B601958();
  return v13;
}

uint64_t sub_23B5CC7D4(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_256A35940 + dword_256A35940);
  v2 = *a1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23B587844;
  return v5(v2);
}

uint64_t sub_23B5CC83C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_256A35930 + dword_256A35930);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23B587FA4;
  return v5(a1);
}

uint64_t sub_23B5CC8A0(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_256A35920 + dword_256A35920);
  v2 = *a1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23B587FA4;
  return v5(v2);
}

uint64_t sub_23B5CC908(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_256A35908 + dword_256A35908);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23B587FA4;
  return v5(a1);
}

unint64_t sub_23B5CC96C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2542FD1D0;
  if (!qword_2542FD1D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2542FD1E0);
    result = MEMORY[0x23B868978](MEMORY[0x24BE316E8], v1);
    atomic_store(result, (unint64_t *)&qword_2542FD1D0);
  }
  return result;
}

uint64_t dispatch thunk of static CentralManagerProtocol.pairingCentralManager.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 48) + *(_QWORD *)(a2 + 48));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23B58EB10;
  return v7(a1, a2);
}

uint64_t dispatch thunk of CentralManagerProtocol.id.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of CentralManagerProtocol.isPairingCentralManager.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of CentralManagerProtocol.state.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 72) + *(_QWORD *)(a3 + 72));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23B587FA4;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of CentralManagerProtocol.init(options:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 80) + *(_QWORD *)(a3 + 80));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23B587B38;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of CentralManagerProtocol.stateStream()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 88) + *(_QWORD *)(a3 + 88));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23B587844;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of CentralManagerProtocol.await(state:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 96) + *(_QWORD *)(a3 + 96));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23B587FA4;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of CentralManagerProtocol.await(states:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 104) + *(_QWORD *)(a3 + 104));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23B587FA4;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of CentralManagerProtocol.scanForPeripherals(scanMode:garbageCollectInterval:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a6 + 112)
                                                                                     + *(_QWORD *)(a6 + 112));
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_23B587844;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t dispatch thunk of CentralManagerProtocol.retrievePeripheral(macAddress:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 120) + *(_QWORD *)(a3 + 120));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23B58F8B8;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of CentralManagerProtocol.retrievePeripherals(serialNumbers:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 128) + *(_QWORD *)(a3 + 128));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23B58F8B8;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of CentralManagerProtocol.retrievePeripherals(beaconIdentifiers:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 136) + *(_QWORD *)(a3 + 136));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23B58F8B8;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of CentralManagerProtocol.retrievePeripherals(identifiers:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 144) + *(_QWORD *)(a3 + 144));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23B58F8B8;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of CentralManagerProtocol.connectionEvents(serviceIdentifiers:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 152))();
}

uint64_t dispatch thunk of CentralManagerProtocol.connectionEvents(peripheralIdentifiers:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 160))();
}

uint64_t sub_23B5CCF44()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_23B5CCF4C(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_unknownObjectRetain();
  return a1;
}

uint64_t sub_23B5CCF80()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_23B5CCF88(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t sub_23B5CCFDC(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_unknownObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ScanMode(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ScanMode(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_23B5CD0A0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_23B5CD0A8(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2 & 1;
  return result;
}

uint64_t type metadata accessor for PeripheralChange(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PeripheralChange);
}

uint64_t sub_23B5CD0C0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23B5CD0E4(uint64_t a1)
{
  return sub_23B5FAF08(a1);
}

uint64_t sub_23B5CD0EC(uint64_t a1)
{
  return sub_23B5D1874(a1);
}

uint64_t sub_23B5CD0FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_23B601A78();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_23B601A6C();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_23B587ED4(a1, &qword_2542FD530);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_23B601A18();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_23B5CD248(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_23B601A78();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_23B601A6C();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_23B587ED4(a1, &qword_2542FD530);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_23B601A18();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD658);
  return swift_task_create();
}

uint64_t sub_23B5CD39C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_23B601A78();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_23B601A6C();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(_QWORD *)(a3 + 16))
      return swift_task_create();
    goto LABEL_3;
  }
  sub_23B587ED4(a1, &qword_2542FD530);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_23B601A18();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_23B5CD4D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t result;
  int64_t v6;
  _QWORD *v7;
  int64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t i;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *boxed_opaque_existential_0;
  unint64_t v18;
  unint64_t v19;
  _OWORD *v20;
  unint64_t v21;
  uint64_t v22;
  int64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  _OWORD v31[2];
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 *v35;

  v2 = 1 << *(_BYTE *)(a1 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a1 + 64);
  v23 = (unint64_t)(v2 + 63) >> 6;
  v35 = &v33;
  result = swift_bridgeObjectRetain();
  v6 = 0;
  v7 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (v4)
    goto LABEL_28;
LABEL_6:
  v8 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v8 < v23)
    {
      v9 = *(_QWORD *)(v22 + 8 * v8);
      ++v6;
      if (v9)
        goto LABEL_21;
      v6 = v8 + 1;
      if (v8 + 1 >= v23)
        goto LABEL_29;
      v9 = *(_QWORD *)(v22 + 8 * v6);
      if (v9)
        goto LABEL_21;
      v6 = v8 + 2;
      if (v8 + 2 >= v23)
        goto LABEL_29;
      v9 = *(_QWORD *)(v22 + 8 * v6);
      if (v9)
        goto LABEL_21;
      v6 = v8 + 3;
      if (v8 + 3 >= v23)
        goto LABEL_29;
      v9 = *(_QWORD *)(v22 + 8 * v6);
      if (v9)
      {
LABEL_21:
        v4 = (v9 - 1) & v9;
        for (i = __clz(__rbit64(v9)) + (v6 << 6); ; i = v21 | (v6 << 6))
        {
          v12 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
          v13 = *v12;
          v14 = v12[1];
          sub_23B58F834(*(_QWORD *)(a1 + 56) + 32 * i, (uint64_t)v35);
          *(_QWORD *)&v32 = v13;
          *((_QWORD *)&v32 + 1) = v14;
          v30 = v32;
          v31[0] = v33;
          v31[1] = v34;
          v27 = v32;
          v15 = *((_QWORD *)&v34 + 1);
          v16 = __swift_project_boxed_opaque_existential_1(v31, *((uint64_t *)&v34 + 1));
          *((_QWORD *)&v29 + 1) = v15;
          boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v28);
          (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(boxed_opaque_existential_0, v16, v15);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_23B587ED4((uint64_t)&v30, &qword_256A35DE8);
          if (*((_QWORD *)&v27 + 1))
          {
            v24 = v27;
            v25 = v28;
            v26 = v29;
            result = swift_isUniquelyReferenced_nonNull_native();
            if ((result & 1) == 0)
            {
              result = (uint64_t)sub_23B5859D0(0, v7[2] + 1, 1, v7);
              v7 = (_QWORD *)result;
            }
            v19 = v7[2];
            v18 = v7[3];
            if (v19 >= v18 >> 1)
            {
              result = (uint64_t)sub_23B5859D0((_QWORD *)(v18 > 1), v19 + 1, 1, v7);
              v7 = (_QWORD *)result;
            }
            v7[2] = v19 + 1;
            v20 = &v7[6 * v19];
            v20[3] = v25;
            v20[4] = v26;
            v20[2] = v24;
            if (!v4)
              goto LABEL_6;
          }
          else
          {
            result = sub_23B587ED4((uint64_t)&v27, &qword_256A35DF0);
            if (!v4)
              goto LABEL_6;
          }
LABEL_28:
          v21 = __clz(__rbit64(v4));
          v4 &= v4 - 1;
        }
      }
      v10 = v8 + 4;
      if (v10 < v23)
      {
        v9 = *(_QWORD *)(v22 + 8 * v10);
        if (v9)
        {
          v6 = v10;
          goto LABEL_21;
        }
        while (1)
        {
          v6 = v10 + 1;
          if (__OFADD__(v10, 1))
            goto LABEL_31;
          if (v6 >= v23)
            break;
          v9 = *(_QWORD *)(v22 + 8 * v6);
          ++v10;
          if (v9)
            goto LABEL_21;
        }
      }
    }
LABEL_29:
    swift_release();
    return (uint64_t)v7;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

int *sub_23B5CD7BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *result;
  id v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  _BOOL4 v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint8_t *v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  const char *v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  unint64_t v41;
  char v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  char *v55;
  uint64_t *v56;
  _QWORD v57[2];
  char *v58;
  uint64_t v59;
  unint64_t v60;
  char *v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A346E0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23B601634();
  v63 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = *(int **)(v2 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_underlyingObject);
  if (!result)
  {
    __break(1u);
    return result;
  }
  v13 = objc_msgSend(result, sel_retrievePairingInfoForPeripheral_, *(_QWORD *)(a1 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_underlyingObject));
  v14 = sub_23B6018B0();

  v15 = sub_23B5D9A54(v14);
  swift_bridgeObjectRelease();
  if (!v15)
  {
    if (qword_2542FD4A0 != -1)
      swift_once();
    v29 = sub_23B60185C();
    __swift_project_value_buffer(v29, (uint64_t)qword_2542FD480);
    v30 = sub_23B601844();
    v31 = sub_23B601B74();
    if (!os_log_type_enabled(v30, v31))
      goto LABEL_27;
    v32 = (uint8_t *)swift_slowAlloc();
    v33 = swift_slowAlloc();
    *(_QWORD *)&v66 = v33;
    *(_DWORD *)v32 = 136446210;
    v64 = sub_23B58E160(0xD000000000000017, 0x800000023B605170, (uint64_t *)&v66);
    sub_23B601BC8();
    v34 = "%{public}s Missing pairing info!";
    goto LABEL_26;
  }
  if (qword_2542FD4A0 != -1)
    swift_once();
  v16 = sub_23B60185C();
  v17 = __swift_project_value_buffer(v16, (uint64_t)qword_2542FD480);
  swift_bridgeObjectRetain_n();
  v68 = v17;
  v18 = sub_23B601844();
  v19 = sub_23B601B68();
  v20 = os_log_type_enabled(v18, v19);
  v61 = v11;
  v62 = v9;
  if (v20)
  {
    v21 = swift_slowAlloc();
    v58 = v8;
    v22 = (uint8_t *)v21;
    v23 = swift_slowAlloc();
    v60 = v3;
    v24 = v23;
    *(_QWORD *)&v66 = v23;
    *(_DWORD *)v22 = 136315138;
    v57[1] = v22 + 4;
    swift_bridgeObjectRetain();
    v59 = a2;
    v25 = sub_23B6018BC();
    v27 = v26;
    swift_bridgeObjectRelease();
    v64 = sub_23B58E160(v25, v27, (uint64_t *)&v66);
    sub_23B601BC8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B583000, v18, v19, "Pairing info: %s", v22, 0xCu);
    a2 = v59;
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v24, -1, -1);
    v28 = v22;
    v8 = v58;
    MEMORY[0x23B868A2C](v28, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  if (!*(_QWORD *)(v15 + 16))
    goto LABEL_23;
  v35 = sub_23B58ECB8(0xD000000000000016, 0x800000023B605190);
  if ((v36 & 1) == 0)
    goto LABEL_23;
  sub_23B58F834(*(_QWORD *)(v15 + 56) + 32 * v35, (uint64_t)&v66);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_23;
  v38 = v64;
  v37 = v65;
  if (!*(_QWORD *)(v15 + 16)
    || (v39 = sub_23B58ECB8(0xD00000000000001ALL, 0x800000023B6051B0), (v40 & 1) == 0)
    || (sub_23B58F834(*(_QWORD *)(v15 + 56) + 32 * v39, (uint64_t)&v66), (swift_dynamicCast() & 1) == 0))
  {
    sub_23B5A2990(v38, v37);
LABEL_23:
    swift_bridgeObjectRelease();
LABEL_24:
    v30 = sub_23B601844();
    v31 = sub_23B601B74();
    if (!os_log_type_enabled(v30, v31))
    {
LABEL_27:

      type metadata accessor for CentralManager.Error();
      sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      return (int *)swift_willThrow();
    }
    v32 = (uint8_t *)swift_slowAlloc();
    v33 = swift_slowAlloc();
    *(_QWORD *)&v66 = v33;
    *(_DWORD *)v32 = 136446210;
    v64 = sub_23B58E160(0xD000000000000017, 0x800000023B605170, (uint64_t *)&v66);
    sub_23B601BC8();
    v34 = "%{public}s Invalid pairing info!";
LABEL_26:
    _os_log_impl(&dword_23B583000, v30, v31, v34, v32, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v33, -1, -1);
    MEMORY[0x23B868A2C](v32, -1, -1);
    goto LABEL_27;
  }
  v60 = v37;
  if (*(_QWORD *)(v15 + 16) && (v41 = sub_23B58ECB8(0xD000000000000012, 0x800000023B6051D0), (v42 & 1) != 0))
  {
    sub_23B58F834(*(_QWORD *)(v15 + 56) + 32 * v41, (uint64_t)&v66);
  }
  else
  {
    v66 = 0u;
    v67 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v67 + 1))
  {
    sub_23B5A2990(v38, v60);
    sub_23B587ED4((uint64_t)&v66, &qword_256A35F30);
    goto LABEL_24;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_23B5A2990(v38, v60);
    goto LABEL_24;
  }
  v43 = v65;
  v59 = v64;
  v44 = v60;
  sub_23B5A294C(v38, v60);
  sub_23B60161C();
  v45 = v62;
  v46 = v63;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v8, 1, v62) == 1)
  {
    v63 = v43;
    sub_23B587ED4((uint64_t)v8, (uint64_t *)&unk_256A346E0);
    v47 = sub_23B601844();
    v48 = sub_23B601B74();
    if (os_log_type_enabled(v47, v48))
    {
      v49 = (uint8_t *)swift_slowAlloc();
      v50 = swift_slowAlloc();
      *(_QWORD *)&v66 = v50;
      *(_DWORD *)v49 = 136446210;
      v64 = sub_23B58E160(0xD000000000000017, 0x800000023B605170, (uint64_t *)&v66);
      sub_23B601BC8();
      _os_log_impl(&dword_23B583000, v47, v48, "%{public}s Invalid remote address!", v49, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B868A2C](v50, -1, -1);
      MEMORY[0x23B868A2C](v49, -1, -1);
    }

    v51 = v63;
    v52 = v59;
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_23B5A2990(v52, v51);
    return (int *)sub_23B5A2990(v38, v60);
  }
  else
  {
    sub_23B5A2990(v38, v44);
    v53 = v45;
    v54 = *(void (**)(char *, char *, uint64_t))(v46 + 32);
    v55 = v61;
    v54(v61, v8, v53);
    v54((char *)a2, v55, v53);
    result = (int *)type metadata accessor for PeripheralPairingInfo();
    v56 = (uint64_t *)(a2 + result[5]);
    *v56 = v59;
    v56[1] = v43;
  }
  return result;
}

uint64_t sub_23B5CE0A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  return swift_task_switch();
}

uint64_t sub_23B5CE0C0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 64) = swift_weakLoadStrong();
  return swift_task_switch();
}

uint64_t sub_23B5CE114()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  char isUniquelyReferenced_nonNull_native;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21[2];

  v1 = *(_QWORD *)(v0 + 64);
  if (!v1)
    goto LABEL_4;
  if (v1 != *(_QWORD *)(v0 + 56))
  {
    swift_release();
LABEL_4:
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  if (qword_2542FD398 != -1)
    swift_once();
  v3 = sub_23B60185C();
  __swift_project_value_buffer(v3, (uint64_t)qword_2542FD380);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  v4 = sub_23B601844();
  v5 = sub_23B601B8C();
  if (os_log_type_enabled(v4, v5))
  {
    v19 = *(_QWORD *)(v0 + 48);
    v6 = swift_slowAlloc();
    v20 = swift_slowAlloc();
    v21[0] = v20;
    *(_DWORD *)v6 = 136446466;
    swift_retain();
    v7 = sub_23B598B88();
    v9 = v8;
    swift_release();
    *(_QWORD *)(v0 + 16) = sub_23B58E160(v7, v9, v21);
    sub_23B601BC8();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v6 + 12) = 2082;
    *(_QWORD *)(v0 + 16) = v19;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD4E0);
    v10 = sub_23B601928();
    *(_QWORD *)(v0 + 16) = sub_23B58E160(v10, v11, v21);
    sub_23B601BC8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23B583000, v4, v5, "CentralManger.connect() for %{public}s options: %{public}s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v20, -1, -1);
    MEMORY[0x23B868A2C](v6, -1, -1);
  }
  else
  {
    swift_release_n();
    swift_bridgeObjectRelease_n();
  }

  v12 = *(_QWORD *)(v0 + 56);
  v13 = *(_QWORD *)(v0 + 40);
  v14 = v13 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_id;
  v15 = (uint64_t *)(v12 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_connected);
  swift_beginAccess();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21[0] = *v15;
  *v15 = 0x8000000000000000;
  sub_23B5B8F28(v13, v14, isUniquelyReferenced_nonNull_native);
  *v15 = v21[0];
  swift_bridgeObjectRelease();
  result = swift_endAccess();
  v17 = *(void **)(v12 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_underlyingObject);
  *(_QWORD *)(v0 + 72) = v17;
  if (v17)
  {
    *(_QWORD *)(v0 + 80) = OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_underlyingObject;
    v18 = v17;
    return swift_task_switch();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23B5CE4B8()
{
  _QWORD *v0;

  v0[11] = *(_QWORD *)(v0[5] + v0[10]);
  return swift_task_switch();
}

uint64_t sub_23B5CE4DC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;

  v1 = *(_QWORD *)(v0 + 48);
  if (v1)
  {
    sub_23B5D0924(v1);
    v2 = (void *)sub_23B6018A4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = 0;
  }
  v3 = *(void **)(v0 + 72);
  objc_msgSend(v3, sel_connectPeripheral_options_, *(_QWORD *)(v0 + 88), v2);

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5CE584(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[7] = a2;
  v3[8] = v2;
  v3[6] = a1;
  return swift_task_switch();
}

uint64_t sub_23B5CE5A4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 72) = swift_weakLoadStrong();
  return swift_task_switch();
}

void sub_23B5CE5F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18[2];

  v1 = *(_QWORD *)(v0 + 72);
  if (!v1)
    goto LABEL_4;
  if (v1 != *(_QWORD *)(v0 + 64))
  {
    swift_release();
LABEL_4:
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
LABEL_5:
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  v2 = v1 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_connected;
  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)v2 + 16)
    || (v3 = *(_QWORD *)(v0 + 48) + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_id,
        swift_bridgeObjectRetain(),
        sub_23B58ED88(v3),
        LOBYTE(v3) = v4,
        swift_bridgeObjectRelease(),
        (v3 & 1) == 0))
  {
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_release();
    goto LABEL_5;
  }
  if (qword_2542FD398 != -1)
    swift_once();
  v5 = sub_23B60185C();
  __swift_project_value_buffer(v5, (uint64_t)qword_2542FD380);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  v6 = sub_23B601844();
  v7 = sub_23B601B8C();
  if (os_log_type_enabled(v6, v7))
  {
    v16 = *(_QWORD *)(v0 + 56);
    v8 = swift_slowAlloc();
    v17 = swift_slowAlloc();
    v18[0] = v17;
    *(_DWORD *)v8 = 136446466;
    swift_retain();
    v9 = sub_23B598B88();
    v11 = v10;
    swift_release();
    *(_QWORD *)(v0 + 40) = sub_23B58E160(v9, v11, v18);
    sub_23B601BC8();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v8 + 12) = 2082;
    *(_QWORD *)(v0 + 40) = v16;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD4E0);
    v12 = sub_23B601928();
    *(_QWORD *)(v0 + 40) = sub_23B58E160(v12, v13, v18);
    sub_23B601BC8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23B583000, v6, v7, "Calling cancelConnection() for %{public}s options: %{public}s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v17, -1, -1);
    MEMORY[0x23B868A2C](v8, -1, -1);
  }
  else
  {
    swift_release_n();
    swift_bridgeObjectRelease_n();
  }

  v14 = *(void **)(*(_QWORD *)(v0 + 64) + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_underlyingObject);
  *(_QWORD *)(v0 + 80) = v14;
  if (v14)
  {
    *(_QWORD *)(v0 + 88) = OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_underlyingObject;
    v15 = v14;
    swift_task_switch();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_23B5CE9E8()
{
  _QWORD *v0;

  v0[12] = *(_QWORD *)(v0[6] + v0[11]);
  return swift_task_switch();
}

uint64_t sub_23B5CEA0C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;

  v1 = *(_QWORD *)(v0 + 56);
  if (v1)
  {
    sub_23B5D0CCC(v1);
    v2 = (void *)sub_23B6018A4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = 0;
  }
  v3 = *(void **)(v0 + 80);
  objc_msgSend(v3, sel_cancelPeripheralConnection_options_, *(_QWORD *)(v0 + 96), v2);

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5CEAB4()
{
  uint64_t v0;
  _QWORD *v1;

  v1[8] = v0;
  v1[9] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A346E0);
  v1[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5CEB14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 64);
  sub_23B601C40();
  *(_QWORD *)(v0 + 40) = 0;
  *(_QWORD *)(v0 + 48) = 0xE000000000000000;
  sub_23B601958();
  *(_QWORD *)(v0 + 56) = v2;
  v3 = type metadata accessor for Peripheral();
  v4 = sub_23B5884D4(&qword_2542FD268, (uint64_t (*)(uint64_t))type metadata accessor for Peripheral, (uint64_t)&protocol conformance descriptor for Peripheral);
  sub_23B601DCC();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  MEMORY[0x23B86839C](v3, v4);
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  sub_23B58F61C(&qword_256A34AD0, &qword_256A359A0, MEMORY[0x24BE316E8]);
  sub_23B601DE4();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  v5 = v2 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_macAddress;
  swift_beginAccess();
  sub_23B5A3C5C(v5, v1, (uint64_t *)&unk_256A346E0);
  sub_23B601928();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  v6 = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_underlyingObject), sel_state);
  if ((unint64_t)v6 < 4)
    v7 = (_BYTE)v6 + 1;
  else
    v7 = 0;
  *(_BYTE *)(v0 + 88) = v7;
  sub_23B601D00();
  sub_23B601958();
  v8 = *(_QWORD *)(v0 + 40);
  v9 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v8, v9);
}

uint64_t sub_23B5CEDA4()
{
  uint64_t v0;
  _QWORD *v1;

  v1[11] = v0;
  v1[12] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A346E0);
  v1[13] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5CEE04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 88);
  sub_23B601C40();
  *(_QWORD *)(v0 + 64) = 0;
  *(_QWORD *)(v0 + 72) = 0xE000000000000000;
  sub_23B601958();
  *(_QWORD *)(v0 + 80) = v2;
  v3 = type metadata accessor for MockPeripheral();
  v4 = sub_23B5884D4((unint64_t *)&unk_256A35E20, (uint64_t (*)(uint64_t))type metadata accessor for MockPeripheral, (uint64_t)&protocol conformance descriptor for MockPeripheral);
  sub_23B601DCC();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  MEMORY[0x23B86839C](v3, v4);
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  sub_23B58F61C(&qword_256A34AD0, &qword_256A359A0, MEMORY[0x24BE316E8]);
  sub_23B601DE4();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  v5 = v2 + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_macAddress;
  swift_beginAccess();
  sub_23B5A3C5C(v5, v1, (uint64_t *)&unk_256A346E0);
  sub_23B601928();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  v6 = (_BYTE *)(v2 + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_state);
  swift_beginAccess();
  *(_BYTE *)(v0 + 112) = *v6;
  sub_23B601D00();
  sub_23B601958();
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v7, v8);
}

unint64_t sub_23B5CF09C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD620);
  v2 = sub_23B601D48();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_23B5A3C5C(v6, (uint64_t)&v15, &qword_256A34150);
    v7 = v15;
    v8 = v16;
    result = sub_23B58ECB8(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_23B5A39B0(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23B5CF1D0(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  unint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A35F28);
  v2 = (_QWORD *)sub_23B601D48();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (unint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v7 = *(v4 - 1);
    v8 = *v4;
    swift_bridgeObjectRetain();
    sub_23B5A294C(v7, v8);
    result = sub_23B58ECB8(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (uint64_t *)(v2[7] + 16 * result);
    *v12 = v7;
    v12[1] = v8;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23B5CF2F4(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A35DF8);
  v2 = sub_23B601D48();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_23B5A3C5C(v6, (uint64_t)v15, &qword_256A35E00);
    result = sub_23B58EDA4((uint64_t)v15);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v9 = v3[6] + 40 * result;
    v10 = v15[0];
    v11 = v15[1];
    *(_QWORD *)(v9 + 32) = v16;
    *(_OWORD *)v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    result = (unint64_t)sub_23B5A39B0(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23B5CF434(uint64_t a1, uint64_t *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  id v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v3 = (_QWORD *)sub_23B601D48();
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v6 = *v5;
    v7 = (id)*(v5 - 1);
    swift_bridgeObjectRetain();
    result = sub_23B58EEB8((uint64_t)v7);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = 8 * result;
    *(_QWORD *)(v3[6] + v10) = v7;
    *(_QWORD *)(v3[7] + v10) = v6;
    v11 = v3[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v3[2] = v13;
    v5 += 2;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_23B5CF538()
{
  uint64_t v0;
  uint64_t v1;

  sub_23B601C40();
  swift_bridgeObjectRelease();
  v0 = type metadata accessor for MockCentralManager();
  v1 = sub_23B5884D4((unint64_t *)&unk_256A35E08, (uint64_t (*)(uint64_t))type metadata accessor for MockCentralManager, (uint64_t)&protocol conformance descriptor for MockCentralManager);
  sub_23B601DCC();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  MEMORY[0x23B86839C](v0, v1);
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD1E0);
  sub_23B58F61C((unint64_t *)&qword_2542FD1D0, &qword_2542FD1E0, MEMORY[0x24BE316E8]);
  sub_23B601DE4();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  return 60;
}

uint64_t sub_23B5CF79C()
{
  uint64_t v0;
  uint64_t v1;

  sub_23B601C40();
  swift_bridgeObjectRelease();
  v0 = type metadata accessor for CentralManager(0);
  v1 = sub_23B5884D4(&qword_2542FD3D8, type metadata accessor for CentralManager, (uint64_t)&protocol conformance descriptor for CentralManager);
  sub_23B601DCC();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  MEMORY[0x23B86839C](v0, v1);
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD1E0);
  sub_23B58F61C((unint64_t *)&qword_2542FD1D0, &qword_2542FD1E0, MEMORY[0x24BE316E8]);
  sub_23B601DE4();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  return 60;
}

uint64_t sub_23B5CF9F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_23B60185C();
  __swift_allocate_value_buffer(v0, qword_2542FD380);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_2542FD380);
  if (qword_2542FD4A0 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_2542FD480);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_23B5CFA88()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for PairingManagerAccessController();
  v0 = swift_allocObject();
  swift_defaultActor_initialize();
  result = swift_weakInit();
  qword_256A35948 = v0;
  return result;
}

uint64_t static CentralManager.pairingCentralManager.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (__cdecl *v3)();

  v3 = (uint64_t (__cdecl *)())((char *)&dword_256A35978 + dword_256A35978);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23B58CEC8;
  return v3();
}

uint64_t CentralManager.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_id;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD1E0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_23B5CFB70@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager__state);
  if (v3 >= 6)
  {
    if (qword_2542FCCC8 != -1)
      result = swift_once();
    if (qword_2542FE088 == v3)
      LOBYTE(v3) = 6;
    else
      LOBYTE(v3) = 0;
  }
  *a1 = v3;
  return result;
}

uint64_t CentralManager.isPairingCentralManager.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_isPairingCentralManager);
}

uint64_t CentralManager.__allocating_init(options:)(uint64_t a1)
{
  uint64_t v1;
  char v2;
  _QWORD *v3;

  v2 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)(v1 + 16) = *(_QWORD *)a1;
  *(_BYTE *)(v1 + 24) = v2;
  type metadata accessor for CentralManager(0);
  swift_allocObject();
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 32) = v3;
  *v3 = v1;
  v3[1] = sub_23B5CFC6C;
  return sub_23B5CFCBC(0, (uint64_t *)(v1 + 16));
}

uint64_t sub_23B5CFC6C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_23B5CFCBC(char a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v4 = v2;
  *(_QWORD *)(v3 + 64) = v2;
  sub_23B601B98();
  *(_QWORD *)(v3 + 72) = swift_task_alloc();
  sub_23B601874();
  *(_QWORD *)(v3 + 80) = swift_task_alloc();
  v6 = sub_23B601BA4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = swift_task_alloc();
  *(_QWORD *)(v3 + 88) = v8;
  sub_23B601820();
  v9 = swift_task_alloc();
  v10 = *a2;
  *(_QWORD *)(v3 + 96) = v9;
  *(_QWORD *)(v3 + 104) = v10;
  *(_BYTE *)(v3 + 128) = *((_BYTE *)a2 + 8);
  swift_defaultActor_initialize();
  sub_23B601814();
  type metadata accessor for CentralManager(0);
  sub_23B6015D4();
  v20 = OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_delegateQueue;
  sub_23B58F7DC(0, &qword_2542FD5F0);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 104))(v8, *MEMORY[0x24BEE5758], v6);
  sub_23B601868();
  *(_QWORD *)(v3 + 32) = MEMORY[0x24BEE4AF8];
  sub_23B5884D4(&qword_2542FD5E8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688], MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD4F0);
  sub_23B58F61C((unint64_t *)&unk_2542FD4F8, &qword_2542FD4F0, MEMORY[0x24BEE12C8]);
  sub_23B601BEC();
  *(_QWORD *)(v2 + v20) = sub_23B601BB0();
  *(_QWORD *)(v2 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_delegateTrampoline) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_underlyingObject) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager__state) = 0;
  v11 = v2 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_garbageCollectInterval;
  *(_QWORD *)v11 = 0;
  *(_QWORD *)(v11 + 8) = 0;
  *(_BYTE *)(v11 + 16) = 1;
  v12 = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v2 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_garbageCollectTasks) = MEMORY[0x24BEE4B00];
  v13 = v2 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_scanContinuation;
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD5C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_discovered) = v12;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_connected) = v12;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_stateContinuations) = v12;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_pairingAgent) = 0;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_peripheralCreationInProgress) = v12;
  v15 = v4 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_connectionEventsStream;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD5A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  v17 = v4 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_connectionEventsStreamContinuation;
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD558);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_connectionEventMonitoringTask) = 0;
  *(_BYTE *)(v4 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_isPairingCentralManager) = a1;
  return swift_task_switch();
}

id sub_23B5D0038()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  void *v4;
  objc_class *v5;
  char *v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  char v14;
  uint8_t *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  _QWORD *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  void *v31;
  id result;
  void *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v2 = (uint64_t *)(v0 + 64);
  v1 = *(_QWORD *)(v0 + 64);
  v3 = OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_delegateQueue;
  v4 = *(void **)(v1 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_delegateQueue);
  v5 = (objc_class *)type metadata accessor for DelegateTrampoline_CBCentralManagerPrivateDelegate();
  v6 = (char *)objc_allocWithZone(v5);
  swift_weakInit();
  *(_QWORD *)&v6[OBJC_IVAR____TtC15FindMyBluetoothP33_70F3B43C606FCD1D14F1E1CF221D31A750DelegateTrampoline_CBCentralManagerPrivateDelegate_delegateQueue] = v4;
  swift_weakAssign();
  *(_QWORD *)(v0 + 16) = v6;
  *(_QWORD *)(v0 + 24) = v5;
  v7 = v4;
  v8 = objc_msgSendSuper2((objc_super *)(v0 + 16), sel_init);
  v9 = OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_delegateTrampoline;
  v10 = *(void **)(v1 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_delegateTrampoline);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_delegateTrampoline) = v8;

  if (qword_2542FD398 != -1)
    swift_once();
  v11 = sub_23B60185C();
  *(_QWORD *)(v0 + 112) = __swift_project_value_buffer(v11, (uint64_t)qword_2542FD380);
  v12 = sub_23B601844();
  v13 = sub_23B601B8C();
  if (os_log_type_enabled(v12, v13))
  {
    v35 = v3;
    v14 = *(_BYTE *)(v0 + 128);
    v15 = (uint8_t *)swift_slowAlloc();
    v16 = swift_slowAlloc();
    v36 = v16;
    *(_DWORD *)v15 = 136446210;
    if ((v14 & 1) != 0)
    {
      v17 = 0;
    }
    else
    {
      v37 = *(_QWORD *)(v0 + 104);
      v17 = sub_23B5F6260();
    }
    *(_QWORD *)(v0 + 48) = v17;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD4E0);
    v18 = sub_23B601928();
    *(_QWORD *)(v0 + 56) = sub_23B58E160(v18, v19, &v36);
    v2 = (uint64_t *)(v0 + 64);
    sub_23B601BC8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B583000, v12, v13, "Creating CBCentralManager with options: %{public}s", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v16, -1, -1);
    MEMORY[0x23B868A2C](v15, -1, -1);

    v3 = v35;
  }
  else
  {

  }
  v20 = *(void **)(v1 + v9);
  v21 = *(void **)(v1 + v3);
  if (*(_BYTE *)(v0 + 128) == 1)
  {
    v22 = v20;
    v23 = v21;
    v24 = 0;
  }
  else
  {
    v37 = *(_QWORD *)(v0 + 104);
    v25 = v20;
    v26 = v21;
    v27 = sub_23B5F6260();
    v24 = v27;
    if (v27)
    {
      sub_23B5D0924((uint64_t)v27);
      swift_bridgeObjectRelease();
      v24 = (void *)sub_23B6018A4();
      swift_bridgeObjectRelease();
    }
  }
  v28 = *v2;
  v29 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBB220]), sel_initWithDelegate_queue_options_, v20, v21, v24);

  v30 = OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_underlyingObject;
  v31 = *(void **)(v28 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_underlyingObject);
  *(_QWORD *)(v28 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_underlyingObject) = v29;

  result = *(id *)(v28 + v30);
  if (result)
  {
    result = objc_msgSend(result, sel_sharedPairingAgent);
    if (result)
    {
      v33 = result;
      type metadata accessor for PairingAgent();
      swift_allocObject();
      swift_retain();
      v34 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 120) = v34;
      *v34 = v0;
      v34[1] = sub_23B5D03D4;
      return (id)sub_23B5C38C4(*(_QWORD *)(v0 + 64), v33);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_23B5D03D4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v3 = *v1;
  v15 = v3;
  v4 = *(_QWORD *)(v3 + 64);
  v5 = *v1;
  v15 = v5;
  swift_task_dealloc();
  *(_QWORD *)(v4 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_pairingAgent) = a1;
  swift_release();
  swift_retain_n();
  v6 = sub_23B601844();
  v7 = sub_23B601B68();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    *(_DWORD *)v8 = 136315138;
    v14 = v9;
    swift_retain();
    v10 = sub_23B5CF79C();
    v12 = v11;
    swift_release();
    *(_QWORD *)(v3 + 40) = sub_23B58E160(v10, v12, &v14);
    sub_23B601BC8();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_23B583000, v6, v7, "[%s] init", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v9, -1, -1);
    MEMORY[0x23B868A2C](v8, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v5 + 8))(*(_QWORD *)(v3 + 64));
}

unint64_t sub_23B5D05B4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  unint64_t result;
  int64_t i;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t *v16;
  _OWORD *v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t *v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  _OWORD v42[2];

  v1 = a1;
  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD620);
    v2 = (_QWORD *)sub_23B601D48();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
  }
  v35 = v1 + 64;
  v3 = -1 << *(_BYTE *)(v1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(v1 + 64);
  v34 = (unint64_t)(63 - v3) >> 6;
  v6 = &v39;
  v7 = &v41;
  result = swift_bridgeObjectRetain();
  i = 0;
  v10 = MEMORY[0x24BDCDDE8];
  if (v5)
    goto LABEL_10;
LABEL_11:
  v19 = i + 1;
  if (__OFADD__(i, 1))
    goto LABEL_35;
  if (v19 >= v34)
    goto LABEL_32;
  v20 = *(_QWORD *)(v35 + 8 * v19);
  v21 = i + 1;
  if (!v20)
  {
    v21 = i + 2;
    if (i + 2 >= v34)
      goto LABEL_32;
    v20 = *(_QWORD *)(v35 + 8 * v21);
    if (!v20)
    {
      v21 = i + 3;
      if (i + 3 >= v34)
        goto LABEL_32;
      v20 = *(_QWORD *)(v35 + 8 * v21);
      if (!v20)
      {
        v21 = i + 4;
        if (i + 4 >= v34)
          goto LABEL_32;
        v20 = *(_QWORD *)(v35 + 8 * v21);
        if (!v20)
        {
          v22 = i + 5;
          if (i + 5 < v34)
          {
            v20 = *(_QWORD *)(v35 + 8 * v22);
            if (v20)
            {
              v21 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v21 = v22 + 1;
              if (__OFADD__(v22, 1))
                goto LABEL_36;
              if (v21 >= v34)
                break;
              v20 = *(_QWORD *)(v35 + 8 * v21);
              ++v22;
              if (v20)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_23B5A39A8();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  v36 = (v20 - 1) & v20;
  v18 = __clz(__rbit64(v20)) + (v21 << 6);
  for (i = v21; ; v18 = __clz(__rbit64(v5)) | (i << 6))
  {
    v23 = 16 * v18;
    v24 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v18);
    v25 = (uint64_t *)(*(_QWORD *)(v1 + 56) + v23);
    v26 = *v25;
    v27 = v25[1];
    v37 = *v24;
    v38 = v24[1];
    swift_bridgeObjectRetain();
    sub_23B5A294C(v26, v27);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD650);
    swift_dynamicCast();
    sub_23B5A39B0(v6, v7);
    sub_23B5A39B0(v7, v42);
    sub_23B5A39B0(v42, &v40);
    result = sub_23B58ECB8(v37, v38);
    v28 = result;
    if ((v29 & 1) != 0)
    {
      v11 = v7;
      v12 = v6;
      v13 = v1;
      v14 = i;
      v15 = v10;
      v16 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v16 = v37;
      v16[1] = v38;
      v10 = v15;
      i = v14;
      v1 = v13;
      v6 = v12;
      v7 = v11;
      v17 = (_OWORD *)(v2[7] + 32 * v28);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
      result = (unint64_t)sub_23B5A39B0(&v40, v17);
      v5 = v36;
      if (!v36)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v30 = (uint64_t *)(v2[6] + 16 * result);
    *v30 = v37;
    v30[1] = v38;
    result = (unint64_t)sub_23B5A39B0(&v40, (_OWORD *)(v2[7] + 32 * result));
    v31 = v2[2];
    v32 = __OFADD__(v31, 1);
    v33 = v31 + 1;
    if (v32)
      goto LABEL_34;
    v2[2] = v33;
    v5 = v36;
    if (!v36)
      goto LABEL_11;
LABEL_10:
    v36 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

unint64_t sub_23B5D0924(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _OWORD *v6;
  _OWORD *v7;
  uint64_t *v8;
  uint64_t *v9;
  unint64_t result;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t *v16;
  _OWORD *v17;
  unint64_t i;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  int64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t *v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  _OWORD v44[3];
  _OWORD v45[2];
  __int128 v46;
  _OWORD v47[2];

  v1 = a1;
  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542FCCF0);
    v2 = (_QWORD *)sub_23B601D48();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
  }
  v35 = v1 + 64;
  v3 = -1 << *(_BYTE *)(v1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(v1 + 64);
  v34 = (unint64_t)(63 - v3) >> 6;
  v6 = v47;
  v7 = v45;
  v8 = &v41;
  v9 = &v43;
  result = swift_bridgeObjectRetain();
  v36 = 0;
  if (v5)
    goto LABEL_10;
LABEL_11:
  v19 = v36 + 1;
  if (__OFADD__(v36, 1))
    goto LABEL_35;
  if (v19 >= v34)
    goto LABEL_32;
  v20 = *(_QWORD *)(v35 + 8 * v19);
  v21 = v36 + 1;
  if (!v20)
  {
    v21 = v36 + 2;
    if (v36 + 2 >= v34)
      goto LABEL_32;
    v20 = *(_QWORD *)(v35 + 8 * v21);
    if (!v20)
    {
      v21 = v36 + 3;
      if (v36 + 3 >= v34)
        goto LABEL_32;
      v20 = *(_QWORD *)(v35 + 8 * v21);
      if (!v20)
      {
        v21 = v36 + 4;
        if (v36 + 4 >= v34)
          goto LABEL_32;
        v20 = *(_QWORD *)(v35 + 8 * v21);
        if (!v20)
        {
          v22 = v36 + 5;
          if (v36 + 5 < v34)
          {
            v20 = *(_QWORD *)(v35 + 8 * v22);
            if (v20)
            {
              v21 = v36 + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v21 = v22 + 1;
              if (__OFADD__(v22, 1))
                goto LABEL_36;
              if (v21 >= v34)
                break;
              v20 = *(_QWORD *)(v35 + 8 * v21);
              ++v22;
              if (v20)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_23B5A39A8();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  v36 = v21;
  v37 = (v20 - 1) & v20;
  for (i = __clz(__rbit64(v20)) + (v21 << 6); ; i = __clz(__rbit64(v5)) | (v36 << 6))
  {
    v23 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * i);
    v25 = *v23;
    v24 = v23[1];
    sub_23B58F834(*(_QWORD *)(v1 + 56) + 32 * i, (uint64_t)v6);
    *(_QWORD *)&v46 = v25;
    *((_QWORD *)&v46 + 1) = v24;
    v44[2] = v46;
    v45[0] = v47[0];
    v45[1] = v47[1];
    v39 = v25;
    v40 = v24;
    sub_23B5A39B0(v7, &v38);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD650);
    swift_dynamicCast();
    v27 = v39;
    v26 = v40;
    sub_23B5A39B0(v8, v9);
    sub_23B5A39B0(v9, v44);
    sub_23B5A39B0(v44, &v42);
    result = sub_23B58ECB8(v27, v26);
    v28 = result;
    if ((v29 & 1) != 0)
    {
      v11 = v9;
      v12 = v8;
      v13 = v1;
      v14 = v7;
      v15 = v6;
      v16 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v16 = v27;
      v16[1] = v26;
      v6 = v15;
      v7 = v14;
      v1 = v13;
      v8 = v12;
      v9 = v11;
      v17 = (_OWORD *)(v2[7] + 32 * v28);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
      result = (unint64_t)sub_23B5A39B0(&v42, v17);
      v5 = v37;
      if (!v37)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v30 = (uint64_t *)(v2[6] + 16 * result);
    *v30 = v27;
    v30[1] = v26;
    result = (unint64_t)sub_23B5A39B0(&v42, (_OWORD *)(v2[7] + 32 * result));
    v31 = v2[2];
    v32 = __OFADD__(v31, 1);
    v33 = v31 + 1;
    if (v32)
      goto LABEL_34;
    v2[2] = v33;
    v5 = v37;
    if (!v37)
      goto LABEL_11;
LABEL_10:
    v37 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_23B5D0CCC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _OWORD v36[2];
  _OWORD v37[3];
  _OWORD v38[2];
  __int128 v39;
  _OWORD v40[2];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A35DF8);
    v2 = sub_23B601D48();
  }
  else
  {
    v2 = MEMORY[0x24BEE4B00];
  }
  v28 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v27)
        goto LABEL_37;
      v14 = *(_QWORD *)(v28 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v27)
          goto LABEL_37;
        v14 = *(_QWORD *)(v28 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v27)
            goto LABEL_37;
          v14 = *(_QWORD *)(v28 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v19 = *v17;
    v18 = v17[1];
    sub_23B58F834(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(_QWORD *)&v39 = v19;
    *((_QWORD *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_23B5A39B0(v38, v37);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD650);
    swift_dynamicCast();
    v33 = v29;
    v34 = v30;
    v35 = v31;
    sub_23B5A39B0(&v32, v36);
    v29 = v33;
    v30 = v34;
    v31 = v35;
    sub_23B5A39B0(v36, v37);
    sub_23B5A39B0(v37, &v33);
    result = sub_23B601C04();
    v20 = -1 << *(_BYTE *)(v2 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(_QWORD *)(v10 + 32) = v31;
    result = (uint64_t)sub_23B5A39B0(&v33, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_23B5A39A8();
    return v2;
  }
  v14 = *(_QWORD *)(v28 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_23B5D10C0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  int64_t v30;
  _OWORD v31[4];
  _OWORD v32[2];
  _OWORD v33[3];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD638);
    v3 = sub_23B601D48();
  }
  else
  {
    v3 = MEMORY[0x24BEE4B00];
  }
  v28 = a1 + 64;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v4) >> 6;
  v7 = v3 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v30 = 0;
  while (1)
  {
    if (v6)
    {
      v10 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v11 = v10 | (v30 << 6);
      goto LABEL_28;
    }
    v12 = v30 + 1;
    if (__OFADD__(v30, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v12 >= v27)
      goto LABEL_37;
    v13 = *(_QWORD *)(v28 + 8 * v12);
    v14 = v30 + 1;
    if (!v13)
    {
      v14 = v30 + 2;
      if (v30 + 2 >= v27)
        goto LABEL_37;
      v13 = *(_QWORD *)(v28 + 8 * v14);
      if (!v13)
      {
        v14 = v30 + 3;
        if (v30 + 3 >= v27)
          goto LABEL_37;
        v13 = *(_QWORD *)(v28 + 8 * v14);
        if (!v13)
        {
          v14 = v30 + 4;
          if (v30 + 4 >= v27)
            goto LABEL_37;
          v13 = *(_QWORD *)(v28 + 8 * v14);
          if (!v13)
            break;
        }
      }
    }
LABEL_27:
    v6 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v14 << 6);
    v30 = v14;
LABEL_28:
    v16 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v11);
    *(_QWORD *)&v33[0] = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v11);
    *(_QWORD *)&v32[0] = v16;
    v17 = *(id *)&v33[0];
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(a2);
    swift_dynamicCast();
    v18 = *(_QWORD *)&v33[0];
    sub_23B5A39B0((_OWORD *)((char *)v33 + 8), v31);
    sub_23B5A39B0(v31, v33);
    sub_23B5A39B0(v33, v32);
    sub_23B60191C();
    sub_23B601E8C();
    sub_23B60194C();
    v19 = sub_23B601EB0();
    result = swift_bridgeObjectRelease();
    v20 = -1 << *(_BYTE *)(v3 + 32);
    v21 = v19 & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v7 + 8 * (v21 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v7 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v7 + 8 * v22);
      }
      while (v26 == -1);
      v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v7 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v9) = v18;
    result = (uint64_t)sub_23B5A39B0(v32, (_OWORD *)(*(_QWORD *)(v3 + 56) + 32 * v9));
    ++*(_QWORD *)(v3 + 16);
  }
  v15 = v30 + 5;
  if (v30 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_23B5A39A8();
    return v3;
  }
  v13 = *(_QWORD *)(v28 + 8 * v15);
  if (v13)
  {
    v14 = v30 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v14 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v14 >= v27)
      goto LABEL_37;
    v13 = *(_QWORD *)(v28 + 8 * v14);
    ++v15;
    if (v13)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t CentralManager.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = v0;
  if (qword_2542FD398 != -1)
    swift_once();
  v2 = sub_23B60185C();
  __swift_project_value_buffer(v2, (uint64_t)qword_2542FD380);
  swift_retain_n();
  v3 = sub_23B601844();
  v4 = sub_23B601B68();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v13 = v6;
    *(_DWORD *)v5 = 136315138;
    swift_retain();
    v7 = sub_23B5CF79C();
    v9 = v8;
    swift_release();
    sub_23B58E160(v7, v9, &v13);
    sub_23B601BC8();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_23B583000, v3, v4, "[%s] deinit", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v6, -1, -1);
    MEMORY[0x23B868A2C](v5, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  v10 = v1 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_id;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD1E0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);

  swift_bridgeObjectRelease();
  sub_23B587ED4(v1 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_scanContinuation, (uint64_t *)&unk_256A35990);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_23B587ED4(v1 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_connectionEventsStream, &qword_2542FD5A8);
  sub_23B587ED4(v1 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_connectionEventsStreamContinuation, (uint64_t *)&unk_2542FD568);
  swift_release();
  swift_defaultActor_destroy();
  return v1;
}

uint64_t CentralManager.__deallocating_deinit()
{
  CentralManager.deinit();
  return swift_defaultActor_deallocate();
}

uint64_t sub_23B5D1758(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD550);
  v2[4] = v3;
  v2[5] = *(_QWORD *)(v3 - 8);
  v2[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5D17BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 40);
  v1 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 32);
  swift_allocObject();
  swift_weakInit();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v1, *MEMORY[0x24BEE6A10], v3);
  sub_23B601AC0();
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5D1874(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t Strong;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  void (*v30)(uint64_t, char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v32 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD580);
  v34 = *(_QWORD *)(v1 - 8);
  v35 = *(_QWORD *)(v34 + 64);
  v36 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v33 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD530);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = v5;
  v6 = sub_23B601820();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v26 - v11;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  sub_23B601814();
  v29 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v29(v10, v12, v6);
  v14 = *(unsigned __int8 *)(v7 + 80);
  v31 = v7;
  v28 = v14 | 7;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = Strong;
  v30 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 32);
  v30(v15 + ((v14 + 24) & ~v14), v10, v6);
  swift_retain();
  v16 = v36;
  v17 = v32;
  sub_23B601A90();
  v18 = sub_23B601A78();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v5, 1, 1, v18);
  v20 = v33;
  v19 = v34;
  (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v33, v17, v16);
  v29(v10, v12, v6);
  v21 = v19;
  v22 = (*(unsigned __int8 *)(v19 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v23 = (v35 + v14 + v22) & ~v14;
  v24 = (char *)swift_allocObject();
  *((_QWORD *)v24 + 2) = 0;
  *((_QWORD *)v24 + 3) = 0;
  *((_QWORD *)v24 + 4) = Strong;
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(&v24[v22], v20, v36);
  v30((uint64_t)&v24[v23], v10, v6);
  swift_retain();
  sub_23B5CD248((uint64_t)v27, (uint64_t)&unk_256A35EF0, (uint64_t)v24);
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v12, v6);
}

uint64_t sub_23B5D1B40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  uint64_t v15;

  v5 = sub_23B601820();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD530);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23B601A78();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v5);
  v12 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v13 = (char *)swift_allocObject();
  *((_QWORD *)v13 + 2) = 0;
  *((_QWORD *)v13 + 3) = 0;
  *((_QWORD *)v13 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v13[v12], (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  swift_retain();
  sub_23B5CD248((uint64_t)v10, (uint64_t)&unk_256A35F08, (uint64_t)v13);
  return swift_release();
}

uint64_t sub_23B5D1C84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[3] = a4;
  v5[4] = a5;
  v5[2] = a1;
  return swift_task_switch();
}

uint64_t sub_23B5D1CA0()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
    return swift_task_switch();
  **(_BYTE **)(v0 + 16) = 1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5D1CCC()
{
  uint64_t v0;

  sub_23B5D1D20(*(_QWORD *)(v0 + 32));
  return swift_task_switch();
}

uint64_t sub_23B5D1D08()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 16) = *(_QWORD *)(v0 + 24) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5D1D20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32[3];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD588);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23B601820();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v25 - v11;
  if (qword_2542FD398 != -1)
    swift_once();
  v13 = sub_23B60185C();
  __swift_project_value_buffer(v13, (uint64_t)qword_2542FD380);
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v30(v12, a1, v6);
  v14 = sub_23B601844();
  v15 = sub_23B601B68();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc();
    v27 = v10;
    v17 = (uint8_t *)v16;
    v18 = swift_slowAlloc();
    v29 = v1;
    v19 = v18;
    v32[0] = v18;
    v26 = a1;
    *(_DWORD *)v17 = 136446210;
    v28 = v5;
    sub_23B5884D4((unint64_t *)&qword_256A347A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v20 = sub_23B601DE4();
    v31 = sub_23B58E160(v20, v21, v32);
    v5 = v28;
    a1 = v26;
    sub_23B601BC8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    _os_log_impl(&dword_23B583000, v14, v15, "Removing stateContinuation for %{public}s", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v19, -1, -1);
    v22 = v17;
    v10 = v27;
    MEMORY[0x23B868A2C](v22, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }

  v30(v10, a1, v6);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD580);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v5, 1, 1, v23);
  swift_beginAccess();
  sub_23B5F99F0((uint64_t)v5, (uint64_t)v10);
  return swift_endAccess();
}

uint64_t sub_23B5D2018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[4] = a5;
  v6[5] = a6;
  v6[2] = a1;
  v6[3] = a4;
  return swift_task_switch();
}

uint64_t sub_23B5D2034()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
    return swift_task_switch();
  **(_BYTE **)(v0 + 16) = 1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5D2060()
{
  uint64_t v0;

  sub_23B5D20A0(*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 32), *(_QWORD *)(v0 + 40));
  return swift_task_switch();
}

uint64_t sub_23B5D20A0(void (*a1)(_QWORD, _QWORD, _QWORD), uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  os_log_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(_QWORD, _QWORD, _QWORD);
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  _QWORD v46[2];
  uint64_t v47;
  uint8_t *v48;
  uint64_t v49;
  os_log_t v50;
  int v51;
  void (*v52)(unint64_t, uint64_t, uint64_t);
  char *v53;
  char *v54;
  void (*v55)(_QWORD, _QWORD, _QWORD);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60[3];

  v55 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD538);
  v56 = *(_QWORD *)(v3 - 8);
  v57 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD580);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v46 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD588);
  MEMORY[0x24BDAC7A8](v13);
  v54 = (char *)v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23B601820();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v53 = (char *)v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (unint64_t)v46 - v19;
  if (qword_2542FD398 != -1)
LABEL_36:
    swift_once();
  v21 = sub_23B60185C();
  __swift_project_value_buffer(v21, (uint64_t)qword_2542FD380);
  v52 = *(void (**)(unint64_t, uint64_t, uint64_t))(v16 + 16);
  v52(v20, a2, v15);
  v22 = sub_23B601844();
  v23 = sub_23B601B68();
  v51 = v23;
  if (os_log_type_enabled(v22, v23))
  {
    v50 = v22;
    v24 = (uint8_t *)swift_slowAlloc();
    v49 = swift_slowAlloc();
    v60[0] = v49;
    v47 = a2;
    v48 = v24;
    *(_DWORD *)v24 = 136446210;
    v46[1] = v24 + 4;
    sub_23B5884D4((unint64_t *)&qword_256A347A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v25 = sub_23B601DE4();
    v59 = sub_23B58E160(v25, v26, v60);
    a2 = v47;
    sub_23B601BC8();
    swift_bridgeObjectRelease();
    v27 = v20;
    v28 = v15;
    (*(void (**)(unint64_t, uint64_t))(v16 + 8))(v27, v15);
    v29 = v50;
    v30 = v48;
    _os_log_impl(&dword_23B583000, v50, (os_log_type_t)v51, "Storing stateContinuation for %{public}s", v48, 0xCu);
    v31 = v49;
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v31, -1, -1);
    MEMORY[0x23B868A2C](v30, -1, -1);

  }
  else
  {
    (*(void (**)(unint64_t, uint64_t))(v16 + 8))(v20, v15);

    v28 = v15;
  }
  v32 = (uint64_t)v53;
  v52((unint64_t)v53, a2, v28);
  v34 = (uint64_t)v54;
  v33 = v55;
  v55 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
  v55(v54, v33, v6);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(v34, 0, 1, v6);
  v35 = (uint64_t *)(v58 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_stateContinuations);
  swift_beginAccess();
  sub_23B5F99F0(v34, v32);
  swift_endAccess();
  a2 = *v35;
  v36 = *(_QWORD *)(*v35 + 64);
  v53 = (char *)(*v35 + 64);
  v37 = 1 << *(_BYTE *)(a2 + 32);
  v38 = -1;
  if (v37 < 64)
    v38 = ~(-1 << v37);
  v20 = v38 & v36;
  v16 = OBJC_IVAR____TtC15FindMyBluetooth14CentralManager__state;
  v54 = (char *)((unint64_t)(v37 + 63) >> 6);
  swift_bridgeObjectRetain();
  v15 = 0;
  while (1)
  {
    if (v20)
    {
      v40 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      v41 = v40 | (v15 << 6);
      goto LABEL_30;
    }
    v42 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    if (v42 >= (uint64_t)v54)
      return swift_release();
    v43 = *(_QWORD *)&v53[8 * v42];
    ++v15;
    if (!v43)
    {
      v15 = v42 + 1;
      if (v42 + 1 >= (uint64_t)v54)
        return swift_release();
      v43 = *(_QWORD *)&v53[8 * v15];
      if (!v43)
      {
        v15 = v42 + 2;
        if (v42 + 2 >= (uint64_t)v54)
          return swift_release();
        v43 = *(_QWORD *)&v53[8 * v15];
        if (!v43)
        {
          v15 = v42 + 3;
          if (v42 + 3 >= (uint64_t)v54)
            return swift_release();
          v43 = *(_QWORD *)&v53[8 * v15];
          if (!v43)
            break;
        }
      }
    }
LABEL_29:
    v20 = (v43 - 1) & v43;
    v41 = __clz(__rbit64(v43)) + (v15 << 6);
LABEL_30:
    v55(v12, *(_QWORD *)(a2 + 56) + *(_QWORD *)(v7 + 72) * v41, v6);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v12, v6);
    v39 = *(_QWORD *)(v58 + v16);
    if (v39 >= 6)
    {
      if (qword_2542FCCC8 != -1)
        swift_once();
      if (qword_2542FE088 == v39)
        LOBYTE(v39) = 6;
      else
        LOBYTE(v39) = 0;
    }
    LOBYTE(v60[0]) = v39;
    sub_23B601A9C();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v5, v57);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  v44 = v42 + 4;
  if (v44 < (uint64_t)v54)
  {
    v43 = *(_QWORD *)&v53[8 * v44];
    if (!v43)
    {
      while (1)
      {
        v15 = v44 + 1;
        if (__OFADD__(v44, 1))
          goto LABEL_35;
        if (v15 >= (uint64_t)v54)
          return swift_release();
        v43 = *(_QWORD *)&v53[8 * v15];
        ++v44;
        if (v43)
          goto LABEL_29;
      }
    }
    v15 = v44;
    goto LABEL_29;
  }
  return swift_release();
}

uint64_t sub_23B5D2650@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t inited;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  id v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t, uint64_t);
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v5 = sub_23B601820();
  v42 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1F8);
  v47 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD568);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD5A8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_isPairingCentralManager) & 1) != 0)
    goto LABEL_8;
  v46 = v5;
  v41 = a2;
  v17 = v2 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_connectionEventsStream;
  swift_beginAccess();
  sub_23B5A3C5C(v17, (uint64_t)v16, &qword_2542FD5A8);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD5A0);
  LODWORD(v17) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v16, 1, v18);
  sub_23B587ED4((uint64_t)v16, &qword_2542FD5A8);
  if ((_DWORD)v17 != 1)
    goto LABEL_8;
  v19 = v2 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_connectionEventsStreamContinuation;
  swift_beginAccess();
  sub_23B5A3C5C(v19, (uint64_t)v13, (uint64_t *)&unk_2542FD568);
  v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD558);
  LODWORD(v19) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v13, 1, v20);
  sub_23B587ED4((uint64_t)v13, (uint64_t *)&unk_2542FD568);
  if ((_DWORD)v19 == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD640);
    inited = swift_initStackObject();
    v22 = inited;
    *(_OWORD *)(inited + 16) = xmmword_23B607AF0;
    v23 = (void *)*MEMORY[0x24BDBB160];
    *(_QWORD *)(inited + 32) = *MEMORY[0x24BDBB160];
    v24 = *(_QWORD *)(a1 + 16);
    if (v24)
    {
      v39 = inited;
      v40 = v2;
      v48 = MEMORY[0x24BEE4AF8];
      v25 = v23;
      sub_23B601CAC();
      v26 = (void *)objc_opt_self();
      v27 = v47;
      v28 = a1 + ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80));
      v44 = *(_QWORD *)(v47 + 72);
      v45 = v26;
      v43 = *(void (**)(char *, uint64_t, uint64_t))(v47 + 16);
      v29 = v42;
      do
      {
        v43(v10, v28, v8);
        sub_23B6015BC();
        v30 = (void *)sub_23B6017E4();
        v31 = objc_msgSend(v45, sel_UUIDWithNSUUID_, v30);

        (*(void (**)(char *, uint64_t))(v29 + 8))(v7, v46);
        (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v8);
        sub_23B601C94();
        sub_23B601CB8();
        v27 = v47;
        sub_23B601CC4();
        sub_23B601CA0();
        v28 += v44;
        --v24;
      }
      while (v24);
      v32 = v48;
      v33 = v41;
      v22 = v39;
    }
    else
    {
      v35 = v23;
      v32 = MEMORY[0x24BEE4AF8];
      v33 = v41;
    }
    *(_QWORD *)(v22 + 40) = v32;
    v36 = sub_23B5CF434(v22, &qword_2542FD630);
    v37 = sub_23B5D10C0(v36, &qword_2542FD508);
    swift_bridgeObjectRelease();
    sub_23B5D2AF8(v37, v33);
    return swift_bridgeObjectRelease();
  }
  else
  {
LABEL_8:
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
}

uint64_t sub_23B5D2AF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[24];

  v3 = v2;
  v37 = a2;
  v40 = *v2;
  v41 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD530);
  MEMORY[0x24BDAC7A8](v4);
  v39 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD568);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD5A8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD540);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD558);
  v38 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B5CFB70(v42);
  if (v42[0] == 5 || (sub_23B5CFB70(v42), v42[0] > 5u))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD218);
    (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x24BEE6A10], v12);
    v36 = v16;
    v22 = v37;
    sub_23B601A84();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD5A0);
    v24 = *(_QWORD *)(v23 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v11, v22, v23);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v11, 0, 1, v23);
    v25 = (uint64_t)v3 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_connectionEventsStream;
    swift_beginAccess();
    sub_23B5A2728((uint64_t)v11, v25, &qword_2542FD5A8);
    swift_endAccess();
    v26 = v38;
    v27 = v36;
    (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v8, v18, v36);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v8, 0, 1, v27);
    v28 = (uint64_t)v3 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_connectionEventsStreamContinuation;
    swift_beginAccess();
    sub_23B5A2728((uint64_t)v8, v28, (uint64_t *)&unk_2542FD568);
    swift_endAccess();
    swift_retain();
    sub_23B601A90();
    v29 = sub_23B601A78();
    v30 = (uint64_t)v39;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v39, 1, 1, v29);
    v31 = sub_23B5884D4(&qword_2542FD3C8, type metadata accessor for CentralManager, (uint64_t)&protocol conformance descriptor for CentralManager);
    v32 = (_QWORD *)swift_allocObject();
    v32[2] = v3;
    v32[3] = v31;
    v33 = v40;
    v34 = v41;
    v32[4] = v3;
    v32[5] = v34;
    v32[6] = v33;
    swift_retain_n();
    swift_bridgeObjectRetain();
    *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_connectionEventMonitoringTask) = sub_23B5CD39C(v30, (uint64_t)&unk_256A35EC0, (uint64_t)v32);
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v18, v27);
  }
  else
  {
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    swift_allocError();
    v20 = v19;
    sub_23B5CFB70(v42);
    *v20 = v42[0];
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
}

uint64_t sub_23B5D2F44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t inited;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  int64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  id v34;
  unint64_t v35;
  uint64_t v36;
  _QWORD v37[2];
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;

  v38 = a2;
  v40 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23B601820();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD568);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD5A8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_isPairingCentralManager) & 1) != 0)
    goto LABEL_12;
  v41 = v7;
  v42 = v10;
  v43 = v4;
  v17 = v2 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_connectionEventsStream;
  swift_beginAccess();
  v18 = v2;
  sub_23B5A3C5C(v17, (uint64_t)v16, &qword_2542FD5A8);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD5A0);
  LODWORD(v17) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v16, 1, v19);
  sub_23B587ED4((uint64_t)v16, &qword_2542FD5A8);
  if ((_DWORD)v17 != 1)
    goto LABEL_12;
  v20 = v2 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_connectionEventsStreamContinuation;
  swift_beginAccess();
  sub_23B5A3C5C(v20, (uint64_t)v13, (uint64_t *)&unk_2542FD568);
  v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD558);
  LODWORD(v20) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v13, 1, v21);
  sub_23B587ED4((uint64_t)v13, (uint64_t *)&unk_2542FD568);
  if ((_DWORD)v20 == 1)
  {
    v37[1] = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A8);
    inited = swift_initStackObject();
    v23 = inited;
    *(_OWORD *)(inited + 16) = xmmword_23B607AF0;
    v24 = (void *)*MEMORY[0x24BDBB158];
    *(_QWORD *)(inited + 32) = *MEMORY[0x24BDBB158];
    v25 = v40;
    v26 = *(_QWORD *)(v40 + 16);
    if (v26)
    {
      v37[0] = inited;
      v44 = MEMORY[0x24BEE4AF8];
      v27 = v24;
      sub_23B5B9E80(0, v26, 0);
      v28 = v25 + ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80));
      v29 = *(_QWORD *)(v43 + 72);
      v39 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
      v40 = v29;
      v30 = v44;
      do
      {
        v39(v6, v28, v3);
        sub_23B6015BC();
        (*(void (**)(char *, uint64_t))(v43 + 8))(v6, v3);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23B5B9E80(0, *(_QWORD *)(v30 + 16) + 1, 1);
          v30 = v44;
        }
        v32 = *(_QWORD *)(v30 + 16);
        v31 = *(_QWORD *)(v30 + 24);
        if (v32 >= v31 >> 1)
        {
          sub_23B5B9E80(v31 > 1, v32 + 1, 1);
          v30 = v44;
        }
        *(_QWORD *)(v30 + 16) = v32 + 1;
        (*(void (**)(unint64_t, char *))(v8 + 32))(v30+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v32, v42);
        v44 = v30;
        v28 += v40;
        --v26;
      }
      while (v26);
      v23 = v37[0];
    }
    else
    {
      v34 = v24;
      v30 = MEMORY[0x24BEE4AF8];
    }
    *(_QWORD *)(v23 + 40) = v30;
    v35 = sub_23B5CF434(v23, (uint64_t *)&unk_256A35EA8);
    v36 = sub_23B5D10C0(v35, &qword_256A35EA0);
    swift_bridgeObjectRelease();
    sub_23B5D2AF8(v36, v38);
    return swift_bridgeObjectRelease();
  }
  else
  {
LABEL_12:
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
}

uint64_t sub_23B5D33F0(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v5 + 80) = a4;
  *(_QWORD *)(v5 + 88) = v4;
  *(_QWORD *)(v5 + 64) = a1;
  *(_QWORD *)(v5 + 72) = a3;
  *(_QWORD *)(v5 + 96) = *v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD530);
  *(_QWORD *)(v5 + 104) = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359C0);
  *(_QWORD *)(v5 + 112) = v7;
  *(_QWORD *)(v5 + 120) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v5 + 128) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35990);
  v8 = swift_task_alloc();
  v9 = *a2;
  *(_QWORD *)(v5 + 136) = v8;
  *(_QWORD *)(v5 + 144) = v9;
  *(_BYTE *)(v5 + 152) = *((_BYTE *)a2 + 8);
  return swift_task_switch();
}

uint64_t sub_23B5D34B8()
{
  uint64_t v0;
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t (*v26)(void);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;

  sub_23B5CFB70(&v36);
  if (v36 != 5)
  {
    sub_23B5CFB70(&v36);
    if (v36 <= 5u)
    {
      type metadata accessor for CentralManager.Error();
      sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
      swift_allocError();
      v2 = v1;
      sub_23B5CFB70(&v36);
      *v2 = v36;
LABEL_10:
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      v26 = *(uint64_t (**)(void))(v0 + 8);
      return v26();
    }
  }
  v3 = *(_QWORD *)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 88) + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_scanContinuation;
  swift_beginAccess();
  sub_23B5A3C5C(v4, v3, (uint64_t *)&unk_256A35990);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD5C8);
  LODWORD(v4) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 1, v5);
  sub_23B587ED4(v3, (uint64_t *)&unk_256A35990);
  if ((_DWORD)v4 != 1)
  {
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    swift_allocError();
    goto LABEL_10;
  }
  v6 = *(_BYTE *)(v0 + 152);
  v7 = *(_QWORD *)(v0 + 120);
  v8 = *(_QWORD *)(v0 + 128);
  v9 = *(_QWORD *)(v0 + 112);
  v11 = *(_QWORD *)(v0 + 80);
  v10 = *(_QWORD *)(v0 + 88);
  v12 = *(_QWORD *)(v0 + 72);
  v36 = *(_QWORD *)(v0 + 144);
  v37 = v6;
  v35 = sub_23B5E3A88((uint64_t)&v36);
  v14 = v13;
  v15 = v10 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_garbageCollectInterval;
  *(_QWORD *)v15 = v12;
  *(_QWORD *)(v15 + 8) = v11;
  *(_BYTE *)(v15 + 16) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A359C8);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 104))(v8, *MEMORY[0x24BEE6CA0], v9);
  sub_23B601B44();
  if (qword_2542FD398 != -1)
    swift_once();
  v16 = sub_23B60185C();
  __swift_project_value_buffer(v16, (uint64_t)qword_2542FD380);
  v17 = v35;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v18 = sub_23B601844();
  v19 = sub_23B601B5C();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc();
    v34 = swift_slowAlloc();
    v36 = v34;
    *(_DWORD *)v20 = 136446466;
    *(_QWORD *)(v0 + 40) = v35;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A34B48);
    v21 = sub_23B601928();
    *(_QWORD *)(v0 + 48) = sub_23B58E160(v21, v22, &v36);
    sub_23B601BC8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2082;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD650);
    v23 = sub_23B6018BC();
    v25 = v24;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 56) = sub_23B58E160(v23, v25, &v36);
    sub_23B601BC8();
    swift_bridgeObjectRelease_n();
    v17 = v35;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B583000, v18, v19, "Calling CBCentralManager.scanForPeripherals() with services: %{public}s options: %{public}s", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v34, -1, -1);
    MEMORY[0x23B868A2C](v20, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v28 = *(_QWORD *)(v0 + 96);
  v27 = *(_QWORD *)(v0 + 104);
  v29 = *(_QWORD *)(v0 + 88);
  v30 = sub_23B601A78();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v27, 1, 1, v30);
  v31 = sub_23B5884D4(&qword_2542FD3C8, type metadata accessor for CentralManager, (uint64_t)&protocol conformance descriptor for CentralManager);
  v32 = (_QWORD *)swift_allocObject();
  v32[2] = v29;
  v32[3] = v31;
  v32[4] = v29;
  v32[5] = v17;
  v32[6] = v14;
  v32[7] = v28;
  swift_retain_n();
  sub_23B5CD0FC(v27, (uint64_t)&unk_256A359E0, (uint64_t)v32);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v26 = *(uint64_t (**)(void))(v0 + 8);
  return v26();
}

uint64_t sub_23B5D3A10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35990);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD5C8);
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  v9 = a2 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_scanContinuation;
  swift_beginAccess();
  sub_23B5A2728((uint64_t)v6, v9, (uint64_t *)&unk_256A35990);
  swift_endAccess();
  swift_retain();
  return sub_23B601B08();
}

uint64_t sub_23B5D3B18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch();
}

uint64_t sub_23B5D3B30()
{
  uint64_t v0;

  sub_23B5D3B60();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void *sub_23B5D3B60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  void *result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  int64_t v18;
  int64_t v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35990);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (uint64_t *)((char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_2542FD398 != -1)
    goto LABEL_30;
  while (1)
  {
    v5 = sub_23B60185C();
    __swift_project_value_buffer(v5, (uint64_t)qword_2542FD380);
    v6 = sub_23B601844();
    v7 = sub_23B601B5C();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_23B583000, v6, v7, "Calling CBCentralManager.stopScan()", v8, 2u);
      MEMORY[0x23B868A2C](v8, -1, -1);
    }

    result = *(void **)(v1 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_underlyingObject);
    if (!result)
      break;
    objc_msgSend(result, sel_stopScan);
    v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD5C8);
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v4, 1, 1, v10);
    v11 = v1 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_scanContinuation;
    swift_beginAccess();
    sub_23B5A2728((uint64_t)v4, v11, (uint64_t *)&unk_256A35990);
    swift_endAccess();
    v12 = v1 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_garbageCollectInterval;
    *(_QWORD *)v12 = 0;
    *(_QWORD *)(v12 + 8) = 0;
    *(_BYTE *)(v12 + 16) = 1;
    v1 += OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_garbageCollectTasks;
    swift_beginAccess();
    v13 = *(_QWORD *)v1 + 64;
    v14 = 1 << *(_BYTE *)(*(_QWORD *)v1 + 32);
    v15 = -1;
    if (v14 < 64)
      v15 = ~(-1 << v14);
    v16 = v15 & *(_QWORD *)(*(_QWORD *)v1 + 64);
    v17 = (unint64_t)(v14 + 63) >> 6;
    swift_bridgeObjectRetain();
    v18 = 0;
    v4 = &qword_256A34490;
    while (1)
    {
      if (v16)
      {
        v16 &= v16 - 1;
        goto LABEL_9;
      }
      v19 = v18 + 1;
      if (__OFADD__(v18, 1))
      {
        __break(1u);
        goto LABEL_29;
      }
      if (v19 >= v17)
        goto LABEL_27;
      v20 = *(_QWORD *)(v13 + 8 * v19);
      ++v18;
      if (!v20)
      {
        v18 = v19 + 1;
        if (v19 + 1 >= v17)
          goto LABEL_27;
        v20 = *(_QWORD *)(v13 + 8 * v18);
        if (!v20)
        {
          v18 = v19 + 2;
          if (v19 + 2 >= v17)
            goto LABEL_27;
          v20 = *(_QWORD *)(v13 + 8 * v18);
          if (!v20)
          {
            v18 = v19 + 3;
            if (v19 + 3 >= v17)
              goto LABEL_27;
            v20 = *(_QWORD *)(v13 + 8 * v18);
            if (!v20)
              break;
          }
        }
      }
LABEL_26:
      v16 = (v20 - 1) & v20;
LABEL_9:
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A34490);
      sub_23B601ACC();
      swift_release();
    }
    v21 = v19 + 4;
    if (v21 >= v17)
    {
LABEL_27:
      swift_release();
      *(_QWORD *)v1 = MEMORY[0x24BEE4B00];
      return (void *)swift_bridgeObjectRelease();
    }
    v20 = *(_QWORD *)(v13 + 8 * v21);
    if (v20)
    {
      v18 = v21;
      goto LABEL_26;
    }
    while (1)
    {
      v18 = v21 + 1;
      if (__OFADD__(v21, 1))
        break;
      if (v18 >= v17)
        goto LABEL_27;
      v20 = *(_QWORD *)(v13 + 8 * v18);
      ++v21;
      if (v20)
        goto LABEL_26;
    }
LABEL_29:
    __break(1u);
LABEL_30:
    swift_once();
  }
  __break(1u);
  return result;
}

uint64_t sub_23B5D3EB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  return swift_task_switch();
}

uint64_t sub_23B5D3ED4()
{
  uint64_t v0;

  sub_23B5D3F08(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23B5D3F08(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  _QWORD v14[6];

  v4 = *(void **)(a1 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_underlyingObject);
  if (v4)
  {
    v7 = a2;
    if (a2)
    {
      sub_23B58F7DC(0, &qword_256A34B40);
      v8 = v4;
      v7 = (void *)sub_23B6019D0();
    }
    else
    {
      v9 = v4;
    }
    sub_23B5D0924(a3);
    v10 = (void *)sub_23B6018A4();
    swift_bridgeObjectRelease();
    v11 = swift_allocObject();
    swift_weakInit();
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = v11;
    *(_QWORD *)(v12 + 24) = a4;
    v14[4] = sub_23B5E5870;
    v14[5] = v12;
    v14[0] = MEMORY[0x24BDAC760];
    v14[1] = 1107296256;
    v14[2] = sub_23B5D4710;
    v14[3] = &block_descriptor_117;
    v13 = _Block_copy(v14);
    swift_release();
    objc_msgSend(v4, sel_scanForPeripheralsWithServices_options_completion_, v7, v10, v13);
    _Block_release(v13);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_23B5D4088(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  uint64_t v14;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD530);
  result = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    swift_beginAccess();
    result = swift_weakLoadStrong();
    if (result)
    {
      v10 = result;
      v11 = sub_23B601A78();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v9, 1, 1, v11);
      v12 = (_QWORD *)swift_allocObject();
      v12[2] = 0;
      v12[3] = 0;
      v12[4] = a1;
      v12[5] = v10;
      v12[6] = a4;
      v13 = a1;
      sub_23B5CD0FC((uint64_t)v9, (uint64_t)&unk_256A35E68, (uint64_t)v12);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_23B5D4190(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[11] = a4;
  v5[12] = a5;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD5C8);
  v5[13] = v6;
  v5[14] = *(_QWORD *)(v6 - 8);
  v5[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35990);
  v5[16] = swift_task_alloc();
  v5[17] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5D4228()
{
  _QWORD *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  _BOOL4 v15;
  void *v16;
  uint8_t *v17;
  _QWORD *v18;
  id v19;
  uint64_t v20;

  v1 = (void *)sub_23B6016C4();
  v0[18] = v1;
  v2 = objc_msgSend(v1, sel_domain);
  v3 = sub_23B60191C();
  v5 = v4;

  if (v3 == sub_23B60191C() && v5 == v6)
  {
    swift_bridgeObjectRelease_n();
LABEL_8:
    if ((char *)objc_msgSend(v1, sel_code) - 35 <= (char *)1)
      return swift_task_switch();
    goto LABEL_9;
  }
  v8 = sub_23B601DFC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v8 & 1) != 0)
    goto LABEL_8;
LABEL_9:
  if (qword_2542FD398 != -1)
    swift_once();
  v9 = (void *)v0[11];
  v10 = sub_23B60185C();
  __swift_project_value_buffer(v10, (uint64_t)qword_2542FD380);
  v11 = v9;
  v12 = v9;
  v13 = sub_23B601844();
  v14 = sub_23B601B68();
  v15 = os_log_type_enabled(v13, v14);
  v16 = (void *)v0[11];
  if (v15)
  {
    v17 = (uint8_t *)swift_slowAlloc();
    v18 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v17 = 138412290;
    v19 = v16;
    v20 = _swift_stdlib_bridgeErrorToNSError();
    v0[9] = v20;
    sub_23B601BC8();
    *v18 = v20;

    _os_log_impl(&dword_23B583000, v13, v14, "STUB: unexpected error: %@", v17, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35D50);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v18, -1, -1);
    MEMORY[0x23B868A2C](v17, -1, -1);
  }
  else
  {

  }
  return swift_task_switch();
}

uint64_t sub_23B5D44B0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = v0[17];
  v2 = v0[13];
  v3 = v0[14];
  v4 = v0[12] + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_scanContinuation;
  swift_beginAccess();
  sub_23B5A3C5C(v4, v1, (uint64_t *)&unk_256A35990);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2))
  {
    sub_23B587ED4(v0[17], (uint64_t *)&unk_256A35990);
  }
  else
  {
    v5 = v0[17];
    v7 = v0[14];
    v6 = v0[15];
    v8 = v0[13];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v5, v8);
    sub_23B587ED4(v5, (uint64_t *)&unk_256A35990);
    v0[10] = 0;
    sub_23B601B20();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  }
  return swift_task_switch();
}

uint64_t sub_23B5D45AC()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5D4600()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;

  v1 = v0[16];
  v2 = v0[13];
  v3 = v0[14];
  v4 = v0[12] + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_scanContinuation;
  swift_beginAccess();
  sub_23B5A3C5C(v4, v1, (uint64_t *)&unk_256A35990);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2))
  {
    sub_23B587ED4(v0[16], (uint64_t *)&unk_256A35990);
  }
  else
  {
    v5 = v0[15];
    v6 = v0[16];
    v7 = v0[13];
    v8 = v0[14];
    v9 = (void *)v0[11];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v5, v6, v7);
    sub_23B587ED4(v6, (uint64_t *)&unk_256A35990);
    v0[8] = v9;
    v10 = v9;
    sub_23B601B20();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v5, v7);
  }
  return swift_task_switch();
}

void sub_23B5D4710(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  v6 = a2;
  v7 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t sub_23B5D4784(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[16] = a1;
  v2[17] = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A346E0);
  v2[18] = swift_task_alloc();
  sub_23B601820();
  v2[19] = swift_task_alloc();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  v2[20] = v3;
  v2[21] = *(_QWORD *)(v3 - 8);
  v2[22] = swift_task_alloc();
  v2[23] = swift_task_alloc();
  return swift_task_switch();
}

void sub_23B5D483C()
{
  uint64_t v0;
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t Strong;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t);
  id v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;

  sub_23B5CFB70(&v58);
  if (v58 != 5)
  {
    sub_23B5CFB70(&v58);
    if (v58 <= 5u)
    {
      type metadata accessor for CentralManager.Error();
      sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
      swift_allocError();
      v2 = v1;
      sub_23B5CFB70(&v58);
      *v2 = v58;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      (*(void (**)(void))(v0 + 8))();
      return;
    }
  }
  sub_23B6015EC();
  if ((sub_23B601628() & 1) != 0)
    v3 = 0x6D6F646E6152;
  else
    v3 = 0x63696C627550;
  v58 = v3 & 0xFFFFFFFFFFFFLL | 0x20000000000000;
  v59 = 0xE700000000000000;
  sub_23B601958();
  swift_bridgeObjectRelease();
  v5 = v58;
  v4 = v59;
  if (qword_2542FD4A0 != -1)
    swift_once();
  v6 = sub_23B60185C();
  __swift_project_value_buffer(v6, (uint64_t)qword_2542FD480);
  swift_bridgeObjectRetain_n();
  v7 = sub_23B601844();
  v8 = sub_23B601B5C();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v58 = v10;
    *(_DWORD *)v9 = 141558275;
    *(_QWORD *)(v0 + 112) = 1752392040;
    sub_23B601BC8();
    *(_WORD *)(v9 + 12) = 2081;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 120) = sub_23B58E160(v5, v4, &v58);
    sub_23B601BC8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23B583000, v7, v8, "retrievePeripheral for MAC: %{private,mask.hash}s.", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v10, -1, -1);
    MEMORY[0x23B868A2C](v9, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v11 = *(void **)(*(_QWORD *)(v0 + 136) + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_underlyingObject);
  if (!v11)
  {
    __break(1u);
    return;
  }
  v12 = v11;
  v13 = (void *)sub_23B6018F8();
  v14 = objc_msgSend(v12, sel_retrievePeripheralWithAddress_, v13);
  *(_QWORD *)(v0 + 192) = v14;

  if (!v14)
  {
    swift_bridgeObjectRelease();
    Strong = 0;
LABEL_19:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    (*(void (**)(uint64_t))(v0 + 8))(Strong);
    return;
  }
  v15 = *(_QWORD *)(v0 + 136);
  v16 = objc_msgSend(v14, sel_identifier);
  sub_23B6017FC();

  type metadata accessor for Peripheral();
  sub_23B6015D4();
  v17 = (uint64_t *)(v15 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_discovered);
  swift_beginAccess();
  v18 = *v17;
  v57 = v5;
  if (*(_QWORD *)(*v17 + 16))
  {
    v19 = *(_QWORD *)(v0 + 184);
    swift_bridgeObjectRetain();
    v20 = sub_23B58ED88(v19);
    if ((v21 & 1) != 0)
    {
      v22 = *(_QWORD *)(v0 + 184);
      v23 = *(_QWORD *)(v0 + 160);
      v24 = *(_QWORD *)(v0 + 168);
      *(_QWORD *)(v0 + 200) = *(_QWORD *)(*(_QWORD *)(v18 + 56) + 8 * v20);
      swift_retain();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
      swift_retain_n();
      swift_bridgeObjectRetain();
      v25 = sub_23B601844();
      v26 = sub_23B601B8C();
      if (os_log_type_enabled(v25, v26))
      {
        v27 = swift_slowAlloc();
        v28 = swift_slowAlloc();
        v58 = v28;
        *(_DWORD *)v27 = 141558531;
        *(_QWORD *)(v0 + 88) = 1752392040;
        sub_23B601BC8();
        *(_WORD *)(v27 + 12) = 2081;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v0 + 96) = sub_23B58E160(v57, v4, &v58);
        sub_23B601BC8();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v27 + 22) = 2082;
        swift_retain();
        v29 = sub_23B598B88();
        v31 = v30;
        swift_release();
        *(_QWORD *)(v0 + 104) = sub_23B58E160(v29, v31, &v58);
        sub_23B601BC8();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23B583000, v25, v26, "Injecting MAC: %{private,mask.hash}s into discovered peripheral %{public}s", (uint8_t *)v27, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x23B868A2C](v28, -1, -1);
        MEMORY[0x23B868A2C](v27, -1, -1);

      }
      else
      {

        swift_release_n();
        swift_bridgeObjectRelease_n();
      }
      v50 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 208) = v50;
      *v50 = v0;
      v50[1] = sub_23B5D52B8;
      sub_23B594A4C(*(_QWORD *)(v0 + 128));
      return;
    }
    swift_bridgeObjectRelease();
  }
  v33 = *(_QWORD *)(v0 + 136);
  v34 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 168) + 8);
  v34(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 160));
  v35 = objc_msgSend(v14, sel_identifier);
  sub_23B6017FC();

  sub_23B6015D4();
  v36 = (uint64_t *)(v33 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_connected);
  swift_beginAccess();
  v37 = *v36;
  if (!*(_QWORD *)(*v36 + 16))
  {
LABEL_26:
    v34(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 160));
    swift_bridgeObjectRelease();
    if (objc_msgSend(v14, sel_delegate))
    {
      type metadata accessor for DelegateTrampoline_CBPeripheralPrivateDelegate();
      if (swift_dynamicCastClass())
      {
        Strong = swift_weakLoadStrong();
        swift_unknownObjectRelease();
        if (Strong)
        {

          goto LABEL_19;
        }
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
    v51 = *(_QWORD *)(v0 + 144);
    v52 = *(_QWORD *)(v0 + 128);
    v53 = sub_23B601634();
    v54 = *(_QWORD *)(v53 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 16))(v51, v52, v53);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
    v55 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 248) = v55;
    *v55 = v0;
    v55[1] = sub_23B5D544C;
    sub_23B5D5670((uint64_t)v14, *(_QWORD *)(v0 + 144), 1, 0, 0, 1);
    return;
  }
  v38 = *(_QWORD *)(v0 + 176);
  swift_bridgeObjectRetain();
  v39 = sub_23B58ED88(v38);
  if ((v40 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  v41 = *(_QWORD *)(v0 + 176);
  v42 = *(_QWORD *)(v0 + 160);
  *(_QWORD *)(v0 + 224) = *(_QWORD *)(*(_QWORD *)(v37 + 56) + 8 * v39);
  swift_retain();
  swift_bridgeObjectRelease();
  v34(v41, v42);
  swift_retain_n();
  swift_bridgeObjectRetain();
  v43 = sub_23B601844();
  v44 = sub_23B601B8C();
  if (os_log_type_enabled(v43, v44))
  {
    v45 = swift_slowAlloc();
    v46 = swift_slowAlloc();
    v58 = v46;
    *(_DWORD *)v45 = 141558531;
    *(_QWORD *)(v0 + 64) = 1752392040;
    sub_23B601BC8();
    *(_WORD *)(v45 + 12) = 2081;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 72) = sub_23B58E160(v57, v4, &v58);
    sub_23B601BC8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v45 + 22) = 2082;
    swift_retain();
    v47 = sub_23B598B88();
    v49 = v48;
    swift_release();
    *(_QWORD *)(v0 + 80) = sub_23B58E160(v47, v49, &v58);
    sub_23B601BC8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B583000, v43, v44, "Injecting MAC: %{private,mask.hash}s into existing peripheral %{public}s", (uint8_t *)v45, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v46, -1, -1);
    MEMORY[0x23B868A2C](v45, -1, -1);

  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
  v56 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 232) = v56;
  *v56 = v0;
  v56[1] = sub_23B5D5380;
  sub_23B594A4C(*(_QWORD *)(v0 + 128));
}

uint64_t sub_23B5D52B8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 216) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B5D531C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 200);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_23B5D5380()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 240) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B5D53E4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 224);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_23B5D544C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  *(_QWORD *)(*v2 + 256) = v1;
  swift_task_dealloc();
  v5 = *(_QWORD *)(v4 + 144);
  if (!v1)
    *(_QWORD *)(v4 + 264) = a1;
  sub_23B587ED4(v5, (uint64_t *)&unk_256A346E0);
  return swift_task_switch();
}

uint64_t sub_23B5D54DC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 264);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_23B5D5544()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 192);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5D55A8()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 192);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5D5610()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5D5670(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v7 + 152) = a5;
  *(_QWORD *)(v7 + 160) = v6;
  *(_BYTE *)(v7 + 265) = a6;
  *(_QWORD *)(v7 + 136) = a2;
  *(_QWORD *)(v7 + 144) = a4;
  *(_BYTE *)(v7 + 264) = a3;
  *(_QWORD *)(v7 + 128) = a1;
  sub_23B601820();
  *(_QWORD *)(v7 + 168) = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  *(_QWORD *)(v7 + 176) = v8;
  *(_QWORD *)(v7 + 184) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v7 + 192) = swift_task_alloc();
  *(_QWORD *)(v7 + 200) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5D5714()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char isUniquelyReferenced_nonNull_native;
  void (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  _QWORD *v31;
  __int128 v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = objc_msgSend(*(id *)(v0 + 128), sel_identifier);
  sub_23B6017FC();

  type metadata accessor for Peripheral();
  sub_23B6015D4();
  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_discovered);
  swift_beginAccess();
  v4 = *v3;
  if (*(_QWORD *)(v4 + 16))
  {
    v5 = *(_QWORD *)(v0 + 200);
    swift_bridgeObjectRetain();
    v6 = sub_23B58ED88(v5);
    if ((v7 & 1) != 0)
    {
LABEL_6:
      v11 = *(_QWORD *)(v0 + 200);
      v12 = *(_QWORD *)(v0 + 176);
      v13 = *(_QWORD *)(v0 + 184);
      v14 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v6);
      swift_retain();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(uint64_t))(v0 + 8))(v14);
    }
    swift_bridgeObjectRelease();
  }
  v8 = *(_QWORD *)(v0 + 160) + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_connected;
  swift_beginAccess();
  v4 = *(_QWORD *)v8;
  if (*(_QWORD *)(*(_QWORD *)v8 + 16))
  {
    v9 = *(_QWORD *)(v0 + 200);
    swift_bridgeObjectRetain();
    v6 = sub_23B58ED88(v9);
    if ((v10 & 1) != 0)
      goto LABEL_6;
    swift_bridgeObjectRelease();
  }
  v16 = *(_QWORD *)(v0 + 160) + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_peripheralCreationInProgress;
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v16 + 16)
    && (v17 = *(_QWORD *)(v0 + 200),
        swift_bridgeObjectRetain(),
        sub_23B58ED88(v17),
        LOBYTE(v17) = v18,
        swift_bridgeObjectRelease(),
        (v17 & 1) != 0))
  {
    v19 = *(_QWORD *)(v0 + 200);
    v20 = *(_QWORD *)(v0 + 160);
    sub_23B5884D4(&qword_2542FD3C8, type metadata accessor for CentralManager, (uint64_t)&protocol conformance descriptor for CentralManager);
    v21 = swift_task_alloc();
    *(_QWORD *)(v0 + 208) = v21;
    *(_QWORD *)(v21 + 16) = v20;
    *(_QWORD *)(v21 + 24) = v19;
    v22 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 216) = v22;
    *v22 = v0;
    v22[1] = sub_23B5D5B1C;
  }
  else
  {
    v24 = *(_QWORD *)(v0 + 192);
    v23 = *(_QWORD *)(v0 + 200);
    v26 = *(_QWORD *)(v0 + 176);
    v25 = *(_QWORD *)(v0 + 184);
    v36 = *(_BYTE *)(v0 + 265);
    v27 = *(_QWORD *)(v0 + 160);
    v34 = *(_QWORD *)(v0 + 144);
    v35 = *(_QWORD *)(v0 + 152);
    v33 = *(_BYTE *)(v0 + 264);
    v32 = *(_OWORD *)(v0 + 128);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v24, v23, v26);
    swift_beginAccess();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v37 = *(_QWORD *)v16;
    *(_QWORD *)v16 = 0x8000000000000000;
    sub_23B5B9410(MEMORY[0x24BEE4AF8], v24, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)v16 = v37;
    swift_bridgeObjectRelease();
    v29 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
    *(_QWORD *)(v0 + 232) = v29;
    v29(v24, v26);
    swift_endAccess();
    sub_23B5884D4(&qword_2542FD3C8, type metadata accessor for CentralManager, (uint64_t)&protocol conformance descriptor for CentralManager);
    v30 = swift_task_alloc();
    *(_QWORD *)(v0 + 240) = v30;
    *(_QWORD *)(v30 + 16) = v27;
    *(_QWORD *)(v30 + 24) = v23;
    *(_OWORD *)(v30 + 32) = v32;
    *(_BYTE *)(v30 + 48) = v33;
    *(_QWORD *)(v30 + 56) = v34;
    *(_QWORD *)(v30 + 64) = v35;
    *(_BYTE *)(v30 + 72) = v36 & 1;
    v31 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 248) = v31;
    *v31 = v0;
    v31[1] = sub_23B5D5BF8;
  }
  return sub_23B601E14();
}

uint64_t sub_23B5D5B1C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 224) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B5D5B90()
{
  uint64_t v0;
  uint64_t v1;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 8))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 176));
  v1 = *(_QWORD *)(v0 + 120);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_23B5D5BF8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 256) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B5D5C6C()
{
  uint64_t v0;
  uint64_t v1;

  (*(void (**)(_QWORD, _QWORD))(v0 + 232))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 176));
  v1 = *(_QWORD *)(v0 + 112);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_23B5D5CD4()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 8))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 176));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5D5D34()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(v0 + 232))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 176));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5D5D94(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[23] = a1;
  v2[24] = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A346E0);
  v2[25] = swift_task_alloc();
  sub_23B601820();
  v2[26] = swift_task_alloc();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  v2[27] = v3;
  v2[28] = *(_QWORD *)(v3 - 8);
  v2[29] = swift_task_alloc();
  v2[30] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5D5E4C()
{
  uint64_t v0;
  uint64_t result;
  _BYTE *v2;
  _BYTE *v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char v10;
  unsigned __int8 v11;
  _BYTE v12[9];

  result = sub_23B5CFB70(&v10);
  if (v10 == 5 || (result = sub_23B5CFB70(&v11), v11 > 5u))
  {
    v4 = *(_QWORD *)(v0 + 192);
    *(_QWORD *)(v0 + 168) = MEMORY[0x24BEE4AF8];
    v5 = *(void **)(v4 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_underlyingObject);
    *(_QWORD *)(v0 + 248) = v5;
    if (v5)
    {
      v6 = v5;
      v7 = sub_23B6019D0();
      *(_QWORD *)(v0 + 256) = v7;
      *(_QWORD *)(v0 + 56) = v0 + 176;
      *(_QWORD *)(v0 + 16) = v0;
      *(_QWORD *)(v0 + 24) = sub_23B5D6020;
      v8 = swift_continuation_init();
      *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
      v9 = (_QWORD *)(v0 + 80);
      v9[1] = 0x40000000;
      v9[2] = sub_23B5D6A48;
      v9[3] = &block_descriptor;
      v9[4] = v8;
      objc_msgSend(v6, sel_retrievePeripheralsWithFindMySerialNumberStrings_completion_, v7, v9);
      return swift_continuation_await();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    swift_allocError();
    v3 = v2;
    sub_23B5CFB70(v12);
    *v3 = v12[0];
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  return result;
}

uint64_t sub_23B5D6020()
{
  return swift_task_switch();
}

uint64_t sub_23B5D606C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  id v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v35;

  v2 = *(void **)(v0 + 248);
  v1 = *(void **)(v0 + 256);
  v3 = *(_QWORD *)(v0 + 176);
  *(_QWORD *)(v0 + 264) = v3;

  if (v3 >> 62)
  {
LABEL_31:
    swift_bridgeObjectRetain();
    v35 = sub_23B601D24();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 272) = v35;
    if (v35)
      goto LABEL_3;
  }
  else
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    *(_QWORD *)(v0 + 272) = v4;
    if (v4)
    {
LABEL_3:
      v5 = OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_connected;
      *(_QWORD *)(v0 + 280) = OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_discovered;
      *(_QWORD *)(v0 + 288) = v5;
      swift_beginAccess();
      swift_beginAccess();
      for (i = 0; ; i = *(_QWORD *)(v0 + 304))
      {
        v7 = *(_QWORD *)(v0 + 264);
        if ((v7 & 0xC000000000000001) != 0)
          v8 = (id)MEMORY[0x23B868228](i);
        else
          v8 = *(id *)(v7 + 8 * i + 32);
        v9 = v8;
        *(_QWORD *)(v0 + 296) = v8;
        *(_QWORD *)(v0 + 304) = i + 1;
        if (__OFADD__(i, 1))
        {
          __break(1u);
          goto LABEL_31;
        }
        v10 = *(_QWORD *)(v0 + 280);
        v11 = *(_QWORD *)(v0 + 192);
        v12 = objc_msgSend(v8, sel_identifier);
        sub_23B6017FC();

        type metadata accessor for Peripheral();
        sub_23B6015D4();
        if (*(_QWORD *)(*(_QWORD *)(v11 + v10) + 16))
        {
          v13 = *(_QWORD *)(v0 + 240);
          swift_bridgeObjectRetain();
          sub_23B58ED88(v13);
          if ((v14 & 1) != 0)
          {
            v15 = *(_QWORD *)(v0 + 240);
            v16 = *(_QWORD *)(v0 + 216);
            v17 = *(_QWORD *)(v0 + 224);
            swift_retain();
            swift_bridgeObjectRelease();
            (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
LABEL_15:
            v26 = swift_retain();
            MEMORY[0x23B867F7C](v26);
            if (*(_QWORD *)((*(_QWORD *)(v0 + 168) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v0 + 168) & 0xFFFFFFFFFFFFFF8)
                                                                                                + 0x18) >> 1)
              sub_23B601A00();
            sub_23B601A0C();
            sub_23B6019F4();
            goto LABEL_25;
          }
          swift_bridgeObjectRelease();
        }
        v18 = *(_QWORD *)(v0 + 288);
        v19 = *(_QWORD *)(v0 + 192);
        v20 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 224) + 8);
        v20(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 216));
        v21 = objc_msgSend(v9, sel_identifier);
        sub_23B6017FC();

        sub_23B6015D4();
        if (*(_QWORD *)(*(_QWORD *)(v19 + v18) + 16))
        {
          v22 = *(_QWORD *)(v0 + 232);
          swift_bridgeObjectRetain();
          sub_23B58ED88(v22);
          if ((v23 & 1) != 0)
          {
            v24 = *(_QWORD *)(v0 + 232);
            v25 = *(_QWORD *)(v0 + 216);
            swift_retain();
            swift_bridgeObjectRelease();
            v20(v24, v25);
            goto LABEL_15;
          }
          swift_bridgeObjectRelease();
        }
        v20(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 216));
        if (!objc_msgSend(v9, sel_delegate))
          goto LABEL_29;
        type metadata accessor for DelegateTrampoline_CBPeripheralPrivateDelegate();
        if (!swift_dynamicCastClass() || !swift_weakLoadStrong())
        {
          swift_unknownObjectRelease();
LABEL_29:
          v31 = *(_QWORD *)(v0 + 200);
          v32 = sub_23B601634();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v31, 1, 1, v32);
          v33 = (_QWORD *)swift_task_alloc();
          *(_QWORD *)(v0 + 312) = v33;
          *v33 = v0;
          v33[1] = sub_23B5D6504;
          return sub_23B5D5670((uint64_t)v9, *(_QWORD *)(v0 + 200), 1, 0, 0, 1);
        }
        v27 = swift_retain();
        MEMORY[0x23B867F7C](v27);
        if (*(_QWORD *)((*(_QWORD *)(v0 + 168) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v0 + 168) & 0xFFFFFFFFFFFFFF8)
                                                                                            + 0x18) >> 1)
          sub_23B601A00();
        sub_23B601A0C();
        sub_23B6019F4();
        swift_unknownObjectRelease();
LABEL_25:
        swift_release();
        v28 = *(_QWORD *)(v0 + 304);
        v29 = *(_QWORD *)(v0 + 272);

        if (v28 == v29)
        {
          swift_bridgeObjectRelease();
          v30 = *(_QWORD *)(v0 + 168);
          goto LABEL_33;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  v30 = MEMORY[0x24BEE4AF8];
LABEL_33:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v30);
}

uint64_t sub_23B5D6504(uint64_t a1)
{
  uint64_t v1;
  uint64_t **v2;
  uint64_t *v3;

  v3 = *v2;
  v3[40] = a1;
  v3[41] = v1;
  swift_task_dealloc();
  sub_23B587ED4(v3[25], (uint64_t *)&unk_256A346E0);
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_23B5D65B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  id v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = swift_retain();
  MEMORY[0x23B867F7C](v1);
  if (*(_QWORD *)((*(_QWORD *)(v0 + 168) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v0 + 168) & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
LABEL_29:
    sub_23B601A00();
LABEL_2:
  sub_23B601A0C();
  sub_23B6019F4();
  while (1)
  {
    swift_release();
    v2 = *(_QWORD *)(v0 + 304);
    v3 = *(_QWORD *)(v0 + 272);

    if (v2 == v3)
    {
      swift_bridgeObjectRelease();
      v26 = *(_QWORD *)(v0 + 168);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(uint64_t))(v0 + 8))(v26);
    }
    v4 = *(_QWORD *)(v0 + 304);
    v5 = *(_QWORD *)(v0 + 264);
    if ((v5 & 0xC000000000000001) != 0)
      v6 = (id)MEMORY[0x23B868228](*(_QWORD *)(v0 + 304));
    else
      v6 = *(id *)(v5 + 8 * v4 + 32);
    v7 = v6;
    *(_QWORD *)(v0 + 296) = v6;
    *(_QWORD *)(v0 + 304) = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    v8 = *(_QWORD *)(v0 + 280);
    v9 = *(_QWORD *)(v0 + 192);
    v10 = objc_msgSend(v6, sel_identifier);
    sub_23B6017FC();

    type metadata accessor for Peripheral();
    sub_23B6015D4();
    if (*(_QWORD *)(*(_QWORD *)(v9 + v8) + 16))
    {
      v11 = *(_QWORD *)(v0 + 240);
      swift_bridgeObjectRetain();
      sub_23B58ED88(v11);
      if ((v12 & 1) != 0)
      {
        v13 = *(_QWORD *)(v0 + 240);
        v14 = *(_QWORD *)(v0 + 216);
        v15 = *(_QWORD *)(v0 + 224);
        swift_retain();
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
        goto LABEL_15;
      }
      swift_bridgeObjectRelease();
    }
    v16 = *(_QWORD *)(v0 + 288);
    v17 = *(_QWORD *)(v0 + 192);
    v18 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 224) + 8);
    v18(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 216));
    v19 = objc_msgSend(v7, sel_identifier);
    sub_23B6017FC();

    sub_23B6015D4();
    if (*(_QWORD *)(*(_QWORD *)(v17 + v16) + 16))
    {
      v20 = *(_QWORD *)(v0 + 232);
      swift_bridgeObjectRetain();
      sub_23B58ED88(v20);
      if ((v21 & 1) != 0)
      {
        v22 = *(_QWORD *)(v0 + 232);
        v23 = *(_QWORD *)(v0 + 216);
        swift_retain();
        swift_bridgeObjectRelease();
        v18(v22, v23);
LABEL_15:
        v24 = swift_retain();
        MEMORY[0x23B867F7C](v24);
        if (*(_QWORD *)((*(_QWORD *)(v0 + 168) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v0 + 168) & 0xFFFFFFFFFFFFFF8)
                                                                                            + 0x18) >> 1)
          sub_23B601A00();
        goto LABEL_2;
      }
      swift_bridgeObjectRelease();
    }
    v18(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 216));
    if (!objc_msgSend(v7, sel_delegate))
      goto LABEL_27;
    type metadata accessor for DelegateTrampoline_CBPeripheralPrivateDelegate();
    if (!swift_dynamicCastClass() || !swift_weakLoadStrong())
      break;
    v25 = swift_retain();
    MEMORY[0x23B867F7C](v25);
    if (*(_QWORD *)((*(_QWORD *)(v0 + 168) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v0 + 168) & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
      sub_23B601A00();
    sub_23B601A0C();
    sub_23B6019F4();
    swift_unknownObjectRelease();
  }
  swift_unknownObjectRelease();
LABEL_27:
  v28 = *(_QWORD *)(v0 + 200);
  v29 = sub_23B601634();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v28, 1, 1, v29);
  v30 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 312) = v30;
  *v30 = v0;
  v30[1] = sub_23B5D6504;
  return sub_23B5D5670((uint64_t)v7, *(_QWORD *)(v0 + 200), 1, 0, 0, 1);
}

uint64_t sub_23B5D69E8()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5D6A48(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 32);
  sub_23B58F7DC(0, &qword_256A35E38);
  **(_QWORD **)(*(_QWORD *)(v1 + 64) + 40) = sub_23B6019DC();
  return swift_continuation_resume();
}

uint64_t sub_23B5D6A9C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[23] = a1;
  v2[24] = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A346E0);
  v2[25] = swift_task_alloc();
  v2[26] = sub_23B601820();
  v2[27] = swift_task_alloc();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  v2[28] = v3;
  v2[29] = *(_QWORD *)(v3 - 8);
  v2[30] = swift_task_alloc();
  v2[31] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5D6B58()
{
  uint64_t v0;
  uint64_t result;
  _BYTE *v2;
  _BYTE *v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char v10;
  unsigned __int8 v11;
  _BYTE v12[9];

  result = sub_23B5CFB70(&v10);
  if (v10 == 5 || (result = sub_23B5CFB70(&v11), v11 > 5u))
  {
    v4 = *(_QWORD *)(v0 + 192);
    *(_QWORD *)(v0 + 168) = MEMORY[0x24BEE4AF8];
    v5 = *(void **)(v4 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_underlyingObject);
    *(_QWORD *)(v0 + 256) = v5;
    if (v5)
    {
      v6 = v5;
      v7 = sub_23B6019D0();
      *(_QWORD *)(v0 + 264) = v7;
      *(_QWORD *)(v0 + 56) = v0 + 176;
      *(_QWORD *)(v0 + 16) = v0;
      *(_QWORD *)(v0 + 24) = sub_23B5D6D30;
      v8 = swift_continuation_init();
      *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
      v9 = (_QWORD *)(v0 + 80);
      v9[1] = 0x40000000;
      v9[2] = sub_23B5D6A48;
      v9[3] = &block_descriptor_15;
      v9[4] = v8;
      objc_msgSend(v6, sel_retrievePeripheralsWithFindMyIds_completion_, v7, v9);
      return swift_continuation_await();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    swift_allocError();
    v3 = v2;
    sub_23B5CFB70(v12);
    *v3 = v12[0];
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  return result;
}

uint64_t sub_23B5D6D30()
{
  return swift_task_switch();
}

uint64_t sub_23B5D6D7C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  id v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v35;

  v2 = *(void **)(v0 + 256);
  v1 = *(void **)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 176);
  *(_QWORD *)(v0 + 272) = v3;

  if (v3 >> 62)
  {
LABEL_31:
    swift_bridgeObjectRetain();
    v35 = sub_23B601D24();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 280) = v35;
    if (v35)
      goto LABEL_3;
  }
  else
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    *(_QWORD *)(v0 + 280) = v4;
    if (v4)
    {
LABEL_3:
      v5 = OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_connected;
      *(_QWORD *)(v0 + 288) = OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_discovered;
      *(_QWORD *)(v0 + 296) = v5;
      swift_beginAccess();
      swift_beginAccess();
      for (i = 0; ; i = *(_QWORD *)(v0 + 312))
      {
        v7 = *(_QWORD *)(v0 + 272);
        if ((v7 & 0xC000000000000001) != 0)
          v8 = (id)MEMORY[0x23B868228](i);
        else
          v8 = *(id *)(v7 + 8 * i + 32);
        v9 = v8;
        *(_QWORD *)(v0 + 304) = v8;
        *(_QWORD *)(v0 + 312) = i + 1;
        if (__OFADD__(i, 1))
        {
          __break(1u);
          goto LABEL_31;
        }
        v10 = *(_QWORD *)(v0 + 288);
        v11 = *(_QWORD *)(v0 + 192);
        v12 = objc_msgSend(v8, sel_identifier);
        sub_23B6017FC();

        type metadata accessor for Peripheral();
        sub_23B6015D4();
        if (*(_QWORD *)(*(_QWORD *)(v11 + v10) + 16))
        {
          v13 = *(_QWORD *)(v0 + 248);
          swift_bridgeObjectRetain();
          sub_23B58ED88(v13);
          if ((v14 & 1) != 0)
          {
            v15 = *(_QWORD *)(v0 + 248);
            v16 = *(_QWORD *)(v0 + 224);
            v17 = *(_QWORD *)(v0 + 232);
            swift_retain();
            swift_bridgeObjectRelease();
            (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
LABEL_15:
            v26 = swift_retain();
            MEMORY[0x23B867F7C](v26);
            if (*(_QWORD *)((*(_QWORD *)(v0 + 168) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v0 + 168) & 0xFFFFFFFFFFFFFF8)
                                                                                                + 0x18) >> 1)
              sub_23B601A00();
            sub_23B601A0C();
            sub_23B6019F4();
            goto LABEL_25;
          }
          swift_bridgeObjectRelease();
        }
        v18 = *(_QWORD *)(v0 + 296);
        v19 = *(_QWORD *)(v0 + 192);
        v20 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 232) + 8);
        v20(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 224));
        v21 = objc_msgSend(v9, sel_identifier);
        sub_23B6017FC();

        sub_23B6015D4();
        if (*(_QWORD *)(*(_QWORD *)(v19 + v18) + 16))
        {
          v22 = *(_QWORD *)(v0 + 240);
          swift_bridgeObjectRetain();
          sub_23B58ED88(v22);
          if ((v23 & 1) != 0)
          {
            v24 = *(_QWORD *)(v0 + 240);
            v25 = *(_QWORD *)(v0 + 224);
            swift_retain();
            swift_bridgeObjectRelease();
            v20(v24, v25);
            goto LABEL_15;
          }
          swift_bridgeObjectRelease();
        }
        v20(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 224));
        if (!objc_msgSend(v9, sel_delegate))
          goto LABEL_29;
        type metadata accessor for DelegateTrampoline_CBPeripheralPrivateDelegate();
        if (!swift_dynamicCastClass() || !swift_weakLoadStrong())
        {
          swift_unknownObjectRelease();
LABEL_29:
          v31 = *(_QWORD *)(v0 + 200);
          v32 = sub_23B601634();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v31, 1, 1, v32);
          v33 = (_QWORD *)swift_task_alloc();
          *(_QWORD *)(v0 + 320) = v33;
          *v33 = v0;
          v33[1] = sub_23B5D7218;
          return sub_23B5D5670((uint64_t)v9, *(_QWORD *)(v0 + 200), 1, 0, 0, 1);
        }
        v27 = swift_retain();
        MEMORY[0x23B867F7C](v27);
        if (*(_QWORD *)((*(_QWORD *)(v0 + 168) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v0 + 168) & 0xFFFFFFFFFFFFFF8)
                                                                                            + 0x18) >> 1)
          sub_23B601A00();
        sub_23B601A0C();
        sub_23B6019F4();
        swift_unknownObjectRelease();
LABEL_25:
        swift_release();
        v28 = *(_QWORD *)(v0 + 312);
        v29 = *(_QWORD *)(v0 + 280);

        if (v28 == v29)
        {
          swift_bridgeObjectRelease();
          v30 = *(_QWORD *)(v0 + 168);
          goto LABEL_33;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  v30 = MEMORY[0x24BEE4AF8];
LABEL_33:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v30);
}

uint64_t sub_23B5D7218(uint64_t a1)
{
  uint64_t v1;
  uint64_t **v2;
  uint64_t *v3;

  v3 = *v2;
  v3[41] = a1;
  v3[42] = v1;
  swift_task_dealloc();
  sub_23B587ED4(v3[25], (uint64_t *)&unk_256A346E0);
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_23B5D72C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  id v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = swift_retain();
  MEMORY[0x23B867F7C](v1);
  if (*(_QWORD *)((*(_QWORD *)(v0 + 168) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v0 + 168) & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
LABEL_29:
    sub_23B601A00();
LABEL_2:
  sub_23B601A0C();
  sub_23B6019F4();
  while (1)
  {
    swift_release();
    v2 = *(_QWORD *)(v0 + 312);
    v3 = *(_QWORD *)(v0 + 280);

    if (v2 == v3)
    {
      swift_bridgeObjectRelease();
      v26 = *(_QWORD *)(v0 + 168);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(uint64_t))(v0 + 8))(v26);
    }
    v4 = *(_QWORD *)(v0 + 312);
    v5 = *(_QWORD *)(v0 + 272);
    if ((v5 & 0xC000000000000001) != 0)
      v6 = (id)MEMORY[0x23B868228](*(_QWORD *)(v0 + 312));
    else
      v6 = *(id *)(v5 + 8 * v4 + 32);
    v7 = v6;
    *(_QWORD *)(v0 + 304) = v6;
    *(_QWORD *)(v0 + 312) = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    v8 = *(_QWORD *)(v0 + 288);
    v9 = *(_QWORD *)(v0 + 192);
    v10 = objc_msgSend(v6, sel_identifier);
    sub_23B6017FC();

    type metadata accessor for Peripheral();
    sub_23B6015D4();
    if (*(_QWORD *)(*(_QWORD *)(v9 + v8) + 16))
    {
      v11 = *(_QWORD *)(v0 + 248);
      swift_bridgeObjectRetain();
      sub_23B58ED88(v11);
      if ((v12 & 1) != 0)
      {
        v13 = *(_QWORD *)(v0 + 248);
        v14 = *(_QWORD *)(v0 + 224);
        v15 = *(_QWORD *)(v0 + 232);
        swift_retain();
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
        goto LABEL_15;
      }
      swift_bridgeObjectRelease();
    }
    v16 = *(_QWORD *)(v0 + 296);
    v17 = *(_QWORD *)(v0 + 192);
    v18 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 232) + 8);
    v18(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 224));
    v19 = objc_msgSend(v7, sel_identifier);
    sub_23B6017FC();

    sub_23B6015D4();
    if (*(_QWORD *)(*(_QWORD *)(v17 + v16) + 16))
    {
      v20 = *(_QWORD *)(v0 + 240);
      swift_bridgeObjectRetain();
      sub_23B58ED88(v20);
      if ((v21 & 1) != 0)
      {
        v22 = *(_QWORD *)(v0 + 240);
        v23 = *(_QWORD *)(v0 + 224);
        swift_retain();
        swift_bridgeObjectRelease();
        v18(v22, v23);
LABEL_15:
        v24 = swift_retain();
        MEMORY[0x23B867F7C](v24);
        if (*(_QWORD *)((*(_QWORD *)(v0 + 168) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v0 + 168) & 0xFFFFFFFFFFFFFF8)
                                                                                            + 0x18) >> 1)
          sub_23B601A00();
        goto LABEL_2;
      }
      swift_bridgeObjectRelease();
    }
    v18(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 224));
    if (!objc_msgSend(v7, sel_delegate))
      goto LABEL_27;
    type metadata accessor for DelegateTrampoline_CBPeripheralPrivateDelegate();
    if (!swift_dynamicCastClass() || !swift_weakLoadStrong())
      break;
    v25 = swift_retain();
    MEMORY[0x23B867F7C](v25);
    if (*(_QWORD *)((*(_QWORD *)(v0 + 168) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v0 + 168) & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
      sub_23B601A00();
    sub_23B601A0C();
    sub_23B6019F4();
    swift_unknownObjectRelease();
  }
  swift_unknownObjectRelease();
LABEL_27:
  v28 = *(_QWORD *)(v0 + 200);
  v29 = sub_23B601634();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v28, 1, 1, v29);
  v30 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 320) = v30;
  *v30 = v0;
  v30[1] = sub_23B5D7218;
  return sub_23B5D5670((uint64_t)v7, *(_QWORD *)(v0 + 200), 1, 0, 0, 1);
}

uint64_t sub_23B5D7700(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[23] = a1;
  v2[24] = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A346E0);
  v2[25] = swift_task_alloc();
  v2[26] = sub_23B601820();
  v2[27] = swift_task_alloc();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  v2[28] = v3;
  v2[29] = *(_QWORD *)(v3 - 8);
  v2[30] = swift_task_alloc();
  v2[31] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5D77BC()
{
  uint64_t v0;
  uint64_t result;
  _BYTE *v2;
  _BYTE *v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char v10;
  unsigned __int8 v11;
  _BYTE v12[9];

  result = sub_23B5CFB70(&v10);
  if (v10 == 5 || (result = sub_23B5CFB70(&v11), v11 > 5u))
  {
    v4 = *(_QWORD *)(v0 + 192);
    *(_QWORD *)(v0 + 168) = MEMORY[0x24BEE4AF8];
    v5 = *(void **)(v4 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_underlyingObject);
    *(_QWORD *)(v0 + 256) = v5;
    if (v5)
    {
      v6 = v5;
      v7 = sub_23B6019D0();
      *(_QWORD *)(v0 + 264) = v7;
      *(_QWORD *)(v0 + 56) = v0 + 176;
      *(_QWORD *)(v0 + 16) = v0;
      *(_QWORD *)(v0 + 24) = sub_23B5D7994;
      v8 = swift_continuation_init();
      *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
      v9 = (_QWORD *)(v0 + 80);
      v9[1] = 0x40000000;
      v9[2] = sub_23B5D6A48;
      v9[3] = &block_descriptor_18;
      v9[4] = v8;
      objc_msgSend(v6, sel_retrievePeripheralsWithIdentifiers_completion_, v7, v9);
      return swift_continuation_await();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    swift_allocError();
    v3 = v2;
    sub_23B5CFB70(v12);
    *v3 = v12[0];
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  return result;
}

uint64_t sub_23B5D7994()
{
  return swift_task_switch();
}

uint64_t sub_23B5D79E0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  id v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v35;

  v2 = *(void **)(v0 + 256);
  v1 = *(void **)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 176);
  *(_QWORD *)(v0 + 272) = v3;

  if (v3 >> 62)
  {
LABEL_31:
    swift_bridgeObjectRetain();
    v35 = sub_23B601D24();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 280) = v35;
    if (v35)
      goto LABEL_3;
  }
  else
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    *(_QWORD *)(v0 + 280) = v4;
    if (v4)
    {
LABEL_3:
      v5 = OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_connected;
      *(_QWORD *)(v0 + 288) = OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_discovered;
      *(_QWORD *)(v0 + 296) = v5;
      swift_beginAccess();
      swift_beginAccess();
      for (i = 0; ; i = *(_QWORD *)(v0 + 312))
      {
        v7 = *(_QWORD *)(v0 + 272);
        if ((v7 & 0xC000000000000001) != 0)
          v8 = (id)MEMORY[0x23B868228](i);
        else
          v8 = *(id *)(v7 + 8 * i + 32);
        v9 = v8;
        *(_QWORD *)(v0 + 304) = v8;
        *(_QWORD *)(v0 + 312) = i + 1;
        if (__OFADD__(i, 1))
        {
          __break(1u);
          goto LABEL_31;
        }
        v10 = *(_QWORD *)(v0 + 288);
        v11 = *(_QWORD *)(v0 + 192);
        v12 = objc_msgSend(v8, sel_identifier);
        sub_23B6017FC();

        type metadata accessor for Peripheral();
        sub_23B6015D4();
        if (*(_QWORD *)(*(_QWORD *)(v11 + v10) + 16))
        {
          v13 = *(_QWORD *)(v0 + 248);
          swift_bridgeObjectRetain();
          sub_23B58ED88(v13);
          if ((v14 & 1) != 0)
          {
            v15 = *(_QWORD *)(v0 + 248);
            v16 = *(_QWORD *)(v0 + 224);
            v17 = *(_QWORD *)(v0 + 232);
            swift_retain();
            swift_bridgeObjectRelease();
            (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
LABEL_15:
            v26 = swift_retain();
            MEMORY[0x23B867F7C](v26);
            if (*(_QWORD *)((*(_QWORD *)(v0 + 168) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v0 + 168) & 0xFFFFFFFFFFFFFF8)
                                                                                                + 0x18) >> 1)
              sub_23B601A00();
            sub_23B601A0C();
            sub_23B6019F4();
            goto LABEL_25;
          }
          swift_bridgeObjectRelease();
        }
        v18 = *(_QWORD *)(v0 + 296);
        v19 = *(_QWORD *)(v0 + 192);
        v20 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 232) + 8);
        v20(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 224));
        v21 = objc_msgSend(v9, sel_identifier);
        sub_23B6017FC();

        sub_23B6015D4();
        if (*(_QWORD *)(*(_QWORD *)(v19 + v18) + 16))
        {
          v22 = *(_QWORD *)(v0 + 240);
          swift_bridgeObjectRetain();
          sub_23B58ED88(v22);
          if ((v23 & 1) != 0)
          {
            v24 = *(_QWORD *)(v0 + 240);
            v25 = *(_QWORD *)(v0 + 224);
            swift_retain();
            swift_bridgeObjectRelease();
            v20(v24, v25);
            goto LABEL_15;
          }
          swift_bridgeObjectRelease();
        }
        v20(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 224));
        if (!objc_msgSend(v9, sel_delegate))
          goto LABEL_29;
        type metadata accessor for DelegateTrampoline_CBPeripheralPrivateDelegate();
        if (!swift_dynamicCastClass() || !swift_weakLoadStrong())
        {
          swift_unknownObjectRelease();
LABEL_29:
          v31 = *(_QWORD *)(v0 + 200);
          v32 = sub_23B601634();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v31, 1, 1, v32);
          v33 = (_QWORD *)swift_task_alloc();
          *(_QWORD *)(v0 + 320) = v33;
          *v33 = v0;
          v33[1] = sub_23B5D7E7C;
          return sub_23B5D5670((uint64_t)v9, *(_QWORD *)(v0 + 200), 1, 0, 0, 1);
        }
        v27 = swift_retain();
        MEMORY[0x23B867F7C](v27);
        if (*(_QWORD *)((*(_QWORD *)(v0 + 168) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v0 + 168) & 0xFFFFFFFFFFFFFF8)
                                                                                            + 0x18) >> 1)
          sub_23B601A00();
        sub_23B601A0C();
        sub_23B6019F4();
        swift_unknownObjectRelease();
LABEL_25:
        swift_release();
        v28 = *(_QWORD *)(v0 + 312);
        v29 = *(_QWORD *)(v0 + 280);

        if (v28 == v29)
        {
          swift_bridgeObjectRelease();
          v30 = *(_QWORD *)(v0 + 168);
          goto LABEL_33;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  v30 = MEMORY[0x24BEE4AF8];
LABEL_33:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v30);
}

uint64_t sub_23B5D7E7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t **v2;
  uint64_t *v3;

  v3 = *v2;
  v3[41] = a1;
  v3[42] = v1;
  swift_task_dealloc();
  sub_23B587ED4(v3[25], (uint64_t *)&unk_256A346E0);
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_23B5D7F28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  id v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = swift_retain();
  MEMORY[0x23B867F7C](v1);
  if (*(_QWORD *)((*(_QWORD *)(v0 + 168) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v0 + 168) & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
LABEL_29:
    sub_23B601A00();
LABEL_2:
  sub_23B601A0C();
  sub_23B6019F4();
  while (1)
  {
    swift_release();
    v2 = *(_QWORD *)(v0 + 312);
    v3 = *(_QWORD *)(v0 + 280);

    if (v2 == v3)
    {
      swift_bridgeObjectRelease();
      v26 = *(_QWORD *)(v0 + 168);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(uint64_t))(v0 + 8))(v26);
    }
    v4 = *(_QWORD *)(v0 + 312);
    v5 = *(_QWORD *)(v0 + 272);
    if ((v5 & 0xC000000000000001) != 0)
      v6 = (id)MEMORY[0x23B868228](*(_QWORD *)(v0 + 312));
    else
      v6 = *(id *)(v5 + 8 * v4 + 32);
    v7 = v6;
    *(_QWORD *)(v0 + 304) = v6;
    *(_QWORD *)(v0 + 312) = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    v8 = *(_QWORD *)(v0 + 288);
    v9 = *(_QWORD *)(v0 + 192);
    v10 = objc_msgSend(v6, sel_identifier);
    sub_23B6017FC();

    type metadata accessor for Peripheral();
    sub_23B6015D4();
    if (*(_QWORD *)(*(_QWORD *)(v9 + v8) + 16))
    {
      v11 = *(_QWORD *)(v0 + 248);
      swift_bridgeObjectRetain();
      sub_23B58ED88(v11);
      if ((v12 & 1) != 0)
      {
        v13 = *(_QWORD *)(v0 + 248);
        v14 = *(_QWORD *)(v0 + 224);
        v15 = *(_QWORD *)(v0 + 232);
        swift_retain();
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
        goto LABEL_15;
      }
      swift_bridgeObjectRelease();
    }
    v16 = *(_QWORD *)(v0 + 296);
    v17 = *(_QWORD *)(v0 + 192);
    v18 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 232) + 8);
    v18(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 224));
    v19 = objc_msgSend(v7, sel_identifier);
    sub_23B6017FC();

    sub_23B6015D4();
    if (*(_QWORD *)(*(_QWORD *)(v17 + v16) + 16))
    {
      v20 = *(_QWORD *)(v0 + 240);
      swift_bridgeObjectRetain();
      sub_23B58ED88(v20);
      if ((v21 & 1) != 0)
      {
        v22 = *(_QWORD *)(v0 + 240);
        v23 = *(_QWORD *)(v0 + 224);
        swift_retain();
        swift_bridgeObjectRelease();
        v18(v22, v23);
LABEL_15:
        v24 = swift_retain();
        MEMORY[0x23B867F7C](v24);
        if (*(_QWORD *)((*(_QWORD *)(v0 + 168) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v0 + 168) & 0xFFFFFFFFFFFFFF8)
                                                                                            + 0x18) >> 1)
          sub_23B601A00();
        goto LABEL_2;
      }
      swift_bridgeObjectRelease();
    }
    v18(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 224));
    if (!objc_msgSend(v7, sel_delegate))
      goto LABEL_27;
    type metadata accessor for DelegateTrampoline_CBPeripheralPrivateDelegate();
    if (!swift_dynamicCastClass() || !swift_weakLoadStrong())
      break;
    v25 = swift_retain();
    MEMORY[0x23B867F7C](v25);
    if (*(_QWORD *)((*(_QWORD *)(v0 + 168) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v0 + 168) & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
      sub_23B601A00();
    sub_23B601A0C();
    sub_23B6019F4();
    swift_unknownObjectRelease();
  }
  swift_unknownObjectRelease();
LABEL_27:
  v28 = *(_QWORD *)(v0 + 200);
  v29 = sub_23B601634();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v28, 1, 1, v29);
  v30 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 320) = v30;
  *v30 = v0;
  v30[1] = sub_23B5D7E7C;
  return sub_23B5D5670((uint64_t)v7, *(_QWORD *)(v0 + 200), 1, 0, 0, 1);
}

uint64_t sub_23B5D8364()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5D83C8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[24] = a1;
  v2[25] = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A346E0);
  v2[26] = swift_task_alloc();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  v2[27] = v3;
  v2[28] = *(_QWORD *)(v3 - 8);
  v2[29] = swift_task_alloc();
  v2[30] = swift_task_alloc();
  v4 = sub_23B601820();
  v2[31] = v4;
  v2[32] = *(_QWORD *)(v4 - 8);
  v2[33] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1F8);
  v2[34] = v5;
  v2[35] = *(_QWORD *)(v5 - 8);
  v2[36] = swift_task_alloc();
  return swift_task_switch();
}

void sub_23B5D84B4()
{
  uint64_t v0;
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  void (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35[2];

  sub_23B5CFB70(v35);
  if (LOBYTE(v35[0]) == 5 || (sub_23B5CFB70(v35), LOBYTE(v35[0]) > 5u))
  {
    v3 = *(_QWORD *)(v0 + 192);
    v4 = MEMORY[0x24BEE4AF8];
    *(_QWORD *)(v0 + 168) = MEMORY[0x24BEE4AF8];
    v5 = *(_QWORD *)(v3 + 16);
    if (v5)
    {
      v6 = *(_QWORD *)(v0 + 280);
      v34 = *(_QWORD *)(v0 + 256);
      v35[0] = v4;
      sub_23B601CAC();
      v7 = objc_opt_self();
      v8 = v3 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
      v32 = *(_QWORD *)(v6 + 72);
      v33 = (id)v7;
      v9 = v6;
      v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
      do
      {
        v10 = *(_QWORD *)(v0 + 288);
        v12 = *(_QWORD *)(v0 + 264);
        v11 = *(_QWORD *)(v0 + 272);
        v13 = *(_QWORD *)(v0 + 248);
        v31(v10, v8, v11);
        sub_23B6015BC();
        v14 = (void *)sub_23B6017E4();
        v15 = objc_msgSend(v33, sel_UUIDWithNSUUID_, v14);

        (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v12, v13);
        (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v10, v11);
        sub_23B601C94();
        sub_23B601CB8();
        sub_23B601CC4();
        sub_23B601CA0();
        v8 += v32;
        --v5;
      }
      while (v5);
      v4 = v35[0];
    }
    if (qword_2542FD398 != -1)
      swift_once();
    v16 = sub_23B60185C();
    __swift_project_value_buffer(v16, (uint64_t)qword_2542FD380);
    swift_bridgeObjectRetain_n();
    v17 = sub_23B601844();
    v18 = sub_23B601B68();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v20 = swift_slowAlloc();
      *(_DWORD *)v19 = 136315138;
      v35[0] = v20;
      v21 = sub_23B58F7DC(0, &qword_256A34B40);
      v22 = swift_bridgeObjectRetain();
      v23 = MEMORY[0x23B867FAC](v22, v21);
      v25 = v24;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 184) = sub_23B58E160(v23, v25, v35);
      sub_23B601BC8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23B583000, v17, v18, "Calling CBCentralManager.retrieveConnectedPeripherals() with services: %s", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B868A2C](v20, -1, -1);
      MEMORY[0x23B868A2C](v19, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v26 = *(void **)(*(_QWORD *)(v0 + 200) + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_underlyingObject);
    *(_QWORD *)(v0 + 296) = v26;
    if (v26)
    {
      v27 = v26;
      sub_23B5D93E0(v4);
      swift_bridgeObjectRelease();
      v28 = sub_23B6019D0();
      *(_QWORD *)(v0 + 304) = v28;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 56) = v0 + 176;
      *(_QWORD *)(v0 + 16) = v0;
      *(_QWORD *)(v0 + 24) = sub_23B5D898C;
      v29 = swift_continuation_init();
      *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
      v30 = (_QWORD *)(v0 + 80);
      v30[1] = 0x40000000;
      v30[2] = sub_23B5D6A48;
      v30[3] = &block_descriptor_21;
      v30[4] = v29;
      objc_msgSend(v27, sel_retrieveConnectedPeripheralsWithServices_completion_, v28, v30);
      swift_continuation_await();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    swift_allocError();
    v2 = v1;
    sub_23B5CFB70(v35);
    *v2 = v35[0];
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    (*(void (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23B5D898C()
{
  return swift_task_switch();
}

uint64_t sub_23B5D89D8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  id v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v34;
  uint64_t v35;

  v2 = *(void **)(v0 + 296);
  v1 = *(void **)(v0 + 304);
  v3 = *(_QWORD *)(v0 + 176);
  *(_QWORD *)(v0 + 312) = v3;

  if (v3 >> 62)
  {
LABEL_30:
    swift_bridgeObjectRetain();
    v34 = sub_23B601D24();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 320) = v34;
    if (v34)
      goto LABEL_3;
  }
  else
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    *(_QWORD *)(v0 + 320) = v4;
    if (v4)
    {
LABEL_3:
      v5 = OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_connected;
      *(_QWORD *)(v0 + 328) = OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_discovered;
      *(_QWORD *)(v0 + 336) = v5;
      swift_beginAccess();
      swift_beginAccess();
      for (i = 0; ; i = *(_QWORD *)(v0 + 352))
      {
        v7 = *(_QWORD *)(v0 + 312);
        if ((v7 & 0xC000000000000001) != 0)
          v8 = (id)MEMORY[0x23B868228](i);
        else
          v8 = *(id *)(v7 + 8 * i + 32);
        v9 = v8;
        *(_QWORD *)(v0 + 344) = v8;
        *(_QWORD *)(v0 + 352) = i + 1;
        if (__OFADD__(i, 1))
        {
          __break(1u);
          goto LABEL_30;
        }
        v10 = *(_QWORD *)(v0 + 328);
        v11 = *(_QWORD *)(v0 + 200);
        v12 = objc_msgSend(v8, sel_identifier);
        sub_23B6017FC();

        type metadata accessor for Peripheral();
        sub_23B6015D4();
        if (*(_QWORD *)(*(_QWORD *)(v11 + v10) + 16))
        {
          v13 = *(_QWORD *)(v0 + 240);
          swift_bridgeObjectRetain();
          sub_23B58ED88(v13);
          if ((v14 & 1) != 0)
          {
            v15 = *(_QWORD *)(v0 + 240);
            v16 = *(_QWORD *)(v0 + 216);
            v17 = *(_QWORD *)(v0 + 224);
            swift_retain();
            swift_bridgeObjectRelease();
            (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
LABEL_15:
            v26 = swift_retain();
            MEMORY[0x23B867F7C](v26);
            if (*(_QWORD *)((*(_QWORD *)(v0 + 168) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v0 + 168) & 0xFFFFFFFFFFFFFF8)
                                                                                                + 0x18) >> 1)
              sub_23B601A00();
            sub_23B601A0C();
            sub_23B6019F4();
            goto LABEL_25;
          }
          swift_bridgeObjectRelease();
        }
        v18 = *(_QWORD *)(v0 + 336);
        v19 = *(_QWORD *)(v0 + 200);
        v20 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 224) + 8);
        v20(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 216));
        v21 = objc_msgSend(v9, sel_identifier);
        sub_23B6017FC();

        sub_23B6015D4();
        if (*(_QWORD *)(*(_QWORD *)(v19 + v18) + 16))
        {
          v22 = *(_QWORD *)(v0 + 232);
          swift_bridgeObjectRetain();
          sub_23B58ED88(v22);
          if ((v23 & 1) != 0)
          {
            v24 = *(_QWORD *)(v0 + 232);
            v25 = *(_QWORD *)(v0 + 216);
            swift_retain();
            swift_bridgeObjectRelease();
            v20(v24, v25);
            goto LABEL_15;
          }
          swift_bridgeObjectRelease();
        }
        v20(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 216));
        if (!objc_msgSend(v9, sel_delegate))
          goto LABEL_28;
        type metadata accessor for DelegateTrampoline_CBPeripheralPrivateDelegate();
        if (!swift_dynamicCastClass() || !swift_weakLoadStrong())
        {
          swift_unknownObjectRelease();
LABEL_28:
          v30 = *(_QWORD *)(v0 + 208);
          v31 = sub_23B601634();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v30, 1, 1, v31);
          v32 = (_QWORD *)swift_task_alloc();
          *(_QWORD *)(v0 + 360) = v32;
          *v32 = v0;
          v32[1] = sub_23B5D8E70;
          return sub_23B5D5670((uint64_t)v9, *(_QWORD *)(v0 + 208), 1, 0, 0, 1);
        }
        v27 = swift_retain();
        MEMORY[0x23B867F7C](v27);
        if (*(_QWORD *)((*(_QWORD *)(v0 + 168) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v0 + 168) & 0xFFFFFFFFFFFFFF8)
                                                                                            + 0x18) >> 1)
          sub_23B601A00();
        sub_23B601A0C();
        sub_23B6019F4();
        swift_unknownObjectRelease();
LABEL_25:
        swift_release();
        v28 = *(_QWORD *)(v0 + 352);
        v29 = *(_QWORD *)(v0 + 320);

        if (v28 == v29)
          break;
      }
    }
  }
  swift_bridgeObjectRelease();
  v35 = *(_QWORD *)(v0 + 168);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v35);
}

uint64_t sub_23B5D8E70(uint64_t a1)
{
  uint64_t v1;
  uint64_t **v2;
  uint64_t *v3;

  v3 = *v2;
  v3[46] = a1;
  v3[47] = v1;
  swift_task_dealloc();
  sub_23B587ED4(v3[26], (uint64_t *)&unk_256A346E0);
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_23B5D8F1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  id v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = swift_retain();
  MEMORY[0x23B867F7C](v1);
  if (*(_QWORD *)((*(_QWORD *)(v0 + 168) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v0 + 168) & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
LABEL_29:
    sub_23B601A00();
LABEL_2:
  sub_23B601A0C();
  sub_23B6019F4();
  while (1)
  {
    swift_release();
    v2 = *(_QWORD *)(v0 + 352);
    v3 = *(_QWORD *)(v0 + 320);

    if (v2 == v3)
    {
      swift_bridgeObjectRelease();
      v26 = *(_QWORD *)(v0 + 168);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(uint64_t))(v0 + 8))(v26);
    }
    v4 = *(_QWORD *)(v0 + 352);
    v5 = *(_QWORD *)(v0 + 312);
    if ((v5 & 0xC000000000000001) != 0)
      v6 = (id)MEMORY[0x23B868228](*(_QWORD *)(v0 + 352));
    else
      v6 = *(id *)(v5 + 8 * v4 + 32);
    v7 = v6;
    *(_QWORD *)(v0 + 344) = v6;
    *(_QWORD *)(v0 + 352) = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    v8 = *(_QWORD *)(v0 + 328);
    v9 = *(_QWORD *)(v0 + 200);
    v10 = objc_msgSend(v6, sel_identifier);
    sub_23B6017FC();

    type metadata accessor for Peripheral();
    sub_23B6015D4();
    if (*(_QWORD *)(*(_QWORD *)(v9 + v8) + 16))
    {
      v11 = *(_QWORD *)(v0 + 240);
      swift_bridgeObjectRetain();
      sub_23B58ED88(v11);
      if ((v12 & 1) != 0)
      {
        v13 = *(_QWORD *)(v0 + 240);
        v14 = *(_QWORD *)(v0 + 216);
        v15 = *(_QWORD *)(v0 + 224);
        swift_retain();
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
        goto LABEL_15;
      }
      swift_bridgeObjectRelease();
    }
    v16 = *(_QWORD *)(v0 + 336);
    v17 = *(_QWORD *)(v0 + 200);
    v18 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 224) + 8);
    v18(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 216));
    v19 = objc_msgSend(v7, sel_identifier);
    sub_23B6017FC();

    sub_23B6015D4();
    if (*(_QWORD *)(*(_QWORD *)(v17 + v16) + 16))
    {
      v20 = *(_QWORD *)(v0 + 232);
      swift_bridgeObjectRetain();
      sub_23B58ED88(v20);
      if ((v21 & 1) != 0)
      {
        v22 = *(_QWORD *)(v0 + 232);
        v23 = *(_QWORD *)(v0 + 216);
        swift_retain();
        swift_bridgeObjectRelease();
        v18(v22, v23);
LABEL_15:
        v24 = swift_retain();
        MEMORY[0x23B867F7C](v24);
        if (*(_QWORD *)((*(_QWORD *)(v0 + 168) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v0 + 168) & 0xFFFFFFFFFFFFFF8)
                                                                                            + 0x18) >> 1)
          sub_23B601A00();
        goto LABEL_2;
      }
      swift_bridgeObjectRelease();
    }
    v18(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 216));
    if (!objc_msgSend(v7, sel_delegate))
      goto LABEL_27;
    type metadata accessor for DelegateTrampoline_CBPeripheralPrivateDelegate();
    if (!swift_dynamicCastClass() || !swift_weakLoadStrong())
      break;
    v25 = swift_retain();
    MEMORY[0x23B867F7C](v25);
    if (*(_QWORD *)((*(_QWORD *)(v0 + 168) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v0 + 168) & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
      sub_23B601A00();
    sub_23B601A0C();
    sub_23B6019F4();
    swift_unknownObjectRelease();
  }
  swift_unknownObjectRelease();
LABEL_27:
  v28 = *(_QWORD *)(v0 + 208);
  v29 = sub_23B601634();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v28, 1, 1, v29);
  v30 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 360) = v30;
  *v30 = v0;
  v30[1] = sub_23B5D8E70;
  return sub_23B5D5670((uint64_t)v7, *(_QWORD *)(v0 + 208), 1, 0, 0, 1);
}

uint64_t sub_23B5D9368()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5D93E0(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t i;
  unint64_t v6;
  unint64_t v7;
  id *v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  _OWORD v12[2];
  uint64_t v13;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_23B601D24();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = MEMORY[0x24BEE4AF8];
  if (!v2)
    return v3;
  v13 = MEMORY[0x24BEE4AF8];
  result = sub_23B5B9E9C(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v2; ++i)
      {
        MEMORY[0x23B868228](i, a1);
        sub_23B58F7DC(0, &qword_256A34B40);
        swift_dynamicCast();
        v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23B5B9E9C(0, *(_QWORD *)(v3 + 16) + 1, 1);
          v3 = v13;
        }
        v7 = *(_QWORD *)(v3 + 16);
        v6 = *(_QWORD *)(v3 + 24);
        if (v7 >= v6 >> 1)
        {
          sub_23B5B9E9C(v6 > 1, v7 + 1, 1);
          v3 = v13;
        }
        *(_QWORD *)(v3 + 16) = v7 + 1;
        sub_23B5A39B0(v12, (_OWORD *)(v3 + 32 * v7 + 32));
      }
    }
    else
    {
      v8 = (id *)(a1 + 32);
      sub_23B58F7DC(0, &qword_256A34B40);
      do
      {
        v9 = *v8;
        swift_dynamicCast();
        v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23B5B9E9C(0, *(_QWORD *)(v3 + 16) + 1, 1);
          v3 = v13;
        }
        v11 = *(_QWORD *)(v3 + 16);
        v10 = *(_QWORD *)(v3 + 24);
        if (v11 >= v10 >> 1)
        {
          sub_23B5B9E9C(v10 > 1, v11 + 1, 1);
          v3 = v13;
        }
        *(_QWORD *)(v3 + 16) = v11 + 1;
        sub_23B5A39B0(v12, (_OWORD *)(v3 + 32 * v11 + 32));
        ++v8;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t CentralManager.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23B5D964C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (__cdecl *v3)();

  v3 = (uint64_t (__cdecl *)())((char *)&dword_256A35978 + dword_256A35978);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23B58F8B4;
  return v3();
}

uint64_t sub_23B5D96A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_id;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD1E0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_23B5D96EC()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_isPairingCentralManager);
}

uint64_t sub_23B5D96FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_23B5D9714()
{
  uint64_t v0;

  sub_23B5CFB70(*(_BYTE **)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5D9744(uint64_t a1)
{
  uint64_t v1;
  char v2;
  _QWORD *v3;

  v2 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)(v1 + 16) = *(_QWORD *)a1;
  *(_BYTE *)(v1 + 24) = v2;
  type metadata accessor for CentralManager(0);
  swift_allocObject();
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 32) = v3;
  *v3 = v1;
  v3[1] = sub_23B5E5EB4;
  return sub_23B5CFCBC(0, (uint64_t *)(v1 + 16));
}

uint64_t sub_23B5D97C0(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;

  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_23B587844;
  return sub_23B5D33F0(a1, a2, a3, a4);
}

uint64_t sub_23B5D9838(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23B58F8B4;
  return sub_23B5D4784(a1);
}

uint64_t sub_23B5D9884(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23B58F8B4;
  return sub_23B5D5D94(a1);
}

uint64_t sub_23B5D98D0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23B58F8B4;
  return sub_23B5D6A9C(a1);
}

uint64_t sub_23B5D991C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23B58F8B4;
  return sub_23B5D7700(a1);
}

uint64_t sub_23B5D9968@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23B5D2650(a1, a2);
}

uint64_t sub_23B5D997C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23B5D2F44(a1, a2);
}

uint64_t sub_23B5D9990@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_id;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD1E0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_23B5D99DC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (__cdecl *v3)();

  v3 = (uint64_t (__cdecl *)())((char *)&dword_256A371B8 + dword_256A371B8);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23B58CFC0;
  return v3();
}

uint64_t sub_23B5D9A34()
{
  return sub_23B5CF79C();
}

unint64_t sub_23B5D9A54(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t result;
  int64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  __int128 v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  __int128 v24;
  _OWORD v25[2];
  _OWORD v26[2];
  __int128 v27;
  _OWORD v28[2];
  _OWORD v29[2];
  _OWORD v30[2];
  _OWORD v31[2];
  uint64_t v32;
  _OWORD v33[2];
  _OWORD v34[2];
  uint64_t v35;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542FCCF0);
    v2 = (_QWORD *)sub_23B601D48();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
  }
  v23 = a1 + 64;
  v3 = -1;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v3 = ~(-1 << -(char)v4);
  v5 = v3 & *(_QWORD *)(a1 + 64);
  v22 = (unint64_t)(63 - v4) >> 6;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  while (1)
  {
    if (v5)
    {
      v10 = (v5 - 1) & v5;
      v11 = __clz(__rbit64(v5)) | (v7 << 6);
      v12 = v7;
    }
    else
    {
      v13 = v7 + 1;
      if (__OFADD__(v7, 1))
        goto LABEL_37;
      if (v13 >= v22)
      {
LABEL_33:
        sub_23B5A39A8();
        return (unint64_t)v2;
      }
      v14 = *(_QWORD *)(v23 + 8 * v13);
      v12 = v7 + 1;
      if (!v14)
      {
        v12 = v7 + 2;
        if (v7 + 2 >= v22)
          goto LABEL_33;
        v14 = *(_QWORD *)(v23 + 8 * v12);
        if (!v14)
        {
          v12 = v7 + 3;
          if (v7 + 3 >= v22)
            goto LABEL_33;
          v14 = *(_QWORD *)(v23 + 8 * v12);
          if (!v14)
          {
            v12 = v7 + 4;
            if (v7 + 4 >= v22)
              goto LABEL_33;
            v14 = *(_QWORD *)(v23 + 8 * v12);
            if (!v14)
            {
              v15 = v7 + 5;
              if (v7 + 5 >= v22)
                goto LABEL_33;
              v14 = *(_QWORD *)(v23 + 8 * v15);
              if (!v14)
              {
                while (1)
                {
                  v12 = v15 + 1;
                  if (__OFADD__(v15, 1))
                    goto LABEL_38;
                  if (v12 >= v22)
                    goto LABEL_33;
                  v14 = *(_QWORD *)(v23 + 8 * v12);
                  ++v15;
                  if (v14)
                    goto LABEL_26;
                }
              }
              v12 = v7 + 5;
            }
          }
        }
      }
LABEL_26:
      v10 = (v14 - 1) & v14;
      v11 = __clz(__rbit64(v14)) + (v12 << 6);
    }
    sub_23B58F354(*(_QWORD *)(a1 + 48) + 40 * v11, (uint64_t)v33);
    sub_23B58F834(*(_QWORD *)(a1 + 56) + 32 * v11, (uint64_t)v34 + 8);
    v31[0] = v34[0];
    v31[1] = v34[1];
    v32 = v35;
    v30[0] = v33[0];
    v30[1] = v33[1];
    sub_23B58F354((uint64_t)v30, (uint64_t)v25);
    if (!swift_dynamicCast())
    {
      sub_23B587ED4((uint64_t)v30, &qword_256A35F38);
      swift_bridgeObjectRelease();
      sub_23B5A39A8();
      swift_release();
      return 0;
    }
    sub_23B58F834((uint64_t)v31 + 8, (uint64_t)v25);
    sub_23B587ED4((uint64_t)v30, &qword_256A35F38);
    sub_23B5A39B0(v25, v26);
    v27 = v24;
    sub_23B5A39B0(v26, v28);
    v16 = v27;
    sub_23B5A39B0(v28, v29);
    sub_23B5A39B0(v29, &v27);
    result = sub_23B58ECB8(v16, *((uint64_t *)&v16 + 1));
    v17 = result;
    if ((v18 & 1) != 0)
    {
      v8 = (_OWORD *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v8 = v16;
      v9 = (_OWORD *)(v2[7] + 32 * v17);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
      result = (unint64_t)sub_23B5A39B0(&v27, v9);
      goto LABEL_8;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_OWORD *)(v2[6] + 16 * result) = v16;
    result = (unint64_t)sub_23B5A39B0(&v27, (_OWORD *)(v2[7] + 32 * result));
    v19 = v2[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_36;
    v2[2] = v21;
LABEL_8:
    v7 = v12;
    v5 = v10;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

void sub_23B5D9E24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35[3];
  uint64_t v36;

  v34 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v32 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35CF0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (uint64_t *)(v2 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_peripheralCreationInProgress);
  swift_beginAccess();
  v16 = *v15;
  if (*(_QWORD *)(*v15 + 16))
  {
    swift_bridgeObjectRetain();
    v17 = sub_23B58ED88(a2);
    if ((v18 & 1) != 0)
    {
      v19 = *(_QWORD *)(*(_QWORD *)(v16 + 56) + 8 * v17);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v34, v11);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v33 = v5;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        v19 = sub_23B585BEC(0, *(_QWORD *)(v19 + 16) + 1, 1, v19);
      v22 = *(_QWORD *)(v19 + 16);
      v21 = *(_QWORD *)(v19 + 24);
      if (v22 >= v21 >> 1)
        v19 = sub_23B585BEC(v21 > 1, v22 + 1, 1, v19);
      *(_QWORD *)(v19 + 16) = v22 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v19+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(_QWORD *)(v12 + 72) * v22, v14, v11);
      v23 = v33;
      (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v10, a2, v4);
      swift_beginAccess();
      v24 = swift_isUniquelyReferenced_nonNull_native();
      v36 = *v15;
      *v15 = 0x8000000000000000;
      sub_23B5B9410(v19, (uint64_t)v10, v24);
      *v15 = v36;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v4);
      swift_endAccess();
      return;
    }
    swift_bridgeObjectRelease();
  }
  if (qword_2542FD398 != -1)
    swift_once();
  v25 = sub_23B60185C();
  __swift_project_value_buffer(v25, (uint64_t)qword_2542FD380);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a2, v4);
  v26 = sub_23B601844();
  v27 = sub_23B601B80();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc();
    v29 = swift_slowAlloc();
    v35[0] = v29;
    *(_DWORD *)v28 = 136446210;
    sub_23B58F61C(&qword_256A34AD0, &qword_256A359A0, MEMORY[0x24BE316E8]);
    v30 = sub_23B601DE4();
    v36 = sub_23B58E160(v30, v31, v35);
    sub_23B601BC8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    _os_log_impl(&dword_23B583000, v26, v27, "Expected peripheralCreationInProgress[%{public}s] to have a value!", v28, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v29, -1, -1);
    MEMORY[0x23B868A2C](v28, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }

}

uint64_t sub_23B5DA214(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  char *v31;
  id v32;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  void *v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;

  v43 = a7;
  v44 = a8;
  v37 = a2;
  v38 = a5;
  v40 = a4;
  v34 = a1;
  v41 = a9;
  v42 = a6;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  v11 = *(_QWORD *)(v10 - 8);
  v35 = v10;
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](v10);
  v36 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A346E0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD530);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = v19;
  sub_23B5D9E24(v34, a3);
  v20 = sub_23B601A78();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
  sub_23B5A3C5C(v38, (uint64_t)v16, (uint64_t *)&unk_256A346E0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v10);
  v21 = sub_23B5884D4(&qword_2542FD3C8, type metadata accessor for CentralManager, (uint64_t)&protocol conformance descriptor for CentralManager);
  v22 = (*(unsigned __int8 *)(v14 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v23 = v22 + v15;
  v24 = (v22 + v15) & 0xFFFFFFFFFFFFFFF8;
  v25 = (v24 + 23) & 0xFFFFFFFFFFFFFFF8;
  v26 = (*(unsigned __int8 *)(v11 + 80) + v25 + 9) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v27 = (_QWORD *)swift_allocObject();
  v28 = v37;
  v27[2] = v37;
  v27[3] = v21;
  v29 = v40;
  v27[4] = v28;
  v27[5] = v29;
  sub_23B5E56CC((uint64_t)v16, (uint64_t)v27 + v22);
  *((_BYTE *)v27 + v23) = v42;
  v30 = v44;
  *(_QWORD *)((char *)v27 + v24 + 8) = v43;
  v31 = (char *)v27 + v25;
  *(_QWORD *)v31 = v30;
  v31[8] = v41 & 1;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))((char *)v27 + v26, v36, v35);
  swift_bridgeObjectRetain();
  swift_retain_n();
  v32 = v29;
  sub_23B5CD0FC((uint64_t)v39, (uint64_t)&unk_256A35E48, (uint64_t)v27);
  return swift_release();
}

uint64_t sub_23B5DA470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  uint64_t v13;

  *(_BYTE *)(v8 + 297) = v12;
  *(_QWORD *)(v8 + 208) = v11;
  *(_QWORD *)(v8 + 216) = v13;
  *(_BYTE *)(v8 + 296) = a7;
  *(_QWORD *)(v8 + 192) = a6;
  *(_QWORD *)(v8 + 200) = a8;
  *(_QWORD *)(v8 + 176) = a4;
  *(_QWORD *)(v8 + 184) = a5;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35CF0);
  *(_QWORD *)(v8 + 224) = v9;
  *(_QWORD *)(v8 + 232) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 240) = swift_task_alloc();
  *(_QWORD *)(v8 + 248) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A346E0);
  *(_QWORD *)(v8 + 256) = swift_task_alloc();
  return swift_task_switch();
}

void sub_23B5DA52C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  void *v4;
  uint64_t inited;
  id v6;
  _QWORD *v7;

  v1 = *(_QWORD *)(v0 + 256);
  v2 = *(_BYTE *)(v0 + 297);
  v3 = *(_QWORD *)(v0 + 192);
  v4 = *(void **)(v0 + 184);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35E50);
  inited = swift_initStackObject();
  *(_QWORD *)(v0 + 264) = inited;
  *(_QWORD *)(inited + 16) = v4;
  sub_23B5A3C5C(v3, v1, (uint64_t *)&unk_256A346E0);
  type metadata accessor for Peripheral();
  swift_allocObject();
  swift_retain();
  v6 = v4;
  swift_bridgeObjectRetain();
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 272) = v7;
  *v7 = v0;
  v7[1] = sub_23B5DA620;
  sub_23B59148C(*(_QWORD *)(v0 + 176), inited, *(_QWORD *)(v0 + 256), *(_BYTE *)(v0 + 296), *(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 208), v2 & 1);
}

uint64_t sub_23B5DA620(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 280) = a1;
  *(_QWORD *)(v3 + 288) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B5DA690()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 280);
  v2 = *(_QWORD *)(v0 + 176);
  v3 = v1 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_id;
  v4 = (uint64_t *)(v2 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_discovered);
  swift_beginAccess();
  swift_retain_n();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v22 = *v4;
  *v4 = 0x8000000000000000;
  sub_23B5B8F28(v1, v3, isUniquelyReferenced_nonNull_native);
  *v4 = v22;
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_release();
  v6 = (uint64_t *)(v2 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_peripheralCreationInProgress);
  swift_beginAccess();
  v7 = *v6;
  if (*(_QWORD *)(*v6 + 16))
  {
    v8 = *(_QWORD *)(v0 + 216);
    swift_bridgeObjectRetain();
    v9 = sub_23B58ED88(v8);
    if ((v10 & 1) != 0)
    {
      v11 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v9);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v12 = *(_QWORD *)(v11 + 16);
      if (v12)
      {
        v13 = *(_QWORD *)(v0 + 232);
        v14 = v11 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
        v15 = *(_QWORD *)(v13 + 72);
        v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16);
        do
        {
          v17 = *(_QWORD *)(v0 + 280);
          v18 = *(_QWORD *)(v0 + 248);
          v19 = *(_QWORD *)(v0 + 224);
          v16(v18, v14, v19);
          *(_QWORD *)(v0 + 168) = v17;
          swift_retain();
          sub_23B601A30();
          (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v18, v19);
          v14 += v15;
          --v12;
        }
        while (v12);
      }
    }
    swift_bridgeObjectRelease();
  }
  v20 = *(_QWORD *)(v0 + 216);
  swift_beginAccess();
  sub_23B5E27BC(v20);
  swift_endAccess();
  swift_release_n();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5DA8D4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;

  v1 = *(void **)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 176) + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_peripheralCreationInProgress;
  swift_beginAccess();
  v3 = *(_QWORD *)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  v5 = v1;
  if (v4)
  {
    v6 = *(_QWORD *)(v0 + 216);
    swift_bridgeObjectRetain();
    v7 = sub_23B58ED88(v6);
    if ((v8 & 1) != 0)
    {
      v9 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v10 = *(_QWORD *)(v9 + 16);
      if (v10)
      {
        v11 = *(_QWORD *)(v0 + 232);
        v12 = v9 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
        v13 = *(_QWORD *)(v11 + 72);
        v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
        do
        {
          v15 = *(void **)(v0 + 288);
          v16 = *(_QWORD *)(v0 + 240);
          v17 = *(_QWORD *)(v0 + 224);
          v14(v16, v12, v17);
          *(_QWORD *)(v0 + 160) = v15;
          v18 = v15;
          sub_23B601A24();
          (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v16, v17);
          v12 += v13;
          --v10;
        }
        while (v10);
      }
    }
    swift_bridgeObjectRelease();
  }
  v19 = *(void **)(v0 + 288);
  v20 = *(_QWORD *)(v0 + 216);
  swift_beginAccess();
  sub_23B5E27BC(v20);
  swift_endAccess();
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5DAA94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[4];

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD530);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23B601A78();
  v11 = *(_QWORD *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = 0;
  v12[3] = 0;
  v12[4] = a2;
  v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
  swift_retain();
  if (v13 == 1)
  {
    sub_23B587ED4((uint64_t)v9, &qword_2542FD530);
    v14 = 0;
    v15 = 0;
  }
  else
  {
    sub_23B601A6C();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
    if (v12[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v14 = sub_23B601A18();
      v15 = v16;
      swift_unknownObjectRelease();
    }
    else
    {
      v14 = 0;
      v15 = 0;
    }
  }
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a5;
  *(_QWORD *)(v17 + 24) = v12;
  if (v15 | v14)
  {
    v19[0] = 0;
    v19[1] = 0;
    v19[2] = v14;
    v19[3] = v15;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_23B5DAC6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch();
}

uint64_t sub_23B5DAC84()
{
  uint64_t v0;

  sub_23B5DACB4();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void *sub_23B5DACB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  void *result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD568);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD5A8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2542FD398 != -1)
    swift_once();
  v8 = sub_23B60185C();
  __swift_project_value_buffer(v8, (uint64_t)qword_2542FD380);
  v9 = sub_23B601844();
  v10 = sub_23B601B8C();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v11 = 0;
    _os_log_impl(&dword_23B583000, v9, v10, "Cancelling connectionEvents stream", v11, 2u);
    MEMORY[0x23B868A2C](v11, -1, -1);
  }

  v12 = sub_23B601844();
  v13 = sub_23B601B8C();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    _os_log_impl(&dword_23B583000, v12, v13, "Calling CBCentralManager.registerForConnectionEvents() with nil", v14, 2u);
    MEMORY[0x23B868A2C](v14, -1, -1);
  }

  result = *(void **)(v1 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_underlyingObject);
  if (result)
  {
    objc_msgSend(result, sel_registerForConnectionEventsWithOptions_, 0);
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD5A0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v7, 1, 1, v16);
    v17 = v1 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_connectionEventsStream;
    swift_beginAccess();
    sub_23B5A2728((uint64_t)v7, v17, &qword_2542FD5A8);
    swift_endAccess();
    v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD558);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v4, 1, 1, v18);
    v19 = v1 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_connectionEventsStreamContinuation;
    swift_beginAccess();
    sub_23B5A2728((uint64_t)v4, v19, (uint64_t *)&unk_2542FD568);
    swift_endAccess();
    v20 = OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_connectionEventMonitoringTask;
    if (*(_QWORD *)(v1 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_connectionEventMonitoringTask))
    {
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A34490);
      sub_23B601ACC();
      swift_release();
    }
    *(_QWORD *)(v1 + v20) = 0;
    return (void *)swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23B5DAFC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[2] = a4;
  v5[3] = a5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD550);
  v5[4] = v6;
  v5[5] = *(_QWORD *)(v6 - 8);
  v5[6] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD5B8);
  v5[7] = v7;
  v5[8] = *(_QWORD *)(v7 - 8);
  v5[9] = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD590);
  v5[10] = v8;
  v5[11] = *(_QWORD *)(v8 - 8);
  v5[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5DB084()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = v0[8];
  v1 = v0[9];
  v4 = v0[6];
  v3 = v0[7];
  v6 = v0[4];
  v5 = v0[5];
  swift_allocObject();
  swift_weakInit();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v4, *MEMORY[0x24BEE6A10], v6);
  sub_23B601AC0();
  swift_release();
  sub_23B601AA8();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v7 = sub_23B5884D4(&qword_2542FD3C8, type metadata accessor for CentralManager, (uint64_t)&protocol conformance descriptor for CentralManager);
  v8 = OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_underlyingObject;
  v0[13] = v7;
  v0[14] = v8;
  v0[15] = 0;
  v9 = (_QWORD *)swift_task_alloc();
  v0[16] = v9;
  *v9 = v0;
  v9[1] = sub_23B5DB1E0;
  return sub_23B601AB4();
}

uint64_t sub_23B5DB1E0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

void sub_23B5DB238()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  void *v11;
  id v12;
  void *v13;
  _QWORD *v14;
  uint64_t v15;

  v1 = *(unsigned __int8 *)(v0 + 136);
  if (v1 == 7 || (v2 = *(_QWORD *)(v0 + 120), sub_23B601AE4(), v2))
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  if ((v1 - 5) > 1)
    goto LABEL_12;
  if (qword_2542FD398 != -1)
    swift_once();
  v3 = sub_23B60185C();
  __swift_project_value_buffer(v3, (uint64_t)qword_2542FD380);
  swift_bridgeObjectRetain_n();
  v4 = sub_23B601844();
  v5 = sub_23B601B8C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = swift_slowAlloc();
    v7 = swift_slowAlloc();
    v15 = v7;
    *(_DWORD *)v6 = 136446210;
    type metadata accessor for CBConnectionEventMatchingOption(0);
    sub_23B5884D4(&qword_2542FD5F8, (uint64_t (*)(uint64_t))type metadata accessor for CBConnectionEventMatchingOption, (uint64_t)&unk_23B6075FC);
    swift_bridgeObjectRetain();
    v8 = sub_23B6018BC();
    v10 = v9;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v6 + 4) = sub_23B58E160(v8, v10, &v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23B583000, v4, v5, "Calling CBCentralManager.registerForConnectionEvents(): %{public}s", (uint8_t *)v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v7, -1, -1);
    MEMORY[0x23B868A2C](v6, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v11 = *(void **)(*(_QWORD *)(v0 + 16) + *(_QWORD *)(v0 + 112));
  if (v11)
  {
    type metadata accessor for CBConnectionEventMatchingOption(0);
    sub_23B5884D4(&qword_2542FD5F8, (uint64_t (*)(uint64_t))type metadata accessor for CBConnectionEventMatchingOption, (uint64_t)&unk_23B6075FC);
    v12 = v11;
    v13 = (void *)sub_23B6018A4();
    objc_msgSend(v12, sel_registerForConnectionEventsWithOptions_, v13);

LABEL_12:
    *(_QWORD *)(v0 + 120) = 0;
    v14 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 128) = v14;
    *v14 = v0;
    v14[1] = sub_23B5DB1E0;
    sub_23B601AB4();
    return;
  }
  __break(1u);
}

uint64_t sub_23B5DB5A0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[18] = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35CF0);
  v1[19] = v2;
  v1[20] = *(_QWORD *)(v2 - 8);
  v1[21] = swift_task_alloc();
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD5C8);
  v1[22] = v3;
  v1[23] = *(_QWORD *)(v3 - 8);
  v1[24] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35990);
  v1[25] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5DB654()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  unint64_t v30;
  int64_t v31;
  unint64_t v32;
  unint64_t v33;
  int64_t v34;
  unint64_t v35;
  int64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  void (*v40)(uint64_t, char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  _QWORD *v65;
  uint64_t v66;
  int64_t v67;
  uint64_t v68;
  unint64_t v69;
  int64_t v70;
  uint64_t v71;
  os_log_type_t type;
  uint64_t v73;
  char v74;

  if (qword_2542FD398 != -1)
    goto LABEL_53;
  while (2)
  {
    v1 = sub_23B60185C();
    __swift_project_value_buffer(v1, (uint64_t)qword_2542FD380);
    swift_retain_n();
    v2 = sub_23B601844();
    v3 = sub_23B601B8C();
    if (os_log_type_enabled(v2, v3))
    {
      type = v3;
      v4 = swift_slowAlloc();
      v71 = swift_slowAlloc();
      v73 = v71;
      *(_DWORD *)v4 = 136446466;
      swift_retain();
      v5 = sub_23B5CF79C();
      v7 = v6;
      swift_release();
      *(_QWORD *)(v0 + 128) = sub_23B58E160(v5, v7, &v73);
      sub_23B601BC8();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v4 + 12) = 2082;
      sub_23B5CFB70(&v74);
      *(_BYTE *)(v0 + 256) = v74;
      v8 = sub_23B601928();
      *(_QWORD *)(v0 + 136) = sub_23B58E160(v8, v9, &v73);
      sub_23B601BC8();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23B583000, v2, type, "%{public}s Invalidating due to power state: %{public}s", (uint8_t *)v4, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B868A2C](v71, -1, -1);
      MEMORY[0x23B868A2C](v4, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    v10 = *(_QWORD *)(v0 + 200);
    v12 = *(_QWORD *)(v0 + 176);
    v11 = *(_QWORD *)(v0 + 184);
    v13 = *(_QWORD *)(v0 + 144);
    v14 = sub_23B601A3C();
    sub_23B5884D4(&qword_256A34628, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    v15 = (void *)swift_allocError();
    sub_23B601898();
    v16 = v13 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_scanContinuation;
    swift_beginAccess();
    sub_23B5A3C5C(v16, v10, (uint64_t *)&unk_256A35990);
    v17 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v10, 1, v12);
    v18 = *(_QWORD *)(v0 + 200);
    if (v17)
    {
      sub_23B587ED4(*(_QWORD *)(v0 + 200), (uint64_t *)&unk_256A35990);
    }
    else
    {
      v12 = v0 + 120;
      v19 = *(_QWORD *)(v0 + 184);
      v20 = *(_QWORD *)(v0 + 192);
      v21 = *(_QWORD *)(v0 + 176);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v19 + 16))(v20, *(_QWORD *)(v0 + 200), v21);
      sub_23B587ED4(v18, (uint64_t *)&unk_256A35990);
      *(_QWORD *)(v0 + 120) = v15;
      v22 = v15;
      sub_23B601B20();
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v20, v21);
    }

    v23 = *(_QWORD *)(v0 + 160);
    v24 = *(_QWORD *)(v0 + 144) + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_peripheralCreationInProgress;
    swift_beginAccess();
    v65 = (_QWORD *)v24;
    v25 = *(_QWORD *)v24;
    v66 = *(_QWORD *)v24 + 64;
    v26 = -1;
    v27 = -1 << *(_BYTE *)(*(_QWORD *)v24 + 32);
    if (-v27 < 64)
      v26 = ~(-1 << -(char)v27);
    v28 = v26 & *(_QWORD *)(*(_QWORD *)v24 + 64);
    v67 = (unint64_t)(63 - v27) >> 6;
    v68 = v25;
    v29 = (_QWORD *)swift_bridgeObjectRetain();
    v31 = 0;
    while (v28)
    {
      v32 = __clz(__rbit64(v28));
      v28 &= v28 - 1;
      v33 = v32 | (v31 << 6);
LABEL_29:
      v30 = *(_QWORD *)(v68 + 56);
      v29 = *(_QWORD **)(v30 + 8 * v33);
      v37 = v29[2];
      if (v37)
      {
        v69 = v28;
        v70 = v31;
        v38 = (char *)v29
            + ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80));
        swift_bridgeObjectRetain();
        v39 = *(_QWORD *)(v23 + 72);
        v12 = v14;
        v40 = *(void (**)(uint64_t, char *, uint64_t))(v23 + 16);
        do
        {
          v41 = *(_QWORD *)(v0 + 168);
          v42 = *(_QWORD *)(v0 + 152);
          v40(v41, v38, v42);
          v43 = v23;
          v44 = swift_allocError();
          sub_23B601898();
          *(_QWORD *)(v0 + 112) = v44;
          v23 = v43;
          sub_23B601A24();
          (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v41, v42);
          v38 += v39;
          --v37;
        }
        while (v37);
        v29 = (_QWORD *)swift_bridgeObjectRelease();
        v14 = v12;
        v28 = v69;
        v31 = v70;
      }
    }
    v34 = v31 + 1;
    if (__OFADD__(v31, 1))
    {
      __break(1u);
LABEL_49:
      if (v30 >= 0x140)
      {
        v58 = v29[12];
        if (v58)
        {
          v53 = 4;
          goto LABEL_41;
        }
        if (v30 >= 0x180)
        {
          v58 = v29[13];
          if (v58)
          {
            v53 = 5;
            goto LABEL_41;
          }
          v59 = 0;
          v60 = v30 >> 6;
          if (v30 >> 6 <= 6)
            v60 = 6;
          v61 = v60 - 6;
          while (v61 != v59)
          {
            v58 = v29[v59++ + 14];
            if (v58)
            {
              v53 = v59 + 5;
              goto LABEL_41;
            }
          }
        }
      }
      goto LABEL_63;
    }
    if (v34 >= v67)
      break;
    v35 = *(_QWORD *)(v66 + 8 * v34);
    ++v31;
    if (v35)
      goto LABEL_28;
    v31 = v34 + 1;
    if (v34 + 1 >= v67)
      break;
    v35 = *(_QWORD *)(v66 + 8 * v31);
    if (v35)
      goto LABEL_28;
    v31 = v34 + 2;
    if (v34 + 2 >= v67)
      break;
    v35 = *(_QWORD *)(v66 + 8 * v31);
    if (v35)
      goto LABEL_28;
    v31 = v34 + 3;
    if (v34 + 3 >= v67)
      break;
    v35 = *(_QWORD *)(v66 + 8 * v31);
    if (v35)
    {
LABEL_28:
      v28 = (v35 - 1) & v35;
      v33 = __clz(__rbit64(v35)) + (v31 << 6);
      goto LABEL_29;
    }
    v36 = v34 + 4;
    if (v36 < v67)
    {
      v35 = *(_QWORD *)(v66 + 8 * v36);
      if (!v35)
      {
        while (1)
        {
          v31 = v36 + 1;
          if (__OFADD__(v36, 1))
            break;
          if (v31 >= v67)
            goto LABEL_33;
          v35 = *(_QWORD *)(v66 + 8 * v31);
          ++v36;
          if (v35)
            goto LABEL_28;
        }
        __break(1u);
LABEL_53:
        swift_once();
        continue;
      }
      v31 = v36;
      goto LABEL_28;
    }
    break;
  }
LABEL_33:
  swift_release();
  v45 = *(_QWORD *)(v0 + 144);
  v12 = MEMORY[0x24BEE4B00];
  *v65 = MEMORY[0x24BEE4B00];
  swift_bridgeObjectRelease();
  v46 = OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_discovered;
  *(_QWORD *)(v0 + 208) = OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_discovered;
  v47 = (uint64_t *)(v45 + v46);
  swift_beginAccess();
  v48 = *v47;
  *(_QWORD *)(v0 + 216) = *v47;
  v49 = *(_BYTE *)(v48 + 32);
  *(_BYTE *)(v0 + 257) = v49;
  v50 = -1;
  v51 = -1 << v49;
  if (-(-1 << v49) < 64)
    v50 = ~(-1 << -(char)v51);
  v52 = v50 & *(_QWORD *)(v48 + 64);
  v29 = (_QWORD *)swift_bridgeObjectRetain();
  if (v52)
  {
    v53 = 0;
    v54 = __clz(__rbit64(v52));
    v55 = (v52 - 1) & v52;
LABEL_37:
    *(_QWORD *)(v0 + 224) = v55;
    *(_QWORD *)(v0 + 232) = v53;
    *(_QWORD *)(v0 + 240) = *(_QWORD *)(v29[7] + 8 * v54);
    swift_retain();
    v56 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 248) = v56;
    *v56 = v0;
    v56[1] = sub_23B5DBE38;
    return sub_23B598D24();
  }
  v30 = 63 - v51;
  if ((unint64_t)(63 - v51) > 0x7F)
  {
    v58 = v29[9];
    if (v58)
    {
      v53 = 1;
LABEL_41:
      v55 = (v58 - 1) & v58;
      v54 = __clz(__rbit64(v58)) + (v53 << 6);
      goto LABEL_37;
    }
    if (v30 >= 0xC0)
    {
      v58 = v29[10];
      if (v58)
      {
        v53 = 2;
        goto LABEL_41;
      }
      if (v30 >= 0x100)
      {
        v58 = v29[11];
        if (v58)
        {
          v53 = 3;
          goto LABEL_41;
        }
        goto LABEL_49;
      }
    }
  }
LABEL_63:
  v62 = *(_QWORD *)(v0 + 208);
  v63 = *(_QWORD *)(v0 + 144);
  swift_release();
  *(_QWORD *)(v63 + v62) = v12;
  swift_bridgeObjectRelease();
  v64 = (uint64_t *)(v63 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_connected);
  swift_beginAccess();
  *v64 = v12;
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5DBE38()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B5DBE90()
{
  uint64_t v0;
  uint64_t result;
  int64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  result = swift_release();
  v3 = *(_QWORD *)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 232);
  if (v3)
  {
    v4 = __clz(__rbit64(v3));
    v5 = (v3 - 1) & v3;
    v6 = v4 | (v2 << 6);
    result = *(_QWORD *)(v0 + 216);
LABEL_3:
    *(_QWORD *)(v0 + 224) = v5;
    *(_QWORD *)(v0 + 232) = v2;
    *(_QWORD *)(v0 + 240) = *(_QWORD *)(*(_QWORD *)(result + 56) + 8 * v6);
    swift_retain();
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 248) = v7;
    *v7 = v0;
    v7[1] = sub_23B5DBE38;
    return sub_23B598D24();
  }
  v8 = v2 + 1;
  if (__OFADD__(v2, 1))
  {
    __break(1u);
  }
  else
  {
    v9 = (unint64_t)((1 << *(_BYTE *)(v0 + 257)) + 63) >> 6;
    result = *(_QWORD *)(v0 + 216);
    if (v8 >= v9)
      goto LABEL_20;
    v10 = result + 64;
    v11 = *(_QWORD *)(result + 64 + 8 * v8);
    ++v2;
    if (v11)
    {
LABEL_7:
      v5 = (v11 - 1) & v11;
      v6 = __clz(__rbit64(v11)) + (v2 << 6);
      goto LABEL_3;
    }
    v2 = v8 + 1;
    if (v8 + 1 >= v9)
      goto LABEL_20;
    v11 = *(_QWORD *)(v10 + 8 * v2);
    if (v11)
      goto LABEL_7;
    v2 = v8 + 2;
    if (v8 + 2 >= v9)
      goto LABEL_20;
    v11 = *(_QWORD *)(v10 + 8 * v2);
    if (v11)
      goto LABEL_7;
    v2 = v8 + 3;
    if (v8 + 3 >= v9)
      goto LABEL_20;
    v11 = *(_QWORD *)(v10 + 8 * v2);
    if (v11)
      goto LABEL_7;
    v12 = v8 + 4;
    if (v12 >= v9)
    {
LABEL_20:
      v13 = *(_QWORD *)(v0 + 208);
      v14 = *(_QWORD *)(v0 + 144);
      swift_release();
      v15 = MEMORY[0x24BEE4B00];
      *(_QWORD *)(v14 + v13) = MEMORY[0x24BEE4B00];
      swift_bridgeObjectRelease();
      v16 = (_QWORD *)(v14 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_connected);
      swift_beginAccess();
      *v16 = v15;
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    v11 = *(_QWORD *)(v10 + 8 * v12);
    if (v11)
    {
      v2 = v12;
      goto LABEL_7;
    }
    while (1)
    {
      v2 = v12 + 1;
      if (__OFADD__(v12, 1))
        break;
      if (v2 >= v9)
        goto LABEL_20;
      v11 = *(_QWORD *)(v10 + 8 * v2);
      ++v12;
      if (v11)
        goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_23B5DC08C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[14] = a1;
  v2[15] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD538);
  v2[16] = v3;
  v2[17] = *(_QWORD *)(v3 - 8);
  v2[18] = swift_task_alloc();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD580);
  v2[19] = v4;
  v2[20] = *(_QWORD *)(v4 - 8);
  v2[21] = swift_task_alloc();
  v2[22] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5DC12C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  _QWORD *v54;
  uint64_t (*v55)();
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  int64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  int64_t v77;
  unint64_t v78;
  int64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  int64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;

  v2 = (_QWORD *)(v0 + 112);
  v1 = *(_QWORD *)(v0 + 112);
  v3 = v0 + 72;
  *(_QWORD *)(*(_QWORD *)(v0 + 120) + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager__state) = v1;
  switch(v1)
  {
    case 0:
      if (qword_2542FD398 != -1)
        goto LABEL_82;
      goto LABEL_3;
    case 1:
      if (qword_2542FD398 != -1)
        swift_once();
      v18 = sub_23B60185C();
      __swift_project_value_buffer(v18, (uint64_t)qword_2542FD380);
      swift_retain_n();
      v19 = sub_23B601844();
      v20 = sub_23B601B8C();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = (uint8_t *)swift_slowAlloc();
        v22 = swift_slowAlloc();
        *(_DWORD *)v21 = 136446210;
        v95 = v22;
        swift_retain();
        v23 = sub_23B5CF79C();
        v25 = v24;
        swift_release();
        *(_QWORD *)(v0 + 104) = sub_23B58E160(v23, v25, &v95);
        sub_23B601BC8();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23B583000, v19, v20, "%{public}s state is .resetting.", v21, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B868A2C](v22, -1, -1);
        MEMORY[0x23B868A2C](v21, -1, -1);

      }
      else
      {

        swift_release_n();
      }
      v54 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 192) = v54;
      v55 = sub_23B5DD1F8;
      goto LABEL_46;
    case 2:
      if (qword_2542FD398 != -1)
        swift_once();
      v26 = sub_23B60185C();
      __swift_project_value_buffer(v26, (uint64_t)qword_2542FD380);
      swift_retain_n();
      v27 = sub_23B601844();
      v28 = sub_23B601B8C();
      if (os_log_type_enabled(v27, v28))
      {
        v29 = (uint8_t *)swift_slowAlloc();
        v91 = swift_slowAlloc();
        v95 = v91;
        *(_DWORD *)v29 = 136446210;
        swift_retain();
        v30 = sub_23B5CF79C();
        v32 = v31;
        swift_release();
        *(_QWORD *)(v0 + 96) = sub_23B58E160(v30, v32, &v95);
        sub_23B601BC8();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23B583000, v27, v28, "%{public}s state is .unsupported.", v29, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B868A2C](v91, -1, -1);
        MEMORY[0x23B868A2C](v29, -1, -1);

      }
      else
      {

        swift_release_n();
      }
      v54 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 200) = v54;
      v55 = sub_23B5DD250;
      goto LABEL_46;
    case 3:
      if (qword_2542FD398 != -1)
        swift_once();
      v33 = sub_23B60185C();
      __swift_project_value_buffer(v33, (uint64_t)qword_2542FD380);
      swift_retain_n();
      v34 = sub_23B601844();
      v35 = sub_23B601B8C();
      if (os_log_type_enabled(v34, v35))
      {
        v36 = (uint8_t *)swift_slowAlloc();
        v92 = swift_slowAlloc();
        v95 = v92;
        *(_DWORD *)v36 = 136446210;
        swift_retain();
        v37 = sub_23B5CF79C();
        v39 = v38;
        swift_release();
        *(_QWORD *)(v0 + 88) = sub_23B58E160(v37, v39, &v95);
        sub_23B601BC8();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23B583000, v34, v35, "%{public}s state is .unauthorized.", v36, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B868A2C](v92, -1, -1);
        MEMORY[0x23B868A2C](v36, -1, -1);

      }
      else
      {

        swift_release_n();
      }
      v54 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 208) = v54;
      v55 = sub_23B5DD2A8;
      goto LABEL_46;
    case 4:
      if (qword_2542FD398 != -1)
        swift_once();
      v40 = sub_23B60185C();
      __swift_project_value_buffer(v40, (uint64_t)qword_2542FD380);
      swift_retain_n();
      v41 = sub_23B601844();
      v42 = sub_23B601B8C();
      if (os_log_type_enabled(v41, v42))
      {
        v43 = (uint8_t *)swift_slowAlloc();
        v93 = swift_slowAlloc();
        v95 = v93;
        *(_DWORD *)v43 = 136446210;
        swift_retain();
        v44 = sub_23B5CF79C();
        v46 = v45;
        swift_release();
        *(_QWORD *)(v0 + 80) = sub_23B58E160(v44, v46, &v95);
        sub_23B601BC8();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23B583000, v41, v42, "%{public}s state is .poweredOff.", v43, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B868A2C](v93, -1, -1);
        MEMORY[0x23B868A2C](v43, -1, -1);

      }
      else
      {

        swift_release_n();
      }
      v54 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 216) = v54;
      v55 = sub_23B5DD300;
      goto LABEL_46;
    case 5:
      if (qword_2542FD398 != -1)
        swift_once();
      v47 = sub_23B60185C();
      __swift_project_value_buffer(v47, (uint64_t)qword_2542FD380);
      swift_retain_n();
      v48 = sub_23B601844();
      v49 = sub_23B601B8C();
      if (os_log_type_enabled(v48, v49))
      {
        v50 = (uint8_t *)swift_slowAlloc();
        v94 = swift_slowAlloc();
        v95 = v94;
        *(_DWORD *)v50 = 136446210;
        v2 = (_QWORD *)(v0 + 112);
        swift_retain();
        v51 = sub_23B5CF79C();
        v53 = v52;
        swift_release();
        *(_QWORD *)(v0 + 40) = sub_23B58E160(v51, v53, &v95);
        sub_23B601BC8();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23B583000, v48, v49, "%{public}s state is .poweredOn.", v50, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B868A2C](v94, -1, -1);
        MEMORY[0x23B868A2C](v50, -1, -1);

        goto LABEL_51;
      }

      goto LABEL_50;
    default:
      if (qword_2542FCCC8 != -1)
        swift_once();
      if (qword_2542FE088 == *v2)
      {
        if (qword_2542FD398 != -1)
          swift_once();
        v11 = sub_23B60185C();
        __swift_project_value_buffer(v11, (uint64_t)qword_2542FD380);
        swift_retain_n();
        v12 = sub_23B601844();
        v13 = sub_23B601B8C();
        if (os_log_type_enabled(v12, v13))
        {
          v14 = (uint8_t *)swift_slowAlloc();
          v87 = swift_slowAlloc();
          v95 = v87;
          *(_DWORD *)v14 = 136446210;
          v2 = (_QWORD *)(v0 + 112);
          swift_retain();
          v15 = sub_23B5CF79C();
          v17 = v16;
          swift_release();
          *(_QWORD *)(v0 + 64) = sub_23B58E160(v15, v17, &v95);
          sub_23B601BC8();
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_23B583000, v12, v13, "%{public}s state is .restricted.", v14, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x23B868A2C](v87, -1, -1);
          MEMORY[0x23B868A2C](v14, -1, -1);

          goto LABEL_51;
        }

      }
      else
      {
        if (qword_2542FD398 != -1)
          swift_once();
        v56 = sub_23B60185C();
        __swift_project_value_buffer(v56, (uint64_t)qword_2542FD380);
        swift_retain_n();
        v57 = sub_23B601844();
        v58 = sub_23B601B74();
        if (os_log_type_enabled(v57, v58))
        {
          v85 = *v2;
          v59 = swift_slowAlloc();
          v88 = swift_slowAlloc();
          v95 = v88;
          *(_DWORD *)v59 = 136446466;
          swift_retain();
          v60 = sub_23B5CF79C();
          v62 = v61;
          swift_release();
          *(_QWORD *)(v0 + 48) = sub_23B58E160(v60, v62, &v95);
          sub_23B601BC8();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v59 + 12) = 2048;
          *(_QWORD *)(v0 + 56) = v85;
          sub_23B601BC8();
          _os_log_impl(&dword_23B583000, v57, v58, "%{public}s Unknown CBCentralManager state: %ld", (uint8_t *)v59, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x23B868A2C](v88, -1, -1);
          MEMORY[0x23B868A2C](v59, -1, -1);

          goto LABEL_51;
        }

      }
LABEL_50:
      swift_release_n();
LABEL_51:
      v83 = v2;
      v3 = *(_QWORD *)(v0 + 160);
      v89 = *(_QWORD *)(v0 + 136);
      v64 = *(_QWORD *)(v0 + 120) + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_stateContinuations;
      swift_beginAccess();
      v65 = *(_QWORD *)v64;
      v84 = *(_QWORD *)v64 + 64;
      v66 = -1;
      v67 = -1 << *(_BYTE *)(*(_QWORD *)v64 + 32);
      if (-v67 < 64)
        v66 = ~(-1 << -(char)v67);
      v68 = v66 & *(_QWORD *)(*(_QWORD *)v64 + 64);
      v86 = (unint64_t)(63 - v67) >> 6;
      swift_bridgeObjectRetain();
      v69 = 0;
      break;
  }
  while (1)
  {
    if (v68)
    {
      v75 = __clz(__rbit64(v68));
      v68 &= v68 - 1;
      v76 = v75 | (v69 << 6);
      goto LABEL_76;
    }
    v77 = v69 + 1;
    if (__OFADD__(v69, 1))
    {
      __break(1u);
      goto LABEL_81;
    }
    if (v77 >= v86)
      goto LABEL_79;
    v78 = *(_QWORD *)(v84 + 8 * v77);
    ++v69;
    if (!v78)
    {
      v69 = v77 + 1;
      if (v77 + 1 >= v86)
        goto LABEL_79;
      v78 = *(_QWORD *)(v84 + 8 * v69);
      if (!v78)
      {
        v69 = v77 + 2;
        if (v77 + 2 >= v86)
          goto LABEL_79;
        v78 = *(_QWORD *)(v84 + 8 * v69);
        if (!v78)
        {
          v69 = v77 + 3;
          if (v77 + 3 >= v86)
            goto LABEL_79;
          v78 = *(_QWORD *)(v84 + 8 * v69);
          if (!v78)
            break;
        }
      }
    }
LABEL_75:
    v68 = (v78 - 1) & v78;
    v76 = __clz(__rbit64(v78)) + (v69 << 6);
LABEL_76:
    v81 = *(_QWORD *)(v0 + 168);
    v80 = *(_QWORD *)(v0 + 176);
    v82 = *(_QWORD *)(v0 + 152);
    v70 = *(_QWORD *)(v0 + 112);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v3 + 16))(v80, *(_QWORD *)(v65 + 56) + *(_QWORD *)(v3 + 72) * v76, v82);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v81, v80, v82);
    if (v70 >= 6)
    {
      if (qword_2542FCCC8 != -1)
        swift_once();
      if (qword_2542FE088 == *v83)
        LOBYTE(v70) = 6;
      else
        LOBYTE(v70) = 0;
    }
    v71 = *(_QWORD *)(v0 + 168);
    v73 = *(_QWORD *)(v0 + 144);
    v72 = *(_QWORD *)(v0 + 152);
    v74 = *(_QWORD *)(v0 + 128);
    *(_BYTE *)(v0 + 224) = v70;
    sub_23B601A9C();
    (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v73, v74);
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v71, v72);
  }
  v79 = v77 + 4;
  if (v79 >= v86)
  {
LABEL_79:
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v78 = *(_QWORD *)(v84 + 8 * v79);
  if (v78)
  {
    v69 = v79;
    goto LABEL_75;
  }
  while (1)
  {
    v69 = v79 + 1;
    if (__OFADD__(v79, 1))
      break;
    if (v69 >= v86)
      goto LABEL_79;
    v78 = *(_QWORD *)(v84 + 8 * v69);
    ++v79;
    if (v78)
      goto LABEL_75;
  }
LABEL_81:
  __break(1u);
LABEL_82:
  swift_once();
LABEL_3:
  v4 = sub_23B60185C();
  __swift_project_value_buffer(v4, (uint64_t)qword_2542FD380);
  swift_retain_n();
  v5 = sub_23B601844();
  v6 = sub_23B601B8C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v90 = swift_slowAlloc();
    v95 = v90;
    *(_DWORD *)v7 = 136446210;
    swift_retain();
    v8 = sub_23B5CF79C();
    v10 = v9;
    swift_release();
    *(_QWORD *)v3 = sub_23B58E160(v8, v10, &v95);
    sub_23B601BC8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B583000, v5, v6, "%{public}s state is .unknown.", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v90, -1, -1);
    MEMORY[0x23B868A2C](v7, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v54 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 184) = v54;
  v55 = sub_23B5DD1A0;
LABEL_46:
  *v54 = v0;
  v54[1] = v55;
  return sub_23B5DB5A0();
}

uint64_t sub_23B5DD1A0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B5DD1F8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B5DD250()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B5DD2A8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B5DD300()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B5DD358()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;

  v1 = *(_QWORD *)(v0 + 160);
  v24 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 120) + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_stateContinuations;
  swift_beginAccess();
  v3 = *(_QWORD *)v2;
  v22 = *(_QWORD *)v2 + 64;
  v4 = -1;
  v5 = -1 << *(_BYTE *)(*(_QWORD *)v2 + 32);
  if (-v5 < 64)
    v4 = ~(-1 << -(char)v5);
  v6 = v4 & *(_QWORD *)(*(_QWORD *)v2 + 64);
  v23 = (unint64_t)(63 - v5) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v14 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v15 = v14 | (v8 << 6);
      goto LABEL_26;
    }
    v16 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v16 >= v23)
      goto LABEL_29;
    v17 = *(_QWORD *)(v22 + 8 * v16);
    ++v8;
    if (!v17)
    {
      v8 = v16 + 1;
      if (v16 + 1 >= v23)
        goto LABEL_29;
      v17 = *(_QWORD *)(v22 + 8 * v8);
      if (!v17)
      {
        v8 = v16 + 2;
        if (v16 + 2 >= v23)
          goto LABEL_29;
        v17 = *(_QWORD *)(v22 + 8 * v8);
        if (!v17)
        {
          v8 = v16 + 3;
          if (v16 + 3 >= v23)
            goto LABEL_29;
          v17 = *(_QWORD *)(v22 + 8 * v8);
          if (!v17)
            break;
        }
      }
    }
LABEL_25:
    v6 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v8 << 6);
LABEL_26:
    v20 = *(_QWORD *)(v0 + 168);
    v19 = *(_QWORD *)(v0 + 176);
    v21 = *(_QWORD *)(v0 + 152);
    v9 = *(_QWORD *)(v0 + 112);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v1 + 16))(v19, *(_QWORD *)(v3 + 56) + *(_QWORD *)(v1 + 72) * v15, v21);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32))(v20, v19, v21);
    if (v9 >= 6)
    {
      if (qword_2542FCCC8 != -1)
        swift_once();
      if (qword_2542FE088 == *(_QWORD *)(v0 + 112))
        LOBYTE(v9) = 6;
      else
        LOBYTE(v9) = 0;
    }
    v10 = *(_QWORD *)(v0 + 168);
    v12 = *(_QWORD *)(v0 + 144);
    v11 = *(_QWORD *)(v0 + 152);
    v13 = *(_QWORD *)(v0 + 128);
    *(_BYTE *)(v0 + 224) = v9;
    sub_23B601A9C();
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v12, v13);
    result = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v10, v11);
  }
  v18 = v16 + 4;
  if (v18 >= v23)
  {
LABEL_29:
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v17 = *(_QWORD *)(v22 + 8 * v18);
  if (v17)
  {
    v8 = v18;
    goto LABEL_25;
  }
  while (1)
  {
    v8 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v8 >= v23)
      goto LABEL_29;
    v17 = *(_QWORD *)(v22 + 8 * v8);
    ++v18;
    if (v17)
      goto LABEL_25;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_23B5DD60C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4[65] = v3;
  v4[63] = a2;
  v4[64] = a3;
  v4[62] = a1;
  v4[66] = *v3;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD5C8);
  v4[67] = v5;
  v4[68] = *(_QWORD *)(v5 - 8);
  v4[69] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35990);
  v4[70] = swift_task_alloc();
  v4[71] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A35DC0);
  v4[72] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD530);
  v4[73] = swift_task_alloc();
  v6 = sub_23B601634();
  v4[74] = v6;
  v4[75] = *(_QWORD *)(v6 - 8);
  v4[76] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A346E0);
  v4[77] = swift_task_alloc();
  v4[78] = swift_task_alloc();
  v7 = sub_23B601790();
  v4[79] = v7;
  v4[80] = *(_QWORD *)(v7 - 8);
  v4[81] = swift_task_alloc();
  v4[82] = swift_task_alloc();
  sub_23B601820();
  v4[83] = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  v4[84] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v4[85] = v9;
  v4[86] = *(_QWORD *)(v9 + 64);
  v4[87] = swift_task_alloc();
  v4[88] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5DD7F0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  uint8_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  char v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(uint64_t, uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;

  if (qword_256A340C8 != -1)
    swift_once();
  v1 = *(void **)(v0 + 496);
  v2 = sub_23B60185C();
  *(_QWORD *)(v0 + 712) = v2;
  __swift_project_value_buffer(v2, (uint64_t)qword_256A35958);
  v3 = v1;
  swift_bridgeObjectRetain_n();
  v4 = v3;
  v5 = sub_23B601844();
  v6 = sub_23B601B68();
  if (os_log_type_enabled(v5, v6))
  {
    v85 = *(_QWORD *)(v0 + 512);
    v7 = *(void **)(v0 + 496);
    v8 = swift_slowAlloc();
    v9 = (_QWORD *)swift_slowAlloc();
    v86 = swift_slowAlloc();
    v88 = v86;
    *(_DWORD *)v8 = 138412802;
    v87 = v2;
    *(_QWORD *)(v0 + 480) = v7;
    v10 = v7;
    sub_23B601BC8();
    *v9 = v7;

    *(_WORD *)(v8 + 12) = 2080;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD650);
    v11 = sub_23B6018BC();
    v13 = v12;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 488) = sub_23B58E160(v11, v13, &v88);
    sub_23B601BC8();
    swift_bridgeObjectRelease_n();
    v2 = v87;
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 22) = 2048;
    *(_QWORD *)(v0 + 432) = v85;
    sub_23B601BC8();
    _os_log_impl(&dword_23B583000, v5, v6, "didDiscover: %@ advertisementData: %s, rssi: %ld", (uint8_t *)v8, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35D50);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v9, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v86, -1, -1);
    MEMORY[0x23B868A2C](v8, -1, -1);

  }
  else
  {
    v14 = *(void **)(v0 + 496);

    swift_bridgeObjectRelease_n();
  }
  v15 = *(_QWORD *)(v0 + 504);
  v16 = sub_23B60191C();
  if (*(_QWORD *)(v15 + 16) && (v18 = sub_23B58ECB8(v16, v17), (v19 & 1) != 0))
  {
    sub_23B58F834(*(_QWORD *)(*(_QWORD *)(v0 + 504) + 56) + 32 * v18, v0 + 16);
  }
  else
  {
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
  }
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 40))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD650);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v20 = *(_QWORD *)(v0 + 520);
      v21 = objc_msgSend(*(id *)(v0 + 496), sel_identifier);
      sub_23B6017FC();

      type metadata accessor for Peripheral();
      sub_23B6015D4();
      sub_23B601778();
      v22 = OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_discovered;
      *(_QWORD *)(v0 + 720) = OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_discovered;
      v23 = (uint64_t *)(v20 + v22);
      swift_beginAccess();
      v24 = *v23;
      if (*(_QWORD *)(*v23 + 16))
      {
        v25 = *(_QWORD *)(v0 + 704);
        swift_bridgeObjectRetain();
        v26 = sub_23B58ED88(v25);
        if ((v27 & 1) != 0)
        {
          v28 = *(_QWORD *)(*(_QWORD *)(v24 + 56) + 8 * v26);
          swift_retain_n();
          swift_bridgeObjectRelease();
          v29 = sub_23B601844();
          v30 = sub_23B601B5C();
          if (os_log_type_enabled(v29, v30))
          {
            v31 = (uint8_t *)swift_slowAlloc();
            v32 = swift_slowAlloc();
            v88 = v32;
            *(_DWORD *)v31 = 136315138;
            swift_retain();
            v33 = sub_23B598B88();
            v35 = v34;
            swift_release();
            *(_QWORD *)(v0 + 472) = sub_23B58E160(v33, v35, &v88);
            sub_23B601BC8();
            swift_release_n();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_23B583000, v29, v30, "centralManager didDiscover existing: %s", v31, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x23B868A2C](v32, -1, -1);
            MEMORY[0x23B868A2C](v31, -1, -1);
            swift_release();

LABEL_40:
            *(_QWORD *)(v0 + 752) = v28;
            return swift_task_switch();
          }
          goto LABEL_39;
        }
        swift_bridgeObjectRelease();
      }
      v44 = (uint64_t *)(*(_QWORD *)(v0 + 520) + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_connected);
      swift_beginAccess();
      v45 = *v44;
      if (*(_QWORD *)(v45 + 16))
      {
        v46 = *(_QWORD *)(v0 + 704);
        swift_bridgeObjectRetain();
        v47 = sub_23B58ED88(v46);
        if ((v48 & 1) != 0)
        {
          v28 = *(_QWORD *)(*(_QWORD *)(v45 + 56) + 8 * v47);
          swift_retain_n();
          swift_bridgeObjectRelease();
          v29 = sub_23B601844();
          v49 = sub_23B601B5C();
          if (os_log_type_enabled(v29, v49))
          {
            v50 = (uint8_t *)swift_slowAlloc();
            v51 = swift_slowAlloc();
            *(_DWORD *)v50 = 136315138;
            v88 = v51;
            swift_retain();
            v52 = sub_23B598B88();
            v54 = v53;
            swift_release();
            *(_QWORD *)(v0 + 464) = sub_23B58E160(v52, v54, &v88);
            sub_23B601BC8();
            swift_release_n();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_23B583000, v29, v49, "centralManager didDiscover connected peripheral: %s", v50, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x23B868A2C](v51, -1, -1);
            MEMORY[0x23B868A2C](v50, -1, -1);

            goto LABEL_40;
          }
LABEL_39:

          swift_release_n();
          goto LABEL_40;
        }
        swift_bridgeObjectRelease();
      }
      v55 = sub_23B60191C();
      if (*(_QWORD *)(v15 + 16) && (v57 = sub_23B58ECB8(v55, v56), (v58 & 1) != 0))
      {
        sub_23B58F834(*(_QWORD *)(*(_QWORD *)(v0 + 504) + 56) + 32 * v57, v0 + 112);
      }
      else
      {
        *(_OWORD *)(v0 + 112) = 0u;
        *(_OWORD *)(v0 + 128) = 0u;
      }
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v0 + 136))
      {
        if ((swift_dynamicCast() & 1) == 0)
        {
LABEL_48:
          if (qword_2542FD398 != -1)
            swift_once();
          __swift_project_value_buffer(v2, (uint64_t)qword_2542FD380);
          v70 = sub_23B601844();
          v71 = sub_23B601B5C();
          if (os_log_type_enabled(v70, v71))
          {
            v72 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v72 = 0;
            _os_log_impl(&dword_23B583000, v70, v71, "No MAC address available from advertisementData", v72, 2u);
            MEMORY[0x23B868A2C](v72, -1, -1);
          }

          v73 = 1;
LABEL_53:
          (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 600) + 56))(*(_QWORD *)(v0 + 624), v73, 1, *(_QWORD *)(v0 + 592));
          v74 = sub_23B60191C();
          if (*(_QWORD *)(v15 + 16) && (v76 = sub_23B58ECB8(v74, v75), (v77 & 1) != 0))
          {
            sub_23B58F834(*(_QWORD *)(*(_QWORD *)(v0 + 504) + 56) + 32 * v76, v0 + 80);
          }
          else
          {
            *(_OWORD *)(v0 + 80) = 0u;
            *(_OWORD *)(v0 + 96) = 0u;
          }
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(v0 + 104))
          {
            if (swift_dynamicCast())
            {
              v78 = *(_BYTE *)(v0 + 409);
LABEL_62:
              v79 = *(_QWORD *)(v0 + 504);
              v80 = (_QWORD *)swift_task_alloc();
              *(_QWORD *)(v0 + 728) = v80;
              *v80 = v0;
              v80[1] = sub_23B5DE544;
              return sub_23B5D5670(*(_QWORD *)(v0 + 496), *(_QWORD *)(v0 + 624), v78, v79, *(_QWORD *)(v0 + 512), 0);
            }
          }
          else
          {
            sub_23B587ED4(v0 + 80, &qword_256A35DC8);
          }
          v78 = 0;
          goto LABEL_62;
        }
        v60 = *(_QWORD *)(v0 + 384);
        v59 = *(_QWORD *)(v0 + 392);
        v61 = sub_23B60191C();
        if (*(_QWORD *)(v15 + 16) && (v63 = sub_23B58ECB8(v61, v62), (v64 & 1) != 0))
        {
          sub_23B58F834(*(_QWORD *)(*(_QWORD *)(v0 + 504) + 56) + 32 * v63, v0 + 48);
        }
        else
        {
          *(_OWORD *)(v0 + 48) = 0u;
          *(_OWORD *)(v0 + 64) = 0u;
        }
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v0 + 72))
        {
          if ((swift_dynamicCast() & 1) == 0)
          {
            sub_23B5A2990(v60, v59);
            goto LABEL_48;
          }
          v67 = *(_QWORD *)(v0 + 616);
          v68 = *(_QWORD *)(v0 + 600);
          v69 = *(_QWORD *)(v0 + 592);
          sub_23B60161C();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v68 + 48))(v67, 1, v69) != 1)
          {
            v81 = *(_QWORD *)(v0 + 624);
            v82 = *(_QWORD *)(v0 + 608);
            v83 = *(_QWORD *)(v0 + 592);
            v84 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 600) + 32);
            v84(v82, *(_QWORD *)(v0 + 616), v83);
            v84(v81, v82, v83);
            v73 = 0;
            goto LABEL_53;
          }
          v66 = *(_QWORD *)(v0 + 616);
          v65 = (uint64_t *)&unk_256A346E0;
        }
        else
        {
          sub_23B5A2990(v60, v59);
          v65 = &qword_256A35DC8;
          v66 = v0 + 48;
        }
      }
      else
      {
        v65 = &qword_256A35DC8;
        v66 = v0 + 112;
      }
      sub_23B587ED4(v66, v65);
      goto LABEL_48;
    }
  }
  else
  {
    sub_23B587ED4(v0 + 16, &qword_256A35DC8);
  }
  if (qword_2542FD398 != -1)
    swift_once();
  __swift_project_value_buffer(v2, (uint64_t)qword_2542FD380);
  swift_bridgeObjectRetain_n();
  v36 = sub_23B601844();
  v37 = sub_23B601B74();
  if (os_log_type_enabled(v36, v37))
  {
    v38 = (uint8_t *)swift_slowAlloc();
    v39 = swift_slowAlloc();
    *(_DWORD *)v38 = 136315138;
    v88 = v39;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD650);
    v40 = sub_23B6018BC();
    v42 = v41;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 448) = sub_23B58E160(v40, v42, &v88);
    sub_23B601BC8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v39, -1, -1);
    MEMORY[0x23B868A2C](v38, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5DE544(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 736) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 744) = a1;
  return swift_task_switch();
}

uint64_t sub_23B5DE5B8()
{
  uint64_t *v0;

  sub_23B587ED4(v0[78], (uint64_t *)&unk_256A346E0);
  v0[94] = v0[93];
  return swift_task_switch();
}

uint64_t sub_23B5DE600()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v1 = v0[94];
  v2 = v0[81];
  v3 = v0[80];
  v4 = v0[79];
  v6 = v0[63];
  v5 = v0[64];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 16))(v2, v0[82], v4);
  v7 = v1 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_lastSeen;
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 40))(v7, v2, v4);
  swift_endAccess();
  v8 = v1 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_rssi;
  swift_beginAccess();
  *(_QWORD *)v8 = v5;
  *(_BYTE *)(v8 + 8) = 0;
  v9 = (_QWORD *)(v1 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_advertisementData);
  swift_beginAccess();
  *v9 = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23B5DE738()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  void (*v7)(uint64_t, _QWORD, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  void (*v9)(uint64_t, uint64_t);
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t, _QWORD, uint64_t);
  void (*v55)(uint64_t, uint64_t);
  void (*v56)(uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v1 = *(_QWORD *)(v0 + 752);
  v2 = *(_QWORD *)(v0 + 696);
  v3 = *(_QWORD *)(v0 + 680);
  v4 = *(_QWORD *)(v0 + 672);
  v5 = *(_QWORD *)(v0 + 520);
  v6 = (uint64_t *)(v5 + *(_QWORD *)(v0 + 720));
  v7 = *(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 16);
  v7(v2, *(_QWORD *)(v0 + 704), v4);
  swift_beginAccess();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v58 = *v6;
  *v6 = 0x8000000000000000;
  sub_23B5B8F28(v1, v2, isUniquelyReferenced_nonNull_native);
  *v6 = v58;
  swift_bridgeObjectRelease();
  v9 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v9(v2, v4);
  swift_endAccess();
  v10 = (uint64_t *)(v5 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_garbageCollectInterval);
  if ((*(_BYTE *)(v5 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_garbageCollectInterval + 16) & 1) == 0)
  {
    v11 = *(_QWORD *)(v0 + 704);
    v12 = *(_QWORD *)(v0 + 696);
    v55 = v9;
    v13 = *(_QWORD *)(v0 + 688);
    v14 = *(_QWORD *)(v0 + 680);
    v15 = *(_QWORD *)(v0 + 672);
    v16 = *(_QWORD *)(v0 + 584);
    v17 = *(_QWORD *)(v0 + 520);
    v52 = v10[1];
    v53 = *(_QWORD *)(v0 + 528);
    v51 = *v10;
    v18 = sub_23B601A78();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v16, 1, 1, v18);
    v54 = v7;
    v7(v12, v11, v15);
    v19 = sub_23B5884D4(&qword_2542FD3C8, type metadata accessor for CentralManager, (uint64_t)&protocol conformance descriptor for CentralManager);
    v20 = (*(unsigned __int8 *)(v14 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    v21 = (v13 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
    v22 = (char *)swift_allocObject();
    *((_QWORD *)v22 + 2) = v17;
    *((_QWORD *)v22 + 3) = v19;
    *((_QWORD *)v22 + 4) = v51;
    *((_QWORD *)v22 + 5) = v52;
    *((_QWORD *)v22 + 6) = v17;
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 32))(&v22[v20], v12, v15);
    *(_QWORD *)&v22[v21] = v53;
    swift_retain_n();
    v23 = (uint64_t)v22;
    v9 = v55;
    v24 = sub_23B5CD39C(v16, (uint64_t)&unk_256A35DE0, v23);
    v25 = (uint64_t *)(v17 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_garbageCollectTasks);
    swift_beginAccess();
    if (*(_QWORD *)(*v25 + 16))
    {
      v26 = *(_QWORD *)(v0 + 704);
      swift_bridgeObjectRetain();
      sub_23B58ED88(v26);
      if ((v27 & 1) != 0)
      {
        swift_retain();
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName(&qword_256A34490);
        sub_23B601ACC();
        swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    v28 = *(_QWORD *)(v0 + 696);
    v29 = *(_QWORD *)(v0 + 672);
    v54(v28, *(_QWORD *)(v0 + 704), v29);
    swift_beginAccess();
    swift_retain();
    v30 = swift_isUniquelyReferenced_nonNull_native();
    v59 = *v25;
    *v25 = 0x8000000000000000;
    sub_23B5B9570(v24, v28, v30);
    *v25 = v59;
    swift_bridgeObjectRelease();
    v55(v28, v29);
    swift_endAccess();
    swift_release();
  }
  v31 = *(_QWORD *)(v0 + 568);
  v32 = *(_QWORD *)(v0 + 544);
  v33 = *(_QWORD *)(v0 + 536);
  v34 = *(_QWORD *)(v0 + 520) + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_scanContinuation;
  swift_beginAccess();
  sub_23B5A3C5C(v34, v31, (uint64_t *)&unk_256A35990);
  v35 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v31, 1, v33);
  v36 = *(_QWORD *)(v0 + 752);
  v37 = *(_QWORD *)(v0 + 704);
  v38 = *(_QWORD *)(v0 + 672);
  v39 = *(_QWORD *)(v0 + 656);
  v40 = *(_QWORD *)(v0 + 640);
  v41 = *(_QWORD *)(v0 + 632);
  if (v35)
  {
    v42 = *(_QWORD *)(v0 + 568);
    (*(void (**)(_QWORD, _QWORD))(v40 + 8))(*(_QWORD *)(v0 + 656), *(_QWORD *)(v0 + 632));
    swift_release();
    v9(v37, v38);
    sub_23B587ED4(v42, (uint64_t *)&unk_256A35990);
    v43 = 1;
  }
  else
  {
    v44 = *(_QWORD *)(v0 + 568);
    v56 = v9;
    v57 = *(_QWORD *)(v0 + 704);
    v45 = *(_QWORD *)(v0 + 552);
    v46 = *(_QWORD *)(v0 + 544);
    v47 = *(_QWORD *)(v0 + 536);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 16))(v45, v44, v47);
    sub_23B587ED4(v44, (uint64_t *)&unk_256A35990);
    *(_QWORD *)(v0 + 400) = v36;
    *(_BYTE *)(v0 + 408) = 0;
    sub_23B601B14();
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v45, v47);
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v39, v41);
    v56(v57, v38);
    v43 = 0;
  }
  v48 = *(_QWORD *)(v0 + 576);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A35DD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v48, v43, 1, v49);
  sub_23B587ED4(v48, &qword_256A35DC0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5DECAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  _BOOL4 v11;
  void *v12;
  uint8_t *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *(_QWORD *)(v0 + 704);
  v2 = *(_QWORD *)(v0 + 680);
  v3 = *(_QWORD *)(v0 + 672);
  v4 = *(_QWORD *)(v0 + 656);
  v5 = *(_QWORD *)(v0 + 640);
  v6 = *(_QWORD *)(v0 + 632);
  sub_23B587ED4(*(_QWORD *)(v0 + 624), (uint64_t *)&unk_256A346E0);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if (qword_2542FD398 != -1)
    swift_once();
  v7 = *(void **)(v0 + 736);
  __swift_project_value_buffer(*(_QWORD *)(v0 + 712), (uint64_t)qword_2542FD380);
  v8 = v7;
  v9 = sub_23B601844();
  v10 = sub_23B601B74();
  v11 = os_log_type_enabled(v9, v10);
  v12 = *(void **)(v0 + 736);
  if (v11)
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v13 = 138412290;
    v15 = sub_23B6016C4();
    *(_QWORD *)(v0 + 440) = v15;
    sub_23B601BC8();
    *v14 = v15;

    _os_log_impl(&dword_23B583000, v9, v10, "didDiscover error: %@", v13, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35D50);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v14, -1, -1);
    MEMORY[0x23B868A2C](v13, -1, -1);
  }
  else
  {

  }
  v16 = *(_QWORD *)(v0 + 560);
  v17 = *(_QWORD *)(v0 + 544);
  v18 = *(_QWORD *)(v0 + 536);
  v19 = *(_QWORD *)(v0 + 520);

  v20 = v19 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_scanContinuation;
  swift_beginAccess();
  sub_23B5A3C5C(v20, v16, (uint64_t *)&unk_256A35990);
  v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v16, 1, v18);
  v22 = *(void **)(v0 + 736);
  v23 = *(_QWORD *)(v0 + 560);
  if (v21)
  {

    sub_23B587ED4(v23, (uint64_t *)&unk_256A35990);
  }
  else
  {
    v24 = *(_QWORD *)(v0 + 552);
    v25 = *(_QWORD *)(v0 + 544);
    v26 = *(_QWORD *)(v0 + 536);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v25 + 16))(v24, *(_QWORD *)(v0 + 560), v26);
    sub_23B587ED4(v23, (uint64_t *)&unk_256A35990);
    *(_QWORD *)(v0 + 416) = v22;
    sub_23B601B20();
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5DF00C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v7[17] = a6;
  v7[18] = a7;
  v7[15] = a4;
  v7[16] = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD5C8);
  v7[19] = v8;
  v7[20] = *(_QWORD *)(v8 - 8);
  v7[21] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35990);
  v7[22] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A35DC0);
  v7[23] = swift_task_alloc();
  v9 = sub_23B601CE8();
  v7[24] = v9;
  v7[25] = *(_QWORD *)(v9 - 8);
  v7[26] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5DF0E8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  sub_23B601CDC();
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_256A34E00 + dword_256A34E00);
  v1 = (_QWORD *)swift_task_alloc();
  v0[27] = v1;
  *v1 = v0;
  v1[1] = sub_23B5DF160;
  return v3(v0[15], v0[16], 0, 0, 1);
}

uint64_t sub_23B5DF160()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 208);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 192);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 200);
  *(_QWORD *)(*(_QWORD *)v1 + 224) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  return swift_task_switch();
}

uint64_t sub_23B5DF1E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  os_log_type_t type;
  uint64_t v34;
  uint64_t v35[2];

  v1 = *(_QWORD *)(v0 + 224);
  sub_23B601AE4();
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v2 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 136) + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_discovered;
    swift_beginAccess();
    v4 = *(_QWORD *)v3;
    if (*(_QWORD *)(*(_QWORD *)v3 + 16))
    {
      v5 = *(_QWORD *)(v0 + 144);
      swift_bridgeObjectRetain();
      v6 = sub_23B58ED88(v5);
      if ((v7 & 1) != 0)
      {
        v8 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v6);
        swift_retain();
        swift_bridgeObjectRelease();
        if (qword_2542FD398 != -1)
          swift_once();
        v9 = sub_23B60185C();
        __swift_project_value_buffer(v9, (uint64_t)qword_2542FD380);
        swift_retain_n();
        v10 = sub_23B601844();
        v11 = sub_23B601B8C();
        if (os_log_type_enabled(v10, v11))
        {
          v12 = swift_slowAlloc();
          v34 = swift_slowAlloc();
          v35[0] = v34;
          *(_DWORD *)v12 = 136315394;
          swift_retain();
          type = v11;
          v13 = sub_23B598B88();
          v15 = v14;
          swift_release();
          *(_QWORD *)(v0 + 104) = sub_23B58E160(v13, v15, v35);
          sub_23B601BC8();
          swift_bridgeObjectRelease();
          swift_release_n();
          *(_WORD *)(v12 + 12) = 2080;
          v16 = sub_23B601F64();
          *(_QWORD *)(v0 + 112) = sub_23B58E160(v16, v17, v35);
          sub_23B601BC8();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_23B583000, v10, type, "Garbage collecting %s after %s", (uint8_t *)v12, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x23B868A2C](v34, -1, -1);
          MEMORY[0x23B868A2C](v12, -1, -1);
        }
        else
        {
          swift_release_n();
        }

        v18 = *(_QWORD *)(v0 + 176);
        v19 = *(_QWORD *)(v0 + 152);
        v20 = *(_QWORD *)(v0 + 160);
        v22 = *(_QWORD *)(v0 + 136);
        v21 = *(_QWORD *)(v0 + 144);
        swift_beginAccess();
        sub_23B5E2590(v21, (void (*)(void))sub_23B5B5020);
        swift_endAccess();
        swift_release();
        v23 = v22 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_scanContinuation;
        swift_beginAccess();
        sub_23B5A3C5C(v23, v18, (uint64_t *)&unk_256A35990);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
        {
          v24 = *(_QWORD *)(v0 + 176);
          swift_release();
          sub_23B587ED4(v24, (uint64_t *)&unk_256A35990);
          v25 = 1;
        }
        else
        {
          v26 = *(_QWORD *)(v0 + 176);
          v28 = *(_QWORD *)(v0 + 160);
          v27 = *(_QWORD *)(v0 + 168);
          v29 = *(_QWORD *)(v0 + 152);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v27, v26, v29);
          sub_23B587ED4(v26, (uint64_t *)&unk_256A35990);
          *(_QWORD *)(v0 + 88) = v8;
          *(_BYTE *)(v0 + 96) = 1;
          sub_23B601B14();
          (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v29);
          v25 = 0;
        }
        v30 = *(_QWORD *)(v0 + 184);
        v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A35DD0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v30, v25, 1, v31);
        sub_23B587ED4(v30, &qword_256A35DC0);
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v2 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v2();
}

uint64_t sub_23B5DF654()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5DF6B0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[7] = a1;
  v2[8] = v1;
  v3 = sub_23B601820();
  v2[9] = v3;
  v2[10] = *(_QWORD *)(v3 - 8);
  v2[11] = swift_task_alloc();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  v2[12] = v4;
  v2[13] = *(_QWORD *)(v4 - 8);
  v2[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5DF73C()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void *v13;
  uint64_t v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint8_t *v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t (__cdecl *v28)();
  uint64_t v29;
  uint64_t v30;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = objc_msgSend(*(id *)(v0 + 56), sel_identifier);
  sub_23B6017FC();

  type metadata accessor for Peripheral();
  sub_23B6015D4();
  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_connected);
  swift_beginAccess();
  v4 = *v3;
  if (*(_QWORD *)(*v3 + 16))
  {
    v5 = *(_QWORD *)(v0 + 112);
    swift_bridgeObjectRetain();
    v6 = sub_23B58ED88(v5);
    if ((v7 & 1) != 0)
    {
      v9 = *(_QWORD *)(v0 + 104);
      v8 = *(_QWORD *)(v0 + 112);
      v10 = *(_QWORD *)(v0 + 96);
      *(_QWORD *)(v0 + 120) = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v6);
      swift_retain();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
      v28 = (uint64_t (__cdecl *)())((char *)&dword_256A35D90 + dword_256A35D90);
      v11 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 128) = v11;
      *v11 = v0;
      v11[1] = sub_23B5DFA9C;
      return v28();
    }
    swift_bridgeObjectRelease();
  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 96));
  if (qword_2542FD398 != -1)
    swift_once();
  v13 = *(void **)(v0 + 56);
  v14 = sub_23B60185C();
  __swift_project_value_buffer(v14, (uint64_t)qword_2542FD380);
  v15 = v13;
  v16 = sub_23B601844();
  v17 = sub_23B601B74();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = *(_QWORD *)(v0 + 88);
    v27 = *(_QWORD *)(v0 + 80);
    v19 = *(_QWORD *)(v0 + 72);
    v20 = *(void **)(v0 + 56);
    v21 = (uint8_t *)swift_slowAlloc();
    v29 = swift_slowAlloc();
    v30 = v29;
    *(_DWORD *)v21 = 136315138;
    v22 = objc_msgSend(v20, sel_identifier);
    sub_23B6017FC();

    sub_23B5884D4((unint64_t *)&qword_256A347A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v23 = sub_23B601DE4();
    v25 = v24;
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v18, v19);
    *(_QWORD *)(v0 + 40) = sub_23B58E160(v23, v25, &v30);
    sub_23B601BC8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23B583000, v16, v17, "Unable to find Peripheral for %s", v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v29, -1, -1);
    MEMORY[0x23B868A2C](v21, -1, -1);
  }
  else
  {
    v26 = *(void **)(v0 + 56);

  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5DFA9C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 136) = a1;
  *(_QWORD *)(v3 + 144) = a2;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B5DFAFC()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  unint64_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;

  if (qword_256A340C8 != -1)
    swift_once();
  v1 = sub_23B60185C();
  __swift_project_value_buffer(v1, (uint64_t)qword_256A35958);
  swift_bridgeObjectRetain();
  v2 = sub_23B601844();
  v3 = sub_23B601B8C();
  v4 = os_log_type_enabled(v2, v3);
  v5 = v0[18];
  if (v4)
  {
    v6 = v0[17];
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v11 = v8;
    *(_DWORD *)v7 = 136315138;
    swift_bridgeObjectRetain();
    v0[6] = sub_23B58E160(v6, v5, &v11);
    sub_23B601BC8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23B583000, v2, v3, "didConnect: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v8, -1, -1);
    MEMORY[0x23B868A2C](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v9 = (_QWORD *)swift_task_alloc();
  v0[19] = v9;
  *v9 = v0;
  v9[1] = sub_23B5DFCC8;
  return sub_23B5998C8();
}

uint64_t sub_23B5DFCC8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B5DFD20()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5DFD64(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[13] = a2;
  v3[14] = v2;
  v3[12] = a1;
  v4 = sub_23B601820();
  v3[15] = v4;
  v3[16] = *(_QWORD *)(v4 - 8);
  v3[17] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  v3[18] = v5;
  v3[19] = *(_QWORD *)(v5 - 8);
  v3[20] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5DFDF4()
{
  uint64_t v0;
  id *v1;
  uint64_t v2;
  id v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  id v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint8_t *v35;
  id v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  id v40;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  NSObject *log;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v1 = (id *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = objc_msgSend(*(id *)(v0 + 96), sel_identifier);
  sub_23B6017FC();

  type metadata accessor for Peripheral();
  sub_23B6015D4();
  v4 = (uint64_t *)(v2 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_connected);
  swift_beginAccess();
  v5 = *v4;
  if (*(_QWORD *)(*v4 + 16))
  {
    v6 = *(_QWORD *)(v0 + 160);
    swift_bridgeObjectRetain();
    v7 = sub_23B58ED88(v6);
    if ((v8 & 1) != 0)
    {
      v10 = *(_QWORD *)(v0 + 152);
      v9 = *(_QWORD *)(v0 + 160);
      v11 = *(_QWORD *)(v0 + 144);
      v12 = *(_QWORD *)(v0 + 104);
      v13 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v7);
      *(_QWORD *)(v0 + 168) = v13;
      swift_retain();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
      if (v12)
      {
        v14 = *(void **)(v0 + 104);
        v15 = v14;
        if (qword_256A340C8 != -1)
          swift_once();
        v16 = sub_23B60185C();
        __swift_project_value_buffer(v16, (uint64_t)qword_256A35958);
        swift_retain();
        v17 = v14;
        swift_retain();
        v18 = v14;
        v19 = sub_23B601844();
        v20 = sub_23B601B74();
        if (os_log_type_enabled(v19, v20))
        {
          v21 = swift_slowAlloc();
          v52 = (_QWORD *)swift_slowAlloc();
          v54 = swift_slowAlloc();
          v57 = v54;
          *(_DWORD *)v21 = 136315394;
          swift_retain();
          log = v19;
          v22 = sub_23B598B88();
          v24 = v23;
          swift_release();
          *(_QWORD *)(v0 + 80) = sub_23B58E160(v22, v24, &v57);
          sub_23B601BC8();
          swift_bridgeObjectRelease();
          swift_release_n();
          *(_WORD *)(v21 + 12) = 2112;
          v25 = v14;
          v26 = _swift_stdlib_bridgeErrorToNSError();
          *(_QWORD *)(v0 + 88) = v26;
          sub_23B601BC8();
          *v52 = v26;

          _os_log_impl(&dword_23B583000, log, v20, "didFailToConnect: %s ERROR: %@", (uint8_t *)v21, 0x16u);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35D50);
          swift_arrayDestroy();
          MEMORY[0x23B868A2C](v52, -1, -1);
          swift_arrayDestroy();
          MEMORY[0x23B868A2C](v54, -1, -1);
          MEMORY[0x23B868A2C](v21, -1, -1);

        }
        else
        {

          swift_release_n();
        }
      }
      else
      {
        if (qword_256A340C8 != -1)
          swift_once();
        v42 = sub_23B60185C();
        __swift_project_value_buffer(v42, (uint64_t)qword_256A35958);
        swift_retain_n();
        v43 = sub_23B601844();
        v44 = sub_23B601B74();
        if (os_log_type_enabled(v43, v44))
        {
          v45 = (uint8_t *)swift_slowAlloc();
          v55 = swift_slowAlloc();
          v57 = v55;
          *(_DWORD *)v45 = 136315138;
          swift_retain();
          v46 = sub_23B598B88();
          v48 = v47;
          swift_release();
          *(_QWORD *)(v0 + 72) = sub_23B58E160(v46, v48, &v57);
          sub_23B601BC8();
          swift_bridgeObjectRelease();
          swift_release_n();
          _os_log_impl(&dword_23B583000, v43, v44, "didFailToConnect: %s", v45, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x23B868A2C](v55, -1, -1);
          MEMORY[0x23B868A2C](v45, -1, -1);
        }
        else
        {
          swift_release_n();
        }

      }
      v49 = v13 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_id;
      swift_beginAccess();
      sub_23B5E2590(v49, (void (*)(void))sub_23B5B5020);
      swift_endAccess();
      swift_release();
      v50 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 176) = v50;
      *v50 = v0;
      v50[1] = sub_23B5E058C;
      return sub_23B599CA4(*(_QWORD *)(v0 + 104));
    }
    swift_bridgeObjectRelease();
  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 152) + 8))(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 144));
  if (qword_2542FD398 != -1)
    swift_once();
  v27 = *v1;
  v28 = sub_23B60185C();
  __swift_project_value_buffer(v28, (uint64_t)qword_2542FD380);
  v29 = v27;
  v30 = sub_23B601844();
  v31 = sub_23B601B74();
  if (os_log_type_enabled(v30, v31))
  {
    v32 = *(_QWORD *)(v0 + 136);
    v53 = *(_QWORD *)(v0 + 128);
    v33 = *(_QWORD *)(v0 + 120);
    v34 = *(void **)(v0 + 96);
    v35 = (uint8_t *)swift_slowAlloc();
    v56 = swift_slowAlloc();
    v57 = v56;
    *(_DWORD *)v35 = 136315138;
    v36 = objc_msgSend(v34, sel_identifier);
    sub_23B6017FC();

    sub_23B5884D4((unint64_t *)&qword_256A347A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v37 = sub_23B601DE4();
    v39 = v38;
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v32, v33);
    *(_QWORD *)(v0 + 64) = sub_23B58E160(v37, v39, &v57);
    sub_23B601BC8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23B583000, v30, v31, "Unable to find Peripheral for %s", v35, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v56, -1, -1);
    MEMORY[0x23B868A2C](v35, -1, -1);
  }
  else
  {
    v40 = *v1;

  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5E058C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B5E05E4()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5E0628(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  v4 = sub_23B601820();
  v3[18] = v4;
  v3[19] = *(_QWORD *)(v4 - 8);
  v3[20] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  v3[21] = v5;
  v3[22] = *(_QWORD *)(v5 - 8);
  v3[23] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5E06B8()
{
  uint64_t v0;
  id *v1;
  uint64_t v2;
  id v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  id v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint8_t *v35;
  id v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  id v40;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  NSObject *log;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v1 = (id *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = objc_msgSend(*(id *)(v0 + 120), sel_identifier);
  sub_23B6017FC();

  type metadata accessor for Peripheral();
  sub_23B6015D4();
  v4 = (uint64_t *)(v2 + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_connected);
  swift_beginAccess();
  v5 = *v4;
  if (*(_QWORD *)(*v4 + 16))
  {
    v6 = *(_QWORD *)(v0 + 184);
    swift_bridgeObjectRetain();
    v7 = sub_23B58ED88(v6);
    if ((v8 & 1) != 0)
    {
      v10 = *(_QWORD *)(v0 + 176);
      v9 = *(_QWORD *)(v0 + 184);
      v11 = *(_QWORD *)(v0 + 168);
      v12 = *(_QWORD *)(v0 + 128);
      v13 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v7);
      *(_QWORD *)(v0 + 192) = v13;
      swift_retain();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
      if (v12)
      {
        v14 = *(void **)(v0 + 128);
        v15 = v14;
        if (qword_256A340C8 != -1)
          swift_once();
        v16 = sub_23B60185C();
        __swift_project_value_buffer(v16, (uint64_t)qword_256A35958);
        swift_retain();
        v17 = v14;
        swift_retain();
        v18 = v14;
        v19 = sub_23B601844();
        v20 = sub_23B601B8C();
        if (os_log_type_enabled(v19, v20))
        {
          v21 = swift_slowAlloc();
          v52 = (_QWORD *)swift_slowAlloc();
          v54 = swift_slowAlloc();
          v57 = v54;
          *(_DWORD *)v21 = 136315394;
          swift_retain();
          log = v19;
          v22 = sub_23B598B88();
          v24 = v23;
          swift_release();
          *(_QWORD *)(v0 + 104) = sub_23B58E160(v22, v24, &v57);
          sub_23B601BC8();
          swift_bridgeObjectRelease();
          swift_release_n();
          *(_WORD *)(v21 + 12) = 2112;
          v25 = v14;
          v26 = _swift_stdlib_bridgeErrorToNSError();
          *(_QWORD *)(v0 + 112) = v26;
          sub_23B601BC8();
          *v52 = v26;

          _os_log_impl(&dword_23B583000, log, v20, "didDisconnectPeripheral: %s, ERROR: %@", (uint8_t *)v21, 0x16u);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35D50);
          swift_arrayDestroy();
          MEMORY[0x23B868A2C](v52, -1, -1);
          swift_arrayDestroy();
          MEMORY[0x23B868A2C](v54, -1, -1);
          MEMORY[0x23B868A2C](v21, -1, -1);

        }
        else
        {

          swift_release_n();
        }
      }
      else
      {
        if (qword_256A340C8 != -1)
          swift_once();
        v42 = sub_23B60185C();
        __swift_project_value_buffer(v42, (uint64_t)qword_256A35958);
        swift_retain_n();
        v43 = sub_23B601844();
        v44 = sub_23B601B8C();
        if (os_log_type_enabled(v43, v44))
        {
          v45 = (uint8_t *)swift_slowAlloc();
          v55 = swift_slowAlloc();
          v57 = v55;
          *(_DWORD *)v45 = 136315138;
          swift_retain();
          v46 = sub_23B598B88();
          v48 = v47;
          swift_release();
          *(_QWORD *)(v0 + 96) = sub_23B58E160(v46, v48, &v57);
          sub_23B601BC8();
          swift_bridgeObjectRelease();
          swift_release_n();
          _os_log_impl(&dword_23B583000, v43, v44, "didDisconnectPeripheral: %s", v45, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x23B868A2C](v55, -1, -1);
          MEMORY[0x23B868A2C](v45, -1, -1);
        }
        else
        {
          swift_release_n();
        }

      }
      v49 = v13 + OBJC_IVAR____TtC15FindMyBluetooth10Peripheral_id;
      swift_beginAccess();
      sub_23B5E2590(v49, (void (*)(void))sub_23B5B5020);
      swift_endAccess();
      swift_release();
      swift_beginAccess();
      sub_23B5E2590(v49, (void (*)(void))sub_23B5B5020);
      swift_endAccess();
      swift_release();
      v50 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 200) = v50;
      *v50 = v0;
      v50[1] = sub_23B5E0E94;
      return sub_23B598D24();
    }
    swift_bridgeObjectRelease();
  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 176) + 8))(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 168));
  if (qword_2542FD398 != -1)
    swift_once();
  v27 = *v1;
  v28 = sub_23B60185C();
  __swift_project_value_buffer(v28, (uint64_t)qword_2542FD380);
  v29 = v27;
  v30 = sub_23B601844();
  v31 = sub_23B601B74();
  if (os_log_type_enabled(v30, v31))
  {
    v32 = *(_QWORD *)(v0 + 160);
    v53 = *(_QWORD *)(v0 + 152);
    v33 = *(_QWORD *)(v0 + 144);
    v34 = *(void **)(v0 + 120);
    v35 = (uint8_t *)swift_slowAlloc();
    v56 = swift_slowAlloc();
    v57 = v56;
    *(_DWORD *)v35 = 136315138;
    v36 = objc_msgSend(v34, sel_identifier);
    sub_23B6017FC();

    sub_23B5884D4((unint64_t *)&qword_256A347A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v37 = sub_23B601DE4();
    v39 = v38;
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v32, v33);
    *(_QWORD *)(v0 + 88) = sub_23B58E160(v37, v39, &v57);
    sub_23B601BC8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23B583000, v30, v31, "Unable to find Peripheral for %s", v35, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v56, -1, -1);
    MEMORY[0x23B868A2C](v35, -1, -1);
  }
  else
  {
    v40 = *v1;

  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5E0E94()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *v0;
  v2 = *v0;
  swift_task_dealloc();
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 208) = v3;
  *v3 = v2;
  v3[1] = sub_23B5E0F00;
  return sub_23B59A298(*(_QWORD *)(v1 + 128));
}

uint64_t sub_23B5E0F00()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B5E0F58()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5E0F9C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  v3[8] = *v2;
  sub_23B601820();
  v3[9] = swift_task_alloc();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  v3[10] = v4;
  v3[11] = *(_QWORD *)(v4 - 8);
  v3[12] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD568);
  v3[13] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD558);
  v3[14] = v5;
  v3[15] = *(_QWORD *)(v5 - 8);
  v3[16] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5E107C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 56) + OBJC_IVAR____TtC15FindMyBluetooth14CentralManager_connectionEventsStreamContinuation;
  swift_beginAccess();
  sub_23B5A3C5C(v4, v3, (uint64_t *)&unk_2542FD568);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_23B587ED4(*(_QWORD *)(v0 + 104), (uint64_t *)&unk_2542FD568);
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 120);
    v5 = *(_QWORD *)(v0 + 128);
    v7 = *(_QWORD *)(v0 + 112);
    v8 = *(_QWORD *)(v0 + 96);
    v15 = *(_QWORD *)(v0 + 88);
    v16 = *(_QWORD *)(v0 + 80);
    v9 = *(_QWORD *)(v0 + 64);
    v11 = *(_QWORD *)(v0 + 40);
    v10 = *(void **)(v0 + 48);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 32))(v5, *(_QWORD *)(v0 + 104), v7);
    v12 = objc_msgSend(v10, sel_identifier);
    sub_23B6017FC();

    type metadata accessor for Peripheral();
    sub_23B6015D4();
    sub_23B601658();
    v13 = (_QWORD *)swift_task_alloc();
    v13[2] = v11;
    v13[3] = v8;
    v13[4] = v5;
    v13[5] = v9;
    sub_23B601640();
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v8, v16);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23B5E1240(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  unint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  unint64_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  char *v45;
  uint8_t *v46;
  uint8_t *v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v57 = a1;
  v58 = a3;
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD218);
  MEMORY[0x24BDAC7A8](v53);
  v8 = (uint8_t **)((char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v52 = type metadata accessor for CentralManager.ConnectedState(0);
  MEMORY[0x24BDAC7A8](v52);
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35D20);
  v55 = *(_QWORD *)(v11 - 8);
  v56 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v54 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v46 - v18;
  if (a2 == 1)
  {
    v51 = a4;
    if (qword_2542FD398 != -1)
      swift_once();
    v29 = sub_23B60185C();
    __swift_project_value_buffer(v29, (uint64_t)qword_2542FD380);
    v49 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
    v49(v17, v58, v13);
    v30 = sub_23B601844();
    v31 = sub_23B601B68();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      v48 = swift_slowAlloc();
      v60 = v48;
      v50 = v4;
      *(_DWORD *)v32 = 136446210;
      v46 = v32 + 4;
      v47 = v32;
      sub_23B58F61C(&qword_256A34AD0, &qword_256A359A0, MEMORY[0x24BE316E8]);
      v33 = sub_23B601DE4();
      v59 = sub_23B58E160(v33, v34, &v60);
      sub_23B601BC8();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
      v35 = v47;
      _os_log_impl(&dword_23B583000, v30, v31, "Yielding connection event for %{public}s", v47, 0xCu);
      v36 = v48;
      swift_arrayDestroy();
      MEMORY[0x23B868A2C](v36, -1, -1);
      MEMORY[0x23B868A2C](v35, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
    }

    v49(v10, v58, v13);
    goto LABEL_20;
  }
  if (!a2)
  {
    v50 = v4;
    v51 = a4;
    if (qword_2542FD398 != -1)
      swift_once();
    v20 = sub_23B60185C();
    __swift_project_value_buffer(v20, (uint64_t)qword_2542FD380);
    v21 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
    v21(v19, v58, v13);
    v22 = sub_23B601844();
    v23 = sub_23B601B68();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      v48 = swift_slowAlloc();
      v60 = v48;
      v49 = v21;
      *(_DWORD *)v24 = 136446210;
      v46 = v24 + 4;
      v47 = v24;
      sub_23B58F61C(&qword_256A34AD0, &qword_256A359A0, MEMORY[0x24BE316E8]);
      v25 = sub_23B601DE4();
      v59 = sub_23B58E160(v25, v26, &v60);
      v21 = v49;
      sub_23B601BC8();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
      v27 = v47;
      _os_log_impl(&dword_23B583000, v22, v23, "Yielding disconnection event for %{public}s", v47, 0xCu);
      v28 = v48;
      swift_arrayDestroy();
      MEMORY[0x23B868A2C](v28, -1, -1);
      MEMORY[0x23B868A2C](v27, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
    }

    v21(v10, v58, v13);
LABEL_20:
    swift_storeEnumTagMultiPayload();
    v44 = (uint64_t)v8 + *(int *)(v53 + 48);
    *v8 = v57;
    sub_23B5E512C((uint64_t)v10, v44);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD558);
    v45 = v54;
    sub_23B601A9C();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v45, v56);
    return;
  }
  if (qword_256A340C8 != -1)
    swift_once();
  v37 = sub_23B60185C();
  __swift_project_value_buffer(v37, (uint64_t)qword_256A35958);
  v38 = sub_23B601844();
  v39 = sub_23B601B80();
  if (os_log_type_enabled(v38, v39))
  {
    v40 = (uint8_t *)swift_slowAlloc();
    v41 = swift_slowAlloc();
    v60 = v41;
    *(_DWORD *)v40 = 136315138;
    v59 = a2;
    type metadata accessor for CBConnectionEvent(0);
    v42 = sub_23B601928();
    v59 = sub_23B58E160(v42, v43, &v60);
    sub_23B601BC8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B583000, v38, v39, "Unhandled CBConnectionEvent: %s", v40, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v41, -1, -1);
    MEMORY[0x23B868A2C](v40, -1, -1);
  }

}

uint64_t sub_23B5E18F0(void *a1)
{
  return sub_23B5E4C14(a1, (uint64_t)&unk_250C82708, (uint64_t)&unk_256A35CC0);
}

uint64_t sub_23B5E1904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[3] = a4;
  v5[4] = a5;
  v5[2] = a1;
  return swift_task_switch();
}

uint64_t sub_23B5E1920()
{
  uint64_t v0;
  uint64_t Strong;
  id v2;
  _QWORD *v3;

  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 40) = Strong;
  if (Strong)
  {
    v2 = objc_msgSend(*(id *)(v0 + 32), sel_state);
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 48) = v3;
    *v3 = v0;
    v3[1] = sub_23B5E19BC;
    return sub_23B5DC08C((uint64_t)v2);
  }
  else
  {
    **(_BYTE **)(v0 + 16) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23B5E19BC()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23B5E1A5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[5] = a6;
  v7[6] = a7;
  v7[3] = a4;
  v7[4] = a5;
  v7[2] = a1;
  return swift_task_switch();
}

uint64_t sub_23B5E1A7C()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  _QWORD *v8;
  uint64_t v9;

  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 56) = Strong;
  if (Strong)
  {
    if (*(_QWORD *)(sub_23B5CD4D0(*(_QWORD *)(v0 + 40)) + 16))
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD620);
      v2 = sub_23B601D48();
    }
    else
    {
      v2 = MEMORY[0x24BEE4B00];
    }
    v9 = v2;
    v4 = swift_bridgeObjectRetain();
    sub_23B5E30B4(v4, 1, &v9);
    v5 = *(void **)(v0 + 48);
    swift_bridgeObjectRelease();
    v6 = v9;
    *(_QWORD *)(v0 + 64) = v9;
    v7 = objc_msgSend(v5, sel_integerValue);
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 72) = v8;
    *v8 = v0;
    v8[1] = sub_23B5E1BE0;
    return sub_23B5DD60C(*(_QWORD *)(v0 + 32), v6, (uint64_t)v7);
  }
  else
  {
    **(_BYTE **)(v0 + 16) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23B5E1BE0()
{
  swift_task_dealloc();
  swift_release();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23B5E1CF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[3] = a4;
  v5[4] = a5;
  v5[2] = a1;
  return swift_task_switch();
}

uint64_t sub_23B5E1D14()
{
  uint64_t v0;
  uint64_t Strong;
  _QWORD *v2;

  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 40) = Strong;
  if (Strong)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 48) = v2;
    *v2 = v0;
    v2[1] = sub_23B5A1A80;
    return sub_23B5DF6B0(*(_QWORD *)(v0 + 32));
  }
  else
  {
    **(_BYTE **)(v0 + 16) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23B5E1E04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[4] = a5;
  v6[5] = a6;
  v6[2] = a1;
  v6[3] = a4;
  return swift_task_switch();
}

uint64_t sub_23B5E1E20()
{
  uint64_t v0;
  uint64_t Strong;
  _QWORD *v2;

  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 48) = Strong;
  if (Strong)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 56) = v2;
    *v2 = v0;
    v2[1] = sub_23B5A0D84;
    return sub_23B5DFD64(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  }
  else
  {
    **(_BYTE **)(v0 + 16) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23B5E1EC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[4] = a5;
  v6[5] = a6;
  v6[2] = a1;
  v6[3] = a4;
  return swift_task_switch();
}

uint64_t sub_23B5E1EDC()
{
  uint64_t v0;
  uint64_t Strong;
  _QWORD *v2;

  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 48) = Strong;
  if (Strong)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 56) = v2;
    *v2 = v0;
    v2[1] = sub_23B5A11FC;
    return sub_23B5E0628(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  }
  else
  {
    **(_BYTE **)(v0 + 16) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

void sub_23B5E1F7C(void *a1, uint64_t a2, void *a3, void *a4, void *a5, uint64_t a6, uint64_t a7)
{
  id v12;
  id v13;
  id v14;
  id v15;

  v15 = a3;
  v12 = a4;
  v13 = a1;
  v14 = a5;
  sub_23B5E4D7C(v12, a5, a6, a7);

}

uint64_t sub_23B5E2008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[4] = a5;
  v6[5] = a6;
  v6[2] = a1;
  v6[3] = a4;
  return swift_task_switch();
}

uint64_t sub_23B5E2024()
{
  uint64_t v0;
  uint64_t Strong;
  _QWORD *v2;

  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 48) = Strong;
  if (Strong)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 56) = v2;
    *v2 = v0;
    v2[1] = sub_23B5A11FC;
    return sub_23B5E0F9C(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  }
  else
  {
    **(_BYTE **)(v0 + 16) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

id sub_23B5E2144()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DelegateTrampoline_CBCentralManagerPrivateDelegate();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_23B5E21B0()
{
  swift_weakDestroy();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

void sub_23B5E21D4()
{
  qword_2542FE088 = 10;
}

FindMyBluetooth::CentralManager::State_optional __swiftcall CentralManager.State.init(rawValue:)(Swift::Int rawValue)
{
  _BYTE *v1;

  if ((unint64_t)rawValue > 0xA)
    *v1 = 7;
  else
    *v1 = byte_23B608AE6[rawValue];
  return (FindMyBluetooth::CentralManager::State_optional)rawValue;
}

uint64_t CentralManager.State.rawValue.getter()
{
  char *v0;

  return qword_23B608AF8[*v0];
}

BOOL sub_23B5E2220(char *a1, char *a2)
{
  return qword_23B608AF8[*a1] == qword_23B608AF8[*a2];
}

uint64_t sub_23B5E2244()
{
  sub_23B601E8C();
  sub_23B601E98();
  return sub_23B601EB0();
}

uint64_t sub_23B5E2290()
{
  return sub_23B601E98();
}

uint64_t sub_23B5E22C4()
{
  sub_23B601E8C();
  sub_23B601E98();
  return sub_23B601EB0();
}

FindMyBluetooth::CentralManager::State_optional sub_23B5E230C(Swift::Int *a1)
{
  return CentralManager.State.init(rawValue:)(*a1);
}

void sub_23B5E2314(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_23B608AF8[*v1];
}

unint64_t static Logger.subsystem.getter()
{
  return 0xD00000000000002ALL;
}

uint64_t sub_23B5E2348(uint64_t a1)
{
  return sub_23B5E23B4(a1, qword_2542FD480);
}

uint64_t static Logger.centralManager.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23B5E2444(&qword_2542FD4A0, (uint64_t)qword_2542FD480, a1);
}

uint64_t sub_23B5E2390(uint64_t a1)
{
  return sub_23B5E23B4(a1, qword_256A35958);
}

uint64_t sub_23B5E23B4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_23B60185C();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_23B601850();
}

uint64_t static Logger.cbDelegate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23B5E2444(&qword_256A340C8, (uint64_t)qword_256A35958, a1);
}

uint64_t sub_23B5E2444@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_23B60185C();
  v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

uint64_t sub_23B5E24AC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_23B58ED1C(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v2;
  v12 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_23B5B4C0C();
    v7 = v12;
  }
  v8 = *(_QWORD *)(v7 + 48);
  v9 = sub_23B601820();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * v4, v9);
  v10 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v4);
  sub_23B5E2898(v4, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_23B5E2584(uint64_t a1)
{
  return sub_23B5E2590(a1, (void (*)(void))sub_23B5B5040);
}

uint64_t sub_23B5E2590(uint64_t a1, void (*a2)(void))
{
  uint64_t *v2;
  uint64_t *v4;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v4 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_23B58ED88(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v4;
  v14 = *v4;
  *v4 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    a2();
    v9 = v14;
  }
  v10 = *(_QWORD *)(v9 + 48);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, v11);
  v12 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v6);
  sub_23B5E2B38(v6, v9);
  *v4 = v9;
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_23B5E2678@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_23B58ED1C(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v17 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_23B5B5668();
      v9 = v17;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = sub_23B601820();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, v11);
    v12 = *(_QWORD *)(v9 + 56);
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD580);
    v14 = *(_QWORD *)(v13 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v14 + 32))(a2, v12 + *(_QWORD *)(v14 + 72) * v6, v13);
    sub_23B5E2DDC(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a2, 0, 1, v13);
  }
  else
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD580);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a2, 1, 1, v16);
  }
}

uint64_t sub_23B5E27BC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_23B58ED88(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v2;
  v12 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_23B5B594C();
    v7 = v12;
  }
  v8 = *(_QWORD *)(v7 + 48);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * v4, v9);
  v10 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v4);
  sub_23B5E2B38(v4, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

unint64_t sub_23B5E2898(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, unint64_t, uint64_t);
  unint64_t v34;
  uint64_t v35;

  v4 = sub_23B601820();
  v35 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = sub_23B601BF8();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v34 = (result + 1) & v11;
      v12 = *(_QWORD *)(v35 + 72);
      v33 = *(void (**)(char *, unint64_t, uint64_t))(v35 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v33(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        sub_23B5884D4(&qword_2542FD220, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
        v18 = sub_23B6018C8();
        result = (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v7, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v34)
        {
          if (v19 >= v34 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v22 = *(_QWORD *)(a2 + 48);
            result = v22 + v15 * a1;
            v8 = v14;
            if (v15 * a1 < v16 || (v12 = v15, result >= v22 + v16 + v15))
            {
              result = swift_arrayInitWithTakeFrontToBack();
LABEL_21:
              v13 = v17;
              v12 = v15;
            }
            else if (v15 * a1 != v16)
            {
              result = swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            v23 = *(_QWORD *)(a2 + 56);
            v24 = (_QWORD *)(v23 + 8 * a1);
            v25 = (_QWORD *)(v23 + 8 * v10);
            if (a1 != v10 || (a1 = v10, v24 >= v25 + 1))
            {
              *v24 = *v25;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v34 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v8 = v14;
        v12 = v15;
LABEL_5:
        v10 = (v10 + 1) & v13;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v26 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v27 = *v26;
    v28 = (-1 << a1) - 1;
  }
  else
  {
    v26 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v28 = *v26;
    v27 = (-1 << a1) - 1;
  }
  *v26 = v28 & v27;
  v29 = *(_QWORD *)(a2 + 16);
  v30 = __OFSUB__(v29, 1);
  v31 = v29 - 1;
  if (v30)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v31;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_23B5E2B38(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, unint64_t, uint64_t);
  unint64_t v34;
  uint64_t v35;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  v35 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = sub_23B601BF8();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v34 = (result + 1) & v11;
      v12 = *(_QWORD *)(v35 + 72);
      v33 = *(void (**)(char *, unint64_t, uint64_t))(v35 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v33(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        sub_23B58F61C(&qword_256A34640, &qword_256A359A0, MEMORY[0x24BE316D0]);
        v18 = sub_23B6018C8();
        result = (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v7, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v34)
        {
          if (v19 >= v34 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v22 = *(_QWORD *)(a2 + 48);
            result = v22 + v15 * a1;
            v8 = v14;
            if (v15 * a1 < v16 || (v12 = v15, result >= v22 + v16 + v15))
            {
              result = swift_arrayInitWithTakeFrontToBack();
LABEL_21:
              v13 = v17;
              v12 = v15;
            }
            else if (v15 * a1 != v16)
            {
              result = swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            v23 = *(_QWORD *)(a2 + 56);
            v24 = (_QWORD *)(v23 + 8 * a1);
            v25 = (_QWORD *)(v23 + 8 * v10);
            if (a1 != v10 || (a1 = v10, v24 >= v25 + 1))
            {
              *v24 = *v25;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v34 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v8 = v14;
        v12 = v15;
LABEL_5:
        v10 = (v10 + 1) & v13;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v26 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v27 = *v26;
    v28 = (-1 << a1) - 1;
  }
  else
  {
    v26 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v28 = *v26;
    v27 = (-1 << a1) - 1;
  }
  *v26 = v28 & v27;
  v29 = *(_QWORD *)(a2 + 16);
  v30 = __OFSUB__(v29, 1);
  v31 = v29 - 1;
  if (v30)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v31;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_23B5E2DDC(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  int64_t v25;
  unint64_t v26;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, unint64_t, uint64_t);
  unint64_t v36;
  uint64_t v37;

  v4 = sub_23B601820();
  v37 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = sub_23B601BF8();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v36 = (result + 1) & v11;
      v12 = *(_QWORD *)(v37 + 72);
      v35 = *(void (**)(char *, unint64_t, uint64_t))(v37 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v35(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        sub_23B5884D4(&qword_2542FD220, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
        v18 = sub_23B6018C8();
        result = (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v7, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v36)
        {
          if (v19 >= v36 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v8 = v14;
            if (v15 * a1 < v16
              || *(_QWORD *)(a2 + 48) + v15 * a1 >= (unint64_t)(*(_QWORD *)(a2 + 48) + v16 + v15))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v22 = *(_QWORD *)(a2 + 56);
            v23 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2542FD580) - 8) + 72);
            v24 = v23 * a1;
            result = v22 + v23 * a1;
            v25 = v23 * v10;
            v26 = v22 + v23 * v10 + v23;
            if (v24 < v25 || result >= v26)
            {
              result = swift_arrayInitWithTakeFrontToBack();
              a1 = v10;
              v13 = v17;
            }
            else
            {
              a1 = v10;
              v13 = v17;
              if (v24 != v25)
              {
                result = swift_arrayInitWithTakeBackToFront();
                v13 = v17;
                a1 = v10;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v36 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v8 = v14;
LABEL_5:
        v10 = (v10 + 1) & v13;
        v12 = v15;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v28 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v29 = *v28;
    v30 = (-1 << a1) - 1;
  }
  else
  {
    v28 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v30 = *v28;
    v29 = (-1 << a1) - 1;
  }
  *v28 = v30 & v29;
  v31 = *(_QWORD *)(a2 + 16);
  v32 = __OFSUB__(v31, 1);
  v33 = v31 - 1;
  if (v32)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v33;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_23B5E30B4(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  void *v18;
  id v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  _BOOL8 v33;
  uint64_t v34;
  char v35;
  char v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  _OWORD v41[2];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _OWORD v46[2];
  id v47;

  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  sub_23B5A3C5C(a1 + 32, (uint64_t)&v44, &qword_256A34150);
  v7 = v44;
  v8 = v45;
  v42 = v44;
  v43 = v45;
  sub_23B5A39B0(v46, v41);
  v9 = (_QWORD *)*a3;
  v11 = sub_23B58ECB8(v7, v8);
  v12 = v9[2];
  v13 = (v10 & 1) == 0;
  v14 = v12 + v13;
  if (__OFADD__(v12, v13))
    goto LABEL_23;
  v15 = v10;
  if (v9[3] >= v14)
  {
    if ((a2 & 1) != 0)
    {
      if ((v10 & 1) != 0)
        goto LABEL_10;
    }
    else
    {
      sub_23B5B4E3C();
      if ((v15 & 1) != 0)
        goto LABEL_10;
    }
LABEL_13:
    v20 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    v21 = (uint64_t *)(v20[6] + 16 * v11);
    *v21 = v7;
    v21[1] = v8;
    sub_23B5A39B0(v41, (_OWORD *)(v20[7] + 32 * v11));
    v22 = v20[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v20[2] = v24;
    v25 = v4 - 1;
    if (!v25)
    {
LABEL_22:
      swift_bridgeObjectRelease_n();
      return;
    }
    v26 = a1 + 80;
    while (1)
    {
      sub_23B5A3C5C(v26, (uint64_t)&v44, &qword_256A34150);
      v27 = v44;
      v28 = v45;
      v42 = v44;
      v43 = v45;
      sub_23B5A39B0(v46, v41);
      v29 = (_QWORD *)*a3;
      v30 = sub_23B58ECB8(v27, v28);
      v32 = v29[2];
      v33 = (v31 & 1) == 0;
      v23 = __OFADD__(v32, v33);
      v34 = v32 + v33;
      if (v23)
        break;
      v35 = v31;
      if (v29[3] < v34)
      {
        sub_23B5B3118(v34, 1);
        v30 = sub_23B58ECB8(v27, v28);
        if ((v35 & 1) != (v36 & 1))
          goto LABEL_25;
      }
      if ((v35 & 1) != 0)
        goto LABEL_10;
      v37 = (_QWORD *)*a3;
      *(_QWORD *)(*a3 + 8 * (v30 >> 6) + 64) |= 1 << v30;
      v38 = (uint64_t *)(v37[6] + 16 * v30);
      *v38 = v27;
      v38[1] = v28;
      sub_23B5A39B0(v41, (_OWORD *)(v37[7] + 32 * v30));
      v39 = v37[2];
      v23 = __OFADD__(v39, 1);
      v40 = v39 + 1;
      if (v23)
        goto LABEL_24;
      v37[2] = v40;
      v26 += 48;
      if (!--v25)
        goto LABEL_22;
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_23B5B3118(v14, a2 & 1);
  v16 = sub_23B58ECB8(v7, v8);
  if ((v15 & 1) == (v17 & 1))
  {
    v11 = v16;
    if ((v15 & 1) == 0)
      goto LABEL_13;
LABEL_10:
    v18 = (void *)swift_allocError();
    swift_willThrow();
    v47 = v18;
    v19 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A34490);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v41);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_23B601E2C();
  __break(1u);
LABEL_26:
  sub_23B601C40();
  sub_23B601958();
  sub_23B601D00();
  sub_23B601958();
  sub_23B601D18();
  __break(1u);
}

_OWORD *sub_23B5E3484(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v10;
  _OWORD *result;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;

  v16 = sub_23B58F7DC(0, (unint64_t *)&unk_256A35E90);
  *(_QWORD *)&v15 = a4;
  a5[(a1 >> 6) + 8] |= 1 << a1;
  v10 = (_QWORD *)(a5[6] + 16 * a1);
  *v10 = a2;
  v10[1] = a3;
  result = sub_23B5A39B0(&v15, (_OWORD *)(a5[7] + 32 * a1));
  v12 = a5[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a5[2] = v14;
  return result;
}

uint64_t sub_23B5E3534(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 16) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = v2;
  v3[1] = sub_23B5E359C;
  return v5(v2 + 32);
}

uint64_t sub_23B5E359C()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_BYTE **)(*v0 + 16);
  v4 = *v0;
  swift_task_dealloc();
  *v2 = *(_BYTE *)(v1 + 32);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

_OWORD *sub_23B5E35EC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v10;
  _QWORD *v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  _OWORD *v20;
  _OWORD *result;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;

  v10 = sub_23B58F7DC(0, (unint64_t *)&unk_256A35E90);
  v29 = v10;
  *(_QWORD *)&v28 = a1;
  v11 = (_QWORD *)*a5;
  v13 = sub_23B58ECB8(a2, a3);
  v14 = v11[2];
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  v17 = v12;
  v18 = v11[3];
  if (v18 >= v16 && (a4 & 1) != 0)
  {
LABEL_7:
    v19 = (_QWORD *)*a5;
    if ((v17 & 1) != 0)
    {
LABEL_8:
      v20 = (_OWORD *)(v19[7] + 32 * v13);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
      return sub_23B5A39B0(&v28, v20);
    }
    goto LABEL_11;
  }
  if (v18 >= v16 && (a4 & 1) == 0)
  {
    sub_23B5B4E3C();
    goto LABEL_7;
  }
  sub_23B5B3118(v16, a4 & 1);
  v22 = sub_23B58ECB8(a2, a3);
  if ((v17 & 1) != (v23 & 1))
  {
LABEL_14:
    result = (_OWORD *)sub_23B601E2C();
    __break(1u);
    return result;
  }
  v13 = v22;
  v19 = (_QWORD *)*a5;
  if ((v17 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  v24 = __swift_mutable_project_boxed_opaque_existential_0((uint64_t)&v28, v10);
  MEMORY[0x24BDAC7A8](v24);
  v26 = (uint64_t *)((char *)&v28 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v27 + 16))(v26);
  sub_23B5E3484(v13, a2, a3, *v26, v19);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v28);
  return (_OWORD *)swift_bridgeObjectRetain();
}

unint64_t sub_23B5E379C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  unsigned __int8 v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t result;
  char v8;
  unint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  char v14;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A35E30);
  v3 = (_QWORD *)sub_23B601D48();
  v4 = *(_BYTE *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  result = sub_23B58EE84(v4);
  if ((v8 & 1) != 0)
  {
LABEL_7:
    __break(1u);
    return MEMORY[0x24BEE4B00];
  }
  v9 = (unint64_t *)(a1 + 72);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v3[6] + result) = v4;
    v10 = (uint64_t *)(v3[7] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    v11 = v3[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      break;
    v3[2] = v13;
    sub_23B5A294C(v5, v6);
    if (!--v1)
      return (unint64_t)v3;
    v4 = *((_BYTE *)v9 - 16);
    v5 = *(v9 - 1);
    v6 = *v9;
    result = sub_23B58EE84(v4);
    v9 += 3;
    if ((v14 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_23B5E389C()
{
  return swift_task_switch();
}

uint64_t sub_23B5E38B0()
{
  uint64_t v0;

  if (qword_256A340C0 != -1)
    swift_once();
  *(_QWORD *)(v0 + 32) = qword_256A35948;
  return swift_task_switch();
}

uint64_t sub_23B5E3914()
{
  uint64_t v0;
  _QWORD *v2;

  if (swift_weakLoadStrong())
    return (*(uint64_t (**)(void))(v0 + 8))();
  *(_QWORD *)(v0 + 16) = 2;
  *(_BYTE *)(v0 + 24) = 0;
  type metadata accessor for CentralManager(0);
  swift_allocObject();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v2;
  *v2 = v0;
  v2[1] = sub_23B5E39B4;
  return sub_23B5CFCBC(1, (uint64_t *)(v0 + 16));
}

uint64_t sub_23B5E39B4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B5E3A10()
{
  uint64_t v0;

  swift_weakAssign();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 48));
}

uint64_t type metadata accessor for CentralManager(uint64_t a1)
{
  return sub_23B5E47D4(a1, (uint64_t *)&unk_2542FCCD8);
}

uint64_t sub_23B5E3A64()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23B5E3A88(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  void *v25;
  id v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;

  v2 = sub_23B601820();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1F8);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)a1;
  LOBYTE(a1) = *(_BYTE *)(a1 + 8);
  v11 = sub_23B5CF09C(MEMORY[0x24BEE4AF8]);
  if ((a1 & 1) != 0)
  {
    v12 = sub_23B60191C();
    v14 = v13;
    LOBYTE(v35) = v10;
    sub_23B5F5E70();
    v15 = sub_23B601EBC();
    v36 = sub_23B58F7DC(0, (unint64_t *)&unk_256A35E90);
    *(_QWORD *)&v35 = v15;
    sub_23B5A39B0(&v35, &v33);
    LOBYTE(v15) = swift_isUniquelyReferenced_nonNull_native();
    v32 = v11;
    v16 = __swift_mutable_project_boxed_opaque_existential_0((uint64_t)&v33, v34);
    MEMORY[0x24BDAC7A8](v16);
    v18 = (uint64_t *)((char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v19 + 16))(v18);
    sub_23B5E35EC(*v18, v12, v14, v15, &v32);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v33);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v21 = *(_QWORD *)(v10 + 16);
    result = MEMORY[0x24BEE4AF8];
    if (v21)
    {
      v27 = v11;
      *(_QWORD *)&v35 = MEMORY[0x24BEE4AF8];
      v31 = v2;
      sub_23B601CAC();
      v22 = (void *)objc_opt_self();
      v29 = v3;
      v30 = v22;
      v23 = v10 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
      v28 = *(_QWORD *)(v7 + 72);
      v24 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
      do
      {
        v24(v9, v23, v6);
        sub_23B6015BC();
        v25 = (void *)sub_23B6017E4();
        v26 = objc_msgSend(v30, sel_UUIDWithNSUUID_, v25);

        (*(void (**)(char *, uint64_t))(v29 + 8))(v5, v31);
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        sub_23B601C94();
        sub_23B601CB8();
        sub_23B601CC4();
        sub_23B601CA0();
        v23 += v28;
        --v21;
      }
      while (v21);
      return v35;
    }
  }
  return result;
}

uint64_t sub_23B5E3D68(uint64_t a1)
{
  uint64_t v1;

  return sub_23B5D3A10(a1, v1);
}

uint64_t sub_23B5E3D70()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23B5E3DAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = swift_task_alloc();
  v5 = *(_OWORD *)(v0 + 48);
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = sub_23B587FA4;
  *(_OWORD *)(v4 + 32) = v5;
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = v3;
  return swift_task_switch();
}

uint64_t sub_23B5E3E1C()
{
  return sub_23B5884D4(qword_256A35A28, (uint64_t (*)(uint64_t))type metadata accessor for Peripheral, (uint64_t)&protocol conformance descriptor for Peripheral);
}

uint64_t sub_23B5E3E48(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_23B5884D4(&qword_2542FD3C0, type metadata accessor for CentralManager, (uint64_t)&protocol conformance descriptor for CentralManager);
  a1[2] = sub_23B5884D4(&qword_2542FD3D8, type metadata accessor for CentralManager, (uint64_t)&protocol conformance descriptor for CentralManager);
  result = sub_23B5884D4(&qword_2542FD3D0, type metadata accessor for CentralManager, (uint64_t)&protocol conformance descriptor for CentralManager);
  a1[3] = result;
  return result;
}

uint64_t sub_23B5E3EC0()
{
  return sub_23B58F61C((unint64_t *)&unk_256A35B28, &qword_2542FD1E0, MEMORY[0x24BE316D0]);
}

uint64_t sub_23B5E3EEC()
{
  return sub_23B5884D4(&qword_2542FD3C8, type metadata accessor for CentralManager, (uint64_t)&protocol conformance descriptor for CentralManager);
}

unint64_t sub_23B5E3F1C()
{
  unint64_t result;

  result = qword_2542FD368;
  if (!qword_2542FD368)
  {
    result = MEMORY[0x23B868978](&protocol conformance descriptor for CentralManager.State, &type metadata for CentralManager.State);
    atomic_store(result, (unint64_t *)&qword_2542FD368);
  }
  return result;
}

uint64_t sub_23B5E3F60()
{
  return type metadata accessor for CentralManager(0);
}

void sub_23B5E3F68()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_23B5C9EBC(319, (unint64_t *)&qword_2542FD670, (void (*)(uint64_t))type metadata accessor for CentralManager);
  if (v0 <= 0x3F)
  {
    sub_23B5AC398(319, (unint64_t *)&unk_2542FD5D8, (uint64_t *)&unk_2542FD5C8);
    if (v1 <= 0x3F)
    {
      sub_23B5AC398(319, &qword_2542FD5B0, &qword_2542FD5A0);
      if (v2 <= 0x3F)
      {
        sub_23B5AC398(319, &qword_2542FD578, (uint64_t *)&unk_2542FD558);
        if (v3 <= 0x3F)
          swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t method lookup function for CentralManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CentralManager.state.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of CentralManager.stateStream()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 584) + *(_QWORD *)(*(_QWORD *)v1 + 584));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23B587FA4;
  return v6(a1);
}

uint64_t dispatch thunk of CentralManager.connectionEvents(serviceIdentifiers:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 592))();
}

uint64_t dispatch thunk of CentralManager.connectionEvents(peripheralIdentifiers:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 600))();
}

uint64_t dispatch thunk of CentralManager.scanForPeripherals(scanMode:garbageCollectInterval:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);

  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v4 + 608)
                                                                   + *(_QWORD *)(*(_QWORD *)v4 + 608));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v10;
  *v10 = v5;
  v10[1] = sub_23B587FA4;
  return v12(a1, a2, a3, a4);
}

uint64_t dispatch thunk of CentralManager.retrievePeripheral(macAddress:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 616) + *(_QWORD *)(*(_QWORD *)v1 + 616));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23B58EB10;
  return v6(a1);
}

uint64_t dispatch thunk of CentralManager.retrievePeripherals(serialNumbers:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 624) + *(_QWORD *)(*(_QWORD *)v1 + 624));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23B58F8B8;
  return v6(a1);
}

uint64_t dispatch thunk of CentralManager.retrievePeripherals(beaconIdentifiers:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 632) + *(_QWORD *)(*(_QWORD *)v1 + 632));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23B58F8B8;
  return v6(a1);
}

uint64_t dispatch thunk of CentralManager.retrievePeripherals(identifiers:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 640) + *(_QWORD *)(*(_QWORD *)v1 + 640));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23B58F8B8;
  return v6(a1);
}

uint64_t dispatch thunk of CentralManager.retrieveConnectedPeripherals(services:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 648) + *(_QWORD *)(*(_QWORD *)v1 + 648));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23B58F8B8;
  return v6(a1);
}

uint64_t type metadata accessor for DelegateTrampoline_CBCentralManagerPrivateDelegate()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for PairingManagerAccessController()
{
  return objc_opt_self();
}

uint64_t getEnumTagSinglePayload for CentralManager.State(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CentralManager.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_23B5E451C + 4 * byte_23B608815[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_23B5E4550 + 4 * byte_23B608810[v4]))();
}

uint64_t sub_23B5E4550(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B5E4558(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23B5E4560);
  return result;
}

uint64_t sub_23B5E456C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23B5E4574);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_23B5E4578(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B5E4580(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CentralManager.State()
{
  return &type metadata for CentralManager.State;
}

uint64_t *initializeBufferWithCopyOfBuffer for CentralManager.ConnectedState(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    swift_getEnumCaseMultiPayload();
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for CentralManager.ConnectedState(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for CentralManager.ConnectedState(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_getEnumCaseMultiPayload();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for CentralManager.ConnectedState(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if (a1 != a2)
  {
    sub_23B5E4784(a1);
    swift_getEnumCaseMultiPayload();
    v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23B5E4784(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CentralManager.ConnectedState(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for CentralManager.ConnectedState(uint64_t a1)
{
  return sub_23B5E47D4(a1, (uint64_t *)&unk_2542FCCB8);
}

uint64_t sub_23B5E47D4(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t initializeWithTake for CentralManager.ConnectedState(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_getEnumCaseMultiPayload();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for CentralManager.ConnectedState(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if (a1 != a2)
  {
    sub_23B5E4784(a1);
    swift_getEnumCaseMultiPayload();
    v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for DeviceChange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for DeviceChange(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_23B5E4924()
{
  return swift_storeEnumTagMultiPayload();
}

void sub_23B5E4934()
{
  unint64_t v0;

  sub_23B5C9EBC(319, (unint64_t *)&unk_2542FD660, (void (*)(uint64_t))type metadata accessor for Peripheral);
  if (v0 <= 0x3F)
    swift_initEnumMetadataMultiPayload();
}

ValueMetadata *type metadata accessor for Logger()
{
  return &type metadata for Logger;
}

uint64_t sub_23B5E49BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v5;

  v4 = swift_task_alloc();
  v5 = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_23B587FA4;
  *(_OWORD *)(v4 + 24) = v5;
  *(_QWORD *)(v4 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_23B5E4A24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23B587FA4;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_256A35CC8 + dword_256A35CC8))(a1, v4);
}

uint64_t sub_23B5E4A94(void *a1, uint64_t a2, void *a3)
{
  char *v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  id v15;
  uint64_t result;
  uint64_t v17;
  _QWORD *v18;
  char *v19;
  id v20;
  id v21;
  uint64_t v22;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD530);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23B601880();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (uint64_t *)((char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = *(void **)&v3[OBJC_IVAR____TtC15FindMyBluetoothP33_70F3B43C606FCD1D14F1E1CF221D31A750DelegateTrampoline_CBCentralManagerPrivateDelegate_delegateQueue];
  *v13 = v14;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x24BEE5610], v10);
  v15 = v14;
  LOBYTE(v14) = sub_23B60188C();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v11 + 8))(v13, v10);
  if ((v14 & 1) != 0)
  {
    v17 = sub_23B601A78();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v9, 1, 1, v17);
    v18 = (_QWORD *)swift_allocObject();
    v18[2] = 0;
    v18[3] = 0;
    v18[4] = v3;
    v18[5] = a1;
    v18[6] = a2;
    v18[7] = a3;
    v19 = v3;
    v20 = a1;
    swift_bridgeObjectRetain();
    v21 = a3;
    sub_23B5CD248((uint64_t)v9, (uint64_t)&unk_256A35DA8, (uint64_t)v18);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23B5E4C14(void *a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  id v14;
  uint64_t result;
  uint64_t v16;
  _QWORD *v17;
  char *v18;
  id v19;
  uint64_t v20;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD530);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23B601880();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (uint64_t *)((char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = *(void **)&v3[OBJC_IVAR____TtC15FindMyBluetoothP33_70F3B43C606FCD1D14F1E1CF221D31A750DelegateTrampoline_CBCentralManagerPrivateDelegate_delegateQueue];
  *v12 = v13;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BEE5610], v9);
  v14 = v13;
  LOBYTE(v13) = sub_23B60188C();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v10 + 8))(v12, v9);
  if ((v13 & 1) != 0)
  {
    v16 = sub_23B601A78();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 1, 1, v16);
    v17 = (_QWORD *)swift_allocObject();
    v17[2] = 0;
    v17[3] = 0;
    v17[4] = v3;
    v17[5] = a1;
    v18 = v3;
    v19 = a1;
    sub_23B5CD248((uint64_t)v8, a3, (uint64_t)v17);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23B5E4D7C(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  id v16;
  uint64_t result;
  uint64_t v18;
  _QWORD *v19;
  char *v20;
  id v21;
  id v22;
  uint64_t v23;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD530);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23B601880();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (uint64_t *)((char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = *(void **)&v4[OBJC_IVAR____TtC15FindMyBluetoothP33_70F3B43C606FCD1D14F1E1CF221D31A750DelegateTrampoline_CBCentralManagerPrivateDelegate_delegateQueue];
  *v14 = v15;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x24BEE5610], v11);
  v16 = v15;
  LOBYTE(v15) = sub_23B60188C();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v12 + 8))(v14, v11);
  if ((v15 & 1) != 0)
  {
    v18 = sub_23B601A78();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v10, 1, 1, v18);
    v19 = (_QWORD *)swift_allocObject();
    v19[2] = 0;
    v19[3] = 0;
    v19[4] = v4;
    v19[5] = a1;
    v19[6] = a2;
    v20 = v4;
    v21 = a1;
    v22 = a2;
    sub_23B5CD248((uint64_t)v10, a4, (uint64_t)v19);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23B5E4EF4(uint64_t a1, void *a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  id v13;
  uint64_t result;
  uint64_t v15;
  _QWORD *v16;
  char *v17;
  id v18;
  uint64_t v19;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD530);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23B601880();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (uint64_t *)((char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *(void **)&v2[OBJC_IVAR____TtC15FindMyBluetoothP33_70F3B43C606FCD1D14F1E1CF221D31A750DelegateTrampoline_CBCentralManagerPrivateDelegate_delegateQueue];
  *v11 = v12;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BEE5610], v8);
  v13 = v12;
  LOBYTE(v12) = sub_23B60188C();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v9 + 8))(v11, v8);
  if ((v12 & 1) != 0)
  {
    v15 = sub_23B601A78();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v7, 1, 1, v15);
    v16 = (_QWORD *)swift_allocObject();
    v16[2] = 0;
    v16[3] = 0;
    v16[4] = v2;
    v16[5] = a1;
    v16[6] = a2;
    v17 = v2;
    v18 = a2;
    sub_23B5CD248((uint64_t)v7, (uint64_t)&unk_256A35D08, (uint64_t)v16);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23B5E505C()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_23B5E5090(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v7;

  v7 = *(_OWORD *)(v1 + 32);
  v4 = *(_QWORD *)(v1 + 48);
  v5 = swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = sub_23B587FA4;
  *(_QWORD *)(v5 + 40) = v4;
  *(_OWORD *)(v5 + 24) = v7;
  *(_QWORD *)(v5 + 16) = a1;
  return swift_task_switch();
}

void sub_23B5E5110(uint64_t a1)
{
  uint64_t *v1;

  sub_23B5E1240(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_23B5E512C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CentralManager.ConnectedState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23B5E5174(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(v1 + 48);
  v5 = swift_task_alloc();
  v6 = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = sub_23B587FA4;
  *(_QWORD *)(v5 + 40) = v4;
  *(_OWORD *)(v5 + 24) = v6;
  *(_QWORD *)(v5 + 16) = a1;
  return swift_task_switch();
}

uint64_t objectdestroy_54Tm()
{
  id *v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_23B5E522C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(v1 + 48);
  v5 = swift_task_alloc();
  v6 = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = sub_23B587FA4;
  *(_QWORD *)(v5 + 40) = v4;
  *(_OWORD *)(v5 + 24) = v6;
  *(_QWORD *)(v5 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_23B5E52A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v5;

  v4 = swift_task_alloc();
  v5 = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_23B587844;
  *(_OWORD *)(v4 + 24) = v5;
  *(_QWORD *)(v4 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_23B5E5310()
{
  id *v0;

  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23B5E5354(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  v4 = swift_task_alloc();
  v5 = *(_OWORD *)(v1 + 32);
  v6 = *(_OWORD *)(v1 + 48);
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_23B587FA4;
  *(_OWORD *)(v4 + 40) = v6;
  *(_OWORD *)(v4 + 24) = v5;
  *(_QWORD *)(v4 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_23B5E53C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23B5E544C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0) - 8);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = v1[5];
  v9 = v1[6];
  v10 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_23B587844;
  return sub_23B5DF00C(a1, v5, v6, v7, v8, v9, v10);
}

uint64_t *__swift_allocate_boxed_opaque_existential_0(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_23B5E554C(uint64_t a1)
{
  uint64_t v1;

  return sub_23B5DA214(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32), *(_QWORD *)(v1 + 40), *(unsigned __int8 *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_BYTE *)(v1 + 72));
}

void sub_23B5E5580(uint64_t a1)
{
  uint64_t v1;

  sub_23B5D9E24(a1, *(_QWORD *)(v1 + 24));
}

uint64_t sub_23B5E55A4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A346E0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v9 = *(_QWORD *)(v1 + 64);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  swift_unknownObjectRelease();
  swift_release();

  v6 = sub_23B601634();
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v0 + v2, 1, v6))
    (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v0 + v2, v6);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + ((v5 + ((((v2 + v9) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 9) & ~v5), v3);
  return swift_deallocObject();
}

uint64_t sub_23B5E56CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A346E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23B5E5714(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;

  v3 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A346E0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = v4 + *(_QWORD *)(v3 + 64);
  v6 = (char *)v1 + (v5 & 0xFFFFFFFFFFFFFFF8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  v7 = v1[3];
  v13 = v1[2];
  v8 = v1[4];
  v9 = v1[5];
  LOBYTE(v5) = *((_BYTE *)v1 + v5);
  v10 = *((_QWORD *)v6 + 1);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_23B587FA4;
  return sub_23B5DA470(a1, v13, v7, v8, v9, (uint64_t)v1 + v4, v5, v10);
}

uint64_t sub_23B5E5828()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B5E584C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B5E5870(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23B5D4088(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_23B5E5890()
{
  return objectdestroy_119Tm((void (*)(_QWORD))MEMORY[0x24BEE4CA0], (void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_23B5E58A4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_23B587FA4;
  return sub_23B5D4190(a1, v4, v5, v6, v7);
}

uint64_t sub_23B5E5924(uint64_t a1)
{
  uint64_t v1;

  return sub_23B5DAA94(a1, v1, (uint64_t)&unk_250C82910, (uint64_t)&unk_250C82938, (uint64_t)&unk_256A35E80);
}

uint64_t sub_23B5E5960()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23B587FA4;
  v3[2] = v2;
  return swift_task_switch();
}

uint64_t __swift_mutable_project_boxed_opaque_existential_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_23B5E59E8(uint64_t a1)
{
  uint64_t v1;

  return sub_23B5DAA94(a1, v1, (uint64_t)&unk_250C82988, (uint64_t)&unk_250C829B0, (uint64_t)&unk_256A35ED8);
}

uint64_t sub_23B5E5A20()
{
  return objectdestroy_119Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8], (void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t objectdestroy_119Tm(void (*a1)(_QWORD), void (*a2)(_QWORD))
{
  uint64_t v2;

  swift_unknownObjectRelease();
  a1(*(_QWORD *)(v2 + 32));
  a2(*(_QWORD *)(v2 + 40));
  return swift_deallocObject();
}

uint64_t sub_23B5E5A80(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_23B587FA4;
  return sub_23B5DAFC4(a1, v4, v5, v6, v7);
}

uint64_t sub_23B5E5B04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23B587FA4;
  v3[2] = v2;
  return swift_task_switch();
}

uint64_t sub_23B5E5B64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23B601820();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23B5E5BD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_23B601820() - 8) + 80);
  return sub_23B5D1B40(a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t sub_23B5E5C18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD580);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_23B601820();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

uint64_t sub_23B5E5CE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2542FD580) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_23B601820() - 8) + 80);
  v8 = v5 + v6 + v7;
  v9 = *(_QWORD *)(v1 + 32);
  v10 = v1 + v5;
  v11 = v1 + (v8 & ~v7);
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_23B587FA4;
  v12[4] = v10;
  v12[5] = v11;
  v12[2] = a1;
  v12[3] = v9;
  return swift_task_switch();
}

uint64_t sub_23B5E5D94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23B601820();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23B5E5E10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_23B601820() - 8) + 80);
  v5 = *(_QWORD *)(v1 + 32);
  v6 = v1 + ((v4 + 40) & ~v4);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23B587FA4;
  v7[3] = v5;
  v7[4] = v6;
  v7[2] = a1;
  return swift_task_switch();
}

uint64_t CBDiscoveryProtocol.description.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v8 = (char *)&v11 - v7;
  v13 = 0;
  v14 = 0xE000000000000000;
  sub_23B601958();
  v12 = v2;
  v9 = *(_QWORD *)(a2 + 8);
  sub_23B601DCC();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  MEMORY[0x23B86839C](a1, v9);
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  v12 = v2;
  sub_23B601C58();
  sub_23B601DF0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, AssociatedTypeWitness);
  sub_23B601958();
  return v13;
}

uint64_t dispatch thunk of CBDiscoveryProtocol.scan(config:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 32) + *(_QWORD *)(a4 + 32));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_23B587844;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_23B5E60AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v6 = 0;
  v7 = 0xE000000000000000;
  sub_23B601C40();
  sub_23B601958();
  v5 = v0;
  v1 = type metadata accessor for Characteristic();
  v2 = sub_23B5884D4((unint64_t *)&unk_256A34CC0, (uint64_t (*)(uint64_t))type metadata accessor for Characteristic, (uint64_t)&protocol conformance descriptor for Characteristic);
  sub_23B601DCC();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  MEMORY[0x23B86839C](v1, v2);
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1E8);
  sub_23B5ABF5C();
  sub_23B601DE4();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  v3 = *(void **)(v0 + OBJC_IVAR____TtC15FindMyBluetooth14Characteristic_underlyingObject);
  sub_23B58487C((uint64_t)objc_msgSend(v3, sel_properties), &v5);
  Characteristic.Properties.description.getter();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  objc_msgSend(v3, sel_isNotifying);
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  return v6;
}

uint64_t sub_23B5E62E8()
{
  uint64_t v0;
  uint64_t v1;

  sub_23B601C40();
  sub_23B601958();
  v0 = type metadata accessor for MockCharacteristic();
  v1 = sub_23B5884D4(&qword_256A34D40, (uint64_t (*)(uint64_t))type metadata accessor for MockCharacteristic, (uint64_t)&protocol conformance descriptor for MockCharacteristic);
  sub_23B601DCC();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  MEMORY[0x23B86839C](v0, v1);
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1E8);
  sub_23B5ABF5C();
  sub_23B601DE4();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  Characteristic.Properties.description.getter();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  swift_beginAccess();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  return 0;
}

uint64_t sub_23B5E6520()
{
  uint64_t v0;

  swift_beginAccess();
  return *(_QWORD *)(v0 + 112);
}

uint64_t sub_23B5E6550(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_QWORD *)(v1 + 112) = a1;
  return result;
}

uint64_t (*sub_23B5E658C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t MockCharacteristic.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC15FindMyBluetooth18MockCharacteristic_id;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

void MockCharacteristic.properties.getter(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15FindMyBluetooth18MockCharacteristic_properties);
}

uint64_t sub_23B5E6624()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15FindMyBluetooth18MockCharacteristic_isNotifying);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_23B5E6668(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15FindMyBluetooth18MockCharacteristic_isNotifying);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_23B5E66B0())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id sub_23B5E66F4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15FindMyBluetooth18MockCharacteristic_mockBehavior);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a2 = *v3;
  a2[1] = v5;
  a2[2] = v6;
  return sub_23B5AF27C(v4, v5, v6);
}

void sub_23B5E6750(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15FindMyBluetooth18MockCharacteristic_mockBehavior);
  swift_beginAccess();
  v6 = *v5;
  v7 = v5[1];
  v8 = v5[2];
  *v5 = v2;
  v5[1] = v3;
  v5[2] = v4;
  sub_23B5AF27C(v2, v3, v4);
  sub_23B5AF2F8(v6, v7, v8);
}

id sub_23B5E67E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC15FindMyBluetooth18MockCharacteristic_mockBehavior);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_23B5AF27C(v4, v5, v6);
}

__n128 sub_23B5E683C(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 result;
  __int128 v8;

  v8 = *a1;
  v2 = *((_QWORD *)a1 + 2);
  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC15FindMyBluetooth18MockCharacteristic_mockBehavior);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *(_OWORD *)v3 = v8;
  v3[2] = v2;
  sub_23B5AF2F8(v4, v5, v6);
  return result;
}

uint64_t (*sub_23B5E68A8())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_23B5E68EC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = (uint64_t *)(v1 + OBJC_IVAR____TtC15FindMyBluetooth18MockCharacteristic_mockBehavior);
  swift_beginAccess();
  v6 = *v5;
  v7 = v5[1];
  v8 = v5[2];
  *v5 = v2;
  v5[1] = v3;
  v5[2] = v4;
  sub_23B5AF27C(v2, v3, v4);
  sub_23B5AF2F8(v6, v7, v8);
}

uint64_t MockCharacteristic.__allocating_init(service:identifier:properties:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)(v3 + 16) = a1;
  swift_allocObject();
  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_256A35FB0 + dword_256A35FB0);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 24) = v7;
  *v7 = v3;
  v7[1] = sub_23B5BC144;
  return v9(a1, a2, a3);
}

uint64_t MockCharacteristic.init(service:identifier:properties:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)(v3 + 16) = a1;
  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_256A35FB0 + dword_256A35FB0);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 24) = v7;
  *v7 = v3;
  v7[1] = sub_23B5C0658;
  return v9(a1, a2, a3);
}

uint64_t sub_23B5E6A90(uint64_t a1, uint64_t a2)
{
  return sub_23B5E6AB8(a1, a2, &OBJC_IVAR____TtC15FindMyBluetooth18MockCharacteristic_mockReadResponder, (uint64_t (*)(uint64_t, uint64_t))sub_23B5E88E4);
}

uint64_t sub_23B5E6AA4(uint64_t a1, uint64_t a2)
{
  return sub_23B5E6AB8(a1, a2, &OBJC_IVAR____TtC15FindMyBluetooth18MockCharacteristic_mockWriteWithoutResponseCallback, (uint64_t (*)(uint64_t, uint64_t))sub_23B5E88E4);
}

uint64_t sub_23B5E6AB8(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v5 = (uint64_t *)(v4 + *a3);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  swift_retain();
  return a4(v6, v7);
}

uint64_t sub_23B5E6B00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  v6 = (_QWORD *)(v2 + OBJC_IVAR____TtC15FindMyBluetooth18MockCharacteristic_mockWriteResponder);
  v7 = *(_QWORD *)(v2 + OBJC_IVAR____TtC15FindMyBluetooth18MockCharacteristic_mockWriteResponder);
  *v6 = &unk_256A35FD8;
  v6[1] = v5;
  swift_retain();
  return sub_23B5864E4(v7);
}

uint64_t sub_23B5E6B6C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)a3 + *a3);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_23B5E6BDC;
  return v8(a1, a2);
}

uint64_t sub_23B5E6BDC()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23B5E6C28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = v1;
  return swift_task_switch();
}

uint64_t sub_23B5E6C40()
{
  uint64_t v0;
  uint64_t Strong;

  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 56) = Strong;
  if (Strong)
    return swift_task_switch();
  type metadata accessor for CentralManager.Error();
  sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
  swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5E6D08()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 64) = swift_weakLoadStrong();
  return swift_task_switch();
}

uint64_t sub_23B5E6D58()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 64))
    return swift_task_switch();
  type metadata accessor for CentralManager.Error();
  sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
  swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5E6E24()
{
  uint64_t v0;
  _BYTE *v1;

  v1 = (_BYTE *)(*(_QWORD *)(v0 + 64) + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_state);
  swift_beginAccess();
  *(_BYTE *)(v0 + 112) = *v1;
  return swift_task_switch();
}

void sub_23B5E6E8C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;
  void (*v8)(_QWORD);

  if (*(_BYTE *)(v0 + 112) != 3)
    goto LABEL_7;
  v1 = *(_QWORD *)(v0 + 48);
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC15FindMyBluetooth18MockCharacteristic_properties) & 2) == 0)
  {
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    swift_allocError();
    *v2 = 2;
LABEL_8:
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_release();
    swift_release();
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  v3 = OBJC_IVAR____TtC15FindMyBluetooth18MockCharacteristic_updatingState;
  *(_QWORD *)(v0 + 72) = OBJC_IVAR____TtC15FindMyBluetooth18MockCharacteristic_updatingState;
  v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 2 || v4 == 1)
  {
LABEL_7:
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    swift_allocError();
    goto LABEL_8;
  }
  *(_BYTE *)(v1 + v3) = 1;
  v5 = v1 + OBJC_IVAR____TtC15FindMyBluetooth18MockCharacteristic_mockReadResponder;
  v6 = *(int **)(v1 + OBJC_IVAR____TtC15FindMyBluetooth18MockCharacteristic_mockReadResponder);
  *(_QWORD *)(v0 + 80) = v6;
  *(_QWORD *)(v0 + 88) = *(_QWORD *)(v5 + 8);
  if (v6)
  {
    v8 = (void (*)(_QWORD))((char *)v6 + *v6);
    swift_retain();
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 96) = v7;
    *v7 = v0;
    v7[1] = sub_23B5E70B8;
    v8(*(_QWORD *)(v0 + 40));
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_23B5E70B8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B5E711C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 48);
  swift_release();
  swift_release();
  sub_23B5864E4(v1);
  *(_BYTE *)(v3 + v2) = 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5E7180()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 48);
  sub_23B5864E4(*(_QWORD *)(v0 + 80));
  *(_BYTE *)(v2 + v1) = 0;
  swift_willThrow();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5E71E8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[5] = a1;
  v2[6] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34C70);
  v2[7] = v3;
  v2[8] = *(_QWORD *)(v3 - 8);
  v2[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5E724C()
{
  uint64_t v0;
  uint64_t Strong;

  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 80) = Strong;
  if (Strong)
    return swift_task_switch();
  type metadata accessor for CentralManager.Error();
  sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
  swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5E731C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 88) = swift_weakLoadStrong();
  return swift_task_switch();
}

uint64_t sub_23B5E7370()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 88))
    return swift_task_switch();
  type metadata accessor for CentralManager.Error();
  sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
  swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5E7444()
{
  uint64_t v0;
  _BYTE *v1;

  v1 = (_BYTE *)(*(_QWORD *)(v0 + 88) + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_state);
  swift_beginAccess();
  *(_BYTE *)(v0 + 128) = *v1;
  return swift_task_switch();
}

void sub_23B5E74AC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  int **v3;
  int *v4;
  _QWORD *v5;
  void (*v6)(_QWORD);

  if (*(_BYTE *)(v0 + 128) != 3)
  {
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    swift_allocError();
    goto LABEL_5;
  }
  v1 = *(_QWORD *)(v0 + 48);
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC15FindMyBluetooth18MockCharacteristic_properties) & 4) == 0)
  {
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    swift_allocError();
    *v2 = 4;
LABEL_5:
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_release();
    swift_release();
    swift_task_dealloc();
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  v3 = (int **)(v1 + OBJC_IVAR____TtC15FindMyBluetooth18MockCharacteristic_mockWriteWithoutResponseCallback);
  v4 = *v3;
  *(_QWORD *)(v0 + 96) = *v3;
  *(_QWORD *)(v0 + 104) = v3[1];
  if (v4)
  {
    swift_retain();
    sub_23B6019C4();
    v6 = (void (*)(_QWORD))((char *)v4 + *v4);
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 112) = v5;
    *v5 = v0;
    v5[1] = sub_23B5E766C;
    v6(*(_QWORD *)(v0 + 72));
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_23B5E766C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  v3 = v2[12];
  (*(void (**)(_QWORD, _QWORD))(v2[8] + 8))(v2[9], v2[7]);
  sub_23B5864E4(v3);
  return swift_task_switch();
}

uint64_t sub_23B5E76F8()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5E7740()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5E7784(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[9] = a2;
  v3[10] = v2;
  v3[8] = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34C70);
  v3[11] = v4;
  v3[12] = *(_QWORD *)(v4 - 8);
  v3[13] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5E77EC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);
  if (*(_QWORD *)(v1 + 16))
  {
    swift_bridgeObjectRetain();
    __asm { BR              X9 }
  }
  type metadata accessor for CentralManager.Error();
  sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
  swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5E7C3C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 152) = v0;
  swift_task_dealloc();
  if (!v0)
    sub_23B5864E4(*(_QWORD *)(v2 + 128));
  return swift_task_switch();
}

uint64_t sub_23B5E7CB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 112);
  v1 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 80);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88));
  *(_BYTE *)(v3 + v2) = 0;
  *(_BYTE *)(v3 + v1) = 0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5E7D0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 112);
  v1 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 88);
  sub_23B5864E4(*(_QWORD *)(v0 + 128));
  *(_BYTE *)(v6 + v2) = 0;
  *(_BYTE *)(v6 + v1) = 0;
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t MockCharacteristic.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC15FindMyBluetooth18MockCharacteristic_id;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_weakDestroy();
  sub_23B5864E4(*(_QWORD *)(v0 + OBJC_IVAR____TtC15FindMyBluetooth18MockCharacteristic_mockReadResponder));
  sub_23B5864E4(*(_QWORD *)(v0 + OBJC_IVAR____TtC15FindMyBluetooth18MockCharacteristic_mockWriteWithoutResponseCallback));
  sub_23B5864E4(*(_QWORD *)(v0 + OBJC_IVAR____TtC15FindMyBluetooth18MockCharacteristic_mockWriteResponder));
  sub_23B5AF2F8(*(_QWORD *)(v0 + OBJC_IVAR____TtC15FindMyBluetooth18MockCharacteristic_mockBehavior), *(_QWORD *)(v0 + OBJC_IVAR____TtC15FindMyBluetooth18MockCharacteristic_mockBehavior + 8), *(_QWORD *)(v0 + OBJC_IVAR____TtC15FindMyBluetooth18MockCharacteristic_mockBehavior + 16));
  swift_defaultActor_destroy();
  return v0;
}

uint64_t MockCharacteristic.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC15FindMyBluetooth18MockCharacteristic_id;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_weakDestroy();
  sub_23B5864E4(*(_QWORD *)(v0 + OBJC_IVAR____TtC15FindMyBluetooth18MockCharacteristic_mockReadResponder));
  sub_23B5864E4(*(_QWORD *)(v0 + OBJC_IVAR____TtC15FindMyBluetooth18MockCharacteristic_mockWriteWithoutResponseCallback));
  sub_23B5864E4(*(_QWORD *)(v0 + OBJC_IVAR____TtC15FindMyBluetooth18MockCharacteristic_mockWriteResponder));
  sub_23B5AF2F8(*(_QWORD *)(v0 + OBJC_IVAR____TtC15FindMyBluetooth18MockCharacteristic_mockBehavior), *(_QWORD *)(v0 + OBJC_IVAR____TtC15FindMyBluetooth18MockCharacteristic_mockBehavior + 8), *(_QWORD *)(v0 + OBJC_IVAR____TtC15FindMyBluetooth18MockCharacteristic_mockBehavior + 16));
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t MockCharacteristic.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23B5E7F00@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC15FindMyBluetooth18MockCharacteristic_id;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

void sub_23B5E7F48(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15FindMyBluetooth18MockCharacteristic_properties);
}

uint64_t sub_23B5E7F5C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = v0;
  return swift_task_switch();
}

uint64_t sub_23B5E7F74()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_beginAccess();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v1 + 112));
}

uint64_t sub_23B5E7FBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23B587FA4;
  v4[5] = a1;
  v4[6] = v1;
  return swift_task_switch();
}

uint64_t sub_23B5E801C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23B587844;
  return sub_23B5E71E8(a1);
}

uint64_t sub_23B5E8068(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23B587FA4;
  return sub_23B5E7784(a1, a2);
}

uint64_t sub_23B5E80C8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_23B5E80E0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_23B5E62E8();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_23B5E8110()
{
  return sub_23B5AABAC();
}

uint64_t sub_23B5E8130(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;

  v4[2] = a2;
  v4[3] = v3;
  v7 = sub_23B601820();
  v4[4] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[5] = v8;
  v9 = swift_task_alloc();
  v4[6] = v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1E8);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = swift_task_alloc();
  v4[7] = v12;
  v13 = *a3;
  swift_defaultActor_initialize();
  *(_QWORD *)(v3 + 112) = 247;
  swift_weakInit();
  *(_BYTE *)(v3 + OBJC_IVAR____TtC15FindMyBluetooth18MockCharacteristic_isNotifying) = 0;
  *(_BYTE *)(v3 + OBJC_IVAR____TtC15FindMyBluetooth18MockCharacteristic_updatingState) = 0;
  v14 = (_QWORD *)(v3 + OBJC_IVAR____TtC15FindMyBluetooth18MockCharacteristic_mockReadResponder);
  *v14 = 0;
  v14[1] = 0;
  v15 = (_QWORD *)(v3 + OBJC_IVAR____TtC15FindMyBluetooth18MockCharacteristic_mockWriteWithoutResponseCallback);
  *v15 = 0;
  v15[1] = 0;
  v16 = (_QWORD *)(v3 + OBJC_IVAR____TtC15FindMyBluetooth18MockCharacteristic_mockWriteResponder);
  *v16 = 0;
  v16[1] = 0;
  v17 = (_QWORD *)(v3 + OBJC_IVAR____TtC15FindMyBluetooth18MockCharacteristic_mockBehavior);
  *v17 = 10000000000000000;
  v17[1] = 0;
  v17[2] = 0;
  swift_weakAssign();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v9, a2, v7);
  type metadata accessor for Characteristic();
  sub_23B6015D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v3 + OBJC_IVAR____TtC15FindMyBluetooth18MockCharacteristic_id, v12, v10);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC15FindMyBluetooth18MockCharacteristic_properties) = v13;
  return swift_task_switch();
}

uint64_t sub_23B5E82DC()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 40) + 8))(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 32));
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 24));
}

uint64_t sub_23B5E8330()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B5E8354(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;

  v6 = *(int **)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23B587FA4;
  return ((uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_256A35FD0 + dword_256A35FD0))(a1, a2, v6);
}

uint64_t sub_23B5E83D4(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_23B5884D4(&qword_256A36028, (uint64_t (*)(uint64_t))type metadata accessor for MockCharacteristic, (uint64_t)&protocol conformance descriptor for MockCharacteristic);
  result = sub_23B5884D4(&qword_256A34D40, (uint64_t (*)(uint64_t))type metadata accessor for MockCharacteristic, (uint64_t)&protocol conformance descriptor for MockCharacteristic);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t type metadata accessor for MockCharacteristic()
{
  uint64_t result;

  result = qword_256A36068;
  if (!qword_256A36068)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23B5E846C()
{
  return sub_23B5884D4((unint64_t *)&unk_256A36030, (uint64_t (*)(uint64_t))type metadata accessor for MockCharacteristic, (uint64_t)&protocol conformance descriptor for MockCharacteristic);
}

uint64_t sub_23B5E8498@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 112);
  return result;
}

uint64_t sub_23B5E84DC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_QWORD *)(v3 + 112) = v2;
  return result;
}

uint64_t sub_23B5E851C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC15FindMyBluetooth18MockCharacteristic_isNotifying);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_23B5E856C(char *a1, _QWORD *a2)
{
  char v2;
  _BYTE *v3;
  uint64_t result;

  v2 = *a1;
  v3 = (_BYTE *)(*a2 + OBJC_IVAR____TtC15FindMyBluetooth18MockCharacteristic_isNotifying);
  result = swift_beginAccess();
  *v3 = v2;
  return result;
}

uint64_t sub_23B5E85C0()
{
  return type metadata accessor for MockCharacteristic();
}

void sub_23B5E85C8()
{
  unint64_t v0;

  sub_23B5AC344();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for MockCharacteristic()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MockCharacteristic.mtu.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of MockCharacteristic.mtu.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of MockCharacteristic.mtu.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of MockCharacteristic.isNotifying.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of MockCharacteristic.isNotifying.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of MockCharacteristic.isNotifying.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of MockCharacteristic.mockBehavior.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))();
}

uint64_t dispatch thunk of MockCharacteristic.mockBehavior.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 344))();
}

uint64_t dispatch thunk of MockCharacteristic.mockBehavior.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 352))();
}

uint64_t dispatch thunk of MockCharacteristic.setMockBehavior(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 360))();
}

uint64_t dispatch thunk of MockCharacteristic.__allocating_init(service:identifier:properties:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v3 + 368) + *(_QWORD *)(v3 + 368));
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_23B58EB10;
  return v10(a1, a2, a3);
}

uint64_t dispatch thunk of MockCharacteristic.setMockReadResponder(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 376))();
}

uint64_t dispatch thunk of MockCharacteristic.setMockWriteWithoutResponseCallback(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 384))();
}

uint64_t dispatch thunk of MockCharacteristic.setMockWriteResponder(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 392))();
}

uint64_t dispatch thunk of MockCharacteristic.read()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 400) + *(_QWORD *)(*(_QWORD *)v1 + 400));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23B587FA4;
  return v6(a1);
}

uint64_t dispatch thunk of MockCharacteristic.writeWithoutResponse(data:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 408) + *(_QWORD *)(*(_QWORD *)v1 + 408));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23B587844;
  return v6(a1);
}

uint64_t dispatch thunk of MockCharacteristic.write(data:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 416) + *(_QWORD *)(*(_QWORD *)v2 + 416));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_23B587FA4;
  return v8(a1, a2);
}

uint64_t sub_23B5E88E8()
{
  uint64_t *v0;
  char v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  _OWORD *v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char v25;
  uint64_t *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  _QWORD *v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;

  v2 = *v0;
  v3 = (_QWORD *)MEMORY[0x24BEE4B00];
  if ((v2 & 1) == 0)
    goto LABEL_17;
  if (qword_256A340D0 != -1)
    swift_once();
  v4 = *((_QWORD *)off_256A36258 + 2);
  if (v4)
  {
    v5 = (uint64_t *)((char *)off_256A36258 + 32);
    while (1)
    {
      v6 = *v5++;
      if (v6 == 1)
        break;
      if (!--v4)
        goto LABEL_8;
    }
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
LABEL_17:
    if (v3[2])
      return (uint64_t)v3;
LABEL_24:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_8:
  v7 = sub_23B60191C();
  v9 = v8;
  v10 = MEMORY[0x24BEE1328];
  v37 = MEMORY[0x24BEE1328];
  LOBYTE(v36) = 1;
  sub_23B5A39B0(&v36, &v34);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v33 = v3;
  v13 = sub_23B58ECB8(v7, v9);
  v14 = v3[2];
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_20;
  }
  v1 = v12;
  if (v3[3] >= v16)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v3 = v33;
      if ((v12 & 1) == 0)
        goto LABEL_21;
LABEL_15:
      v19 = (_OWORD *)(v3[7] + 32 * v13);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
      sub_23B5A39B0(&v34, v19);
      goto LABEL_23;
    }
LABEL_20:
    sub_23B5B4E3C();
    v3 = v33;
    if ((v1 & 1) == 0)
      goto LABEL_21;
    goto LABEL_15;
  }
  sub_23B5B3118(v16, isUniquelyReferenced_nonNull_native);
  v17 = sub_23B58ECB8(v7, v9);
  if ((v1 & 1) != (v18 & 1))
    goto LABEL_26;
  v13 = v17;
  v3 = v33;
  if ((v1 & 1) != 0)
    goto LABEL_15;
LABEL_21:
  v21 = __swift_mutable_project_boxed_opaque_existential_0((uint64_t)&v34, v35);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v30 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v24 + 16))(v23);
  v25 = *v23;
  v32 = v10;
  LOBYTE(v31) = v25;
  v3[(v13 >> 6) + 8] |= 1 << v13;
  v26 = (uint64_t *)(v3[6] + 16 * v13);
  *v26 = v7;
  v26[1] = v9;
  sub_23B5A39B0(&v31, (_OWORD *)(v3[7] + 32 * v13));
  v27 = v3[2];
  v28 = __OFADD__(v27, 1);
  v29 = v27 + 1;
  if (!v28)
  {
    v3[2] = v29;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v34);
    swift_bridgeObjectRetain();
LABEL_23:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v3[2])
      return (uint64_t)v3;
    goto LABEL_24;
  }
  __break(1u);
LABEL_26:
  result = sub_23B601E2C();
  __break(1u);
  return result;
}

uint64_t sub_23B5E8BC8()
{
  uint64_t *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _OWORD *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char v24;
  uint64_t *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t result;
  _QWORD v30[2];
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  _QWORD *v34;
  __int128 v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;

  v1 = 0;
  v2 = 0;
  v3 = *v0;
  v30[1] = *MEMORY[0x24BDBB010];
  v4 = (_QWORD *)MEMORY[0x24BEE4B00];
  do
  {
    v6 = v1;
    v7 = *((_QWORD *)&unk_250C80E80 + v2 + 4);
    if ((v7 & ~v3) == 0)
    {
      if (v7 == 1)
      {
        v8 = sub_23B60191C();
        v10 = v9;
      }
      else
      {
        v10 = 0xE90000000000003ELL;
        v8 = 0x4E574F4E4B4E553CLL;
      }
      v38 = MEMORY[0x24BEE1328];
      LOBYTE(v37) = 1;
      sub_23B5A39B0(&v37, &v35);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v34 = v4;
      v13 = sub_23B58ECB8(v8, v10);
      v14 = v4[2];
      v15 = (v12 & 1) == 0;
      v16 = v14 + v15;
      if (__OFADD__(v14, v15))
      {
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        result = sub_23B601E2C();
        __break(1u);
        return result;
      }
      v17 = v12;
      if (v4[3] < v16)
      {
        sub_23B5B3118(v16, isUniquelyReferenced_nonNull_native);
        v18 = sub_23B58ECB8(v8, v10);
        if ((v17 & 1) != (v19 & 1))
          goto LABEL_25;
        v13 = v18;
        v4 = v34;
        if ((v17 & 1) == 0)
          goto LABEL_16;
LABEL_2:
        v5 = (_OWORD *)(v4[7] + 32 * v13);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
        sub_23B5A39B0(&v35, v5);
LABEL_3:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_4;
      }
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v4 = v34;
        if ((v12 & 1) != 0)
          goto LABEL_2;
      }
      else
      {
        sub_23B5B4E3C();
        v4 = v34;
        if ((v17 & 1) != 0)
          goto LABEL_2;
      }
LABEL_16:
      v31 = v8;
      v20 = __swift_mutable_project_boxed_opaque_existential_0((uint64_t)&v35, v36);
      MEMORY[0x24BDAC7A8](v20);
      v22 = (char *)v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v23 + 16))(v22);
      v24 = *v22;
      v33 = MEMORY[0x24BEE1328];
      LOBYTE(v32) = v24;
      v4[(v13 >> 6) + 8] |= 1 << v13;
      v25 = (uint64_t *)(v4[6] + 16 * v13);
      *v25 = v31;
      v25[1] = v10;
      sub_23B5A39B0(&v32, (_OWORD *)(v4[7] + 32 * v13));
      v26 = v4[2];
      v27 = __OFADD__(v26, 1);
      v28 = v26 + 1;
      if (v27)
        goto LABEL_24;
      v4[2] = v28;
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v35);
      swift_bridgeObjectRetain();
      goto LABEL_3;
    }
LABEL_4:
    v1 = 1;
    v2 = 1;
  }
  while ((v6 & 1) == 0);
  if (!v4[2])
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return (uint64_t)v4;
}

void Peripheral.Options.connectionOptions.getter(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t Peripheral.Options.pairingInfo.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for Peripheral.Options() + 20);
  return sub_23B5E8F20(v3, a1);
}

uint64_t type metadata accessor for Peripheral.Options()
{
  uint64_t result;

  result = qword_256A36318;
  if (!qword_256A36318)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23B5E8F20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34B98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t Peripheral.Options.init(connectionOptions:pairingInfo:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;

  *a3 = *a1;
  v4 = (uint64_t)a3 + *(int *)(type metadata accessor for Peripheral.Options() + 20);
  return sub_23B5E8FA4(a2, v4);
}

uint64_t sub_23B5E8FA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34B98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t Peripheral.ConnectionOptions.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

void sub_23B5E8FF4()
{
  off_256A36258 = &unk_250C80E30;
}

void *static Peripheral.ConnectionOptions.allCases.getter()
{
  return &unk_250C81088;
}

uint64_t Peripheral.ConnectionOptions.init(rawValue:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

void static Peripheral.ConnectionOptions.hideFromBTSettings.getter(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

void static Peripheral.ConnectionOptions.shouldSkipUnpair.getter(_QWORD *a1@<X8>)
{
  *a1 = 2;
}

void sub_23B5E9034(_QWORD *a1@<X8>)
{
  *a1 = &unk_250C810B0;
}

uint64_t Peripheral.DisconnectionOptions.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

void *static Peripheral.DisconnectionOptions.allCases.getter()
{
  return &unk_250C810D8;
}

unint64_t sub_23B5E9064()
{
  unint64_t result;

  result = qword_256A36260;
  if (!qword_256A36260)
  {
    result = MEMORY[0x23B868978](&protocol conformance descriptor for Peripheral.ConnectionOptions, &type metadata for Peripheral.ConnectionOptions);
    atomic_store(result, (unint64_t *)&qword_256A36260);
  }
  return result;
}

unint64_t sub_23B5E90AC()
{
  unint64_t result;

  result = qword_256A36268;
  if (!qword_256A36268)
  {
    result = MEMORY[0x23B868978](&protocol conformance descriptor for Peripheral.ConnectionOptions, &type metadata for Peripheral.ConnectionOptions);
    atomic_store(result, (unint64_t *)&qword_256A36268);
  }
  return result;
}

uint64_t sub_23B5E90F0()
{
  return sub_23B5E9258(&qword_256A36270, &qword_256A36278);
}

unint64_t sub_23B5E9118()
{
  unint64_t result;

  result = qword_256A36280;
  if (!qword_256A36280)
  {
    result = MEMORY[0x23B868978](&protocol conformance descriptor for Peripheral.ConnectionOptions, &type metadata for Peripheral.ConnectionOptions);
    atomic_store(result, (unint64_t *)&qword_256A36280);
  }
  return result;
}

unint64_t sub_23B5E9160()
{
  unint64_t result;

  result = qword_256A36288;
  if (!qword_256A36288)
  {
    result = MEMORY[0x23B868978](&protocol conformance descriptor for Peripheral.ConnectionOptions, &type metadata for Peripheral.ConnectionOptions);
    atomic_store(result, (unint64_t *)&qword_256A36288);
  }
  return result;
}

unint64_t sub_23B5E91A8()
{
  unint64_t result;

  result = qword_256A36290;
  if (!qword_256A36290)
  {
    result = MEMORY[0x23B868978](&protocol conformance descriptor for Peripheral.DisconnectionOptions, &type metadata for Peripheral.DisconnectionOptions);
    atomic_store(result, (unint64_t *)&qword_256A36290);
  }
  return result;
}

unint64_t sub_23B5E91F0()
{
  unint64_t result;

  result = qword_256A36298;
  if (!qword_256A36298)
  {
    result = MEMORY[0x23B868978](&protocol conformance descriptor for Peripheral.DisconnectionOptions, &type metadata for Peripheral.DisconnectionOptions);
    atomic_store(result, (unint64_t *)&qword_256A36298);
  }
  return result;
}

uint64_t sub_23B5E9234()
{
  return sub_23B5E9258(&qword_256A362A0, &qword_256A362A8);
}

uint64_t sub_23B5E9258(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x23B868978](MEMORY[0x24BEE12E0], v4);
    atomic_store(result, a1);
  }
  return result;
}

void sub_23B5E9298(_QWORD *a1@<X8>)
{
  *a1 = &unk_250C81108;
}

unint64_t sub_23B5E92AC()
{
  unint64_t result;

  result = qword_256A362B0;
  if (!qword_256A362B0)
  {
    result = MEMORY[0x23B868978](&protocol conformance descriptor for Peripheral.DisconnectionOptions, &type metadata for Peripheral.DisconnectionOptions);
    atomic_store(result, (unint64_t *)&qword_256A362B0);
  }
  return result;
}

unint64_t sub_23B5E92F4()
{
  unint64_t result;

  result = qword_256A362B8;
  if (!qword_256A362B8)
  {
    result = MEMORY[0x23B868978](&protocol conformance descriptor for Peripheral.DisconnectionOptions, &type metadata for Peripheral.DisconnectionOptions);
    atomic_store(result, (unint64_t *)&qword_256A362B8);
  }
  return result;
}

uint64_t *_s14descr250C82D99C7OptionsVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t v17;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v5 = *(int *)(a3 + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = type metadata accessor for PeripheralPairingInfo();
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34B98);
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      v12 = sub_23B601634();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v6, v7, v12);
      v13 = *(int *)(v8 + 20);
      v14 = (uint64_t *)&v6[v13];
      v15 = (uint64_t *)&v7[v13];
      v16 = *v15;
      v17 = v15[1];
      sub_23B5A294C(*v15, v17);
      *v14 = v16;
      v14[1] = v17;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
  }
  return v3;
}

uint64_t _s14descr250C82D99C7OptionsVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = type metadata accessor for PeripheralPairingInfo();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v2, 1, v3);
  if (!(_DWORD)result)
  {
    v5 = sub_23B601634();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v2, v5);
    return sub_23B5A2990(*(_QWORD *)(v2 + *(int *)(v3 + 20)), *(_QWORD *)(v2 + *(int *)(v3 + 20) + 8));
  }
  return result;
}

_QWORD *_s14descr250C82D99C7OptionsVwcp(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  unint64_t v15;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for PeripheralPairingInfo();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34B98);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    v10 = sub_23B601634();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v5, v6, v10);
    v11 = *(int *)(v7 + 20);
    v12 = (uint64_t *)&v5[v11];
    v13 = (uint64_t *)&v6[v11];
    v14 = *v13;
    v15 = v13[1];
    sub_23B5A294C(*v13, v15);
    *v12 = v14;
    v12[1] = v15;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

_QWORD *_s14descr250C82D99C7OptionsVwca(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(char *, uint64_t, uint64_t);
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for PeripheralPairingInfo();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  v10 = v9(v5, 1, v7);
  v11 = v9(v6, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      v20 = sub_23B601634();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 24))(v5, v6, v20);
      v21 = *(int *)(v7 + 20);
      v22 = (uint64_t *)&v5[v21];
      v23 = (uint64_t *)&v6[v21];
      v24 = *v23;
      v25 = v23[1];
      sub_23B5A294C(*v23, v25);
      v26 = *v22;
      v27 = v22[1];
      *v22 = v24;
      v22[1] = v25;
      sub_23B5A2990(v26, v27);
      return a1;
    }
    sub_23B5E9720((uint64_t)v5);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34B98);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    return a1;
  }
  v12 = sub_23B601634();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v5, v6, v12);
  v13 = *(int *)(v7 + 20);
  v14 = (uint64_t *)&v5[v13];
  v15 = (uint64_t *)&v6[v13];
  v16 = *v15;
  v17 = v15[1];
  sub_23B5A294C(*v15, v17);
  *v14 = v16;
  v14[1] = v17;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  return a1;
}

uint64_t sub_23B5E9720(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PeripheralPairingInfo();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *_s14descr250C82D99C7OptionsVwtk(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for PeripheralPairingInfo();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34B98);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    v10 = sub_23B601634();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v5, v6, v10);
    *(_OWORD *)&v5[*(int *)(v7 + 20)] = *(_OWORD *)&v6[*(int *)(v7 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

_QWORD *_s14descr250C82D99C7OptionsVwta(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(char *, uint64_t, uint64_t);
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for PeripheralPairingInfo();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  v10 = v9(v5, 1, v7);
  v11 = v9(v6, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      v15 = sub_23B601634();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v5, v6, v15);
      v16 = *(int *)(v7 + 20);
      v17 = *(_QWORD *)&v5[v16];
      v18 = *(_QWORD *)&v5[v16 + 8];
      *(_OWORD *)&v5[v16] = *(_OWORD *)&v6[v16];
      sub_23B5A2990(v17, v18);
      return a1;
    }
    sub_23B5E9720((uint64_t)v5);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34B98);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    return a1;
  }
  v12 = sub_23B601634();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v5, v6, v12);
  *(_OWORD *)&v5[*(int *)(v7 + 20)] = *(_OWORD *)&v6[*(int *)(v7 + 20)];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  return a1;
}

uint64_t _s14descr250C82D99C7OptionsVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23B5E9978(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 20);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34B98);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t _s14descr250C82D99C7OptionsVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23B5E99C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 20);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34B98);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

void sub_23B5E9A10()
{
  unint64_t v0;

  sub_23B5E9A88();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_23B5E9A88()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256A36328[0])
  {
    type metadata accessor for PeripheralPairingInfo();
    v0 = sub_23B601BBC();
    if (!v1)
      atomic_store(v0, qword_256A36328);
  }
}

ValueMetadata *type metadata accessor for Peripheral.ConnectionOptions()
{
  return &type metadata for Peripheral.ConnectionOptions;
}

ValueMetadata *type metadata accessor for Peripheral.DisconnectionOptions()
{
  return &type metadata for Peripheral.DisconnectionOptions;
}

uint64_t PeripheralProtocol.isolatedDescription.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  v3[8] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A346E0);
  v3[9] = swift_task_alloc();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  v3[10] = v4;
  v3[11] = *(_QWORD *)(v4 - 8);
  v3[12] = swift_task_alloc();
  v3[13] = sub_23B601A18();
  v3[14] = v5;
  return swift_task_switch();
}

uint64_t sub_23B5E9BF8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  uint64_t (*v10)(_QWORD, _QWORD, _QWORD);

  v1 = v0[12];
  v9 = v0[11];
  v2 = v0[10];
  v3 = v0[6];
  v4 = v0[7];
  v5 = v0[5];
  sub_23B601C40();
  v0[2] = 0;
  v0[3] = 0xE000000000000000;
  sub_23B601958();
  v0[4] = v4;
  v6 = *(_QWORD *)(v3 + 16);
  sub_23B601DCC();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  MEMORY[0x23B86839C](v5, v6);
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  (*(void (**)(uint64_t, uint64_t))(v3 + 40))(v5, v3);
  sub_23B5E9F88();
  sub_23B601DE4();
  sub_23B601958();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v1, v2);
  sub_23B601958();
  v10 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))(**(int **)(v3 + 48) + *(_QWORD *)(v3 + 48));
  v7 = (_QWORD *)swift_task_alloc();
  v0[15] = v7;
  *v7 = v0;
  v7[1] = sub_23B5E9DB0;
  return v10(v0[9], v0[5], v0[6]);
}

uint64_t sub_23B5E9DB0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B5E9DFC()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(_QWORD *, _QWORD, _QWORD);

  v1 = v0[6];
  sub_23B601928();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  v4 = (uint64_t (*)(_QWORD *, _QWORD, _QWORD))(**(int **)(v1 + 64) + *(_QWORD *)(v1 + 64));
  v2 = (_QWORD *)swift_task_alloc();
  v0[16] = v2;
  *v2 = v0;
  v2[1] = sub_23B5E9EAC;
  return v4(v0 + 17, v0[5], v0[6]);
}

uint64_t sub_23B5E9EAC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B5E9EF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v0 + 137) = *(_BYTE *)(v0 + 136);
  sub_23B601D00();
  sub_23B601958();
  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

unint64_t sub_23B5E9F88()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A34AD0;
  if (!qword_256A34AD0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A359A0);
    result = MEMORY[0x23B868978](MEMORY[0x24BE316E8], v1);
    atomic_store(result, &qword_256A34AD0);
  }
  return result;
}

uint64_t PeripheralProtocol.description.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = 0;
  v14 = 0xE000000000000000;
  sub_23B601C40();
  swift_bridgeObjectRelease();
  v13 = 60;
  v14 = 0xE100000000000000;
  v12 = v2;
  v9 = *(_QWORD *)(a2 + 16);
  sub_23B601DCC();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  MEMORY[0x23B86839C](a1, v9);
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  (*(void (**)(uint64_t, uint64_t))(a2 + 40))(a1, a2);
  sub_23B5E9F88();
  sub_23B601DE4();
  sub_23B601958();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_23B601958();
  return v13;
}

uint64_t dispatch thunk of PeripheralProtocol.id.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of PeripheralProtocol.macAddress.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 48) + *(_QWORD *)(a3 + 48));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23B587844;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of PeripheralProtocol.advertisementData.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of PeripheralProtocol.state.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 64) + *(_QWORD *)(a3 + 64));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23B587FA4;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of PeripheralProtocol.lastSeen.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 72) + *(_QWORD *)(a3 + 72));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23B587FA4;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of PeripheralProtocol.isConnectable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of PeripheralProtocol.isConnected.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of PeripheralProtocol.pairingInfo.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 96) + *(_QWORD *)(a3 + 96));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23B587844;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of PeripheralProtocol.connect()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 104) + *(_QWORD *)(a2 + 104));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23B587FA4;
  return v7(a1, a2);
}

uint64_t dispatch thunk of PeripheralProtocol.connect(useCase:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 112) + *(_QWORD *)(a4 + 112));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_23B587FA4;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of PeripheralProtocol.cancelConnection()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 120) + *(_QWORD *)(a2 + 120));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23B587FA4;
  return v7(a1, a2);
}

uint64_t dispatch thunk of PeripheralProtocol.cancelConnection(options:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 128) + *(_QWORD *)(a3 + 128));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23B587FA4;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of PeripheralProtocol.isPaired.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 136) + *(_QWORD *)(a2 + 136));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23B58EB10;
  return v7(a1, a2);
}

uint64_t dispatch thunk of PeripheralProtocol.pair()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 144) + *(_QWORD *)(a2 + 144));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23B587FA4;
  return v7(a1, a2);
}

uint64_t dispatch thunk of PeripheralProtocol.unpair()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 152) + *(_QWORD *)(a2 + 152));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23B587FA4;
  return v7(a1, a2);
}

uint64_t dispatch thunk of PeripheralProtocol.set(macAddress:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 160) + *(_QWORD *)(a3 + 160));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23B587FA4;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of PeripheralProtocol.discover(serviceIdentifiers:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 168) + *(_QWORD *)(a3 + 168));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23B58EB10;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of PeripheralProtocol.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 176) + *(_QWORD *)(a3 + 176));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23B58F8B8;
  return v9(a1, a2, a3);
}

uint64_t Device.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A363D0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t Device.btAddress.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Device() + 20);
  v4 = sub_23B601634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for Device()
{
  uint64_t result;

  result = qword_2542FD470;
  if (!qword_2542FD470)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t Device.manufacturerData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for Device() + 24));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_23B5EA8F0(v4, v5, v6);
}

uint64_t sub_23B5EA8F0(uint64_t result, uint64_t a2, unint64_t a3)
{
  if (result != 8)
    return sub_23B5A294C(a2, a3);
  return result;
}

void sub_23B5EA90C(id a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  void *v21;
  _BYTE *v22;
  char *v23;
  id v24;
  id v25;
  void *v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  void (*v32)(char *, char *, uint64_t);
  id v33;
  void *v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t *v45;
  char *v46;
  char *v47;
  void (*v48)(uint64_t, char *, uint64_t);
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  void *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char v59[8];
  uint64_t v60;
  uint64_t v61;
  id v62;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A363D0);
  v55 = *(_QWORD *)(v4 - 8);
  v56 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v54 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A346E0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_23B601634();
  v9 = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58);
  v57 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD228);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23B601820();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v53 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v48 - v18;
  v20 = objc_msgSend(a1, sel_identifier);
  if (!v20)
    goto LABEL_4;
  v21 = v20;
  v51 = a2;
  v62 = a1;
  sub_23B60191C();

  sub_23B6017CC();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_23B587ED4((uint64_t)v13, &qword_2542FD228);
    a1 = v62;
LABEL_4:
    sub_23B586900();
    swift_allocError();
    *v22 = 2;
    swift_willThrow();

    return;
  }
  v23 = v19;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v19, v13, v14);
  v24 = v62;
  v25 = objc_msgSend(v62, sel_btAddressData);
  if (!v25)
    goto LABEL_8;
  v26 = v25;
  v27 = sub_23B601748();
  v29 = v28;

  sub_23B5A294C(v27, v29);
  sub_23B60161C();
  v30 = v58;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v58) == 1)
  {
    sub_23B5A2990(v27, v29);
    sub_23B587ED4((uint64_t)v8, (uint64_t *)&unk_256A346E0);
LABEL_8:
    sub_23B586900();
    swift_allocError();
    *v31 = 3;
    swift_willThrow();

    (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
    return;
  }
  v32 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v32(v57, v8, v30);
  v33 = objc_msgSend(v24, sel_bleAppleManufacturerData);
  v49 = v27;
  v50 = v29;
  v48 = (void (*)(uint64_t, char *, uint64_t))v32;
  if (v33)
  {
    v34 = v33;
    v35 = sub_23B601748();
    v37 = v36;

    v38 = v52;
    sub_23B5F8688(v35, v37, (uint64_t)v59);
    if (v38)
    {

      v39 = 0;
      v40 = 0;
      v41 = 8;
    }
    else
    {
      v41 = v59[0];
      v39 = v60;
      v40 = v61;
    }
    v42 = type metadata accessor for Device();
    v43 = v51;
    v45 = (uint64_t *)(v51 + *(int *)(v42 + 24));
    *v45 = v41;
    v45[1] = v39;
    v45[2] = v40;
    v24 = v62;
  }
  else
  {
    v42 = type metadata accessor for Device();
    v43 = v51;
    v44 = (_QWORD *)(v51 + *(int *)(v42 + 24));
    v44[1] = 0;
    v44[2] = 0;
    *v44 = 8;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v53, v23, v14);
  type metadata accessor for Device();
  v46 = v23;
  v47 = v54;
  sub_23B6015D4();

  sub_23B5A2990(v49, v50);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v46, v14);
  (*(void (**)(uint64_t, char *, uint64_t))(v55 + 32))(v43, v47, v56);
  v48(v43 + *(int *)(v42 + 20), v57, v58);
}

uint64_t Device.description.getter()
{
  uint64_t v0;
  uint64_t v1;

  sub_23B601C40();
  swift_bridgeObjectRelease();
  v1 = type metadata accessor for Device();
  sub_23B5884D4(&qword_256A363D8, (uint64_t (*)(uint64_t))type metadata accessor for Device, (uint64_t)&protocol conformance descriptor for Device);
  sub_23B601DCC();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A363D0);
  sub_23B5EB7BC(&qword_256A363E0, MEMORY[0x24BE316E8]);
  sub_23B601DE4();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  sub_23B601634();
  sub_23B5884D4(&qword_256A34768, (uint64_t (*)(uint64_t))MEMORY[0x24BE31730], MEMORY[0x24BE31750]);
  sub_23B601DE4();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  if (*(_BYTE *)(v0 + *(int *)(v1 + 24)) != 8)
    BluetoothManufacturerAdvertisementData.description.getter();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  return 60;
}

uint64_t Device.init(identifier:btAddress:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _QWORD *v11;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A363D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a3, a1, v6);
  v7 = type metadata accessor for Device();
  v8 = a3 + *(int *)(v7 + 20);
  v9 = sub_23B601634();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8, a2, v9);
  v11 = (_QWORD *)(a3 + *(int *)(v7 + 24));
  v11[1] = 0;
  v11[2] = 0;
  *v11 = 8;
  return result;
}

uint64_t sub_23B5EB010()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x7365726464417462;
  if (*v0 != 1)
    v1 = 0xD000000000000010;
  if (*v0)
    return v1;
  else
    return 25705;
}

uint64_t sub_23B5EB068@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23B5EC164(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23B5EB08C()
{
  return 0;
}

void sub_23B5EB098(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_23B5EB0A4()
{
  sub_23B5EB2C8();
  return sub_23B601F7C();
}

uint64_t sub_23B5EB0CC()
{
  sub_23B5EB2C8();
  return sub_23B601F88();
}

uint64_t Device.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  __int128 *v10;
  uint64_t v11;
  _BYTE v13[16];
  __int128 v14;
  uint64_t v15;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A363E8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B5EB2C8();
  sub_23B601ED4();
  LOBYTE(v14) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A363D0);
  sub_23B5EB7BC(&qword_256A363F8, MEMORY[0x24BE316C8]);
  sub_23B601DC0();
  if (!v2)
  {
    v9 = type metadata accessor for Device();
    LOBYTE(v14) = 1;
    sub_23B601634();
    sub_23B5884D4(&qword_256A36400, (uint64_t (*)(uint64_t))MEMORY[0x24BE31730], MEMORY[0x24BE31740]);
    sub_23B601DC0();
    v10 = (__int128 *)(v3 + *(int *)(v9 + 24));
    v11 = *((_QWORD *)v10 + 2);
    v14 = *v10;
    v15 = v11;
    v13[15] = 2;
    sub_23B5EB30C();
    sub_23B601DB4();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_23B5EB2C8()
{
  unint64_t result;

  result = qword_256A363F0;
  if (!qword_256A363F0)
  {
    result = MEMORY[0x23B868978](&unk_23B6092A4, &type metadata for Device.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A363F0);
  }
  return result;
}

unint64_t sub_23B5EB30C()
{
  unint64_t result;

  result = qword_256A36408;
  if (!qword_256A36408)
  {
    result = MEMORY[0x23B868978](&protocol conformance descriptor for BluetoothManufacturerAdvertisementData, &type metadata for BluetoothManufacturerAdvertisementData);
    atomic_store(result, (unint64_t *)&qword_256A36408);
  }
  return result;
}

uint64_t Device.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, char *, uint64_t);
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  _QWORD *v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  char v38;

  v27 = a2;
  v3 = sub_23B601634();
  v29 = *(_QWORD *)(v3 - 8);
  v30 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v28 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A363D0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v31 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A36410);
  v8 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Device();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v34 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_23B5EB2C8();
  v33 = v10;
  v15 = v35;
  sub_23B601EC8();
  if (v15)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v34);
  v26 = v11;
  v16 = (uint64_t)v13;
  v35 = v6;
  v17 = v28;
  v18 = v29;
  v19 = v30;
  LOBYTE(v36) = 0;
  sub_23B5EB7BC(&qword_256A36418, MEMORY[0x24BE316E0]);
  sub_23B601D90();
  v20 = *(void (**)(uint64_t, char *, uint64_t))(v35 + 32);
  v21 = v31;
  v31 = (char *)v5;
  v20(v16, v21, v5);
  LOBYTE(v36) = 1;
  sub_23B5884D4(&qword_256A36420, (uint64_t (*)(uint64_t))MEMORY[0x24BE31730], MEMORY[0x24BE31748]);
  sub_23B601D90();
  (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v16 + *(int *)(v26 + 20), v17, v19);
  v38 = 2;
  sub_23B5EB6AC();
  sub_23B601D84();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v33, v32);
  v22 = v37;
  v23 = v27;
  v24 = v16 + *(int *)(v26 + 24);
  *(_OWORD *)v24 = v36;
  *(_QWORD *)(v24 + 16) = v22;
  sub_23B5EB6F0(v16, v23);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v34);
  return sub_23B5EB734(v16);
}

unint64_t sub_23B5EB6AC()
{
  unint64_t result;

  result = qword_256A36428;
  if (!qword_256A36428)
  {
    result = MEMORY[0x23B868978](&protocol conformance descriptor for BluetoothManufacturerAdvertisementData, &type metadata for BluetoothManufacturerAdvertisementData);
    atomic_store(result, (unint64_t *)&qword_256A36428);
  }
  return result;
}

uint64_t sub_23B5EB6F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Device();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23B5EB734(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Device();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23B5EB770@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Device.init(from:)(a1, a2);
}

uint64_t sub_23B5EB784(_QWORD *a1)
{
  return Device.encode(to:)(a1);
}

uint64_t sub_23B5EB798()
{
  return sub_23B5EB7BC(&qword_256A36430, MEMORY[0x24BE316D0]);
}

uint64_t sub_23B5EB7BC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A363D0);
    result = MEMORY[0x23B868978](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23B5EB800@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A363D0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t *initializeBufferWithCopyOfBuffer for Device(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unsigned __int8 *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A363D0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23B601634();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = *(int *)(a3 + 24);
    v13 = (char *)a1 + v12;
    v14 = (unsigned __int8 *)a2 + v12;
    v15 = *v14;
    if (v15 == 8)
    {
      *(_OWORD *)v13 = *(_OWORD *)v14;
      *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
    }
    else
    {
      *v13 = v15;
      v17 = *((_QWORD *)v14 + 1);
      v18 = *((_QWORD *)v14 + 2);
      sub_23B5A294C(v17, v18);
      *((_QWORD *)v13 + 1) = v17;
      *((_QWORD *)v13 + 2) = v18;
    }
  }
  return a1;
}

uint64_t destroy for Device(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A363D0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_23B601634();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v8 = a1 + *(int *)(a2 + 24);
  if (*(_BYTE *)v8 != 8)
    return sub_23B5A2990(*(_QWORD *)(v8 + 8), *(_QWORD *)(v8 + 16));
  return result;
}

uint64_t initializeWithCopy for Device(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A363D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23B601634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = (unsigned __int8 *)(a2 + v11);
  v14 = *v13;
  if (v14 == 8)
  {
    *(_OWORD *)v12 = *(_OWORD *)v13;
    *(_QWORD *)(v12 + 16) = *((_QWORD *)v13 + 2);
  }
  else
  {
    *(_BYTE *)v12 = v14;
    v15 = *((_QWORD *)v13 + 1);
    v16 = *((_QWORD *)v13 + 2);
    sub_23B5A294C(v15, v16);
    *(_QWORD *)(v12 + 8) = v15;
    *(_QWORD *)(v12 + 16) = v16;
  }
  return a1;
}

uint64_t assignWithCopy for Device(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A363D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23B601634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = (__int128 *)(a2 + v11);
  v14 = *(unsigned __int8 *)(a1 + v11);
  v15 = *(unsigned __int8 *)(a2 + v11);
  if (v14 == 8)
  {
    if (v15 == 8)
    {
      v16 = *v13;
      *(_QWORD *)(v12 + 16) = *((_QWORD *)v13 + 2);
      *(_OWORD *)v12 = v16;
    }
    else
    {
      *(_BYTE *)v12 = v15;
      v18 = *((_QWORD *)v13 + 1);
      v19 = *((_QWORD *)v13 + 2);
      sub_23B5A294C(v18, v19);
      *(_QWORD *)(v12 + 8) = v18;
      *(_QWORD *)(v12 + 16) = v19;
    }
  }
  else if (v15 == 8)
  {
    sub_23B5EBBB8(v12);
    v17 = *((_QWORD *)v13 + 2);
    *(_OWORD *)v12 = *v13;
    *(_QWORD *)(v12 + 16) = v17;
  }
  else
  {
    *(_BYTE *)v12 = v15;
    v20 = *((_QWORD *)v13 + 1);
    v21 = *((_QWORD *)v13 + 2);
    sub_23B5A294C(v20, v21);
    v22 = *(_QWORD *)(v12 + 8);
    v23 = *(_QWORD *)(v12 + 16);
    *(_QWORD *)(v12 + 8) = v20;
    *(_QWORD *)(v12 + 16) = v21;
    sub_23B5A2990(v22, v23);
  }
  return a1;
}

uint64_t sub_23B5EBBB8(uint64_t a1)
{
  destroy for BluetoothManufacturerAdvertisementData(a1);
  return a1;
}

uint64_t initializeWithTake for Device(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A363D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23B601634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  return a1;
}

uint64_t assignWithTake for Device(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A363D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23B601634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = (unsigned __int8 *)(a2 + v11);
  if (*(_BYTE *)(a1 + v11) != 8)
  {
    v14 = *v13;
    if (v14 != 8)
    {
      *(_BYTE *)v12 = v14;
      v15 = *(_QWORD *)(v12 + 8);
      v16 = *(_QWORD *)(v12 + 16);
      *(_OWORD *)(v12 + 8) = *(_OWORD *)(v13 + 8);
      sub_23B5A2990(v15, v16);
      return a1;
    }
    sub_23B5EBBB8(v12);
  }
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_QWORD *)(v12 + 16) = *((_QWORD *)v13 + 2);
  return a1;
}

uint64_t getEnumTagSinglePayload for Device()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23B5EBD78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v14;
  unsigned int v15;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A363D0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_23B601634();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 24)) <= 8u)
    v14 = 8;
  else
    v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
  v15 = v14 - 8;
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 24)) >= 8u)
    return v15;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for Device()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23B5EBE38(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A363D0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_23B601634();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 24)) = a2 + 8;
  return result;
}

void sub_23B5EBEE0()
{
  unint64_t v0;
  unint64_t v1;

  sub_23B5EBF6C();
  if (v0 <= 0x3F)
  {
    sub_23B601634();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_23B5EBF6C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2542FD688)
  {
    type metadata accessor for Device();
    v0 = sub_23B6015C8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2542FD688);
  }
}

uint64_t storeEnumTagSinglePayload for Device.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23B5EC00C + 4 * byte_23B6090ED[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23B5EC040 + 4 * asc_23B6090E8[v4]))();
}

uint64_t sub_23B5EC040(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B5EC048(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23B5EC050);
  return result;
}

uint64_t sub_23B5EC05C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23B5EC064);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23B5EC068(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B5EC070(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Device.CodingKeys()
{
  return &type metadata for Device.CodingKeys;
}

unint64_t sub_23B5EC090()
{
  unint64_t result;

  result = qword_256A36438;
  if (!qword_256A36438)
  {
    result = MEMORY[0x23B868978](&unk_23B60927C, &type metadata for Device.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A36438);
  }
  return result;
}

unint64_t sub_23B5EC0D8()
{
  unint64_t result;

  result = qword_256A36440;
  if (!qword_256A36440)
  {
    result = MEMORY[0x23B868978](&unk_23B6091EC, &type metadata for Device.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A36440);
  }
  return result;
}

unint64_t sub_23B5EC120()
{
  unint64_t result;

  result = qword_256A36448;
  if (!qword_256A36448)
  {
    result = MEMORY[0x23B868978](&unk_23B609214, &type metadata for Device.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A36448);
  }
  return result;
}

uint64_t sub_23B5EC164(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23B601DFC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7365726464417462 && a2 == 0xE900000000000073 || (sub_23B601DFC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000023B6052F0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23B601DFC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23B5EC2A8()
{
  return sub_23B5EC2CC((uint64_t (*)(uint64_t))type metadata accessor for MockCBDiscovery, &qword_256A342D0, (uint64_t)&protocol conformance descriptor for MockCBDiscovery);
}

uint64_t sub_23B5EC2CC(uint64_t (*a1)(uint64_t), unint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  sub_23B601958();
  v6 = a1(0);
  v7 = sub_23B5884D4(a2, a1, a3);
  sub_23B601DCC();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  MEMORY[0x23B86839C](v6, v7);
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A34270);
  sub_23B601D00();
  sub_23B601958();
  return 0;
}

uint64_t sub_23B5EC404()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_23B60185C();
  __swift_allocate_value_buffer(v0, qword_256A36450);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_256A36450);
  if (qword_256A340E0 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_256A3D0E0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t CBDiscovery.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC15FindMyBluetooth11CBDiscovery_id;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34270);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t CBDiscovery.__allocating_init()()
{
  uint64_t v0;
  _QWORD *v1;

  swift_allocObject();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23B587B38;
  return CBDiscovery.init()();
}

uint64_t CBDiscovery.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v1 + 160) = v0;
  sub_23B601820();
  *(_QWORD *)(v1 + 168) = swift_task_alloc();
  swift_defaultActor_initialize();
  *(_QWORD *)(v0 + 112) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBB250]), sel_init);
  v2 = v0 + OBJC_IVAR____TtC15FindMyBluetooth11CBDiscovery_scanContinuation;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34288);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  sub_23B601814();
  type metadata accessor for CBDiscovery(0);
  sub_23B6015D4();
  return swift_task_switch();
}

uint64_t sub_23B5EC61C()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;

  v1 = v0[20];
  v2 = *(void **)(v1 + 112);
  v3 = swift_allocObject();
  swift_weakInit();
  v0[6] = sub_23B5EC860;
  v0[7] = v3;
  v4 = MEMORY[0x24BDAC760];
  v0[2] = MEMORY[0x24BDAC760];
  v0[3] = 1107296256;
  v0[4] = sub_23B5ECFE4;
  v0[5] = &block_descriptor_0;
  v5 = _Block_copy(v0 + 2);
  v6 = v2;
  swift_release();
  objc_msgSend(v6, sel_setDeviceFoundHandler_, v5);
  _Block_release(v5);

  v7 = *(void **)(v1 + 112);
  v8 = swift_allocObject();
  swift_weakInit();
  v0[8] = v4;
  v0[12] = sub_23B5ED11C;
  v0[13] = v8;
  v0[9] = 1107296256;
  v0[10] = sub_23B5ECFE4;
  v0[11] = &block_descriptor_5;
  v9 = _Block_copy(v0 + 8);
  v10 = v7;
  swift_release();
  objc_msgSend(v10, sel_setDeviceLostHandler_, v9);
  _Block_release(v9);

  v11 = *(void **)(v1 + 112);
  v12 = swift_allocObject();
  swift_weakInit();
  v0[18] = sub_23B5EDC00;
  v0[19] = v12;
  v0[14] = v4;
  v0[15] = 1107296256;
  v0[16] = sub_23B5EE5C0;
  v0[17] = &block_descriptor_9;
  v13 = _Block_copy(v0 + 14);
  v14 = v11;
  swift_release();
  objc_msgSend(v14, sel_setFinishHandler_, v13);
  _Block_release(v13);

  swift_task_dealloc();
  return ((uint64_t (*)(_QWORD))v0[1])(v0[20]);
}

uint64_t type metadata accessor for CBDiscovery(uint64_t a1)
{
  return sub_23B5E47D4(a1, (uint64_t *)&unk_256A36660);
}

uint64_t sub_23B5EC83C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23B5EC860(void *a1)
{
  uint64_t v1;

  return sub_23B5ED04C(a1, v1, (uint64_t)&unk_250C83588, (uint64_t)"deviceFound", 11, (uint64_t)&unk_256A368C0);
}

uint64_t sub_23B5EC894(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_23B5EC8B0()
{
  uint64_t v0;

  sub_23B5EC8E0(*(void **)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5EC8E0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  _BOOL4 v24;
  uint64_t v25;
  uint8_t *v26;
  uint64_t v27;
  char *v28;
  id v29;
  _QWORD *v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint8_t *v48;
  char *v49;
  _QWORD *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63[5];

  v2 = v1;
  v57 = type metadata accessor for DeviceChange(0);
  MEMORY[0x24BDAC7A8](v57);
  v56 = (uint64_t)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34470);
  v54 = *(_QWORD *)(v5 - 8);
  v55 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v53 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Device();
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v50 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A342B8);
  MEMORY[0x24BDAC7A8](v13);
  v61 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34288);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256A340D8 != -1)
    swift_once();
  v19 = sub_23B60185C();
  v20 = __swift_project_value_buffer(v19, (uint64_t)qword_256A36450);
  v21 = a1;
  v60 = v20;
  v22 = sub_23B601844();
  v23 = sub_23B601B5C();
  v24 = os_log_type_enabled(v22, v23);
  v52 = v10;
  if (v24)
  {
    v25 = swift_slowAlloc();
    v51 = v15;
    v26 = (uint8_t *)v25;
    v27 = swift_slowAlloc();
    v59 = v16;
    v50 = (_QWORD *)v27;
    v58 = v18;
    *(_DWORD *)v26 = 138412290;
    v63[2] = (uint64_t)v21;
    v28 = v12;
    v29 = v21;
    v18 = v58;
    sub_23B601BC8();
    v30 = v50;
    *v50 = v21;

    v12 = v28;
    _os_log_impl(&dword_23B583000, v22, v23, "discovered: %@", v26, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35D50);
    swift_arrayDestroy();
    v16 = v59;
    MEMORY[0x23B868A2C](v30, -1, -1);
    v31 = v26;
    v15 = v51;
    MEMORY[0x23B868A2C](v31, -1, -1);

  }
  else
  {

  }
  v32 = v2 + OBJC_IVAR____TtC15FindMyBluetooth11CBDiscovery_scanContinuation;
  swift_beginAccess();
  v33 = v32;
  v34 = (uint64_t)v61;
  sub_23B5866E4(v33, (uint64_t)v61);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v34, 1, v15) == 1)
    return sub_23B587ED4(v34, &qword_256A342B8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 32))(v18, v34, v15);
  sub_23B5EA90C(v21, (uint64_t)v12);
  if ((sub_23B601AD8() & 1) != 0)
  {
    sub_23B601A3C();
    sub_23B5884D4(&qword_256A34628, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    v36 = swift_allocError();
    sub_23B601898();
    v63[0] = v36;
    sub_23B601B20();
    v37 = (uint64_t)v12;
  }
  else
  {
    v38 = (uint64_t)v52;
    sub_23B5F22D4((uint64_t)v12, (uint64_t)v52, (uint64_t (*)(_QWORD))type metadata accessor for Device);
    v39 = sub_23B601844();
    v40 = sub_23B601B5C();
    if (os_log_type_enabled(v39, v40))
    {
      v41 = swift_slowAlloc();
      v61 = v12;
      v42 = (uint8_t *)v41;
      v43 = swift_slowAlloc();
      v58 = v18;
      v44 = v43;
      v63[0] = v43;
      *(_DWORD *)v42 = 136315138;
      v45 = Device.description.getter();
      v62 = sub_23B58E160(v45, v46, v63);
      sub_23B601BC8();
      swift_bridgeObjectRelease();
      sub_23B5A3CA0(v38, (uint64_t (*)(_QWORD))type metadata accessor for Device);
      _os_log_impl(&dword_23B583000, v39, v40, "yield discovered device: %s", v42, 0xCu);
      swift_arrayDestroy();
      v47 = v44;
      v18 = v58;
      MEMORY[0x23B868A2C](v47, -1, -1);
      v48 = v42;
      v12 = v61;
      MEMORY[0x23B868A2C](v48, -1, -1);
    }
    else
    {
      sub_23B5A3CA0(v38, (uint64_t (*)(_QWORD))type metadata accessor for Device);
    }

    sub_23B5F22D4((uint64_t)v12, v56, (uint64_t (*)(_QWORD))type metadata accessor for Device);
    swift_storeEnumTagMultiPayload();
    v49 = v53;
    sub_23B601B14();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v49, v55);
    v37 = (uint64_t)v12;
  }
  sub_23B5A3CA0(v37, (uint64_t (*)(_QWORD))type metadata accessor for Device);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
}

void sub_23B5ECFE4(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t sub_23B5ED04C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  id v13;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v11 = result;
    sub_23B601658();
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = v11;
    *(_QWORD *)(v12 + 24) = a1;
    swift_retain();
    v13 = a1;
    MEMORY[0x23B867C10](a4, a5, 2, a6, v12);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_23B5ED11C(void *a1)
{
  uint64_t v1;

  return sub_23B5ED04C(a1, v1, (uint64_t)&unk_250C83560, (uint64_t)"deviceLost", 10, (uint64_t)&unk_256A368B0);
}

uint64_t sub_23B5ED150(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_23B5ED16C()
{
  uint64_t v0;

  sub_23B5ED19C(*(void **)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23B5ED19C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  _BOOL4 v27;
  id v28;
  uint64_t v29;
  uint8_t *v30;
  id v31;
  _QWORD *v32;
  os_log_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  char *v39;
  uint64_t v40;
  id v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  _BYTE *v46;
  id v47;
  id v48;
  id v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t v53;
  _QWORD *v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  char *v60;
  void (*v61)(char *, char *, uint64_t);
  char *v62;
  uint64_t v63;
  void (*v64)(char *, char *, uint64_t);
  NSObject *v65;
  os_log_type_t v66;
  uint64_t v67;
  uint64_t v68;
  uint8_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  void (*v74)(char *, uint64_t);
  uint64_t v75;
  uint8_t *v76;
  char *v77;
  char *v78;
  char *v79;
  _QWORD *v80;
  os_log_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  void (*v93)(char *, char *, uint64_t);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100[6];

  v89 = type metadata accessor for DeviceChange(0);
  MEMORY[0x24BDAC7A8](v89);
  v88 = (char *)&v80 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34470);
  v86 = *(_QWORD *)(v3 - 8);
  v87 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v85 = (char *)&v80 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A363D0);
  v84 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v98 = (char *)&v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v92 = (char *)&v80 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD228);
  MEMORY[0x24BDAC7A8](v9);
  v93 = (void (*)(char *, char *, uint64_t))((char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = sub_23B601820();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v83 = (char *)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v90 = (char *)&v80 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A342B8);
  MEMORY[0x24BDAC7A8](v16);
  v96 = (uint64_t)&v80 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34288);
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v80 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256A340D8 != -1)
    swift_once();
  v22 = sub_23B60185C();
  v23 = __swift_project_value_buffer(v22, (uint64_t)qword_256A36450);
  v24 = a1;
  v95 = v23;
  v25 = sub_23B601844();
  v26 = sub_23B601B5C();
  v27 = os_log_type_enabled(v25, v26);
  v94 = v12;
  if (v27)
  {
    v28 = v24;
    v29 = swift_slowAlloc();
    v82 = v5;
    v30 = (uint8_t *)v29;
    v80 = (_QWORD *)swift_slowAlloc();
    v91 = v11;
    *(_DWORD *)v30 = 138412290;
    v100[2] = (uint64_t)v24;
    v81 = v25;
    v31 = v24;
    v11 = v91;
    sub_23B601BC8();
    v32 = v80;
    *v80 = v28;

    v24 = v28;
    v33 = v81;
    _os_log_impl(&dword_23B583000, v81, v26, "lost: %@", v30, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35D50);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v32, -1, -1);
    v34 = v30;
    v5 = v82;
    MEMORY[0x23B868A2C](v34, -1, -1);

  }
  else
  {

  }
  v35 = (uint64_t)&v97[OBJC_IVAR____TtC15FindMyBluetooth11CBDiscovery_scanContinuation];
  swift_beginAccess();
  v36 = v35;
  v37 = v96;
  sub_23B5866E4(v36, v96);
  v38 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v37, 1, v18);
  v39 = v98;
  if (v38 == 1)
  {
    sub_23B587ED4(v37, &qword_256A342B8);
    return;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 32))(v21, v37, v18);
  if ((sub_23B601AD8() & 1) != 0)
  {
    sub_23B601A3C();
    sub_23B5884D4(&qword_256A34628, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    v40 = swift_allocError();
    sub_23B601898();
    v100[0] = v40;
    sub_23B601B20();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    return;
  }
  v41 = objc_msgSend(v24, sel_identifier);
  if (!v41)
    goto LABEL_13;
  v42 = v41;
  sub_23B60191C();

  v43 = (uint64_t)v93;
  sub_23B6017CC();
  swift_bridgeObjectRelease();
  v44 = v94;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v94 + 48))(v43, 1, v11) == 1)
  {
    sub_23B587ED4(v43, &qword_2542FD228);
LABEL_13:
    sub_23B586900();
    v45 = (void *)swift_allocError();
    *v46 = 2;
    swift_willThrow();
    v47 = v45;
    v48 = v45;
    v49 = v45;
    v50 = sub_23B601844();
    v51 = sub_23B601B74();
    if (os_log_type_enabled(v50, v51))
    {
      v52 = (uint8_t *)swift_slowAlloc();
      v53 = swift_slowAlloc();
      v97 = v21;
      v54 = (_QWORD *)v53;
      *(_DWORD *)v52 = 138543362;
      v55 = v45;
      v56 = v19;
      v57 = v18;
      v58 = _swift_stdlib_bridgeErrorToNSError();
      v100[0] = v58;
      sub_23B601BC8();
      *v54 = v58;
      v18 = v57;
      v19 = v56;

      _os_log_impl(&dword_23B583000, v50, v51, "Error getting CBDevice identifier: %{public}@", v52, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35D50);
      swift_arrayDestroy();
      v59 = v54;
      v21 = v97;
      MEMORY[0x23B868A2C](v59, -1, -1);
      MEMORY[0x23B868A2C](v52, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);

    return;
  }
  v97 = v21;
  v60 = v90;
  (*(void (**)(char *, uint64_t, uint64_t))(v44 + 32))(v90, v43, v11);
  v61 = *(void (**)(char *, char *, uint64_t))(v44 + 16);
  v91 = v11;
  v61(v83, v60, v11);
  type metadata accessor for Device();
  v62 = v92;
  sub_23B6015D4();
  v63 = v84;
  v64 = *(void (**)(char *, char *, uint64_t))(v84 + 16);
  v64(v39, v62, v5);
  v65 = sub_23B601844();
  v66 = sub_23B601B5C();
  if (os_log_type_enabled(v65, v66))
  {
    v67 = swift_slowAlloc();
    v93 = v64;
    v68 = v5;
    v69 = (uint8_t *)v67;
    v70 = swift_slowAlloc();
    v95 = v18;
    v96 = v19;
    v71 = v70;
    v100[0] = v70;
    *(_DWORD *)v69 = 136315138;
    sub_23B58F61C(&qword_256A363E0, &qword_256A363D0, MEMORY[0x24BE316E8]);
    v72 = sub_23B601DE4();
    v99 = sub_23B58E160(v72, v73, v100);
    sub_23B601BC8();
    swift_bridgeObjectRelease();
    v74 = *(void (**)(char *, uint64_t))(v63 + 8);
    v74(v39, v68);
    _os_log_impl(&dword_23B583000, v65, v66, "yield lost device: %s", v69, 0xCu);
    swift_arrayDestroy();
    v75 = v71;
    v18 = v95;
    v19 = v96;
    MEMORY[0x23B868A2C](v75, -1, -1);
    v76 = v69;
    v5 = v68;
    v64 = v93;
    MEMORY[0x23B868A2C](v76, -1, -1);
  }
  else
  {
    v74 = *(void (**)(char *, uint64_t))(v63 + 8);
    v74(v39, v5);
  }

  v77 = v92;
  v64(v88, v92, v5);
  swift_storeEnumTagMultiPayload();
  v78 = v85;
  v79 = v97;
  sub_23B601B14();
  (*(void (**)(char *, uint64_t))(v86 + 8))(v78, v87);
  v74(v77, v5);
  (*(void (**)(char *, uint64_t))(v94 + 8))(v90, v91);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v79, v18);
}

uint64_t sub_23B5EDAD0(void *a1, void *a2)
{
  uint64_t result;
  uint64_t v5;
  char v6;
  id v7;
  _BYTE *v8;
  uint64_t v9;
  id v10;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v5 = result;
    if (a2)
    {
      v6 = 1;
      a1 = a2;
    }
    else if (a1)
    {
      v7 = a1;
      v6 = 0;
    }
    else
    {
      sub_23B586900();
      a1 = (void *)swift_allocError();
      *v8 = 0;
      v6 = 1;
    }
    sub_23B601658();
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = v5;
    *(_QWORD *)(v9 + 24) = a1;
    *(_BYTE *)(v9 + 32) = v6;
    v10 = a2;
    swift_retain();
    sub_23B5F528C(a1);
    MEMORY[0x23B867C10]("finishHandler", 13, 2, &unk_256A36868, v9);
    sub_23B5F5210(a1);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_23B5EDC00(void *a1, void *a2)
{
  return sub_23B5EDAD0(a1, a2);
}

uint64_t sub_23B5EDC08(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;

  *(_BYTE *)(v3 + 32) = a3;
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_23B5EDC28()
{
  uint64_t v0;

  sub_23B5EDC60(*(void **)(v0 + 24), *(_BYTE *)(v0 + 32) & 1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5EDC60(void *a1, int a2)
{
  uint8_t *v2;
  uint8_t *v3;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  int v47;
  uint64_t v48;
  uint8_t *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  void (*v57)(char *, uint64_t);
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint8_t *v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  id v65;
  char *v66;
  uint64_t v67;
  _QWORD v69[3];
  uint8_t *v70;
  uint8_t *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  id v93;
  uint64_t v94[3];
  uint64_t v95;
  unint64_t v96;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34288);
  v7 = *(uint8_t **)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v89 = (char *)v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23B601838();
  v87 = *(_QWORD *)(v9 - 8);
  v88 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v86 = (char *)v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23B601F04();
  v83 = *(_QWORD *)(v11 - 8);
  v84 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v81 = (char *)v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23B601EEC();
  v79 = *(_QWORD *)(v13 - 8);
  v80 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v77 = (char *)v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_23B601F40();
  v75 = *(_QWORD *)(v76 - 8);
  MEMORY[0x24BDAC7A8](v76);
  v73 = (char *)v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = sub_23B601F4C();
  v78 = *(_QWORD *)(v85 - 8);
  v16 = MEMORY[0x24BDAC7A8](v85);
  v74 = (char *)v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v82 = (char *)v69 - v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A342B8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)v69 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v20);
  v92 = (uint64_t)v69 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v91 = (char *)v69 - v25;
  if (qword_256A340D8 != -1)
    swift_once();
  v26 = sub_23B60185C();
  v27 = __swift_project_value_buffer(v26, (uint64_t)qword_256A36450);
  LODWORD(v93) = a2;
  v28 = a2 & 1;
  sub_23B5F528C(a1);
  sub_23B5F528C(a1);
  v90 = v27;
  v29 = sub_23B601844();
  v30 = sub_23B601B5C();
  if (os_log_type_enabled(v29, v30))
  {
    v71 = v7;
    v31 = (uint8_t *)swift_slowAlloc();
    v32 = swift_slowAlloc();
    v72 = v6;
    v33 = v32;
    v94[0] = v32;
    v70 = v3;
    *(_DWORD *)v31 = 136315138;
    v95 = (uint64_t)a1;
    LOBYTE(v96) = v28;
    sub_23B5F528C(a1);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A36880);
    v34 = sub_23B601928();
    v95 = sub_23B58E160(v34, v35, v94);
    v3 = v70;
    sub_23B601BC8();
    v7 = v71;
    swift_bridgeObjectRelease();
    sub_23B5F5210(a1);
    sub_23B5F5210(a1);
    _os_log_impl(&dword_23B583000, v29, v30, "finishHandler: %s", v31, 0xCu);
    swift_arrayDestroy();
    v36 = v33;
    v6 = v72;
    MEMORY[0x23B868A2C](v36, -1, -1);
    MEMORY[0x23B868A2C](v31, -1, -1);
  }
  else
  {
    sub_23B5F5210(a1);
    sub_23B5F5210(a1);
  }

  if ((v93 & 1) == 0)
  {
    v93 = a1;
    objc_msgSend(a1, sel_scanTime);
    v42 = sub_23B601F70();
    v44 = v43;
    v45 = sub_23B601844();
    v46 = sub_23B601B8C();
    v47 = v46;
    if (os_log_type_enabled(v45, v46))
    {
      LODWORD(v90) = v47;
      v48 = swift_slowAlloc();
      v91 = v22;
      v49 = (uint8_t *)v48;
      v72 = swift_slowAlloc();
      v94[0] = v72;
      *(_DWORD *)v49 = 136315138;
      v71 = v49 + 12;
      v70 = v49 + 4;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A36870);
      sub_23B601F1C();
      v69[2] = v42;
      v50 = swift_allocObject();
      *(_OWORD *)(v50 + 16) = xmmword_23B607AF0;
      sub_23B601F10();
      sub_23B5F4A6C(v50);
      v69[1] = v44;
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      v51 = v73;
      sub_23B601F34();
      v52 = v77;
      sub_23B601EE0();
      v53 = v81;
      sub_23B601EF8();
      v54 = v74;
      sub_23B601664();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v83 + 8))(v53, v84);
      (*(void (**)(char *, uint64_t))(v79 + 8))(v52, v80);
      (*(void (**)(char *, uint64_t))(v75 + 8))(v51, v76);
      v55 = v86;
      sub_23B60182C();
      v56 = v82;
      sub_23B601F28();
      (*(void (**)(char *, uint64_t))(v87 + 8))(v55, v88);
      v57 = *(void (**)(char *, uint64_t))(v78 + 8);
      v58 = v54;
      v59 = v85;
      v57(v58, v85);
      sub_23B5884D4(&qword_256A36878, (uint64_t (*)(uint64_t))MEMORY[0x24BDD0AF0], MEMORY[0x24BDD0AE8]);
      sub_23B601F58();
      v57(v56, v59);
      v95 = sub_23B58E160(v95, v96, v94);
      sub_23B601BC8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23B583000, v45, (os_log_type_t)v90, "Scan duration: %s", v49, 0xCu);
      v60 = v72;
      swift_arrayDestroy();
      MEMORY[0x23B868A2C](v60, -1, -1);
      v61 = v49;
      v22 = v91;
      MEMORY[0x23B868A2C](v61, -1, -1);
    }

    v62 = (uint64_t)&v3[OBJC_IVAR____TtC15FindMyBluetooth11CBDiscovery_scanContinuation];
    swift_beginAccess();
    v63 = v92;
    sub_23B5866E4(v62, v92);
    v64 = (*((uint64_t (**)(uint64_t, uint64_t, uint64_t))v7 + 6))(v63, 1, v6);
    v65 = v93;
    if (v64)
    {
      sub_23B5F5210(v93);
      v41 = v63;
      goto LABEL_13;
    }
    v66 = v89;
    (*((void (**)(char *, uint64_t, uint64_t))v7 + 2))(v89, v63, v6);
    sub_23B587ED4(v63, &qword_256A342B8);
    v94[0] = 0;
    sub_23B601B20();
    sub_23B5F5210(v65);
LABEL_16:
    (*((void (**)(char *, uint64_t))v7 + 1))(v66, v6);
    goto LABEL_17;
  }
  v95 = (uint64_t)a1;
  v37 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A34490);
  swift_willThrowTypedImpl();
  v38 = (uint64_t)&v3[OBJC_IVAR____TtC15FindMyBluetooth11CBDiscovery_scanContinuation];
  swift_beginAccess();
  v39 = v38;
  v40 = (uint64_t)v91;
  sub_23B5866E4(v39, (uint64_t)v91);
  if (!(*((unsigned int (**)(uint64_t, uint64_t, uint64_t))v7 + 6))(v40, 1, v6))
  {
    v66 = v89;
    (*((void (**)(char *, uint64_t, uint64_t))v7 + 2))(v89, v40, v6);
    sub_23B587ED4(v40, &qword_256A342B8);
    v94[0] = (uint64_t)a1;
    sub_23B601B20();
    goto LABEL_16;
  }
  sub_23B5F5210(a1);
  v41 = v40;
LABEL_13:
  sub_23B587ED4(v41, &qword_256A342B8);
LABEL_17:
  (*((void (**)(char *, uint64_t, uint64_t, uint64_t))v7 + 7))(v22, 1, 1, v6);
  v67 = (uint64_t)&v3[OBJC_IVAR____TtC15FindMyBluetooth11CBDiscovery_scanContinuation];
  swift_beginAccess();
  sub_23B587CB4((uint64_t)v22, v67);
  return swift_endAccess();
}

void sub_23B5EE5C0(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t sub_23B5EE634(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v3 + 160) = a1;
  *(_QWORD *)(v3 + 168) = v2;
  *(_QWORD *)(v3 + 176) = *v2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A342B0);
  *(_QWORD *)(v3 + 184) = v5;
  *(_QWORD *)(v3 + 192) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v3 + 200) = swift_task_alloc();
  v6 = type metadata accessor for CBDiscovery.OOBKeyInfo(0);
  *(_QWORD *)(v3 + 208) = v6;
  *(_QWORD *)(v3 + 216) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v3 + 224) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A342B8);
  v7 = swift_task_alloc();
  *(_BYTE *)(v3 + 272) = *(_BYTE *)a2;
  v8 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(v3 + 232) = v7;
  *(_QWORD *)(v3 + 240) = v8;
  *(_OWORD *)(v3 + 248) = *(_OWORD *)(a2 + 16);
  return swift_task_switch();
}

uint64_t sub_23B5EE704()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _BYTE *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  void *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v1 = *(_QWORD *)(v0 + 232);
  v2 = *(_QWORD *)(v0 + 168) + OBJC_IVAR____TtC15FindMyBluetooth11CBDiscovery_scanContinuation;
  swift_beginAccess();
  sub_23B5866E4(v2, v1);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34288);
  LODWORD(v2) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v1, 1, v3);
  sub_23B587ED4(v1, &qword_256A342B8);
  if ((_DWORD)v2 == 1)
  {
    if (qword_256A340D8 != -1)
      swift_once();
    v4 = sub_23B60185C();
    __swift_project_value_buffer(v4, (uint64_t)qword_256A36450);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v5 = sub_23B601844();
    v6 = sub_23B601B8C();
    v7 = os_log_type_enabled(v5, v6);
    v8 = *(_QWORD *)(v0 + 248);
    v9 = *(_QWORD *)(v0 + 256);
    v44 = v0;
    if (v7)
    {
      v43 = *(_QWORD *)(v0 + 240);
      v10 = *(_BYTE *)(v0 + 272);
      v11 = swift_slowAlloc();
      v12 = swift_slowAlloc();
      v45 = v12;
      *(_DWORD *)v11 = 136446466;
      *(_QWORD *)(v44 + 144) = sub_23B58E160(0x6E6F63286E616373, 0xED0000293A676966, &v45);
      sub_23B601BC8();
      *(_WORD *)(v11 + 12) = 2082;
      LOBYTE(v46) = v10;
      v47 = v43;
      v48 = v8;
      v49 = v9;
      v13 = CBDiscovery.Config.description.getter();
      *(_QWORD *)(v44 + 152) = sub_23B58E160(v13, v14, &v45);
      v0 = v44;
      sub_23B601BC8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23B583000, v5, v6, "%{public}s with config %{public}s", (uint8_t *)v11, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B868A2C](v12, -1, -1);
      MEMORY[0x23B868A2C](v11, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    v17 = *(_QWORD *)(v0 + 256);
    v18 = *(_QWORD *)(v0 + 240);
    v19 = *(_QWORD *)(v0 + 168);
    v20 = *(void **)(v19 + 112);
    if (*(_BYTE *)(v0 + 272))
      v21 = 589825;
    else
      v21 = 589824;
    objc_msgSend(*(id *)(v19 + 112), sel_setUseCase_, v21);
    objc_msgSend(v20, sel_setDiscoveryFlags_, v18);
    v22 = *(_QWORD *)(v17 + 16);
    if (v22)
    {
      v23 = *(_QWORD *)(v0 + 256);
      v24 = *(_QWORD *)(v0 + 216);
      v42 = v20;
      v43 = *(_QWORD *)(v0 + 208);
      v46 = MEMORY[0x24BEE4AF8];
      swift_bridgeObjectRetain();
      sub_23B601CAC();
      v25 = v23 + ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80));
      v26 = *(_QWORD *)(v24 + 72);
      do
      {
        v27 = *(_QWORD *)(v0 + 224);
        sub_23B5F22D4(v25, v27, type metadata accessor for CBDiscovery.OOBKeyInfo);
        v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBB270]), sel_init);
        v29 = (void *)sub_23B60173C();
        objc_msgSend(v28, sel_setIrkData_, v29);

        v30 = sub_23B601610();
        v32 = v31;
        v33 = (void *)sub_23B60173C();
        v0 = v44;
        sub_23B5A2990(v30, v32);
        objc_msgSend(v28, sel_setBtAddressData_, v33);

        objc_msgSend(v28, sel_setAddressType_, sub_23B601628() & 1);
        sub_23B5A3CA0(v27, type metadata accessor for CBDiscovery.OOBKeyInfo);
        sub_23B601C94();
        sub_23B601CB8();
        sub_23B601CC4();
        sub_23B601CA0();
        v25 += v26;
        --v22;
      }
      while (v22);
      swift_bridgeObjectRelease();
      v20 = v42;
    }
    v34 = *(_QWORD *)(v0 + 248);
    sub_23B5EEE60();
    v35 = (void *)sub_23B6019D0();
    swift_bridgeObjectRelease();
    objc_msgSend(v20, sel_setOobKeys_, v35);

    v36 = *(_QWORD *)(v34 + 16);
    if (v36)
    {
      swift_bridgeObjectRetain();
      do
      {
        objc_msgSend(v20, sel_addDiscoveryType_, 14, v42, v43);
        --v36;
      }
      while (v36);
      swift_bridgeObjectRelease();
    }
    v37 = *(_QWORD *)(v0 + 192);
    v38 = *(_QWORD *)(v0 + 200);
    v39 = *(_QWORD *)(v0 + 184);
    *(_OWORD *)(swift_task_alloc() + 16) = *(_OWORD *)(v0 + 168);
    type metadata accessor for DeviceChange(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v37 + 104))(v38, *MEMORY[0x24BEE6CA0], v39);
    sub_23B601B44();
    swift_task_dealloc();
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_23B5EED28;
    v40 = swift_continuation_init();
    *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
    v41 = (_QWORD *)(v0 + 80);
    v41[1] = 0x40000000;
    v41[2] = sub_23B5EF1E8;
    v41[3] = &block_descriptor_10;
    v41[4] = v40;
    objc_msgSend(v20, sel_activateWithCompletion_, v41);
    return swift_continuation_await();
  }
  else
  {
    sub_23B586900();
    swift_allocError();
    *v15 = 1;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23B5EED28()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 264) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_23B5EED88()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5EEDD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 160);
  swift_willThrow();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34460);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for CBDiscovery.OOBKeyInfo(uint64_t a1)
{
  return sub_23B5E47D4(a1, qword_256A36788);
}

unint64_t sub_23B5EEE60()
{
  unint64_t result;

  result = qword_256A36488;
  if (!qword_256A36488)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256A36488);
  }
  return result;
}

uint64_t sub_23B5EEE9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A342B8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34288);
  v10 = *(_QWORD *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v8, a1, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  v11 = a2 + OBJC_IVAR____TtC15FindMyBluetooth11CBDiscovery_scanContinuation;
  swift_beginAccess();
  sub_23B587CB4((uint64_t)v8, v11);
  swift_endAccess();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a2;
  *(_QWORD *)(v12 + 24) = a3;
  swift_retain();
  return sub_23B601B08();
}

uint64_t sub_23B5EEFBC(uint64_t a1)
{
  uint64_t v1;

  return sub_23B5EEE9C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t type metadata accessor for DeviceChange(uint64_t a1)
{
  return sub_23B5E47D4(a1, qword_2542FCCA0);
}

uint64_t sub_23B5EEFD8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  if (qword_256A340D8 != -1)
    swift_once();
  v3 = sub_23B60185C();
  __swift_project_value_buffer(v3, (uint64_t)qword_256A36450);
  v4 = sub_23B601844();
  v5 = sub_23B601B5C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_23B583000, v4, v5, "Scan termination", v6, 2u);
    MEMORY[0x23B868A2C](v6, -1, -1);
  }

  sub_23B601658();
  swift_retain();
  MEMORY[0x23B867C10]("CBDiscovery.onTermination", 25, 2, &unk_256A36858, a2);
  return swift_release();
}

uint64_t sub_23B5EF0E0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_23B5EF0F8()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;

  if (qword_256A340D8 != -1)
    swift_once();
  v1 = sub_23B60185C();
  __swift_project_value_buffer(v1, (uint64_t)qword_256A36450);
  v2 = sub_23B601844();
  v3 = sub_23B601B8C();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_23B583000, v2, v3, "Calling CBDiscovery.finish()", v4, 2u);
    MEMORY[0x23B868A2C](v4, -1, -1);
  }
  v5 = *(_QWORD *)(v0 + 16);

  objc_msgSend(*(id *)(v5 + 112), sel_finish);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5EF1E8(uint64_t a1, void *a2)
{
  _QWORD *v3;
  id v4;

  if (!a2)
    return swift_continuation_throwingResume();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A34490);
  swift_allocError();
  *v3 = a2;
  v4 = a2;
  return swift_continuation_throwingResumeWithError();
}

uint64_t CBDiscovery.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23B587ED4(v0 + OBJC_IVAR____TtC15FindMyBluetooth11CBDiscovery_scanContinuation, &qword_256A342B8);
  v1 = v0 + OBJC_IVAR____TtC15FindMyBluetooth11CBDiscovery_id;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34270);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_defaultActor_destroy();
  return v0;
}

uint64_t CBDiscovery.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23B587ED4(v0 + OBJC_IVAR____TtC15FindMyBluetooth11CBDiscovery_scanContinuation, &qword_256A342B8);
  v1 = v0 + OBJC_IVAR____TtC15FindMyBluetooth11CBDiscovery_id;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34270);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t CBDiscovery.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23B5EF348(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23B587844;
  return sub_23B5EE634(a1, a2);
}

uint64_t sub_23B5EF3A8@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC15FindMyBluetooth11CBDiscovery_id;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A34270);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_23B5EF3F4()
{
  return sub_23B5EC2CC(type metadata accessor for CBDiscovery, &qword_256A365C8, (uint64_t)&protocol conformance descriptor for CBDiscovery);
}

uint64_t DeviceChange.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(_QWORD);
  uint64_t v13;
  _QWORD v15[2];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A363D0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Device();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DeviceChange(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B5F22D4(v1, (uint64_t)v11, v12);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v11, v2);
    v15[0] = 0x2874736F6C2ELL;
    v15[1] = 0xE600000000000000;
    sub_23B58F61C(&qword_256A363E0, &qword_256A363D0, MEMORY[0x24BE316E8]);
    sub_23B601DE4();
    sub_23B601958();
    swift_bridgeObjectRelease();
    v13 = v15[0];
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    sub_23B5F2318((uint64_t)v11, (uint64_t)v8);
    strcpy((char *)v15, ".discovered(");
    BYTE5(v15[1]) = 0;
    HIWORD(v15[1]) = -5120;
    Device.description.getter();
    sub_23B601958();
    swift_bridgeObjectRelease();
    v13 = v15[0];
    sub_23B5A3CA0((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for Device);
  }
  return v13;
}

BOOL static CBDiscovery.Error.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t CBDiscovery.Error.hash(into:)()
{
  return sub_23B601E98();
}

uint64_t CBDiscovery.Error.hashValue.getter()
{
  sub_23B601E8C();
  sub_23B601E98();
  return sub_23B601EB0();
}

_BYTE *CBDiscovery.Config.init(useCase:discoveryFlags:discoveryTypes:oobKeys:)@<X0>(_BYTE *result@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;

  v5 = *a2;
  *(_BYTE *)a5 = *result;
  *(_QWORD *)(a5 + 8) = v5;
  *(_QWORD *)(a5 + 16) = a3;
  *(_QWORD *)(a5 + 24) = a4;
  return result;
}

uint64_t CBDiscovery.Config.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23B601C40();
  sub_23B601958();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  CBDiscovery.DiscoveryFlags.description.getter();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  v0 = swift_bridgeObjectRetain();
  MEMORY[0x23B867FAC](v0, &type metadata for CBDiscovery.DiscoveryType);
  sub_23B601958();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23B601958();
  v1 = type metadata accessor for CBDiscovery.OOBKeyInfo(0);
  v2 = swift_bridgeObjectRetain();
  MEMORY[0x23B867FAC](v2, v1);
  sub_23B601958();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23B601958();
  return 0;
}

BOOL static CBDiscovery.UseCase.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_23B5EF8B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v13;
  _QWORD v14[7];
  uint64_t v15;
  char *v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  v4 = type metadata accessor for CBDiscovery.OOBKeyInfo(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v10 = *(_QWORD *)(a1 + 16);
  if (v10 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v10 || a1 == a2)
    return 1;
  v11 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v14[6] = *(_QWORD *)(v8 + 72);
  v15 = (uint64_t)v14 - v9;
  v14[3] = v4;
  v16 = v7;
  sub_23B5F22D4(a1 + v11, (uint64_t)v14 - v9, type metadata accessor for CBDiscovery.OOBKeyInfo);
  sub_23B5F22D4(a2 + v11, (uint64_t)v7, type metadata accessor for CBDiscovery.OOBKeyInfo);
  v13 = sub_23B601604();
  if ((v13 & 1) != 0)
    __asm { BR              X10 }
  sub_23B5A3CA0((uint64_t)v16, type metadata accessor for CBDiscovery.OOBKeyInfo);
  sub_23B5A3CA0(v15, type metadata accessor for CBDiscovery.OOBKeyInfo);
  return 0;
}

uint64_t sub_23B5F02B0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23B5F02E0 + 4 * byte_23B609300[*v0]))(0x65736143657375, 0xE700000000000000);
}

uint64_t sub_23B5F02E0()
{
  return 0x7265766F63736964;
}

uint64_t sub_23B5F0314()
{
  return 0x7379654B626F6FLL;
}

uint64_t sub_23B5F0328@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23B5F4D7C(a1, a2);
  *a3 = result;
  return result;
}

void sub_23B5F034C(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_23B5F0358()
{
  sub_23B5F2A2C();
  return sub_23B601F7C();
}

uint64_t sub_23B5F0380()
{
  sub_23B5F2A2C();
  return sub_23B601F88();
}

uint64_t CBDiscovery.Config.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A36490);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v9 = *((_QWORD *)v1 + 1);
  v14 = *((_QWORD *)v1 + 2);
  v15 = v9;
  v13 = *((_QWORD *)v1 + 3);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B5F2A2C();
  sub_23B601ED4();
  LOBYTE(v16) = v8;
  v17 = 0;
  sub_23B5F2A70();
  sub_23B601DC0();
  if (!v2)
  {
    v10 = v13;
    v11 = v14;
    v16 = v15;
    v17 = 1;
    sub_23B5F2AB4();
    sub_23B601DC0();
    v16 = v11;
    v17 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A364B0);
    sub_23B5F2BC4(&qword_256A364B8, (uint64_t (*)(void))sub_23B5F2AF8, MEMORY[0x24BEE12A0]);
    sub_23B601DC0();
    v16 = v10;
    v17 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A364C8);
    sub_23B5F2C70(&qword_256A364D0, &qword_256A364D8, (uint64_t)&protocol conformance descriptor for CBDiscovery.OOBKeyInfo, MEMORY[0x24BEE12A0]);
    sub_23B601DC0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t CBDiscovery.Config.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  char v17;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A364E0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B5F2A2C();
  sub_23B601EC8();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v17 = 0;
  sub_23B5F2B3C();
  sub_23B601D90();
  v9 = v16;
  v17 = 1;
  sub_23B5F2B80();
  sub_23B601D90();
  v10 = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A364B0);
  v17 = 2;
  sub_23B5F2BC4(&qword_256A364F8, (uint64_t (*)(void))sub_23B5F2C2C, MEMORY[0x24BEE12D0]);
  sub_23B601D90();
  v15 = v10;
  v11 = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A364C8);
  v17 = 3;
  sub_23B5F2C70(&qword_256A36508, &qword_256A36510, (uint64_t)&protocol conformance descriptor for CBDiscovery.OOBKeyInfo, MEMORY[0x24BEE12D0]);
  swift_bridgeObjectRetain();
  sub_23B601D90();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v12 = v15;
  v13 = v16;
  *(_BYTE *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v12;
  *(_QWORD *)(a2 + 16) = v11;
  *(_QWORD *)(a2 + 24) = v13;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23B5F0868@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return CBDiscovery.Config.init(from:)(a1, a2);
}

uint64_t sub_23B5F087C(_QWORD *a1)
{
  return CBDiscovery.Config.encode(to:)(a1);
}

unint64_t CBDiscovery.UseCase.description.getter()
{
  return 0xD000000000000011;
}

uint64_t CBDiscovery.UseCase.hash(into:)()
{
  return sub_23B601E98();
}

unint64_t sub_23B5F08F0()
{
  return 0xD000000000000010;
}

uint64_t sub_23B5F0920@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23B5F4F74(a1, a2);
  *a3 = result;
  return result;
}

void sub_23B5F0944(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_23B5F0950()
{
  sub_23B5F2CF4();
  return sub_23B601F7C();
}

uint64_t sub_23B5F0978()
{
  sub_23B5F2CF4();
  return sub_23B601F88();
}

uint64_t sub_23B5F09A0()
{
  return 0;
}

void sub_23B5F09AC(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_23B5F09B8()
{
  sub_23B5F2D38();
  return sub_23B601F7C();
}

uint64_t sub_23B5F09E0()
{
  sub_23B5F2D38();
  return sub_23B601F88();
}

uint64_t sub_23B5F0A08()
{
  sub_23B5F2D7C();
  return sub_23B601F7C();
}

uint64_t sub_23B5F0A30()
{
  sub_23B5F2D7C();
  return sub_23B601F88();
}

void *static CBDiscovery.UseCase.allCases.getter()
{
  return &unk_250C81138;
}

uint64_t CBDiscovery.UseCase.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A36518);
  v16 = *(_QWORD *)(v3 - 8);
  v17 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A36520);
  v14 = *(_QWORD *)(v6 - 8);
  v15 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A36528);
  v18 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B5F2CF4();
  sub_23B601ED4();
  if ((v12 & 1) != 0)
  {
    v20 = 1;
    sub_23B5F2D38();
    sub_23B601DA8();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {
    v19 = 0;
    sub_23B5F2D7C();
    sub_23B601DA8();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v11, v9);
}

uint64_t CBDiscovery.UseCase.hashValue.getter()
{
  sub_23B601E8C();
  sub_23B601E98();
  return sub_23B601EB0();
}

uint64_t CBDiscovery.UseCase.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;

  v30 = a2;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A36548);
  v32 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A36550);
  v4 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A36558);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B5F2CF4();
  v11 = v33;
  sub_23B601EC8();
  if (v11)
    goto LABEL_7;
  v26 = v4;
  v27 = a1;
  v12 = v31;
  v13 = v32;
  v33 = v8;
  v14 = sub_23B601D9C();
  v15 = v7;
  if (*(_QWORD *)(v14 + 16) != 1)
  {
    v19 = sub_23B601C7C();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A36560);
    *v21 = &type metadata for CBDiscovery.UseCase;
    sub_23B601D78();
    sub_23B601C70();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v15);
    a1 = v27;
LABEL_7:
    v24 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_0(v24);
  }
  v16 = *(_BYTE *)(v14 + 32);
  if ((v16 & 1) != 0)
  {
    LODWORD(v28) = *(unsigned __int8 *)(v14 + 32);
    v35 = 1;
    sub_23B5F2D38();
    sub_23B601D6C();
    v17 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v12, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v15);
    v16 = v28;
  }
  else
  {
    v34 = 0;
    sub_23B5F2D7C();
    v22 = v6;
    sub_23B601D6C();
    v23 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v22, v28);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v15);
  }
  *v18 = v16;
  v24 = (uint64_t)v27;
  return __swift_destroy_boxed_opaque_existential_0(v24);
}

uint64_t sub_23B5F0FD4@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return CBDiscovery.UseCase.init(from:)(a1, a2);
}

uint64_t sub_23B5F0FE8(_QWORD *a1)
{
  return CBDiscovery.UseCase.encode(to:)(a1);
}

void sub_23B5F0FFC(_QWORD *a1@<X8>)
{
  *a1 = &unk_250C81160;
}

BOOL sub_23B5F100C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

unint64_t sub_23B5F1024()
{
  return 0xD000000000000011;
}

uint64_t CBDiscovery.DiscoveryFlags.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t CBDiscovery.DiscoveryFlags.init(rawValue:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

void static CBDiscovery.DiscoveryFlags.rssi.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x200000000;
}

void *static CBDiscovery.DiscoveryFlags.allCases.getter()
{
  return &unk_250C81188;
}

uint64_t CBDiscovery.DiscoveryFlags.description.getter()
{
  uint64_t v0;
  _QWORD *v1;
  unint64_t v2;
  unint64_t v3;
  _QWORD *v4;

  if ((*(_BYTE *)(v0 + 4) & 2) != 0)
  {
    v1 = sub_23B58548C(0, 1, 1, MEMORY[0x24BEE4AF8]);
    v3 = v1[2];
    v2 = v1[3];
    if (v3 >= v2 >> 1)
      v1 = sub_23B58548C((_QWORD *)(v2 > 1), v3 + 1, 1, v1);
    v1[2] = v3 + 1;
    v4 = &v1[2 * v3];
    v4[4] = 0x697373722ELL;
    v4[5] = 0xE500000000000000;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A340F0);
  sub_23B58F61C((unint64_t *)&qword_256A340F8, &qword_256A340F0, MEMORY[0x24BEE12B0]);
  sub_23B6018E0();
  swift_bridgeObjectRelease();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  return 91;
}

uint64_t sub_23B5F11B0()
{
  sub_23B5F3078();
  return sub_23B6019AC();
}

uint64_t sub_23B5F120C()
{
  sub_23B5F3078();
  return sub_23B601994();
}

void sub_23B5F1258(_QWORD *a1@<X8>)
{
  *a1 = &unk_250C811B0;
}

unint64_t CBDiscovery.DiscoveryType.description.getter()
{
  return 0xD000000000000010;
}

uint64_t CBDiscovery.DiscoveryType.hash(into:)()
{
  return sub_23B601E98();
}

uint64_t static CBDiscovery.DiscoveryType.== infix(_:_:)()
{
  return 1;
}

uint64_t sub_23B5F12B4()
{
  return 1;
}

uint64_t sub_23B5F12C0()
{
  return sub_23B601E98();
}

uint64_t sub_23B5F12E8()
{
  return 0x6341794D646E6966;
}

uint64_t sub_23B5F130C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6341794D646E6966 && a2 == 0xEF79726F73736563)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_23B601DFC();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_23B5F13C4()
{
  sub_23B5F2DC0();
  return sub_23B601F7C();
}

uint64_t sub_23B5F13EC()
{
  sub_23B5F2DC0();
  return sub_23B601F88();
}

uint64_t sub_23B5F1414@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_23B5F1440()
{
  sub_23B5F2E04();
  return sub_23B601F7C();
}

uint64_t sub_23B5F1468()
{
  sub_23B5F2E04();
  return sub_23B601F88();
}

uint64_t CBDiscovery.DiscoveryType.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A36568);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A36570);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B5F2DC0();
  sub_23B601ED4();
  sub_23B5F2E04();
  sub_23B601DA8();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t CBDiscovery.DiscoveryType.hashValue.getter()
{
  sub_23B601E8C();
  sub_23B601E98();
  return sub_23B601EB0();
}

uint64_t CBDiscovery.DiscoveryType.init(from:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A36588);
  v2 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A36590);
  v5 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B5F2DC0();
  v8 = v23;
  sub_23B601EC8();
  if (v8)
    goto LABEL_7;
  v20 = a1;
  v23 = v5;
  v10 = v21;
  v9 = v22;
  if (*(_QWORD *)(sub_23B601D9C() + 16) != 1)
  {
    v14 = sub_23B601C7C();
    swift_allocError();
    v16 = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A36560);
    *v16 = &type metadata for CBDiscovery.DiscoveryType;
    sub_23B601D78();
    sub_23B601C70();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v16, *MEMORY[0x24BEE26D0], v14);
    swift_willThrow();
    v17 = v23;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v7, v9);
    a1 = v20;
LABEL_7:
    v13 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_0(v13);
  }
  sub_23B5F2E04();
  v11 = v4;
  sub_23B601D6C();
  v12 = v23;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v11, v10);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
  v13 = (uint64_t)v20;
  return __swift_destroy_boxed_opaque_existential_0(v13);
}

uint64_t sub_23B5F1868()
{
  sub_23B601E8C();
  sub_23B601E98();
  return sub_23B601EB0();
}

uint64_t sub_23B5F18A8()
{
  sub_23B601E8C();
  sub_23B601E98();
  return sub_23B601EB0();
}

uint64_t sub_23B5F18E4(_QWORD *a1)
{
  return CBDiscovery.DiscoveryType.init(from:)(a1);
}

uint64_t sub_23B5F18F8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A36568);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A36570);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B5F2DC0();
  sub_23B601ED4();
  sub_23B5F2E04();
  sub_23B601DA8();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_23B5F1A34()
{
  return 0xD000000000000010;
}

uint64_t CBDiscovery.OOBKeyInfo.btAddress.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23B601634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t CBDiscovery.OOBKeyInfo.irkData.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for CBDiscovery.OOBKeyInfo(0) + 20);
  v2 = *(_QWORD *)v1;
  sub_23B5A294C(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  return v2;
}

void CBDiscovery.OOBKeyInfo.description.getter()
{
  uint64_t v0;
  char *v1;

  sub_23B601C40();
  swift_bridgeObjectRelease();
  sub_23B601634();
  sub_23B5884D4(&qword_256A34768, (uint64_t (*)(uint64_t))MEMORY[0x24BE31730], MEMORY[0x24BE31750]);
  sub_23B601DE4();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  v1 = (char *)&loc_23B5F1BB0
     + dword_23B5F1C54[*(_QWORD *)(v0 + *(int *)(type metadata accessor for CBDiscovery.OOBKeyInfo(0) + 20) + 8) >> 62];
  __asm { BR              X13 }
}

uint64_t sub_23B5F1BC0()
{
  uint64_t v1;

  sub_23B601DE4();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  return v1;
}

uint64_t CBDiscovery.OOBKeyInfo.init(btAddress:irkData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t result;
  _QWORD *v10;

  v8 = sub_23B601634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a4, a1, v8);
  result = type metadata accessor for CBDiscovery.OOBKeyInfo(0);
  v10 = (_QWORD *)(a4 + *(int *)(result + 20));
  *v10 = a2;
  v10[1] = a3;
  return result;
}

void static CBDiscovery.OOBKeyInfo.== infix(_:_:)(uint64_t a1)
{
  uint64_t v2;

  if ((sub_23B601604() & 1) != 0)
  {
    v2 = *(int *)(type metadata accessor for CBDiscovery.OOBKeyInfo(0) + 20);
    sub_23B5F289C(*(_QWORD *)(a1 + v2), *(_QWORD *)(a1 + v2 + 8));
  }
}

uint64_t sub_23B5F1D1C()
{
  _BYTE *v0;

  if (*v0)
    return 0x617461446B7269;
  else
    return 0x7365726464417462;
}

uint64_t sub_23B5F1D5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23B5F505C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23B5F1D80()
{
  sub_23B5F2E48();
  return sub_23B601F7C();
}

uint64_t sub_23B5F1DA8()
{
  sub_23B5F2E48();
  return sub_23B601F88();
}

uint64_t CBDiscovery.OOBKeyInfo.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];
  __int128 v11;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A36598);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B5F2E48();
  sub_23B601ED4();
  LOBYTE(v11) = 0;
  sub_23B601634();
  sub_23B5884D4(&qword_256A36400, (uint64_t (*)(uint64_t))MEMORY[0x24BE31730], MEMORY[0x24BE31740]);
  sub_23B601DC0();
  if (!v2)
  {
    v11 = *(_OWORD *)(v3 + *(int *)(type metadata accessor for CBDiscovery.OOBKeyInfo(0) + 20));
    v10[15] = 1;
    sub_23B5F2E8C();
    sub_23B601DC0();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t CBDiscovery.OOBKeyInfo.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  char v26;

  v20 = a2;
  v24 = sub_23B601634();
  v21 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v22 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A365B0);
  v5 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CBDiscovery.OOBKeyInfo(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B5F2E48();
  sub_23B601EC8();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v18 = a1;
  v19 = v5;
  v11 = (uint64_t)v10;
  v12 = v21;
  LOBYTE(v25) = 0;
  sub_23B5884D4(&qword_256A36420, (uint64_t (*)(uint64_t))MEMORY[0x24BE31730], MEMORY[0x24BE31748]);
  v14 = v22;
  v13 = v23;
  v15 = v24;
  sub_23B601D90();
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v11, v14, v15);
  v26 = 1;
  sub_23B5F2ED0();
  sub_23B601D90();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v13);
  *(_OWORD *)(v11 + *(int *)(v8 + 20)) = v25;
  sub_23B5F22D4(v11, v20, type metadata accessor for CBDiscovery.OOBKeyInfo);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v18);
  return sub_23B5A3CA0(v11, type metadata accessor for CBDiscovery.OOBKeyInfo);
}

uint64_t sub_23B5F21D0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return CBDiscovery.OOBKeyInfo.init(from:)(a1, a2);
}

uint64_t sub_23B5F21E4(_QWORD *a1)
{
  return CBDiscovery.OOBKeyInfo.encode(to:)(a1);
}

void sub_23B5F21F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((sub_23B601604() & 1) != 0)
    sub_23B5F289C(*(_QWORD *)(a1 + *(int *)(a3 + 20)), *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8));
}

uint64_t sub_23B5F2258()
{
  uint64_t v0;

  v0 = sub_23B60185C();
  __swift_allocate_value_buffer(v0, qword_256A3D0E0);
  __swift_project_value_buffer(v0, (uint64_t)qword_256A3D0E0);
  return sub_23B601850();
}

uint64_t sub_23B5F22D4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_23B5F2318(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Device();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_23B5F235C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

uint64_t sub_23B5F23BC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, __int16 a10, char __s2, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  BOOL *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  __int16 v43;
  char v44;
  char v45;
  char v46;
  char v47;

  v42 = v39;
  v43 = v40;
  v44 = BYTE2(v40);
  v45 = BYTE3(v40);
  v46 = BYTE4(v40);
  v47 = BYTE5(v40);
  if (!v38)
  {
    __break(1u);
    JUMPOUT(0x23B5F25A0);
  }
  result = memcmp(v38, &v42, BYTE6(v40));
  *v37 = (_DWORD)result == 0;
  return result;
}

void sub_23B5F25C4(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_23B5F2620()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v7;
  uint64_t v8;
  __int16 v9;
  char v10;
  char v11;
  char v12;
  char v13;

  v8 = v3;
  v9 = v4;
  v10 = BYTE2(v4);
  v11 = BYTE3(v4);
  v12 = BYTE4(v4);
  v13 = BYTE5(v4);
  sub_23B5F235C((uint64_t)&v8, (uint64_t)&v8 + BYTE6(v4), v1, v0);
  sub_23B5A2990(v1, v0);
  if (!v2)
    v5 = v7;
  return v5 & 1;
}

uint64_t sub_23B5F27E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  result = sub_23B601688();
  v11 = result;
  if (result)
  {
    result = sub_23B6016AC();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  v12 = __OFSUB__(a2, a1);
  v13 = a2 - a1;
  if (v12)
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = sub_23B6016A0();
  if (v14 >= v13)
    v15 = v13;
  else
    v15 = v14;
  v16 = v11 + v15;
  if (v11)
    v17 = v16;
  else
    v17 = 0;
  sub_23B5F235C(v11, v17, a4, a5);
  if (!v5)
    v18 = v19;
  return v18 & 1;
}

void sub_23B5F289C(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_23B5F28E0()
{
  unint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_23B5F2914 + dword_23B5F29D4[v0 >> 62]))();
}

uint64_t sub_23B5F2924@<X0>(uint64_t a1@<X8>)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  if (a1 == BYTE6(v1))
  {
    if (a1 < 1)
    {
      v5 = 1;
    }
    else
    {
      sub_23B5A294C(v2, v1);
      sub_23B5F25C4(v4, v3);
    }
  }
  else
  {
    v5 = 0;
  }
  return v5 & 1;
}

uint64_t _s15FindMyBluetooth11CBDiscoveryC6ConfigV2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  BOOL v2;

  v2 = *(unsigned __int8 *)a1 == *(unsigned __int8 *)a2 && a1[1] == a2[1];
  if (v2 && *(_QWORD *)(a1[2] + 16) == *(_QWORD *)(a2[2] + 16))
    return sub_23B5EF8B4(a1[3], a2[3]);
  else
    return 0;
}

unint64_t sub_23B5F2A2C()
{
  unint64_t result;

  result = qword_256A36498;
  if (!qword_256A36498)
  {
    result = MEMORY[0x23B868978](&unk_23B60A11C, &type metadata for CBDiscovery.Config.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A36498);
  }
  return result;
}

unint64_t sub_23B5F2A70()
{
  unint64_t result;

  result = qword_256A364A0;
  if (!qword_256A364A0)
  {
    result = MEMORY[0x23B868978](&protocol conformance descriptor for CBDiscovery.UseCase, &type metadata for CBDiscovery.UseCase);
    atomic_store(result, (unint64_t *)&qword_256A364A0);
  }
  return result;
}

unint64_t sub_23B5F2AB4()
{
  unint64_t result;

  result = qword_256A364A8;
  if (!qword_256A364A8)
  {
    result = MEMORY[0x23B868978](&protocol conformance descriptor for CBDiscovery.DiscoveryFlags, &type metadata for CBDiscovery.DiscoveryFlags);
    atomic_store(result, (unint64_t *)&qword_256A364A8);
  }
  return result;
}

unint64_t sub_23B5F2AF8()
{
  unint64_t result;

  result = qword_256A364C0;
  if (!qword_256A364C0)
  {
    result = MEMORY[0x23B868978](&protocol conformance descriptor for CBDiscovery.DiscoveryType, &type metadata for CBDiscovery.DiscoveryType);
    atomic_store(result, (unint64_t *)&qword_256A364C0);
  }
  return result;
}

unint64_t sub_23B5F2B3C()
{
  unint64_t result;

  result = qword_256A364E8;
  if (!qword_256A364E8)
  {
    result = MEMORY[0x23B868978](&protocol conformance descriptor for CBDiscovery.UseCase, &type metadata for CBDiscovery.UseCase);
    atomic_store(result, (unint64_t *)&qword_256A364E8);
  }
  return result;
}

unint64_t sub_23B5F2B80()
{
  unint64_t result;

  result = qword_256A364F0;
  if (!qword_256A364F0)
  {
    result = MEMORY[0x23B868978](&protocol conformance descriptor for CBDiscovery.DiscoveryFlags, &type metadata for CBDiscovery.DiscoveryFlags);
    atomic_store(result, (unint64_t *)&qword_256A364F0);
  }
  return result;
}

uint64_t sub_23B5F2BC4(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A364B0);
    v8 = a2();
    result = MEMORY[0x23B868978](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23B5F2C2C()
{
  unint64_t result;

  result = qword_256A36500;
  if (!qword_256A36500)
  {
    result = MEMORY[0x23B868978](&protocol conformance descriptor for CBDiscovery.DiscoveryType, &type metadata for CBDiscovery.DiscoveryType);
    atomic_store(result, (unint64_t *)&qword_256A36500);
  }
  return result;
}

uint64_t sub_23B5F2C70(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A364C8);
    v10 = sub_23B5884D4(a2, type metadata accessor for CBDiscovery.OOBKeyInfo, a3);
    result = MEMORY[0x23B868978](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23B5F2CF4()
{
  unint64_t result;

  result = qword_256A36530;
  if (!qword_256A36530)
  {
    result = MEMORY[0x23B868978](&unk_23B60A0CC, &type metadata for CBDiscovery.UseCase.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A36530);
  }
  return result;
}

unint64_t sub_23B5F2D38()
{
  unint64_t result;

  result = qword_256A36538;
  if (!qword_256A36538)
  {
    result = MEMORY[0x23B868978](&unk_23B60A07C, &type metadata for CBDiscovery.UseCase.FindNearbyPencilCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A36538);
  }
  return result;
}

unint64_t sub_23B5F2D7C()
{
  unint64_t result;

  result = qword_256A36540;
  if (!qword_256A36540)
  {
    result = MEMORY[0x23B868978](&unk_23B60A02C, &type metadata for CBDiscovery.UseCase.FindNearbyRemoteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A36540);
  }
  return result;
}

unint64_t sub_23B5F2DC0()
{
  unint64_t result;

  result = qword_256A36578;
  if (!qword_256A36578)
  {
    result = MEMORY[0x23B868978](&unk_23B609FDC, &type metadata for CBDiscovery.DiscoveryType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A36578);
  }
  return result;
}

unint64_t sub_23B5F2E04()
{
  unint64_t result;

  result = qword_256A36580;
  if (!qword_256A36580)
  {
    result = MEMORY[0x23B868978](&unk_23B609F8C, &type metadata for CBDiscovery.DiscoveryType.FindMyAccessoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A36580);
  }
  return result;
}

unint64_t sub_23B5F2E48()
{
  unint64_t result;

  result = qword_256A365A0;
  if (!qword_256A365A0)
  {
    result = MEMORY[0x23B868978](&unk_23B609F3C, &type metadata for CBDiscovery.OOBKeyInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A365A0);
  }
  return result;
}

unint64_t sub_23B5F2E8C()
{
  unint64_t result;

  result = qword_256A365A8;
  if (!qword_256A365A8)
  {
    result = MEMORY[0x23B868978](MEMORY[0x24BDCDDF8], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_256A365A8);
  }
  return result;
}

unint64_t sub_23B5F2ED0()
{
  unint64_t result;

  result = qword_256A365B8;
  if (!qword_256A365B8)
  {
    result = MEMORY[0x23B868978](MEMORY[0x24BDCDE38], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_256A365B8);
  }
  return result;
}

uint64_t sub_23B5F2F14(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_23B5884D4(&qword_256A365C8, type metadata accessor for CBDiscovery, (uint64_t)&protocol conformance descriptor for CBDiscovery);
  a1[2] = sub_23B5884D4(&qword_256A365D0, type metadata accessor for CBDiscovery, (uint64_t)&protocol conformance descriptor for CBDiscovery);
  result = sub_23B5884D4(&qword_256A365D8, type metadata accessor for CBDiscovery, (uint64_t)&protocol conformance descriptor for CBDiscovery);
  a1[3] = result;
  return result;
}

uint64_t sub_23B5F2F8C()
{
  return sub_23B58F61C((unint64_t *)&qword_256A342E8, &qword_256A34270, MEMORY[0x24BE316D0]);
}

unint64_t sub_23B5F2FBC()
{
  unint64_t result;

  result = qword_256A365E0;
  if (!qword_256A365E0)
  {
    result = MEMORY[0x23B868978](&protocol conformance descriptor for CBDiscovery.Error, &type metadata for CBDiscovery.Error);
    atomic_store(result, (unint64_t *)&qword_256A365E0);
  }
  return result;
}

unint64_t sub_23B5F3004()
{
  unint64_t result;

  result = qword_256A365E8;
  if (!qword_256A365E8)
  {
    result = MEMORY[0x23B868978](&protocol conformance descriptor for CBDiscovery.UseCase, &type metadata for CBDiscovery.UseCase);
    atomic_store(result, (unint64_t *)&qword_256A365E8);
  }
  return result;
}

uint64_t sub_23B5F3048()
{
  return sub_23B58F61C(&qword_256A365F0, &qword_256A365F8, MEMORY[0x24BEE12E0]);
}

unint64_t sub_23B5F3078()
{
  unint64_t result;

  result = qword_256A36600;
  if (!qword_256A36600)
  {
    result = MEMORY[0x23B868978](&protocol conformance descriptor for CBDiscovery.DiscoveryFlags, &type metadata for CBDiscovery.DiscoveryFlags);
    atomic_store(result, (unint64_t *)&qword_256A36600);
  }
  return result;
}

unint64_t sub_23B5F30C0()
{
  unint64_t result;

  result = qword_256A36608;
  if (!qword_256A36608)
  {
    result = MEMORY[0x23B868978](&protocol conformance descriptor for CBDiscovery.DiscoveryFlags, &type metadata for CBDiscovery.DiscoveryFlags);
    atomic_store(result, (unint64_t *)&qword_256A36608);
  }
  return result;
}

uint64_t sub_23B5F3104()
{
  return sub_23B58F61C(&qword_256A36610, &qword_256A36618, MEMORY[0x24BEE12E0]);
}

unint64_t sub_23B5F3134()
{
  unint64_t result;

  result = qword_256A36620;
  if (!qword_256A36620)
  {
    result = MEMORY[0x23B868978](&protocol conformance descriptor for CBDiscovery.DiscoveryFlags, &type metadata for CBDiscovery.DiscoveryFlags);
    atomic_store(result, (unint64_t *)&qword_256A36620);
  }
  return result;
}

unint64_t sub_23B5F317C()
{
  unint64_t result;

  result = qword_256A36628;
  if (!qword_256A36628)
  {
    result = MEMORY[0x23B868978](&protocol conformance descriptor for CBDiscovery.DiscoveryFlags, &type metadata for CBDiscovery.DiscoveryFlags);
    atomic_store(result, (unint64_t *)&qword_256A36628);
  }
  return result;
}

unint64_t sub_23B5F31C4()
{
  unint64_t result;

  result = qword_256A36630;
  if (!qword_256A36630)
  {
    result = MEMORY[0x23B868978](&protocol conformance descriptor for CBDiscovery.DiscoveryType, &type metadata for CBDiscovery.DiscoveryType);
    atomic_store(result, (unint64_t *)&qword_256A36630);
  }
  return result;
}

uint64_t sub_23B5F3208()
{
  return type metadata accessor for CBDiscovery(0);
}

void sub_23B5F3210()
{
  unint64_t v0;
  unint64_t v1;

  sub_23B587C5C();
  if (v0 <= 0x3F)
  {
    sub_23B5C9EBC(319, (unint64_t *)&qword_256A34338, (void (*)(uint64_t))type metadata accessor for CBDiscovery);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for CBDiscovery()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CBDiscovery.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(v0 + 136) + *(_QWORD *)(v0 + 136));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_23B5F5394;
  return v4();
}

uint64_t dispatch thunk of CBDiscovery.scan(config:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 144) + *(_QWORD *)(*(_QWORD *)v2 + 144));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_23B587844;
  return v8(a1, a2);
}

uint64_t *initializeBufferWithCopyOfBuffer for DeviceChange(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unsigned __int8 *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A363D0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    if (EnumCaseMultiPayload != 1)
    {
      v9 = type metadata accessor for Device();
      v10 = *(int *)(v9 + 20);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_23B601634();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
      v14 = *(int *)(v9 + 24);
      v15 = (char *)a1 + v14;
      v16 = (unsigned __int8 *)a2 + v14;
      v17 = *v16;
      if (v17 == 8)
      {
        *(_OWORD *)v15 = *(_OWORD *)v16;
        *((_QWORD *)v15 + 2) = *((_QWORD *)v16 + 2);
      }
      else
      {
        *v15 = v17;
        v18 = *((_QWORD *)v16 + 1);
        v19 = *((_QWORD *)v16 + 2);
        sub_23B5A294C(v18, v19);
        *((_QWORD *)v15 + 1) = v18;
        *((_QWORD *)v15 + 2) = v19;
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for DeviceChange(uint64_t a1)
{
  int EnumCaseMultiPayload;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A363D0);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  if (EnumCaseMultiPayload != 1)
  {
    v5 = type metadata accessor for Device();
    v6 = a1 + *(int *)(v5 + 20);
    v7 = sub_23B601634();
    result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
    v8 = a1 + *(int *)(v5 + 24);
    if (*(_BYTE *)v8 != 8)
      return sub_23B5A2990(*(_QWORD *)(v8 + 8), *(_QWORD *)(v8 + 16));
  }
  return result;
}

uint64_t initializeWithCopy for DeviceChange(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A363D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
  if (EnumCaseMultiPayload != 1)
  {
    v6 = type metadata accessor for Device();
    v7 = *(int *)(v6 + 20);
    v8 = a1 + v7;
    v9 = a2 + v7;
    v10 = sub_23B601634();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = *(int *)(v6 + 24);
    v12 = a1 + v11;
    v13 = (unsigned __int8 *)(a2 + v11);
    v14 = *v13;
    if (v14 == 8)
    {
      *(_OWORD *)v12 = *(_OWORD *)v13;
      *(_QWORD *)(v12 + 16) = *((_QWORD *)v13 + 2);
    }
    else
    {
      *(_BYTE *)v12 = v14;
      v15 = *((_QWORD *)v13 + 1);
      v16 = *((_QWORD *)v13 + 2);
      sub_23B5A294C(v15, v16);
      *(_QWORD *)(v12 + 8) = v15;
      *(_QWORD *)(v12 + 16) = v16;
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for DeviceChange(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  unint64_t v17;

  if (a1 != a2)
  {
    sub_23B5A3CA0(a1, type metadata accessor for DeviceChange);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A363D0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
    if (EnumCaseMultiPayload != 1)
    {
      v6 = type metadata accessor for Device();
      v7 = *(int *)(v6 + 20);
      v8 = a1 + v7;
      v9 = a2 + v7;
      v10 = sub_23B601634();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
      v11 = *(int *)(v6 + 24);
      v12 = a1 + v11;
      v13 = (unsigned __int8 *)(a2 + v11);
      v14 = *v13;
      if (v14 == 8)
      {
        v15 = *(_OWORD *)v13;
        *(_QWORD *)(v12 + 16) = *((_QWORD *)v13 + 2);
        *(_OWORD *)v12 = v15;
      }
      else
      {
        *(_BYTE *)v12 = v14;
        v16 = *((_QWORD *)v13 + 1);
        v17 = *((_QWORD *)v13 + 2);
        sub_23B5A294C(v16, v17);
        *(_QWORD *)(v12 + 8) = v16;
        *(_QWORD *)(v12 + 16) = v17;
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for DeviceChange(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A363D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
  if (EnumCaseMultiPayload != 1)
  {
    v6 = type metadata accessor for Device();
    v7 = *(int *)(v6 + 20);
    v8 = a1 + v7;
    v9 = a2 + v7;
    v10 = sub_23B601634();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    v11 = *(int *)(v6 + 24);
    v12 = a1 + v11;
    v13 = a2 + v11;
    *(_OWORD *)v12 = *(_OWORD *)v13;
    *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for DeviceChange(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (a1 != a2)
  {
    sub_23B5A3CA0(a1, type metadata accessor for DeviceChange);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A363D0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
    if (EnumCaseMultiPayload != 1)
    {
      v6 = type metadata accessor for Device();
      v7 = *(int *)(v6 + 20);
      v8 = a1 + v7;
      v9 = a2 + v7;
      v10 = sub_23B601634();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      v11 = *(int *)(v6 + 24);
      v12 = a1 + v11;
      v13 = a2 + v11;
      *(_OWORD *)v12 = *(_OWORD *)v13;
      *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_23B5F399C()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for Device();
  if (v0 <= 0x3F)
  {
    sub_23B5C9EBC(319, (unint64_t *)&qword_2542FD688, (void (*)(uint64_t))type metadata accessor for Device);
    if (v1 <= 0x3F)
      swift_initEnumMetadataMultiPayload();
  }
}

uint64_t storeEnumTagSinglePayload for CBDiscovery.Error(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23B5F3A78 + 4 * byte_23B609309[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23B5F3AAC + 4 * byte_23B609304[v4]))();
}

uint64_t sub_23B5F3AAC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B5F3AB4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23B5F3ABCLL);
  return result;
}

uint64_t sub_23B5F3AC8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23B5F3AD0);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23B5F3AD4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B5F3ADC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CBDiscovery.Error()
{
  return &type metadata for CBDiscovery.Error;
}

uint64_t initializeBufferWithCopyOfBuffer for CBDiscovery.Config(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for CBDiscovery.Config()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CBDiscovery.Config(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CBDiscovery.Config(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t assignWithTake for CBDiscovery.Config(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CBDiscovery.Config(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CBDiscovery.Config(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CBDiscovery.Config()
{
  return &type metadata for CBDiscovery.Config;
}

ValueMetadata *type metadata accessor for CBDiscovery.UseCase()
{
  return &type metadata for CBDiscovery.UseCase;
}

ValueMetadata *type metadata accessor for CBDiscovery.DiscoveryFlags()
{
  return &type metadata for CBDiscovery.DiscoveryFlags;
}

uint64_t sub_23B5F3D24()
{
  return 0;
}

ValueMetadata *type metadata accessor for CBDiscovery.DiscoveryType()
{
  return &type metadata for CBDiscovery.DiscoveryType;
}

uint64_t *initializeBufferWithCopyOfBuffer for PeripheralPairingInfo(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23B601634();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = *v10;
    v12 = v10[1];
    sub_23B5A294C(*v10, v12);
    *v9 = v11;
    v9[1] = v12;
  }
  return a1;
}

uint64_t destroy for PeripheralPairingInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23B601634();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return sub_23B5A2990(*(_QWORD *)(a1 + *(int *)(a2 + 20)), *(_QWORD *)(a1 + *(int *)(a2 + 20) + 8));
}

uint64_t initializeWithCopy for PeripheralPairingInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;

  v6 = sub_23B601634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (uint64_t *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v10 = *v9;
  v11 = v9[1];
  sub_23B5A294C(*v9, v11);
  *v8 = v10;
  v8[1] = v11;
  return a1;
}

uint64_t assignWithCopy for PeripheralPairingInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v6 = sub_23B601634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (uint64_t *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v10 = *v9;
  v11 = v9[1];
  sub_23B5A294C(*v9, v11);
  v12 = *v8;
  v13 = v8[1];
  *v8 = v10;
  v8[1] = v11;
  sub_23B5A2990(v12, v13);
  return a1;
}

uint64_t initializeWithTake for PeripheralPairingInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23B601634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for PeripheralPairingInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v6 = sub_23B601634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(_QWORD *)(a1 + v7);
  v9 = *(_QWORD *)(a1 + v7 + 8);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  sub_23B5A2990(v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for CBDiscovery.OOBKeyInfo()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23B5F3FD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v6 = sub_23B601634();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8) >> 60;
  if (((4 * (_DWORD)v9) & 0xC) != 0)
    return 16 - ((4 * (_DWORD)v9) & 0xC | (v9 >> 2));
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CBDiscovery.OOBKeyInfo()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23B5F4074(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD *v10;

  result = sub_23B601634();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  v10 = (_QWORD *)(a1 + *(int *)(a4 + 20));
  *v10 = 0;
  v10[1] = (unint64_t)(((-(int)a2 >> 2) & 3) - 4 * (_DWORD)a2) << 60;
  return result;
}

uint64_t sub_23B5F40FC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23B601634();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_BYTE *sub_23B5F416C(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for CBDiscovery.OOBKeyInfo.CodingKeys()
{
  return &type metadata for CBDiscovery.OOBKeyInfo.CodingKeys;
}

uint64_t _s15FindMyBluetooth11CBDiscoveryC13DiscoveryTypeOwet_0(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t _s15FindMyBluetooth11CBDiscoveryC13DiscoveryTypeOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23B5F4218 + 4 * byte_23B60930E[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23B5F4238 + 4 * byte_23B609313[v4]))();
}

_BYTE *sub_23B5F4218(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23B5F4238(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23B5F4240(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23B5F4248(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23B5F4250(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23B5F4258(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CBDiscovery.DiscoveryType.CodingKeys()
{
  return &type metadata for CBDiscovery.DiscoveryType.CodingKeys;
}

ValueMetadata *type metadata accessor for CBDiscovery.DiscoveryType.FindMyAccessoryCodingKeys()
{
  return &type metadata for CBDiscovery.DiscoveryType.FindMyAccessoryCodingKeys;
}

uint64_t getEnumTagSinglePayload for BluetoothManufacturerAdvertisementData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s15FindMyBluetooth11CBDiscoveryC7UseCaseOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23B5F4360 + 4 * byte_23B60931D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23B5F4394 + 4 * byte_23B609318[v4]))();
}

uint64_t sub_23B5F4394(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B5F439C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23B5F43A4);
  return result;
}

uint64_t sub_23B5F43B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23B5F43B8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23B5F43BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B5F43C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CBDiscovery.UseCase.CodingKeys()
{
  return &type metadata for CBDiscovery.UseCase.CodingKeys;
}

ValueMetadata *type metadata accessor for CBDiscovery.UseCase.FindNearbyRemoteCodingKeys()
{
  return &type metadata for CBDiscovery.UseCase.FindNearbyRemoteCodingKeys;
}

ValueMetadata *type metadata accessor for CBDiscovery.UseCase.FindNearbyPencilCodingKeys()
{
  return &type metadata for CBDiscovery.UseCase.FindNearbyPencilCodingKeys;
}

uint64_t getEnumTagSinglePayload for CBDiscovery.Config.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CBDiscovery.Config.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23B5F44DC + 4 * byte_23B609327[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23B5F4510 + 4 * byte_23B609322[v4]))();
}

uint64_t sub_23B5F4510(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B5F4518(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23B5F4520);
  return result;
}

uint64_t sub_23B5F452C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23B5F4534);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23B5F4538(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B5F4540(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CBDiscovery.Config.CodingKeys()
{
  return &type metadata for CBDiscovery.Config.CodingKeys;
}

unint64_t sub_23B5F4560()
{
  unint64_t result;

  result = qword_256A367C0;
  if (!qword_256A367C0)
  {
    result = MEMORY[0x23B868978](&unk_23B609BFC, &type metadata for CBDiscovery.Config.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A367C0);
  }
  return result;
}

unint64_t sub_23B5F45A8()
{
  unint64_t result;

  result = qword_256A367C8;
  if (!qword_256A367C8)
  {
    result = MEMORY[0x23B868978](&unk_23B609D54, &type metadata for CBDiscovery.UseCase.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A367C8);
  }
  return result;
}

unint64_t sub_23B5F45F0()
{
  unint64_t result;

  result = qword_256A367D0;
  if (!qword_256A367D0)
  {
    result = MEMORY[0x23B868978](&unk_23B609E5C, &type metadata for CBDiscovery.DiscoveryType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A367D0);
  }
  return result;
}

unint64_t sub_23B5F4638()
{
  unint64_t result;

  result = qword_256A367D8;
  if (!qword_256A367D8)
  {
    result = MEMORY[0x23B868978](&unk_23B609F14, &type metadata for CBDiscovery.OOBKeyInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A367D8);
  }
  return result;
}

unint64_t sub_23B5F4680()
{
  unint64_t result;

  result = qword_256A367E0;
  if (!qword_256A367E0)
  {
    result = MEMORY[0x23B868978](&unk_23B609E84, &type metadata for CBDiscovery.OOBKeyInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A367E0);
  }
  return result;
}

unint64_t sub_23B5F46C8()
{
  unint64_t result;

  result = qword_256A367E8;
  if (!qword_256A367E8)
  {
    result = MEMORY[0x23B868978](&unk_23B609EAC, &type metadata for CBDiscovery.OOBKeyInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A367E8);
  }
  return result;
}

unint64_t sub_23B5F4710()
{
  unint64_t result;

  result = qword_256A367F0;
  if (!qword_256A367F0)
  {
    result = MEMORY[0x23B868978](&unk_23B609D7C, &type metadata for CBDiscovery.DiscoveryType.FindMyAccessoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A367F0);
  }
  return result;
}

unint64_t sub_23B5F4758()
{
  unint64_t result;

  result = qword_256A367F8;
  if (!qword_256A367F8)
  {
    result = MEMORY[0x23B868978](&unk_23B609DA4, &type metadata for CBDiscovery.DiscoveryType.FindMyAccessoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A367F8);
  }
  return result;
}

unint64_t sub_23B5F47A0()
{
  unint64_t result;

  result = qword_256A36800;
  if (!qword_256A36800)
  {
    result = MEMORY[0x23B868978](&unk_23B609DCC, &type metadata for CBDiscovery.DiscoveryType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A36800);
  }
  return result;
}

unint64_t sub_23B5F47E8()
{
  unint64_t result;

  result = qword_256A36808;
  if (!qword_256A36808)
  {
    result = MEMORY[0x23B868978](&unk_23B609DF4, &type metadata for CBDiscovery.DiscoveryType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A36808);
  }
  return result;
}

unint64_t sub_23B5F4830()
{
  unint64_t result;

  result = qword_256A36810;
  if (!qword_256A36810)
  {
    result = MEMORY[0x23B868978](&unk_23B609C74, &type metadata for CBDiscovery.UseCase.FindNearbyRemoteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A36810);
  }
  return result;
}

unint64_t sub_23B5F4878()
{
  unint64_t result;

  result = qword_256A36818;
  if (!qword_256A36818)
  {
    result = MEMORY[0x23B868978](&unk_23B609C9C, &type metadata for CBDiscovery.UseCase.FindNearbyRemoteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A36818);
  }
  return result;
}

unint64_t sub_23B5F48C0()
{
  unint64_t result;

  result = qword_256A36820;
  if (!qword_256A36820)
  {
    result = MEMORY[0x23B868978](&unk_23B609C24, &type metadata for CBDiscovery.UseCase.FindNearbyPencilCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A36820);
  }
  return result;
}

unint64_t sub_23B5F4908()
{
  unint64_t result;

  result = qword_256A36828;
  if (!qword_256A36828)
  {
    result = MEMORY[0x23B868978](&unk_23B609C4C, &type metadata for CBDiscovery.UseCase.FindNearbyPencilCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A36828);
  }
  return result;
}

unint64_t sub_23B5F4950()
{
  unint64_t result;

  result = qword_256A36830;
  if (!qword_256A36830)
  {
    result = MEMORY[0x23B868978](&unk_23B609CC4, &type metadata for CBDiscovery.UseCase.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A36830);
  }
  return result;
}

unint64_t sub_23B5F4998()
{
  unint64_t result;

  result = qword_256A36838;
  if (!qword_256A36838)
  {
    result = MEMORY[0x23B868978](&unk_23B609CEC, &type metadata for CBDiscovery.UseCase.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A36838);
  }
  return result;
}

unint64_t sub_23B5F49E0()
{
  unint64_t result;

  result = qword_256A36840;
  if (!qword_256A36840)
  {
    result = MEMORY[0x23B868978](&unk_23B609B6C, &type metadata for CBDiscovery.Config.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A36840);
  }
  return result;
}

unint64_t sub_23B5F4A28()
{
  unint64_t result;

  result = qword_256A36848;
  if (!qword_256A36848)
  {
    result = MEMORY[0x23B868978](&unk_23B609B94, &type metadata for CBDiscovery.Config.CodingKeys);
    atomic_store(result, &qword_256A36848);
  }
  return result;
}

uint64_t sub_23B5F4A6C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t (*v27)(unint64_t, char *, uint64_t);
  uint64_t result;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  char *v32;
  void (*v33)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  char *v39;

  v2 = sub_23B601F1C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v39 = (char *)&v32 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A36888);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 + 16);
  if (v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A36890);
    v12 = sub_23B601C34();
    v13 = 0;
    v14 = *(unsigned __int8 *)(v3 + 80);
    v34 = v11;
    v35 = a1 + ((v14 + 32) & ~v14);
    v15 = *(_QWORD *)(v3 + 72);
    v38 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v16 = v12 + 56;
    v32 = v10;
    v38(v10, v35, v2);
    while (1)
    {
      v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
      v33(v10, 0, 1, v2);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v10, 1, v2) == 1)
        break;
      v36 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
      v37 = v13;
      v36(v39, v10, v2);
      sub_23B5884D4(&qword_256A36898, (uint64_t (*)(uint64_t))MEMORY[0x24BDD0A50], MEMORY[0x24BDD0A60]);
      v18 = sub_23B6018C8();
      v19 = ~(-1 << *(_BYTE *)(v12 + 32));
      v20 = v18 & v19;
      v21 = (v18 & (unint64_t)v19) >> 6;
      v22 = *(_QWORD *)(v16 + 8 * v21);
      v23 = 1 << (v18 & v19);
      if ((v23 & v22) != 0)
      {
        do
        {
          v38(v6, *(_QWORD *)(v12 + 48) + v20 * v15, v2);
          sub_23B5884D4(&qword_256A368A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDD0A50], MEMORY[0x24BDD0A68]);
          v24 = sub_23B6018EC();
          v25 = v3;
          v26 = *(void (**)(char *, uint64_t))(v3 + 8);
          v26(v6, v2);
          if ((v24 & 1) != 0)
          {
            v26(v39, v2);
            v3 = v25;
            v10 = v32;
            v17 = v37;
            goto LABEL_4;
          }
          v20 = (v20 + 1) & v19;
          v21 = v20 >> 6;
          v22 = *(_QWORD *)(v16 + 8 * (v20 >> 6));
          v23 = 1 << v20;
          v3 = v25;
        }
        while ((v22 & (1 << v20)) != 0);
        v10 = v32;
      }
      v27 = (uint64_t (*)(unint64_t, char *, uint64_t))v36;
      v17 = v37;
      *(_QWORD *)(v16 + 8 * v21) = v23 | v22;
      result = v27(*(_QWORD *)(v12 + 48) + v20 * v15, v39, v2);
      v29 = *(_QWORD *)(v12 + 16);
      v30 = __OFADD__(v29, 1);
      v31 = v29 + 1;
      if (v30)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v12 + 16) = v31;
LABEL_4:
      v13 = v17 + 1;
      if (v13 == v34)
      {
        v33(v10, 1, 1, v2);
        return v12;
      }
      v38(v10, v35 + v15 * v13, v2);
    }
  }
  else
  {
    v12 = MEMORY[0x24BEE4B08];
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v10, 1, 1, v2);
  }
  return v12;
}

uint64_t sub_23B5F4D7C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65736143657375 && a2 == 0xE700000000000000;
  if (v2 || (sub_23B601DFC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7265766F63736964 && a2 == 0xEE007367616C4679 || (sub_23B601DFC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7265766F63736964 && a2 == 0xEE00736570795479 || (sub_23B601DFC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7379654B626F6FLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23B601DFC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_23B5F4F74(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000010 && a2 == 0x800000023B605440 || (sub_23B601DFC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000023B605460)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_23B601DFC();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23B5F505C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7365726464417462 && a2 == 0xE900000000000073;
  if (v2 || (sub_23B601DFC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x617461446B7269 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23B601DFC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23B5F5158()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B5F517C(uint64_t a1)
{
  uint64_t v1;

  return sub_23B5EEFD8(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_23B5F5184()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_23B587844;
  v2[2] = v0;
  return swift_task_switch();
}

uint64_t sub_23B5F51E0()
{
  uint64_t v0;

  swift_release();
  sub_23B5F5210(*(id *)(v0 + 24));
  return swift_deallocObject();
}

void sub_23B5F5210(id a1)
{

}

uint64_t sub_23B5F521C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_BYTE *)(v0 + 32);
  v5 = swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *(_QWORD *)v5 = v1;
  *(_QWORD *)(v5 + 8) = sub_23B587FA4;
  *(_BYTE *)(v5 + 32) = v4;
  *(_QWORD *)(v5 + 16) = v2;
  *(_QWORD *)(v5 + 24) = v3;
  return swift_task_switch();
}

id sub_23B5F528C(id a1)
{
  return a1;
}

uint64_t sub_23B5F529C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc();
  v3 = *(_OWORD *)(v0 + 16);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_23B587FA4;
  *(_OWORD *)(v2 + 16) = v3;
  return swift_task_switch();
}

uint64_t objectdestroy_25Tm()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_23B5F532C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc();
  v3 = *(_OWORD *)(v0 + 16);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_23B587FA4;
  *(_OWORD *)(v2 + 16) = v3;
  return swift_task_switch();
}

uint64_t *_s5ErrorOwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_23B601634();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t _s5ErrorOwxx(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    v3 = sub_23B601634();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  return result;
}

void *_s5ErrorOwcp(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_23B601634();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *_s5ErrorOwca(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_23B5F55E4((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_23B601634();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_23B5F55E4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CentralManager.Error();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for CentralManager.Error()
{
  uint64_t result;

  result = qword_256A36938;
  if (!qword_256A36938)
    return swift_getSingletonMetadata();
  return result;
}

void *_s5ErrorOwtk(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_23B601634();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *_s5ErrorOwta(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_23B5F55E4((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_23B601634();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_23B5F5784()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23B601634();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

unint64_t sub_23B5F5804()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v19;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256A36A00);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23B60A250;
  *(_QWORD *)(inited + 32) = sub_23B60191C();
  *(_QWORD *)(inited + 40) = v2;
  *(_QWORD *)(inited + 48) = sub_23B6015F8();
  *(_QWORD *)(inited + 56) = v3;
  *(_QWORD *)(inited + 64) = sub_23B60191C();
  *(_QWORD *)(inited + 72) = v4;
  v5 = (uint64_t *)(v0 + *(int *)(type metadata accessor for PeripheralPairingInfo() + 20));
  v6 = *v5;
  v7 = v5[1];
  *(_QWORD *)(inited + 80) = *v5;
  *(_QWORD *)(inited + 88) = v7;
  sub_23B5A294C(v6, v7);
  v8 = sub_23B5CF1D0(inited);
  if (qword_2542FD4A0 != -1)
    swift_once();
  v9 = sub_23B60185C();
  __swift_project_value_buffer(v9, (uint64_t)qword_2542FD480);
  swift_bridgeObjectRetain_n();
  v10 = sub_23B601844();
  v11 = sub_23B601B5C();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v19 = v13;
    *(_DWORD *)v12 = 136315138;
    swift_bridgeObjectRetain();
    v14 = sub_23B6018BC();
    v16 = v15;
    swift_bridgeObjectRelease();
    sub_23B58E160(v14, v16, &v19);
    sub_23B601BC8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B583000, v10, v11, "PeripheralPairingInfo.dictionaryRepresentation: %s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B868A2C](v13, -1, -1);
    MEMORY[0x23B868A2C](v12, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v17 = sub_23B5D05B4(v8);
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t PeripheralPairingInfo.init(remoteAddress:remoteIRK:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t result;
  _QWORD *v10;

  v8 = sub_23B601634();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a4, a1, v8);
  result = type metadata accessor for PeripheralPairingInfo();
  v10 = (_QWORD *)(a4 + *(int *)(result + 20));
  *v10 = a2;
  v10[1] = a3;
  return result;
}

uint64_t type metadata accessor for PeripheralPairingInfo()
{
  uint64_t result;

  result = qword_256A369C8;
  if (!qword_256A369C8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t PeripheralPairingInfo.remoteAddress.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23B601634();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t PeripheralPairingInfo.remoteIRK.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for PeripheralPairingInfo() + 20);
  v2 = *(_QWORD *)v1;
  sub_23B5A294C(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  return v2;
}

unint64_t PeripheralPairingInfo.description.getter()
{
  sub_23B601C40();
  swift_bridgeObjectRelease();
  sub_23B601634();
  sub_23B5F5C84();
  sub_23B601DE4();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  type metadata accessor for PeripheralPairingInfo();
  sub_23B5A2D58();
  sub_23B601670();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  return 0xD000000000000010;
}

unint64_t sub_23B5F5C84()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A34768;
  if (!qword_256A34768)
  {
    v1 = sub_23B601634();
    result = MEMORY[0x23B868978](MEMORY[0x24BE31750], v1);
    atomic_store(result, &qword_256A34768);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PeripheralPairingInfo()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23B5F5CDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v6 = sub_23B601634();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8) >> 60;
  if (((4 * (_DWORD)v9) & 0xC) != 0)
    return 16 - ((4 * (_DWORD)v9) & 0xC | (v9 >> 2));
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PeripheralPairingInfo()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23B5F5D78(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD *v10;

  result = sub_23B601634();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  v10 = (_QWORD *)(a1 + *(int *)(a4 + 20));
  *v10 = 0;
  v10[1] = (unint64_t)(((-(int)a2 >> 2) & 3) - 4 * (_DWORD)a2) << 60;
  return result;
}

uint64_t sub_23B5F5E00()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23B601634();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23B5F5E70()
{
  char *v0;

  return dword_23B60A3B8[*v0];
}

BOOL static ScanUseCase.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ScanUseCase.hash(into:)()
{
  return sub_23B601E98();
}

uint64_t ScanUseCase.hashValue.getter()
{
  sub_23B601E8C();
  sub_23B601E98();
  return sub_23B601EB0();
}

uint64_t ScanUseCase.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23B5F5F3C + 4 * byte_23B60A2D0[*v0]))(0x6574704F746F6E2ELL, 0xEB000000006E4964);
}

uint64_t sub_23B5F5F3C()
{
  return 0x6E49646574706F2ELL;
}

unint64_t sub_23B5F5F54()
{
  return 0xD000000000000018;
}

uint64_t sub_23B5F5F94()
{
  return 0x696E49726573752ELL;
}

uint64_t sub_23B5F5FB8()
{
  return 0x656C65682ELL;
}

uint64_t sub_23B5F5FCC()
{
  return 0x536E6F636165622ELL;
}

unint64_t sub_23B5F5FEC()
{
  return 0xD000000000000012;
}

void sub_23B5F6004()
{
  JUMPOUT(0x23B5F6018);
}

uint64_t sub_23B5F6024()
{
  return 0x72656666696E732ELL;
}

uint64_t sub_23B5F6044()
{
  return 0x69646E694674622ELL;
}

unint64_t sub_23B5F6064()
{
  unint64_t result;

  result = qword_256A36A08;
  if (!qword_256A36A08)
  {
    result = MEMORY[0x23B868978](&protocol conformance descriptor for ScanUseCase, &type metadata for ScanUseCase);
    atomic_store(result, (unint64_t *)&qword_256A36A08);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ScanUseCase(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF5)
    goto LABEL_17;
  if (a2 + 11 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 11) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 11;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 11;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 11;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xC;
  v8 = v6 - 12;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ScanUseCase(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_23B5F6188 + 4 * byte_23B60A2E1[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_23B5F61BC + 4 * byte_23B60A2DC[v4]))();
}

uint64_t sub_23B5F61BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B5F61C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23B5F61CCLL);
  return result;
}

uint64_t sub_23B5F61D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23B5F61E0);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_23B5F61E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B5F61EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ScanUseCase()
{
  return &type metadata for ScanUseCase;
}

uint64_t sub_23B5F620C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = 0;
    v5 = (uint64_t *)(a1 + 32);
    do
    {
      v7 = *v5++;
      v6 = v7;
      if ((v7 & ~v4) == 0)
        v6 = 0;
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    v4 = 0;
  }
  result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

_QWORD *sub_23B5F6260()
{
  uint64_t *v0;
  unint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  _QWORD v28[5];
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  _QWORD *v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;

  v1 = 0;
  v2 = *v0;
  v28[4] = *MEMORY[0x24BDBB198];
  v28[3] = *MEMORY[0x24BDBB030];
  v28[2] = *MEMORY[0x24BDBB038];
  v28[1] = *MEMORY[0x24BDBB028];
  v28[0] = *MEMORY[0x24BDBB058];
  v3 = (_QWORD *)MEMORY[0x24BEE4B00];
  do
  {
    if (v1 >= 5)
    {
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      sub_23B601E2C();
      __break(1u);
      JUMPOUT(0x23B5F65B0);
    }
    v5 = *((_QWORD *)&unk_250C80F78 + v1 + 4);
    if ((v5 & ~v2) == 0)
    {
      v6 = 0xE90000000000003ELL;
      v7 = 0x4E574F4E4B4E553CLL;
      switch(v5)
      {
        case 1:
        case 2:
        case 4:
        case 8:
        case 16:
          v7 = sub_23B60191C();
          v6 = v8;
          break;
        default:
          break;
      }
      v36 = MEMORY[0x24BEE1328];
      LOBYTE(v35) = 1;
      sub_23B5A39B0(&v35, &v33);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v32 = v3;
      v11 = sub_23B58ECB8(v7, v6);
      v12 = v3[2];
      v13 = (v10 & 1) == 0;
      v14 = v12 + v13;
      if (__OFADD__(v12, v13))
        goto LABEL_24;
      v15 = v10;
      if (v3[3] < v14)
      {
        sub_23B5B3118(v14, isUniquelyReferenced_nonNull_native);
        v16 = sub_23B58ECB8(v7, v6);
        if ((v15 & 1) != (v17 & 1))
          goto LABEL_26;
        v11 = v16;
        v3 = v32;
        if ((v15 & 1) == 0)
          goto LABEL_16;
LABEL_2:
        v4 = (_OWORD *)(v3[7] + 32 * v11);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v4);
        sub_23B5A39B0(&v33, v4);
LABEL_3:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_4;
      }
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v3 = v32;
        if ((v10 & 1) != 0)
          goto LABEL_2;
      }
      else
      {
        sub_23B5B4E3C();
        v3 = v32;
        if ((v15 & 1) != 0)
          goto LABEL_2;
      }
LABEL_16:
      v29 = v7;
      v18 = __swift_mutable_project_boxed_opaque_existential_0((uint64_t)&v33, v34);
      MEMORY[0x24BDAC7A8](v18);
      v20 = (char *)v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v21 + 16))(v20);
      v22 = *v20;
      v31 = MEMORY[0x24BEE1328];
      LOBYTE(v30) = v22;
      v3[(v11 >> 6) + 8] |= 1 << v11;
      v23 = (uint64_t *)(v3[6] + 16 * v11);
      *v23 = v29;
      v23[1] = v6;
      sub_23B5A39B0(&v30, (_OWORD *)(v3[7] + 32 * v11));
      v24 = v3[2];
      v25 = __OFADD__(v24, 1);
      v26 = v24 + 1;
      if (v25)
        goto LABEL_25;
      v3[2] = v26;
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v33);
      swift_bridgeObjectRetain();
      goto LABEL_3;
    }
LABEL_4:
    ++v1;
  }
  while (v1 != 5);
  if (!v3[2])
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

uint64_t CentralManager.Options.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

void *static CentralManager.Options.allCases.getter()
{
  return &unk_250C811D8;
}

uint64_t CentralManager.Options.init(rawValue:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

void static CentralManager.Options.allowDuplicates.getter(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

void static CentralManager.Options.enableFindMy.getter(_QWORD *a1@<X8>)
{
  *a1 = 2;
}

void static CentralManager.Options.receiveSystemEvents.getter(_QWORD *a1@<X8>)
{
  *a1 = 4;
}

void static CentralManager.Options.receiveIncomingObjectDiscoveryData.getter(_QWORD *a1@<X8>)
{
  *a1 = 8;
}

void static CentralManager.Options.needsRestrictedStateOperation.getter(_QWORD *a1@<X8>)
{
  *a1 = 16;
}

unint64_t sub_23B5F664C()
{
  unint64_t result;

  result = qword_256A36A10;
  if (!qword_256A36A10)
  {
    result = MEMORY[0x23B868978](&protocol conformance descriptor for CentralManager.Options, &type metadata for CentralManager.Options);
    atomic_store(result, (unint64_t *)&qword_256A36A10);
  }
  return result;
}

unint64_t sub_23B5F6694()
{
  unint64_t result;

  result = qword_256A36A18;
  if (!qword_256A36A18)
  {
    result = MEMORY[0x23B868978](&protocol conformance descriptor for CentralManager.Options, &type metadata for CentralManager.Options);
    atomic_store(result, (unint64_t *)&qword_256A36A18);
  }
  return result;
}

unint64_t sub_23B5F66DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A36A20;
  if (!qword_256A36A20)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A36A28);
    result = MEMORY[0x23B868978](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_256A36A20);
  }
  return result;
}

void sub_23B5F6728(_QWORD *a1@<X8>)
{
  *a1 = &unk_250C81220;
}

unint64_t sub_23B5F673C()
{
  unint64_t result;

  result = qword_2542FD3A0;
  if (!qword_2542FD3A0)
  {
    result = MEMORY[0x23B868978](&protocol conformance descriptor for CentralManager.Options, &type metadata for CentralManager.Options);
    atomic_store(result, (unint64_t *)&qword_2542FD3A0);
  }
  return result;
}

unint64_t sub_23B5F6784()
{
  unint64_t result;

  result = qword_2542FD3A8;
  if (!qword_2542FD3A8)
  {
    result = MEMORY[0x23B868978](&protocol conformance descriptor for CentralManager.Options, &type metadata for CentralManager.Options);
    atomic_store(result, (unint64_t *)&qword_2542FD3A8);
  }
  return result;
}

uint64_t sub_23B5F67C8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_23B5F620C(a1, a2);
}

ValueMetadata *type metadata accessor for CentralManager.Options()
{
  return &type metadata for CentralManager.Options;
}

_QWORD *fragment(data:mtu:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  unint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  size_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  _BYTE __dst[14];
  unsigned __int8 v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;

  v27 = *MEMORY[0x24BDAC8D0];
  v0 = sub_23B6016DC();
  v1 = *(_QWORD *)(v0 + 16);
  if (v1)
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v3 = (unint64_t *)(v0 + 40);
    do
    {
      v4 = *(v3 - 1);
      v5 = *v3;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A341F0);
      v6 = swift_allocObject();
      *(_OWORD *)(v6 + 16) = xmmword_23B607AF0;
      *(_BYTE *)(v6 + 32) = v1 == 1;
      v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A35690);
      v25 = v7;
      v26 = sub_23B5F6AE4();
      v23 = v6;
      v8 = __swift_project_boxed_opaque_existential_1(&v23, v7);
      v9 = *v8;
      v10 = *(_QWORD *)(*v8 + 16);
      if (v10)
      {
        if (v10 <= 0xE)
        {
          memset(__dst, 0, sizeof(__dst));
          v22 = v10;
          memcpy(__dst, (const void *)(v9 + 32), v10);
          v13 = *(_QWORD *)__dst;
          v14 = *(unsigned int *)&__dst[8] | ((unint64_t)__dst[12] << 32) | ((unint64_t)__dst[13] << 40) | ((unint64_t)v22 << 48);
          sub_23B5A294C(v4, v5);
          swift_bridgeObjectRetain();
        }
        else
        {
          sub_23B6016B8();
          swift_allocObject();
          sub_23B5A294C(v4, v5);
          swift_bridgeObjectRetain();
          v11 = sub_23B60167C();
          v12 = v11;
          if (v10 >= 0x7FFFFFFF)
          {
            sub_23B60170C();
            v13 = swift_allocObject();
            *(_QWORD *)(v13 + 16) = 0;
            *(_QWORD *)(v13 + 24) = v10;
            v14 = v12 | 0x8000000000000000;
          }
          else
          {
            v13 = v10 << 32;
            v14 = v11 | 0x4000000000000000;
          }
        }
      }
      else
      {
        sub_23B5A294C(v4, v5);
        swift_bridgeObjectRetain();
        v13 = 0;
        v14 = 0xC000000000000000;
      }
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v23);
      v23 = v13;
      v24 = v14;
      sub_23B601754();
      v15 = v23;
      v16 = v24;
      sub_23B5A294C(v23, v24);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v2 = sub_23B585C00(0, v2[2] + 1, 1, v2);
      v18 = v2[2];
      v17 = v2[3];
      if (v18 >= v17 >> 1)
        v2 = sub_23B585C00((_QWORD *)(v17 > 1), v18 + 1, 1, v2);
      v3 += 2;
      v2[2] = v18 + 1;
      v19 = &v2[2 * v18];
      v19[4] = v15;
      v19[5] = v16;
      sub_23B5A2990(v15, v16);
      sub_23B5A2990(v4, v5);
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v2;
}

unint64_t sub_23B5F6AE4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A36A30;
  if (!qword_256A36A30)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A35690);
    result = MEMORY[0x23B868978](MEMORY[0x24BDCFBE0], v1);
    atomic_store(result, (unint64_t *)&qword_256A36A30);
  }
  return result;
}

uint64_t AsyncSequence<>.reassemble()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v7 = type metadata accessor for ReassemblingAsyncSequence(0, a1, a2, a4);
  v4[5] = v7;
  v4[6] = *(_QWORD *)(v7 - 8);
  v8 = swift_task_alloc();
  v4[7] = v8;
  v4[8] = swift_task_alloc();
  v9 = (_QWORD *)swift_task_alloc();
  v4[9] = v9;
  *v9 = v4;
  v9[1] = sub_23B5F6BE0;
  return sub_23B5F6EC8(v8, a1, a2);
}

uint64_t sub_23B5F6BE0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B5F6C44()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  _QWORD *v5;

  v1 = v0[7];
  v3 = v0[5];
  v2 = v0[6];
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 16))(v0[8], v1, v3);
  v4 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v0[11] = v4;
  v4(v1, v3);
  v5 = (_QWORD *)swift_task_alloc();
  v0[12] = v5;
  MEMORY[0x23B868978](&protocol conformance descriptor for ReassemblingAsyncSequence<A>, v3);
  *v5 = v0;
  v5[1] = sub_23B5F6D00;
  return sub_23B601A54();
}

uint64_t sub_23B5F6D00()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B5F6D64()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v3;

  (*(void (**)(_QWORD, _QWORD))(v0 + 88))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 40));
  v1 = *(_QWORD *)(v0 + 24);
  if (v1 >> 60 == 15)
  {
    type metadata accessor for CentralManager.Error();
    sub_23B5F792C();
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t, unint64_t))(v0 + 8))(v3, v1);
  }
}

uint64_t sub_23B5F6E40()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5F6E7C()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(v0 + 88))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 40));
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5F6EC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v4[6] = *(_QWORD *)(a2 - 8);
  v4[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5F6F20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 + 48) + 16))(v1, *(_QWORD *)(v0 + 40), v3);
  sub_23B5F6FA4(v1, v3, v2, v4);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ReassemblingAsyncSequence.makeAsyncIterator()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(a2, v2);
}

uint64_t sub_23B5F6FA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v8 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v14 = (char *)&v18 - v13;
  v16 = type metadata accessor for ReassemblingAsyncSequence(0, a2, a3, v15);
  *(_OWORD *)(a4 + *(int *)(v16 + 36)) = xmmword_23B60A5C0;
  *(_BYTE *)(a4 + *(int *)(v16 + 40)) = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, a2);
  sub_23B601AFC();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, a2);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 32))(a4, v14, AssociatedTypeWitness);
}

uint64_t ReassemblingAsyncSequence.next()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = v1;
  return swift_task_switch();
}

uint64_t sub_23B5F70F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(int *)(*(_QWORD *)(v0 + 32) + 40);
  *(_DWORD *)(v0 + 80) = v2;
  if ((*(_BYTE *)(v1 + v2) & 1) != 0)
    return (*(uint64_t (**)(_QWORD, unint64_t))(v0 + 8))(0, 0xF000000000000000);
  *(_OWORD *)(v0 + 48) = xmmword_23B60A5D0;
  sub_23B601AE4();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v4;
  *v4 = v0;
  v4[1] = sub_23B5F7240;
  return sub_23B601A48();
}

uint64_t sub_23B5F7240()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B5F72A4()
{
  uint64_t v0;
  unint64_t v1;

  sub_23B5F7974(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
  v1 = *(_QWORD *)(v0 + 24);
  if (v1 >> 60 != 15)
    __asm { BR              X9 }
  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23B5F7704()
{
  uint64_t v0;

  sub_23B5F7974(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5F7738@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  ReassemblingAsyncSequence.makeAsyncIterator()(a1, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v2, a1);
}

uint64_t sub_23B5F7768(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;

  *(_QWORD *)(v3 + 16) = a1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 24) = v5;
  *v5 = v3;
  v5[1] = sub_23B5F77CC;
  v5[4] = a2;
  v5[5] = v2;
  return swift_task_switch();
}

uint64_t sub_23B5F77CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = *v3;
  v7 = *v3;
  swift_task_dealloc();
  if (!v2)
  {
    v8 = *(_QWORD **)(v6 + 16);
    *v8 = a1;
    v8[1] = a2;
  }
  return (*(uint64_t (**)(void))(v7 + 8))();
}

uint64_t sub_23B5F782C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  *(_QWORD *)(v4 + 24) = a4;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 32) = v5;
  *v5 = v4;
  v5[1] = sub_23B5F78C4;
  return sub_23B601A54();
}

uint64_t sub_23B5F78C4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *v1;
  swift_task_dealloc();
  if (v0)
    **(_QWORD **)(v2 + 24) = *(_QWORD *)(v2 + 16);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t type metadata accessor for ReassemblingAsyncSequence(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ReassemblingAsyncSequence);
}

unint64_t sub_23B5F792C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A346F0;
  if (!qword_256A346F0)
  {
    v1 = type metadata accessor for CentralManager.Error();
    result = MEMORY[0x23B868978](&protocol conformance descriptor for CentralManager.Error, v1);
    atomic_store(result, (unint64_t *)&qword_256A346F0);
  }
  return result;
}

uint64_t sub_23B5F7974(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_23B5A2990(a1, a2);
  return a1;
}

void sub_23B5F7988()
{
  JUMPOUT(0x23B868978);
}

uint64_t sub_23B5F7998()
{
  return MEMORY[0x24BEE3F20];
}

uint64_t sub_23B5F79A4()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_23B5F79AC()
{
  uint64_t result;
  unint64_t v1;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_23B5F7A3C(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 17 > 0x18)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    v10 = ((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v12 = *(_QWORD *)v11;
    v13 = *(_QWORD *)(v11 + 8);
    sub_23B5A294C(*(_QWORD *)v11, v13);
    *(_QWORD *)v10 = v12;
    *(_QWORD *)(v10 + 8) = v13;
    *(_BYTE *)(v10 + 16) = *(_BYTE *)(v11 + 16);
  }
  return a1;
}

uint64_t sub_23B5F7B24(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  unint64_t v4;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
  v4 = (a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_23B5A2990(*(_QWORD *)v4, *(_QWORD *)(v4 + 8));
}

uint64_t sub_23B5F7B88(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_QWORD *)v8;
  v10 = *(_QWORD *)(v8 + 8);
  sub_23B5A294C(*(_QWORD *)v8, v10);
  *(_QWORD *)v7 = v9;
  *(_QWORD *)(v7 + 8) = v10;
  *(_BYTE *)(v7 + 16) = *(_BYTE *)(v8 + 16);
  return a1;
}

uint64_t sub_23B5F7C24(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_QWORD *)v8;
  v10 = *(_QWORD *)(v8 + 8);
  sub_23B5A294C(*(_QWORD *)v8, v10);
  v11 = *(_QWORD *)v7;
  v12 = *(_QWORD *)(v7 + 8);
  *(_QWORD *)v7 = v9;
  *(_QWORD *)(v7 + 8) = v10;
  sub_23B5A2990(v11, v12);
  *(_BYTE *)(v7 + 16) = *(_BYTE *)(v8 + 16);
  return a1;
}

uint64_t sub_23B5F7CC8(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)v7 = *(_OWORD *)v8;
  *(_BYTE *)(v7 + 16) = *(_BYTE *)(v8 + 16);
  return a1;
}

uint64_t sub_23B5F7D50(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_QWORD *)v7;
  v10 = *(_QWORD *)(v7 + 8);
  *(_OWORD *)v7 = *(_OWORD *)v8;
  sub_23B5A2990(v9, v10);
  *(_BYTE *)(v7 + 16) = *(_BYTE *)(v8 + 16);
  return a1;
}

uint64_t sub_23B5F7DE0(uint64_t a1, unsigned int a2)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int v13;

  v4 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0xFE)
    v6 = 254;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 < a2)
  {
    v8 = ((v7 + 7) & 0xFFFFFFF8) + 17;
    if (v8 < 4)
      v9 = ((a2 - v6 + 255) >> (8 * v8)) + 1;
    else
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    __asm { BR              X15 }
  }
  if (v5 >= 0xFE)
    return (*(uint64_t (**)(uint64_t))(v4 + 48))(a1);
  v13 = *(unsigned __int8 *)(((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v13 >= 2)
    return ((v13 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

void sub_23B5F7F3C(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  if (*(_DWORD *)(v6 + 84) <= 0xFEu)
    v7 = 254;
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 17;
  if (v7 >= a3)
  {
    v11 = 0;
    if (v7 >= a2)
      goto LABEL_17;
  }
  else
  {
    if (v8 <= 3)
      v9 = ((a3 - v7 + 255) >> (8 * v8)) + 1;
    else
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    if (v7 >= a2)
LABEL_17:
      __asm { BR              X12 }
  }
  v12 = ~v7 + a2;
  v13 = (~(_BYTE)v7 + a2);
  if (v8 >= 4)
    v14 = v12;
  else
    v14 = v13;
  bzero(a1, v8);
  if ((_DWORD)v8 == 1)
    *a1 = v14;
  else
    *(_DWORD *)a1 = v14;
  __asm { BR              X10 }
}

void sub_23B5F8078()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  *(_BYTE *)(v0 + v2) = v1;
}

void sub_23B5F8080()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = 0;
  if (v1)
    JUMPOUT(0x23B5F8088);
}

void sub_23B5F80CC()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;

  *(_WORD *)(v0 + v2) = v1;
}

void sub_23B5F80D4()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = v1;
}

uint64_t sub_23B5F80DC@<X0>(unsigned int a1@<W2>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v4 + v6) = 0;
  if (!(_DWORD)v5)
LABEL_2:
    JUMPOUT(0x23B5F80E4);
  if (a1 < 0xFE)
  {
    *(_BYTE *)(((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) = v5 + 1;
    goto LABEL_2;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 56))(v4, v5);
}

unint64_t ScanMode.description.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v4;

  v1 = *v0;
  if ((v0[1] & 1) != 0)
  {
    v4 = 0x657361436573752ELL;
    ScanUseCase.description.getter();
  }
  else
  {
    sub_23B601C40();
    swift_bridgeObjectRelease();
    v4 = 0xD000000000000014;
    v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD1F8);
    MEMORY[0x23B867FAC](v1, v2);
  }
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  return v4;
}

uint64_t initializeBufferWithCopyOfBuffer for ScanMode(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_23B5F8214(*(_QWORD *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

uint64_t sub_23B5F8214(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for ScanMode(uint64_t a1)
{
  return sub_23B5F8230(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t sub_23B5F8230(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t assignWithCopy for ScanMode(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_23B5F8214(*(_QWORD *)a2, v4);
  v5 = *(_QWORD *)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_23B5F8230(v5, v6);
  return a1;
}

uint64_t assignWithTake for ScanMode(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  v5 = *(_QWORD *)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_23B5F8230(v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for ScanMode()
{
  return &type metadata for ScanMode;
}

uint64_t CharacteristicUUID.init(uuid:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_23B601820();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

uint64_t CharacteristicUUID.init(stringLiteral:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD228);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B6017CC();
  swift_bridgeObjectRelease();
  v5 = sub_23B601820();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(a1, v4, v5);
  __break(1u);
  return result;
}

unint64_t CharacteristicUUID.debugDescription.getter()
{
  sub_23B601C40();
  swift_bridgeObjectRelease();
  sub_23B6017D8();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  return 0xD000000000000013;
}

uint64_t CharacteristicUUID.hash(into:)()
{
  sub_23B601820();
  sub_23B5884D4(&qword_2542FD220, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  return sub_23B6018D4();
}

uint64_t CharacteristicUUID.hashValue.getter()
{
  sub_23B601E8C();
  sub_23B601820();
  sub_23B5884D4(&qword_2542FD220, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23B6018D4();
  return sub_23B601EB0();
}

uint64_t sub_23B5F8534()
{
  return sub_23B5884D4(&qword_256A36AE0, (uint64_t (*)(uint64_t))type metadata accessor for CharacteristicUUID, (uint64_t)&protocol conformance descriptor for CharacteristicUUID);
}

uint64_t type metadata accessor for CharacteristicUUID()
{
  uint64_t result;

  result = qword_256A36B50;
  if (!qword_256A36B50)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23B5F859C()
{
  return sub_23B5884D4(&qword_256A36AE8, (uint64_t (*)(uint64_t))type metadata accessor for CharacteristicUUID, (uint64_t)&protocol conformance descriptor for CharacteristicUUID);
}

uint64_t sub_23B5F85C8()
{
  return sub_23B5884D4(&qword_256A36AF0, (uint64_t (*)(uint64_t))type metadata accessor for CharacteristicUUID, (uint64_t)&protocol conformance descriptor for CharacteristicUUID);
}

uint64_t getEnumTagSinglePayload for CharacteristicUUID()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23B5F8600(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23B601820();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for CharacteristicUUID()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23B5F8648(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23B601820();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_23B5F8688@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  __int16 v8;
  char v9;
  uint64_t result;
  int v11;
  char v12;
  char v13;
  char *v14;
  __int128 v15;
  __int128 v16;

  sub_23B5C1CC4(a1, a2);
  v7 = v6;
  v8 = sub_23B5F8B84(v6);
  if ((v8 & 0x100) != 0 || (v9 = v8, v8 >= 8u))
  {
    swift_bridgeObjectRelease();
    v13 = 1;
    goto LABEL_8;
  }
  result = sub_23B5F966C(v7);
  if ((v12 & 1) != 0)
    goto LABEL_11;
  if (*(_DWORD *)(v7 + 36) != v11)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    return result;
  }
  if (result == 1 << *(_BYTE *)(v7 + 32))
  {
    swift_bridgeObjectRelease();
    v13 = 2;
LABEL_8:
    sub_23B5F99AC();
    swift_allocError();
    *v14 = v13;
    swift_willThrow();
    return sub_23B5A2990(a1, a2);
  }
  sub_23B5F96F4(result, v11, v7, (uint64_t *)&v16);
  swift_bridgeObjectRelease();
  result = sub_23B5A2990(a1, a2);
  v15 = v16;
  *(_BYTE *)a3 = v9;
  *(_OWORD *)(a3 + 8) = v15;
  return result;
}

uint64_t BluetoothManufacturerAdvertisementData.description.getter()
{
  sub_23B601C40();
  sub_23B601958();
  sub_23B5F88FC();
  sub_23B601DCC();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  sub_23B601D00();
  sub_23B601958();
  sub_23B5A2D58();
  sub_23B601670();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  return 0;
}

unint64_t sub_23B5F88FC()
{
  unint64_t result;

  result = qword_256A36B88;
  if (!qword_256A36B88)
  {
    result = MEMORY[0x23B868978](&protocol conformance descriptor for BluetoothManufacturerAdvertisementData, &type metadata for BluetoothManufacturerAdvertisementData);
    atomic_store(result, (unint64_t *)&qword_256A36B88);
  }
  return result;
}

BOOL static BluetoothManufacturerAdvertisementData.Error.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t BluetoothManufacturerAdvertisementData.Error.hash(into:)()
{
  return sub_23B601E98();
}

uint64_t BluetoothManufacturerAdvertisementData.Error.hashValue.getter()
{
  sub_23B601E8C();
  sub_23B601E98();
  return sub_23B601EB0();
}

FindMyBluetooth::BluetoothManufacturerAdvertisementData::PayloadType_optional __swiftcall BluetoothManufacturerAdvertisementData.PayloadType.init(rawValue:)(FindMyBluetooth::BluetoothManufacturerAdvertisementData::PayloadType_optional rawValue)
{
  FindMyBluetooth::BluetoothManufacturerAdvertisementData::PayloadType *v1;
  FindMyBluetooth::BluetoothManufacturerAdvertisementData::PayloadType value;

  value = rawValue.value;
  if ((rawValue.value & 0xF8) != 0)
    value = FindMyBluetooth_BluetoothManufacturerAdvertisementData_PayloadType_unknownDefault;
  *v1 = value;
  return rawValue;
}

uint64_t BluetoothManufacturerAdvertisementData.PayloadType.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t sub_23B5F89E0()
{
  sub_23B601E8C();
  sub_23B601EA4();
  return sub_23B601EB0();
}

uint64_t sub_23B5F8A24()
{
  return sub_23B601EA4();
}

uint64_t sub_23B5F8A4C()
{
  sub_23B601E8C();
  sub_23B601EA4();
  return sub_23B601EB0();
}

FindMyBluetooth::BluetoothManufacturerAdvertisementData::PayloadType_optional sub_23B5F8A8C(Swift::UInt8 *a1)
{
  return BluetoothManufacturerAdvertisementData.PayloadType.init(rawValue:)(*a1);
}

void sub_23B5F8A94(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t sub_23B5F8AA0()
{
  sub_23B5F9968();
  return sub_23B6019A0();
}

uint64_t sub_23B5F8AFC()
{
  sub_23B5F9968();
  return sub_23B601988();
}

void BluetoothManufacturerAdvertisementData.payloadType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t BluetoothManufacturerAdvertisementData.rawPayload.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_23B5A294C(v1, *(_QWORD *)(v0 + 16));
  return v1;
}

uint64_t sub_23B5F8B84(uint64_t a1)
{
  uint64_t result;
  int v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;

  result = sub_23B5F97A4(a1);
  if ((v4 & 1) != 0)
    goto LABEL_8;
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  v5 = result;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  if (result == v6)
    v7 = 0;
  else
    v7 = sub_23B5F9750(result, v3, 0, a1);
  return v7 | ((v5 == v6) << 8);
}

uint64_t sub_23B5F8C0C()
{
  _BYTE *v0;

  if (*v0)
    return 0x6F6C796150776172;
  else
    return 0x5464616F6C796170;
}

uint64_t sub_23B5F8C54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23B5F9854(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23B5F8C78()
{
  sub_23B5F8E20();
  return sub_23B601F7C();
}

uint64_t sub_23B5F8CA0()
{
  sub_23B5F8E20();
  return sub_23B601F88();
}

uint64_t BluetoothManufacturerAdvertisementData.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A36B90);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v9 = *((_QWORD *)v1 + 1);
  v11 = *((_QWORD *)v1 + 2);
  v12 = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B5F8E20();
  sub_23B601ED4();
  LOBYTE(v13) = v8;
  v15 = 0;
  sub_23B5F8E64();
  sub_23B601DC0();
  if (!v2)
  {
    v13 = v12;
    v14 = v11;
    v15 = 1;
    sub_23B5F2E8C();
    sub_23B601DC0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_23B5F8E20()
{
  unint64_t result;

  result = qword_256A36B98;
  if (!qword_256A36B98)
  {
    result = MEMORY[0x23B868978](&unk_23B60ABFC, &type metadata for BluetoothManufacturerAdvertisementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A36B98);
  }
  return result;
}

unint64_t sub_23B5F8E64()
{
  unint64_t result;

  result = qword_256A36BA0;
  if (!qword_256A36BA0)
  {
    result = MEMORY[0x23B868978](&protocol conformance descriptor for BluetoothManufacturerAdvertisementData.PayloadType, &type metadata for BluetoothManufacturerAdvertisementData.PayloadType);
    atomic_store(result, (unint64_t *)&qword_256A36BA0);
  }
  return result;
}

uint64_t BluetoothManufacturerAdvertisementData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  __int128 v10;
  __int128 v12;
  char v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A36BA8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B5F8E20();
  sub_23B601EC8();
  if (!v2)
  {
    v13 = 0;
    sub_23B5F9028();
    sub_23B601D90();
    v9 = v12;
    v13 = 1;
    sub_23B5F2ED0();
    sub_23B601D90();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v10 = v12;
    *(_BYTE *)a2 = v9;
    *(_OWORD *)(a2 + 8) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

unint64_t sub_23B5F9028()
{
  unint64_t result;

  result = qword_256A36BB0;
  if (!qword_256A36BB0)
  {
    result = MEMORY[0x23B868978](&protocol conformance descriptor for BluetoothManufacturerAdvertisementData.PayloadType, &type metadata for BluetoothManufacturerAdvertisementData.PayloadType);
    atomic_store(result, (unint64_t *)&qword_256A36BB0);
  }
  return result;
}

unint64_t sub_23B5F9070()
{
  unint64_t result;

  result = qword_256A36BB8;
  if (!qword_256A36BB8)
  {
    result = MEMORY[0x23B868978](&protocol conformance descriptor for BluetoothManufacturerAdvertisementData.Error, &type metadata for BluetoothManufacturerAdvertisementData.Error);
    atomic_store(result, (unint64_t *)&qword_256A36BB8);
  }
  return result;
}

unint64_t sub_23B5F90B8()
{
  unint64_t result;

  result = qword_256A36BC0;
  if (!qword_256A36BC0)
  {
    result = MEMORY[0x23B868978](&protocol conformance descriptor for BluetoothManufacturerAdvertisementData.PayloadType, &type metadata for BluetoothManufacturerAdvertisementData.PayloadType);
    atomic_store(result, (unint64_t *)&qword_256A36BC0);
  }
  return result;
}

uint64_t sub_23B5F90FC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return BluetoothManufacturerAdvertisementData.init(from:)(a1, a2);
}

uint64_t sub_23B5F9110(_QWORD *a1)
{
  return BluetoothManufacturerAdvertisementData.encode(to:)(a1);
}

uint64_t destroy for BluetoothManufacturerAdvertisementData(uint64_t a1)
{
  return sub_23B5A2990(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));
}

uint64_t _s15FindMyBluetooth38BluetoothManufacturerAdvertisementDataVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  sub_23B5A294C(v3, v4);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  return a1;
}

uint64_t assignWithCopy for BluetoothManufacturerAdvertisementData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  sub_23B5A294C(v3, v4);
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  sub_23B5A2990(v5, v6);
  return a1;
}

uint64_t assignWithTake for BluetoothManufacturerAdvertisementData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  sub_23B5A2990(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for BluetoothManufacturerAdvertisementData(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xF9 && a1[24])
    return (*(_DWORD *)a1 + 249);
  v3 = *a1;
  v4 = v3 >= 8;
  v5 = v3 - 8;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for BluetoothManufacturerAdvertisementData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF8)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 249;
    if (a3 >= 0xF9)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0xF9)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 7;
  }
  return result;
}

ValueMetadata *type metadata accessor for BluetoothManufacturerAdvertisementData()
{
  return &type metadata for BluetoothManufacturerAdvertisementData;
}

uint64_t storeEnumTagSinglePayload for BluetoothManufacturerAdvertisementData.Error(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23B5F92EC + 4 * byte_23B60A895[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23B5F9320 + 4 * asc_23B60A890[v4]))();
}

uint64_t sub_23B5F9320(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B5F9328(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23B5F9330);
  return result;
}

uint64_t sub_23B5F933C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23B5F9344);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23B5F9348(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B5F9350(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BluetoothManufacturerAdvertisementData.Error()
{
  return &type metadata for BluetoothManufacturerAdvertisementData.Error;
}

uint64_t getEnumTagSinglePayload for BluetoothManufacturerAdvertisementData.PayloadType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for BluetoothManufacturerAdvertisementData.PayloadType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_23B5F9448 + 4 * byte_23B60A89F[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_23B5F947C + 4 * byte_23B60A89A[v4]))();
}

uint64_t sub_23B5F947C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B5F9484(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23B5F948CLL);
  return result;
}

uint64_t sub_23B5F9498(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23B5F94A0);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_23B5F94A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B5F94AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BluetoothManufacturerAdvertisementData.PayloadType()
{
  return &type metadata for BluetoothManufacturerAdvertisementData.PayloadType;
}

uint64_t storeEnumTagSinglePayload for BluetoothManufacturerAdvertisementData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23B5F9514 + 4 * byte_23B60A8A9[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23B5F9548 + 4 * byte_23B60A8A4[v4]))();
}

uint64_t sub_23B5F9548(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B5F9550(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23B5F9558);
  return result;
}

uint64_t sub_23B5F9564(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23B5F956CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23B5F9570(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B5F9578(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BluetoothManufacturerAdvertisementData.CodingKeys()
{
  return &type metadata for BluetoothManufacturerAdvertisementData.CodingKeys;
}

unint64_t sub_23B5F9598()
{
  unint64_t result;

  result = qword_256A36BC8;
  if (!qword_256A36BC8)
  {
    result = MEMORY[0x23B868978](&unk_23B60ABD4, &type metadata for BluetoothManufacturerAdvertisementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A36BC8);
  }
  return result;
}

unint64_t sub_23B5F95E0()
{
  unint64_t result;

  result = qword_256A36BD0;
  if (!qword_256A36BD0)
  {
    result = MEMORY[0x23B868978](&unk_23B60AB44, &type metadata for BluetoothManufacturerAdvertisementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A36BD0);
  }
  return result;
}

unint64_t sub_23B5F9628()
{
  unint64_t result;

  result = qword_256A36BD8;
  if (!qword_256A36BD8)
  {
    result = MEMORY[0x23B868978](&unk_23B60AB6C, &type metadata for BluetoothManufacturerAdvertisementData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A36BD8);
  }
  return result;
}

uint64_t sub_23B5F966C(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_23B5F96F4@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;

  if (result < 0 || 1 << *(_BYTE *)(a3 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a3 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a3 + 36) == a2)
  {
    v4 = (uint64_t *)(*(_QWORD *)(a3 + 56) + 16 * result);
    v5 = *v4;
    v6 = v4[1];
    *a4 = *v4;
    a4[1] = v6;
    return sub_23B5A294C(v5, v6);
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_23B5F9750(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(_BYTE *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2)
    return *(unsigned __int8 *)(*(_QWORD *)(a4 + 48) + result);
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_23B5F97A4(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 80);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v1 = *(_QWORD *)(a1 + 88);
  if (v1)
  {
    v2 = 192;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 4)
    v7 = 4;
  v8 = v7 - 4;
  v9 = (unint64_t *)(a1 + 96);
  v2 = 192;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_23B5F9854(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x5464616F6C796170 && a2 == 0xEB00000000657079;
  if (v2 || (sub_23B601DFC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F6C796150776172 && a2 == 0xEA00000000006461)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23B601DFC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_23B5F9968()
{
  unint64_t result;

  result = qword_256A36BE0;
  if (!qword_256A36BE0)
  {
    result = MEMORY[0x23B868978](&protocol conformance descriptor for BluetoothManufacturerAdvertisementData.PayloadType, &type metadata for BluetoothManufacturerAdvertisementData.PayloadType);
    atomic_store(result, (unint64_t *)&qword_256A36BE0);
  }
  return result;
}

unint64_t sub_23B5F99AC()
{
  unint64_t result;

  result = qword_256A36BE8;
  if (!qword_256A36BE8)
  {
    result = MEMORY[0x23B868978](&protocol conformance descriptor for BluetoothManufacturerAdvertisementData.Error, &type metadata for BluetoothManufacturerAdvertisementData.Error);
    atomic_store(result, (unint64_t *)&qword_256A36BE8);
  }
  return result;
}

uint64_t sub_23B5F99F0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD588);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD580);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_23B587ED4(a1, &qword_2542FD588);
    sub_23B5E2678(a2, (uint64_t)v8);
    v13 = sub_23B601820();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a2, v13);
    return sub_23B587ED4((uint64_t)v8, &qword_2542FD588);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, a1, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *v3;
    *v3 = 0x8000000000000000;
    sub_23B5B9284((uint64_t)v12, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v18;
    swift_bridgeObjectRelease();
    v16 = sub_23B601820();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(a2, v16);
  }
}

void MockCentralManager.setMockBehavior(_:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = (uint64_t *)(v1 + OBJC_IVAR____TtC15FindMyBluetooth18MockCentralManager_mockBehavior);
  swift_beginAccess();
  v6 = *v5;
  v7 = v5[1];
  v8 = v5[2];
  *v5 = v2;
  v5[1] = v3;
  v5[2] = v4;
  sub_23B5AF27C(v2, v3, v4);
  sub_23B5AF2F8(v6, v7, v8);
}

uint64_t sub_23B5F9C10(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[8] = a1;
  v2[9] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD530);
  v2[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5F9C70()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 88) = swift_weakLoadStrong();
  return swift_task_switch();
}

uint64_t sub_23B5F9CC0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 88);
  if (!v1)
    goto LABEL_4;
  if (v1 != *(_QWORD *)(v0 + 72))
  {
    swift_release();
LABEL_4:
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  return swift_task_switch();
}

uint64_t sub_23B5F9DA0()
{
  uint64_t v0;
  _BYTE *v1;

  v1 = (_BYTE *)(*(_QWORD *)(v0 + 64) + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_state);
  swift_beginAccess();
  *v1 = 2;
  return swift_task_switch();
}

uint64_t sub_23B5F9E04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;

  v2 = *(_QWORD *)(v0 + 72);
  v1 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 64);
  v4 = v3 + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_id;
  swift_beginAccess();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v10 = *(_QWORD *)(v2 + 176);
  *(_QWORD *)(v2 + 176) = 0x8000000000000000;
  sub_23B5B8F58(v3, v4, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v2 + 176) = v10;
  swift_bridgeObjectRelease();
  swift_endAccess();
  v6 = sub_23B601A78();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v1, 1, 1, v6);
  v7 = sub_23B5884D4((unint64_t *)&unk_256A35910, (uint64_t (*)(uint64_t))type metadata accessor for MockCentralManager, (uint64_t)&protocol conformance descriptor for MockCentralManager);
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = v2;
  v8[3] = v7;
  v8[4] = v2;
  v8[5] = v3;
  swift_retain_n();
  swift_retain();
  sub_23B5CD39C(v1, (uint64_t)&unk_256A37268, (uint64_t)v8);
  swift_release();
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5F9F6C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[5] = a1;
  v2[6] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD530);
  v2[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5F9FCC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 64) = swift_weakLoadStrong();
  return swift_task_switch();
}

uint64_t sub_23B5FA01C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v1 = v0[8];
  if (!v1)
    goto LABEL_4;
  if (v1 != v0[6])
  {
    swift_release();
LABEL_4:
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    goto LABEL_5;
  }
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v1 + 176) + 16))
  {
    v4 = v0[5] + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_id;
    swift_bridgeObjectRetain();
    sub_23B58ED88(v4);
    LOBYTE(v4) = v5;
    swift_bridgeObjectRelease();
    if ((v4 & 1) != 0)
    {
      v6 = v0[6];
      v7 = v0[7];
      v8 = v0[5];
      v9 = sub_23B601A78();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v7, 1, 1, v9);
      v10 = sub_23B5884D4((unint64_t *)&unk_256A35910, (uint64_t (*)(uint64_t))type metadata accessor for MockCentralManager, (uint64_t)&protocol conformance descriptor for MockCentralManager);
      v11 = (_QWORD *)swift_allocObject();
      v11[2] = v6;
      v11[3] = v10;
      v11[4] = v6;
      v11[5] = v8;
      swift_retain_n();
      swift_retain();
      sub_23B5CD39C(v7, (uint64_t)&unk_256A37248, (uint64_t)v11);
      swift_release();
      swift_release();
      swift_task_dealloc();
      v2 = (uint64_t (*)(void))v0[1];
      return v2();
    }
  }
  type metadata accessor for CentralManager.Error();
  sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
  swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_release();
LABEL_5:
  swift_task_dealloc();
  v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_23B5FA248()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = v0;
  return swift_task_switch();
}

uint64_t sub_23B5FA260()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 40);
  sub_23B601C40();
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0xE000000000000000;
  sub_23B601958();
  *(_QWORD *)(v0 + 32) = v1;
  v2 = type metadata accessor for CentralManager(0);
  v3 = sub_23B5884D4(&qword_2542FD3D8, type metadata accessor for CentralManager, (uint64_t)&protocol conformance descriptor for CentralManager);
  sub_23B601DCC();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  MEMORY[0x23B86839C](v2, v3);
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD1E0);
  sub_23B58F61C((unint64_t *)&qword_2542FD1D0, &qword_2542FD1E0, MEMORY[0x24BE316E8]);
  sub_23B601DE4();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  sub_23B5CFB70((_BYTE *)(v0 + 32));
  sub_23B601D00();
  sub_23B601958();
  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23B5FA444()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = v0;
  return swift_task_switch();
}

uint64_t sub_23B5FA45C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;

  v1 = *(_QWORD *)(v0 + 56);
  sub_23B601C40();
  *(_QWORD *)(v0 + 40) = 0;
  *(_QWORD *)(v0 + 48) = 0xE000000000000000;
  sub_23B601958();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = type metadata accessor for MockCentralManager();
  v3 = sub_23B5884D4((unint64_t *)&unk_256A35E08, (uint64_t (*)(uint64_t))type metadata accessor for MockCentralManager, (uint64_t)&protocol conformance descriptor for MockCentralManager);
  sub_23B601DCC();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  MEMORY[0x23B86839C](v2, v3);
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD1E0);
  sub_23B58F61C((unint64_t *)&qword_2542FD1D0, &qword_2542FD1E0, MEMORY[0x24BE316E8]);
  sub_23B601DE4();
  sub_23B601958();
  swift_bridgeObjectRelease();
  sub_23B601958();
  v4 = (_BYTE *)(v1 + OBJC_IVAR____TtC15FindMyBluetooth18MockCentralManager_state);
  swift_beginAccess();
  *(_BYTE *)(v0 + 64) = *v4;
  sub_23B601D00();
  sub_23B601958();
  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_23B5FA658()
{
  uint64_t v0;
  uint64_t result;

  _s15FindMyBluetooth30PairingManagerAccessControllerCMa_0();
  v0 = swift_allocObject();
  swift_defaultActor_initialize();
  result = swift_weakInit();
  qword_256A36BF0 = v0;
  return result;
}

uint64_t MockCentralManager.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC15FindMyBluetooth18MockCentralManager_id;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD1E0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MockCentralManager.isPairingCentralManager.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15FindMyBluetooth18MockCentralManager_isPairingCentralManager);
}

uint64_t sub_23B5FA6F8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15FindMyBluetooth18MockCentralManager_state);
  result = swift_beginAccess();
  *a1 = *v3;
  return result;
}

uint64_t sub_23B5FA744(char *a1)
{
  uint64_t v1;
  char v2;
  _BYTE *v3;
  uint64_t result;

  v2 = *a1;
  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC15FindMyBluetooth18MockCentralManager_state);
  result = swift_beginAccess();
  *v3 = v2;
  return result;
}

uint64_t (*sub_23B5FA794())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

id sub_23B5FA7D8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC15FindMyBluetooth18MockCentralManager_mockBehavior);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a2 = *v3;
  a2[1] = v5;
  a2[2] = v6;
  return sub_23B5AF27C(v4, v5, v6);
}

void sub_23B5FA834(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = (uint64_t *)(*a2 + OBJC_IVAR____TtC15FindMyBluetooth18MockCentralManager_mockBehavior);
  swift_beginAccess();
  v6 = *v5;
  v7 = v5[1];
  v8 = v5[2];
  *v5 = v2;
  v5[1] = v3;
  v5[2] = v4;
  sub_23B5AF27C(v2, v3, v4);
  sub_23B5AF2F8(v6, v7, v8);
}

id sub_23B5FA8C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC15FindMyBluetooth18MockCentralManager_mockBehavior);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_23B5AF27C(v4, v5, v6);
}

__n128 sub_23B5FA920(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 result;
  __int128 v8;

  v8 = *a1;
  v2 = *((_QWORD *)a1 + 2);
  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC15FindMyBluetooth18MockCentralManager_mockBehavior);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *(_OWORD *)v3 = v8;
  v3[2] = v2;
  sub_23B5AF2F8(v4, v5, v6);
  return result;
}

uint64_t (*sub_23B5FA98C())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t static MockCentralManager.pairingCentralManager.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (__cdecl *v3)();

  v3 = (uint64_t (__cdecl *)())((char *)&dword_256A36C00 + dword_256A36C00);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23B58CEC8;
  return v3();
}

uint64_t MockCentralManager.__allocating_init(options:)()
{
  uint64_t v0;
  _QWORD *v1;

  *(_BYTE *)(v0 + 25) = 5;
  type metadata accessor for MockCentralManager();
  swift_allocObject();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  *v1 = v0;
  v1[1] = sub_23B5CFC6C;
  return MockCentralManager.init(options:initialState:)((uint64_t)v1, (char *)(v0 + 25));
}

uint64_t MockCentralManager.__allocating_init(options:initialState:)(uint64_t a1, char *a2)
{
  uint64_t v2;
  _QWORD *v4;

  swift_allocObject();
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23B587B38;
  return MockCentralManager.init(options:initialState:)((uint64_t)v4, a2);
}

uint64_t MockCentralManager.init(options:initialState:)(uint64_t a1, char *a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  sub_23B601820();
  swift_task_alloc();
  v5 = *a2;
  swift_defaultActor_initialize();
  *(_QWORD *)(v2 + 112) = 0;
  *(_QWORD *)(v2 + 120) = 0;
  *(_BYTE *)(v2 + 128) = 0;
  *(_QWORD *)(v2 + 136) = 0;
  *(_QWORD *)(v2 + 144) = 0;
  *(_BYTE *)(v2 + 152) = 1;
  v6 = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v2 + 160) = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v2 + 168) = v6;
  *(_QWORD *)(v2 + 176) = v6;
  *(_QWORD *)(v2 + 184) = v6;
  v7 = v2 + OBJC_IVAR____TtC15FindMyBluetooth18MockCentralManager_connectionEventsStream;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD5A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = v2 + OBJC_IVAR____TtC15FindMyBluetooth18MockCentralManager_connectionEventsStreamContinuation;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD558);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  sub_23B601814();
  type metadata accessor for CentralManager(0);
  sub_23B6015D4();
  v11 = (_QWORD *)(v2 + OBJC_IVAR____TtC15FindMyBluetooth18MockCentralManager_mockBehavior);
  *v11 = 10000000000000000;
  v11[1] = 0;
  v11[2] = 0;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC15FindMyBluetooth18MockCentralManager_isPairingCentralManager) = 0;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC15FindMyBluetooth18MockCentralManager_state) = v5;
  swift_task_dealloc();
  return sub_23B586498(*(uint64_t (**)(uint64_t))(v3 + 8), v3, v2);
}

uint64_t sub_23B5FAC5C(char a1, uint64_t a2, char *a3)
{
  uint64_t v3;
  uint64_t v4;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  sub_23B601820();
  swift_task_alloc();
  v7 = *a3;
  swift_defaultActor_initialize();
  *(_QWORD *)(v3 + 112) = 0;
  *(_QWORD *)(v3 + 120) = 0;
  *(_BYTE *)(v3 + 128) = 0;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 144) = 0;
  *(_BYTE *)(v3 + 152) = 1;
  v8 = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v3 + 160) = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v3 + 168) = v8;
  *(_QWORD *)(v3 + 176) = v8;
  *(_QWORD *)(v3 + 184) = v8;
  v9 = v3 + OBJC_IVAR____TtC15FindMyBluetooth18MockCentralManager_connectionEventsStream;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD5A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  v11 = v3 + OBJC_IVAR____TtC15FindMyBluetooth18MockCentralManager_connectionEventsStreamContinuation;
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD558);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  sub_23B601814();
  type metadata accessor for CentralManager(0);
  sub_23B6015D4();
  v13 = (_QWORD *)(v3 + OBJC_IVAR____TtC15FindMyBluetooth18MockCentralManager_mockBehavior);
  *v13 = 10000000000000000;
  v13[1] = 0;
  v13[2] = 0;
  *(_BYTE *)(v3 + OBJC_IVAR____TtC15FindMyBluetooth18MockCentralManager_isPairingCentralManager) = a1;
  *(_BYTE *)(v3 + OBJC_IVAR____TtC15FindMyBluetooth18MockCentralManager_state) = v7;
  swift_task_dealloc();
  return sub_23B586498(*(uint64_t (**)(uint64_t))(v4 + 8), v4, v3);
}

uint64_t sub_23B5FADC8()
{
  uint64_t v0;

  return sub_23B6003A8(*(uint64_t (**)(uint64_t))(v0 + 8), v0, 0);
}

uint64_t sub_23B5FADDC()
{
  uint64_t v0;

  return sub_23B6003BC(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23B5FADEC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD550);
  v2[4] = v3;
  v2[5] = *(_QWORD *)(v3 - 8);
  v2[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5FAE50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 40);
  v1 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 32);
  swift_allocObject();
  swift_weakInit();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v1, *MEMORY[0x24BEE6A10], v3);
  sub_23B601AC0();
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5FAF08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t Strong;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  void (*v30)(uint64_t, char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v32 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD580);
  v34 = *(_QWORD *)(v1 - 8);
  v35 = *(_QWORD *)(v34 + 64);
  v36 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v33 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD530);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = v5;
  v6 = sub_23B601820();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v26 - v11;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  sub_23B601814();
  v29 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v29(v10, v12, v6);
  v14 = *(unsigned __int8 *)(v7 + 80);
  v31 = v7;
  v28 = v14 | 7;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = Strong;
  v30 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 32);
  v30(v15 + ((v14 + 24) & ~v14), v10, v6);
  swift_retain();
  v16 = v36;
  v17 = v32;
  sub_23B601A90();
  v18 = sub_23B601A78();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v5, 1, 1, v18);
  v20 = v33;
  v19 = v34;
  (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v33, v17, v16);
  v29(v10, v12, v6);
  v21 = v19;
  v22 = (*(unsigned __int8 *)(v19 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v23 = (v35 + v14 + v22) & ~v14;
  v24 = (char *)swift_allocObject();
  *((_QWORD *)v24 + 2) = 0;
  *((_QWORD *)v24 + 3) = 0;
  *((_QWORD *)v24 + 4) = Strong;
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(&v24[v22], v20, v36);
  v30((uint64_t)&v24[v23], v10, v6);
  swift_retain();
  sub_23B5CD248((uint64_t)v27, (uint64_t)&unk_256A37218, (uint64_t)v24);
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v12, v6);
}

uint64_t sub_23B5FB1D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  uint64_t v15;

  v5 = sub_23B601820();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD530);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23B601A78();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v5);
  v12 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v13 = (char *)swift_allocObject();
  *((_QWORD *)v13 + 2) = 0;
  *((_QWORD *)v13 + 3) = 0;
  *((_QWORD *)v13 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v13[v12], (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  swift_retain();
  sub_23B5CD248((uint64_t)v10, (uint64_t)&unk_256A37228, (uint64_t)v13);
  return swift_release();
}

uint64_t sub_23B5FB318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[6] = a4;
  v5[7] = a5;
  v5[5] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD588);
  v5[8] = swift_task_alloc();
  v6 = sub_23B601820();
  v5[9] = v6;
  v5[10] = *(_QWORD *)(v6 - 8);
  v5[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5FB3A0()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 48))
    return swift_task_switch();
  **(_BYTE **)(v0 + 40) = 1;
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5FB40C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[11];
  v2 = v0[8];
  (*(void (**)(uint64_t, _QWORD, _QWORD))(v0[10] + 16))(v1, v0[7], v0[9]);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD580);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  swift_beginAccess();
  sub_23B5F99F0(v2, v1);
  swift_endAccess();
  return swift_task_switch();
}

uint64_t sub_23B5FB4BC()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 40) = *(_QWORD *)(v0 + 48) == 0;
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5FB508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[7] = a5;
  v6[8] = a6;
  v6[5] = a1;
  v6[6] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD588);
  v6[9] = swift_task_alloc();
  v7 = sub_23B601820();
  v6[10] = v7;
  v6[11] = *(_QWORD *)(v7 - 8);
  v6[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5FB590()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 48))
    return swift_task_switch();
  **(_BYTE **)(v0 + 40) = 1;
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5FB5FC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = v0[12];
  v2 = v0[9];
  v3 = v0[7];
  (*(void (**)(uint64_t, _QWORD, _QWORD))(v0[11] + 16))(v1, v0[8], v0[10]);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD580);
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v2, v3, v4);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v2, 0, 1, v4);
  swift_beginAccess();
  sub_23B5F99F0(v2, v1);
  swift_endAccess();
  return swift_task_switch();
}

uint64_t sub_23B5FB6D8()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 40) = *(_QWORD *)(v0 + 48) == 0;
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5FB724(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v5[7] = a4;
  v5[8] = v4;
  v5[5] = a1;
  v5[6] = a3;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A36C58);
  v5[9] = v6;
  v5[10] = *(_QWORD *)(v6 - 8);
  v5[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5FB78C()
{
  _QWORD *v0;
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t (*v4)(void);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v1 = (_BYTE *)(v0[8] + OBJC_IVAR____TtC15FindMyBluetooth18MockCentralManager_state);
  swift_beginAccess();
  if (*v1 >= 5u)
  {
    v3 = v0[8];
    if ((*(_BYTE *)(v3 + 128) & 1) == 0)
    {
      v6 = v0[10];
      v5 = v0[11];
      v7 = v0[9];
      v9 = v0[6];
      v8 = v0[7];
      *(_BYTE *)(v3 + 128) = 1;
      *(_QWORD *)(v3 + 136) = v9;
      *(_QWORD *)(v3 + 144) = v8;
      *(_BYTE *)(v3 + 152) = 0;
      v10 = (_QWORD *)swift_task_alloc();
      v10[2] = v3;
      v10[3] = v9;
      v10[4] = v8;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A36C60);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 104))(v5, *MEMORY[0x24BEE6CA0], v7);
      sub_23B601B44();
      swift_task_dealloc();
      swift_task_dealloc();
      v4 = (uint64_t (*)(void))v0[1];
      return v4();
    }
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    swift_allocError();
  }
  else
  {
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    swift_allocError();
    *v2 = *v1;
  }
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_task_dealloc();
  v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_23B5FB96C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v23 = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A371D8);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD530);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23B601A78();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  v15 = sub_23B5884D4((unint64_t *)&unk_256A35910, (uint64_t (*)(uint64_t))type metadata accessor for MockCentralManager, (uint64_t)&protocol conformance descriptor for MockCentralManager);
  v16 = (*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v17 = (v9 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = (char *)swift_allocObject();
  *((_QWORD *)v18 + 2) = a2;
  *((_QWORD *)v18 + 3) = v15;
  *((_QWORD *)v18 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v18[v16], v10, v7);
  v19 = &v18[v17];
  v20 = v23;
  *(_QWORD *)v19 = a3;
  *((_QWORD *)v19 + 1) = v20;
  swift_retain_n();
  sub_23B5CD39C((uint64_t)v13, (uint64_t)&unk_256A371E8, (uint64_t)v18);
  return swift_release();
}

uint64_t sub_23B5FBB04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v7[22] = a6;
  v7[23] = a7;
  v7[20] = a4;
  v7[21] = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A371D8);
  v7[24] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[25] = v9;
  v7[26] = *(_QWORD *)(v9 + 64);
  v7[27] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD530);
  v7[28] = swift_task_alloc();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A371F0);
  v7[29] = v10;
  v7[30] = *(_QWORD *)(v10 - 8);
  v7[31] = swift_task_alloc();
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  v7[32] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v7[33] = v12;
  v7[34] = *(_QWORD *)(v12 + 64);
  v7[35] = swift_task_alloc();
  v7[36] = swift_task_alloc();
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A36C80);
  v7[37] = v13;
  v7[38] = *(_QWORD *)(v13 - 8);
  v7[39] = swift_task_alloc();
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A371F8);
  v7[40] = v14;
  v7[41] = *(_QWORD *)(v14 - 8);
  v7[42] = swift_task_alloc();
  return swift_task_switch();
}

void sub_23B5FBC5C()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  void (*v4)(_QWORD);

  v1 = v0[20];
  v2 = *(int **)(v1 + 112);
  v0[43] = v2;
  if (v2)
  {
    v0[44] = *(_QWORD *)(v1 + 120);
    v4 = (void (*)(_QWORD))((char *)v2 + *v2);
    swift_retain();
    v3 = (_QWORD *)swift_task_alloc();
    v0[45] = v3;
    *v3 = v0;
    v3[1] = sub_23B5FBCE0;
    v4(v0[39]);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_23B5FBCE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 344);
  *(_QWORD *)(*(_QWORD *)v1 + 368) = v0;
  swift_task_dealloc();
  sub_23B5864E4(v2);
  return swift_task_switch();
}

uint64_t sub_23B5FBD5C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0[38];
  v1 = v0[39];
  v3 = v0[37];
  sub_23B601AA8();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v0[47] = sub_23B5884D4((unint64_t *)&unk_256A35910, (uint64_t (*)(uint64_t))type metadata accessor for MockCentralManager, (uint64_t)&protocol conformance descriptor for MockCentralManager);
  swift_beginAccess();
  v4 = (_QWORD *)swift_task_alloc();
  v0[48] = v4;
  *v4 = v0;
  v4[1] = sub_23B5FBE44;
  return sub_23B601B38();
}

uint64_t sub_23B5FBE44()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B5FBEA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t);
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v1 = *(_QWORD *)(v0 + 152);
  if (!v1)
  {
    v17 = *(_QWORD *)(v0 + 160);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 328) + 8))(*(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 320));
    *(_QWORD *)(v0 + 144) = 0;
    sub_23B601B20();
    *(_BYTE *)(v17 + 128) = 0;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v2 = *(_QWORD *)(v0 + 288);
  v40 = *(_QWORD *)(v0 + 376);
  v41 = *(_QWORD *)(v0 + 280);
  v3 = *(_QWORD *)(v0 + 264);
  v37 = *(_QWORD *)(v0 + 272);
  v4 = *(_QWORD *)(v0 + 256);
  v32 = *(_QWORD *)(v0 + 248);
  v33 = *(_QWORD *)(v0 + 240);
  v34 = *(_QWORD *)(v0 + 232);
  v44 = *(_QWORD *)(v0 + 224);
  v36 = *(_QWORD *)(v0 + 216);
  v35 = *(_QWORD *)(v0 + 200);
  v43 = *(_QWORD *)(v0 + 192);
  v38 = *(_QWORD *)(v0 + 176);
  v39 = *(_QWORD *)(v0 + 184);
  v5 = *(_QWORD *)(v0 + 160);
  v30 = *(_QWORD *)(v0 + 168);
  v31 = v1 + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_id;
  v6 = *(void (**)(uint64_t))(v3 + 16);
  v29 = v3;
  v6(v2);
  swift_beginAccess();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v45 = *(_QWORD *)(v5 + 168);
  *(_QWORD *)(v5 + 168) = 0x8000000000000000;
  sub_23B5B8F58(v1, v2, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v5 + 168) = v45;
  swift_bridgeObjectRelease();
  v42 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v42(v2, v4);
  swift_endAccess();
  *(_QWORD *)(v0 + 120) = v1;
  *(_BYTE *)(v0 + 128) = 0;
  swift_retain();
  sub_23B601B14();
  (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v34);
  ((void (*)(uint64_t, uint64_t, uint64_t))v6)(v41, v31, v4);
  v8 = sub_23B601A78();
  v9 = *(_QWORD *)(v8 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v44, 1, 1, v8);
  ((void (*)(uint64_t, uint64_t, uint64_t))v6)(v2, v41, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16))(v36, v30, v43);
  v10 = (*(unsigned __int8 *)(v29 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  v11 = (v37 + *(unsigned __int8 *)(v35 + 80) + v10) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  v12 = (char *)swift_allocObject();
  *((_QWORD *)v12 + 2) = v5;
  *((_QWORD *)v12 + 3) = v40;
  *((_QWORD *)v12 + 4) = v38;
  *((_QWORD *)v12 + 5) = v39;
  *((_QWORD *)v12 + 6) = v5;
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 32))(&v12[v10], v2, v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(&v12[v11], v36, v43);
  LODWORD(v11) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v44, 1, v8);
  swift_retain_n();
  v13 = *(_QWORD *)(v0 + 224);
  if ((_DWORD)v11 == 1)
  {
    sub_23B587ED4(*(_QWORD *)(v0 + 224), &qword_2542FD530);
    if (*((_QWORD *)v12 + 2))
      goto LABEL_4;
  }
  else
  {
    sub_23B601A6C();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v13, v8);
    if (*((_QWORD *)v12 + 2))
    {
LABEL_4:
      swift_getObjectType();
      swift_unknownObjectRetain();
      v14 = sub_23B601A18();
      v16 = v15;
      swift_unknownObjectRelease();
      if (v16 | v14)
      {
        *(_QWORD *)(v0 + 16) = 0;
        *(_QWORD *)(v0 + 24) = 0;
        *(_QWORD *)(v0 + 32) = v14;
        *(_QWORD *)(v0 + 40) = v16;
      }
    }
  }
  v19 = *(_QWORD *)(v0 + 160);
  v20 = swift_task_create();
  if (*(_QWORD *)(*(_QWORD *)(v19 + 160) + 16))
  {
    v21 = *(_QWORD *)(v0 + 280);
    swift_bridgeObjectRetain();
    sub_23B58ED88(v21);
    if ((v22 & 1) != 0)
    {
      swift_retain();
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A34490);
      sub_23B601ACC();
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  v23 = *(_QWORD *)(v0 + 280);
  v24 = *(_QWORD *)(v0 + 288);
  v25 = *(_QWORD *)(v0 + 256);
  v26 = *(_QWORD *)(v0 + 160);
  ((void (*)(uint64_t, uint64_t, uint64_t))v6)(v24, v23, v25);
  swift_beginAccess();
  swift_retain();
  v27 = swift_isUniquelyReferenced_nonNull_native();
  v46 = *(_QWORD *)(v26 + 160);
  *(_QWORD *)(v26 + 160) = 0x8000000000000000;
  sub_23B5B9570(v20, v24, v27);
  *(_QWORD *)(v26 + 160) = v46;
  swift_bridgeObjectRelease();
  v42(v24, v25);
  swift_endAccess();
  swift_release();
  swift_release();
  v42(v23, v25);
  v28 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 392) = v28;
  *v28 = v0;
  v28[1] = sub_23B5FC454;
  return sub_23B601B38();
}

uint64_t sub_23B5FC454()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B5FC4B8()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5FC544()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 328) + 8))(*(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 320));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5FC5E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v8[13] = a7;
  v8[14] = a8;
  v8[11] = a5;
  v8[12] = a6;
  v8[10] = a4;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A371F0);
  v8[15] = v9;
  v8[16] = *(_QWORD *)(v9 - 8);
  v8[17] = swift_task_alloc();
  v10 = sub_23B601CE8();
  v8[18] = v10;
  v8[19] = *(_QWORD *)(v10 - 8);
  v8[20] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5FC678()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  sub_23B601CDC();
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_256A34E00 + dword_256A34E00);
  v1 = (_QWORD *)swift_task_alloc();
  v0[21] = v1;
  *v1 = v0;
  v1[1] = sub_23B5FC6F0;
  return v3(v0[10], v0[11], 0, 0, 1);
}

uint64_t sub_23B5FC6F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 160);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 144);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 152);
  *(_QWORD *)(*(_QWORD *)v1 + 176) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  return swift_task_switch();
}

uint64_t sub_23B5FC778()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 176);
  sub_23B601AE4();
  if (!v1)
  {
    v2 = *(_QWORD *)(v0 + 96) + 168;
    swift_beginAccess();
    v3 = *(_QWORD *)v2;
    if (*(_QWORD *)(*(_QWORD *)v2 + 16))
    {
      v4 = *(_QWORD *)(v0 + 104);
      swift_bridgeObjectRetain();
      v5 = sub_23B58ED88(v4);
      if ((v6 & 1) != 0)
      {
        v8 = *(_QWORD *)(v0 + 128);
        v7 = *(_QWORD *)(v0 + 136);
        v12 = *(_QWORD *)(v0 + 120);
        v9 = *(_QWORD *)(v0 + 104);
        v10 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v5);
        swift_retain();
        swift_bridgeObjectRelease();
        swift_beginAccess();
        sub_23B5E2584(v9);
        swift_endAccess();
        swift_release();
        *(_QWORD *)(v0 + 64) = v10;
        *(_BYTE *)(v0 + 72) = 1;
        __swift_instantiateConcreteTypeFromMangledName(&qword_256A371D8);
        sub_23B601B14();
        (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v12);
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5FC8F0()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5FC930(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v2 + 112);
  *(_QWORD *)(v2 + 112) = a1;
  *(_QWORD *)(v2 + 120) = a2;
  swift_retain();
  return sub_23B5864E4(v3);
}

uint64_t sub_23B5FC968(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[6] = a1;
  v2[7] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A36C70);
  v2[8] = v3;
  v2[9] = *(_QWORD *)(v3 - 8);
  v2[10] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A36C78);
  v2[11] = swift_task_alloc();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A36C80);
  v2[12] = v4;
  v2[13] = *(_QWORD *)(v4 - 8);
  v2[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5FCA1C()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t result;
  _BYTE *v3;
  uint64_t v4;
  int *v5;
  _QWORD *v6;
  uint64_t (*v7)(_QWORD);

  v1 = (_BYTE *)(*(_QWORD *)(v0 + 56) + OBJC_IVAR____TtC15FindMyBluetooth18MockCentralManager_state);
  result = swift_beginAccess();
  if (*v1 >= 5u)
  {
    v4 = *(_QWORD *)(v0 + 56);
    v5 = *(int **)(v4 + 112);
    *(_QWORD *)(v0 + 120) = v5;
    *(_QWORD *)(v0 + 128) = *(_QWORD *)(v4 + 120);
    if (v5)
    {
      v7 = (uint64_t (*)(_QWORD))((char *)v5 + *v5);
      swift_retain();
      v6 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 136) = v6;
      *v6 = v0;
      v6[1] = sub_23B5FCB78;
      return v7(*(_QWORD *)(v0 + 112));
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    swift_allocError();
    *v3 = *v1;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  return result;
}

uint64_t sub_23B5FCB78()
{
  uint64_t v0;
  uint64_t **v1;
  uint64_t *v2;
  _QWORD *v4;

  v2 = *v1;
  v2[18] = v0;
  swift_task_dealloc();
  sub_23B5864E4(v2[15]);
  if (v0)
    return swift_task_switch();
  v4 = (_QWORD *)swift_task_alloc();
  v2[19] = (uint64_t)v4;
  sub_23B58F61C(&qword_256A36C88, &qword_256A36C80, MEMORY[0x24BEE6D38]);
  *v4 = v2;
  v4[1] = sub_23B5FCC4C;
  return sub_23B601AF0();
}

uint64_t sub_23B5FCC4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v9;

  v4 = *(_QWORD *)(*(_QWORD *)v2 + 104);
  v5 = *(_QWORD **)v2;
  v5[20] = v1;
  swift_task_dealloc();
  v6 = v5[14];
  v7 = v5[12];
  if (v1)
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v7);
    return swift_task_switch();
  }
  else
  {
    v5[21] = a1;
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v7);
    v5[5] = a1;
    v9 = (_QWORD *)swift_task_alloc();
    v5[22] = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A36C98);
    sub_23B58F61C(&qword_256A36CA0, &qword_256A36C98, MEMORY[0x24BEE12C8]);
    *v9 = v5;
    v9[1] = sub_23B5FCD64;
    return sub_23B601970();
  }
}

uint64_t sub_23B5FCD64(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 184) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23B5FCDCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 72);
    v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v5 = *(_QWORD *)(v3 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_23B5A3C5C(v4, *(_QWORD *)(v0 + 80), &qword_256A36C70);
      if ((sub_23B601604() & 1) != 0)
        break;
      sub_23B587ED4(*(_QWORD *)(v0 + 80), &qword_256A36C70);
      v4 += v5;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    v7 = *(_QWORD *)(v0 + 80);
    v8 = *(_QWORD *)(v0 + 88);
    swift_bridgeObjectRelease();
    sub_23B6003F8(v7, v8);
    v6 = 0;
  }
  else
  {
LABEL_6:
    v6 = 1;
  }
  v9 = *(_QWORD *)(v0 + 88);
  v10 = *(_QWORD *)(v0 + 64);
  v11 = *(_QWORD *)(v0 + 72);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, v6, 1, v10);
  swift_bridgeObjectRelease();
  v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
  v13 = *(_QWORD *)(v0 + 88);
  if (v12 == 1)
  {
    sub_23B587ED4(*(_QWORD *)(v0 + 88), &qword_256A36C78);
    v14 = 0;
  }
  else
  {
    v14 = *(_QWORD *)(v13 + *(int *)(*(_QWORD *)(v0 + 64) + 48));
    v15 = sub_23B601634();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v13, v15);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v14);
}

uint64_t sub_23B5FCF4C()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5FCF9C()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5FCFEC(uint64_t a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[5] = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A346E0);
  v2[6] = swift_task_alloc();
  v4 = sub_23B601634();
  v2[7] = v4;
  v2[8] = *(_QWORD *)(v4 - 8);
  v5 = swift_task_alloc();
  v6 = *a2;
  v2[9] = v5;
  v2[10] = v6;
  return swift_task_switch();
}

uint64_t sub_23B5FD074()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 80) + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_macAddress;
  swift_beginAccess();
  sub_23B5A3C5C(v2, v1, (uint64_t *)&unk_256A346E0);
  return swift_task_switch();
}

uint64_t sub_23B5FD0E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 48);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v4 = *(_QWORD *)(v0 + 40);
    sub_23B587ED4(v3, (uint64_t *)&unk_256A346E0);
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A36C70);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 72);
    v6 = *(_QWORD *)(v0 + 80);
    v8 = *(_QWORD *)(v0 + 40);
    v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
    v9(v7, v3, v1);
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A36C70);
    v11 = *(int *)(v10 + 48);
    v9(v8, v7, v1);
    *(_QWORD *)(v8 + v11) = v6;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 0, 1, v10);
    swift_retain();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5FD20C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[6] = a1;
  v2[7] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A36C80);
  v2[8] = v3;
  v2[9] = *(_QWORD *)(v3 - 8);
  v2[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5FD270()
{
  uint64_t v0;
  _BYTE *v1;
  _BYTE *v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;
  uint64_t (*v8)(_QWORD);

  v1 = (_BYTE *)(*(_QWORD *)(v0 + 56) + OBJC_IVAR____TtC15FindMyBluetooth18MockCentralManager_state);
  swift_beginAccess();
  if (*v1 >= 5u)
  {
    v4 = *(_QWORD *)(v0 + 56);
    v5 = swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 88) = sub_23B5BAD60(v5);
    result = swift_bridgeObjectRelease();
    v6 = *(int **)(v4 + 112);
    *(_QWORD *)(v0 + 96) = v6;
    *(_QWORD *)(v0 + 104) = *(_QWORD *)(v4 + 120);
    if (v6)
    {
      v8 = (uint64_t (*)(_QWORD))((char *)v6 + *v6);
      swift_retain();
      v7 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 112) = v7;
      *v7 = v0;
      v7[1] = sub_23B5FD3D0;
      return v8(*(_QWORD *)(v0 + 80));
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    swift_allocError();
    *v2 = *v1;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  return result;
}

uint64_t sub_23B5FD3D0()
{
  uint64_t v0;
  uint64_t **v1;
  uint64_t *v2;
  _QWORD *v4;

  v2 = *v1;
  v2[15] = v0;
  swift_task_dealloc();
  sub_23B5864E4(v2[12]);
  if (v0)
  {
    swift_bridgeObjectRelease();
    return swift_task_switch();
  }
  else
  {
    v4 = (_QWORD *)swift_task_alloc();
    v2[16] = (uint64_t)v4;
    sub_23B58F61C(&qword_256A36C88, &qword_256A36C80, MEMORY[0x24BEE6D38]);
    *v4 = v2;
    v4[1] = sub_23B5FD4B0;
    return sub_23B601AF0();
  }
}

uint64_t sub_23B5FD4B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 72);
  *(_QWORD *)(*(_QWORD *)v2 + 136) = v1;
  swift_task_dealloc();
  if (v1)
  {
    (*(void (**)(_QWORD, _QWORD))(v5 + 8))(v4[10], v4[8]);
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = v4[10];
    v7 = v4[8];
    v4[18] = a1;
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v7);
  }
  return swift_task_switch();
}

uint64_t sub_23B5FD554()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[11];
  v0[5] = v0[18];
  v2 = swift_task_alloc();
  v0[19] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v0[20] = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A36C98);
  type metadata accessor for MockPeripheral();
  sub_23B58F61C(&qword_256A36CA0, &qword_256A36C98, MEMORY[0x24BEE12C8]);
  *v3 = v0;
  v3[1] = sub_23B6015B0;
  return sub_23B601970();
}

uint64_t sub_23B5FD624(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v3;

  v3[5] = a1;
  v3[6] = a3;
  v3[7] = *a2;
  return swift_task_switch();
}

uint64_t sub_23B5FD640()
{
  _QWORD *v0;
  _QWORD *v1;

  v1 = (_QWORD *)(v0[7] + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_mockSerialNumber);
  swift_beginAccess();
  v0[8] = *v1;
  v0[9] = v1[1];
  swift_bridgeObjectRetain();
  return swift_task_switch();
}

uint64_t sub_23B5FD6B0()
{
  uint64_t v0;
  char v1;

  if (*(_QWORD *)(v0 + 72)
    && (v1 = sub_23B5AE814(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 48)),
        swift_bridgeObjectRelease(),
        (v1 & 1) != 0))
  {
    **(_QWORD **)(v0 + 40) = *(_QWORD *)(v0 + 56);
    swift_retain();
  }
  else
  {
    **(_QWORD **)(v0 + 40) = 0;
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5FD720(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[6] = a1;
  v2[7] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A36C80);
  v2[8] = v3;
  v2[9] = *(_QWORD *)(v3 - 8);
  v2[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5FD784()
{
  uint64_t v0;
  _BYTE *v1;
  _BYTE *v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;
  uint64_t (*v8)(_QWORD);

  v1 = (_BYTE *)(*(_QWORD *)(v0 + 56) + OBJC_IVAR____TtC15FindMyBluetooth18MockCentralManager_state);
  swift_beginAccess();
  if (*v1 >= 5u)
  {
    v4 = *(_QWORD *)(v0 + 56);
    v5 = swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 88) = sub_23B5BADF4(v5);
    result = swift_bridgeObjectRelease();
    v6 = *(int **)(v4 + 112);
    *(_QWORD *)(v0 + 96) = v6;
    *(_QWORD *)(v0 + 104) = *(_QWORD *)(v4 + 120);
    if (v6)
    {
      v8 = (uint64_t (*)(_QWORD))((char *)v6 + *v6);
      swift_retain();
      v7 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 112) = v7;
      *v7 = v0;
      v7[1] = sub_23B5FD8E4;
      return v8(*(_QWORD *)(v0 + 80));
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    swift_allocError();
    *v2 = *v1;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  return result;
}

uint64_t sub_23B5FD8E4()
{
  uint64_t v0;
  uint64_t **v1;
  uint64_t *v2;
  _QWORD *v4;

  v2 = *v1;
  v2[15] = v0;
  swift_task_dealloc();
  sub_23B5864E4(v2[12]);
  if (v0)
  {
    swift_bridgeObjectRelease();
    return swift_task_switch();
  }
  else
  {
    v4 = (_QWORD *)swift_task_alloc();
    v2[16] = (uint64_t)v4;
    sub_23B58F61C(&qword_256A36C88, &qword_256A36C80, MEMORY[0x24BEE6D38]);
    *v4 = v2;
    v4[1] = sub_23B5FD9C4;
    return sub_23B601AF0();
  }
}

uint64_t sub_23B5FD9C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 72);
  *(_QWORD *)(*(_QWORD *)v2 + 136) = v1;
  swift_task_dealloc();
  if (v1)
  {
    (*(void (**)(_QWORD, _QWORD))(v5 + 8))(v4[10], v4[8]);
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = v4[10];
    v7 = v4[8];
    v4[18] = a1;
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v7);
  }
  return swift_task_switch();
}

uint64_t sub_23B5FDA68()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[11];
  v0[5] = v0[18];
  v2 = swift_task_alloc();
  v0[19] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v0[20] = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A36C98);
  type metadata accessor for MockPeripheral();
  sub_23B58F61C(&qword_256A36CA0, &qword_256A36C98, MEMORY[0x24BEE12C8]);
  *v3 = v0;
  v3[1] = sub_23B6015B0;
  return sub_23B601970();
}

uint64_t sub_23B5FDB38(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3[5] = a1;
  v3[6] = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD228);
  v3[7] = swift_task_alloc();
  v5 = sub_23B601820();
  v3[8] = v5;
  v3[9] = *(_QWORD *)(v5 - 8);
  v6 = swift_task_alloc();
  v7 = *a2;
  v3[10] = v6;
  v3[11] = v7;
  return swift_task_switch();
}

uint64_t sub_23B5FDBC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 88) + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_mockBeaconIdentifier;
  swift_beginAccess();
  sub_23B5A3C5C(v2, v1, &qword_2542FD228);
  return swift_task_switch();
}

uint64_t sub_23B5FDC34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 56);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v4 = *(_QWORD **)(v0 + 40);
    sub_23B587ED4(v3, &qword_2542FD228);
    *v4 = 0;
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 80);
    v6 = *(_QWORD *)(v0 + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v5, v3, v1);
    v7 = sub_23B5AE948(v5, v6);
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v5, v1);
    if ((v7 & 1) != 0)
    {
      **(_QWORD **)(v0 + 40) = *(_QWORD *)(v0 + 88);
      swift_retain();
    }
    else
    {
      **(_QWORD **)(v0 + 40) = 0;
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5FDD20(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[6] = a1;
  v2[7] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A36C80);
  v2[8] = v3;
  v2[9] = *(_QWORD *)(v3 - 8);
  v2[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5FDD84()
{
  uint64_t v0;
  _BYTE *v1;
  _BYTE *v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;
  uint64_t (*v8)(_QWORD);

  v1 = (_BYTE *)(*(_QWORD *)(v0 + 56) + OBJC_IVAR____TtC15FindMyBluetooth18MockCentralManager_state);
  swift_beginAccess();
  if (*v1 >= 5u)
  {
    v4 = *(_QWORD *)(v0 + 56);
    v5 = swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 88) = sub_23B5BADF4(v5);
    result = swift_bridgeObjectRelease();
    v6 = *(int **)(v4 + 112);
    *(_QWORD *)(v0 + 96) = v6;
    *(_QWORD *)(v0 + 104) = *(_QWORD *)(v4 + 120);
    if (v6)
    {
      v8 = (uint64_t (*)(_QWORD))((char *)v6 + *v6);
      swift_retain();
      v7 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 112) = v7;
      *v7 = v0;
      v7[1] = sub_23B5FDEE4;
      return v8(*(_QWORD *)(v0 + 80));
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    type metadata accessor for CentralManager.Error();
    sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
    swift_allocError();
    *v2 = *v1;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  return result;
}

uint64_t sub_23B5FDEE4()
{
  uint64_t v0;
  uint64_t **v1;
  uint64_t *v2;
  _QWORD *v4;

  v2 = *v1;
  v2[15] = v0;
  swift_task_dealloc();
  sub_23B5864E4(v2[12]);
  if (v0)
  {
    swift_bridgeObjectRelease();
    return swift_task_switch();
  }
  else
  {
    v4 = (_QWORD *)swift_task_alloc();
    v2[16] = (uint64_t)v4;
    sub_23B58F61C(&qword_256A36C88, &qword_256A36C80, MEMORY[0x24BEE6D38]);
    *v4 = v2;
    v4[1] = sub_23B5FDFC4;
    return sub_23B601AF0();
  }
}

uint64_t sub_23B5FDFC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 72);
  *(_QWORD *)(*(_QWORD *)v2 + 136) = v1;
  swift_task_dealloc();
  if (v1)
  {
    (*(void (**)(_QWORD, _QWORD))(v5 + 8))(v4[10], v4[8]);
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = v4[10];
    v7 = v4[8];
    v4[18] = a1;
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v7);
  }
  return swift_task_switch();
}

uint64_t sub_23B5FE068()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[11];
  v0[5] = v0[18];
  v2 = swift_task_alloc();
  v0[19] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v0[20] = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A36C98);
  type metadata accessor for MockPeripheral();
  sub_23B58F61C(&qword_256A36CA0, &qword_256A36C98, MEMORY[0x24BEE12C8]);
  *v3 = v0;
  v3[1] = sub_23B5FE138;
  return sub_23B601970();
}

uint64_t sub_23B5FE138(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_23B5FE1C4()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5FE1F8()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5FE22C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3[2] = a1;
  v3[3] = a3;
  v5 = sub_23B601820();
  v3[4] = v5;
  v3[5] = *(_QWORD *)(v5 - 8);
  v6 = swift_task_alloc();
  v7 = *a2;
  v3[6] = v6;
  v3[7] = v7;
  return swift_task_switch();
}

uint64_t sub_23B5FE294()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  sub_23B6015BC();
  v5 = sub_23B5AE948(v1, v4);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  if ((v5 & 1) != 0)
    v6 = swift_retain();
  else
    v6 = 0;
  **(_QWORD **)(v0 + 16) = v6;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5FE348@<X0>(uint64_t a1@<X8>)
{
  return sub_23B5FE35C(a1);
}

uint64_t sub_23B5FE35C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD568);
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD5A8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC15FindMyBluetooth18MockCentralManager_isPairingCentralManager) & 1) == 0)
  {
    v9 = v1 + OBJC_IVAR____TtC15FindMyBluetooth18MockCentralManager_connectionEventsStream;
    swift_beginAccess();
    sub_23B5A3C5C(v9, (uint64_t)v8, &qword_2542FD5A8);
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD5A0);
    LODWORD(v9) = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v8, 1, v10);
    sub_23B587ED4((uint64_t)v8, &qword_2542FD5A8);
    if ((_DWORD)v9 == 1)
    {
      v11 = v1 + OBJC_IVAR____TtC15FindMyBluetooth18MockCentralManager_connectionEventsStreamContinuation;
      swift_beginAccess();
      sub_23B5A3C5C(v11, (uint64_t)v5, (uint64_t *)&unk_2542FD568);
      v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD558);
      LODWORD(v11) = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v5, 1, v12);
      sub_23B587ED4((uint64_t)v5, (uint64_t *)&unk_2542FD568);
      if ((_DWORD)v11 == 1)
        return sub_23B5FE5BC(a1);
    }
  }
  type metadata accessor for CentralManager.Error();
  sub_23B5884D4((unint64_t *)&qword_256A346F0, (uint64_t (*)(uint64_t))type metadata accessor for CentralManager.Error, (uint64_t)&protocol conformance descriptor for CentralManager.Error);
  swift_allocError();
  swift_storeEnumTagMultiPayload();
  return swift_willThrow();
}

uint64_t sub_23B5FE5BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD568);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD5A8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD540);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD558);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD218);
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BEE6A10], v8);
  sub_23B601A84();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD5A0);
  v17 = *(_QWORD *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v7, a1, v16);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v7, 0, 1, v16);
  v18 = v22;
  v19 = v22 + OBJC_IVAR____TtC15FindMyBluetooth18MockCentralManager_connectionEventsStream;
  swift_beginAccess();
  sub_23B5A2728((uint64_t)v7, v19, &qword_2542FD5A8);
  swift_endAccess();
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v4, v15, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v4, 0, 1, v12);
  v20 = v18 + OBJC_IVAR____TtC15FindMyBluetooth18MockCentralManager_connectionEventsStreamContinuation;
  swift_beginAccess();
  sub_23B5A2728((uint64_t)v4, v20, (uint64_t *)&unk_2542FD568);
  swift_endAccess();
  swift_retain();
  sub_23B601A90();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t sub_23B5FE858(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[4];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD530);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23B601A78();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = a2;
  v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  swift_retain();
  if (v9 == 1)
  {
    sub_23B587ED4((uint64_t)v5, &qword_2542FD530);
    v10 = 0;
    v11 = 0;
  }
  else
  {
    sub_23B601A6C();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
    if (v8[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v10 = sub_23B601A18();
      v11 = v12;
      swift_unknownObjectRelease();
    }
    else
    {
      v10 = 0;
      v11 = 0;
    }
  }
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = &unk_256A371C8;
  *(_QWORD *)(v13 + 24) = v8;
  if (v11 | v10)
  {
    v15[0] = 0;
    v15[1] = 0;
    v15[2] = v10;
    v15[3] = v11;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_23B5FEA2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[8] = a4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD568);
  v4[9] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD5A8);
  v4[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5FEAB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v0 + 72);
  v1 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 64);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD5A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v1, 1, 1, v4);
  v5 = v3 + OBJC_IVAR____TtC15FindMyBluetooth18MockCentralManager_connectionEventsStream;
  swift_beginAccess();
  sub_23B5A2728(v1, v5, &qword_2542FD5A8);
  swift_endAccess();
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD558);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v2, 1, 1, v6);
  v7 = v3 + OBJC_IVAR____TtC15FindMyBluetooth18MockCentralManager_connectionEventsStreamContinuation;
  swift_beginAccess();
  sub_23B5A2728(v2, v7, (uint64_t *)&unk_2542FD568);
  swift_endAccess();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t MockCentralManager.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23B5864E4(*(_QWORD *)(v0 + 112));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23B587ED4(v0 + OBJC_IVAR____TtC15FindMyBluetooth18MockCentralManager_connectionEventsStream, &qword_2542FD5A8);
  sub_23B587ED4(v0 + OBJC_IVAR____TtC15FindMyBluetooth18MockCentralManager_connectionEventsStreamContinuation, (uint64_t *)&unk_2542FD568);
  v1 = v0 + OBJC_IVAR____TtC15FindMyBluetooth18MockCentralManager_id;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD1E0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_23B5AF2F8(*(_QWORD *)(v0 + OBJC_IVAR____TtC15FindMyBluetooth18MockCentralManager_mockBehavior), *(_QWORD *)(v0 + OBJC_IVAR____TtC15FindMyBluetooth18MockCentralManager_mockBehavior + 8), *(_QWORD *)(v0 + OBJC_IVAR____TtC15FindMyBluetooth18MockCentralManager_mockBehavior + 16));
  swift_defaultActor_destroy();
  return v0;
}

uint64_t MockCentralManager.__deallocating_deinit()
{
  MockCentralManager.deinit();
  return swift_defaultActor_deallocate();
}

uint64_t MockCentralManager.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23B5FECB4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (__cdecl *v3)();

  v3 = (uint64_t (__cdecl *)())((char *)&dword_256A36C00 + dword_256A36C00);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23B58F8B4;
  return v3();
}

uint64_t sub_23B5FED0C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC15FindMyBluetooth18MockCentralManager_id;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD1E0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_23B5FED54()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15FindMyBluetooth18MockCentralManager_isPairingCentralManager);
}

uint64_t sub_23B5FED64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = v1;
  return swift_task_switch();
}

uint64_t sub_23B5FED7C()
{
  uint64_t v0;
  _BYTE *v1;
  _BYTE *v2;

  v1 = *(_BYTE **)(v0 + 40);
  v2 = (_BYTE *)(*(_QWORD *)(v0 + 48) + OBJC_IVAR____TtC15FindMyBluetooth18MockCentralManager_state);
  swift_beginAccess();
  *v1 = *v2;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5FEDD0()
{
  uint64_t v0;
  _QWORD *v1;

  *(_BYTE *)(v0 + 25) = 5;
  type metadata accessor for MockCentralManager();
  swift_allocObject();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  *v1 = v0;
  v1[1] = sub_23B5E5EB4;
  return MockCentralManager.init(options:initialState:)((uint64_t)v1, (char *)(v0 + 25));
}

uint64_t sub_23B5FEE40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v8;
  uint64_t v9;

  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_23B587844;
  return sub_23B5FB724(a1, v9, a3, a4);
}

uint64_t sub_23B5FEEA8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23B58F8B4;
  return sub_23B5FC968(a1);
}

uint64_t sub_23B5FEEF4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23B58F8B4;
  return sub_23B5FD20C(a1);
}

uint64_t sub_23B5FEF40(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23B58F8B4;
  return sub_23B5FD720(a1);
}

uint64_t sub_23B5FEF8C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23B58F8B4;
  return sub_23B5FDD20(a1);
}

uint64_t sub_23B5FEFD8@<X0>(uint64_t a1@<X8>)
{
  return sub_23B5FE348(a1);
}

uint64_t sub_23B5FEFEC@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC15FindMyBluetooth18MockCentralManager_id;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD1E0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_23B5FF038()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (__cdecl *v3)();

  v3 = (uint64_t (__cdecl *)())((char *)&dword_256A371B0 + dword_256A371B0);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23B58CFC0;
  return v3();
}

uint64_t sub_23B5FF090()
{
  return sub_23B5CF538();
}

uint64_t MockCentralManager.yield(connectionEvent:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A35D20);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD568);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD558);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = v1 + OBJC_IVAR____TtC15FindMyBluetooth18MockCentralManager_connectionEventsStreamContinuation;
  swift_beginAccess();
  sub_23B5A3C5C(v14, (uint64_t)v9, (uint64_t *)&unk_2542FD568);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
    return sub_23B587ED4((uint64_t)v9, (uint64_t *)&unk_2542FD568);
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
  v16 = sub_23B601658();
  MEMORY[0x24BDAC7A8](v16);
  *(&v17 - 2) = (uint64_t)v13;
  *(&v17 - 1) = a1;
  sub_23B601640();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_23B5FF298(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v11;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD218);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (uint64_t *)((char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = (uint64_t)v8 + *(int *)(v6 + 48);
  *v8 = a1;
  sub_23B600D64(a3, v9);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542FD558);
  return sub_23B601A9C();
}

uint64_t sub_23B5FF350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[5] = a4;
  v5[6] = a5;
  v6 = sub_23B601CE8();
  v5[7] = v6;
  v5[8] = *(_QWORD *)(v6 - 8);
  v5[9] = swift_task_alloc();
  v5[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5FF3C4()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  id v6;
  _QWORD *v7;
  char *v9;

  v1 = (uint64_t *)(v0[5] + OBJC_IVAR____TtC15FindMyBluetooth18MockCentralManager_mockBehavior);
  swift_beginAccess();
  v2 = *v1;
  v0[11] = *v1;
  v3 = v1[1];
  v0[12] = v3;
  v4 = v1[2];
  v0[13] = v4;
  if (v4 < 0)
  {
    v6 = (id)(v4 & 0x7FFFFFFFFFFFFFFFLL);
    sub_23B601CDC();
    v9 = (char *)&dword_256A34E00 + dword_256A34E00;
    v7 = (_QWORD *)swift_task_alloc();
    v0[14] = v7;
    *v7 = v0;
    v7[1] = sub_23B5FF4D0;
  }
  else
  {
    sub_23B601CDC();
    v9 = (char *)&dword_256A34E00 + dword_256A34E00;
    v5 = (_QWORD *)swift_task_alloc();
    v0[16] = v5;
    *v5 = v0;
    v5[1] = sub_23B5FF55C;
  }
  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t))v9)(v2, v3, 0, 0, 1);
}

uint64_t sub_23B5FF4D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch();
}

uint64_t sub_23B5FF55C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  v5 = *(_QWORD **)v1;
  v5[17] = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  if (!v0)
  {
    v6 = v5[6] + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_id;
    v7 = (_QWORD *)swift_task_alloc();
    v5[18] = v7;
    *v7 = v5;
    v7[1] = sub_23B6015A0;
    v8 = v5[5];
    v7[8] = v6;
    v7[9] = v8;
  }
  return swift_task_switch();
}

uint64_t sub_23B5FF628()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  id v3;
  _QWORD *v4;
  uint64_t v5;

  v1 = (void *)(v0[13] & 0x7FFFFFFFFFFFFFFFLL);
  v2 = v0[6] + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_id;
  v3 = v1;
  v4 = (_QWORD *)swift_task_alloc();
  v0[19] = v4;
  *v4 = v0;
  v4[1] = sub_23B5FF6AC;
  v5 = v0[5];
  v4[12] = v1;
  v4[13] = v5;
  v4[11] = v2;
  return swift_task_switch();
}

uint64_t sub_23B5FF6AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 96);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 104);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 88);
  swift_task_dealloc();
  sub_23B5AF2F8(v3, v1, v2);
  return swift_task_switch();
}

uint64_t sub_23B5FF724(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = v1;
  return swift_task_switch();
}

uint64_t sub_23B5FF73C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;

  v1 = *(_QWORD *)(v0 + 72);
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 176);
  if (*(_QWORD *)(v2 + 16))
  {
    v3 = *(_QWORD *)(v0 + 64);
    swift_bridgeObjectRetain();
    v4 = sub_23B58ED88(v3);
    if ((v5 & 1) != 0)
    {
      *(_QWORD *)(v0 + 80) = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v4);
      swift_retain();
      swift_bridgeObjectRelease();
      return swift_task_switch();
    }
    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5FF7E4()
{
  uint64_t v0;
  _BYTE *v1;
  _QWORD *v2;

  v1 = (_BYTE *)(*(_QWORD *)(v0 + 80) + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_state);
  swift_beginAccess();
  *v1 = 3;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v2;
  *v2 = v0;
  v2[1] = sub_23B5FF85C;
  return sub_23B5BE660();
}

uint64_t sub_23B5FF85C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B5FF8B4()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5FF8E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[12] = a2;
  v3[13] = v2;
  v3[11] = a1;
  return swift_task_switch();
}

uint64_t sub_23B5FF900()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 104) + 176;
  swift_beginAccess();
  v2 = *(_QWORD *)v1;
  if (*(_QWORD *)(*(_QWORD *)v1 + 16))
  {
    v3 = *(_QWORD *)(v0 + 88);
    swift_bridgeObjectRetain();
    v4 = sub_23B58ED88(v3);
    if ((v5 & 1) != 0)
    {
      v6 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v4);
      *(_QWORD *)(v0 + 112) = v6;
      swift_retain();
      swift_bridgeObjectRelease();
      v7 = v6 + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_id;
      swift_beginAccess();
      sub_23B5E2584(v7);
      swift_endAccess();
      swift_release();
      return swift_task_switch();
    }
    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5FFA00()
{
  uint64_t *v0;
  _BYTE *v1;
  _QWORD *v2;

  v1 = (_BYTE *)(v0[14] + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_state);
  swift_beginAccess();
  *v1 = 1;
  v2 = (_QWORD *)swift_task_alloc();
  v0[15] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = sub_23B5FFA80;
  return sub_23B5BE8E8(v0[12]);
}

uint64_t sub_23B5FFA80()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B5FFAD8()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5FFB08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[5] = a4;
  v5[6] = a5;
  v6 = sub_23B601CE8();
  v5[7] = v6;
  v5[8] = *(_QWORD *)(v6 - 8);
  v5[9] = swift_task_alloc();
  v5[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B5FFB7C()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  id v6;
  _QWORD *v7;
  char *v9;

  v1 = (uint64_t *)(v0[5] + OBJC_IVAR____TtC15FindMyBluetooth18MockCentralManager_mockBehavior);
  swift_beginAccess();
  v2 = *v1;
  v0[11] = *v1;
  v3 = v1[1];
  v0[12] = v3;
  v4 = v1[2];
  v0[13] = v4;
  if (v4 < 0)
  {
    v6 = (id)(v4 & 0x7FFFFFFFFFFFFFFFLL);
    sub_23B601CDC();
    v9 = (char *)&dword_256A34E00 + dword_256A34E00;
    v7 = (_QWORD *)swift_task_alloc();
    v0[14] = v7;
    *v7 = v0;
    v7[1] = sub_23B5FFC88;
  }
  else
  {
    sub_23B601CDC();
    v9 = (char *)&dword_256A34E00 + dword_256A34E00;
    v5 = (_QWORD *)swift_task_alloc();
    v0[16] = v5;
    *v5 = v0;
    v5[1] = sub_23B5FFD14;
  }
  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t))v9)(v2, v3, 0, 0, 1);
}

uint64_t sub_23B5FFC88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch();
}

uint64_t sub_23B5FFD14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  v5 = *(_QWORD **)v1;
  v5[17] = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  if (!v0)
  {
    v6 = v5[6] + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_id;
    v7 = (_QWORD *)swift_task_alloc();
    v5[18] = v7;
    *v7 = v5;
    v7[1] = sub_23B5FFDE4;
    v8 = v5[5];
    v7[12] = 0;
    v7[13] = v8;
    v7[11] = v6;
  }
  return swift_task_switch();
}

uint64_t sub_23B5FFDE4()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23B5FFE3C()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5FFE78()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  id v3;
  _QWORD *v4;
  uint64_t v5;

  v1 = (void *)(v0[13] & 0x7FFFFFFFFFFFFFFFLL);
  v2 = v0[6] + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_id;
  v3 = v1;
  v4 = (_QWORD *)swift_task_alloc();
  v0[19] = v4;
  *v4 = v0;
  v4[1] = sub_23B5FFEFC;
  v5 = v0[5];
  v4[12] = v1;
  v4[13] = v5;
  v4[11] = v2;
  return swift_task_switch();
}

uint64_t sub_23B5FFEFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 96);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 104);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 88);
  swift_task_dealloc();
  sub_23B5AF2F8(v3, v1, v2);
  return swift_task_switch();
}

uint64_t sub_23B5FFF74()
{
  uint64_t v0;

  sub_23B5AF2F8(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B5FFFBC()
{
  uint64_t v0;

  sub_23B5AF2F8(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B600004(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[12] = a2;
  v3[13] = v2;
  v3[11] = a1;
  return swift_task_switch();
}

uint64_t sub_23B600020()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 104) + 176;
  swift_beginAccess();
  v2 = *(_QWORD *)v1;
  if (*(_QWORD *)(*(_QWORD *)v1 + 16))
  {
    v3 = *(_QWORD *)(v0 + 88);
    swift_bridgeObjectRetain();
    v4 = sub_23B58ED88(v3);
    if ((v5 & 1) != 0)
    {
      v6 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v4);
      *(_QWORD *)(v0 + 112) = v6;
      swift_retain();
      swift_bridgeObjectRelease();
      v7 = v6 + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_id;
      swift_beginAccess();
      sub_23B5E2584(v7);
      swift_endAccess();
      swift_release();
      return swift_task_switch();
    }
    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B600120()
{
  uint64_t *v0;
  _BYTE *v1;
  _QWORD *v2;

  v1 = (_BYTE *)(v0[14] + OBJC_IVAR____TtC15FindMyBluetooth14MockPeripheral_state);
  swift_beginAccess();
  *v1 = 1;
  v2 = (_QWORD *)swift_task_alloc();
  v0[15] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = sub_23B6001A0;
  return sub_23B5BEBA0(v0[12]);
}

uint64_t sub_23B6001A0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B6001F8(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23B5E6BDC;
  return v6(a1);
}

uint64_t sub_23B60025C()
{
  return swift_task_switch();
}

uint64_t sub_23B600270()
{
  uint64_t v0;

  if (qword_256A340E8 != -1)
    swift_once();
  *(_QWORD *)(v0 + 32) = qword_256A36BF0;
  return swift_task_switch();
}

uint64_t sub_23B6002D4()
{
  uint64_t v0;
  _QWORD *v2;
  uint64_t v3;

  if (swift_weakLoadStrong())
    return (*(uint64_t (**)(void))(v0 + 8))();
  *(_BYTE *)(v0 + 25) = 5;
  type metadata accessor for MockCentralManager();
  swift_allocObject();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v2;
  *v2 = v0;
  v2[1] = sub_23B5E39B4;
  return sub_23B5FAC5C(1, v3, (char *)(v0 + 25));
}

uint64_t type metadata accessor for MockCentralManager()
{
  uint64_t result;

  result = qword_256A36E28;
  if (!qword_256A36E28)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23B6003A8(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

uint64_t sub_23B6003BC(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23B6003C8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23B6003EC(uint64_t a1)
{
  uint64_t *v1;

  return sub_23B5FB96C(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_23B6003F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A36C70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23B600440(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *(_QWORD *)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23B587FA4;
  v7[5] = a1;
  v7[6] = v6;
  v7[7] = *a2;
  return swift_task_switch();
}

uint64_t sub_23B6004B4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *(_QWORD *)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23B587FA4;
  return sub_23B5FDB38(a1, a2, v6);
}

uint64_t sub_23B60051C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *(_QWORD *)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23B587FA4;
  return sub_23B5FE22C(a1, a2, v6);
}

uint64_t sub_23B600584(uint64_t a1)
{
  uint64_t v1;

  return sub_23B5FE858(a1, v1);
}

uint64_t sub_23B60058C(uint64_t a1)
{
  uint64_t v1;

  return sub_23B5FF298(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_23B6005A4()
{
  return sub_23B5884D4(qword_256A36CF0, (uint64_t (*)(uint64_t))type metadata accessor for MockPeripheral, (uint64_t)&protocol conformance descriptor for MockPeripheral);
}

uint64_t sub_23B6005D0(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_23B5884D4(&qword_256A36DE8, (uint64_t (*)(uint64_t))type metadata accessor for MockCentralManager, (uint64_t)&protocol conformance descriptor for MockCentralManager);
  a1[2] = sub_23B5884D4((unint64_t *)&unk_256A35E08, (uint64_t (*)(uint64_t))type metadata accessor for MockCentralManager, (uint64_t)&protocol conformance descriptor for MockCentralManager);
  result = sub_23B5884D4((unint64_t *)&unk_256A36DF0, (uint64_t (*)(uint64_t))type metadata accessor for MockCentralManager, (uint64_t)&protocol conformance descriptor for MockCentralManager);
  a1[3] = result;
  return result;
}

uint64_t sub_23B600648()
{
  return sub_23B5884D4((unint64_t *)&unk_256A35910, (uint64_t (*)(uint64_t))type metadata accessor for MockCentralManager, (uint64_t)&protocol conformance descriptor for MockCentralManager);
}

uint64_t sub_23B600674@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC15FindMyBluetooth18MockCentralManager_state);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_23B6006C4(char *a1, _QWORD *a2)
{
  char v2;
  _BYTE *v3;
  uint64_t result;

  v2 = *a1;
  v3 = (_BYTE *)(*a2 + OBJC_IVAR____TtC15FindMyBluetooth18MockCentralManager_state);
  result = swift_beginAccess();
  *v3 = v2;
  return result;
}

uint64_t sub_23B600718()
{
  return type metadata accessor for MockCentralManager();
}

void sub_23B600720()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_23B5AC398(319, &qword_2542FD5B0, &qword_2542FD5A0);
  if (v0 <= 0x3F)
  {
    sub_23B5AC398(319, &qword_2542FD578, (uint64_t *)&unk_2542FD558);
    if (v1 <= 0x3F)
    {
      sub_23B600CF0();
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for MockCentralManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MockCentralManager.state.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 408))();
}

uint64_t dispatch thunk of MockCentralManager.state.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 416))();
}

uint64_t dispatch thunk of MockCentralManager.state.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 424))();
}

uint64_t dispatch thunk of MockCentralManager.mockBehavior.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 432))();
}

uint64_t dispatch thunk of MockCentralManager.mockBehavior.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 440))();
}

uint64_t dispatch thunk of MockCentralManager.mockBehavior.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 448))();
}

uint64_t dispatch thunk of MockCentralManager.__allocating_init(options:initialState:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v2 + 456) + *(_QWORD *)(v2 + 456));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_23B5F5394;
  return v8(a1, a2);
}

uint64_t dispatch thunk of MockCentralManager.isPaired(peripheral:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 472) + *(_QWORD *)(*(_QWORD *)v1 + 472));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23B58EB10;
  return v6(a1);
}

uint64_t dispatch thunk of MockCentralManager.pair(peripheral:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 480) + *(_QWORD *)(*(_QWORD *)v1 + 480));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23B587FA4;
  return v6(a1);
}

uint64_t dispatch thunk of MockCentralManager.unpair(peripheral:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 488) + *(_QWORD *)(*(_QWORD *)v1 + 488));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23B587FA4;
  return v6(a1);
}

uint64_t dispatch thunk of MockCentralManager.stateStream()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 496) + *(_QWORD *)(*(_QWORD *)v1 + 496));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23B587844;
  return v6(a1);
}

uint64_t dispatch thunk of MockCentralManager.scanForPeripherals(scanMode:garbageCollectInterval:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);

  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v4 + 504)
                                                                   + *(_QWORD *)(*(_QWORD *)v4 + 504));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v10;
  *v10 = v5;
  v10[1] = sub_23B587FA4;
  return v12(a1, a2, a3, a4);
}

uint64_t dispatch thunk of MockCentralManager.setMockScanResponder(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 512))();
}

uint64_t dispatch thunk of MockCentralManager.retrievePeripheral(macAddress:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 520) + *(_QWORD *)(*(_QWORD *)v1 + 520));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23B58EB10;
  return v6(a1);
}

uint64_t dispatch thunk of MockCentralManager.retrievePeripherals(serialNumbers:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 528) + *(_QWORD *)(*(_QWORD *)v1 + 528));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23B58F8B8;
  return v6(a1);
}

uint64_t dispatch thunk of MockCentralManager.retrievePeripherals(beaconIdentifiers:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 536) + *(_QWORD *)(*(_QWORD *)v1 + 536));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23B58F8B8;
  return v6(a1);
}

uint64_t dispatch thunk of MockCentralManager.retrievePeripherals(identifiers:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 544) + *(_QWORD *)(*(_QWORD *)v1 + 544));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23B58F8B8;
  return v6(a1);
}

uint64_t dispatch thunk of MockCentralManager.connectionEvents(serviceIdentifiers:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 552))();
}

uint64_t dispatch thunk of MockCentralManager.connectionEvents(peripheralIdentifiers:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 560))();
}

uint64_t dispatch thunk of MockCentralManager._connectionEvents()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 568))();
}

void sub_23B600CF0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2542FD670)
  {
    type metadata accessor for CentralManager(255);
    v0 = sub_23B6015C8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2542FD670);
  }
}

uint64_t _s15FindMyBluetooth30PairingManagerAccessControllerCMa_0()
{
  return objc_opt_self();
}

uint64_t sub_23B600D64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CentralManager.ConnectedState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23B600DA8()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B600DD4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23B587FA4;
  return sub_23B5FEA2C(a1, v4, v5, v6);
}

uint64_t sub_23B600E40()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B600E64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A371D8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23B600EF0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A371D8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v11 = *v10;
  v12 = v10[1];
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_23B587FA4;
  return sub_23B5FBB04(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_23B600FB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A371D8);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

uint64_t sub_23B60107C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A359A0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A371D8) - 8) + 80);
  v8 = v5 + v6 + v7;
  v9 = v1[2];
  v10 = v1[3];
  v11 = v1[4];
  v12 = v1[5];
  v13 = v1[6];
  v14 = (uint64_t)v1 + v5;
  v15 = (uint64_t)v1 + (v8 & ~v7);
  v16 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v16;
  *v16 = v2;
  v16[1] = sub_23B587FA4;
  return sub_23B5FC5E0(a1, v9, v10, v11, v12, v13, v14, v15);
}

uint64_t sub_23B601154()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23B601820();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23B6011C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_23B601820() - 8) + 80);
  return sub_23B5FB1D4(a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t sub_23B601208()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542FD580);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_23B601820();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

uint64_t sub_23B6012D0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2542FD580) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_23B601820() - 8) + 80);
  v8 = v5 + v6 + v7;
  v9 = v1[2];
  v10 = v1[3];
  v11 = v1[4];
  v12 = (uint64_t)v1 + v5;
  v13 = (uint64_t)v1 + (v8 & ~v7);
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_23B587FA4;
  return sub_23B5FB508(a1, v9, v10, v11, v12, v13);
}

uint64_t sub_23B601390()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23B601820();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23B60140C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_23B601820() - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_23B587FA4;
  return sub_23B5FB318(a1, v5, v6, v7, v8);
}

uint64_t sub_23B6014A4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_23B587844;
  return sub_23B5FFB08(a1, v4, v5, v7, v6);
}

uint64_t sub_23B601520(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_23B587FA4;
  return sub_23B5FF350(a1, v4, v5, v7, v6);
}

uint64_t sub_23B6015BC()
{
  return MEMORY[0x24BE316A8]();
}

uint64_t sub_23B6015C8()
{
  return MEMORY[0x24BE316B0]();
}

uint64_t sub_23B6015D4()
{
  return MEMORY[0x24BE316C0]();
}

uint64_t sub_23B6015E0()
{
  return MEMORY[0x24BE316F0]();
}

uint64_t sub_23B6015EC()
{
  return MEMORY[0x24BE316F8]();
}

uint64_t sub_23B6015F8()
{
  return MEMORY[0x24BE31700]();
}

uint64_t sub_23B601604()
{
  return MEMORY[0x24BE31708]();
}

uint64_t sub_23B601610()
{
  return MEMORY[0x24BE31710]();
}

uint64_t sub_23B60161C()
{
  return MEMORY[0x24BE31718]();
}

uint64_t sub_23B601628()
{
  return MEMORY[0x24BE31720]();
}

uint64_t sub_23B601634()
{
  return MEMORY[0x24BE31730]();
}

uint64_t sub_23B601640()
{
  return MEMORY[0x24BE31790]();
}

uint64_t sub_23B60164C()
{
  return MEMORY[0x24BE317B8]();
}

uint64_t sub_23B601658()
{
  return MEMORY[0x24BE317C0]();
}

uint64_t sub_23B601664()
{
  return MEMORY[0x24BDCB188]();
}

uint64_t sub_23B601670()
{
  return MEMORY[0x24BE31A30]();
}

uint64_t sub_23B60167C()
{
  return MEMORY[0x24BDCBBB0]();
}

uint64_t sub_23B601688()
{
  return MEMORY[0x24BDCBBC8]();
}

uint64_t sub_23B601694()
{
  return MEMORY[0x24BDCBBD0]();
}

uint64_t sub_23B6016A0()
{
  return MEMORY[0x24BDCBBD8]();
}

uint64_t sub_23B6016AC()
{
  return MEMORY[0x24BDCBBF0]();
}

uint64_t sub_23B6016B8()
{
  return MEMORY[0x24BDCBC10]();
}

uint64_t sub_23B6016C4()
{
  return MEMORY[0x24BDCD2F0]();
}

uint64_t sub_23B6016D0()
{
  return MEMORY[0x24BE31A40]();
}

uint64_t sub_23B6016DC()
{
  return MEMORY[0x24BE31A50]();
}

uint64_t sub_23B6016E8()
{
  return MEMORY[0x24BDCDBC8]();
}

uint64_t sub_23B6016F4()
{
  return MEMORY[0x24BDCDBE0]();
}

uint64_t sub_23B601700()
{
  return MEMORY[0x24BDCDBF8]();
}

uint64_t sub_23B60170C()
{
  return MEMORY[0x24BDCDC10]();
}

uint64_t sub_23B601718()
{
  return MEMORY[0x24BDCDC28]();
}

uint64_t sub_23B601724()
{
  return MEMORY[0x24BDCDC58]();
}

uint64_t sub_23B601730()
{
  return MEMORY[0x24BDCDC68]();
}

uint64_t sub_23B60173C()
{
  return MEMORY[0x24BDCDCA0]();
}

uint64_t sub_23B601748()
{
  return MEMORY[0x24BDCDCE0]();
}

uint64_t sub_23B601754()
{
  return MEMORY[0x24BDCDD40]();
}

uint64_t sub_23B601760()
{
  return MEMORY[0x24BDCDD78]();
}

uint64_t sub_23B60176C()
{
  return MEMORY[0x24BDCDE70]();
}

uint64_t sub_23B601778()
{
  return MEMORY[0x24BDCDE78]();
}

uint64_t sub_23B601784()
{
  return MEMORY[0x24BDCE8F8]();
}

uint64_t sub_23B601790()
{
  return MEMORY[0x24BDCE900]();
}

uint64_t sub_23B60179C()
{
  return MEMORY[0x24BE31A68]();
}

uint64_t sub_23B6017A8()
{
  return MEMORY[0x24BE31A70]();
}

uint64_t sub_23B6017B4()
{
  return MEMORY[0x24BE31A78]();
}

uint64_t sub_23B6017C0()
{
  return MEMORY[0x24BE31A80]();
}

uint64_t sub_23B6017CC()
{
  return MEMORY[0x24BDCE998]();
}

uint64_t sub_23B6017D8()
{
  return MEMORY[0x24BDCE9B0]();
}

uint64_t sub_23B6017E4()
{
  return MEMORY[0x24BDCE9D0]();
}

uint64_t _s15FindMyBluetooth11ServiceUUIDV2eeoiySbAC_ACtFZ_0()
{
  return MEMORY[0x24BDCE9E0]();
}

uint64_t sub_23B6017FC()
{
  return MEMORY[0x24BDCE9F8]();
}

uint64_t sub_23B601808()
{
  return MEMORY[0x24BDCEA10]();
}

uint64_t sub_23B601814()
{
  return MEMORY[0x24BDCEA40]();
}

uint64_t sub_23B601820()
{
  return MEMORY[0x24BDCEA58]();
}

uint64_t sub_23B60182C()
{
  return MEMORY[0x24BE31A88]();
}

uint64_t sub_23B601838()
{
  return MEMORY[0x24BDCEEA8]();
}

uint64_t sub_23B601844()
{
  return MEMORY[0x24BEE78A8]();
}

uint64_t sub_23B601850()
{
  return MEMORY[0x24BEE78C0]();
}

uint64_t sub_23B60185C()
{
  return MEMORY[0x24BEE78D8]();
}

uint64_t sub_23B601868()
{
  return MEMORY[0x24BEE54C8]();
}

uint64_t sub_23B601874()
{
  return MEMORY[0x24BEE5500]();
}

uint64_t sub_23B601880()
{
  return MEMORY[0x24BEE5618]();
}

uint64_t sub_23B60188C()
{
  return MEMORY[0x24BEE5648]();
}

uint64_t sub_23B601898()
{
  return MEMORY[0x24BEE67F8]();
}

uint64_t sub_23B6018A4()
{
  return MEMORY[0x24BDCF808]();
}

uint64_t sub_23B6018B0()
{
  return MEMORY[0x24BDCF830]();
}

uint64_t sub_23B6018BC()
{
  return MEMORY[0x24BEE0270]();
}

uint64_t sub_23B6018C8()
{
  return MEMORY[0x24BEE0610]();
}

uint64_t sub_23B6018D4()
{
  return MEMORY[0x24BEE0618]();
}

uint64_t sub_23B6018E0()
{
  return MEMORY[0x24BEE07D0]();
}

uint64_t sub_23B6018EC()
{
  return MEMORY[0x24BEE0980]();
}

uint64_t sub_23B6018F8()
{
  return MEMORY[0x24BDCF9E0]();
}

uint64_t sub_23B601904()
{
  return MEMORY[0x24BDCFA08]();
}

uint64_t sub_23B601910()
{
  return MEMORY[0x24BDCFA18]();
}

uint64_t sub_23B60191C()
{
  return MEMORY[0x24BDCFA28]();
}

uint64_t sub_23B601928()
{
  return MEMORY[0x24BEE09F0]();
}

uint64_t sub_23B601934()
{
  return MEMORY[0x24BEE0A20]();
}

uint64_t sub_23B601940()
{
  return MEMORY[0x24BEE0AD0]();
}

uint64_t sub_23B60194C()
{
  return MEMORY[0x24BEE0B20]();
}

uint64_t sub_23B601958()
{
  return MEMORY[0x24BEE0BC0]();
}

uint64_t sub_23B601964()
{
  return MEMORY[0x24BEE0C10]();
}

uint64_t sub_23B601970()
{
  return MEMORY[0x24BE31AB8]();
}

uint64_t sub_23B60197C()
{
  return MEMORY[0x24BEE0E70]();
}

uint64_t sub_23B601988()
{
  return MEMORY[0x24BEE1048]();
}

uint64_t sub_23B601994()
{
  return MEMORY[0x24BEE1060]();
}

uint64_t sub_23B6019A0()
{
  return MEMORY[0x24BEE10C8]();
}

uint64_t sub_23B6019AC()
{
  return MEMORY[0x24BEE10E0]();
}

uint64_t sub_23B6019B8()
{
  return MEMORY[0x24BEE1110]();
}

uint64_t sub_23B6019C4()
{
  return MEMORY[0x24BE31AD0]();
}

uint64_t sub_23B6019D0()
{
  return MEMORY[0x24BDCFBA8]();
}

uint64_t sub_23B6019DC()
{
  return MEMORY[0x24BDCFBC8]();
}

uint64_t sub_23B6019E8()
{
  return MEMORY[0x24BEE1120]();
}

uint64_t sub_23B6019F4()
{
  return MEMORY[0x24BEE1128]();
}

uint64_t sub_23B601A00()
{
  return MEMORY[0x24BEE1160]();
}

uint64_t sub_23B601A0C()
{
  return MEMORY[0x24BEE11B8]();
}

uint64_t sub_23B601A18()
{
  return MEMORY[0x24BEE6800]();
}

uint64_t sub_23B601A24()
{
  return MEMORY[0x24BEE6820]();
}

uint64_t sub_23B601A30()
{
  return MEMORY[0x24BEE6828]();
}

uint64_t sub_23B601A3C()
{
  return MEMORY[0x24BEE6838]();
}

uint64_t sub_23B601A48()
{
  return MEMORY[0x24BEE68C8]();
}

uint64_t sub_23B601A54()
{
  return MEMORY[0x24BEE6908]();
}

uint64_t sub_23B601A60()
{
  return MEMORY[0x24BEE6970]();
}

uint64_t sub_23B601A6C()
{
  return MEMORY[0x24BEE6988]();
}

uint64_t sub_23B601A78()
{
  return MEMORY[0x24BEE6990]();
}

uint64_t sub_23B601A84()
{
  return MEMORY[0x24BEE69A8]();
}

uint64_t sub_23B601A90()
{
  return MEMORY[0x24BEE69F8]();
}

uint64_t sub_23B601A9C()
{
  return MEMORY[0x24BEE6A30]();
}

uint64_t sub_23B601AA8()
{
  return MEMORY[0x24BEE6A50]();
}

uint64_t sub_23B601AB4()
{
  return MEMORY[0x24BEE6A58]();
}

uint64_t sub_23B601AC0()
{
  return MEMORY[0x24BEE6AA0]();
}

uint64_t sub_23B601ACC()
{
  return MEMORY[0x24BEE6AD0]();
}

uint64_t sub_23B601AD8()
{
  return MEMORY[0x24BEE6B10]();
}

uint64_t sub_23B601AE4()
{
  return MEMORY[0x24BEE6B20]();
}

uint64_t sub_23B601AF0()
{
  return MEMORY[0x24BE31AE8]();
}

uint64_t sub_23B601AFC()
{
  return MEMORY[0x24BEE6C08]();
}

uint64_t sub_23B601B08()
{
  return MEMORY[0x24BEE6C90]();
}

uint64_t sub_23B601B14()
{
  return MEMORY[0x24BEE6CC0]();
}

uint64_t sub_23B601B20()
{
  return MEMORY[0x24BEE6CC8]();
}

uint64_t sub_23B601B2C()
{
  return MEMORY[0x24BEE6CE0]();
}

uint64_t sub_23B601B38()
{
  return MEMORY[0x24BEE6CE8]();
}

uint64_t sub_23B601B44()
{
  return MEMORY[0x24BEE6D30]();
}

uint64_t sub_23B601B50()
{
  return MEMORY[0x24BEE15D8]();
}

uint64_t sub_23B601B5C()
{
  return MEMORY[0x24BEE78F0]();
}

uint64_t sub_23B601B68()
{
  return MEMORY[0x24BEE7908]();
}

uint64_t sub_23B601B74()
{
  return MEMORY[0x24BEE7910]();
}

uint64_t sub_23B601B80()
{
  return MEMORY[0x24BEE7920]();
}

uint64_t sub_23B601B8C()
{
  return MEMORY[0x24BEE7928]();
}

uint64_t sub_23B601B98()
{
  return MEMORY[0x24BEE5688]();
}

uint64_t sub_23B601BA4()
{
  return MEMORY[0x24BEE5760]();
}

uint64_t sub_23B601BB0()
{
  return MEMORY[0x24BEE57A0]();
}

uint64_t sub_23B601BBC()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t sub_23B601BC8()
{
  return MEMORY[0x24BEE1F00]();
}

uint64_t sub_23B601BD4()
{
  return MEMORY[0x24BEE1F48]();
}

uint64_t sub_23B601BE0()
{
  return MEMORY[0x24BEE22B0]();
}

uint64_t sub_23B601BEC()
{
  return MEMORY[0x24BEE22C0]();
}

uint64_t sub_23B601BF8()
{
  return MEMORY[0x24BEE22D0]();
}

uint64_t sub_23B601C04()
{
  return MEMORY[0x24BEE23A0]();
}

uint64_t sub_23B601C10()
{
  return MEMORY[0x24BEE23A8]();
}

uint64_t sub_23B601C1C()
{
  return MEMORY[0x24BEE24B8]();
}

uint64_t sub_23B601C28()
{
  return MEMORY[0x24BEE24C0]();
}

uint64_t sub_23B601C34()
{
  return MEMORY[0x24BEE24D0]();
}

uint64_t sub_23B601C40()
{
  return MEMORY[0x24BEE2510]();
}

uint64_t sub_23B601C4C()
{
  return MEMORY[0x24BEE2518]();
}

uint64_t sub_23B601C58()
{
  return MEMORY[0x24BEE2568]();
}

uint64_t sub_23B601C64()
{
  return MEMORY[0x24BEE2658]();
}

uint64_t sub_23B601C70()
{
  return MEMORY[0x24BEE26E8]();
}

uint64_t sub_23B601C7C()
{
  return MEMORY[0x24BEE2710]();
}

uint64_t sub_23B601C88()
{
  return MEMORY[0x24BEE2838]();
}

uint64_t sub_23B601C94()
{
  return MEMORY[0x24BEE2908]();
}

uint64_t sub_23B601CA0()
{
  return MEMORY[0x24BEE2938]();
}

uint64_t sub_23B601CAC()
{
  return MEMORY[0x24BEE2958]();
}

uint64_t sub_23B601CB8()
{
  return MEMORY[0x24BEE2980]();
}

uint64_t sub_23B601CC4()
{
  return MEMORY[0x24BEE2988]();
}

uint64_t sub_23B601CD0()
{
  return MEMORY[0x24BEE6DC8]();
}

uint64_t sub_23B601CDC()
{
  return MEMORY[0x24BEE6E08]();
}

uint64_t sub_23B601CE8()
{
  return MEMORY[0x24BEE6E10]();
}

uint64_t sub_23B601CF4()
{
  return MEMORY[0x24BEE2AE0]();
}

uint64_t sub_23B601D00()
{
  return MEMORY[0x24BEE2BE0]();
}

uint64_t sub_23B601D0C()
{
  return MEMORY[0x24BEE2F40]();
}

uint64_t sub_23B601D18()
{
  return MEMORY[0x24BEE2F48]();
}

uint64_t sub_23B601D24()
{
  return MEMORY[0x24BEE3068]();
}

uint64_t sub_23B601D30()
{
  return MEMORY[0x24BEE3080]();
}

uint64_t sub_23B601D3C()
{
  return MEMORY[0x24BEE3088]();
}

uint64_t sub_23B601D48()
{
  return MEMORY[0x24BEE3098]();
}

uint64_t sub_23B601D54()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t sub_23B601D60()
{
  return MEMORY[0x24BEE31D0]();
}

uint64_t sub_23B601D6C()
{
  return MEMORY[0x24BEE32B8]();
}

uint64_t sub_23B601D78()
{
  return MEMORY[0x24BEE32C0]();
}

uint64_t sub_23B601D84()
{
  return MEMORY[0x24BEE3308]();
}

uint64_t sub_23B601D90()
{
  return MEMORY[0x24BEE3380]();
}

uint64_t sub_23B601D9C()
{
  return MEMORY[0x24BEE33C8]();
}

uint64_t sub_23B601DA8()
{
  return MEMORY[0x24BEE3408]();
}

uint64_t sub_23B601DB4()
{
  return MEMORY[0x24BEE3458]();
}

uint64_t sub_23B601DC0()
{
  return MEMORY[0x24BEE34D0]();
}

uint64_t sub_23B601DCC()
{
  return MEMORY[0x24BE31AF8]();
}

uint64_t sub_23B601DD8()
{
  return MEMORY[0x24BE31B00]();
}

uint64_t sub_23B601DE4()
{
  return MEMORY[0x24BEE3568]();
}

uint64_t sub_23B601DF0()
{
  return MEMORY[0x24BEE3930]();
}

uint64_t sub_23B601DFC()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t sub_23B601E08()
{
  return MEMORY[0x24BEE7098]();
}

uint64_t sub_23B601E14()
{
  return MEMORY[0x24BEE70E0]();
}

uint64_t sub_23B601E20()
{
  return MEMORY[0x24BEE3ED0]();
}

uint64_t sub_23B601E2C()
{
  return MEMORY[0x24BEE3ED8]();
}

uint64_t sub_23B601E38()
{
  return MEMORY[0x24BEE7110]();
}

uint64_t sub_23B601E44()
{
  return MEMORY[0x24BEE7118]();
}

uint64_t sub_23B601E50()
{
  return MEMORY[0x24BEE3EF8]();
}

uint64_t sub_23B601E5C()
{
  return MEMORY[0x24BEE3F00]();
}

uint64_t sub_23B601E68()
{
  return MEMORY[0x24BEE3F08]();
}

uint64_t sub_23B601E74()
{
  return MEMORY[0x24BEE3F10]();
}

uint64_t sub_23B601E80()
{
  return MEMORY[0x24BEE42C8]();
}

uint64_t sub_23B601E8C()
{
  return MEMORY[0x24BEE42E0]();
}

uint64_t sub_23B601E98()
{
  return MEMORY[0x24BEE42F8]();
}

uint64_t sub_23B601EA4()
{
  return MEMORY[0x24BEE4300]();
}

uint64_t sub_23B601EB0()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t sub_23B601EBC()
{
  return MEMORY[0x24BDD07D0]();
}

uint64_t sub_23B601EC8()
{
  return MEMORY[0x24BEE4608]();
}

uint64_t sub_23B601ED4()
{
  return MEMORY[0x24BEE4638]();
}

uint64_t sub_23B601EE0()
{
  return MEMORY[0x24BDD0900]();
}

uint64_t sub_23B601EEC()
{
  return MEMORY[0x24BDD0910]();
}

uint64_t sub_23B601EF8()
{
  return MEMORY[0x24BDD09E8]();
}

uint64_t sub_23B601F04()
{
  return MEMORY[0x24BDD09F0]();
}

uint64_t sub_23B601F10()
{
  return MEMORY[0x24BDD0A18]();
}

uint64_t sub_23B601F1C()
{
  return MEMORY[0x24BDD0A50]();
}

uint64_t sub_23B601F28()
{
  return MEMORY[0x24BDD0A88]();
}

uint64_t sub_23B601F34()
{
  return MEMORY[0x24BDD0A90]();
}

uint64_t sub_23B601F40()
{
  return MEMORY[0x24BDD0AB8]();
}

uint64_t sub_23B601F4C()
{
  return MEMORY[0x24BDD0AF0]();
}

uint64_t sub_23B601F58()
{
  return MEMORY[0x24BDD0B20]();
}

uint64_t sub_23B601F64()
{
  return MEMORY[0x24BEE4830]();
}

uint64_t sub_23B601F70()
{
  return MEMORY[0x24BEE48A0]();
}

uint64_t sub_23B601F7C()
{
  return MEMORY[0x24BEE4A08]();
}

uint64_t sub_23B601F88()
{
  return MEMORY[0x24BEE4A10]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x24BDAC720](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x24BDAC738](aBlock);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x24BEE4B30]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x24BEE4B38]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x24BDAEE78](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

void *__cdecl memset(void *__b, int __c, size_t __len)
{
  return (void *)MEMORY[0x24BDAEEA8](__b, *(_QWORD *)&__c, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD108](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD120](a1, a2);
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x24BEE4B58]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x24BEE4B68]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x24BEE4B78]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x24BEE4B80]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x24BEE4BA8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x24BEE4BB0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x24BEE4BE0]();
}

uint64_t swift_continuation_await()
{
  return MEMORY[0x24BEE71B8]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x24BEE71C0]();
}

uint64_t swift_continuation_resume()
{
  return MEMORY[0x24BEE71C8]();
}

uint64_t swift_continuation_throwingResume()
{
  return MEMORY[0x24BEE71D0]();
}

uint64_t swift_continuation_throwingResumeWithError()
{
  return MEMORY[0x24BEE71D8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x24BEE4C18]();
}

uint64_t swift_defaultActor_deallocate()
{
  return MEMORY[0x24BEE71E0]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x24BEE71E8]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x24BEE71F0]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x24BEE4C40]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x24BEE4C98]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x24BEE4CA8]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x24BEE4CD0]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x24BEE4CD8]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x24BEE4D08]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x24BEE4D40]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x24BEE4D80]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x24BEE4D98]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x24BEE4E10]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x24BEE4E18]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x24BEE4E28]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x24BEE4E30]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x24BEE4E48]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x24BEE4EA8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x24BEE4EB0]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x24BEE4F00]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x24BEE4F10]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x24BEE4F30]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x24BEE4F48]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x24BEE4F58]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x24BEE7228]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x24BEE7230]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x24BEE7238]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x24BEE7278]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x24BEE4F68]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x24BEE5008]();
}

uint64_t swift_weakAssign()
{
  return MEMORY[0x24BEE5010]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x24BEE5028]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x24BEE5030]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x24BEE5038]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x24BEE5050]();
}

