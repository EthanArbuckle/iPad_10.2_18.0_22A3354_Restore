uint64_t DIPSecNonceForBAAAttestation()
{
  return SecKeySetParameter();
}

uint64_t DIPSecPolicyCreateApplePayModelSigning()
{
  return SecPolicyCreateApplePayModelSigning();
}

uint64_t DIPCCCryptorGCMOneshotEncrypt()
{
  return CCCryptorGCMOneshotEncrypt();
}

uint64_t DIPCCCryptorGCMOneshotDecrypt()
{
  return CCCryptorGCMOneshotDecrypt();
}

id DigestSha256(void *a1)
{
  id v1;
  const void *v2;
  CC_LONG v3;
  void *v4;
  unsigned __int8 md[32];
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  v1 = objc_retainAutorelease(a1);
  v2 = (const void *)objc_msgSend(v1, "bytes");
  v3 = objc_msgSend(v1, "length");

  v4 = CC_SHA256(v2, v3, md);
  if (v4)
  {
    objc_msgSend(MEMORY[0x24BDBCE50], "dataWithBytes:length:", md, 32);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
  }
  return v4;
}

id getUIKPath()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;

  objc_msgSend(CFSTR("systemgroup.com.apple.mobileactivationd"), "UTF8String");
  v0 = container_system_group_path_for_identifier();
  if (!v0)
    return 0;
  v1 = (void *)v0;
  objc_msgSend(MEMORY[0x24BDD17C8], "stringWithUTF8String:", v0);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "stringByAppendingPathComponent:", CFSTR("Library/uik/uik.pem"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  free(v1);
  return v3;
}

uint64_t hasSEService()
{
  uint64_t result;

  LODWORD(result) = MGGetBoolAnswer();
  if (MEMORY[0x24BE82A48])
    return result;
  else
    return 0;
}

id getSEABASSOIDS()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[8];

  v4[7] = *MEMORY[0x24BDAC8D0];
  v0 = *MEMORY[0x24BE82A40];
  v4[0] = *MEMORY[0x24BE82A48];
  v4[1] = v0;
  v1 = *MEMORY[0x24BE82A20];
  v4[2] = *MEMORY[0x24BE82A28];
  v4[3] = v1;
  v2 = *MEMORY[0x24BE82A38];
  v4[4] = *MEMORY[0x24BE82A30];
  v4[5] = v2;
  v4[6] = *MEMORY[0x24BE82A50];
  objc_msgSend(MEMORY[0x24BDBCE30], "arrayWithObjects:count:", v4, 7);
  return (id)objc_claimAutoreleasedReturnValue();
}

id ECDSASHA256DERToRaw(void *a1)
{
  id v1;
  uint64_t v2;
  unint64_t v3;
  void *v4;
  unint64_t v6;
  _OWORD v7[4];
  uint64_t v8;

  v8 = *MEMORY[0x24BDAC8D0];
  v1 = objc_retainAutorelease(a1);
  v2 = objc_msgSend(v1, "bytes");
  v6 = v2 + objc_msgSend(v1, "length");
  memset(v7, 0, sizeof(v7));
  v3 = ccder_decode_sequence_tl();
  if (!v3)
    goto LABEL_6;
  if (v3 >= v6)
  {
    if (v3 == v6)
    {
      v4 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDBCE50]), "initWithBytes:length:", v7, 64);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  ccder_decode_tag();
  v4 = (void *)ccder_decode_len();
  if (v4)
LABEL_6:
    v4 = 0;
LABEL_7:

  return v4;
}

unint64_t swapBytes(unint64_t result, uint64_t a2)
{
  _BYTE *v2;
  unint64_t v3;
  char v4;

  v2 = (_BYTE *)(result + a2 - 1);
  if ((unint64_t)v2 > result)
  {
    v3 = result + 1;
    do
    {
      v4 = *(_BYTE *)(v3 - 1);
      *(_BYTE *)(v3 - 1) = *v2;
      *v2-- = v4;
    }
    while (v3++ < (unint64_t)v2);
  }
  return result;
}

id ECDSASHA256RawToDER(void *a1)
{
  id v1;
  uint64_t v2;
  _BYTE *v3;
  unint64_t v4;
  char v5;
  BOOL v6;
  _BYTE *v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;

  v1 = a1;
  if (objc_msgSend(v1, "length") != 64)
    goto LABEL_9;
  v2 = objc_msgSend(objc_retainAutorelease(v1), "bytes");
  v3 = (_BYTE *)(v2 + 31);
  v4 = v2 + 1;
  do
  {
    v5 = *(_BYTE *)(v4 - 1);
    *(_BYTE *)(v4 - 1) = *v3;
    *v3-- = v5;
    v6 = v4++ >= (unint64_t)v3;
  }
  while (!v6);
  v7 = (_BYTE *)(v2 + 63);
  v8 = v2 + 33;
  do
  {
    v9 = *(_BYTE *)(v8 - 1);
    *(_BYTE *)(v8 - 1) = *v7;
    *v7-- = v9;
    v6 = v8++ >= (unint64_t)v7;
  }
  while (!v6);
  ccder_sizeof_integer();
  ccder_sizeof_integer();
  v10 = ccder_sizeof();
  if (v10 >= 0x40)
  {
    v12 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDBCEC8]), "initWithLength:", v10);
    v13 = v12;
    if (v12)
    {
      v14 = objc_retainAutorelease(v12);
      objc_msgSend(v14, "mutableBytes");
      ccder_encode_integer();
      ccder_encode_integer();
      ccder_encode_constructed_tl();
      objc_msgSend(MEMORY[0x24BDBCE50], "dataWithData:", v14);
      v11 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v11 = 0;
    }

  }
  else
  {
LABEL_9:
    v11 = 0;
  }

  return v11;
}

_BYTE *HexToBytes(void *a1)
{
  id v1;
  _BYTE *v2;
  unint64_t v3;
  _BYTE *v4;
  unint64_t v5;
  char *v7;
  char __str[2];
  char v9;

  v1 = a1;
  v9 = 0;
  if ((objc_msgSend(v1, "length") & 1) != 0)
  {
LABEL_9:
    v2 = 0;
    goto LABEL_10;
  }
  v2 = malloc_type_malloc((unint64_t)objc_msgSend(v1, "length") >> 1, 0xF07C7779uLL);
  if (v2)
  {
    if (objc_msgSend(v1, "length"))
    {
      v3 = 0;
      v4 = v2;
      while (1)
      {
        __str[0] = objc_msgSend(v1, "characterAtIndex:", v3);
        v5 = v3 + 1;
        __str[1] = objc_msgSend(v1, "characterAtIndex:", v5);
        v7 = 0;
        *v4 = strtol(__str, &v7, 16);
        if (v7 != &v9)
          break;
        ++v4;
        v3 = v5 + 1;
        if (v3 >= objc_msgSend(v1, "length"))
          goto LABEL_7;
      }
      free(v2);
      goto LABEL_9;
    }
LABEL_7:
    objc_msgSend(MEMORY[0x24BDBCE50], "dataWithBytesNoCopy:length:freeWhenDone:", v2, (unint64_t)objc_msgSend(v1, "length") >> 1, 1);
    v2 = (_BYTE *)objc_claimAutoreleasedReturnValue();
  }
LABEL_10:

  return v2;
}

BOOL initBYSetupAssistantNeedsToRun()
{
  if (LoadSetupAssistant_loadPredicate[0] != -1)
    dispatch_once(LoadSetupAssistant_loadPredicate, &__block_literal_global_0);
  softLinkBYSetupAssistantNeedsToRun = (uint64_t (*)())dlsym((void *)LoadSetupAssistant_frameworkLibrary, "BYSetupAssistantNeedsToRun");
  return softLinkBYSetupAssistantNeedsToRun != 0;
}

BOOL sub_20A446018(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_20A44602C()
{
  sub_20A5B929C();
  sub_20A5B92A8();
  return sub_20A5B92CC();
}

uint64_t sub_20A446070()
{
  return sub_20A5B92A8();
}

uint64_t sub_20A446098()
{
  sub_20A5B929C();
  sub_20A5B92A8();
  return sub_20A5B92CC();
}

uint64_t sub_20A4460D8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_20A446108 + 4 * byte_20A5BA420[*v0]))(0x6E6F6973726576, 0xE700000000000000);
}

uint64_t sub_20A446108()
{
  return 0x656D697473;
}

uint64_t sub_20A446120()
{
  return 0x656D697464;
}

uint64_t sub_20A446134()
{
  return 1684955506;
}

uint64_t sub_20A446144@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A44B624(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A446168()
{
  return 0;
}

void sub_20A446174(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_20A446180()
{
  sub_20A4463DC();
  return sub_20A5B9314();
}

uint64_t sub_20A4461A8()
{
  sub_20A4463DC();
  return sub_20A5B9320();
}

uint64_t ODIClientGUIDSeeds.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[8];
  char v13;
  char v14;
  char v15;
  char v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_253EB4900);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8]();
  v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1[2];
  v12[5] = v1[3];
  v12[6] = v7;
  v8 = v1[4];
  v12[3] = v1[5];
  v12[4] = v8;
  v9 = v1[6];
  v12[1] = v1[7];
  v12[2] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4463DC();
  sub_20A5B92FC();
  v16 = 0;
  v10 = v12[7];
  sub_20A5B9110();
  if (!v10)
  {
    v15 = 1;
    sub_20A5B9110();
    v14 = 2;
    sub_20A5B9110();
    v13 = 3;
    sub_20A5B9110();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x20BD26CD4]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_20A4463DC()
{
  unint64_t result;

  result = qword_253EB45A8;
  if (!qword_253EB45A8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5BA7A4, &type metadata for ODIClientGUIDSeeds.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_253EB45A8);
  }
  return result;
}

uint64_t ODIClientGUIDSeeds.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  char v31;
  char v32;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9B50);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8]();
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4463DC();
  sub_20A5B92F0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v32 = 0;
  v9 = sub_20A5B9074();
  v11 = v10;
  v27 = v9;
  v31 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_20A5B9074();
  v28 = v13;
  v26 = v12;
  v30 = 2;
  swift_bridgeObjectRetain();
  v24 = sub_20A5B9074();
  v25 = v14;
  v29 = 3;
  swift_bridgeObjectRetain();
  v15 = sub_20A5B9074();
  v18 = v17;
  v19 = *(void (**)(char *, uint64_t))(v6 + 8);
  v20 = v15;
  v19(v8, v5);
  swift_bridgeObjectRetain();
  v21 = v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *a2 = v27;
  a2[1] = v11;
  v22 = v25;
  a2[2] = v26;
  a2[3] = v21;
  a2[4] = v24;
  a2[5] = v22;
  a2[6] = v20;
  a2[7] = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_20A446710@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return ODIClientGUIDSeeds.init(from:)(a1, a2);
}

uint64_t sub_20A446724(_QWORD *a1)
{
  return ODIClientGUIDSeeds.encode(to:)(a1);
}

uint64_t sub_20A446738(char *a1, char *a2)
{
  return sub_20A4EAA30(*a1, *a2);
}

uint64_t sub_20A446744()
{
  sub_20A5B929C();
  sub_20A5B8978();
  swift_bridgeObjectRelease();
  return sub_20A5B92CC();
}

uint64_t sub_20A446794()
{
  sub_20A5B8978();
  return swift_bridgeObjectRelease();
}

uint64_t sub_20A4467B8()
{
  sub_20A5B929C();
  sub_20A5B8978();
  swift_bridgeObjectRelease();
  return sub_20A5B92CC();
}

uint64_t sub_20A446804@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_20A44B7B0();
  *a1 = result;
  return result;
}

void sub_20A446830(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1 + 49;
  a1[1] = 0xE100000000000000;
}

uint64_t ODIClientGUID.asString.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 120);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ODIClientGUID.seeds.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(unsigned __int8 *)v1;
  v4 = v1[9];
  v3 = v1[10];
  v5 = v1[11];
  v6 = v1[12];
  v7 = v1[13];
  v8 = v1[14];
  *a1 = v2 + 49;
  a1[1] = 0xE100000000000000;
  a1[2] = v4;
  a1[3] = v3;
  a1[4] = v5;
  a1[5] = v6;
  a1[6] = v7;
  a1[7] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ODIClientGUID.description.getter()
{
  sub_20A5B8E94();
  sub_20A5B899C();
  swift_bridgeObjectRetain();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  sub_20A5B8F9C();
  sub_20A5B899C();
  swift_bridgeObjectRetain();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  swift_bridgeObjectRetain();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  swift_bridgeObjectRetain();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  swift_bridgeObjectRetain();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  swift_bridgeObjectRetain();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  swift_bridgeObjectRetain();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  swift_bridgeObjectRetain();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_20A446BC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned __int8 a16)
{
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  uint64_t v84;
  _QWORD v85[18];

  v73 = a8;
  v74 = a7;
  v69 = a9;
  v70 = a6;
  v75 = a4;
  v64 = a2;
  v72 = a15;
  v71 = a13;
  v19 = sub_20A5B8954();
  v66 = *(_QWORD *)(v19 - 8);
  v67 = v19;
  MEMORY[0x24BDAC7A8](v19, v20);
  v65 = (char *)&v57 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5298);
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_20A5BA990;
  v57 = a16;
  *(_QWORD *)(v22 + 32) = a16 + 49;
  *(_QWORD *)(v22 + 40) = 0xE100000000000000;
  v58 = a10;
  v59 = a1;
  *(_QWORD *)(v22 + 48) = a1;
  v23 = v64;
  *(_QWORD *)(v22 + 56) = v64;
  *(_QWORD *)(v22 + 64) = a3;
  v60 = a12;
  v61 = a3;
  v25 = v73;
  v24 = v74;
  *(_QWORD *)(v22 + 72) = v75;
  *(_QWORD *)(v22 + 80) = a5;
  v62 = a14;
  v63 = a5;
  v26 = v71;
  *(_QWORD *)(v22 + 88) = v70;
  *(_QWORD *)(v22 + 96) = v24;
  *(_QWORD *)(v22 + 104) = v25;
  *(_QWORD *)(v22 + 112) = a10;
  *(_QWORD *)(v22 + 120) = a11;
  *(_QWORD *)(v22 + 128) = a12;
  v27 = v72;
  *(_QWORD *)(v22 + 136) = v26;
  *(_QWORD *)(v22 + 144) = a14;
  *(_QWORD *)(v22 + 152) = v27;
  v85[0] = v22;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v68 = a11;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5130);
  sub_20A44D20C((unint64_t *)&qword_253EB4808, &qword_253EB5130, MEMORY[0x24BEE12B0]);
  sub_20A5B88DC();
  swift_bridgeObjectRelease();
  v28 = v65;
  sub_20A5B893C();
  v29 = sub_20A5B890C();
  v31 = v30;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v28, v67);
  if (v31 >> 60 == 15)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v32 = v29;
    v33 = (void *)sub_20A5B8540();
    v34 = DigestSha256(v33);

    if (v34)
    {
      v35 = sub_20A5B8564();
      v37 = v36;

      v38 = sub_20A5B8534();
      v40 = v39;
      v41 = sub_20A5B854C();
      v43 = v42;
      sub_20A44CFC4(v32, v31);
      sub_20A44BD90(v38, v40);
      sub_20A44BD90(v35, v37);
      LOBYTE(v76) = v57;
      *((_QWORD *)&v76 + 1) = v59;
      *(_QWORD *)&v77 = v23;
      v44 = v23;
      v45 = v75;
      *((_QWORD *)&v77 + 1) = v61;
      *(_QWORD *)&v78 = v75;
      v46 = v70;
      v47 = v71;
      *((_QWORD *)&v78 + 1) = v63;
      *(_QWORD *)&v79 = v70;
      v48 = v73;
      *((_QWORD *)&v79 + 1) = v74;
      *(_QWORD *)&v80 = v73;
      v49 = v68;
      *((_QWORD *)&v80 + 1) = v58;
      *(_QWORD *)&v81 = v68;
      *((_QWORD *)&v81 + 1) = v60;
      *(_QWORD *)&v82 = v71;
      v50 = v72;
      *((_QWORD *)&v82 + 1) = v62;
      *(_QWORD *)&v83 = v72;
      *((_QWORD *)&v83 + 1) = v41;
      v84 = v43;
      sub_20A44D0E4((uint64_t)&v76);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v51 = v83;
      v52 = v69;
      *(_OWORD *)(v69 + 96) = v82;
      *(_OWORD *)(v52 + 112) = v51;
      *(_QWORD *)(v52 + 128) = v84;
      v53 = v79;
      *(_OWORD *)(v52 + 32) = v78;
      *(_OWORD *)(v52 + 48) = v53;
      v54 = v81;
      *(_OWORD *)(v52 + 64) = v80;
      *(_OWORD *)(v52 + 80) = v54;
      v55 = v77;
      *(_OWORD *)v52 = v76;
      *(_OWORD *)(v52 + 16) = v55;
      nullsub_1(v52);
      LOBYTE(v85[0]) = v57;
      v85[1] = v59;
      v85[2] = v44;
      v85[3] = v61;
      v85[4] = v45;
      v85[5] = v63;
      v85[6] = v46;
      v85[7] = v74;
      v85[8] = v48;
      v85[9] = v58;
      v85[10] = v49;
      v85[11] = v60;
      v85[12] = v47;
      v85[13] = v62;
      v85[14] = v50;
      v85[15] = v41;
      v85[16] = v43;
      return sub_20A44D178((uint64_t)v85);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_20A44CFC4(v29, v31);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_20A44D0C8((uint64_t)v85);
  return sub_20A44BDD4((uint64_t)v85, v69);
}

uint64_t DIPClientGUIDFactory.init(primaryDSIDBehavior:stsFetcher:)(uint64_t a1, _BYTE *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 88) = a3;
  *(_QWORD *)(v4 + 96) = a4;
  *(_QWORD *)(v4 + 80) = a1;
  *(_BYTE *)(v4 + 43) = *a2;
  return swift_task_switch();
}

void sub_20A4470EC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(v0 + 43);
  sub_20A5B8E94();
  sub_20A5B899C();
  __asm { BR              X9 }
}

uint64_t sub_20A44717C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  v1 = *(_BYTE *)(v0 + 43);
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  v2 = v5[0];
  LOBYTE(v5[0]) = 10;
  CoreODILogger.info(_:category:)(v2, v5[1], v5);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v0 + 42) = v1;
  swift_retain_n();
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v3;
  *(_QWORD *)v3 = v0;
  *(_QWORD *)(v3 + 8) = sub_20A447258;
  *(_QWORD *)(v3 + 136) = v0 + 41;
  *(_BYTE *)(v3 + 258) = *(_BYTE *)(v0 + 42);
  return swift_task_switch();
}

uint64_t sub_20A447258(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v4 = (_QWORD *)*v3;
  v4[14] = a1;
  v4[15] = a2;
  v4[16] = v2;
  swift_task_dealloc();
  if (v2)
    swift_release();
  return swift_task_switch();
}

void sub_20A4472D0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(v0 + 41);
  *(_BYTE *)(v0 + 44) = v1;
  swift_bridgeObjectRetain();
  sub_20A5B8E94();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  __asm { BR              X9 }
}

uint64_t sub_20A4473B4(int a1, uint64_t a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  void *v24;
  uint64_t v25;
  Swift::String_optional v26;
  uint64_t v27;
  char v29;

  v26.value._countAndFlagsBits = 0x73656E755469;
  v27 = v23;
  v26.value._object = v24;
  CoreODILogger.milestone(tag:description:value:isSensitive:)((CoreODIEssentials::MilestoneTag)&v29, *(Swift::String *)&a2, v26, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_253EB4EB8 != -1)
    swift_once();
  *(_QWORD *)(v25 + 136) = qword_253EB4EB0;
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_20A44746C()
{
  uint64_t v0;
  _QWORD *v2;

  if ((*(_BYTE *)(*(_QWORD *)(v0 + 136) + 168) & 1) != 0)
    return swift_task_switch();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 144) = v2;
  *v2 = v0;
  v2[1] = sub_20A4474E0;
  return sub_20A4BBF60();
}

uint64_t sub_20A4474E0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A447534()
{
  uint64_t v0;
  _QWORD *v2;
  char v3;

  if (*(_BYTE *)(v0 + 44) == 2)
  {
    v3 = 10;
    CoreODILogger.info(_:category:)(0xD00000000000002DLL, 0x800000020A5DB6A0, &v3);
    *(_QWORD *)(v0 + 168) = 0;
    *(_QWORD *)(v0 + 176) = 0xE000000000000000;
    return swift_task_switch();
  }
  else
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v2;
    *v2 = v0;
    v2[1] = sub_20A4475E8;
    return sub_20A4BE034();
  }
}

uint64_t sub_20A4475E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(*v3 + 160) = v2;
  swift_task_dealloc();
  if (v2)
  {
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    *(_QWORD *)(v6 + 168) = a1;
    *(_QWORD *)(v6 + 176) = a2;
  }
  return swift_task_switch();
}

uint64_t sub_20A447678()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  v1 = v0[17];
  v0[23] = sub_20A44D044((unint64_t *)&qword_2545FA630, (uint64_t (*)(uint64_t))type metadata accessor for ODIDeviceInfo, (uint64_t)&protocol conformance descriptor for ODIDeviceInfo);
  v2 = (_QWORD *)swift_task_alloc();
  v0[24] = v2;
  v2[2] = v1;
  v2[3] = 0x444970696843;
  v2[4] = 0xE600000000000000;
  v3 = (_QWORD *)swift_task_alloc();
  v0[25] = v3;
  v0[26] = __swift_instantiateConcreteTypeFromMangledName(&qword_253EB4840);
  *v3 = v0;
  v3[1] = sub_20A447774;
  return sub_20A5B917C();
}

uint64_t sub_20A447774()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  *(_QWORD *)(v1 + 216) = *(_QWORD *)(v1 + 32);
  *(_BYTE *)(v1 + 45) = *(_BYTE *)(v1 + 40);
  return swift_task_switch();
}

uint64_t sub_20A4477DC()
{
  uint64_t v0;
  uint64_t v2;
  unsigned __int8 v3[9];

  if (*(_BYTE *)(v0 + 45) == 1)
  {
    swift_bridgeObjectRelease();
    swift_release();
    v3[0] = 69;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000015, 0x800000020A5DB5D0, 0, v3, 0, 0, 0xD000000000000056, 0x800000020A5DB5F0, 0xD000000000000025, 0x800000020A5DB650, 172);
    swift_willThrow();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_QWORD *)(v0 + 64) = *(_QWORD *)(v0 + 216);
    *(_QWORD *)(v0 + 16) = sub_20A5B9170();
    *(_QWORD *)(v0 + 24) = v2;
    *(_QWORD *)(v0 + 224) = v2;
    swift_bridgeObjectRetain();
    return swift_task_switch();
  }
}

uint64_t sub_20A447944()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[17];
  v2 = swift_task_alloc();
  v0[29] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  strcpy((char *)(v2 + 24), "UniqueChipID");
  *(_BYTE *)(v2 + 37) = 0;
  *(_WORD *)(v2 + 38) = -5120;
  v3 = (_QWORD *)swift_task_alloc();
  v0[30] = v3;
  *v3 = v0;
  v3[1] = sub_20A447A14;
  return sub_20A5B917C();
}

uint64_t sub_20A447A14()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  *(_QWORD *)(v1 + 248) = *(_QWORD *)(v1 + 48);
  *(_BYTE *)(v1 + 46) = *(_BYTE *)(v1 + 56);
  return swift_task_switch();
}

uint64_t sub_20A447A7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  uint64_t v12;
  char v13;
  unsigned __int8 v14[9];

  if (*(_BYTE *)(v0 + 46) == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    v14[0] = 70;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000012, 0x800000020A5DB680, 0, v14, 0, 0, 0xD000000000000056, 0x800000020A5DB5F0, 0xD000000000000025, 0x800000020A5DB650, 177);
    swift_willThrow();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    v1 = *(_QWORD *)(v0 + 224);
    v12 = *(_QWORD *)(v0 + 16);
    v11 = *(_OWORD *)(v0 + 168);
    v13 = *(_BYTE *)(v0 + 44);
    v3 = *(_QWORD *)(v0 + 112);
    v2 = *(_QWORD *)(v0 + 120);
    v5 = *(_QWORD *)(v0 + 88);
    v4 = *(_QWORD *)(v0 + 96);
    v6 = *(_QWORD *)(v0 + 80);
    *(_QWORD *)(v0 + 72) = *(_QWORD *)(v0 + 248);
    v7 = sub_20A5B9170();
    v9 = v8;
    swift_release();
    swift_release();
    *(_QWORD *)v6 = v5;
    *(_QWORD *)(v6 + 8) = v4;
    *(_QWORD *)(v6 + 16) = v3;
    *(_QWORD *)(v6 + 24) = v2;
    *(_OWORD *)(v6 + 32) = v11;
    *(_QWORD *)(v6 + 48) = v12;
    *(_QWORD *)(v6 + 56) = v1;
    *(_QWORD *)(v6 + 64) = v7;
    *(_QWORD *)(v6 + 72) = v9;
    *(_BYTE *)(v6 + 80) = v13;
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A447C60()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A447CB4()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A447CF4(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 136) = a1;
  *(_BYTE *)(v2 + 258) = *a2;
  return swift_task_switch();
}

void sub_20A447D14()
{
  __asm { BR              X10 }
}

uint64_t sub_20A447D44()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 144) = v1;
  *v1 = v0;
  v1[1] = sub_20A447E4C;
  return swift_task_switch();
}

uint64_t sub_20A447E4C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  v3 = (_QWORD *)*v2;
  v3[2] = v2;
  v3[3] = a1;
  v3[4] = a2;
  v3[19] = a2;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A447EA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  _QWORD *v5;
  char v6;

  v1 = *(_QWORD *)(v0 + 152);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 24);
    v3 = *(_BYTE **)(v0 + 136);
    v6 = 10;
    CoreODILogger.info(_:category:)(0xD000000000000011, 0x800000020A5DB970, &v6);
    *v3 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
  }
  else
  {
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 160) = v5;
    *v5 = v0;
    v5[1] = sub_20A447F84;
    return swift_task_switch();
  }
}

uint64_t sub_20A447F84(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  v3 = (_QWORD *)*v2;
  v3[5] = v2;
  v3[6] = a1;
  v3[7] = a2;
  v3[21] = a2;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A447FE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v5;
  unint64_t v6;
  _BYTE v7[9];

  v1 = *(_QWORD *)(v0 + 168);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 48);
    v3 = *(_BYTE **)(v0 + 136);
    v5 = 45;
    v6 = 0xE100000000000000;
    v7[0] = 10;
    CoreODILogger.info(_:category:)(0xD00000000000001DLL, 0x800000020A5DB950, v7);
    *v3 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
  }
  else
  {
    v5 = 4;
    v6 = 0xE100000000000000;
    v7[0] = 10;
    CoreODILogger.warning(_:category:)(0xD00000000000002CLL, 0x800000020A5DB8B0, v7);
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000028, 0x800000020A5DB920, 0, (unsigned __int8 *)&v5, 0, 0, 0xD000000000000056, 0x800000020A5DB5F0, 0x2844495344746567, 0xEB00000000293A5FLL, 281);
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_20A448144(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  v3 = (_QWORD *)*v2;
  v3[8] = v2;
  v3[9] = a1;
  v3[10] = a2;
  v3[23] = a2;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A4481A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  _QWORD *v5;
  char v6;

  v1 = *(_QWORD *)(v0 + 184);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 72);
    v3 = *(_BYTE **)(v0 + 136);
    v6 = 10;
    CoreODILogger.info(_:category:)(0xD000000000000011, 0x800000020A5DB900, &v6);
    *v3 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
  }
  else
  {
    v6 = 10;
    CoreODILogger.info(_:category:)(0xD00000000000001CLL, 0x800000020A5DB890, &v6);
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 192) = v5;
    *v5 = v0;
    v5[1] = sub_20A4482BC;
    return swift_task_switch();
  }
}

uint64_t sub_20A4482BC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  v3 = (_QWORD *)*v2;
  v3[11] = v2;
  v3[12] = a1;
  v3[13] = a2;
  v3[25] = a2;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A448318()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v5;
  unint64_t v6;
  _BYTE v7[9];

  v1 = *(_QWORD *)(v0 + 200);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 96);
    v3 = *(_BYTE **)(v0 + 136);
    v5 = 45;
    v6 = 0xE100000000000000;
    v7[0] = 10;
    CoreODILogger.info(_:category:)(0xD00000000000001DLL, 0x800000020A5DB8E0, v7);
    *v3 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
  }
  else
  {
    v5 = 4;
    v6 = 0xE100000000000000;
    v7[0] = 10;
    CoreODILogger.warning(_:category:)(0xD00000000000002CLL, 0x800000020A5DB8B0, v7);
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000002CLL, 0x800000020A5DB8B0, 0, (unsigned __int8 *)&v5, 0, 0, 0xD000000000000056, 0x800000020A5DB5F0, 0x2844495344746567, 0xEB00000000293A5FLL, 295);
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_20A448474(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  v3 = (_QWORD *)*v2;
  v3[14] = v2;
  v3[15] = a1;
  v3[16] = a2;
  v3[27] = a2;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A4484D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v5;
  unint64_t v6;
  _BYTE v7[9];

  v1 = *(_QWORD *)(v0 + 216);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 120);
    v3 = *(_BYTE **)(v0 + 136);
    v5 = 45;
    v6 = 0xE100000000000000;
    v7[0] = 10;
    CoreODILogger.info(_:category:)(0x434520676E697355, 0xEA00000000004449, v7);
    *v3 = 2;
    return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
  }
  else
  {
    v5 = 22;
    v6 = 0xE100000000000000;
    v7[0] = 10;
    CoreODILogger.warning(_:category:)(0xD000000000000011, 0x800000020A5DB870, v7);
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000011, 0x800000020A5DB870, 0, (unsigned __int8 *)&v5, 0, 0, 0xD000000000000056, 0x800000020A5DB5F0, 0x2844495344746567, 0xEB00000000293A5FLL, 304);
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_20A448634(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(v6 + 232) = v2;
  swift_task_dealloc();
  if (v2)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
}

uint64_t sub_20A4486BC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  char v4;

  v1 = *(void **)(v0 + 232);
  v4 = 10;
  CoreODILogger.warning(_:category:)(0xD000000000000044, 0x800000020A5DB820, &v4);

  *(_BYTE *)(v0 + 257) = 2;
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 240) = v2;
  *(_QWORD *)v2 = v0;
  *(_QWORD *)(v2 + 8) = sub_20A448778;
  *(_QWORD *)(v2 + 136) = *(_QWORD *)(v0 + 136);
  *(_BYTE *)(v2 + 258) = *(_BYTE *)(v0 + 257);
  return swift_task_switch();
}

uint64_t sub_20A448778(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(v6 + 248) = v2;
  swift_task_dealloc();
  if (v2)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
}

uint64_t sub_20A448800()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A44880C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t result;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int16 v24;
  _BYTE v25[136];
  _OWORD v26[8];
  uint64_t v27;
  _BYTE v28[144];
  uint64_t v29;

  v4 = a1[3];
  v5 = a1[5];
  v6 = a1[7];
  v7 = *(_QWORD *)(v2 + 24);
  v8 = *(_QWORD *)(v2 + 40);
  v9 = *(_QWORD *)(v2 + 56);
  v10 = *(_QWORD *)(v2 + 72);
  v11 = *(unsigned __int8 *)(v2 + 80);
  if (v11 >= 3)
  {
    LOBYTE(v26[0]) = 74;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000014, 0x800000020A5DB710, 0, (unsigned __int8 *)v26, 0, 0, 0xD000000000000056, 0x800000020A5DB5F0, 0xD000000000000010, 0x800000020A5DB730, 55);
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v29 = a1[2];
    v22 = *(_QWORD *)(v2 + 16);
    v23 = a1[4];
    v20 = a1[6];
    v21 = *(_QWORD *)(v2 + 32);
    v18 = *(_QWORD *)(v2 + 64);
    v19 = *(_QWORD *)(v2 + 48);
    v12 = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_20A446BC4(v22, v7, v21, v8, v19, v9, v18, v10, (uint64_t)v28, v29, v4, v23, v5, v20, v12, v11);
    sub_20A44BDD4((uint64_t)v28, (uint64_t)v25);
    sub_20A44BDD4((uint64_t)v25, (uint64_t)v26);
    result = sub_20A44BE1C((uint64_t)v26);
    if ((_DWORD)result == 1)
    {
      v24 = 0;
      DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001CLL, 0x800000020A5DB750, 0, &v24, 0, 0, 0xD000000000000056, 0x800000020A5DB5F0, 0xD000000000000012, 0x800000020A5DB7E0, 196);
      return swift_willThrow();
    }
    else
    {
      v14 = v26[7];
      *(_OWORD *)(a2 + 96) = v26[6];
      *(_OWORD *)(a2 + 112) = v14;
      *(_QWORD *)(a2 + 128) = v27;
      v15 = v26[3];
      *(_OWORD *)(a2 + 32) = v26[2];
      *(_OWORD *)(a2 + 48) = v15;
      v16 = v26[5];
      *(_OWORD *)(a2 + 64) = v26[4];
      *(_OWORD *)(a2 + 80) = v16;
      v17 = v26[1];
      *(_OWORD *)a2 = v26[0];
      *(_OWORD *)(a2 + 16) = v17;
    }
  }
  return result;
}

uint64_t DIPClientGUIDFactory.createNewAssessmentGUID()(uint64_t a1)
{
  int **v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  int *v5;
  _QWORD *v6;
  uint64_t (*v8)(void);

  *(_QWORD *)(v2 + 504) = a1;
  v3 = sub_20A5B8630();
  *(_QWORD *)(v2 + 512) = v3;
  *(_QWORD *)(v2 + 520) = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v2 + 528) = swift_task_alloc();
  *(_QWORD *)(v2 + 536) = v1[2];
  *(_QWORD *)(v2 + 560) = v1[5];
  *(_OWORD *)(v2 + 568) = *((_OWORD *)v1 + 3);
  v4 = v1[9];
  *(_QWORD *)(v2 + 584) = v1[8];
  v5 = *v1;
  *(_OWORD *)(v2 + 544) = *(_OWORD *)(v1 + 3);
  *(_QWORD *)(v2 + 592) = v4;
  *(_BYTE *)(v2 + 624) = *((_BYTE *)v1 + 80);
  v8 = (uint64_t (*)(void))((char *)v5 + *v5);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 600) = v6;
  *v6 = v2;
  v6[1] = sub_20A448BA8;
  return v8();
}

uint64_t sub_20A448BA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;

  v4 = *v3;
  *(_QWORD *)(v4 + 608) = a1;
  *(_QWORD *)(v4 + 616) = a2;
  swift_task_dealloc();
  if (!v2)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_20A448C28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  double v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t inited;
  unint64_t v14;
  unsigned int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(void);
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  unsigned __int8 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned __int8 v42;
  unsigned __int8 v43;
  unsigned __int8 v44[9];

  v1 = *(_QWORD *)(v0 + 528);
  v2 = *(_QWORD *)(v0 + 520);
  v3 = *(_QWORD *)(v0 + 512);
  sub_20A5B8624();
  sub_20A5B85F4();
  v5 = v4;
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if ((~*(_QWORD *)&v5 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v5 <= -9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v5 < 9.22337204e18)
  {
    *(_QWORD *)(v0 + 496) = (uint64_t)v5;
    v7 = sub_20A5B9170();
    v9 = v8;
    v10 = sub_20A5B8AD4();
    *(_QWORD *)(v10 + 16) = 6;
    *(_WORD *)(v10 + 36) = 0;
    *(_DWORD *)(v10 + 32) = 0;
    v11 = SecRandomCopyBytes((SecRandomRef)*MEMORY[0x24BDE94B8], 6uLL, (void *)(v10 + 32));
    if (v11)
    {
      v12 = v11;
      swift_bridgeObjectRelease();
      v42 = 111;
      __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5290);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_20A5BA9A0;
      *(_BYTE *)(inited + 32) = 13;
      *(_QWORD *)(inited + 64) = MEMORY[0x24BEE3F88];
      *(_DWORD *)(inited + 40) = v12;
      v14 = sub_20A469DA8(inited);
      ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001FLL, 0x800000020A5DB6D0, 0, &v42, 0, v14, 0xD000000000000056, 0x800000020A5DB5F0, 0xD00000000000001ALL, 0x800000020A5DB6F0, 333);
      swift_bridgeObjectRelease();
      swift_willThrow();
      swift_bridgeObjectRelease();
    }
    else
    {
      v15 = *(unsigned __int8 *)(v0 + 624);
      v16 = sub_20A44BCE0(v10);
      v18 = v17;
      swift_bridgeObjectRelease();
      v19 = sub_20A5B854C();
      v21 = v20;
      sub_20A44BD90(v16, v18);
      if (v15 < 3)
      {
        v39 = *(_QWORD *)(v0 + 608);
        v36 = *(_BYTE *)(v0 + 624);
        v22 = *(_QWORD *)(v0 + 592);
        v23 = v21;
        v24 = *(_QWORD *)(v0 + 576);
        v40 = *(_QWORD *)(v0 + 568);
        v41 = *(_QWORD *)(v0 + 584);
        v37 = *(_QWORD *)(v0 + 616);
        v25 = *(_QWORD *)(v0 + 560);
        v38 = *(_QWORD *)(v0 + 552);
        v26 = *(_QWORD *)(v0 + 544);
        v35 = *(_QWORD *)(v0 + 536);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_20A446BC4(v35, v26, v38, v25, v40, v24, v41, v22, v0 + 16, v39, v37, v7, v9, v19, v23, v36);
        sub_20A44BDD4(v0 + 16, v0 + 288);
        sub_20A44BDD4(v0 + 288, v0 + 152);
        if (sub_20A44BE1C(v0 + 152) != 1)
        {
          v28 = *(_QWORD *)(v0 + 504);
          v29 = *(_OWORD *)(v0 + 216);
          v31 = *(_OWORD *)(v0 + 168);
          v30 = *(_OWORD *)(v0 + 184);
          *(_OWORD *)(v28 + 48) = *(_OWORD *)(v0 + 200);
          *(_OWORD *)(v28 + 64) = v29;
          *(_OWORD *)(v28 + 16) = v31;
          *(_OWORD *)(v28 + 32) = v30;
          v33 = *(_OWORD *)(v0 + 248);
          v32 = *(_OWORD *)(v0 + 264);
          v34 = *(_OWORD *)(v0 + 232);
          *(_QWORD *)(v28 + 128) = *(_QWORD *)(v0 + 280);
          *(_OWORD *)(v28 + 96) = v33;
          *(_OWORD *)(v28 + 112) = v32;
          *(_OWORD *)(v28 + 80) = v34;
          *(_OWORD *)v28 = *(_OWORD *)(v0 + 152);
          swift_task_dealloc();
          v27 = *(uint64_t (**)(void))(v0 + 8);
          return v27();
        }
        v44[0] = 75;
        ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001CLL, 0x800000020A5DB750, 0, v44, 0, 0, 0xD000000000000056, 0x800000020A5DB5F0, 0xD000000000000019, 0x800000020A5DB770, 207);
        swift_willThrow();
LABEL_11:
        swift_task_dealloc();
        v27 = *(uint64_t (**)(void))(v0 + 8);
        return v27();
      }
      v43 = 74;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000014, 0x800000020A5DB710, 0, &v43, 0, 0, 0xD000000000000056, 0x800000020A5DB5F0, 0xD000000000000010, 0x800000020A5DB730, 55);
      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t DIPClientGUIDFactory.createNewTrainingGUID()(uint64_t a1)
{
  int **v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  int *v7;
  _QWORD *v8;
  uint64_t (*v10)(void);

  *(_QWORD *)(v2 + 504) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB4990);
  *(_QWORD *)(v2 + 512) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB4410);
  *(_QWORD *)(v2 + 520) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB4408);
  *(_QWORD *)(v2 + 528) = swift_task_alloc();
  v3 = sub_20A5B8744();
  *(_QWORD *)(v2 + 536) = v3;
  *(_QWORD *)(v2 + 544) = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v2 + 552) = swift_task_alloc();
  v4 = sub_20A5B839C();
  *(_QWORD *)(v2 + 560) = v4;
  *(_QWORD *)(v2 + 568) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v2 + 576) = swift_task_alloc();
  *(_QWORD *)(v2 + 584) = swift_task_alloc();
  v5 = sub_20A5B8630();
  *(_QWORD *)(v2 + 592) = v5;
  *(_QWORD *)(v2 + 600) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v2 + 608) = swift_task_alloc();
  *(_QWORD *)(v2 + 616) = swift_task_alloc();
  *(_QWORD *)(v2 + 624) = v1[2];
  *(_OWORD *)(v2 + 632) = *(_OWORD *)(v1 + 3);
  *(_QWORD *)(v2 + 648) = v1[5];
  v6 = v1[9];
  *(_QWORD *)(v2 + 672) = v1[8];
  v7 = *v1;
  *(_OWORD *)(v2 + 656) = *((_OWORD *)v1 + 3);
  *(_QWORD *)(v2 + 680) = v6;
  *(_BYTE *)(v2 + 712) = *((_BYTE *)v1 + 80);
  v10 = (uint64_t (*)(void))((char *)v7 + *v7);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 688) = v8;
  *v8 = v2;
  v8[1] = sub_20A4492B4;
  return v10();
}

uint64_t sub_20A4492B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;

  v4 = *v3;
  *(_QWORD *)(v4 + 696) = a1;
  *(_QWORD *)(v4 + 704) = a2;
  swift_task_dealloc();
  if (!v2)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_20A4493AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void (*v10)(unint64_t, _QWORD, uint64_t);
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t);
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t inited;
  unint64_t v45;
  void (*v46)(uint64_t, uint64_t);
  void (*v47)(uint64_t, uint64_t);
  unsigned int v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t, uint64_t);
  void (*v68)(uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(uint64_t, uint64_t);
  void (*v73)(uint64_t, uint64_t);
  uint64_t (*v74)(void);
  uint64_t v75;
  void (*v76)(uint64_t, uint64_t);
  void (*v77)(uint64_t, uint64_t);
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  unsigned __int8 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unsigned __int8 v104;
  unsigned __int8 v105;
  unsigned __int8 v106;
  unsigned __int8 v107[17];

  v1 = *(_QWORD *)(v0 + 552);
  v2 = *(_QWORD *)(v0 + 544);
  v3 = *(_QWORD *)(v0 + 536);
  v97 = *(_QWORD *)(v0 + 528);
  v100 = *(_QWORD *)(v0 + 520);
  sub_20A5B8624();
  sub_20A5B872C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB4920);
  v4 = sub_20A5B8738();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 72);
  v7 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_20A5BA9B0;
  v9 = v8 + v7;
  v10 = *(void (**)(unint64_t, _QWORD, uint64_t))(v5 + 104);
  v10(v9, *MEMORY[0x24BDCF258], v4);
  v10(v9 + v6, *MEMORY[0x24BDCF260], v4);
  sub_20A44BE34(v8);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_20A5B8714();
  swift_bridgeObjectRelease();
  v11 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v11(v1, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v97, 1, 1, v3);
  v12 = sub_20A5B8780();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v100, 1, 1, v12);
  result = sub_20A5B8378();
  if ((v14 & 1) != 0)
    v15 = 0;
  else
    v15 = result;
  if (v15 == 0x8000000000000000)
  {
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  result = sub_20A5B8384();
  if ((v16 & 1) != 0)
    v17 = 0;
  else
    v17 = result;
  if (v17 == 0x8000000000000000)
    goto LABEL_25;
  v18 = *(_QWORD *)(v0 + 600);
  v19 = *(_QWORD *)(v0 + 592);
  v20 = *(_QWORD *)(v0 + 552);
  v21 = *(_QWORD *)(v0 + 536);
  v22 = *(_QWORD *)(v0 + 512);
  sub_20A5B8390();
  sub_20A5B872C();
  sub_20A5B8720();
  v11(v20, v21);
  v23 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v22, 1, v19);
  v24 = *(_QWORD *)(v0 + 600);
  v25 = *(_QWORD *)(v0 + 592);
  if (v23 == 1)
  {
    v26 = *(_QWORD *)(v0 + 616);
    v27 = *(_QWORD *)(v0 + 584);
    v28 = *(_QWORD *)(v0 + 576);
    v29 = *(_QWORD *)(v0 + 568);
    v30 = *(_QWORD *)(v0 + 560);
    v31 = *(_QWORD *)(v0 + 512);
    swift_bridgeObjectRelease();
    sub_20A44CE2C(v31, &qword_253EB4990);
    v104 = 71;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000029, 0x800000020A5DB790, 0, &v104, 0, 0, 0xD000000000000056, 0x800000020A5DB5F0, 0xD000000000000017, 0x800000020A5DB7C0, 221);
    swift_willThrow();
    v32 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
    v32(v28, v30);
    v32(v27, v30);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v26, v25);
    goto LABEL_21;
  }
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v24 + 32))(*(_QWORD *)(v0 + 608), *(_QWORD *)(v0 + 512), *(_QWORD *)(v0 + 592));
  result = sub_20A5B85F4();
  if ((~*(_QWORD *)&v33 & 0x7FF0000000000000) == 0)
    goto LABEL_26;
  if (v33 <= -9.22337204e18)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v33 < 9.22337204e18)
  {
    *(_QWORD *)(v0 + 496) = (uint64_t)v33;
    v34 = sub_20A5B9170();
    v36 = v35;
    v37 = sub_20A5B8AD4();
    *(_QWORD *)(v37 + 16) = 6;
    *(_WORD *)(v37 + 36) = 0;
    *(_DWORD *)(v37 + 32) = 0;
    v38 = SecRandomCopyBytes((SecRandomRef)*MEMORY[0x24BDE94B8], 6uLL, (void *)(v37 + 32));
    if (v38)
    {
      v39 = v38;
      v40 = *(_QWORD *)(v0 + 608);
      v41 = *(_QWORD *)(v0 + 600);
      v42 = *(_QWORD *)(v0 + 592);
      v98 = *(_QWORD *)(v0 + 584);
      v101 = *(_QWORD *)(v0 + 616);
      v93 = *(_QWORD *)(v0 + 568);
      v95 = *(_QWORD *)(v0 + 576);
      v43 = *(_QWORD *)(v0 + 560);
      swift_bridgeObjectRelease();
      v105 = 111;
      __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5290);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_20A5BA9A0;
      *(_BYTE *)(inited + 32) = 13;
      *(_QWORD *)(inited + 64) = MEMORY[0x24BEE3F88];
      *(_DWORD *)(inited + 40) = v39;
      v45 = sub_20A469DA8(inited);
      ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001FLL, 0x800000020A5DB6D0, 0, &v105, 0, v45, 0xD000000000000056, 0x800000020A5DB5F0, 0xD00000000000001ALL, 0x800000020A5DB6F0, 333);
      swift_bridgeObjectRelease();
      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v46 = *(void (**)(uint64_t, uint64_t))(v41 + 8);
      v46(v40, v42);
      v47 = *(void (**)(uint64_t, uint64_t))(v93 + 8);
      v47(v95, v43);
      v47(v98, v43);
      v46(v101, v42);
    }
    else
    {
      v102 = v36;
      v48 = *(unsigned __int8 *)(v0 + 712);
      v49 = sub_20A44BCE0(v37);
      v51 = v50;
      swift_bridgeObjectRelease();
      v52 = sub_20A5B854C();
      v99 = v53;
      sub_20A44BD90(v49, v51);
      v96 = *(_QWORD *)(v0 + 704);
      if (v48 >= 3)
      {
        v69 = *(_QWORD *)(v0 + 600);
        v70 = *(_QWORD *)(v0 + 592);
        v92 = *(_QWORD *)(v0 + 584);
        v94 = *(_QWORD *)(v0 + 616);
        v88 = *(_QWORD *)(v0 + 608);
        v90 = *(_QWORD *)(v0 + 576);
        v86 = *(_QWORD *)(v0 + 568);
        v71 = *(_QWORD *)(v0 + 560);
        v106 = 74;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000014, 0x800000020A5DB710, 0, &v106, 0, 0, 0xD000000000000056, 0x800000020A5DB5F0, 0xD000000000000010, 0x800000020A5DB730, 55);
        swift_willThrow();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v72 = *(void (**)(uint64_t, uint64_t))(v69 + 8);
        v72(v88, v70);
        v73 = *(void (**)(uint64_t, uint64_t))(v86 + 8);
        v73(v90, v71);
        v73(v92, v71);
        v72(v94, v70);
      }
      else
      {
        v84 = *(_BYTE *)(v0 + 712);
        v54 = *(_QWORD *)(v0 + 680);
        v91 = *(_QWORD *)(v0 + 672);
        v55 = *(_QWORD *)(v0 + 664);
        v87 = *(_QWORD *)(v0 + 696);
        v89 = *(_QWORD *)(v0 + 656);
        v56 = *(_QWORD *)(v0 + 648);
        v85 = *(_QWORD *)(v0 + 640);
        v57 = *(_QWORD *)(v0 + 632);
        v58 = *(_QWORD *)(v0 + 624);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_20A446BC4(v58, v57, v85, v56, v89, v55, v91, v54, v0 + 16, v87, v96, v34, v102, v52, v99, v84);
        sub_20A44BDD4(v0 + 16, v0 + 288);
        sub_20A44BDD4(v0 + 288, v0 + 152);
        v59 = sub_20A44BE1C(v0 + 152);
        v103 = *(_QWORD *)(v0 + 616);
        v60 = *(_QWORD *)(v0 + 608);
        v61 = *(_QWORD *)(v0 + 600);
        v62 = *(_QWORD *)(v0 + 592);
        v63 = *(_QWORD *)(v0 + 584);
        v64 = *(_QWORD *)(v0 + 576);
        v65 = *(_QWORD *)(v0 + 568);
        v66 = *(_QWORD *)(v0 + 560);
        if (v59 != 1)
        {
          v75 = *(_QWORD *)(v0 + 504);
          v76 = *(void (**)(uint64_t, uint64_t))(v61 + 8);
          v76(v60, v62);
          v77 = *(void (**)(uint64_t, uint64_t))(v65 + 8);
          v77(v64, v66);
          v77(v63, v66);
          v76(v103, v62);
          *(_OWORD *)v75 = *(_OWORD *)(v0 + 152);
          v78 = *(_OWORD *)(v0 + 168);
          v79 = *(_OWORD *)(v0 + 184);
          v80 = *(_OWORD *)(v0 + 216);
          *(_OWORD *)(v75 + 48) = *(_OWORD *)(v0 + 200);
          *(_OWORD *)(v75 + 64) = v80;
          *(_OWORD *)(v75 + 16) = v78;
          *(_OWORD *)(v75 + 32) = v79;
          v81 = *(_OWORD *)(v0 + 232);
          v82 = *(_OWORD *)(v0 + 248);
          v83 = *(_OWORD *)(v0 + 264);
          *(_QWORD *)(v75 + 128) = *(_QWORD *)(v0 + 280);
          *(_OWORD *)(v75 + 96) = v82;
          *(_OWORD *)(v75 + 112) = v83;
          *(_OWORD *)(v75 + 80) = v81;
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          v74 = *(uint64_t (**)(void))(v0 + 8);
          return v74();
        }
        v107[0] = 75;
        ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001CLL, 0x800000020A5DB750, 0, v107, 0, 0, 0xD000000000000056, 0x800000020A5DB5F0, 0xD000000000000017, 0x800000020A5DB7C0, 227);
        swift_willThrow();
        v67 = *(void (**)(uint64_t, uint64_t))(v61 + 8);
        v67(v60, v62);
        v68 = *(void (**)(uint64_t, uint64_t))(v65 + 8);
        v68(v64, v66);
        v68(v63, v66);
        v67(v103, v62);
      }
    }
LABEL_21:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v74 = *(uint64_t (**)(void))(v0 + 8);
    return v74();
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_20A449DF0()
{
  return swift_task_switch();
}

uint64_t sub_20A449E04()
{
  uint64_t v0;

  if (qword_253EB4EB8 != -1)
    swift_once();
  *(_QWORD *)(v0 + 40) = qword_253EB4EB0;
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_20A449E74()
{
  uint64_t v0;
  _QWORD *v2;

  if ((*(_BYTE *)(*(_QWORD *)(v0 + 40) + 168) & 1) != 0)
    return swift_task_switch();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v2;
  *v2 = v0;
  v2[1] = sub_20A449EE4;
  return sub_20A4BBF60();
}

uint64_t sub_20A449EE4()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A449F34()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[5];
  sub_20A44D044((unint64_t *)&qword_2545FA630, (uint64_t (*)(uint64_t))type metadata accessor for ODIDeviceInfo, (uint64_t)&protocol conformance descriptor for ODIDeviceInfo);
  v2 = swift_task_alloc();
  v0[7] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  strcpy((char *)(v2 + 24), "UniqueChipID");
  *(_BYTE *)(v2 + 37) = 0;
  *(_WORD *)(v2 + 38) = -5120;
  v3 = (_QWORD *)swift_task_alloc();
  v0[8] = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB4840);
  *v3 = v0;
  v3[1] = sub_20A44A034;
  return sub_20A5B917C();
}

uint64_t sub_20A44A034()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  *(_QWORD *)(v1 + 72) = *(_QWORD *)(v1 + 16);
  *(_BYTE *)(v1 + 25) = *(_BYTE *)(v1 + 24);
  return swift_task_switch();
}

uint64_t sub_20A44A0A8()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_20A44A0E4()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t v3;
  char v4;

  if ((*(_BYTE *)(v0 + 25) & 1) != 0)
  {
    v4 = 10;
    CoreODILogger.warning(_:category:)(0xD000000000000014, 0x800000020A5DB9D0, &v4);
    return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(0, 0);
  }
  else
  {
    *(_QWORD *)(v0 + 32) = *(_QWORD *)(v0 + 72);
    v2 = sub_20A5B9170();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v3);
  }
}

uint64_t sub_20A44A178()
{
  return swift_task_switch();
}

uint64_t sub_20A44A18C()
{
  uint64_t v0;
  _QWORD *v1;

  if (qword_253EB4578 != -1)
    swift_once();
  *(_QWORD *)(v0 + 40) = qword_253EB4568;
  swift_retain();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_20A44A210;
  return sub_20A531B78();
}

uint64_t sub_20A44A210(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(*v3 + 56) = v2;
  swift_task_dealloc();
  if (!v2)
  {
    *(_QWORD *)(v6 + 64) = a2;
    *(_QWORD *)(v6 + 72) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_20A44A288()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_release();
  return (*(uint64_t (**)(_QWORD, uint64_t))(v0 + 8))(*(_QWORD *)(v0 + 72), v1);
}

uint64_t sub_20A44A2C4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[2];

  v1 = *(void **)(v0 + 56);
  swift_release();
  v5[0] = 0;
  v5[1] = 0xE000000000000000;
  sub_20A5B8E94();
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0xE000000000000000;
  sub_20A5B899C();
  *(_QWORD *)(v0 + 32) = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52D0);
  sub_20A5B8F9C();
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  LOBYTE(v5[0]) = 10;
  CoreODILogger.warning(_:category:)(v2, v3, v5);
  swift_bridgeObjectRelease();

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(0, 0);
}

uint64_t sub_20A44A3B8()
{
  return swift_task_switch();
}

uint64_t sub_20A44A3CC()
{
  uint64_t v0;

  if (qword_253EB4578 != -1)
    swift_once();
  *(_QWORD *)(v0 + 40) = qword_253EB4568;
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_20A44A43C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = sub_20A531DEC();
  v0[6] = 0;
  v0[7] = v2;
  v0[8] = v1;
  return swift_task_switch();
}

uint64_t sub_20A44A49C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_release();
  return (*(uint64_t (**)(_QWORD, uint64_t))(v0 + 8))(*(_QWORD *)(v0 + 64), v1);
}

uint64_t sub_20A44A4D8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[2];

  v1 = *(void **)(v0 + 48);
  swift_release();
  v5[0] = 0;
  v5[1] = 0xE000000000000000;
  sub_20A5B8E94();
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0xE000000000000000;
  sub_20A5B899C();
  *(_QWORD *)(v0 + 32) = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52D0);
  sub_20A5B8F9C();
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  LOBYTE(v5[0]) = 10;
  CoreODILogger.warning(_:category:)(v2, v3, v5);
  swift_bridgeObjectRelease();

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(0, 0);
}

uint64_t sub_20A44A5C8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  _BYTE *v5;
  _BYTE *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v14[2];
  uint64_t v15;
  __int128 v16;
  _QWORD v17[7];

  v17[5] = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)&v16 = a1;
  *((_QWORD *)&v16 + 1) = a2;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9BA0);
  if (!swift_dynamicCast())
  {
    v15 = 0;
    memset(v14, 0, sizeof(v14));
    sub_20A44CE2C((uint64_t)v14, (uint64_t *)&unk_2545F9BA8);
    if ((a2 & 0x1000000000000000) != 0)
      goto LABEL_20;
    if ((a2 & 0x2000000000000000) != 0)
    {
      v17[0] = a1;
      v17[1] = a2 & 0xFFFFFFFFFFFFFFLL;
      v4 = (char *)v17 + (HIBYTE(a2) & 0xF);
      v5 = v17;
    }
    else
    {
      if ((a1 & 0x1000000000000000) != 0)
      {
        v2 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        v3 = a1 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        v2 = sub_20A5B8EE8();
      }
      if (v2)
        v4 = (_BYTE *)(v2 + v3);
      else
        v4 = 0;
      v5 = (_BYTE *)v2;
    }
    v6 = sub_20A44CE68(v5, v4);
    v8 = v7;
    if (v7 >> 60 != 15)
    {
      swift_bridgeObjectRelease();
      *(_QWORD *)&v14[0] = v6;
      *((_QWORD *)&v14[0] + 1) = v8;
      return *(_QWORD *)&v14[0];
    }
    if ((a2 & 0x1000000000000000) != 0)
    {
LABEL_20:
      v9 = sub_20A5B89B4();
    }
    else if ((a2 & 0x2000000000000000) != 0)
    {
      v9 = HIBYTE(a2) & 0xF;
    }
    else
    {
      v9 = a1 & 0xFFFFFFFFFFFFLL;
    }
    *(_QWORD *)&v14[0] = sub_20A44CECC(v9);
    *((_QWORD *)&v14[0] + 1) = v10;
    MEMORY[0x24BDAC7A8](*(_QWORD *)&v14[0], v10);
    sub_20A44B128();
    __asm { BR              X12 }
  }
  sub_20A44CFD8(v14, (uint64_t)v17);
  __swift_project_boxed_opaque_existential_1(v17, v17[3]);
  sub_20A5B83A8();
  swift_bridgeObjectRelease();
  v14[0] = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return *(_QWORD *)&v14[0];
}

uint64_t sub_20A44AACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_20A44AB14(a1, a2, a3, a4, (uint64_t *)&unk_253EB4830, (uint64_t)&unk_24C31C140, (uint64_t)sub_20A44D2C8, (uint64_t)&block_descriptor_17);
}

uint64_t sub_20A44AAF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_20A44AB14(a1, a2, a3, a4, &qword_253EB5160, (uint64_t)&unk_24C31C118, (uint64_t)sub_20A44D018, (uint64_t)&block_descriptor);
}

uint64_t sub_20A44AB14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD aBlock[6];

  v33 = a8;
  v30 = a4;
  v31 = a7;
  v29 = a3;
  v11 = sub_20A5B881C();
  v36 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_20A5B8840();
  v34 = *(_QWORD *)(v15 - 8);
  v35 = v15;
  MEMORY[0x24BDAC7A8](v15, v16);
  v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(a5);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(_QWORD *)(v20 + 64);
  MEMORY[0x24BDAC7A8](v19, v22);
  v32 = *(_QWORD *)(a2 + 112);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))((char *)&v28 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v19);
  v23 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v24 = swift_allocObject();
  v25 = v30;
  *(_QWORD *)(v24 + 16) = v29;
  *(_QWORD *)(v24 + 24) = v25;
  (*(void (**)(unint64_t, char *, uint64_t))(v20 + 32))(v24 + v23, (char *)&v28 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), v19);
  aBlock[4] = v31;
  aBlock[5] = v24;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_20A461EFC;
  aBlock[3] = v33;
  v26 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  sub_20A5B8834();
  v37 = MEMORY[0x24BEE4AF8];
  sub_20A44D044(&qword_253EB5088, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5120);
  sub_20A44D20C((unint64_t *)&qword_253EB5128, &qword_253EB5120, MEMORY[0x24BEE12C8]);
  sub_20A5B8DB0();
  MEMORY[0x20BD25D50](0, v18, v14, v26);
  _Block_release(v26);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v14, v11);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v18, v35);
  return swift_release();
}

uint64_t sub_20A44AD84()
{
  void *v0;
  uint64_t v1;

  v0 = (void *)sub_20A5B88F4();
  v1 = MGCopyAnswer();

  if (v1)
    swift_dynamicCast();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB4830);
  return sub_20A5B8B10();
}

uint64_t sub_20A44AE28()
{
  void *v0;
  uint64_t v1;

  v0 = (void *)sub_20A5B88F4();
  v1 = MGCopyAnswer();

  if (v1)
    swift_dynamicCast();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5160);
  return sub_20A5B8B10();
}

BOOL sub_20A44AEB8(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

void sub_20A44AECC(_DWORD *a1@<X8>)
{
  _DWORD *v1;

  *a1 = *v1;
}

BOOL sub_20A44AED8(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

void sub_20A44AEEC(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_20A44AEF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x20BD26CEC](&unk_20A5BA958, a3);
  return sub_20A5B878C();
}

void sub_20A44AF44(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

_QWORD *sub_20A44AF4C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

BOOL sub_20A44AF60(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_20A44AF90(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_20A44AFA4(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

_DWORD *sub_20A44AFB8@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

_QWORD *sub_20A44AFC8@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_20A44AFD4(uint64_t a1)
{
  MEMORY[0x20BD26CEC](&unk_20A5BA958, a1);
  return sub_20A5B87A4();
}

uint64_t sub_20A44B010()
{
  MEMORY[0x20BD26CEC](&unk_20A5BA958);
  return sub_20A5B8798();
}

uint64_t sub_20A44B058(uint64_t a1, uint64_t a2)
{
  sub_20A5B929C();
  MEMORY[0x20BD26CEC](&unk_20A5BA958, a2);
  sub_20A5B8798();
  return sub_20A5B92CC();
}

uint64_t sub_20A44B0B0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_20A5B89F0();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x20BD25A68](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

void sub_20A44B128()
{
  __asm { BR              X11 }
}

_QWORD *sub_20A44B188@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *(*v3)(_QWORD **__return_ptr, uint64_t *, char *);
  uint64_t v4;
  _QWORD *result;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unsigned int v9;
  unsigned __int8 v10;
  unsigned __int8 v11;
  unsigned __int8 v12;

  v8 = v4;
  LOWORD(v9) = a1;
  BYTE2(v9) = BYTE2(a1);
  HIBYTE(v9) = BYTE3(a1);
  v10 = BYTE4(a1);
  v11 = BYTE5(a1);
  v12 = BYTE6(a1);
  result = v3(&v7, &v8, (char *)&v8 + BYTE6(a1));
  if (!v2)
    result = v7;
  v6 = v9 | ((unint64_t)v10 << 32) | ((unint64_t)v11 << 40) | ((unint64_t)v12 << 48);
  *v1 = v8;
  v1[1] = v6;
  return result;
}

_BYTE *sub_20A44B418@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (!result)
    goto LABEL_4;
  v4 = a2 - result;
  if (a2 == result)
  {
    result = 0;
LABEL_4:
    v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    result = (_BYTE *)sub_20A44BB28(result, a2);
    v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    result = (_BYTE *)sub_20A44BBE8((uint64_t)result, (uint64_t)a2);
    v5 = v8 | 0x8000000000000000;
  }
  else
  {
    result = (_BYTE *)sub_20A44BC60((uint64_t)result, (uint64_t)a2);
    v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

_QWORD *sub_20A44B48C(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;

  if (a3)
  {
    result = a1(&v6, a3, a4 - a3);
    if (v4)
      return result;
    return (_QWORD *)v6;
  }
  result = a1(&v6, 0, 0);
  if (!v4)
    return (_QWORD *)v6;
  return result;
}

char *sub_20A44B4F0(uint64_t a1, uint64_t a2, _QWORD *(*a3)(uint64_t *__return_ptr, char *, char *))
{
  uint64_t v3;
  char *result;
  char *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = (char *)sub_20A5B833C();
  if (!result)
    goto LABEL_12;
  v8 = result;
  result = (char *)sub_20A5B8360();
  v9 = a1 - (_QWORD)result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_11;
  }
  v10 = __OFSUB__(a2, a1);
  v11 = a2 - a1;
  if (v10)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  v12 = sub_20A5B8354();
  if (v12 >= v11)
    v13 = v11;
  else
    v13 = v12;
  result = (char *)a3(&v14, &v8[v9], &v8[v9 + v13]);
  if (!v3)
    return (char *)v14;
  return result;
}

uint64_t sub_20A44B59C@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  char v3;
  uint64_t v4;

  if (result)
  {
    swift_bridgeObjectRetain();
    result = sub_20A5B8EA0();
    if ((v3 & 1) == 0)
    {
      v4 = result;
      result = swift_bridgeObjectRelease();
      *a2 = 0;
      a2[1] = 0xE000000000000000;
      a2[2] = 15;
      a2[3] = v4;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A44B624(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000;
  if (v2 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656D697473 && a2 == 0xE500000000000000 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656D697464 && a2 == 0xE500000000000000 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1684955506 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_20A5B91AC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_20A44B7B0()
{
  unint64_t v0;

  v0 = sub_20A5B9008();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t _s17CoreODIEssentials13ODIClientGUIDV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t result;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  v5 = a1[4];
  v41 = a1[6];
  v42 = a1[5];
  v39 = a1[7];
  v37 = a1[8];
  v35 = a1[9];
  v33 = a1[10];
  v31 = a1[11];
  v29 = a1[12];
  v27 = a1[13];
  v25 = a1[14];
  v7 = a2[1];
  v6 = a2[2];
  v8 = a2[3];
  v9 = a2[4];
  v10 = a2[5];
  v40 = a2[6];
  v38 = a2[7];
  v36 = a2[8];
  v34 = a2[9];
  v32 = a2[10];
  v30 = a2[11];
  v28 = a2[12];
  v26 = a2[13];
  v23 = a1[15];
  v24 = a2[14];
  v21 = a2[15];
  v22 = a1[16];
  v20 = a2[16];
  if (*(unsigned __int8 *)a1 == *(unsigned __int8 *)a2)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v11 = sub_20A5B91AC();
    swift_bridgeObjectRelease_n();
    result = 0;
    if ((v11 & 1) == 0)
      return result;
  }
  if (v2 == v7 && v3 == v6 || (v13 = sub_20A5B91AC(), result = 0, (v13 & 1) != 0))
  {
    if (v4 == v8 && v5 == v9 || (v14 = sub_20A5B91AC(), result = 0, (v14 & 1) != 0))
    {
      if (v42 == v10 && v41 == v40 || (v15 = sub_20A5B91AC(), result = 0, (v15 & 1) != 0))
      {
        if (v39 == v38 && v37 == v36 || (v16 = sub_20A5B91AC(), result = 0, (v16 & 1) != 0))
        {
          if (v35 == v34 && v33 == v32 || (v17 = sub_20A5B91AC(), result = 0, (v17 & 1) != 0))
          {
            if (v31 == v30 && v29 == v28 || (v18 = sub_20A5B91AC(), result = 0, (v18 & 1) != 0))
            {
              if (v27 == v26 && v25 == v24 || (v19 = sub_20A5B91AC(), result = 0, (v19 & 1) != 0))
              {
                if (v23 == v21 && v22 == v20)
                  return 1;
                else
                  return sub_20A5B91AC();
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_20A44BAEC(uint64_t a1)
{
  uint64_t *v1;

  return sub_20A44AB14(a1, v1[2], v1[3], v1[4], (uint64_t *)&unk_253EB4830, (uint64_t)&unk_24C31C140, (uint64_t)sub_20A44D2C8, (uint64_t)&block_descriptor_17);
}

uint64_t sub_20A44BB28(_BYTE *__src, _BYTE *a2)
{
  unint64_t v2;
  _BYTE __dst[14];
  char v5;
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  if (__src)
    v2 = a2 - __src;
  else
    v2 = 0;
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF)
    goto LABEL_11;
  memset(__dst, 0, sizeof(__dst));
  v5 = v2;
  if (__src && a2 != __src)
    memcpy(__dst, __src, a2 - __src);
  return *(_QWORD *)__dst;
}

uint64_t sub_20A44BBE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if (a1)
    v2 = a2 - a1;
  else
    v2 = 0;
  sub_20A5B836C();
  swift_allocObject();
  result = sub_20A5B8330();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_20A5B8510();
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_20A44BC60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if (a1)
    v2 = a2 - a1;
  else
    v2 = 0;
  sub_20A5B836C();
  swift_allocObject();
  result = sub_20A5B8330();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0)
    return v2 << 32;
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_20A44BCE0(uint64_t a1)
{
  _QWORD *v2;
  _BYTE *v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v7;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_253EB4820);
  v10 = sub_20A44D20C(&qword_253EB4828, &qword_253EB4820, MEMORY[0x24BDCFBE0]);
  v8[0] = a1;
  v2 = __swift_project_boxed_opaque_existential_1(v8, v9);
  v3 = (_BYTE *)(*v2 + 32);
  v4 = &v3[*(_QWORD *)(*v2 + 16)];
  swift_bridgeObjectRetain();
  sub_20A44B418(v3, v4, &v7);
  v5 = v7;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  return v5;
}

uint64_t sub_20A44BD90(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_20A44BDD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_253EB4498);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A44BE1C(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

uint64_t sub_20A44BE34(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t result;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;

  v2 = sub_20A5B8738();
  v3 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x24BDAC7A8](v2, v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v8);
  v10 = (char *)&v29 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_253EB48C0);
    v12 = sub_20A5B8E64();
    v13 = 0;
    v14 = *(unsigned __int8 *)(v3 + 80);
    v30 = v11;
    v31 = a1 + ((v14 + 32) & ~v14);
    v15 = *(_QWORD *)(v3 + 72);
    v33 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v34 = v12 + 56;
    while (1)
    {
      v32 = v13;
      v33(v10, v31 + v15 * v13, v2);
      sub_20A44D044((unint64_t *)&unk_253EB43F8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF290], MEMORY[0x24BDCF2A8]);
      v16 = sub_20A5B88B8();
      v17 = ~(-1 << *(_BYTE *)(v12 + 32));
      v18 = v16 & v17;
      v19 = (v16 & (unint64_t)v17) >> 6;
      v20 = *(_QWORD *)(v34 + 8 * v19);
      v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        do
        {
          v33(v7, *(_QWORD *)(v12 + 48) + v18 * v15, v2);
          sub_20A44D044(&qword_253EB49B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF290], MEMORY[0x24BDCF2C0]);
          v22 = sub_20A5B88E8();
          v23 = v3;
          v24 = *(void (**)(char *, uint64_t))(v3 + 8);
          v24(v7, v2);
          if ((v22 & 1) != 0)
          {
            v24(v10, v2);
            v3 = v23;
            v11 = v30;
            goto LABEL_4;
          }
          v18 = (v18 + 1) & v17;
          v19 = v18 >> 6;
          v20 = *(_QWORD *)(v34 + 8 * (v18 >> 6));
          v21 = 1 << v18;
          v3 = v23;
        }
        while ((v20 & (1 << v18)) != 0);
        v11 = v30;
      }
      *(_QWORD *)(v34 + 8 * v19) = v21 | v20;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v12 + 48) + v18 * v15, v10, v2);
      v26 = *(_QWORD *)(v12 + 16);
      v27 = __OFADD__(v26, 1);
      v28 = v26 + 1;
      if (v27)
        break;
      *(_QWORD *)(v12 + 16) = v28;
LABEL_4:
      v13 = v32 + 1;
      if (v32 + 1 == v11)
        return v12;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B08];
  }
  return result;
}

uint64_t destroy for ODIClientGUIDSeeds()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ODIClientGUIDSeeds(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ODIClientGUIDSeeds(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

_QWORD *assignWithTake for ODIClientGUIDSeeds(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ODIClientGUIDSeeds(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ODIClientGUIDSeeds(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ODIClientGUIDSeeds()
{
  return &type metadata for ODIClientGUIDSeeds;
}

uint64_t initializeBufferWithCopyOfBuffer for ODIClientGUID(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for ODIClientGUID()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ODIClientGUID(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  v7 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v7;
  v8 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v8;
  v9 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v9;
  v10 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ODIClientGUID(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy136_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t assignWithTake for ODIClientGUID(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ODIClientGUID(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 136))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ODIClientGUID(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 136) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 136) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ODIClientGUID()
{
  return &type metadata for ODIClientGUID;
}

uint64_t destroy for DIPClientGUIDFactory()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DIPClientGUIDFactory(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DIPClientGUIDFactory(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  return a1;
}

__n128 __swift_memcpy81_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for DIPClientGUIDFactory(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for DIPClientGUIDFactory(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 81))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DIPClientGUIDFactory(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 80) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 81) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 81) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DIPClientGUIDFactory()
{
  return &type metadata for DIPClientGUIDFactory;
}

void type metadata accessor for CFData(uint64_t a1)
{
  sub_20A44D3E4(a1, (unint64_t *)&unk_2545F9B78);
}

void type metadata accessor for SecKey(uint64_t a1)
{
  sub_20A44D3E4(a1, &qword_253EB48B0);
}

void type metadata accessor for CLAuthorizationStatus(uint64_t a1)
{
  sub_20A44D3E4(a1, &qword_2545F9B88);
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ODIClientGUID.GUIDSeedVersion(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ODIClientGUID.GUIDSeedVersion(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_20A44CB1C + 4 * byte_20A5BA435[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_20A44CB50 + 4 * byte_20A5BA430[v4]))();
}

uint64_t sub_20A44CB50(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A44CB58(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A44CB60);
  return result;
}

uint64_t sub_20A44CB6C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A44CB74);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_20A44CB78(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A44CB80(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A44CB8C(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_20A44CB98(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for ODIClientGUID.GUIDSeedVersion()
{
  return &type metadata for ODIClientGUID.GUIDSeedVersion;
}

uint64_t getEnumTagSinglePayload for ODIClientGUIDSeeds.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ODIClientGUIDSeeds.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_20A44CC8C + 4 * byte_20A5BA43F[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_20A44CCC0 + 4 * byte_20A5BA43A[v4]))();
}

uint64_t sub_20A44CCC0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A44CCC8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A44CCD0);
  return result;
}

uint64_t sub_20A44CCDC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A44CCE4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_20A44CCE8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A44CCF0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ODIClientGUIDSeeds.CodingKeys()
{
  return &type metadata for ODIClientGUIDSeeds.CodingKeys;
}

unint64_t sub_20A44CD10()
{
  unint64_t result;

  result = qword_2545F9B90;
  if (!qword_2545F9B90)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5BA674, &type metadata for ODIClientGUIDSeeds.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545F9B90);
  }
  return result;
}

unint64_t sub_20A44CD58()
{
  unint64_t result;

  result = qword_2545F9B98;
  if (!qword_2545F9B98)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5BA714, &type metadata for ODIClientGUID.GUIDSeedVersion);
    atomic_store(result, (unint64_t *)&qword_2545F9B98);
  }
  return result;
}

unint64_t sub_20A44CDA0()
{
  unint64_t result;

  result = qword_253EB45C0;
  if (!qword_253EB45C0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5BA5E4, &type metadata for ODIClientGUIDSeeds.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_253EB45C0);
  }
  return result;
}

unint64_t sub_20A44CDE8()
{
  unint64_t result;

  result = qword_253EB45B8;
  if (!qword_253EB45B8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5BA60C, &type metadata for ODIClientGUIDSeeds.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_253EB45B8);
  }
  return result;
}

uint64_t sub_20A44CE2C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_BYTE *sub_20A44CE68(_BYTE *result, _BYTE *a2)
{
  uint64_t v2;

  if (result)
  {
    v2 = a2 - result;
    if (a2 == result)
    {
      return 0;
    }
    else if (v2 <= 14)
    {
      return (_BYTE *)sub_20A44BB28(result, a2);
    }
    else if ((unint64_t)v2 >= 0x7FFFFFFF)
    {
      return (_BYTE *)sub_20A44BBE8((uint64_t)result, (uint64_t)a2);
    }
    else
    {
      return (_BYTE *)sub_20A44BC60((uint64_t)result, (uint64_t)a2);
    }
  }
  return result;
}

uint64_t sub_20A44CECC(uint64_t result)
{
  unint64_t v1;

  if (result)
  {
    v1 = result;
    if (result <= 14)
    {
      if (result < 0)
        __break(1u);
      else
        return 0;
    }
    else
    {
      sub_20A5B836C();
      swift_allocObject();
      sub_20A5B8348();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_20A5B8510();
        result = swift_allocObject();
        *(_QWORD *)(result + 16) = 0;
        *(_QWORD *)(result + 24) = v1;
      }
      else
      {
        return v1 << 32;
      }
    }
  }
  return result;
}

_QWORD *sub_20A44CF68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[4];
  _QWORD v13[2];

  v5 = *(uint64_t **)(v3 + 16);
  v7 = *v5;
  v6 = v5[1];
  v13[0] = v7;
  v13[1] = v6;
  v12[2] = v13;
  result = sub_20A44B48C((_QWORD *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_20A44CFF0, (uint64_t)v12, a1, a2);
  *a3 = result;
  a3[1] = v9;
  a3[2] = v10;
  a3[3] = v11;
  return result;
}

uint64_t sub_20A44CFC4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_20A44BD90(a1, a2);
  return a1;
}

uint64_t sub_20A44CFD8(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_20A44CFF0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_20A44B59C(a1, a2);
}

uint64_t sub_20A44D00C()
{
  return objectdestroyTm(&qword_253EB5160);
}

uint64_t sub_20A44D018()
{
  return sub_20A44D2DC(&qword_253EB5160, (uint64_t (*)(_QWORD, _QWORD, uint64_t))sub_20A44AE28);
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_20A44D044(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x20BD26CEC](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x20BD26CE0](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

double sub_20A44D0C8(uint64_t a1)
{
  double result;

  *(_QWORD *)(a1 + 128) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_20A44D0E4(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_20A44D178(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_20A44D20C(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x20BD26CEC](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A44D24C()
{
  return objectdestroyTm((uint64_t *)&unk_253EB4830);
}

uint64_t objectdestroyTm(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v1 + v4, v2);
  return swift_deallocObject();
}

uint64_t sub_20A44D2C8()
{
  return sub_20A44D2DC((uint64_t *)&unk_253EB4830, (uint64_t (*)(_QWORD, _QWORD, uint64_t))sub_20A44AD84);
}

uint64_t sub_20A44D2DC(uint64_t *a1, uint64_t (*a2)(_QWORD, _QWORD, uint64_t))
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a1) - 8) + 80);
  return a2(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), v2 + ((v3 + 32) & ~v3));
}

void type metadata accessor for SecAccessControl(uint64_t a1)
{
  sub_20A44D3E4(a1, &qword_253EB4868);
}

void type metadata accessor for SecPolicy(uint64_t a1)
{
  sub_20A44D3E4(a1, &qword_253EB5190);
}

void type metadata accessor for SecCertificate(uint64_t a1)
{
  sub_20A44D3E4(a1, &qword_253EB51C8);
}

void type metadata accessor for CFError(uint64_t a1)
{
  sub_20A44D3E4(a1, (unint64_t *)&unk_2545F9BD0);
}

void type metadata accessor for CFString(uint64_t a1)
{
  sub_20A44D3E4(a1, &qword_253EB4848);
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_20A44D388(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_20A44D3A8(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CLLocationCoordinate2D(uint64_t a1)
{
  sub_20A44D3E4(a1, &qword_2545F9BE0);
}

void sub_20A44D3E4(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_20A44D428()
{
  return sub_20A44D044(&qword_2545F9BE8, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_20A5BA8E8);
}

uint64_t sub_20A44D454()
{
  return sub_20A44D044((unint64_t *)&unk_2545F9BF0, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_20A5BA914);
}

uint64_t DIPError(_:fromError:code:forceCode:properties:file:function:line:)(uint64_t a1, uint64_t a2, _QWORD *a3, unsigned __int16 *a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  unint64_t v12;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  int64_t v43;
  unint64_t v44;
  int64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  char v50;
  unint64_t v51;
  uint64_t v52;
  _BOOL8 v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  char v57;
  _OWORD *v58;
  uint64_t v59;
  BOOL v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  _QWORD *v66;
  unint64_t v67;
  unint64_t v68;
  _QWORD *v69;
  char v70;
  uint64_t v71;
  id v72;
  void *v73;
  void *v74;
  id v75;
  uint64_t result;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  char isUniquelyReferenced_nonNull_native;
  int64_t v83;
  int64_t v84;
  int64_t v85;
  int v88;
  _OWORD v91[2];
  _OWORD v92[2];
  uint64_t v93;
  __int128 v94;
  unint64_t v95;
  uint64_t v96;

  LOBYTE(v12) = a5;
  v88 = *a4;
  if (qword_253EB4710 != -1)
LABEL_80:
    swift_once();
  v14 = sub_20A469C58(MEMORY[0x24BEE4AF8]);
  v15 = v14;
  if (a3)
  {
    v16 = a3;
    v17 = (void *)sub_20A5B8414();
    v18 = objc_msgSend(v17, sel_domain);
    v19 = sub_20A5B8900();
    v21 = v20;

    if (v19 == 0x726F727245504944 && v21 == 0xE800000000000000)
      goto LABEL_10;
    v23 = sub_20A5B91AC();
    swift_bridgeObjectRelease();
    if ((v23 & 1) != 0)
      goto LABEL_11;
    v24 = objc_msgSend(v17, sel_domain);
    v25 = sub_20A5B8900();
    v27 = v26;

    if (v25 == 0x726F72724549444FLL && v27 == 0xE800000000000000)
    {
LABEL_10:
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    v77 = sub_20A5B91AC();
    swift_bridgeObjectRelease();
    if ((v77 & 1) != 0)
    {
LABEL_11:
      if ((v12 & 1) == 0)
      {
        DIPErrorCode.init(rawValue:)((Swift::Int)objc_msgSend(v17, sel_code));
        if ((unsigned __int16)v94 == 462)
          v28 = v88;
        else
          v28 = (unsigned __int16)v94;
        v88 = v28;
      }
      v29 = objc_msgSend(v17, sel_userInfo);
      v30 = sub_20A5B8888();

      swift_bridgeObjectRelease();
      v31 = v30;
      if (!a6)
        goto LABEL_65;
      goto LABEL_19;
    }
    v78 = sub_20A5B8900();
    v80 = v79;
    v95 = sub_20A44FE3C();
    *(_QWORD *)&v94 = v17;
    sub_20A44FD68(&v94, v92);
    v81 = v17;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v91[0] = v15;
    sub_20A476610(v92, v78, v80, isUniquelyReferenced_nonNull_native);
    v31 = *(_QWORD *)&v91[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    if (!a6)
    {
LABEL_65:
      v63 = *(_QWORD *)(v31 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v63
        && (v64 = sub_20A47094C(0x636F766E49504944, 0xEE00736E6F697461), (v65 & 1) != 0)
        && (sub_20A44FD78(*(_QWORD *)(v31 + 56) + 32 * v64, (uint64_t)&v94),
            __swift_instantiateConcreteTypeFromMangledName(&qword_253EB47E8),
            swift_dynamicCast()))
      {
        v66 = *(_QWORD **)&v92[0];
      }
      else
      {
        v66 = (_QWORD *)MEMORY[0x24BEE4AF8];
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v66 = sub_20A46FA20(0, v66[2] + 1, 1, v66);
      v68 = v66[2];
      v67 = v66[3];
      if (v68 >= v67 >> 1)
        v66 = sub_20A46FA20((_QWORD *)(v67 > 1), v68 + 1, 1, v66);
      v66[2] = v68 + 1;
      v69 = &v66[7 * v68];
      v69[4] = a1;
      v69[5] = a2;
      v69[6] = a7;
      v69[7] = a8;
      v69[8] = a9;
      v69[9] = a10;
      v69[10] = a11;
      v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_253EB47E8);
      *(_QWORD *)&v94 = v66;
      sub_20A44FD68(&v94, v92);
      v70 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v91[0] = v31;
      sub_20A476610(v92, 0x636F766E49504944, 0xEE00736E6F697461, v70);
      swift_bridgeObjectRelease();
      v71 = qword_20A5BBF38[(__int16)v88];
      v72 = objc_allocWithZone(MEMORY[0x24BDD1540]);
      swift_bridgeObjectRetain();
      v73 = (void *)sub_20A5B88F4();
      v74 = (void *)sub_20A5B887C();
      swift_bridgeObjectRelease();
      v75 = objc_msgSend(v72, sel_initWithDomain_code_userInfo_, v73, v71, v74);
      swift_bridgeObjectRelease();

      return (uint64_t)v75;
    }
  }
  else
  {
    v31 = v14;
    if (!a6)
      goto LABEL_65;
  }
LABEL_19:
  v32 = *(_QWORD *)(v31 + 16);
  swift_bridgeObjectRetain();
  if (v32
    && (v33 = sub_20A47094C(0x65706F7250504944, 0xED00007365697472), (v34 & 1) != 0)
    && (sub_20A44FD78(*(_QWORD *)(v31 + 56) + 32 * v33, (uint64_t)&v94),
        __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9CC8),
        swift_dynamicCast()))
  {
    a3 = *(_QWORD **)&v92[0];
  }
  else
  {
    a3 = (_QWORD *)sub_20A469DC4(MEMORY[0x24BEE4AF8]);
  }
  v35 = 0;
  v36 = a6 + 64;
  v37 = 1 << *(_BYTE *)(a6 + 32);
  v38 = -1;
  if (v37 < 64)
    v38 = ~(-1 << v37);
  v12 = v38 & *(_QWORD *)(a6 + 64);
  v39 = (unint64_t)(v37 + 63) >> 6;
  v84 = v39 - 5;
  v83 = v39 - 1;
  v85 = v39;
  while (1)
  {
    while (1)
    {
      if (v12)
      {
        v40 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v41 = v40 | (v35 << 6);
LABEL_29:
        v42 = *(_QWORD *)(a6 + 56);
        LOBYTE(v92[0]) = *(_BYTE *)(*(_QWORD *)(a6 + 48) + v41);
        sub_20A44FD78(v42 + 32 * v41, (uint64_t)v92 + 8);
        goto LABEL_36;
      }
      v43 = v35 + 1;
      if (__OFADD__(v35, 1))
      {
        __break(1u);
LABEL_79:
        __break(1u);
        goto LABEL_80;
      }
      if (v43 >= v39)
      {
        v45 = v35;
      }
      else
      {
        v44 = *(_QWORD *)(v36 + 8 * v43);
        if (v44)
          goto LABEL_33;
        v45 = v35 + 1;
        if (v35 + 2 < v39)
        {
          v44 = *(_QWORD *)(v36 + 8 * (v35 + 2));
          if (v44)
          {
            v43 = v35 + 2;
LABEL_33:
            v12 = (v44 - 1) & v44;
            v41 = __clz(__rbit64(v44)) + (v43 << 6);
            v35 = v43;
            goto LABEL_29;
          }
          v45 = v35 + 2;
          if (v35 + 3 < v39)
          {
            v44 = *(_QWORD *)(v36 + 8 * (v35 + 3));
            if (v44)
            {
              v43 = v35 + 3;
              goto LABEL_33;
            }
            v43 = v35 + 4;
            v45 = v35 + 3;
            if (v35 + 4 < v39)
            {
              v44 = *(_QWORD *)(v36 + 8 * v43);
              if (v44)
                goto LABEL_33;
              while (v84 != v35)
              {
                v44 = *(_QWORD *)(a6 + 104 + 8 * v35++);
                if (v44)
                {
                  v43 = v35 + 4;
                  goto LABEL_33;
                }
              }
              v45 = v83;
            }
          }
        }
      }
      v12 = 0;
      v93 = 0;
      v35 = v45;
      memset(v92, 0, sizeof(v92));
LABEL_36:
      sub_20A44FDB4((uint64_t)v92, (uint64_t)&v94);
      if (!v96)
      {
        swift_release();
        v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9CC8);
        *(_QWORD *)&v94 = a3;
        sub_20A44FD68(&v94, v92);
        swift_bridgeObjectRetain();
        v62 = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)&v91[0] = v31;
        sub_20A476610(v92, 0x65706F7250504944, 0xED00007365697472, v62);
        v31 = *(_QWORD *)&v91[0];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_65;
      }
      v46 = v94;
      sub_20A44FD68((__int128 *)((char *)&v94 + 8), v92);
      if (!a3[2])
        break;
      v47 = sub_20A470974(v46);
      if ((v48 & 1) == 0)
        break;
      sub_20A44FD78(a3[7] + 32 * v47, (uint64_t)v91);
      sub_20A44FDFC((uint64_t)v91);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v92);
    }
    memset(v91, 0, sizeof(v91));
    sub_20A44FDFC((uint64_t)v91);
    sub_20A44FD78((uint64_t)v92, (uint64_t)v91);
    v49 = swift_isUniquelyReferenced_nonNull_native();
    v51 = sub_20A470974(v46);
    v52 = a3[2];
    v53 = (v50 & 1) == 0;
    v54 = v52 + v53;
    if (__OFADD__(v52, v53))
      goto LABEL_79;
    v55 = v50;
    if (a3[3] >= v54)
    {
      if ((v49 & 1) != 0)
      {
        if ((v50 & 1) != 0)
          goto LABEL_50;
      }
      else
      {
        sub_20A47813C();
        if ((v55 & 1) != 0)
          goto LABEL_50;
      }
    }
    else
    {
      sub_20A47387C(v54, v49);
      v56 = sub_20A470974(v46);
      if ((v55 & 1) != (v57 & 1))
        goto LABEL_82;
      v51 = v56;
      if ((v55 & 1) != 0)
      {
LABEL_50:
        v58 = (_OWORD *)(a3[7] + 32 * v51);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
        sub_20A44FD68(v91, v58);
        goto LABEL_63;
      }
    }
    a3[(v51 >> 6) + 8] |= 1 << v51;
    *(_BYTE *)(a3[6] + v51) = v46;
    sub_20A44FD68(v91, (_OWORD *)(a3[7] + 32 * v51));
    v59 = a3[2];
    v60 = __OFADD__(v59, 1);
    v61 = v59 + 1;
    if (v60)
      break;
    a3[2] = v61;
LABEL_63:
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v92);
    v39 = v85;
    v36 = a6 + 64;
  }
  __break(1u);
LABEL_82:
  result = sub_20A5B9218();
  __break(1u);
  return result;
}

uint64_t sub_20A44DDE4(void *a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  if (a2 || (v6 = 0xE000000000000000, a3 != 0xE000000000000000))
  {
    v8 = 0xE000000000000000;
    if ((sub_20A5B91AC() & 1) != 0)
    {
      v7 = 0;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_20A5B899C();
      v7 = a2;
      v8 = a3;
    }
    v6 = 0xE000000000000000;
    if ((sub_20A5B91AC() & 1) != 0)
    {
      v18 = 0;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_20A5B899C();
      v6 = a3;
      v18 = a2;
    }
  }
  else
  {
    v18 = 0;
    v7 = 0;
    v8 = 0xE000000000000000;
  }
  sub_20A5B8C54();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52C0);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_20A5BA9B0;
  v10 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v9 + 56) = MEMORY[0x24BEE0D00];
  v11 = sub_20A450420();
  *(_QWORD *)(v9 + 64) = v11;
  *(_QWORD *)(v9 + 32) = v7;
  *(_QWORD *)(v9 + 40) = v8;
  v12 = sub_20A450464(a1);
  *(_QWORD *)(v9 + 96) = v10;
  *(_QWORD *)(v9 + 104) = v11;
  *(_QWORD *)(v9 + 72) = v12;
  *(_QWORD *)(v9 + 80) = v13;
  sub_20A5B87B0();
  swift_bridgeObjectRelease();
  sub_20A5B8C3C();
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_20A5BA9B0;
  *(_QWORD *)(v14 + 56) = v10;
  *(_QWORD *)(v14 + 64) = v11;
  *(_QWORD *)(v14 + 32) = v18;
  *(_QWORD *)(v14 + 40) = v6;
  v15 = sub_20A450BEC(a1);
  *(_QWORD *)(v14 + 96) = v10;
  *(_QWORD *)(v14 + 104) = v11;
  *(_QWORD *)(v14 + 72) = v15;
  *(_QWORD *)(v14 + 80) = v16;
  sub_20A5B87B0();
  return swift_bridgeObjectRelease();
}

CoreODIEssentials::DIPErrorCode_optional __swiftcall DIPErrorCode.init(rawValue:)(Swift::Int rawValue)
{
  __int16 *v1;
  __int16 v2;
  __int16 v3;

  if (rawValue > -30)
  {
    if (rawValue <= 39999)
    {
      if (rawValue <= 19999)
      {
        v2 = 0;
        switch(rawValue)
        {
          case -29:
            v2 = 23;
            goto LABEL_155;
          case -28:
            v2 = 22;
            goto LABEL_155;
          case -22:
            v2 = 21;
            goto LABEL_155;
          case -21:
            v2 = 20;
            goto LABEL_155;
          case -20:
            v2 = 19;
            goto LABEL_155;
          case -19:
            v2 = 18;
            goto LABEL_155;
          case -18:
            v2 = 17;
            goto LABEL_155;
          case -17:
            v2 = 16;
            goto LABEL_155;
          case -16:
            v2 = 15;
            goto LABEL_155;
          case -15:
            v2 = 14;
            goto LABEL_155;
          case -14:
            v2 = 13;
            goto LABEL_155;
          case -13:
            v2 = 12;
            goto LABEL_155;
          case -12:
            v2 = 11;
            goto LABEL_155;
          case -11:
            v2 = 10;
            goto LABEL_155;
          case -10:
            v2 = 9;
            goto LABEL_155;
          case -9:
            v2 = 8;
            goto LABEL_155;
          case -8:
            v2 = 7;
            goto LABEL_155;
          case -7:
            v2 = 6;
            goto LABEL_155;
          case -6:
            v2 = 5;
            goto LABEL_155;
          case -5:
            v2 = 4;
            goto LABEL_155;
          case -4:
            v2 = 3;
            goto LABEL_155;
          case -3:
            v2 = 2;
            goto LABEL_155;
          case -2:
            v2 = 1;
            goto LABEL_155;
          case -1:
            goto LABEL_155;
          case 200:
            v2 = 24;
            goto LABEL_155;
          default:
            goto LABEL_157;
        }
      }
      switch(rawValue)
      {
        case 20000:
          v2 = 25;
          goto LABEL_155;
        case 20001:
          v2 = 26;
          goto LABEL_155;
        case 20100:
          v2 = 27;
          goto LABEL_155;
      }
    }
    else
    {
      if (rawValue <= 40400)
      {
        switch(rawValue)
        {
          case 40000:
            v2 = 28;
            goto LABEL_155;
          case 40010:
            v2 = 29;
            goto LABEL_155;
          case 40011:
            v2 = 30;
            goto LABEL_155;
          case 40012:
            v2 = 31;
            goto LABEL_155;
          case 40013:
            v2 = 32;
            goto LABEL_155;
          case 40014:
            v2 = 33;
            goto LABEL_155;
          case 40015:
            v2 = 34;
            goto LABEL_155;
          case 40020:
            v2 = 35;
            goto LABEL_155;
          case 40021:
            v2 = 36;
            goto LABEL_155;
          case 40022:
            v2 = 37;
            goto LABEL_155;
          case 40023:
            v2 = 38;
            goto LABEL_155;
          case 40024:
            v2 = 39;
            goto LABEL_155;
          case 40025:
            v2 = 40;
            goto LABEL_155;
          case 40026:
            v2 = 41;
            goto LABEL_155;
          case 40027:
            v2 = 42;
            goto LABEL_155;
          case 40028:
            v2 = 43;
            goto LABEL_155;
          case 40029:
            v2 = 44;
            goto LABEL_155;
          case 40030:
            v2 = 45;
            goto LABEL_155;
          case 40101:
            v2 = 46;
            goto LABEL_155;
          case 40102:
            v2 = 47;
            goto LABEL_155;
          case 40200:
            v2 = 48;
            goto LABEL_155;
          case 40201:
            v2 = 49;
            goto LABEL_155;
          case 40205:
            v2 = 50;
            goto LABEL_155;
          default:
            goto LABEL_157;
        }
      }
      if (rawValue > 49999)
      {
        if (rawValue > 99990)
        {
          switch(rawValue)
          {
            case 99991:
              v2 = 61;
              goto LABEL_155;
            case 99992:
              v2 = 62;
              goto LABEL_155;
            case 99993:
              v2 = 63;
              goto LABEL_155;
          }
        }
        else
        {
          switch(rawValue)
          {
            case 50000:
              v2 = 58;
              goto LABEL_155;
            case 50001:
              v2 = 59;
              goto LABEL_155;
            case 50002:
              v2 = 60;
              goto LABEL_155;
          }
        }
      }
      else
      {
        if (rawValue <= 40499)
        {
          switch(rawValue)
          {
            case 40401:
              v2 = 51;
              goto LABEL_155;
            case 40402:
              v2 = 52;
              goto LABEL_155;
            case 40403:
              v2 = 53;
              goto LABEL_155;
            case 40404:
              v2 = 54;
              goto LABEL_155;
            default:
              goto LABEL_157;
          }
        }
        switch(rawValue)
        {
          case 40500:
            v2 = 55;
            goto LABEL_155;
          case 40600:
            v2 = 56;
            goto LABEL_155;
          case 40601:
            v2 = 57;
            goto LABEL_155;
        }
      }
    }
LABEL_157:
    if (rawValue > -3301)
    {
      v2 = 128;
      switch(rawValue)
      {
        case -3300:
          v2 = 161;
          goto LABEL_155;
        case -3203:
          v2 = 152;
          goto LABEL_155;
        case -3202:
          v2 = 151;
          goto LABEL_155;
        case -3201:
          v2 = 150;
          goto LABEL_155;
        case -3200:
          v2 = 149;
          goto LABEL_155;
        case -3178:
          v2 = 160;
          goto LABEL_155;
        case -3177:
          v2 = 159;
          goto LABEL_155;
        case -3176:
          v2 = 158;
          goto LABEL_155;
        case -3175:
          v2 = 157;
          goto LABEL_155;
        case -3174:
          v2 = 156;
          goto LABEL_155;
        case -3173:
          v2 = 155;
          goto LABEL_155;
        case -3172:
          v2 = 154;
          goto LABEL_155;
        case -3171:
          v2 = 153;
          goto LABEL_155;
        case -3167:
          v2 = 148;
          goto LABEL_155;
        case -3166:
          v2 = 147;
          goto LABEL_155;
        case -3165:
          v2 = 146;
          goto LABEL_155;
        case -3164:
          v2 = 145;
          goto LABEL_155;
        case -3163:
          v2 = 144;
          goto LABEL_155;
        case -3162:
          v2 = 143;
          goto LABEL_155;
        case -3161:
          v2 = 142;
          goto LABEL_155;
        case -3159:
          v2 = 141;
          goto LABEL_155;
        case -3158:
          v2 = 140;
          goto LABEL_155;
        case -3157:
          v2 = 139;
          goto LABEL_155;
        case -3156:
          v2 = 138;
          goto LABEL_155;
        case -3155:
          v2 = 137;
          goto LABEL_155;
        case -3154:
          v2 = 136;
          goto LABEL_155;
        case -3153:
          v2 = 135;
          goto LABEL_155;
        case -3152:
          v2 = 134;
          goto LABEL_155;
        case -3151:
          v2 = 133;
          goto LABEL_155;
        case -3113:
          v2 = 132;
          goto LABEL_155;
        case -3112:
          v2 = 131;
          goto LABEL_155;
        case -3111:
          v2 = 130;
          goto LABEL_155;
        case -3110:
          v2 = 129;
          goto LABEL_155;
        case -3109:
          goto LABEL_155;
        default:
          goto LABEL_229;
      }
    }
    if (rawValue > -4121)
    {
      switch(rawValue)
      {
        case -4120:
          v2 = 181;
          goto LABEL_155;
        case -4119:
          v2 = 180;
          goto LABEL_155;
        case -4118:
          v2 = 179;
          goto LABEL_155;
        case -4117:
          v2 = 178;
          goto LABEL_155;
        case -4116:
          v2 = 177;
          goto LABEL_155;
        case -4115:
          v2 = 176;
          goto LABEL_155;
        case -4114:
          v2 = 175;
          goto LABEL_155;
        case -4113:
          v2 = 174;
          goto LABEL_155;
        case -4112:
          v2 = 173;
          goto LABEL_155;
        case -4111:
          v2 = 172;
          goto LABEL_155;
        case -4110:
          v2 = 171;
          goto LABEL_155;
        case -4109:
          v2 = 170;
          goto LABEL_155;
        case -4108:
          v2 = 169;
          goto LABEL_155;
        case -4107:
          v2 = 168;
          goto LABEL_155;
        case -4106:
          v2 = 167;
          goto LABEL_155;
        case -4105:
          v2 = 166;
          goto LABEL_155;
        case -4104:
          v2 = 165;
          goto LABEL_155;
        case -4103:
          v2 = 164;
          goto LABEL_155;
        case -4102:
          v2 = 163;
          goto LABEL_155;
        case -4101:
          v2 = 162;
          goto LABEL_155;
        default:
          goto LABEL_229;
      }
    }
    if (rawValue > -5108)
    {
      switch(rawValue)
      {
        case -5107:
          v2 = 188;
          goto LABEL_155;
        case -5106:
          v2 = 187;
          goto LABEL_155;
        case -5105:
          v2 = 186;
          goto LABEL_155;
        case -5104:
          v2 = 185;
          goto LABEL_155;
        case -5103:
          v2 = 184;
          goto LABEL_155;
        case -5102:
          v2 = 183;
          goto LABEL_155;
        case -5101:
          v2 = 182;
          goto LABEL_155;
        default:
          goto LABEL_229;
      }
    }
    switch(rawValue)
    {
      case -5203:
        v2 = 191;
        goto LABEL_155;
      case -5202:
        v2 = 190;
        goto LABEL_155;
      case -5201:
        v2 = 189;
        goto LABEL_155;
    }
LABEL_229:
    if (rawValue <= -5703)
    {
      switch(rawValue)
      {
        case -6105:
          v2 = 241;
          goto LABEL_155;
        case -6104:
          v2 = 240;
          goto LABEL_155;
        case -6103:
          v2 = 239;
          goto LABEL_155;
        case -6102:
          v2 = 238;
          goto LABEL_155;
        case -6101:
          v2 = 237;
          goto LABEL_155;
        case -6100:
        case -6099:
        case -6098:
        case -6097:
        case -6096:
        case -6095:
        case -6094:
        case -6093:
        case -6092:
        case -6091:
        case -6090:
        case -6089:
        case -6088:
        case -6087:
        case -6086:
        case -6085:
        case -6084:
        case -6083:
        case -6082:
        case -6081:
        case -6080:
        case -6079:
        case -6078:
        case -6077:
        case -6076:
        case -6075:
        case -6074:
        case -6073:
        case -6072:
        case -6071:
        case -6070:
        case -6069:
        case -6068:
        case -6067:
        case -6066:
        case -6065:
        case -6064:
        case -6063:
        case -6062:
        case -6061:
        case -6060:
        case -6059:
        case -6058:
        case -6057:
        case -6056:
        case -6055:
        case -6054:
        case -6053:
        case -6052:
        case -6051:
        case -6050:
        case -6049:
        case -6048:
        case -6047:
        case -6046:
        case -6045:
        case -6044:
        case -6043:
        case -6042:
        case -6041:
        case -6040:
        case -6039:
        case -6038:
        case -6037:
        case -6036:
        case -6035:
        case -6034:
        case -6033:
        case -6032:
        case -6031:
        case -6030:
        case -6029:
        case -6028:
        case -6027:
        case -6026:
        case -6025:
        case -6024:
        case -6023:
        case -6022:
        case -6021:
        case -6020:
        case -6019:
        case -6018:
        case -6017:
        case -6016:
        case -6015:
        case -6014:
        case -6013:
        case -6012:
        case -6011:
        case -6000:
        case -5999:
        case -5998:
        case -5997:
        case -5996:
        case -5995:
        case -5994:
        case -5993:
        case -5992:
        case -5991:
        case -5990:
        case -5989:
        case -5988:
        case -5987:
        case -5986:
        case -5985:
        case -5984:
        case -5983:
        case -5982:
        case -5981:
        case -5980:
        case -5979:
        case -5978:
        case -5977:
        case -5976:
        case -5975:
        case -5974:
        case -5973:
        case -5972:
        case -5971:
        case -5970:
        case -5969:
        case -5968:
        case -5967:
        case -5966:
        case -5965:
        case -5964:
        case -5963:
        case -5962:
        case -5961:
        case -5960:
        case -5959:
        case -5958:
        case -5957:
        case -5956:
        case -5955:
        case -5954:
        case -5953:
        case -5952:
        case -5951:
        case -5950:
        case -5949:
        case -5948:
        case -5947:
        case -5946:
        case -5945:
        case -5944:
        case -5943:
        case -5942:
        case -5941:
        case -5940:
        case -5939:
        case -5938:
        case -5937:
        case -5936:
        case -5935:
        case -5934:
        case -5933:
        case -5932:
        case -5931:
        case -5930:
        case -5929:
        case -5928:
        case -5927:
        case -5926:
        case -5925:
        case -5924:
        case -5923:
        case -5922:
        case -5921:
        case -5920:
        case -5919:
        case -5918:
        case -5917:
        case -5916:
        case -5915:
        case -5914:
        case -5913:
          goto LABEL_249;
        case -6010:
          v2 = 236;
          goto LABEL_155;
        case -6009:
          v2 = 235;
          goto LABEL_155;
        case -6008:
          v2 = 234;
          goto LABEL_155;
        case -6007:
          v2 = 233;
          goto LABEL_155;
        case -6006:
          v2 = 232;
          goto LABEL_155;
        case -6005:
          v2 = 231;
          goto LABEL_155;
        case -6004:
          v2 = 230;
          goto LABEL_155;
        case -6003:
          v2 = 229;
          goto LABEL_155;
        case -6002:
          v2 = 228;
          goto LABEL_155;
        case -6001:
          v2 = 227;
          goto LABEL_155;
        case -5912:
          v2 = 226;
          goto LABEL_155;
        case -5911:
          v2 = 225;
          goto LABEL_155;
        case -5910:
          v2 = 224;
          goto LABEL_155;
        case -5909:
          v2 = 223;
          goto LABEL_155;
        case -5908:
          v2 = 222;
          goto LABEL_155;
        case -5907:
          v2 = 221;
          goto LABEL_155;
        case -5906:
          v2 = 220;
          goto LABEL_155;
        case -5905:
          v2 = 219;
          goto LABEL_155;
        case -5904:
          v2 = 218;
          goto LABEL_155;
        case -5903:
          v2 = 217;
          goto LABEL_155;
        case -5902:
          v2 = 216;
          goto LABEL_155;
        case -5901:
          v2 = 215;
          goto LABEL_155;
        default:
          switch(rawValue)
          {
            case -7013:
              v2 = 255;
              goto LABEL_155;
            case -7012:
              v2 = 254;
              goto LABEL_155;
            case -7011:
              v2 = 253;
              goto LABEL_155;
            case -7010:
              v2 = 252;
              goto LABEL_155;
            case -7009:
              v2 = 251;
              goto LABEL_155;
            case -7008:
              v2 = 250;
              goto LABEL_155;
            case -7007:
              v2 = 249;
              goto LABEL_155;
            case -7006:
              v2 = 248;
              goto LABEL_155;
            case -7005:
              v2 = 247;
              goto LABEL_155;
            case -7004:
              v2 = 246;
              goto LABEL_155;
            case -7003:
              v2 = 245;
              goto LABEL_155;
            case -7002:
              v2 = 244;
              goto LABEL_155;
            case -7001:
              v2 = 243;
              goto LABEL_155;
            case -7000:
              v2 = 242;
              goto LABEL_155;
            default:
              goto LABEL_249;
          }
      }
    }
    if (rawValue <= -5502)
    {
      if (rawValue > -5603)
      {
        if (rawValue == -5602)
        {
          v2 = 212;
          goto LABEL_155;
        }
        if (rawValue == -5601)
        {
          v2 = 211;
          goto LABEL_155;
        }
      }
      else
      {
        if (rawValue == -5702)
        {
          v2 = 214;
          goto LABEL_155;
        }
        if (rawValue == -5701)
        {
          v2 = 213;
          goto LABEL_155;
        }
      }
    }
    else
    {
      v2 = 192;
      switch(rawValue)
      {
        case -5301:
          v2 = 208;
          goto LABEL_155;
        case -5300:
        case -5299:
        case -5298:
        case -5297:
        case -5296:
        case -5295:
        case -5294:
        case -5293:
        case -5292:
        case -5291:
        case -5290:
        case -5289:
        case -5288:
        case -5287:
        case -5286:
        case -5285:
        case -5284:
        case -5283:
        case -5282:
        case -5281:
        case -5280:
        case -5279:
        case -5278:
        case -5277:
        case -5276:
        case -5275:
        case -5274:
        case -5273:
        case -5272:
        case -5271:
        case -5270:
        case -5269:
        case -5268:
        case -5267:
        case -5266:
        case -5265:
        case -5264:
        case -5263:
        case -5262:
        case -5261:
        case -5260:
        case -5259:
        case -5258:
        case -5257:
        case -5256:
        case -5255:
        case -5254:
        case -5253:
        case -5252:
        case -5251:
        case -5250:
        case -5249:
        case -5248:
        case -5247:
        case -5246:
        case -5245:
        case -5244:
        case -5243:
        case -5242:
        case -5241:
        case -5240:
        case -5239:
        case -5238:
        case -5237:
        case -5236:
        case -5235:
        case -5234:
        case -5233:
        case -5232:
        case -5231:
        case -5230:
        case -5229:
        case -5228:
        case -5227:
        case -5226:
        case -5225:
        case -5224:
        case -5223:
        case -5222:
        case -5221:
        case -5220:
          break;
        case -5219:
          v2 = 207;
          goto LABEL_155;
        case -5218:
          v2 = 206;
          goto LABEL_155;
        case -5217:
          v2 = 205;
          goto LABEL_155;
        case -5216:
          v2 = 204;
          goto LABEL_155;
        case -5215:
          v2 = 203;
          goto LABEL_155;
        case -5214:
          v2 = 202;
          goto LABEL_155;
        case -5213:
          v2 = 201;
          goto LABEL_155;
        case -5212:
          v2 = 200;
          goto LABEL_155;
        case -5211:
          v2 = 199;
          goto LABEL_155;
        case -5210:
          v2 = 198;
          goto LABEL_155;
        case -5209:
          v2 = 197;
          goto LABEL_155;
        case -5208:
          v2 = 196;
          goto LABEL_155;
        case -5207:
          v2 = 195;
          goto LABEL_155;
        case -5206:
          v2 = 194;
          goto LABEL_155;
        case -5205:
          v2 = 193;
          goto LABEL_155;
        case -5204:
          goto LABEL_155;
        default:
          if (rawValue == -5501)
          {
            v2 = 210;
            goto LABEL_155;
          }
          if (rawValue == -5401)
          {
            v2 = 209;
            goto LABEL_155;
          }
          break;
      }
    }
LABEL_249:
    if (rawValue > -10002)
    {
      if (rawValue > -8305)
      {
        if (rawValue > -7017)
        {
          switch(rawValue)
          {
            case -7016:
              v2 = 258;
              goto LABEL_155;
            case -7014:
              v2 = 256;
              goto LABEL_155;
            case -7015:
              v2 = 257;
              goto LABEL_155;
          }
        }
        else
        {
          switch(rawValue)
          {
            case -8304:
              v2 = 261;
              goto LABEL_155;
            case -8301:
              v2 = 260;
              goto LABEL_155;
            case -8001:
              v2 = 259;
              goto LABEL_155;
          }
        }
      }
      else
      {
        switch(rawValue)
        {
          case -8504:
            v2 = 274;
            goto LABEL_155;
          case -8503:
            v2 = 273;
            goto LABEL_155;
          case -8502:
            v2 = 272;
            goto LABEL_155;
          case -8501:
            v2 = 271;
            goto LABEL_155;
          case -8500:
            v2 = 270;
            goto LABEL_155;
          case -8499:
          case -8498:
          case -8497:
          case -8496:
          case -8495:
          case -8494:
          case -8493:
          case -8492:
          case -8491:
          case -8490:
          case -8489:
          case -8488:
          case -8487:
          case -8486:
          case -8485:
          case -8484:
          case -8483:
          case -8482:
          case -8481:
          case -8480:
          case -8479:
          case -8478:
          case -8477:
          case -8476:
          case -8475:
          case -8474:
          case -8473:
          case -8472:
          case -8471:
          case -8470:
          case -8469:
          case -8468:
          case -8467:
          case -8466:
          case -8465:
          case -8464:
          case -8463:
          case -8462:
          case -8461:
          case -8460:
          case -8459:
          case -8458:
          case -8457:
          case -8456:
          case -8455:
          case -8454:
          case -8453:
          case -8452:
          case -8451:
          case -8450:
          case -8449:
          case -8448:
          case -8447:
          case -8446:
          case -8445:
          case -8444:
          case -8443:
          case -8442:
          case -8441:
          case -8440:
          case -8439:
          case -8438:
          case -8437:
          case -8436:
          case -8435:
          case -8432:
          case -8431:
          case -8430:
          case -8427:
          case -8426:
          case -8425:
          case -8424:
          case -8423:
          case -8422:
          case -8421:
          case -8420:
          case -8419:
          case -8418:
          case -8417:
          case -8416:
          case -8415:
          case -8414:
          case -8413:
          case -8412:
          case -8411:
          case -8410:
          case -8409:
          case -8408:
          case -8407:
          case -8406:
          case -8405:
          case -8402:
            break;
          case -8434:
            v2 = 269;
            goto LABEL_155;
          case -8433:
            v2 = 268;
            goto LABEL_155;
          case -8429:
            v2 = 267;
            goto LABEL_155;
          case -8428:
            v2 = 266;
            goto LABEL_155;
          case -8404:
            v2 = 265;
            goto LABEL_155;
          case -8403:
            v2 = 264;
            goto LABEL_155;
          case -8401:
            v2 = 263;
            goto LABEL_155;
          case -8400:
            v2 = 262;
            goto LABEL_155;
          default:
            if (rawValue == -10001)
            {
              v2 = 276;
              goto LABEL_155;
            }
            if (rawValue == -10000)
            {
              v2 = 275;
              goto LABEL_155;
            }
            break;
        }
      }
LABEL_324:
      switch(rawValue)
      {
        case -12052:
          v2 = 383;
          goto LABEL_155;
        case -12051:
        case -12006:
        case -12004:
LABEL_447:
          v3 = 444;
          v2 = 384;
          switch(rawValue)
          {
            case -12119:
              *v1 = 447;
              break;
            case -12118:
              *v1 = 446;
              break;
            case -12117:
              *v1 = 445;
              break;
            case -12116:
              goto LABEL_156;
            case -12113:
              v2 = 443;
              goto LABEL_155;
            case -12112:
              v2 = 442;
              goto LABEL_155;
            case -12111:
              v2 = 441;
              goto LABEL_155;
            case -12110:
              v2 = 440;
              goto LABEL_155;
            case -12109:
              v2 = 439;
              goto LABEL_155;
            case -12108:
              v2 = 438;
              goto LABEL_155;
            case -12107:
              v2 = 437;
              goto LABEL_155;
            case -12106:
              v2 = 436;
              goto LABEL_155;
            case -12105:
              v2 = 435;
              goto LABEL_155;
            case -12104:
              v2 = 434;
              goto LABEL_155;
            case -12103:
              v2 = 433;
              goto LABEL_155;
            case -12102:
              v2 = 432;
              goto LABEL_155;
            case -12101:
              v2 = 431;
              goto LABEL_155;
            case -12100:
              v2 = 430;
              goto LABEL_155;
            case -12099:
              v2 = 429;
              goto LABEL_155;
            case -12098:
              v2 = 428;
              goto LABEL_155;
            case -12097:
              v2 = 427;
              goto LABEL_155;
            case -12096:
              v2 = 426;
              goto LABEL_155;
            case -12095:
              v2 = 425;
              goto LABEL_155;
            case -12094:
              v2 = 424;
              goto LABEL_155;
            case -12093:
              v2 = 423;
              goto LABEL_155;
            case -12092:
              v2 = 422;
              goto LABEL_155;
            case -12091:
              v2 = 421;
              goto LABEL_155;
            case -12090:
              v2 = 420;
              goto LABEL_155;
            case -12089:
              v2 = 419;
              goto LABEL_155;
            case -12088:
              v2 = 418;
              goto LABEL_155;
            case -12087:
              v2 = 417;
              goto LABEL_155;
            case -12086:
              v2 = 416;
              goto LABEL_155;
            case -12085:
              v2 = 415;
              goto LABEL_155;
            case -12084:
              v2 = 414;
              goto LABEL_155;
            case -12083:
              v2 = 413;
              goto LABEL_155;
            case -12082:
              v2 = 412;
              goto LABEL_155;
            case -12081:
              v2 = 411;
              goto LABEL_155;
            case -12080:
              v2 = 410;
              goto LABEL_155;
            case -12079:
              v2 = 409;
              goto LABEL_155;
            case -12078:
              v2 = 408;
              goto LABEL_155;
            case -12077:
              v2 = 407;
              goto LABEL_155;
            case -12076:
              v2 = 406;
              goto LABEL_155;
            case -12075:
              v2 = 405;
              goto LABEL_155;
            case -12074:
              v2 = 404;
              goto LABEL_155;
            case -12073:
              v2 = 403;
              goto LABEL_155;
            case -12072:
              v2 = 402;
              goto LABEL_155;
            case -12071:
              v2 = 401;
              goto LABEL_155;
            case -12070:
              v2 = 400;
              goto LABEL_155;
            case -12069:
              v2 = 399;
              goto LABEL_155;
            case -12068:
              v2 = 398;
              goto LABEL_155;
            case -12067:
              v2 = 397;
              goto LABEL_155;
            case -12066:
              v2 = 396;
              goto LABEL_155;
            case -12065:
              v2 = 395;
              goto LABEL_155;
            case -12064:
              v2 = 394;
              goto LABEL_155;
            case -12062:
              v2 = 393;
              goto LABEL_155;
            case -12061:
              v2 = 392;
              goto LABEL_155;
            case -12060:
              v2 = 391;
              goto LABEL_155;
            case -12059:
              v2 = 390;
              goto LABEL_155;
            case -12058:
              v2 = 389;
              goto LABEL_155;
            case -12057:
              v2 = 388;
              goto LABEL_155;
            case -12056:
              v2 = 387;
              goto LABEL_155;
            case -12055:
              v2 = 386;
              goto LABEL_155;
            case -12054:
              v2 = 385;
              goto LABEL_155;
            case -12053:
              goto LABEL_155;
            default:
              if (rawValue <= -12126)
              {
                switch(rawValue)
                {
                  case -14003:
                    *v1 = 461;
                    break;
                  case -14002:
                    *v1 = 460;
                    break;
                  case -14001:
                    *v1 = 459;
                    break;
                  case -14000:
                    *v1 = 458;
                    break;
                  default:
                    if (rawValue == -13000)
                    {
                      *v1 = 457;
                    }
                    else if (rawValue == -12200)
                    {
                      *v1 = 456;
                    }
                    else
                    {
LABEL_528:
                      *v1 = 462;
                    }
                    break;
                }
              }
              else
              {
                v3 = 448;
                switch(rawValue)
                {
                  case -12125:
                    *v1 = 453;
                    break;
                  case -12124:
                    *v1 = 452;
                    break;
                  case -12123:
                    *v1 = 451;
                    break;
                  case -12122:
                    *v1 = 450;
                    break;
                  case -12121:
                    *v1 = 449;
                    break;
                  case -12120:
                    goto LABEL_156;
                  case -12063:
                    *v1 = 455;
                    break;
                  case -12051:
                    *v1 = 454;
                    break;
                  default:
                    goto LABEL_528;
                }
              }
              break;
          }
          return (CoreODIEssentials::DIPErrorCode_optional)rawValue;
        case -12050:
          v2 = 382;
          goto LABEL_155;
        case -12049:
          v2 = 381;
          goto LABEL_155;
        case -12048:
          v2 = 380;
          goto LABEL_155;
        case -12047:
          v2 = 379;
          goto LABEL_155;
        case -12046:
          v2 = 378;
          goto LABEL_155;
        case -12045:
          v2 = 377;
          goto LABEL_155;
        case -12044:
          v2 = 376;
          goto LABEL_155;
        case -12043:
          v2 = 375;
          goto LABEL_155;
        case -12042:
          v2 = 374;
          goto LABEL_155;
        case -12041:
          v2 = 373;
          goto LABEL_155;
        case -12040:
          v2 = 372;
          goto LABEL_155;
        case -12039:
          v2 = 371;
          goto LABEL_155;
        case -12038:
          v2 = 370;
          goto LABEL_155;
        case -12037:
          v2 = 369;
          goto LABEL_155;
        case -12036:
          v2 = 368;
          goto LABEL_155;
        case -12035:
          v2 = 367;
          goto LABEL_155;
        case -12034:
          v2 = 366;
          goto LABEL_155;
        case -12033:
          v2 = 365;
          goto LABEL_155;
        case -12032:
          v2 = 364;
          goto LABEL_155;
        case -12031:
          v2 = 363;
          goto LABEL_155;
        case -12030:
          v2 = 362;
          goto LABEL_155;
        case -12029:
          v2 = 361;
          goto LABEL_155;
        case -12028:
          v2 = 360;
          goto LABEL_155;
        case -12027:
          v2 = 359;
          goto LABEL_155;
        case -12026:
          v2 = 358;
          goto LABEL_155;
        case -12025:
          v2 = 357;
          goto LABEL_155;
        case -12024:
          v2 = 356;
          goto LABEL_155;
        case -12023:
          v2 = 355;
          goto LABEL_155;
        case -12022:
          v2 = 354;
          goto LABEL_155;
        case -12021:
          v2 = 353;
          goto LABEL_155;
        case -12020:
          v2 = 352;
          goto LABEL_155;
        case -12019:
          v2 = 351;
          goto LABEL_155;
        case -12018:
          v2 = 350;
          goto LABEL_155;
        case -12017:
          v2 = 349;
          goto LABEL_155;
        case -12016:
          v2 = 348;
          goto LABEL_155;
        case -12015:
          v2 = 347;
          goto LABEL_155;
        case -12014:
          v2 = 346;
          goto LABEL_155;
        case -12013:
          v2 = 345;
          goto LABEL_155;
        case -12012:
          v2 = 344;
          goto LABEL_155;
        case -12011:
          v2 = 343;
          goto LABEL_155;
        case -12010:
          v2 = 342;
          goto LABEL_155;
        case -12009:
          v2 = 341;
          goto LABEL_155;
        case -12008:
          v2 = 340;
          goto LABEL_155;
        case -12007:
          v2 = 339;
          goto LABEL_155;
        case -12005:
          v2 = 338;
          goto LABEL_155;
        case -12003:
          v2 = 337;
          goto LABEL_155;
        case -12002:
          v2 = 336;
          goto LABEL_155;
        case -12001:
          v2 = 335;
          goto LABEL_155;
        case -12000:
          v2 = 334;
          goto LABEL_155;
        default:
          v2 = 320;
          switch(rawValue)
          {
            case -11207:
              v2 = 333;
              goto LABEL_155;
            case -11202:
              v2 = 332;
              goto LABEL_155;
            case -11201:
              v2 = 331;
              goto LABEL_155;
            case -11158:
              v2 = 330;
              goto LABEL_155;
            case -11157:
              v2 = 329;
              goto LABEL_155;
            case -11156:
              v2 = 328;
              goto LABEL_155;
            case -11155:
              v2 = 327;
              goto LABEL_155;
            case -11154:
              v2 = 326;
              goto LABEL_155;
            case -11153:
              v2 = 325;
              goto LABEL_155;
            case -11152:
              v2 = 324;
              goto LABEL_155;
            case -11151:
              v2 = 323;
              goto LABEL_155;
            case -11150:
              v2 = 322;
              goto LABEL_155;
            case -11109:
              v2 = 321;
              goto LABEL_155;
            case -11108:
              goto LABEL_155;
            default:
              goto LABEL_447;
          }
      }
    }
    switch(rawValue)
    {
      case -11107:
        v2 = 319;
        break;
      case -11106:
        v2 = 318;
        break;
      case -11105:
        v2 = 317;
        break;
      case -11104:
        v2 = 316;
        break;
      case -11103:
        v2 = 315;
        break;
      case -11102:
        v2 = 314;
        break;
      case -11101:
        v2 = 313;
        break;
      case -11100:
      case -11099:
      case -11098:
      case -11097:
      case -11096:
      case -11095:
      case -11094:
      case -11093:
      case -11092:
      case -11091:
      case -11090:
      case -11089:
      case -11088:
      case -11087:
      case -11086:
      case -11085:
      case -11084:
      case -11083:
      case -11082:
      case -11081:
      case -11080:
      case -11079:
      case -11078:
      case -11077:
      case -11076:
      case -11075:
      case -11074:
      case -11073:
      case -11072:
      case -11071:
      case -11070:
      case -11069:
      case -11068:
      case -11067:
      case -11066:
      case -11065:
      case -11064:
      case -11063:
      case -11062:
      case -11061:
      case -11060:
      case -11059:
      case -11058:
      case -11057:
      case -11056:
      case -11055:
      case -11054:
      case -11053:
      case -11052:
      case -11051:
      case -11050:
      case -11049:
      case -11048:
      case -11047:
      case -11046:
      case -11045:
      case -11044:
      case -11043:
      case -11042:
      case -11041:
      case -11040:
      case -11039:
      case -11038:
      case -11037:
      case -11036:
        goto LABEL_324;
      case -11035:
        v2 = 312;
        break;
      case -11034:
        v2 = 311;
        break;
      case -11033:
        v2 = 310;
        break;
      case -11032:
        v2 = 309;
        break;
      case -11031:
        v2 = 308;
        break;
      case -11030:
        v2 = 307;
        break;
      case -11029:
        v2 = 306;
        break;
      case -11028:
        v2 = 305;
        break;
      case -11027:
        v2 = 304;
        break;
      case -11026:
        v2 = 303;
        break;
      case -11025:
        v2 = 302;
        break;
      case -11024:
        v2 = 301;
        break;
      case -11023:
        v2 = 300;
        break;
      case -11022:
        v2 = 299;
        break;
      case -11021:
        v2 = 298;
        break;
      case -11020:
        v2 = 297;
        break;
      case -11019:
        v2 = 296;
        break;
      case -11018:
        v2 = 295;
        break;
      case -11017:
        v2 = 294;
        break;
      case -11016:
        v2 = 293;
        break;
      case -11015:
        v2 = 292;
        break;
      case -11014:
        v2 = 291;
        break;
      case -11013:
        v2 = 290;
        break;
      case -11012:
        v2 = 289;
        break;
      case -11011:
        v2 = 288;
        break;
      case -11010:
        v2 = 287;
        break;
      case -11009:
        v2 = 286;
        break;
      case -11008:
        v2 = 285;
        break;
      case -11007:
        v2 = 284;
        break;
      case -11006:
        v2 = 283;
        break;
      case -11005:
        v2 = 282;
        break;
      case -11004:
        v2 = 281;
        break;
      case -11003:
        v2 = 280;
        break;
      case -11002:
        v2 = 279;
        break;
      case -11001:
        v2 = 278;
        break;
      default:
        if (rawValue != -10002)
          goto LABEL_324;
        v2 = 277;
        break;
    }
  }
  else
  {
    if (rawValue > -1408)
    {
      switch(rawValue)
      {
        case -1407:
          v2 = 83;
          goto LABEL_155;
        case -1406:
          v2 = 82;
          goto LABEL_155;
        case -1405:
          v2 = 81;
          goto LABEL_155;
        case -1404:
          v2 = 80;
          goto LABEL_155;
        case -1403:
          v2 = 79;
          goto LABEL_155;
        case -1402:
          v2 = 78;
          goto LABEL_155;
        case -1401:
          v2 = 77;
          goto LABEL_155;
        case -1317:
          v2 = 98;
          goto LABEL_155;
        case -1316:
          v2 = 97;
          goto LABEL_155;
        case -1315:
          v2 = 96;
          goto LABEL_155;
        case -1314:
          v2 = 95;
          goto LABEL_155;
        case -1311:
          v2 = 94;
          goto LABEL_155;
        case -1310:
          v2 = 93;
          goto LABEL_155;
        case -1309:
          v2 = 92;
          goto LABEL_155;
        case -1308:
          v2 = 91;
          goto LABEL_155;
        case -1307:
          v2 = 90;
          goto LABEL_155;
        case -1306:
          v2 = 89;
          goto LABEL_155;
        case -1305:
          v2 = 88;
          goto LABEL_155;
        case -1304:
          v2 = 87;
          goto LABEL_155;
        case -1303:
          v2 = 86;
          goto LABEL_155;
        case -1302:
          v2 = 85;
          goto LABEL_155;
        case -1301:
          v2 = 84;
          goto LABEL_155;
        case -1204:
          v2 = 76;
          goto LABEL_155;
        case -1203:
          v2 = 75;
          goto LABEL_155;
        case -1202:
          v2 = 74;
          goto LABEL_155;
        case -1201:
          v2 = 73;
          goto LABEL_155;
        case -1109:
          v2 = 72;
          goto LABEL_155;
        case -1108:
          v2 = 71;
          goto LABEL_155;
        case -1107:
          v2 = 70;
          goto LABEL_155;
        case -1106:
          v2 = 69;
          goto LABEL_155;
        case -1105:
          v2 = 68;
          goto LABEL_155;
        case -1104:
          v2 = 67;
          goto LABEL_155;
        case -1103:
          v2 = 66;
          goto LABEL_155;
        case -1102:
          v2 = 65;
          goto LABEL_155;
        case -1101:
          v2 = 64;
          goto LABEL_155;
        default:
          goto LABEL_157;
      }
    }
    switch(rawValue)
    {
      case -2120:
        v2 = 119;
        break;
      case -2119:
        v2 = 118;
        break;
      case -2118:
        v2 = 117;
        break;
      case -2117:
        v2 = 116;
        break;
      case -2116:
        v2 = 115;
        break;
      case -2115:
        v2 = 114;
        break;
      case -2114:
        v2 = 113;
        break;
      case -2113:
        v2 = 112;
        break;
      case -2112:
        v2 = 111;
        break;
      case -2111:
        v2 = 110;
        break;
      case -2110:
        v2 = 109;
        break;
      case -2109:
        v2 = 108;
        break;
      case -2108:
        v2 = 107;
        break;
      case -2107:
        v2 = 106;
        break;
      case -2106:
        v2 = 105;
        break;
      case -2105:
        v2 = 104;
        break;
      case -2104:
        v2 = 103;
        break;
      case -2103:
        v2 = 102;
        break;
      case -2102:
        v2 = 101;
        break;
      case -2101:
        v2 = 100;
        break;
      default:
        switch(rawValue)
        {
          case -3108:
            v2 = 127;
            goto LABEL_155;
          case -3107:
            v2 = 126;
            goto LABEL_155;
          case -3106:
            v2 = 125;
            goto LABEL_155;
          case -3105:
            v2 = 124;
            goto LABEL_155;
          case -3104:
            v2 = 123;
            goto LABEL_155;
          case -3103:
            v2 = 122;
            goto LABEL_155;
          case -3102:
            v2 = 121;
            goto LABEL_155;
          case -3101:
            v2 = 120;
            goto LABEL_155;
          default:
            if (rawValue != -131600)
              goto LABEL_157;
            v2 = 99;
            break;
        }
        break;
    }
  }
LABEL_155:
  v3 = v2;
LABEL_156:
  *v1 = v3;
  return (CoreODIEssentials::DIPErrorCode_optional)rawValue;
}

uint64_t DIPErrorCode.rawValue.getter()
{
  __int16 *v0;

  return qword_20A5BBF38[*v0];
}

BOOL sub_20A44F3F8(__int16 *a1, __int16 *a2)
{
  return qword_20A5BBF38[*a1] == qword_20A5BBF38[*a2];
}

uint64_t sub_20A44F41C()
{
  sub_20A5B929C();
  sub_20A5B92A8();
  return sub_20A5B92CC();
}

uint64_t sub_20A44F468()
{
  return sub_20A5B92A8();
}

uint64_t sub_20A44F49C()
{
  sub_20A5B929C();
  sub_20A5B92A8();
  return sub_20A5B92CC();
}

CoreODIEssentials::DIPErrorCode_optional sub_20A44F4E4(Swift::Int *a1)
{
  return DIPErrorCode.init(rawValue:)(*a1);
}

void sub_20A44F4EC(_QWORD *a1@<X8>)
{
  __int16 *v1;

  *a1 = qword_20A5BBF38[*v1];
}

CoreODIEssentials::DIPErrorPropertyKey_optional __swiftcall DIPErrorPropertyKey.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  CoreODIEssentials::DIPErrorPropertyKey_optional result;
  char v5;
  char v6;

  v2 = v1;
  v3 = sub_20A5B91F4();
  result.value = swift_bridgeObjectRelease();
  v5 = 0;
  v6 = 7;
  switch(v3)
  {
    case 0:
      goto LABEL_9;
    case 1:
      v5 = 1;
      goto LABEL_9;
    case 2:
      v5 = 2;
      goto LABEL_9;
    case 3:
      v5 = 3;
      goto LABEL_9;
    case 4:
      v5 = 4;
      goto LABEL_9;
    case 5:
      v5 = 5;
      goto LABEL_9;
    case 6:
      v5 = 6;
LABEL_9:
      v6 = v5;
      break;
    case 7:
      break;
    case 8:
      v6 = 8;
      break;
    case 9:
      v6 = 9;
      break;
    case 10:
      v6 = 10;
      break;
    case 11:
      v6 = 11;
      break;
    case 12:
      v6 = 12;
      break;
    case 13:
      v6 = 13;
      break;
    case 14:
      v6 = 14;
      break;
    case 15:
      v6 = 15;
      break;
    case 16:
      v6 = 16;
      break;
    case 17:
      v6 = 17;
      break;
    case 18:
      v6 = 18;
      break;
    case 19:
      v6 = 19;
      break;
    case 20:
      v6 = 20;
      break;
    case 21:
      v6 = 21;
      break;
    case 22:
      v6 = 22;
      break;
    case 23:
      v6 = 23;
      break;
    case 24:
      v6 = 24;
      break;
    default:
      v6 = 25;
      break;
  }
  *v2 = v6;
  return result;
}

uint64_t DIPErrorPropertyKey.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_20A44F67C + 4 * byte_20A5BB5D9[*v0]))(0x666B726F576F6E69, 0xED00004449776F6CLL);
}

uint64_t sub_20A44F67C()
{
  return 0x69766F72506F6E69;
}

uint64_t sub_20A44F6A0()
{
  return 0x6C666B726F577073;
}

uint64_t sub_20A44F6C8()
{
  return 0x6469766F72507073;
}

uint64_t sub_20A44F6E8()
{
  return 0x7475626972747461;
}

unint64_t sub_20A44F708()
{
  return 0xD000000000000012;
}

uint64_t sub_20A44F848()
{
  return 0x6761735574726563;
}

uint64_t sub_20A44F86C()
{
  return 0x6573616261746164;
}

uint64_t sub_20A44F890()
{
  return 0x74737973656C6966;
}

uint64_t sub_20A44F8B4()
{
  return 0x69796C7265646E75;
}

uint64_t sub_20A44F8D8()
{
  return 0x636E456567616D69;
}

uint64_t sub_20A44F8FC()
{
  return 1701273968;
}

uint64_t sub_20A44F90C()
{
  return 0x636E75614C6F6E69;
}

uint64_t sub_20A44F930()
{
  return 0x746E756F43797274;
}

uint64_t sub_20A44F948(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_20A4EA430(*a1, *a2);
}

uint64_t sub_20A44F954()
{
  sub_20A5B929C();
  DIPErrorPropertyKey.rawValue.getter();
  sub_20A5B8978();
  swift_bridgeObjectRelease();
  return sub_20A5B92CC();
}

uint64_t sub_20A44F9B8()
{
  DIPErrorPropertyKey.rawValue.getter();
  sub_20A5B8978();
  return swift_bridgeObjectRelease();
}

uint64_t sub_20A44FA08()
{
  sub_20A5B929C();
  DIPErrorPropertyKey.rawValue.getter();
  sub_20A5B8978();
  swift_bridgeObjectRelease();
  return sub_20A5B92CC();
}

CoreODIEssentials::DIPErrorPropertyKey_optional sub_20A44FA68(Swift::String *a1)
{
  return DIPErrorPropertyKey.init(rawValue:)(*a1);
}

uint64_t sub_20A44FA74@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = DIPErrorPropertyKey.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_20A44FA98()
{
  void *v0;
  void *v1;
  void *v2;
  _QWORD v3[6];

  v0 = (void *)objc_opt_self();
  v1 = (void *)sub_20A5B88F4();
  v3[4] = sub_20A44FB54;
  v3[5] = 0;
  v3[0] = MEMORY[0x24BDAC760];
  v3[1] = 1107296256;
  v3[2] = sub_20A44FC5C;
  v3[3] = &block_descriptor_0;
  v2 = _Block_copy(v3);
  objc_msgSend(v0, sel_setUserInfoValueProviderForDomain_provider_, v1, v2);
  _Block_release(v2);

}

uint64_t sub_20A44FB54@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  char v10;
  uint64_t v11;
  char v13;
  uint64_t result;
  uint64_t v15;

  if (sub_20A5B8900() == a2 && v8 == a3)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  v10 = sub_20A5B91AC();
  swift_bridgeObjectRelease();
  if ((v10 & 1) != 0)
  {
LABEL_13:
    result = sub_20A450464(a1);
    goto LABEL_14;
  }
  if (sub_20A5B8900() == a2 && v11 == a3)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = sub_20A5B91AC();
    result = swift_bridgeObjectRelease();
    if ((v13 & 1) == 0)
    {
      *(_OWORD *)a4 = 0u;
      *(_OWORD *)(a4 + 16) = 0u;
      return result;
    }
  }
  result = sub_20A450BEC(a1);
LABEL_14:
  *(_QWORD *)(a4 + 24) = MEMORY[0x24BEE0D00];
  *(_QWORD *)a4 = result;
  *(_QWORD *)(a4 + 8) = v15;
  return result;
}

id sub_20A44FC5C(uint64_t a1, void *a2)
{
  void (*v3)(_QWORD *__return_ptr);
  id v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  _QWORD v12[3];
  uint64_t v13;

  v3 = *(void (**)(_QWORD *__return_ptr))(a1 + 32);
  sub_20A5B8900();
  swift_retain();
  v4 = a2;
  v3(v12);
  swift_release();

  swift_bridgeObjectRelease();
  v5 = v13;
  if (!v13)
    return 0;
  v6 = __swift_project_boxed_opaque_existential_1(v12, v13);
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v6, v6);
  v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v9);
  v10 = (void *)sub_20A5B91A0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v10;
}

_OWORD *sub_20A44FD68(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_20A44FD78(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_20A44FDB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9CC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A44FDFC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_253EB52E0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_20A44FE3C()
{
  unint64_t result;

  result = qword_253EB4870;
  if (!qword_253EB4870)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_253EB4870);
  }
  return result;
}

unint64_t sub_20A44FE7C()
{
  unint64_t result;

  result = qword_2545F9CD0;
  if (!qword_2545F9CD0)
  {
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for DIPErrorCode, &type metadata for DIPErrorCode);
    atomic_store(result, (unint64_t *)&qword_2545F9CD0);
  }
  return result;
}

unint64_t sub_20A44FEC4()
{
  unint64_t result;

  result = qword_253EB4FA8;
  if (!qword_253EB4FA8)
  {
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for DIPErrorPropertyKey, &type metadata for DIPErrorPropertyKey);
    atomic_store(result, (unint64_t *)&qword_253EB4FA8);
  }
  return result;
}

_WORD *__swift_memcpy2_2(_WORD *result, _WORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for DIPErrorCode(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE33)
    goto LABEL_17;
  if (a2 + 461 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 461 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 461;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 461;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 461;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x1CE;
  v8 = v6 - 462;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DIPErrorCode(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  unsigned int v4;
  uint64_t v5;

  if (a3 + 461 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 461 < 0xFF0000)
    v4 = 1;
  else
    v4 = v3;
  if (a3 >= 0xFE33)
    v5 = v4;
  else
    v5 = 0;
  if (a2 <= 0xFE32)
    return ((uint64_t (*)(void))((char *)&loc_20A44FFF4 + 4 * byte_20A5BB5F7[v5]))();
  *a1 = a2 + 461;
  return ((uint64_t (*)(void))((char *)sub_20A45002C + 4 * byte_20A5BB5F2[v5]))();
}

uint64_t sub_20A45002C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_20A450034(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x20A45003CLL);
  return result;
}

uint64_t sub_20A450048(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x20A450050);
  *(_WORD *)result = a2 + 461;
  return result;
}

uint64_t sub_20A450054(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_20A45005C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_20A450068(unsigned __int16 *a1)
{
  return *a1;
}

_WORD *sub_20A450070(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for DIPErrorCode()
{
  return &type metadata for DIPErrorCode;
}

uint64_t getEnumTagSinglePayload for DIPErrorPropertyKey(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xE8)
    goto LABEL_17;
  if (a2 + 24 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 24) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 24;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 24;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 24;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x19;
  v8 = v6 - 25;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DIPErrorPropertyKey(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 24 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 24) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE7)
    return ((uint64_t (*)(void))((char *)&loc_20A450164 + 4 * byte_20A5BB601[v4]))();
  *a1 = a2 + 24;
  return ((uint64_t (*)(void))((char *)sub_20A450198 + 4 * byte_20A5BB5FC[v4]))();
}

uint64_t sub_20A450198(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A4501A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A4501A8);
  return result;
}

uint64_t sub_20A4501B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A4501BCLL);
  *(_BYTE *)result = a2 + 24;
  return result;
}

uint64_t sub_20A4501C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A4501C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DIPErrorPropertyKey()
{
  return &type metadata for DIPErrorPropertyKey;
}

uint64_t destroy for DIPInvocation()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for DIPInvocation(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for DIPInvocation(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

_QWORD *assignWithTake for DIPInvocation(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  return a1;
}

uint64_t getEnumTagSinglePayload for DIPInvocation(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DIPInvocation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DIPInvocation()
{
  return &type metadata for DIPInvocation;
}

unint64_t sub_20A450420()
{
  unint64_t result;

  result = qword_253EB50A0;
  if (!qword_253EB50A0)
  {
    result = MEMORY[0x20BD26CEC](MEMORY[0x24BDCFB50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_253EB50A0);
  }
  return result;
}

uint64_t sub_20A450464(void *a1)
{
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t result;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  int64_t v33;
  _OWORD v34[2];
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  __int128 v39;

  if (!a1)
    return 0x3E6C696E3CLL;
  v2 = a1;
  v3 = (void *)sub_20A5B8414();
  v4 = objc_msgSend(v3, sel_userInfo);
  v5 = sub_20A5B8888();

  if (!*(_QWORD *)(v5 + 16) || (v6 = sub_20A47094C(0x636F766E49504944, 0xEE00736E6F697461), (v7 & 1) == 0))
  {
    v36 = 0u;
    v37 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  sub_20A44FD78(*(_QWORD *)(v5 + 56) + 32 * v6, (uint64_t)&v36);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v37 + 1))
  {
LABEL_14:
    sub_20A44FDFC((uint64_t)&v36);
    goto LABEL_15;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB47E8);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v8 = *(_QWORD *)(*(_QWORD *)&v34[0] + 16);
    if (v8)
    {
      v9 = v8 + 1;
      v10 = *(_QWORD *)&v34[0] + 56 * v8;
      while (1)
      {
        v11 = *(_QWORD *)(v10 - 16);
        v12 = HIBYTE(v11) & 0xF;
        if ((v11 & 0x2000000000000000) == 0)
          v12 = *(_QWORD *)(v10 - 24) & 0xFFFFFFFFFFFFLL;
        if (v12)
          break;
        --v9;
        v10 -= 56;
        if (v9 <= 1)
          goto LABEL_12;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v36 = 40;
      *((_QWORD *)&v36 + 1) = 0xE100000000000000;
      swift_bridgeObjectRetain();
      sub_20A5B899C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      sub_20A5B899C();
    }
    else
    {
LABEL_12:
      swift_bridgeObjectRelease();
    }
  }
LABEL_15:
  DIPErrorCode.init(rawValue:)((Swift::Int)objc_msgSend(v3, sel_code));
  if ((unsigned __int16)v36 != 462)
    sub_20A5B8960();
  *(_QWORD *)&v36 = 0;
  *((_QWORD *)&v36 + 1) = 0xE000000000000000;
  sub_20A5B8E94();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v36 = 0x20726F727245;
  *((_QWORD *)&v36 + 1) = 0xE600000000000000;
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  v14 = objc_msgSend(v3, sel_domain);
  sub_20A5B8900();

  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  *(_QWORD *)&v34[0] = objc_msgSend(v3, sel_code);
  sub_20A5B9170();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  v13 = v36;
  v39 = v36;
  v15 = objc_msgSend(v3, sel_userInfo);
  v16 = sub_20A5B8888();

  if (*(_QWORD *)(v16 + 16) && (v17 = sub_20A47094C(0x65706F7250504944, 0xED00007365697472), (v18 & 1) != 0))
  {
    sub_20A44FD78(*(_QWORD *)(v16 + 56) + 32 * v17, (uint64_t)&v36);
  }
  else
  {
    v36 = 0u;
    v37 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v37 + 1))
  {

    sub_20A44FDFC((uint64_t)&v36);
    return v13;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9CC8);
  if ((swift_dynamicCast() & 1) == 0)
  {

LABEL_56:
    return v13;
  }
  v19 = *(_QWORD *)&v34[0];
  if (!*(_QWORD *)(*(_QWORD *)&v34[0] + 16))
  {

    swift_bridgeObjectRelease();
    goto LABEL_56;
  }
  result = sub_20A5B899C();
  v21 = 0;
  v22 = *(_QWORD *)(*(_QWORD *)&v34[0] + 64);
  v32 = *(_QWORD *)&v34[0] + 64;
  v23 = 1 << *(_BYTE *)(*(_QWORD *)&v34[0] + 32);
  v24 = -1;
  if (v23 < 64)
    v24 = ~(-1 << v23);
  v25 = v24 & v22;
  v33 = (unint64_t)(v23 + 63) >> 6;
  if ((v24 & v22) == 0)
    goto LABEL_33;
LABEL_31:
  v26 = __clz(__rbit64(v25));
  v25 &= v25 - 1;
  v27 = v26 | (v21 << 6);
  while (2)
  {
    v28 = *(_QWORD *)(v19 + 56);
    LOBYTE(v34[0]) = *(_BYTE *)(*(_QWORD *)(v19 + 48) + v27);
    sub_20A44FD78(v28 + 32 * v27, (uint64_t)v34 + 8);
    while (1)
    {
      sub_20A44FDB4((uint64_t)v34, (uint64_t)&v36);
      if (!v38)
      {
        swift_bridgeObjectRelease();
        swift_release();
        sub_20A5B899C();

        return v39;
      }
      sub_20A44FD68((__int128 *)((char *)&v36 + 8), v34);
      sub_20A5B8F9C();
      sub_20A5B899C();
      sub_20A5B8F9C();
      swift_bridgeObjectRetain();
      sub_20A5B899C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_20A5B899C();
      swift_bridgeObjectRelease();
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
      if (v25)
        goto LABEL_31;
LABEL_33:
      v29 = v21 + 1;
      if (__OFADD__(v21, 1))
      {
        __break(1u);
        goto LABEL_60;
      }
      if (v29 < v33)
      {
        v30 = *(_QWORD *)(v32 + 8 * v29);
        if (v30)
          goto LABEL_36;
        v31 = v21 + 2;
        ++v21;
        if (v29 + 1 < v33)
        {
          v30 = *(_QWORD *)(v32 + 8 * v31);
          if (v30)
            goto LABEL_39;
          v21 = v29 + 1;
          if (v29 + 2 < v33)
          {
            v30 = *(_QWORD *)(v32 + 8 * (v29 + 2));
            if (v30)
            {
              v29 += 2;
              goto LABEL_36;
            }
            v31 = v29 + 3;
            v21 = v29 + 2;
            if (v29 + 3 < v33)
              break;
          }
        }
      }
LABEL_50:
      v25 = 0;
      v35 = 0;
      memset(v34, 0, sizeof(v34));
    }
    v30 = *(_QWORD *)(v32 + 8 * v31);
    if (v30)
    {
LABEL_39:
      v29 = v31;
LABEL_36:
      v25 = (v30 - 1) & v30;
      v27 = __clz(__rbit64(v30)) + (v29 << 6);
      v21 = v29;
      continue;
    }
    break;
  }
  while (1)
  {
    v29 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v29 >= v33)
    {
      v21 = v33 - 1;
      goto LABEL_50;
    }
    v30 = *(_QWORD *)(v32 + 8 * v29);
    ++v31;
    if (v30)
      goto LABEL_36;
  }
LABEL_60:
  __break(1u);
  return result;
}

uint64_t sub_20A450BEC(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t result;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  void *v43;
  int64_t v44;
  void *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  int64_t v52;
  char v53;
  uint64_t v54;
  unint64_t v55;
  _OWORD v56[2];
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  __int128 v61;

  v2 = sub_20A5B84D4();
  v50 = *(_QWORD *)(v2 - 8);
  v51 = v2;
  MEMORY[0x24BDAC7A8](v2, v3);
  v49 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
    return 0x3E6C696E3CLL;
  v5 = a1;
  v6 = (void *)sub_20A5B8414();
  DIPErrorCode.init(rawValue:)((Swift::Int)objc_msgSend(v6, sel_code));
  if ((unsigned __int16)v58 != 462)
    sub_20A5B8960();
  v8 = objc_msgSend(v6, sel_userInfo);
  v9 = sub_20A5B8888();

  *(_QWORD *)&v58 = 0;
  *((_QWORD *)&v58 + 1) = 0xE000000000000000;
  sub_20A5B8E94();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v58 = 0x6F4420726F727245;
  *((_QWORD *)&v58 + 1) = 0xEF203D206E69616DLL;
  v10 = objc_msgSend(v6, sel_domain);
  sub_20A5B8900();

  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  *(_QWORD *)&v56[0] = objc_msgSend(v6, sel_code);
  sub_20A5B9170();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  v61 = v58;
  if (*(_QWORD *)(v9 + 16))
  {
    v11 = sub_20A47094C(0x65706F7250504944, 0xED00007365697472);
    if ((v12 & 1) != 0)
    {
      v47 = v9;
      sub_20A44FD78(*(_QWORD *)(v9 + 56) + 32 * v11, (uint64_t)&v58);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9CC8);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v45 = v6;
        v46 = a1;
        v13 = *(_QWORD *)&v56[0];
        result = sub_20A5B899C();
        v14 = 0;
        v15 = *(_QWORD *)(v13 + 64);
        v48 = v13 + 64;
        v16 = 1 << *(_BYTE *)(v13 + 32);
        v17 = -1;
        if (v16 < 64)
          v17 = ~(-1 << v16);
        v18 = v17 & v15;
        v52 = (unint64_t)(v16 + 63) >> 6;
        v44 = v52 - 1;
        if ((v17 & v15) == 0)
          goto LABEL_16;
LABEL_14:
        v20 = __clz(__rbit64(v18));
        v18 &= v18 - 1;
        v21 = v20 | (v14 << 6);
LABEL_15:
        v22 = *(_QWORD *)(v13 + 56);
        LOBYTE(v56[0]) = *(_BYTE *)(*(_QWORD *)(v13 + 48) + v21);
        sub_20A44FD78(v22 + 32 * v21, (uint64_t)v56 + 8);
        while (1)
        {
          sub_20A44FDB4((uint64_t)v56, (uint64_t)&v58);
          if (!v60)
            break;
          v19 = v58;
          sub_20A44FD68((__int128 *)((char *)&v58 + 8), v56);
          sub_20A5B899C();
          v54 = 0;
          v55 = 0xE000000000000000;
          v53 = v19;
          sub_20A5B8F9C();
          sub_20A5B899C();
          sub_20A5B8F9C();
          v54 = 539822345;
          v55 = 0xE400000000000000;
          sub_20A5B899C();
          swift_bridgeObjectRelease();
          sub_20A5B899C();
          swift_bridgeObjectRelease();
          result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
          if (v18)
            goto LABEL_14;
LABEL_16:
          v23 = v14 + 1;
          if (__OFADD__(v14, 1))
            goto LABEL_64;
          if (v23 < v52)
          {
            v24 = *(_QWORD *)(v48 + 8 * v23);
            if (v24)
              goto LABEL_19;
            v25 = v14 + 2;
            ++v14;
            if (v23 + 1 < v52)
            {
              v24 = *(_QWORD *)(v48 + 8 * v25);
              if (v24)
                goto LABEL_22;
              v14 = v23 + 1;
              if (v23 + 2 < v52)
              {
                v24 = *(_QWORD *)(v48 + 8 * (v23 + 2));
                if (v24)
                {
                  v23 += 2;
                  goto LABEL_19;
                }
                v25 = v23 + 3;
                v14 = v23 + 2;
                if (v23 + 3 < v52)
                {
                  v24 = *(_QWORD *)(v48 + 8 * v25);
                  if (!v24)
                  {
                    while (1)
                    {
                      v23 = v25 + 1;
                      if (__OFADD__(v25, 1))
                        goto LABEL_65;
                      if (v23 >= v52)
                      {
                        v14 = v44;
                        goto LABEL_33;
                      }
                      v24 = *(_QWORD *)(v48 + 8 * v23);
                      ++v25;
                      if (v24)
                        goto LABEL_19;
                    }
                  }
LABEL_22:
                  v23 = v25;
LABEL_19:
                  v18 = (v24 - 1) & v24;
                  v21 = __clz(__rbit64(v24)) + (v23 << 6);
                  v14 = v23;
                  goto LABEL_15;
                }
              }
            }
          }
LABEL_33:
          v18 = 0;
          v57 = 0;
          memset(v56, 0, sizeof(v56));
        }
        swift_release();
        a1 = v46;
        v6 = v45;
      }
      v9 = v47;
    }
  }
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_53;
  v26 = sub_20A47094C(0x636F766E49504944, 0xEE00736E6F697461);
  if ((v27 & 1) == 0)
    goto LABEL_53;
  sub_20A44FD78(*(_QWORD *)(v9 + 56) + 32 * v26, (uint64_t)&v58);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB47E8);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_53;
  v28 = *(_QWORD *)&v56[0];
  if (!*(_QWORD *)(*(_QWORD *)&v56[0] + 16) || (result = sub_20A5B899C(), (v29 = *(_QWORD *)(v28 + 16)) == 0))
  {
    swift_bridgeObjectRelease();
LABEL_53:
    v39 = sub_20A5B8900();
    if (*(_QWORD *)(v9 + 16) && (v41 = sub_20A47094C(v39, v40), (v42 & 1) != 0))
    {
      sub_20A44FD78(*(_QWORD *)(v9 + 56) + 32 * v41, (uint64_t)&v58);
    }
    else
    {
      v58 = 0u;
      v59 = 0u;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*((_QWORD *)&v59 + 1))
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52D0);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v43 = *(void **)&v56[0];
        sub_20A5B899C();
        *(_QWORD *)&v58 = 0;
        *((_QWORD *)&v58 + 1) = 0xE000000000000000;
        *(_QWORD *)&v56[0] = v43;
        sub_20A5B8F9C();
        *(_QWORD *)&v58 = 0x202D09090ALL;
        *((_QWORD *)&v58 + 1) = 0xE500000000000000;
        sub_20A5B899C();
        swift_bridgeObjectRelease();
        sub_20A5B899C();

        swift_bridgeObjectRelease();
      }
      else
      {

      }
    }
    else
    {

      sub_20A44FDFC((uint64_t)&v58);
    }
    return v61;
  }
  v47 = v9;
  v45 = v6;
  v46 = a1;
  v30 = v29 + 1;
  v31 = v28 + 56 * v29;
  v48 = v28;
  while (v30 - 2 < *(_QWORD *)(v28 + 16))
  {
    v32 = *(_QWORD *)(v31 - 16);
    v52 = *(_QWORD *)(v31 - 24);
    v33 = *(_QWORD *)(v31 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_20A5B899C();
    *(_QWORD *)&v58 = 0;
    *((_QWORD *)&v58 + 1) = 0xE000000000000000;
    v34 = v49;
    sub_20A5B845C();
    v35 = sub_20A5B8468();
    v37 = v36;
    (*(void (**)(char *, uint64_t))(v50 + 8))(v34, v51);
    swift_bridgeObjectRelease();
    *(_QWORD *)&v58 = v35;
    *((_QWORD *)&v58 + 1) = v37;
    sub_20A5B899C();
    swift_bridgeObjectRetain();
    sub_20A5B899C();
    swift_bridgeObjectRelease();
    sub_20A5B899C();
    *(_QWORD *)&v56[0] = v33;
    v38 = v52;
    sub_20A5B9170();
    sub_20A5B899C();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v58 = 539822345;
    *((_QWORD *)&v58 + 1) = 0xE400000000000000;
    sub_20A5B899C();
    swift_bridgeObjectRelease();
    sub_20A5B899C();
    swift_bridgeObjectRelease();
    if (!v38 && v32 == 0xE000000000000000 || (sub_20A5B91AC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      *(_QWORD *)&v58 = 9;
      *((_QWORD *)&v58 + 1) = 0xE100000000000000;
      swift_bridgeObjectRetain();
      sub_20A5B899C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      sub_20A5B899C();
    }
    result = swift_bridgeObjectRelease();
    v28 = v48;
    --v30;
    v31 -= 56;
    if (v30 <= 1)
    {
      swift_bridgeObjectRelease();
      a1 = v46;
      v6 = v45;
      v9 = v47;
      goto LABEL_53;
    }
  }
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
  return result;
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t sub_20A451608()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for DIPODNHelper();
  v0 = swift_allocObject();
  result = sub_20A451680();
  qword_2545F9CD8 = v0;
  return result;
}

uint64_t static DIPODNHelper.sharedInstance.getter()
{
  if (qword_2545F9958 != -1)
    swift_once();
  return swift_retain();
}

uint64_t sub_20A451680()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB5180);
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_defaultActor_initialize();
  type metadata accessor for AsyncWorkQueue();
  v5 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_BYTE *)(v5 + 112) = 1;
  v6 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v5 + 120) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + 112) = v5;
  *(_OWORD *)(v0 + 120) = 0u;
  *(_OWORD *)(v0 + 136) = 0u;
  *(_OWORD *)(v0 + 152) = 0u;
  *(_QWORD *)(v0 + 168) = 45;
  *(_QWORD *)(v0 + 176) = 0xE100000000000000;
  *(_OWORD *)(v0 + 184) = xmmword_20A5BCDB0;
  *(_QWORD *)(v0 + 200) = v6;
  v7 = sub_20A5B8B64();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v4, 1, 1, v7);
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = v0;
  swift_retain();
  sub_20A4C69D8((uint64_t)v4, (uint64_t)&unk_2545F9E08, (uint64_t)v8);
  swift_release();
  return v0;
}

uint64_t sub_20A4517AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch();
}

uint64_t sub_20A4517C4()
{
  uint64_t v0;

  sub_20A4517F4();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4517F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB5180);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v0 + 176);
  v13 = *(_QWORD *)(v0 + 168);
  v14 = v6;
  v12 = 14;
  swift_bridgeObjectRetain();
  CoreODILogger.info(_:category:)(0xD000000000000023, 0x800000020A5DC290, &v12);
  swift_bridgeObjectRelease();
  v7 = sub_20A5B8B64();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 1, 1, v7);
  v8 = sub_20A457794();
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = v1;
  v9[3] = v8;
  v9[4] = v1;
  swift_retain_n();
  sub_20A4C69D8((uint64_t)v5, (uint64_t)&unk_2545F9DE0, (uint64_t)v9);
  return swift_release();
}

uint64_t sub_20A45190C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 40) = a4;
  return swift_task_switch();
}

uint64_t sub_20A451924()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  type metadata accessor for DeviceInformation();
  v1 = swift_allocObject();
  *(_QWORD *)(v0 + 48) = v1;
  swift_defaultActor_initialize();
  *(_QWORD *)(v1 + 144) = 0;
  *(_OWORD *)(v1 + 112) = 0u;
  *(_OWORD *)(v1 + 128) = 0u;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v2;
  *v2 = v0;
  v2[1] = sub_20A451994;
  return sub_20A4D2938();
}

uint64_t sub_20A451994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v10;

  v10 = *(_QWORD **)v5;
  *(_QWORD *)(*(_QWORD *)v5 + 64) = v4;
  swift_task_dealloc();
  if (!v4)
  {
    v10[9] = a4;
    v10[10] = a3;
    v10[11] = a2;
    v10[12] = a1;
  }
  return swift_task_switch();
}

uint64_t sub_20A451A20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  void *v4;
  void *v5;
  char v7;

  v2 = *(_QWORD *)(v0 + 72);
  v1 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD **)(v0 + 40);
  v4 = (void *)v3[17];
  v5 = (void *)v3[18];
  *(int8x16_t *)(v3 + 17) = vextq_s8(*(int8x16_t *)(v0 + 88), *(int8x16_t *)(v0 + 88), 8uLL);
  v3[19] = v1;
  v3[20] = v2;
  sub_20A459254(v4, v5);
  v7 = 14;
  swift_bridgeObjectRetain();
  CoreODILogger.info(_:category:)(0xD00000000000002ELL, 0x800000020A5DC2E0, &v7);
  swift_release();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A451AC4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v9[2];
  uint64_t v10;
  unint64_t v11;

  v1 = *(void **)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v2 + 176);
  v9[0] = *(_QWORD *)(v2 + 168);
  v9[1] = v3;
  v10 = 0;
  v11 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_20A5B8E94();
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0xE000000000000000;
  sub_20A5B899C();
  *(_QWORD *)(v0 + 32) = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52D0);
  sub_20A5B8F9C();
  v4 = *(_QWORD *)(v0 + 16);
  v5 = *(_QWORD *)(v0 + 24);
  LOBYTE(v10) = 5;
  CoreODILogger.error(_:category:)(v4, v5, &v10);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(v0 + 40);
  v7 = *(_QWORD *)(v6 + 176);
  v10 = *(_QWORD *)(v6 + 168);
  v11 = v7;
  LOBYTE(v9[0]) = 14;
  swift_bridgeObjectRetain();
  CoreODILogger.info(_:category:)(0xD00000000000002ELL, 0x800000020A5DC2E0, v9);
  swift_release();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A451C14(uint64_t a1, void *a2, void *a3, void *a4, unsigned int a5, void *a6)
{
  void *v9;
  void (*v10)(void *, unint64_t, void *, unint64_t, void *, unint64_t, _QWORD, void *);
  id v11;
  unint64_t v12;
  unint64_t v13;
  id v14;
  unint64_t v15;
  unint64_t v16;
  id v17;
  unint64_t v18;
  unint64_t v19;
  id v20;

  v9 = a2;
  v10 = *(void (**)(void *, unint64_t, void *, unint64_t, void *, unint64_t, _QWORD, void *))(a1 + 32);
  if (a2)
  {
    swift_retain();
    v11 = v9;
    v9 = (void *)sub_20A5B8564();
    v13 = v12;

    if (a3)
      goto LABEL_3;
LABEL_6:
    v16 = 0xF000000000000000;
    if (a4)
      goto LABEL_4;
LABEL_7:
    v19 = 0xF000000000000000;
    goto LABEL_8;
  }
  swift_retain();
  v13 = 0xF000000000000000;
  if (!a3)
    goto LABEL_6;
LABEL_3:
  v14 = a3;
  a3 = (void *)sub_20A5B8564();
  v16 = v15;

  if (!a4)
    goto LABEL_7;
LABEL_4:
  v17 = a4;
  a4 = (void *)sub_20A5B8564();
  v19 = v18;

LABEL_8:
  v20 = a6;
  v10(v9, v13, a3, v16, a4, v19, a5, a6);

  sub_20A44CFC4((uint64_t)a4, v19);
  sub_20A44CFC4((uint64_t)a3, v16);
  sub_20A44CFC4((uint64_t)v9, v13);
  return swift_release();
}

uint64_t sub_20A451D48()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = v0;
  return swift_task_switch();
}

uint64_t sub_20A451D60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 + 184);
  *(_QWORD *)(v0 + 40) = v2;
  v3 = *(_QWORD *)(v1 + 192);
  *(_QWORD *)(v0 + 48) = v3;
  if (v3 >> 60 == 15)
  {
    sub_20A457794();
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 56) = v4;
    *v4 = v0;
    v4[1] = sub_20A451E48;
    return sub_20A5B9200();
  }
  else
  {
    sub_20A459690(v2, v3);
    return (*(uint64_t (**)(uint64_t, unint64_t))(v0 + 8))(v2, v3);
  }
}

uint64_t sub_20A451E48()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A451EAC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = *(_QWORD *)(v0 + 24);
  v1 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v1 + 184);
  v5 = *(_QWORD *)(v1 + 192);
  *(_QWORD *)(v1 + 184) = v3;
  *(_QWORD *)(v1 + 192) = v2;
  sub_20A45964C(v3, v2);
  sub_20A44CFC4(v4, v5);
  sub_20A459690(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(uint64_t, unint64_t))(v0 + 8))(v3, v2);
}

uint64_t sub_20A451F18()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_20A451F24(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  unint64_t *v14;
  void (*v15)(char *, uint64_t, uint64_t);
  unint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  id v25;
  void *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t aBlock;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, void *, void *);
  void *v34;
  uint64_t (*v35)(uint64_t, unint64_t, void *);
  _QWORD *v36;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9DD0);
  v5 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x24BDAC7A8](v4, v6);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v10);
  v12 = (char *)&v30 - v11;
  v13 = a2[24];
  if (v13 >> 60 == 15)
  {
    v14 = a2 + 25;
    swift_beginAccess();
    v15 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    if (*(_QWORD *)(a2[25] + 16))
    {
      v15(v9, a1, v4);
      swift_beginAccess();
      v16 = *v14;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v14 = v16;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v16 = sub_20A46FB74(0, *(_QWORD *)(v16 + 16) + 1, 1, v16);
        *v14 = v16;
      }
      v19 = *(_QWORD *)(v16 + 16);
      v18 = *(_QWORD *)(v16 + 24);
      if (v19 >= v18 >> 1)
      {
        v16 = sub_20A46FB74(v18 > 1, v19 + 1, 1, v16);
        *v14 = v16;
      }
      *(_QWORD *)(v16 + 16) = v19 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v16+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v19, v9, v4);
      swift_endAccess();
    }
    else
    {
      v15(v12, a1, v4);
      swift_beginAccess();
      v20 = *v14;
      v21 = swift_isUniquelyReferenced_nonNull_native();
      *v14 = v20;
      if ((v21 & 1) == 0)
      {
        v20 = sub_20A46FB74(0, *(_QWORD *)(v20 + 16) + 1, 1, v20);
        *v14 = v20;
      }
      v22 = *(_QWORD *)(v20 + 16);
      v23 = *(_QWORD *)(v20 + 24);
      v24 = v22 + 1;
      if (v22 >= v23 >> 1)
      {
        v27 = v20;
        v28 = *(_QWORD *)(v20 + 16);
        v29 = sub_20A46FB74(v23 > 1, v22 + 1, 1, v27);
        v22 = v28;
        v20 = v29;
        *v14 = v29;
      }
      *(_QWORD *)(v20 + 16) = v24;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v20+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v22, v12, v4);
      swift_endAccess();
      v25 = objc_msgSend(objc_allocWithZone((Class)OZRXp7MLSzffIeLD), sel_init);
      v35 = sub_20A459B54;
      v36 = a2;
      aBlock = MEMORY[0x24BDAC760];
      v32 = 1107296256;
      v33 = sub_20A452400;
      v34 = &block_descriptor_52;
      v26 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      objc_msgSend(v25, sel_vffg4lwI2HftPvpO_, v26);
      _Block_release(v26);

    }
  }
  else
  {
    aBlock = a2[23];
    v32 = v13;
    sub_20A45964C(aBlock, v13);
    sub_20A5B8B10();
  }
}

uint64_t sub_20A45223C(uint64_t a1, unint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void (*v16)(char *, unint64_t, uint64_t);
  id v17;
  uint64_t v18;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[2];

  v22 = a1;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9DD0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = *(_QWORD *)(a4 + 200);
  v13 = *(_QWORD *)(result + 16);
  if (v13)
  {
    v14 = result + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v15 = *(_QWORD *)(v8 + 72);
    v16 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
    v19[1] = result;
    swift_bridgeObjectRetain();
    v20 = 0x800000020A5DBCF0;
    v21 = 0x800000020A5DC250;
    while (1)
    {
      v16(v11, v14, v7);
      if (a3)
      {
        v23[0] = a3;
        v17 = a3;
      }
      else
      {
        if (a2 >> 60 != 15)
        {
          v23[0] = v22;
          v23[1] = a2;
          sub_20A45964C(v22, a2);
          sub_20A5B8B10();
          goto LABEL_5;
        }
        LOBYTE(v23[0]) = -94;
        ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xE000000000000000, 0, (unsigned __int8 *)v23, 0, 0, 0xD000000000000052, v20, 0xD000000000000013, v21, 146);
        v23[0] = v18;
      }
      sub_20A5B8B04();
LABEL_5:
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
      v14 += v15;
      if (!--v13)
        return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_20A452400(uint64_t a1, void *a2, void *a3)
{
  void *v4;
  void (*v5)(void *, unint64_t, void *);
  id v6;
  unint64_t v7;
  unint64_t v8;
  id v9;

  v4 = a2;
  v5 = *(void (**)(void *, unint64_t, void *))(a1 + 32);
  if (a2)
  {
    swift_retain();
    v6 = v4;
    v4 = (void *)sub_20A5B8564();
    v8 = v7;

  }
  else
  {
    swift_retain();
    v8 = 0xF000000000000000;
  }
  v9 = a3;
  v5(v4, v8, a3);

  sub_20A44CFC4((uint64_t)v4, v8);
  return swift_release();
}

uint64_t sub_20A452494(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_20A4524AC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  void **v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  void **v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;

  v1 = v0[2];
  v2 = *(_QWORD *)(v1 + 16);
  v3 = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v20 = MEMORY[0x24BEE4AF8];
    sub_20A5B8F24();
    v4 = (void **)(v1 + 32);
    v5 = v2;
    do
    {
      v6 = *v4;
      v4 += 2;
      v7 = v6;
      sub_20A5B8F0C();
      sub_20A5B8F30();
      sub_20A5B8F3C();
      sub_20A5B8F18();
      --v5;
    }
    while (v5);
    v8 = v20;
    sub_20A5B8F24();
    v9 = (void **)(v1 + 40);
    do
    {
      v12 = *v9;
      v9 += 2;
      v10 = v12;
      if (!v12)
      {
        objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
        v10 = 0;
      }
      v11 = v10;
      sub_20A5B8F0C();
      sub_20A5B8F30();
      sub_20A5B8F3C();
      sub_20A5B8F18();
      --v2;
    }
    while (v2);
  }
  else
  {
    v8 = MEMORY[0x24BEE4AF8];
  }
  v0[4] = v8;
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    v19 = sub_20A5B8FC0();
    swift_bridgeObjectRelease_n();
    v3 = v19;
  }
  else
  {
    v13 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    sub_20A5B91D0();
    if (swift_dynamicCastMetatype() || (v17 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10)) == 0)
    {
LABEL_13:
      swift_bridgeObjectRelease();
    }
    else
    {
      v18 = (_QWORD *)(v13 + 32);
      while (*v18)
      {
        ++v18;
        if (!--v17)
          goto LABEL_13;
      }
      swift_bridgeObjectRelease();
      v3 = v13 | 1;
    }
  }
  v0[5] = v3;
  sub_20A457794();
  v14 = swift_task_alloc();
  v0[6] = v14;
  *(_QWORD *)(v14 + 16) = v8;
  *(_QWORD *)(v14 + 24) = v3;
  v15 = (_QWORD *)swift_task_alloc();
  v0[7] = v15;
  *v15 = v0;
  v15[1] = sub_20A452728;
  return sub_20A5B9200();
}

uint64_t sub_20A452728()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A45279C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4527D8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_20A452820(uint64_t a1, uint64_t a2)
{
  __asm { BR              X9 }
}

uint64_t sub_20A452878(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v4 = BYTE6(v22);
  if (BYTE6(v22))
  {
    *(_QWORD *)(v3 - 104) = v2;
    v5 = BYTE6(v22);
    sub_20A457724(0, BYTE6(v22), 0);
    v2 = *(_QWORD *)(v3 - 104);
    if ((_DWORD)v1)
    {
      if ((_DWORD)v1 == 1)
        v6 = (int)a1;
      else
        v6 = *(_QWORD *)(a1 + 16);
    }
    else
    {
      v6 = 0;
    }
    *(_QWORD *)(v3 - 136) = v22 & 0x3FFFFFFFFFFFFFFFLL;
    *(_QWORD *)(v3 - 128) = v1;
    while (v5)
    {
      if ((_DWORD)v1)
      {
        if ((_DWORD)v1 == 1)
        {
          if (v6 < (int)a1 || v6 >= a1 >> 32)
            goto LABEL_29;
          v7 = sub_20A5B833C();
          if (!v7)
          {
            __break(1u);
LABEL_36:
            __break(1u);
          }
          v8 = v7;
          v9 = sub_20A5B8360();
          v10 = v6 - v9;
          if (__OFSUB__(v6, v9))
            goto LABEL_32;
        }
        else
        {
          if (v6 < *(_QWORD *)(a1 + 16))
            goto LABEL_31;
          if (v6 >= *(_QWORD *)(a1 + 24))
            goto LABEL_33;
          v12 = sub_20A5B833C();
          if (!v12)
            goto LABEL_36;
          v8 = v12;
          v13 = sub_20A5B8360();
          v10 = v6 - v13;
          if (__OFSUB__(v6, v13))
            goto LABEL_34;
        }
        v11 = *(_BYTE *)(v8 + v10);
      }
      else
      {
        if (v6 >= BYTE6(v22))
          goto LABEL_30;
        *(_QWORD *)(v3 - 118) = a1;
        *(_WORD *)(v3 - 110) = v22;
        *(_BYTE *)(v3 - 108) = BYTE2(v22);
        *(_BYTE *)(v3 - 107) = BYTE3(v22);
        *(_BYTE *)(v3 - 106) = BYTE4(v22);
        *(_BYTE *)(v3 - 105) = BYTE5(v22);
        v11 = *(_BYTE *)(v3 - 118 + v6);
      }
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52C0);
      v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_20A5BA9A0;
      *(_QWORD *)(v14 + 56) = MEMORY[0x24BEE4260];
      *(_QWORD *)(v14 + 64) = MEMORY[0x24BEE42B0];
      *(_BYTE *)(v14 + 32) = v11;
      v15 = sub_20A5B8930();
      v17 = v16;
      *(_QWORD *)(v3 - 104) = v2;
      v19 = *(_QWORD *)(v2 + 16);
      v18 = *(_QWORD *)(v2 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_20A457724(v18 > 1, v19 + 1, 1);
        v2 = *(_QWORD *)(v3 - 104);
      }
      *(_QWORD *)(v2 + 16) = v19 + 1;
      v20 = v2 + 16 * v19;
      *(_QWORD *)(v20 + 32) = v15;
      *(_QWORD *)(v20 + 40) = v17;
      ++v6;
      --v5;
      --v4;
      v1 = *(_QWORD *)(v3 - 128);
      if (!v4)
        return v2;
    }
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    __break(1u);
    JUMPOUT(0x20A452B90);
  }
  return v2;
}

uint64_t sub_20A452BB8(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _OWORD v11[2];
  uint64_t v12;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_20A5B8FCC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = MEMORY[0x24BEE4AF8];
  if (!v2)
    return v3;
  v12 = MEMORY[0x24BEE4AF8];
  result = sub_20A45775C(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      v5 = 0;
      v3 = v12;
      do
      {
        MEMORY[0x20BD25F48](v5, a1);
        swift_dynamicCast();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_20A45775C(0, *(_QWORD *)(v3 + 16) + 1, 1);
          v3 = v12;
        }
        v7 = *(_QWORD *)(v3 + 16);
        v6 = *(_QWORD *)(v3 + 24);
        if (v7 >= v6 >> 1)
        {
          sub_20A45775C(v6 > 1, v7 + 1, 1);
          v3 = v12;
        }
        ++v5;
        *(_QWORD *)(v3 + 16) = v7 + 1;
        sub_20A44FD68(v11, (_OWORD *)(v3 + 32 * v7 + 32));
      }
      while (v2 != v5);
    }
    else
    {
      v8 = a1 + 32;
      v3 = v12;
      do
      {
        swift_unknownObjectRetain();
        swift_dynamicCast();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_20A45775C(0, *(_QWORD *)(v3 + 16) + 1, 1);
          v3 = v12;
        }
        v10 = *(_QWORD *)(v3 + 16);
        v9 = *(_QWORD *)(v3 + 24);
        if (v10 >= v9 >> 1)
        {
          sub_20A45775C(v9 > 1, v10 + 1, 1);
          v3 = v12;
        }
        *(_QWORD *)(v3 + 16) = v10 + 1;
        sub_20A44FD68(v11, (_OWORD *)(v3 + 32 * v10 + 32));
        v8 += 8;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_20A452DEC(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __int128 v8;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v9 = MEMORY[0x24BEE4AF8];
    sub_20A45775C(0, v1, 0);
    v4 = a1 + 32;
    v2 = v9;
    do
    {
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545F9CE0);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_20A45775C(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v9;
      }
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_20A45775C(v5 > 1, v6 + 1, 1);
        v2 = v9;
      }
      *(_QWORD *)(v2 + 16) = v6 + 1;
      sub_20A44FD68(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      v4 += 8;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_20A452F18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void (*v3)(uint64_t);

  v2 = a2;
  v3 = *(void (**)(uint64_t))(a1 + 32);
  if (a2)
  {
    sub_20A459574(0, &qword_2545F9D60);
    v2 = sub_20A5B8AA4();
  }
  swift_retain();
  v3(v2);
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_20A452F88(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  _QWORD aBlock[6];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9D50);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4, v7);
  sub_20A459574(0, &qword_2545F9D58);
  v8 = (void *)sub_20A5B8A98();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  v9 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_20A459560;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_20A452F18;
  aBlock[3] = &block_descriptor_14;
  v11 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(a2, sel_fetchGeoCodingsForAddresses_completion_, v8, v11);
  _Block_release(v11);

}

uint64_t sub_20A4530EC()
{
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9D50);
  return sub_20A5B8B10();
}

void sub_20A453130(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  void *v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  _QWORD aBlock[6];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9DC0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5, v8);
  v9 = objc_msgSend(objc_allocWithZone((Class)ODNServices), sel_init);
  sub_20A459574(0, &qword_2545F9D58);
  v10 = (void *)sub_20A5B8A98();
  sub_20A452BB8(a3);
  v11 = (void *)sub_20A5B8A98();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  v12 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v13 + v12, (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  aBlock[4] = sub_20A459B38;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_20A45334C;
  aBlock[3] = &block_descriptor_47;
  v14 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v9, sel_updateGeoCodingsForAddresses_locations_completion_, v10, v11, v14);
  _Block_release(v14);

}

uint64_t sub_20A4532EC(void *a1)
{
  id v1;

  if (a1)
  {
    v1 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9DC0);
    return sub_20A5B8B04();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9DC0);
    return sub_20A5B8B10();
  }
}

void sub_20A45334C(uint64_t a1, void *a2)
{
  void (*v3)(void *);
  id v4;

  v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3(a2);
  swift_release();

}

void sub_20A4533A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  _QWORD aBlock[6];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9DE8);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v2, v5);
  v6 = objc_msgSend(objc_allocWithZone((Class)ODNServices), sel_init);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  v7 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v8 + v7, (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  aBlock[4] = sub_20A459BCC;
  aBlock[5] = v8;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_20A4538B0;
  aBlock[3] = &block_descriptor_63;
  v9 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v6, sel_fetchConfigWithCompletion_, v9);
  _Block_release(v9);

}

uint64_t sub_20A4534EC(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  unint64_t v6;
  char v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD v12[15];
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  char v28;
  char v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  char v45;
  __int128 v46;
  __int128 v47;

  if (!a1
    || (sub_20A4E03F4(a1, (uint64_t)&v13),
        sub_20A459C88((uint64_t)&v13, (uint64_t)v12, &qword_253EB4A18),
        sub_20A459C88((uint64_t)v12, (uint64_t)&v30, &qword_253EB4A18),
        sub_20A459CCC((uint64_t)&v30) == 1))
  {
    if (qword_253EB4A80 != -1)
      swift_once();
    v2 = sub_20A5B8804();
    __swift_project_value_buffer(v2, (uint64_t)qword_253EB4950);
    v3 = sub_20A5B87EC();
    v4 = sub_20A5B8C54();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_20A443000, v3, v4, "No config from asd.", v5, 2u);
      MEMORY[0x20BD26DB8](v5, -1, -1);
    }

    if (a1)
    {
      strcpy((char *)&v30, "daemonVersion");
      HIWORD(v30) = -4864;
      sub_20A5B8E34();
      if (*(_QWORD *)(a1 + 16) && (v6 = sub_20A470A0C((uint64_t)&v13), (v7 & 1) != 0))
      {
        sub_20A44FD78(*(_QWORD *)(a1 + 56) + 32 * v6, (uint64_t)&v46);
      }
      else
      {
        v46 = 0u;
        v47 = 0u;
      }
      sub_20A459C54((uint64_t)&v13);
      if (*((_QWORD *)&v47 + 1))
      {
        v8 = swift_dynamicCast();
        if (v8)
          v9 = v13;
        else
          v9 = 0;
        if (v8)
          v10 = *((_QWORD *)&v13 + 1);
        else
          v10 = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v46 = 0u;
      v47 = 0u;
    }
    sub_20A44FDFC((uint64_t)&v46);
    v9 = 0;
    v10 = 0;
LABEL_22:
    sub_20A459C2C(v12);
    *(_QWORD *)&v30 = v9;
    *((_QWORD *)&v30 + 1) = v10;
    sub_20A459C88((uint64_t)v12, (uint64_t)&v31, (uint64_t *)&unk_253EB6230);
    v42 = 0uLL;
    v43 = xmmword_20A5BCDC0;
    LOBYTE(v44) = 0;
    *((_QWORD *)&v44 + 1) = 0;
    v45 = 2;
    v25 = 0u;
    v26 = xmmword_20A5BCDC0;
    v27 = (unint64_t)v44;
    v28 = 2;
    v21 = v38;
    v22 = v39;
    v23 = v40;
    v24 = v41;
    v17 = v34;
    v18 = v35;
    v19 = v36;
    v20 = v37;
    v13 = v30;
    v14 = v31;
    v15 = v32;
    v16 = v33;
    v29 = 0;
    goto LABEL_23;
  }
  v25 = v42;
  v26 = v43;
  v27 = v44;
  v28 = v45;
  v21 = v38;
  v22 = v39;
  v23 = v40;
  v24 = v41;
  v17 = v34;
  v18 = v35;
  v19 = v36;
  v20 = v37;
  v13 = v30;
  v14 = v31;
  v15 = v32;
  v16 = v33;
  v29 = 1;
LABEL_23:
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9DE8);
  return sub_20A5B8B10();
}

uint64_t sub_20A4538B0(uint64_t a1, uint64_t a2)
{
  void (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(void (**)(uint64_t))(a1 + 32);
  if (a2)
    v3 = sub_20A5B8888();
  else
    v3 = 0;
  swift_retain();
  v2(v3);
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_20A453928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  char *v7;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  char v25;
  char v26;
  __int128 v27;
  char v28;
  char v29;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = MEMORY[0x24BEE4AF8];
  if (v4)
  {
    v21[0] = MEMORY[0x24BEE4AF8];
    sub_20A457778(0, v4, 0);
    v5 = v21[0];
    v7 = (char *)(a3 + 89);
    do
    {
      v8 = *(_QWORD *)(v7 - 49);
      v9 = *(v7 - 25);
      v10 = *(v7 - 24);
      v11 = *(v7 - 1);
      v12 = *v7;
      v22 = *(_QWORD *)(v7 - 57);
      v23 = v8;
      v24 = *(_OWORD *)(v7 - 41);
      v25 = v9;
      v26 = v10;
      v27 = *(_OWORD *)(v7 - 17);
      v28 = v11;
      v29 = v12;
      v13 = sub_20A518638();
      v21[0] = v5;
      v15 = *(_QWORD *)(v5 + 16);
      v14 = *(_QWORD *)(v5 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_20A457778(v14 > 1, v15 + 1, 1);
        v5 = v21[0];
      }
      *(_QWORD *)(v5 + 16) = v15 + 1;
      *(_QWORD *)(v5 + 8 * v15 + 32) = v13;
      v7 += 64;
      --v4;
    }
    while (v4);
  }
  v16 = *(_QWORD *)(v3 + 176);
  v22 = *(_QWORD *)(v3 + 168);
  v23 = v16;
  v21[0] = 5;
  v21[1] = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_20A5B8E94();
  sub_20A5B899C();
  sub_20A5B899C();
  sub_20A5B899C();
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545F9CE0);
  MEMORY[0x20BD25B4C](v5, v17);
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  CoreODILogger.info(_:category:)(0, 0xE000000000000000, v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v18 = objc_msgSend(objc_allocWithZone((Class)ODNServices), sel_init);
  v19 = (void *)sub_20A5B88F4();
  sub_20A452DEC(v5);
  swift_bridgeObjectRelease();
  v20 = (id)sub_20A5B8A98();
  swift_bridgeObjectRelease();
  objc_msgSend(v18, sel_dKsJLlNX54lzKt5n_eqF2XJh3hHBJQf2K_, v19, v20);

}

uint64_t sub_20A453B9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return swift_task_switch();
}

uint64_t sub_20A453BB8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD v7[2];

  v2 = v0[4];
  v1 = v0[5];
  v3 = v0[3];
  v0[6] = *(_QWORD *)(v1 + 168);
  v0[7] = *(_QWORD *)(v1 + 176);
  v7[0] = 5;
  v7[1] = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_20A5B8E94();
  sub_20A5B899C();
  sub_20A5B899C();
  CoreODILogger.info(_:category:)(0, 0xE000000000000000, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_20A457794();
  v4 = swift_task_alloc();
  v0[8] = v4;
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = v2;
  v5 = (_QWORD *)swift_task_alloc();
  v0[9] = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9CF8);
  *v5 = v0;
  v5[1] = sub_20A453D1C;
  return sub_20A5B9200();
}

uint64_t sub_20A453D1C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A453D90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char v51;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  sub_20A5B8E94();
  swift_bridgeObjectRelease();
  v42 = 0xD000000000000005;
  v43 = 0x800000020A5DBAF0;
  sub_20A5B899C();
  sub_20A5B899C();
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545F9CE0);
  MEMORY[0x20BD25B4C](v1, v2);
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  CoreODILogger.info(_:category:)(0xD000000000000026, 0x800000020A5DBAF0, &v42);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v3 = *(_QWORD *)(v1 + 16);
  if (v3)
  {
    v4 = *(_QWORD *)(v0 + 80);
    v5 = *(_QWORD *)(v1 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    DeviceDataField.init(from:)(v5, (uint64_t)&v42);
    if (v4)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    v32 = v0;
    v33 = v1;
    swift_bridgeObjectRelease();
    v8 = v42;
    v9 = v43;
    v10 = v44;
    v11 = v45;
    v12 = v46;
    v13 = v47;
    v38 = v49;
    v40 = v48;
    v34 = v51;
    v36 = v50;
    v14 = (_QWORD *)MEMORY[0x24BEE4AF8];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v14 = sub_20A46FB88(0, v14[2] + 1, 1, v14);
    v16 = v14[2];
    v15 = v14[3];
    v17 = v14;
    if (v16 >= v15 >> 1)
      v17 = sub_20A46FB88((_QWORD *)(v15 > 1), v16 + 1, 1, v14);
    v17[2] = v16 + 1;
    v7 = v17;
    v18 = &v17[8 * v16];
    v18[4] = v8;
    v18[5] = v9;
    v18[6] = v10;
    v18[7] = v11;
    *((_BYTE *)v18 + 64) = v12;
    *((_BYTE *)v18 + 65) = v13;
    v18[9] = v40;
    v18[10] = v38;
    *((_BYTE *)v18 + 88) = v36;
    *((_BYTE *)v18 + 89) = v34;
    v19 = v3 - 1;
    if (v19)
    {
      v20 = (uint64_t *)(v33 + 40);
      do
      {
        v21 = *v20;
        swift_bridgeObjectRetain_n();
        DeviceDataField.init(from:)(v21, (uint64_t)&v42);
        swift_bridgeObjectRelease();
        v22 = v42;
        v23 = v43;
        v24 = v45;
        v25 = v46;
        v41 = v47;
        v37 = v49;
        v39 = v48;
        v35 = v50;
        v26 = v51;
        v27 = v44;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v7 = sub_20A46FB88(0, v7[2] + 1, 1, v7);
        v29 = v7[2];
        v28 = v7[3];
        v30 = v7;
        if (v29 >= v28 >> 1)
          v30 = sub_20A46FB88((_QWORD *)(v28 > 1), v29 + 1, 1, v7);
        v30[2] = v29 + 1;
        v7 = v30;
        v31 = &v30[8 * v29];
        v31[4] = v22;
        v31[5] = v23;
        v31[6] = v27;
        v31[7] = v24;
        *((_BYTE *)v31 + 64) = v25;
        *((_BYTE *)v31 + 65) = v41;
        v31[9] = v39;
        v31[10] = v37;
        *((_BYTE *)v31 + 88) = v35;
        ++v20;
        *((_BYTE *)v31 + 89) = v26;
        --v19;
      }
      while (v19);
    }
    swift_bridgeObjectRelease();
    v0 = v32;
  }
  else
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(_QWORD *))(v0 + 8))(v7);
}

uint64_t sub_20A45413C()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_20A454170(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  _QWORD aBlock[6];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9DF0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v2, v5);
  v6 = objc_msgSend(objc_allocWithZone((Class)ODNServices), sel_init);
  v7 = (void *)sub_20A5B88F4();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  v8 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v9 + v8, (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  aBlock[4] = sub_20A459E64;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_20A45451C;
  aBlock[3] = &block_descriptor_69;
  v10 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v6, sel_evrtH713YbFfEOzk_completion_, v7, v10);
  _Block_release(v10);

}

uint64_t sub_20A4542DC(uint64_t a1, id a2)
{
  id v2;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;

  if (a2)
  {
    v7 = a2;
    v2 = a2;
LABEL_3:
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9DF0);
    return sub_20A5B8B04();
  }
  if (!a1)
  {
    LOBYTE(v7) = -101;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000022, 0x800000020A5DC3A0, 0, (unsigned __int8 *)&v7, 0, 0, 0xD000000000000052, 0x800000020A5DBCF0, 0xD000000000000024, 0x800000020A5DBAC0, 227);
    v7 = v6;
    goto LABEL_3;
  }
  v4 = sub_20A4543D8(a1);
  v5 = (void *)MEMORY[0x24BEE4AF8];
  if (v4)
    v5 = (void *)v4;
  v7 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9DF0);
  return sub_20A5B8B10();
}

uint64_t sub_20A4543D8(uint64_t a1)
{
  int64_t v2;
  uint64_t v3;
  uint64_t i;
  unint64_t v5;
  unint64_t v6;
  uint64_t v8;
  _BYTE v9[32];
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 16);
  v10 = MEMORY[0x24BEE4AF8];
  sub_20A457778(0, v2, 0);
  v3 = v10;
  if (v2)
  {
    for (i = a1 + 32; ; i += 32)
    {
      sub_20A44FD78(i, (uint64_t)v9);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545F9CE0);
      if (!swift_dynamicCast())
        break;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_20A457778(0, *(_QWORD *)(v3 + 16) + 1, 1);
        v3 = v10;
      }
      v6 = *(_QWORD *)(v3 + 16);
      v5 = *(_QWORD *)(v3 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_20A457778(v5 > 1, v6 + 1, 1);
        v3 = v10;
      }
      *(_QWORD *)(v3 + 16) = v6 + 1;
      *(_QWORD *)(v3 + 8 * v6 + 32) = v8;
      if (!--v2)
        return v3;
    }
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

uint64_t sub_20A45451C(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v4)(uint64_t, void *);
  uint64_t v5;
  id v6;

  v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
    v5 = sub_20A5B8AA4();
  else
    v5 = 0;
  swift_retain();
  v6 = a3;
  v4(v5, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20A4545A0()
{
  uint64_t v0;
  NSObject *v1;
  id v2;
  id v3;
  uint64_t v4;
  void *v5;
  NSObject *v6;
  id v7;
  uint64_t v8;
  _QWORD v10[6];

  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = 0;
  v1 = dispatch_group_create();
  dispatch_group_enter(v1);
  if (qword_253EB5040 != -1)
    swift_once();
  v2 = (id)qword_253EBC880;
  sub_20A5B8C48();
  sub_20A5B87B0();

  v3 = objc_msgSend(objc_allocWithZone((Class)ODNServices), sel_init);
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v0;
  *(_QWORD *)(v4 + 24) = v1;
  v10[4] = sub_20A457850;
  v10[5] = v4;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_20A4538B0;
  v10[3] = &block_descriptor_1;
  v5 = _Block_copy(v10);
  swift_retain();
  v6 = v1;
  swift_release();
  objc_msgSend(v3, sel_fetchConfigWithCompletion_, v5);
  _Block_release(v5);

  LOBYTE(v5) = sub_20A47FCC0(0.5);
  v7 = (id)qword_253EBC880;
  if ((v5 & 1) != 0)
    sub_20A5B8C54();
  else
    sub_20A5B8C48();
  sub_20A5B87B0();

  swift_beginAccess();
  v8 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  return v8;
}

void sub_20A4547B8(uint64_t a1, uint64_t a2, NSObject *a3)
{
  swift_beginAccess();
  *(_QWORD *)(a2 + 16) = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  dispatch_group_leave(a3);
}

uint64_t sub_20A454820(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v9 + 216) = a8;
  *(_QWORD *)(v9 + 224) = v8;
  *(_QWORD *)(v9 + 200) = a6;
  *(_QWORD *)(v9 + 208) = a7;
  *(_BYTE *)(v9 + 328) = a5;
  *(_QWORD *)(v9 + 184) = a3;
  *(_QWORD *)(v9 + 192) = a4;
  *(_QWORD *)(v9 + 168) = a1;
  *(_QWORD *)(v9 + 176) = a2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB5180);
  *(_QWORD *)(v9 + 232) = swift_task_alloc();
  v10 = sub_20A5B8864();
  *(_QWORD *)(v9 + 240) = v10;
  *(_QWORD *)(v9 + 248) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v9 + 256) = swift_task_alloc();
  *(_QWORD *)(v9 + 264) = swift_task_alloc();
  *(_QWORD *)(v9 + 272) = type metadata accessor for ODISignpost();
  *(_QWORD *)(v9 + 280) = swift_task_alloc();
  *(_QWORD *)(v9 + 288) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A4548F8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  void *v5;
  int v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  if (qword_2545F9A88 != -1)
    swift_once();
  v1 = v0[35];
  v3 = qword_254610368;
  v2 = unk_254610370;
  v4 = byte_254610378;
  v5 = (void *)qword_254610380;
  v6 = byte_254610388;
  *(_QWORD *)(v1 + 32) = "enableTelemetry=YES";
  *(_QWORD *)(v1 + 40) = 19;
  *(_BYTE *)(v1 + 48) = 2;
  *(_QWORD *)v1 = v3;
  *(_QWORD *)(v1 + 8) = v2;
  *(_BYTE *)(v1 + 16) = v4;
  *(_QWORD *)(v1 + 24) = v5;
  v7 = v5;
  sub_20A5B87D4();
  sub_20A5B8CFC();
  if (v6 == 1)
    sub_20A5B87BC();
  else
    sub_20A5B87C8();
  v9 = v0[35];
  v8 = v0[36];
  v10 = v0[22];

  sub_20A4595B4(v9, v8);
  sub_20A5B8858();
  v0[37] = sub_20A457794();
  v11 = swift_task_alloc();
  v0[38] = v11;
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = 2;
  v12 = (_QWORD *)swift_task_alloc();
  v0[39] = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9DA0);
  *v12 = v0;
  v12[1] = sub_20A454AE4;
  return sub_20A5B9200();
}

uint64_t sub_20A454AE4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 320) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A454B58()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  double v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t (*v44)(void);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;

  v1 = v0;
  v2 = v0[32];
  v53 = v0[31];
  v54 = v0[30];
  v3 = v0[24];
  v4 = v1[23];
  v59 = v1[4];
  v60 = v1[5];
  v57 = v1[2];
  v58 = v1[6];
  v61 = v1[7];
  v62 = v1[3];
  v56 = *((_DWORD *)v1 + 16);
  swift_bridgeObjectRetain();
  sub_20A5B8CF0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52C0);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_20A5BA9B0;
  *(_QWORD *)(v5 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v5 + 64) = sub_20A450420();
  v6 = MEMORY[0x24BEE1328];
  *(_QWORD *)(v5 + 32) = v4;
  *(_QWORD *)(v5 + 40) = v3;
  v7 = MEMORY[0x24BEE1360];
  *(_QWORD *)(v5 + 96) = v6;
  *(_QWORD *)(v5 + 104) = v7;
  *(_BYTE *)(v5 + 72) = 0;
  sub_20A5B87BC();
  swift_bridgeObjectRelease();
  sub_20A5B8858();
  v8 = sub_20A5B884C();
  (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v2, v54);
  v9 = sub_20A5B884C();
  if (v8 < v9)
  {
    __break(1u);
    goto LABEL_22;
  }
  v10 = (double)(v8 - v9) / 1000000000.0;
  v63 = 0;
  v64 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_20A5B8E94();
  v1[12] = 0;
  v1[13] = 0xE000000000000000;
  sub_20A5B899C();
  *((_DWORD *)v1 + 17) = v56;
  sub_20A5B9170();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  sub_20A5B8BDC();
  sub_20A5B899C();
  v11 = v1[12];
  v12 = v1[13];
  LOBYTE(v63) = 9;
  CoreODILogger.debug(_:category:)(v11, v12, &v63);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v63 = 0x206174616474;
  v64 = 0xE600000000000000;
  swift_bridgeObjectRetain();
  if (v62 >> 60 != 15)
  {
    sub_20A459690(v57, v62);
    sub_20A452820(v57, v62);
    v1[17] = v13;
    __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5130);
    sub_20A4599CC();
    sub_20A5B88DC();
    swift_bridgeObjectRelease();
    sub_20A44CFC4(v57, v62);
  }
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  v14 = v63;
  LOBYTE(v63) = 12;
  CoreODILogger.debug(_:category:)(v14, v64, &v63);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v63 = 0x656D737365737361;
  v64 = 0xEB0000000020746ELL;
  swift_bridgeObjectRetain();
  if (v60 >> 60 != 15)
  {
    sub_20A459690(v59, v60);
    sub_20A452820(v59, v60);
    v1[19] = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5130);
    sub_20A4599CC();
    sub_20A5B88DC();
    swift_bridgeObjectRelease();
    sub_20A44CFC4(v59, v60);
  }
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  v16 = v63;
  LOBYTE(v63) = 12;
  CoreODILogger.debug(_:category:)(v16, v64, &v63);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v63 = 0x206174616463;
  v64 = 0xE600000000000000;
  swift_bridgeObjectRetain();
  v17 = v61;
  if (v61 >> 60 != 15)
  {
    sub_20A459690(v58, v61);
    sub_20A452820(v58, v61);
    v1[18] = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5130);
    sub_20A4599CC();
    sub_20A5B88DC();
    swift_bridgeObjectRelease();
    sub_20A44CFC4(v58, v61);
  }
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  v19 = v63;
  LOBYTE(v63) = 12;
  CoreODILogger.debug(_:category:)(v19, v64, &v63);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v20 = v1[26];
  v21 = sub_20A5B8B88();
  if (v20)
  {
    v22 = v1[37];
    v24 = v1[28];
    v23 = v1[29];
    v26 = v1[26];
    v25 = v1[27];
    v27 = v1[24];
    v51 = v1[23];
    v52 = v21;
    v28 = sub_20A5B8B64();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v23, 1, 1, v28);
    v29 = swift_allocObject();
    *(_QWORD *)(v29 + 16) = v24;
    *(_QWORD *)(v29 + 24) = v22;
    *(_QWORD *)(v29 + 32) = v59;
    *(_QWORD *)(v29 + 40) = v60;
    *(_QWORD *)(v29 + 48) = v57;
    *(_QWORD *)(v29 + 56) = v62;
    *(_QWORD *)(v29 + 64) = v58;
    *(_QWORD *)(v29 + 72) = v61;
    *(_DWORD *)(v29 + 80) = v56;
    *(double *)(v29 + 88) = v10;
    *(_QWORD *)(v29 + 96) = v24;
    *(_QWORD *)(v29 + 104) = v51;
    *(_QWORD *)(v29 + 112) = v27;
    *(_QWORD *)(v29 + 120) = v26;
    *(_QWORD *)(v29 + 128) = v25;
    *(_BYTE *)(v29 + 136) = v52 & 1;
    *(_QWORD *)(v29 + 144) = 0;
    swift_retain_n();
    swift_bridgeObjectRetain();
    sub_20A459808(v26);
    sub_20A459690(v57, v62);
    v17 = v61;
    sub_20A459690(v59, v60);
    sub_20A459690(v58, v61);
    v30 = 0;
    sub_20A4C69D8(v23, (uint64_t)&unk_2545F9DB0, v29);
    swift_release();
  }
  if (*((_BYTE *)v1 + 328) == 1 && v61 >> 60 == 15)
  {
    if (qword_253EB5040 == -1)
    {
LABEL_13:
      v31 = v1[36];
      v32 = v1[33];
      v34 = v1[30];
      v33 = v1[31];
      v35 = v1[25];
      v36 = (id)qword_253EBC880;
      sub_20A5B8C54();
      sub_20A5B87B0();

      LOBYTE(v63) = -124;
      v37 = sub_20A4D4750(v35);
      ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000027, 0x800000020A5DC030, 0, (unsigned __int8 *)&v63, 0, v37, 0xD000000000000052, 0x800000020A5DBCF0, 0xD00000000000003ELL, 0x800000020A5DBF30, 353);
      swift_bridgeObjectRelease();
      swift_willThrow();
      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v34);
      v17 = v60;
      goto LABEL_18;
    }
LABEL_22:
    swift_once();
    goto LABEL_13;
  }
  if (v60 >> 60 != 15)
  {
    v45 = v1[36];
    v46 = v1[33];
    v47 = v1[30];
    v48 = v1[31];
    v49 = v1[21];
    v55 = v1[40] == 0;
    sub_20A45964C(v59, v60);
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v46, v47);
    sub_20A4595F8(v45);
    sub_20A44CFC4(v59, v60);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    *(_QWORD *)v49 = v57;
    *(_QWORD *)(v49 + 8) = v62;
    *(_QWORD *)(v49 + 16) = v59;
    *(_QWORD *)(v49 + 24) = v60;
    *(_QWORD *)(v49 + 32) = v58;
    *(_QWORD *)(v49 + 40) = v61;
    *(_DWORD *)(v49 + 48) = v56;
    *(double *)(v49 + 56) = v10;
    *(_BYTE *)(v49 + 64) = v55;
    v44 = (uint64_t (*)(void))v1[1];
    return v44();
  }
  if (qword_253EB5040 != -1)
    swift_once();
  v31 = v1[36];
  v38 = v1[33];
  v39 = v1[30];
  v40 = v1[31];
  v41 = v1[25];
  v42 = (id)qword_253EBC880;
  sub_20A5B8C54();
  sub_20A5B87B0();

  LOBYTE(v63) = 127;
  v43 = sub_20A4D4750(v41);
  ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000022, 0x800000020A5DBFD0, 0, (unsigned __int8 *)&v63, 0, v43, 0xD000000000000052, 0x800000020A5DBCF0, 0xD00000000000003ELL, 0x800000020A5DBF30, 357);
  swift_bridgeObjectRelease();
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v38, v39);
  v59 = v58;
LABEL_18:
  sub_20A4595F8(v31);
  sub_20A44CFC4(v59, v17);
  sub_20A44CFC4(v57, v62);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v44 = (uint64_t (*)(void))v1[1];
  return v44();
}

uint64_t sub_20A4555B0()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v43;
  unsigned __int8 v44;
  unsigned __int8 v45[9];

  v1 = *(void **)(v0 + 320);
  swift_task_dealloc();
  v2 = v1;
  if (qword_253EB5040 != -1)
    swift_once();
  v3 = *(void **)(v0 + 320);
  v4 = (id)qword_253EBC880;
  sub_20A5B8C54();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52C0);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_20A5BA9B0;
  v6 = (void *)sub_20A5B8414();
  v7 = objc_msgSend(v6, sel_code);

  v8 = MEMORY[0x24BEE17F0];
  *(_QWORD *)(v5 + 56) = MEMORY[0x24BEE1768];
  *(_QWORD *)(v5 + 64) = v8;
  *(_QWORD *)(v5 + 32) = v7;
  swift_getErrorValue();
  v9 = sub_20A5B923C();
  v11 = v10;
  *(_QWORD *)(v5 + 96) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v5 + 104) = sub_20A450420();
  *(_QWORD *)(v5 + 72) = v9;
  *(_QWORD *)(v5 + 80) = v11;
  sub_20A5B87B0();

  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(v0 + 208);
  v13 = sub_20A5B8B88();
  if (v12)
  {
    v14 = v13;
    v15 = *(_QWORD *)(v0 + 296);
    v17 = *(_QWORD *)(v0 + 224);
    v16 = *(_QWORD *)(v0 + 232);
    v43 = v16;
    v19 = *(_QWORD *)(v0 + 208);
    v18 = *(_QWORD *)(v0 + 216);
    v20 = *(_QWORD *)(v0 + 184);
    v21 = *(_QWORD *)(v0 + 192);
    v22 = sub_20A5B8B64();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v16, 1, 1, v22);
    v23 = swift_allocObject();
    *(_QWORD *)(v23 + 16) = v17;
    *(_QWORD *)(v23 + 24) = v15;
    *(_OWORD *)(v23 + 32) = xmmword_20A5BCDB0;
    *(_OWORD *)(v23 + 48) = xmmword_20A5BCDB0;
    *(_OWORD *)(v23 + 64) = xmmword_20A5BCDB0;
    *(_DWORD *)(v23 + 80) = 0;
    *(_QWORD *)(v23 + 88) = 0xBFF0000000000000;
    *(_QWORD *)(v23 + 96) = v17;
    *(_QWORD *)(v23 + 104) = v20;
    *(_QWORD *)(v23 + 112) = v21;
    *(_QWORD *)(v23 + 120) = v19;
    *(_QWORD *)(v23 + 128) = v18;
    *(_BYTE *)(v23 + 136) = v14 & 1;
    *(_QWORD *)(v23 + 144) = v1;
    swift_retain_n();
    swift_bridgeObjectRetain();
    sub_20A459808(v19);
    sub_20A459690(0, 0xF000000000000000);
    sub_20A459690(0, 0xF000000000000000);
    sub_20A459690(0, 0xF000000000000000);
    v24 = v1;
    sub_20A4C69D8(v43, (uint64_t)&unk_2545F9DB0, v23);
    swift_release();
  }
  if (v1)
  {
    v25 = *(_QWORD *)(v0 + 288);
    v26 = *(_QWORD *)(v0 + 264);
    v27 = *(_QWORD *)(v0 + 240);
    v28 = *(_QWORD *)(v0 + 248);
    v29 = *(_QWORD *)(v0 + 200);
    v30 = v1;
    v31 = sub_20A4D4750(v29);
    sub_20A4588DC((char *)v1, v31);
    swift_bridgeObjectRelease();
    swift_willThrow();

    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v26, v27);
    sub_20A4595F8(v25);
    sub_20A44CFC4(0, 0xF000000000000000);
  }
  else
  {
    if (*(_BYTE *)(v0 + 328) == 1)
    {
      if (qword_253EB5040 != -1)
        swift_once();
      v32 = *(_QWORD *)(v0 + 288);
      v33 = *(_QWORD *)(v0 + 264);
      v34 = *(_QWORD *)(v0 + 240);
      v35 = *(_QWORD *)(v0 + 248);
      v36 = *(_QWORD *)(v0 + 200);
      v37 = (id)qword_253EBC880;
      sub_20A5B8C54();
      sub_20A5B87B0();

      v45[0] = -124;
      v38 = sub_20A4D4750(v36);
      ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000027, 0x800000020A5DC030, 0, v45, 0, v38, 0xD000000000000052, 0x800000020A5DBCF0, 0xD00000000000003ELL, 0x800000020A5DBF30, 353);
    }
    else
    {
      if (qword_253EB5040 != -1)
        swift_once();
      v32 = *(_QWORD *)(v0 + 288);
      v33 = *(_QWORD *)(v0 + 264);
      v34 = *(_QWORD *)(v0 + 240);
      v35 = *(_QWORD *)(v0 + 248);
      v39 = *(_QWORD *)(v0 + 200);
      v40 = (id)qword_253EBC880;
      sub_20A5B8C54();
      sub_20A5B87B0();

      v44 = 127;
      v41 = sub_20A4D4750(v39);
      ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000022, 0x800000020A5DBFD0, 0, &v44, 0, v41, 0xD000000000000052, 0x800000020A5DBCF0, 0xD00000000000003ELL, 0x800000020A5DBF30, 357);
    }
    swift_bridgeObjectRelease();
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v33, v34);
    sub_20A4595F8(v32);
  }
  sub_20A44CFC4(0, 0xF000000000000000);
  sub_20A44CFC4(0, 0xF000000000000000);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_20A455AF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  _QWORD aBlock[6];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9DB8);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6, v9);
  v10 = objc_msgSend(objc_allocWithZone((Class)OZRXp7MLSzffIeLD), sel_init);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  v11 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v12 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v12 + v11, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  aBlock[4] = sub_20A459A7C;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_20A451C14;
  aBlock[3] = &block_descriptor_39;
  v13 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v10, sel_MypqGKKWznx4xnYa_l8OCYbP9LFIvnTwG_ygOPXTiKN0J02x0j_, a2, a3, v13);
  _Block_release(v13);

}

uint64_t sub_20A455C54(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, int a7, id a8, uint64_t a9)
{
  id v9;

  if (a8)
  {
    v9 = a8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9DB8);
    return sub_20A5B8B04();
  }
  else
  {
    sub_20A459690(a1, a2);
    sub_20A459690(a3, a4);
    sub_20A459690(a5, a6);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9DB8);
    return sub_20A5B8B10();
  }
}

uint64_t sub_20A455D08(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v11;
  int v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  char v16;
  uint64_t v17;

  *(_QWORD *)(v9 + 176) = v17;
  *(_BYTE *)(v9 + 256) = v16;
  *(_OWORD *)(v9 + 144) = v14;
  *(_OWORD *)(v9 + 160) = v15;
  *(_QWORD *)(v9 + 136) = v13;
  *(double *)(v9 + 128) = a1;
  *(_DWORD *)(v9 + 248) = v12;
  *(_QWORD *)(v9 + 112) = a9;
  *(_QWORD *)(v9 + 120) = v11;
  *(_QWORD *)(v9 + 96) = a7;
  *(_QWORD *)(v9 + 104) = a8;
  *(_QWORD *)(v9 + 80) = a5;
  *(_QWORD *)(v9 + 88) = a6;
  sub_20A459690(a5, a6);
  return swift_task_switch();
}

uint64_t sub_20A455D88()
{
  uint64_t v0;
  unint64_t v1;
  id v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  Swift::String v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  Swift::String v24;
  int *v25;
  char v26;
  _QWORD *v27;
  int *v29;
  char v30;
  unint64_t v31;
  unint64_t v32;

  if (qword_253EB5040 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 88);
  v2 = (id)qword_253EBC880;
  sub_20A5B8C48();
  sub_20A5B87B0();

  if (v1 >> 60 == 15)
  {
    v3 = *(_QWORD *)(v0 + 120);
    if (v3 >> 60 == 15)
    {
      v4 = 0;
      v5 = 0;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      v11 = 0xF000000000000000;
    }
    else
    {
      v10 = *(_QWORD *)(v0 + 128);
      v21 = *(_QWORD *)(v0 + 104);
      v22 = *(_QWORD *)(v0 + 112);
      v23 = *(_QWORD *)(v0 + 96);
      v30 = 12;
      sub_20A459690(v22, v3);
      sub_20A459690(v23, v21);
      sub_20A459690(v22, v3);
      swift_bridgeObjectRetain();
      sub_20A5B8E94();
      swift_bridgeObjectRelease();
      v31 = 0xD00000000000001BLL;
      v32 = 0x800000020A5DC120;
      sub_20A5B899C();
      v24._countAndFlagsBits = 0xD00000000000001BLL;
      v24._object = (void *)0x800000020A5DC120;
      CoreODILogger.milestone(tag:description:value:isSensitive:)((CoreODIEssentials::MilestoneTag)&v30, v24, (Swift::String_optional)0, 0);
      swift_bridgeObjectRelease();
      sub_20A44CFC4(v22, v3);
      swift_bridgeObjectRelease();
      v6 = 0;
      v9 = *(_DWORD *)(v0 + 248);
      v7 = *(_QWORD *)(v0 + 112);
      v8 = *(_QWORD *)(v0 + 120);
      v11 = 0xC000000000000000;
      v4 = *(_QWORD *)(v0 + 96);
      v5 = *(_QWORD *)(v0 + 104);
    }
  }
  else
  {
    v12 = *(_QWORD *)(v0 + 128);
    v14 = *(_QWORD *)(v0 + 112);
    v13 = *(_QWORD *)(v0 + 120);
    v16 = *(_QWORD *)(v0 + 96);
    v15 = *(_QWORD *)(v0 + 104);
    v18 = *(_QWORD *)(v0 + 80);
    v17 = *(_QWORD *)(v0 + 88);
    v30 = 11;
    sub_20A459690(v18, v17);
    v19 = v15;
    v10 = v12;
    sub_20A459690(v16, v19);
    sub_20A459690(v14, v13);
    swift_bridgeObjectRetain();
    sub_20A5B8E94();
    swift_bridgeObjectRelease();
    v31 = 0xD000000000000016;
    v32 = 0x800000020A5DC140;
    sub_20A5B899C();
    v20._countAndFlagsBits = 0xD000000000000016;
    v20._object = (void *)0x800000020A5DC140;
    CoreODILogger.milestone(tag:description:value:isSensitive:)((CoreODIEssentials::MilestoneTag)&v30, v20, (Swift::String_optional)0, 0);
    swift_bridgeObjectRelease();
    sub_20A44CFC4(v18, v17);
    swift_bridgeObjectRelease();
    v9 = *(_DWORD *)(v0 + 248);
    v7 = *(_QWORD *)(v0 + 112);
    v8 = *(_QWORD *)(v0 + 120);
    v4 = *(_QWORD *)(v0 + 96);
    v5 = *(_QWORD *)(v0 + 104);
    v6 = *(_QWORD *)(v0 + 80);
    v11 = *(_QWORD *)(v0 + 88);
  }
  *(_QWORD *)(v0 + 224) = v8;
  *(_QWORD *)(v0 + 232) = v10;
  *(_DWORD *)(v0 + 252) = v9;
  *(_QWORD *)(v0 + 208) = v11;
  *(_QWORD *)(v0 + 216) = v7;
  *(_QWORD *)(v0 + 192) = v5;
  *(_QWORD *)(v0 + 200) = v6;
  *(_QWORD *)(v0 + 184) = v4;
  v25 = *(int **)(v0 + 160);
  *(_QWORD *)(v0 + 16) = v4;
  *(_QWORD *)(v0 + 24) = v5;
  *(_QWORD *)(v0 + 32) = v6;
  *(_QWORD *)(v0 + 40) = v11;
  *(_QWORD *)(v0 + 48) = v7;
  *(_QWORD *)(v0 + 56) = v8;
  *(_QWORD *)(v0 + 64) = v9;
  *(_QWORD *)(v0 + 72) = v10;
  v29 = (int *)((char *)v25 + *v25);
  v26 = *(_BYTE *)(v0 + 256);
  v27 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 240) = v27;
  *v27 = v0;
  v27[1] = sub_20A4560C8;
  return ((uint64_t (*)(uint64_t, BOOL, _QWORD))v29)(v0 + 16, (v26 & 1) == 0, *(_QWORD *)(v0 + 176));
}

uint64_t sub_20A4560C8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A456120()
{
  uint64_t v0;

  sub_20A459A18(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 224));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A456160(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  char v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)(v9 + 280) = v17;
  *(_QWORD *)(v9 + 288) = v8;
  *(_BYTE *)(v9 + 153) = v14;
  *(_QWORD *)(v9 + 264) = v13;
  *(_QWORD *)(v9 + 272) = v16;
  *(_OWORD *)(v9 + 248) = v12;
  *(_OWORD *)(v9 + 232) = v11;
  *(_QWORD *)(v9 + 216) = a7;
  *(_QWORD *)(v9 + 224) = a8;
  *(_QWORD *)(v9 + 200) = a5;
  *(_QWORD *)(v9 + 208) = a6;
  *(_QWORD *)(v9 + 184) = a3;
  *(_QWORD *)(v9 + 192) = a4;
  *(_QWORD *)(v9 + 168) = a1;
  *(_QWORD *)(v9 + 176) = a2;
  *(_QWORD *)(v9 + 296) = type metadata accessor for ODISignpost();
  *(_QWORD *)(v9 + 304) = swift_task_alloc();
  *(_QWORD *)(v9 + 312) = swift_task_alloc();
  *(_BYTE *)(v9 + 154) = *v15;
  *(_BYTE *)(v9 + 155) = v15[1];
  return swift_task_switch();
}

void sub_20A456218()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  void *v5;
  int v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;

  if (qword_2545F9A80 != -1)
    swift_once();
  v1 = v0[38];
  v2 = qword_254610340;
  v3 = *(_QWORD *)algn_254610348;
  v4 = byte_254610350;
  v5 = (void *)qword_254610358;
  v6 = byte_254610360;
  *(_QWORD *)(v1 + 32) = "enableTelemetry=YES";
  *(_QWORD *)(v1 + 40) = 19;
  *(_BYTE *)(v1 + 48) = 2;
  *(_QWORD *)v1 = v2;
  *(_QWORD *)(v1 + 8) = v3;
  *(_BYTE *)(v1 + 16) = v4;
  *(_QWORD *)(v1 + 24) = v5;
  v7 = v5;
  sub_20A5B87D4();
  sub_20A5B8CFC();
  if (v6 == 1)
    sub_20A5B87BC();
  else
    sub_20A5B87C8();
  v9 = v0[38];
  v8 = v0[39];
  v10 = v0[32];
  v11 = v0[33];
  v12 = v0[31];

  sub_20A4595B4(v9, v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9D78);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A5BA9A0;
  *(_BYTE *)(inited + 32) = 0;
  *(_QWORD *)(inited + 64) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 40) = v10;
  *(_QWORD *)(inited + 48) = v11;
  swift_bridgeObjectRetain();
  v0[40] = sub_20A469F10(inited);
  __asm { BR              X10 }
}

uint64_t sub_20A456B74()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  v1 = v0[44];
  v2 = (_QWORD *)swift_task_alloc();
  v0[45] = v2;
  v2[2] = 60000000000;
  v2[3] = &unk_2545F9D88;
  v2[4] = v1;
  v2[5] = &unk_2545F9D90;
  v2[6] = 0;
  v3 = (_QWORD *)swift_task_alloc();
  v0[46] = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9D98);
  *v3 = v0;
  v3[1] = sub_20A456C48;
  return sub_20A5B9200();
}

uint64_t sub_20A456C48()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;

  v2 = *v1;
  *(_QWORD *)(*v1 + 376) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    v3 = *(void **)(v2 + 328);
    v4 = *(_QWORD *)(v2 + 272);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();

    sub_20A459818(v4);
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_20A456D0C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v14;

  v1 = *(void **)(v0 + 328);
  v2 = *(_QWORD *)(v0 + 288);
  sub_20A44BD90(*(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 344));

  v3 = *(_QWORD *)(v0 + 96);
  v14 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 112);
  v6 = *(_QWORD *)(v0 + 120);
  v7 = *(_QWORD *)(v0 + 128);
  v8 = *(_DWORD *)(v0 + 136);
  v9 = *(_QWORD *)(v0 + 144);
  LODWORD(v1) = *(unsigned __int8 *)(v0 + 152);
  v10 = *(void **)(v2 + 136);
  v11 = *(void **)(v2 + 144);
  *(_OWORD *)(v2 + 136) = 0u;
  *(_OWORD *)(v2 + 152) = 0u;
  sub_20A459254(v10, v11);
  sub_20A4517F4();
  if ((_DWORD)v1 == 1)
  {
    sub_20A5B8CF0();
    sub_20A5B87C8();
  }
  v12 = *(_QWORD *)(v0 + 168);
  sub_20A4595F8(*(_QWORD *)(v0 + 312));
  swift_task_dealloc();
  swift_task_dealloc();
  *(_QWORD *)v12 = v14;
  *(_QWORD *)(v12 + 8) = v3;
  *(_QWORD *)(v12 + 16) = v4;
  *(_QWORD *)(v12 + 24) = v5;
  *(_QWORD *)(v12 + 32) = v6;
  *(_QWORD *)(v12 + 40) = v7;
  *(_DWORD *)(v12 + 48) = v8;
  *(_QWORD *)(v12 + 56) = v9;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A456E18()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A456E58()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;

  v1 = *(void **)(v0 + 328);
  v2 = *(_QWORD *)(v0 + 288);
  v3 = *(_QWORD *)(v0 + 272);
  sub_20A44BD90(*(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 344));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  sub_20A459818(v3);
  v4 = *(void **)(v2 + 136);
  v5 = *(void **)(v2 + 144);
  *(_OWORD *)(v2 + 136) = 0u;
  *(_OWORD *)(v2 + 152) = 0u;
  sub_20A459254(v4, v5);
  sub_20A4517F4();
  sub_20A4595F8(*(_QWORD *)(v0 + 312));
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A456F24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v15;
  uint64_t v17;

  *(_QWORD *)(v8 + 88) = a1;
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 96) = v15;
  *v15 = v8;
  v15[1] = sub_20A456FD8;
  return sub_20A454820(v8 + 16, a3, a4, a5, a6, a7, a8, v17);
}

uint64_t sub_20A456FD8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  __int128 v3;

  v2 = *v1;
  v3 = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v2 + 104) = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v2 + 120) = v3;
  *(_OWORD *)(v2 + 136) = *(_OWORD *)(v2 + 48);
  *(_DWORD *)(v2 + 84) = *(_DWORD *)(v2 + 64);
  *(_QWORD *)(v2 + 152) = *(_QWORD *)(v2 + 72);
  *(_BYTE *)(v2 + 81) = *(_BYTE *)(v2 + 80);
  swift_task_dealloc();
  if (v0)
    return (*(uint64_t (**)(void))(v2 + 8))();
  else
    return swift_task_switch();
}

uint64_t sub_20A45706C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  v1 = *(_BYTE *)(v0 + 81);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_DWORD *)(v0 + 84);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_OWORD *)(v0 + 120);
  v6 = *(_OWORD *)(v0 + 136);
  *(_OWORD *)v4 = *(_OWORD *)(v0 + 104);
  *(_OWORD *)(v4 + 16) = v5;
  *(_OWORD *)(v4 + 32) = v6;
  *(_DWORD *)(v4 + 48) = v3;
  *(_QWORD *)(v4 + 56) = v2;
  *(_BYTE *)(v4 + 64) = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4570A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)(v9 + 192) = v18;
  *(_QWORD *)(v9 + 200) = v8;
  *(_BYTE *)(v9 + 267) = v16;
  *(_BYTE *)(v9 + 266) = v15;
  *(_QWORD *)(v9 + 176) = v14;
  *(_QWORD *)(v9 + 184) = v17;
  *(_OWORD *)(v9 + 144) = v12;
  *(_OWORD *)(v9 + 160) = v13;
  *(_QWORD *)(v9 + 128) = a7;
  *(_QWORD *)(v9 + 136) = a8;
  *(_QWORD *)(v9 + 112) = a5;
  *(_QWORD *)(v9 + 120) = a6;
  *(_QWORD *)(v9 + 96) = a3;
  *(_QWORD *)(v9 + 104) = a4;
  *(_QWORD *)(v9 + 80) = a1;
  *(_QWORD *)(v9 + 88) = a2;
  v10 = sub_20A5B8630();
  *(_QWORD *)(v9 + 208) = v10;
  *(_QWORD *)(v9 + 216) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v9 + 224) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A45713C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 232) = *(_QWORD *)(*(_QWORD *)(v0 + 200) + 112);
  return swift_task_switch();
}

uint64_t sub_20A45715C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 240) = v1;
  *v1 = v0;
  v1[1] = sub_20A4571E4;
  return sub_20A5B917C();
}

uint64_t sub_20A4571E4()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A457238()
{
  uint64_t v0;
  _QWORD *v1;

  *(_BYTE *)(v0 + 264) = *(_BYTE *)(v0 + 267);
  *(_BYTE *)(v0 + 265) = 1;
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 248) = v1;
  *v1 = v0;
  v1[1] = sub_20A4572DC;
  return sub_20A456160(v0 + 16, *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136));
}

uint64_t sub_20A4572DC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 256) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A457340()
{
  uint64_t v0;
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;

  v1 = *(_OWORD **)(v0 + 80);
  sub_20A4E75E8(*(_QWORD *)(v0 + 232));
  v2 = *(_OWORD *)(v0 + 16);
  v3 = *(_OWORD *)(v0 + 32);
  v4 = *(_OWORD *)(v0 + 64);
  v1[2] = *(_OWORD *)(v0 + 48);
  v1[3] = v4;
  *v1 = v2;
  v1[1] = v3;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A457390()
{
  uint64_t v0;

  sub_20A4E75E8(*(_QWORD *)(v0 + 232));
  return swift_task_switch();
}

uint64_t sub_20A4573D0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (_s17CoreODIEssentials10TapToRadarCACSgycfC_0())
  {
    v1 = *(void **)(v0 + 256);
    v3 = *(_QWORD *)(v0 + 216);
    v2 = *(_QWORD *)(v0 + 224);
    v4 = *(_QWORD *)(v0 + 208);
    v6 = *(_QWORD *)(v0 + 168);
    v5 = *(_QWORD *)(v0 + 176);
    sub_20A5B8624();
    TapToRadar.trigger(error:for:file:line:timestamp:)(v1, v6, v5, 0xD000000000000052, 0x800000020A5DBCF0, 467, v2);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  }
  swift_willThrow();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t static DIPODNHelper.convertAssessmentGUIDToData(_:)(uint64_t a1, uint64_t a2)
{
  return sub_20A458B5C(a1, a2);
}

uint64_t static DIPODNHelper.generateDUAData(tData:duration:isDeviceLocked:)(uint64_t a1, unint64_t a2, unint64_t a3, char a4, char a5)
{
  unsigned __int8 v6;

  v6 = 0;
  return sub_20A458D00(a1, a2, a3, a4 & 1, &v6, a5);
}

uint64_t static DIPODNHelper.generateDUAData(tData:duration:computationTaskType:isDeviceLocked:)(uint64_t a1, unint64_t a2, unint64_t a3, char a4, unsigned __int8 *a5, char a6)
{
  return sub_20A458D00(a1, a2, a3, a4 & 1, a5, a6);
}

uint64_t DIPODNHelper.deinit()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  sub_20A459254(*(void **)(v0 + 136), *(void **)(v0 + 144));
  swift_bridgeObjectRelease();
  sub_20A44CFC4(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192));
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t DIPODNHelper.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  sub_20A459254(*(void **)(v0 + 136), *(void **)(v0 + 144));
  swift_bridgeObjectRelease();
  sub_20A44CFC4(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192));
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t DIPODNHelper.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_20A457588()
{
  uint64_t v0;

  return v0;
}

id sub_20A457594(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9)
{
  void *v9;
  void *v16;
  void *v19;
  void *v20;
  unint64_t v21;
  void *v22;
  void *v23;
  id v24;

  if (a2 >> 60 == 15)
  {
    v16 = 0;
  }
  else
  {
    v16 = (void *)sub_20A5B8540();
    sub_20A44CFC4(a1, a2);
  }
  if (a4 >> 60 == 15)
  {
    v19 = 0;
    if (a6)
      goto LABEL_6;
LABEL_9:
    v20 = 0;
    v21 = a9;
    if (a7)
      goto LABEL_7;
    goto LABEL_10;
  }
  v19 = (void *)sub_20A5B8540();
  sub_20A44CFC4(a3, a4);
  if (!a6)
    goto LABEL_9;
LABEL_6:
  v20 = (void *)sub_20A5B887C();
  swift_bridgeObjectRelease();
  v21 = a9;
  if (a7)
  {
LABEL_7:
    v22 = (void *)sub_20A5B8A98();
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
LABEL_10:
  v22 = 0;
LABEL_11:
  if (v21 >> 60 == 15)
  {
    v23 = 0;
  }
  else
  {
    v23 = (void *)sub_20A5B8540();
    sub_20A44CFC4(a8, v21);
  }
  v24 = objc_msgSend(v9, sel_initWithQAy7FB3BSYJUwsIc_Zwvxi3fDtAHqlF0d_KufCqgU8RstLzBzT_BGiN5h2SLMRO6B9R_Jf7L4ypvXegQqMcE_zeXRCfLmM5cdkEtz_, v16, v19, a5, v20, v22, v23);

  return v24;
}

uint64_t sub_20A457724(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_20A4578C4(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_20A457740(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_20A457A2C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_20A45775C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_20A457C14(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_20A457778(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_20A457D80(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

unint64_t sub_20A457794()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2545F9CF0;
  if (!qword_2545F9CF0)
  {
    v1 = type metadata accessor for DIPODNHelper();
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for DIPODNHelper, v1);
    atomic_store(result, (unint64_t *)&qword_2545F9CF0);
  }
  return result;
}

uint64_t type metadata accessor for DIPODNHelper()
{
  return objc_opt_self();
}

void sub_20A4577F8(uint64_t a1)
{
  sub_20A454170(a1);
}

uint64_t sub_20A457800()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_20A457824()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_20A457850(uint64_t a1)
{
  uint64_t v1;

  sub_20A4547B8(a1, *(_QWORD *)(v1 + 16), *(NSObject **)(v1 + 24));
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t sub_20A457870(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_20A457F08(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_20A45788C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_20A4580E8(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_20A4578A8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_20A458270(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_20A4578C4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5298);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_20A5B8FFC();
  __break(1u);
  return result;
}

uint64_t sub_20A457A2C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9D48);
  v10 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545F9D38) - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1)
    goto LABEL_34;
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545F9D38) - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (char *)v13 + v17;
  v19 = (char *)a4 + v17;
  if ((a1 & 1) != 0)
  {
    if (v13 < a4 || v18 >= &v19[*(_QWORD *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v20 = *(_QWORD *)(v16 + 72) * v8;
  v21 = &v18[v20];
  v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  result = sub_20A5B8FFC();
  __break(1u);
  return result;
}

uint64_t sub_20A457C14(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9DC8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_20A5B8FFC();
  __break(1u);
  return result;
}

uint64_t sub_20A457D80(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9DF8);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8)
      memmove(v10 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545F9CE0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_20A5B8FFC();
  __break(1u);
  return result;
}

uint64_t sub_20A457F08(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5270);
  v10 = *(_QWORD *)(sub_20A5B82B8() - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1)
    goto LABEL_34;
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(sub_20A5B82B8() - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (char *)v13 + v17;
  v19 = (char *)a4 + v17;
  if ((a1 & 1) != 0)
  {
    if (v13 < a4 || v18 >= &v19[*(_QWORD *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v20 = *(_QWORD *)(v16 + 72) * v8;
  v21 = &v18[v20];
  v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  result = sub_20A5B8FFC();
  __break(1u);
  return result;
}

uint64_t sub_20A4580E8(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9D68);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8)
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9D70);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_20A5B8FFC();
  __break(1u);
  return result;
}

uint64_t sub_20A458270(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  size_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5278);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 + 31;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 6);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  v15 = v8 << 6;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[v15])
      memmove(v13, v14, v15);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_20A5B8FFC();
  __break(1u);
  return result;
}

uint64_t sub_20A4583D4()
{
  uint64_t v0;

  return sub_20A459838(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_20A4583E0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1[3] = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9D38);
  v1[4] = v2;
  v1[5] = *(_QWORD *)(v2 - 8);
  v1[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A458444()
{
  _QWORD *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[3];
  v2 = objc_msgSend(objc_allocWithZone((Class)ODNServices), sel_init);
  v0[7] = v2;
  v3 = swift_task_alloc();
  v0[8] = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  v4 = (_QWORD *)swift_task_alloc();
  v0[9] = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9D40);
  *v4 = v0;
  v4[1] = sub_20A458514;
  return sub_20A5B9200();
}

uint64_t sub_20A458514()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A458580()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  id v9;
  void *v10;
  _QWORD *v11;
  id v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = MEMORY[0x24BEE4AF8];
  if (*(_QWORD *)(v0 + 16))
    v2 = *(_QWORD *)(v0 + 16);
  else
    v2 = MEMORY[0x24BEE4AF8];
  if (!(v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_6;
LABEL_16:

    swift_bridgeObjectRelease();
    v7 = MEMORY[0x24BEE4AF8];
LABEL_17:
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v7);
  }
  swift_bridgeObjectRetain();
  v3 = sub_20A5B8FCC();
  swift_bridgeObjectRelease();
  if (!v3)
    goto LABEL_16;
LABEL_6:
  v18 = v1;
  result = sub_20A457740(0, v3 & ~(v3 >> 63), 0);
  if ((v3 & 0x8000000000000000) == 0)
  {
    v5 = 0;
    v6 = *(_QWORD *)(v0 + 40);
    v16 = v2 & 0xC000000000000001;
    v17 = *(_QWORD *)(v0 + 48);
    v7 = v18;
    v8 = v2;
    do
    {
      if (v16)
        v9 = (id)MEMORY[0x20BD25F48](v5, v2);
      else
        v9 = *(id *)(v2 + 8 * v5 + 32);
      v10 = v9;
      v11 = *(_QWORD **)(v0 + 48);
      *v11 = objc_msgSend(v9, sel_address, v16);
      *(_QWORD *)(v17 + 8) = objc_msgSend(v10, sel_location);
      v12 = objc_msgSend(v10, sel_updated);
      sub_20A5B860C();

      v14 = *(_QWORD *)(v18 + 16);
      v13 = *(_QWORD *)(v18 + 24);
      if (v14 >= v13 >> 1)
        sub_20A457740(v13 > 1, v14 + 1, 1);
      v15 = *(_QWORD *)(v0 + 48);
      ++v5;
      *(_QWORD *)(v18 + 16) = v14 + 1;
      sub_20A459C88(v15, v18+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v14, &qword_2545F9D38);
      v2 = v8;
    }
    while (v3 != v5);

    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t sub_20A4587A4()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4587EC(unsigned __int8 *a1)
{
  int v1;
  int v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  unsigned int v7;
  uint64_t v8;

  v1 = *a1;
  v2 = a1[1];
  v3 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v4 = (void *)sub_20A5B88F4();
  v5 = objc_msgSend(v3, sel_initWithSuiteName_, v4);

  if (v5)
  {
    v6 = (void *)sub_20A5B88F4();
    v7 = objc_msgSend(v5, sel_BOOLForKey_, v6);

    v8 = 1;
    if (v7)
      v8 = 2;
  }
  else
  {
    v8 = 1;
  }
  if (!v1)
    v8 |= 4uLL;
  if (v2)
    return v8;
  else
    return v8 | 8;
}

uint64_t sub_20A4588DC(char *a1, uint64_t a2)
{
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD v19[2];
  unsigned __int8 v20[24];
  uint64_t v21;

  v4 = qword_253EB5040;
  swift_bridgeObjectRetain();
  if (v4 != -1)
    swift_once();
  v5 = (id)qword_253EBC880;
  sub_20A5B8C54();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52C0);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_20A5BA9A0;
  swift_getErrorValue();
  v7 = sub_20A5B923C();
  v9 = v8;
  *(_QWORD *)(v6 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v6 + 64) = sub_20A450420();
  *(_QWORD *)(v6 + 32) = v7;
  *(_QWORD *)(v6 + 40) = v9;
  sub_20A5B87B0();

  swift_bridgeObjectRelease();
  v10 = (void *)sub_20A5B8414();
  v11 = objc_msgSend(v10, sel_code);

  v21 = MEMORY[0x24BEE1768];
  *(_QWORD *)v20 = v11;
  sub_20A44FD68(v20, v19);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_20A4764CC(v19, 13, isUniquelyReferenced_nonNull_native);
  v13 = a2;
  swift_bridgeObjectRelease();
  v14 = (void *)sub_20A5B8414();
  v15 = objc_msgSend(v14, sel_code);

  if (v15 == (id)-31)
  {
    v20[0] = 0x80;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0x656E6E6F63736944, 0xEC00000064657463, a1, v20, 0, v13, 0xD000000000000052, 0x800000020A5DBCF0, 0xD00000000000001BLL, 0x800000020A5DC1A0, 502);
  }
  else
  {
    v20[0] = 126;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000018, 0x800000020A5DC180, a1, v20, 0, v13, 0xD000000000000052, 0x800000020A5DBCF0, 0xD00000000000001BLL, 0x800000020A5DC1A0, 504);
  }
  v17 = v16;
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_20A458B5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  id v6;
  uint64_t v7;
  unsigned __int8 v9;

  v4 = sub_20A5B8504();
  if (v5 >> 60 == 15)
  {
    if (qword_253EB5040 != -1)
      swift_once();
    v6 = (id)qword_253EBC880;
    sub_20A5B8C48();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52C0);
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_20A5BA9A0;
    *(_QWORD *)(v7 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v7 + 64) = sub_20A450420();
    *(_QWORD *)(v7 + 32) = a1;
    *(_QWORD *)(v7 + 40) = a2;
    swift_bridgeObjectRetain();
    sub_20A5B87B0();

    swift_bridgeObjectRelease();
    v9 = 99;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001DLL, 0x800000020A5DC340, 0, &v9, 0, 0, 0xD000000000000052, 0x800000020A5DBCF0, 0xD00000000000001FLL, 0x800000020A5DC360, 512);
    swift_willThrow();
  }
  return v4;
}

uint64_t sub_20A458D00(uint64_t a1, unint64_t a2, unint64_t a3, char a4, unsigned __int8 *a5, char a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  BOOL v34;
  double v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD v40[2];
  int v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  char v45;
  char v46;
  char v47;
  double v48;

  v12 = 0;
  v13 = sub_20A5B8954();
  MEMORY[0x24BDAC7A8](v13, v14);
  if (a2 >> 60 == 15 || (a4 & 1) != 0)
    return v12;
  v41 = *a5;
  sub_20A45964C(a1, a2);
  v15 = sub_20A5B854C();
  v17 = v16;
  v18 = objc_msgSend((id)objc_opt_self(), sel_sharedConnection);
  if (!v18
    || (v19 = v18,
        v20 = objc_msgSend(v18, sel_effectiveBoolValueForSetting_, *MEMORY[0x24BE638E0]),
        v19,
        v20 != 1))
  {
    a3 = 0xBFF0000000000000;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52C0);
  v21 = swift_allocObject();
  v22 = MEMORY[0x24BEE13C8];
  *(_OWORD *)(v21 + 16) = xmmword_20A5BA9A0;
  v23 = MEMORY[0x24BEE1448];
  *(_QWORD *)(v21 + 56) = v22;
  *(_QWORD *)(v21 + 64) = v23;
  *(_QWORD *)(v21 + 32) = a3;
  v24 = sub_20A5B8930();
  v26 = v25;
  v48 = 0.0;
  v27 = MEMORY[0x24BDAC7A8](v24, v25);
  v40[-2] = &v48;
  if ((v26 & 0x1000000000000000) != 0 || !(v26 & 0x2000000000000000 | v28 & 0x1000000000000000))
  {
    sub_20A5B8E70();
  }
  else
  {
    MEMORY[0x24BDAC7A8](v27, &v40[-4]);
    v40[-2] = sub_20A459CF0;
    v40[-1] = v30;
    if ((v26 & 0x2000000000000000) != 0)
    {
      v42 = v29;
      v43 = v26 & 0xFFFFFFFFFFFFFFLL;
      v34 = (v29 > 0x20u || ((0x100003E01uLL >> v29) & 1) == 0)
         && (v33 = (_BYTE *)_swift_stdlib_strtod_clocale()) != 0
         && *v33 == 0;
      v47 = v34;
      swift_bridgeObjectRelease();
      goto LABEL_19;
    }
    if ((v29 & 0x1000000000000000) != 0)
    {
      v31 = (v26 & 0xFFFFFFFFFFFFFFFLL) + 32;
      v32 = v29 & 0xFFFFFFFFFFFFLL;
    }
    else
    {
      v40[1] = &v40[-4];
      v31 = sub_20A5B8EE8();
    }
    v47 = sub_20A59E21C(v31, v32, (void (*)(uint64_t *__return_ptr))sub_20A459DE4) & 1;
  }
  swift_bridgeObjectRelease();
LABEL_19:
  if (v47)
    v35 = v48;
  else
    v35 = -1.0;
  sub_20A5B8288();
  swift_allocObject();
  sub_20A5B827C();
  v42 = v15;
  v43 = v17;
  v44 = v35;
  v45 = v41;
  v46 = a6 & 1;
  sub_20A459D5C();
  v36 = sub_20A5B8270();
  v38 = v37;
  swift_bridgeObjectRelease();
  swift_release();
  v42 = v36;
  v43 = v38;
  sub_20A5B893C();
  sub_20A459DA0();
  v12 = sub_20A5B8924();
  sub_20A44CFC4(a1, a2);
  sub_20A44BD90(v36, v38);
  return v12;
}

void *sub_20A459254(void *result, void *a2)
{
  if (result)
  {

    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t method lookup function for DIPODNHelper()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DIPODNHelper.cacheDeviceDataForId(workflowID:fields:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of DIPODNHelper.retrieveDeviceDataForId(workflowID:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 312) + *(_QWORD *)(*(_QWORD *)v2 + 312));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_20A459310;
  return v8(a1, a2);
}

uint64_t sub_20A459310(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t dispatch thunk of DIPODNHelper.fetchConfigSync()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t destroy for ODNNearFieldData(id *a1)
{

  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ODNNearFieldData(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v5;
  v6 = v3;
  v7 = v4;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ODNNearFieldData(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t assignWithTake for ODNNearFieldData(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ODNNearFieldData(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ODNNearFieldData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ODNNearFieldData()
{
  return &type metadata for ODNNearFieldData;
}

void sub_20A45954C(uint64_t a1)
{
  uint64_t v1;

  sub_20A452F88(a1, *(void **)(v1 + 16));
}

uint64_t sub_20A459554()
{
  return objectdestroy_10Tm(&qword_2545F9D50);
}

uint64_t sub_20A459560(uint64_t a1)
{
  return sub_20A459BE0(a1, &qword_2545F9D50, (uint64_t (*)(uint64_t, uint64_t))sub_20A4530EC);
}

uint64_t sub_20A459574(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_20A4595AC(uint64_t a1)
{
  uint64_t v1;

  return sub_20A4E7ABC(a1, v1);
}

uint64_t sub_20A4595B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ODISignpost();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A4595F8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ODISignpost();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t sub_20A45964C(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_20A459690(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_20A45964C(a1, a2);
  return a1;
}

uint64_t sub_20A4596A4()
{
  uint64_t v0;

  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 64))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_20A4596F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  v4 = *(_QWORD *)(v1 + 24);
  v5 = *(_QWORD *)(v1 + 32);
  v6 = *(_QWORD *)(v1 + 40);
  v7 = *(_BYTE *)(v1 + 48);
  v8 = *(_QWORD *)(v1 + 56);
  v9 = *(_QWORD *)(v1 + 64);
  v10 = *(_QWORD *)(v1 + 72);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_20A4597C0;
  v11[11] = a1;
  v12 = (_QWORD *)swift_task_alloc();
  v11[12] = v12;
  *v12 = v11;
  v12[1] = sub_20A456FD8;
  return sub_20A454820((uint64_t)(v11 + 2), v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_20A4597C0()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_20A459808(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_20A459818(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_20A459828(uint64_t a1)
{
  uint64_t *v1;

  return sub_20A5053E4(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_20A459838(uint64_t (*a1)(void))
{
  return a1();
}

void sub_20A459840(uint64_t a1)
{
  uint64_t v1;

  sub_20A455AF0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_20A459848()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  swift_unknownObjectRelease();
  v1 = *(_QWORD *)(v0 + 40);
  if (v1 >> 60 != 15)
    sub_20A44BD90(*(_QWORD *)(v0 + 32), v1);
  v2 = *(_QWORD *)(v0 + 56);
  if (v2 >> 60 != 15)
    sub_20A44BD90(*(_QWORD *)(v0 + 48), v2);
  v3 = *(_QWORD *)(v0 + 72);
  if (v3 >> 60 != 15)
    sub_20A44BD90(*(_QWORD *)(v0 + 64), v3);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A4598D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  int v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v16 = *(_OWORD *)(v0 + 48);
  v14 = *(_QWORD *)(v0 + 72);
  v15 = *(_QWORD *)(v0 + 64);
  v13 = *(_DWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 104);
  v7 = *(_QWORD *)(v0 + 128);
  v8 = *(_BYTE *)(v0 + 136);
  v9 = *(_QWORD *)(v0 + 144);
  v10 = swift_task_alloc();
  v11 = *(_OWORD *)(v0 + 112);
  *(_QWORD *)(v1 + 16) = v10;
  *(_QWORD *)v10 = v1;
  *(_QWORD *)(v10 + 8) = sub_20A45A37C;
  *(_BYTE *)(v10 + 256) = v8;
  *(_QWORD *)(v10 + 168) = v7;
  *(_QWORD *)(v10 + 176) = v9;
  *(_OWORD *)(v10 + 152) = v11;
  *(_QWORD *)(v10 + 136) = v5;
  *(_QWORD *)(v10 + 144) = v6;
  *(_QWORD *)(v10 + 128) = v4;
  *(_DWORD *)(v10 + 248) = v13;
  *(_QWORD *)(v10 + 112) = v15;
  *(_QWORD *)(v10 + 120) = v14;
  *(_OWORD *)(v10 + 96) = v16;
  *(_QWORD *)(v10 + 80) = v2;
  *(_QWORD *)(v10 + 88) = v3;
  sub_20A459690(v2, v3);
  return swift_task_switch();
}

unint64_t sub_20A4599CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_253EB4808;
  if (!qword_253EB4808)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253EB5130);
    result = MEMORY[0x20BD26CEC](MEMORY[0x24BEE12B0], v1);
    atomic_store(result, (unint64_t *)&qword_253EB4808);
  }
  return result;
}

uint64_t sub_20A459A18(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6)
{
  if (a4 >> 60 != 15)
  {
    sub_20A44CFC4(result, a2);
    sub_20A44BD90(a3, a4);
    return sub_20A44CFC4(a5, a6);
  }
  return result;
}

uint64_t sub_20A459A70()
{
  return objectdestroy_10Tm(&qword_2545F9DB8);
}

uint64_t sub_20A459A7C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, int a7, void *a8)
{
  uint64_t v8;
  uint64_t v17;

  v17 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545F9DB8) - 8) + 80);
  return sub_20A455C54(a1, a2, a3, a4, a5, a6, a7, a8, v8 + ((v17 + 16) & ~v17));
}

void sub_20A459B24(uint64_t a1)
{
  uint64_t v1;

  sub_20A453130(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_20A459B2C()
{
  return objectdestroy_10Tm(&qword_2545F9DC0);
}

uint64_t sub_20A459B38(uint64_t a1)
{
  return sub_20A459BE0(a1, &qword_2545F9DC0, (uint64_t (*)(uint64_t, uint64_t))sub_20A4532EC);
}

void sub_20A459B4C(uint64_t a1)
{
  _QWORD *v1;

  sub_20A451F24(a1, v1);
}

uint64_t sub_20A459B54(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v3;

  return sub_20A45223C(a1, a2, a3, v3);
}

uint64_t sub_20A459B60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_20A4597C0;
  v3[5] = v2;
  return swift_task_switch();
}

uint64_t sub_20A459BC0()
{
  return objectdestroy_10Tm(&qword_2545F9DE8);
}

uint64_t sub_20A459BCC(uint64_t a1)
{
  return sub_20A459BE0(a1, &qword_2545F9DE8, (uint64_t (*)(uint64_t, uint64_t))sub_20A4534EC);
}

uint64_t sub_20A459BE0(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a2) - 8) + 80);
  return a3(a1, v3 + ((v5 + 16) & ~v5));
}

double sub_20A459C2C(_OWORD *a1)
{
  double result;

  result = 0.0;
  *a1 = xmmword_20A5BCDD0;
  a1[1] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[9] = 0u;
  a1[10] = 0u;
  return result;
}

uint64_t sub_20A459C54(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 8))();
  return a1;
}

uint64_t sub_20A459C88(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A459CCC(uint64_t a1)
{
  unint64_t v1;
  int v2;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 - 1;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

_BYTE *sub_20A459CF0@<X0>(_BYTE *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3;
  BOOL v4;
  uint64_t v5;
  BOOL v6;
  BOOL v7;

  v3 = *result;
  v4 = v3 > 0x20;
  v5 = (1 << v3) & 0x100003E01;
  v6 = v4 || v5 == 0;
  v7 = v6 && (result = (_BYTE *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

unint64_t sub_20A459D5C()
{
  unint64_t result;

  result = qword_253EB4430;
  if (!qword_253EB4430)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C796C, &type metadata for DUADataAug);
    atomic_store(result, (unint64_t *)&qword_253EB4430);
  }
  return result;
}

unint64_t sub_20A459DA0()
{
  unint64_t result;

  result = qword_253EB43E8;
  if (!qword_253EB43E8)
  {
    result = MEMORY[0x20BD26CEC](MEMORY[0x24BDCDE28], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_253EB43E8);
  }
  return result;
}

_QWORD *sub_20A459DE4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_20A59E270(*(_QWORD *(**)(uint64_t *__return_ptr))(v1 + 16), a1);
}

uint64_t sub_20A459DFC()
{
  return objectdestroy_10Tm(&qword_2545F9DF0);
}

uint64_t objectdestroy_10Tm(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80)), v2);
  return swift_deallocObject();
}

uint64_t sub_20A459E64(uint64_t a1, void *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9DF0);
  return sub_20A4542DC(a1, a2);
}

uint64_t objectdestroy_54Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20A459EE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_20A45A37C;
  v3[2] = v2;
  return swift_task_switch();
}

uint64_t destroy for ODNData(uint64_t *a1)
{
  unint64_t v2;
  uint64_t result;
  unint64_t v4;

  v2 = a1[1];
  if (v2 >> 60 != 15)
    sub_20A44BD90(*a1, v2);
  result = sub_20A44BD90(a1[2], a1[3]);
  v4 = a1[5];
  if (v4 >> 60 != 15)
    return sub_20A44BD90(a1[4], v4);
  return result;
}

uint64_t initializeWithCopy for ODNData(uint64_t a1, uint64_t *a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t *v8;
  unint64_t v9;
  uint64_t v10;

  v4 = a2[1];
  if (v4 >> 60 == 15)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    v5 = *a2;
    sub_20A45964C(*a2, a2[1]);
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v4;
  }
  v6 = a2[2];
  v7 = a2[3];
  sub_20A45964C(v6, v7);
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  v8 = a2 + 4;
  v9 = a2[5];
  if (v9 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)v8;
  }
  else
  {
    v10 = *v8;
    sub_20A45964C(*v8, a2[5]);
    *(_QWORD *)(a1 + 32) = v10;
    *(_QWORD *)(a1 + 40) = v9;
  }
  *(_DWORD *)(a1 + 48) = *((_DWORD *)a2 + 12);
  *(_QWORD *)(a1 + 56) = a2[7];
  return a1;
}

uint64_t assignWithCopy for ODNData(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;

  v4 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)(a1 + 8) >> 60 == 15)
  {
    if (v4 >> 60 != 15)
    {
      v5 = *(_QWORD *)a2;
      sub_20A45964C(*(_QWORD *)a2, *(_QWORD *)(a2 + 8));
      *(_QWORD *)a1 = v5;
      *(_QWORD *)(a1 + 8) = v4;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v4 >> 60 == 15)
  {
    sub_20A45A1A8(a1);
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  v6 = *(_QWORD *)a2;
  sub_20A45964C(*(_QWORD *)a2, *(_QWORD *)(a2 + 8));
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v4;
  sub_20A44BD90(v7, v8);
LABEL_8:
  v9 = *(_QWORD *)(a2 + 16);
  v10 = *(_QWORD *)(a2 + 24);
  sub_20A45964C(v9, v10);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v9;
  *(_QWORD *)(a1 + 24) = v10;
  sub_20A44BD90(v11, v12);
  v13 = (uint64_t *)(a2 + 32);
  v14 = *(_QWORD *)(a2 + 40);
  if (*(_QWORD *)(a1 + 40) >> 60 != 15)
  {
    if (v14 >> 60 != 15)
    {
      v16 = *v13;
      sub_20A45964C(*v13, *(_QWORD *)(a2 + 40));
      v17 = *(_QWORD *)(a1 + 32);
      v18 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 32) = v16;
      *(_QWORD *)(a1 + 40) = v14;
      sub_20A44BD90(v17, v18);
      goto LABEL_15;
    }
    sub_20A45A1A8(a1 + 32);
    goto LABEL_13;
  }
  if (v14 >> 60 == 15)
  {
LABEL_13:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)v13;
    goto LABEL_15;
  }
  v15 = *v13;
  sub_20A45964C(*v13, *(_QWORD *)(a2 + 40));
  *(_QWORD *)(a1 + 32) = v15;
  *(_QWORD *)(a1 + 40) = v14;
LABEL_15:
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  return a1;
}

uint64_t sub_20A45A1A8(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BDCDDE8] - 8) + 8))();
  return a1;
}

uint64_t assignWithTake for ODNData(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4 >> 60 == 15)
    goto LABEL_4;
  v5 = *(_QWORD *)(a2 + 8);
  if (v5 >> 60 == 15)
  {
    sub_20A45A1A8(a1);
LABEL_4:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_6;
  }
  v6 = *(_QWORD *)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  sub_20A44BD90(v6, v4);
LABEL_6:
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  sub_20A44BD90(v7, v8);
  v9 = (_QWORD *)(a2 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  if (v10 >> 60 != 15)
  {
    v11 = *(_QWORD *)(a2 + 40);
    if (v11 >> 60 != 15)
    {
      v12 = *(_QWORD *)(a1 + 32);
      *(_QWORD *)(a1 + 32) = *v9;
      *(_QWORD *)(a1 + 40) = v11;
      sub_20A44BD90(v12, v10);
      goto LABEL_11;
    }
    sub_20A45A1A8(a1 + 32);
  }
  *(_OWORD *)(a1 + 32) = *(_OWORD *)v9;
LABEL_11:
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for ODNData(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xD && *(_BYTE *)(a1 + 64))
    return (*(_DWORD *)a1 + 13);
  v3 = (((*(_QWORD *)(a1 + 24) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(_QWORD *)(a1 + 24) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for ODNData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 13;
    if (a3 >= 0xD)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if (a3 >= 0xD)
      *(_BYTE *)(result + 64) = 0;
    if (a2)
    {
      *(_QWORD *)(result + 16) = 0;
      *(_QWORD *)(result + 24) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ODNData()
{
  return &type metadata for ODNData;
}

unint64_t sub_20A45A3B0()
{
  sub_20A5B8E94();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  sub_20A5B899C();
  swift_bridgeObjectRetain();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  return 0xD000000000000010;
}

uint64_t sub_20A45A498(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_20A4E996C(*a1, *a2);
}

uint64_t sub_20A45A4A4()
{
  sub_20A5B929C();
  sub_20A5B8978();
  swift_bridgeObjectRelease();
  return sub_20A5B92CC();
}

uint64_t sub_20A45A54C()
{
  sub_20A5B8978();
  return swift_bridgeObjectRelease();
}

uint64_t sub_20A45A5D0()
{
  sub_20A5B929C();
  sub_20A5B8978();
  swift_bridgeObjectRelease();
  return sub_20A5B92CC();
}

uint64_t sub_20A45A674@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_20A45D06C();
  *a1 = result;
  return result;
}

void sub_20A45A6A0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xEF312E4E53412D31;
  v4 = 0xE500000000000000;
  v5 = 0x33765F4345;
  if (v2 != 1)
  {
    v5 = 0x48535F33765F4345;
    v4 = 0xE800000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x765F4343455F5645;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_20A45A708()
{
  sub_20A45E428();
  return sub_20A5B8A74();
}

uint64_t sub_20A45A764()
{
  sub_20A45E428();
  return sub_20A5B8A38();
}

uint64_t static EncryptedDataContainer.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v7;
  char v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v16[6];
  _OWORD v17[6];

  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(a2 + 24);
  if (!v4)
  {
    if (!v5)
    {
LABEL_11:
      v9 = *(_OWORD *)(a1 + 80);
      v16[2] = *(_OWORD *)(a1 + 64);
      v16[3] = v9;
      v10 = *(_OWORD *)(a1 + 112);
      v16[4] = *(_OWORD *)(a1 + 96);
      v16[5] = v10;
      v11 = *(_OWORD *)(a1 + 48);
      v16[0] = *(_OWORD *)(a1 + 32);
      v16[1] = v11;
      v12 = *(_OWORD *)(a2 + 80);
      v17[2] = *(_OWORD *)(a2 + 64);
      v17[3] = v12;
      v13 = *(_OWORD *)(a2 + 112);
      v17[4] = *(_OWORD *)(a2 + 96);
      v17[5] = v13;
      v14 = *(_OWORD *)(a2 + 48);
      v17[0] = *(_OWORD *)(a2 + 32);
      v17[1] = v14;
      v8 = sub_20A45CA3C((unsigned __int8 *)v16, (uint64_t)v17);
      return v8 & 1;
    }
LABEL_10:
    v8 = 0;
    return v8 & 1;
  }
  if (!v5)
    goto LABEL_10;
  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && v4 == v5)
    goto LABEL_11;
  v7 = sub_20A5B91AC();
  v8 = 0;
  if ((v7 & 1) != 0)
    goto LABEL_11;
  return v8 & 1;
}

uint64_t sub_20A45A860(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD v13[2];
  char v14;
  char v15;

  v13[0] = a4;
  v13[1] = a5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_253EB48F8);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A45E46C();
  sub_20A5B92FC();
  v15 = 0;
  sub_20A5B9110();
  if (!v5)
  {
    v14 = 1;
    sub_20A5B9110();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

BOOL sub_20A45A988(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_20A45A9A0()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000014;
  else
    return 0x7265646E6573;
}

uint64_t sub_20A45A9DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A45D0B4(a1, a2);
  *a3 = result;
  return result;
}

void sub_20A45AA00(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_20A45AA0C()
{
  sub_20A45E46C();
  return sub_20A5B9314();
}

uint64_t sub_20A45AA34()
{
  sub_20A45E46C();
  return sub_20A5B9320();
}

uint64_t sub_20A45AA5C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t result;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a2[2];
  v5 = a2[3];
  v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (v7 = sub_20A5B91AC(), result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
      return 1;
    else
      return sub_20A5B91AC();
  }
  return result;
}

uint64_t sub_20A45AAEC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = sub_20A45D198(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_20A45AB18(_QWORD *a1)
{
  uint64_t *v1;

  return sub_20A45A860(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_20A45AB34(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_20A45AB74 + 4 * byte_20A5BCEA0[a1]))(0xD00000000000001BLL, 0x800000020A5DC460);
}

uint64_t sub_20A45AB74()
{
  uint64_t v0;

  return v0 + 13;
}

uint64_t sub_20A45ABB8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE v11[16];
  char v12[8];
  _BYTE v13[8];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_253EB4918);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = &v11[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A45E4B0();
  sub_20A5B92FC();
  v12[0] = 0;
  sub_20A5B90D4();
  if (!v2)
  {
    v12[0] = 1;
    sub_20A5B90D4();
    v12[0] = 2;
    sub_20A5B90D4();
    sub_20A45E4F4(v3 + 48, (uint64_t)v13);
    sub_20A45E4F4((uint64_t)v13, (uint64_t)v12);
    v11[15] = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5130);
    sub_20A45E53C((unint64_t *)&unk_253EB47F8, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
    sub_20A5B9104();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_20A45AD70()
{
  unsigned __int8 *v0;

  return sub_20A45AB34(*v0);
}

uint64_t sub_20A45AD78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A45D344(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A45AD9C()
{
  sub_20A45E4B0();
  return sub_20A5B9314();
}

uint64_t sub_20A45ADC4()
{
  sub_20A45E4B0();
  return sub_20A5B9320();
}

uint64_t sub_20A45ADEC(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[3];
  uint64_t v6;
  _OWORD v7[3];
  uint64_t v8;

  v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v5[2] = *(_OWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 48);
  v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v7[2] = *(_OWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 48);
  return sub_20A45C924(v5, v7) & 1;
}

double sub_20A45AE44@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;
  uint64_t v8;

  sub_20A45D4DC(a1, (uint64_t *)v6);
  if (!v2)
  {
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    result = *(double *)&v7;
    *(_OWORD *)(a2 + 32) = v7;
    *(_QWORD *)(a2 + 48) = v8;
  }
  return result;
}

uint64_t sub_20A45AE90(_QWORD *a1)
{
  return sub_20A45ABB8(a1);
}

uint64_t sub_20A45AED0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  __int128 v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  char v17;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_253EB48E8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A45DBE0();
  sub_20A5B92FC();
  LOBYTE(v13) = *(_BYTE *)v3;
  v17 = 0;
  sub_20A45DC24();
  sub_20A5B9140();
  if (!v2)
  {
    v10 = *(_OWORD *)(v3 + 24);
    v13 = *(_OWORD *)(v3 + 8);
    v14 = v10;
    v17 = 1;
    sub_20A45DC68();
    sub_20A5B9140();
    v11 = *(_OWORD *)(v3 + 56);
    v13 = *(_OWORD *)(v3 + 40);
    v14 = v11;
    v15 = *(_OWORD *)(v3 + 72);
    v16 = *(_QWORD *)(v3 + 88);
    v17 = 2;
    sub_20A45DCAC();
    sub_20A5B9140();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_20A45B06C()
{
  uint64_t v0;
  unsigned int v1;

  v0 = sub_20A5B9008();
  swift_bridgeObjectRelease();
  if (v0 == 1)
    v1 = 1;
  else
    v1 = 2;
  if (v0)
    return v1;
  else
    return 0;
}

uint64_t sub_20A45B0BC(char a1)
{
  if ((a1 & 1) != 0)
    return 0x736D61726170;
  else
    return 1635017060;
}

unint64_t sub_20A45B0E8()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x656572674179656BLL;
  if (*v0 != 1)
    v1 = 6710379;
  if (*v0)
    return v1;
  else
    return 0xD000000000000013;
}

uint64_t sub_20A45B148@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A45D7DC(a1, a2);
  *a3 = result;
  return result;
}

void sub_20A45B16C(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_20A45B178()
{
  sub_20A45DBE0();
  return sub_20A5B9314();
}

uint64_t sub_20A45B1A0()
{
  sub_20A45DBE0();
  return sub_20A5B9320();
}

uint64_t sub_20A45B1C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  unsigned __int8 v12;
  __int128 v13;
  char v14;
  char v15;
  char v16;
  _OWORD v18[3];
  uint64_t v19;
  _OWORD v20[3];
  uint64_t v21;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(_OWORD *)(a1 + 56);
  v18[0] = *(_OWORD *)(a1 + 40);
  v18[1] = v6;
  v18[2] = *(_OWORD *)(a1 + 72);
  v19 = *(_QWORD *)(a1 + 88);
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(a2 + 32);
  v11 = *(_BYTE *)a1;
  v12 = *(_BYTE *)a2;
  v13 = *(_OWORD *)(a2 + 56);
  v20[0] = *(_OWORD *)(a2 + 40);
  v20[1] = v13;
  v20[2] = *(_OWORD *)(a2 + 72);
  v21 = *(_QWORD *)(a2 + 88);
  if ((sub_20A4E996C(v11, v12) & 1) != 0)
  {
    if (v2 == v7 && v3 == v8 || (v14 = sub_20A5B91AC(), v15 = 0, (v14 & 1) != 0))
    {
      if (v4 == v9 && v5 == v10 || (v16 = sub_20A5B91AC(), v15 = 0, (v16 & 1) != 0))
        v15 = sub_20A45C924(v18, v20);
    }
  }
  else
  {
    v15 = 0;
  }
  return v15 & 1;
}

double sub_20A45B2DC@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  _OWORD v8[6];

  sub_20A45D934(a1, (uint64_t)v8);
  if (!v2)
  {
    v5 = v8[3];
    a2[2] = v8[2];
    a2[3] = v5;
    v6 = v8[5];
    a2[4] = v8[4];
    a2[5] = v6;
    result = *(double *)v8;
    v7 = v8[1];
    *a2 = v8[0];
    a2[1] = v7;
  }
  return result;
}

uint64_t sub_20A45B324(_QWORD *a1)
{
  return sub_20A45AED0(a1);
}

uint64_t sub_20A45B338(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x20BD26CEC](&unk_20A5BD090, a3);
  return sub_20A5B91E8();
}

uint64_t sub_20A45B38C(uint64_t a1)
{
  MEMORY[0x20BD26CEC](&unk_20A5BD090, a1);
  return sub_20A5B8A50();
}

uint64_t sub_20A45B3D8()
{
  MEMORY[0x20BD26CEC](&unk_20A5BD090);
  return sub_20A5B8A68();
}

uint64_t sub_20A45B428()
{
  MEMORY[0x20BD26CEC](&unk_20A5BD090);
  return sub_20A5B8A5C();
}

uint64_t sub_20A45B478@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_20A45B06C();
  *a1 = result;
  return result;
}

uint64_t sub_20A45B4B0@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_20A45B0BC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_20A45B4E4()
{
  char *v0;

  return sub_20A45B0BC(*v0);
}

uint64_t sub_20A45B4F8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_20A45B06C();
  *a1 = result;
  return result;
}

uint64_t sub_20A45B528@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_20A45DBD8();
  *a1 = result;
  return result;
}

uint64_t sub_20A45B558(uint64_t a1)
{
  MEMORY[0x20BD26CEC](&unk_20A5BD1A8, a1);
  return sub_20A5B9314();
}

uint64_t sub_20A45B58C(uint64_t a1)
{
  MEMORY[0x20BD26CEC](&unk_20A5BD1A8, a1);
  return sub_20A5B9320();
}

uint64_t EncryptedDataContainer.data.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EncryptedDataContainer.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t EncryptedDataContainer.__deallocating_deinit()
{
  EncryptedDataContainer.deinit();
  return swift_deallocClassInstance();
}

uint64_t EncryptedDataContainer.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[2];
  char v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  char v25;

  v2 = v1;
  v4 = type metadata accessor for EncryptedDataContainer.CodingKeys(255, *(_QWORD *)(*(_QWORD *)v2 + 80), *(_QWORD *)(*(_QWORD *)v2 + 88), *(_QWORD *)(*(_QWORD *)v2 + 96));
  MEMORY[0x20BD26CEC](&unk_20A5BD1A8, v4);
  v5 = sub_20A5B914C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)v16 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A5B92FC();
  v17 = 0;
  v10 = v16[1];
  sub_20A5B90D4();
  if (!v10)
  {
    v11 = *(_OWORD *)(v2 + 40);
    v12 = *(_QWORD *)(v2 + 56);
    v13 = *(_QWORD *)(v2 + 64);
    v14 = *(_QWORD *)(v2 + 120);
    v17 = *(_BYTE *)(v2 + 32);
    v18 = v11;
    v19 = v12;
    v20 = v13;
    v21 = *(_OWORD *)(v2 + 72);
    v22 = *(_OWORD *)(v2 + 88);
    v23 = *(_OWORD *)(v2 + 104);
    v24 = v14;
    v25 = 1;
    sub_20A45CC08();
    sub_20A5B9140();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t EncryptedDataContainer.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  EncryptedDataContainer.init(from:)(a1);
  return v2;
}

uint64_t EncryptedDataContainer.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[2];
  char v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  char v25;

  v3 = type metadata accessor for EncryptedDataContainer.CodingKeys(255, *(_QWORD *)(*(_QWORD *)v1 + 80), *(_QWORD *)(*(_QWORD *)v1 + 88), *(_QWORD *)(*(_QWORD *)v1 + 96));
  MEMORY[0x20BD26CEC](&unk_20A5BD1A8, v3);
  v16[0] = sub_20A5B90BC();
  v4 = *(_QWORD *)(v16[0] - 8);
  MEMORY[0x24BDAC7A8](v16[0], v5);
  v7 = (char *)v16 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v8 = v16[1];
  sub_20A5B92F0();
  if (v8)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    v17 = 0;
    v9 = v16[0];
    *(_QWORD *)(v1 + 16) = sub_20A5B9038();
    *(_QWORD *)(v1 + 24) = v10;
    v25 = 1;
    sub_20A45CC4C();
    sub_20A5B90A4();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v9);
    v12 = v18;
    v13 = v19;
    v14 = v20;
    v15 = v24;
    *(_BYTE *)(v1 + 32) = v17;
    *(_OWORD *)(v1 + 40) = v12;
    *(_QWORD *)(v1 + 56) = v13;
    *(_QWORD *)(v1 + 64) = v14;
    *(_OWORD *)(v1 + 72) = v21;
    *(_OWORD *)(v1 + 88) = v22;
    *(_OWORD *)(v1 + 104) = v23;
    *(_QWORD *)(v1 + 120) = v15;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v1;
}

uint64_t sub_20A45BA54(uint64_t *a1, uint64_t *a2)
{
  return static EncryptedDataContainer.== infix(_:_:)(*a1, *a2) & 1;
}

uint64_t sub_20A45BA74@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = EncryptedDataContainer.__allocating_init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_20A45BA9C(_QWORD *a1)
{
  return EncryptedDataContainer.encode(to:)(a1);
}

uint64_t sub_20A45BABC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  BOOL v5;
  char v6;
  uint64_t result;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *i;
  BOOL v11;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_20A5B91AC(), result = 0, (v6 & 1) != 0))
  {
    v8 = v2 - 1;
    if (!v8)
      return 1;
    v9 = a2 + 7;
    for (i = a1 + 7; ; i += 2)
    {
      v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_20A5B91AC() & 1) == 0)
        break;
      v9 += 2;
      if (!--v8)
        return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_20A45BB80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v4 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v5 = *(_QWORD *)(a1 + 56);
  v7 = *(_BYTE *)(a1 + 64);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v29 = *(_QWORD *)(a2 + 56);
  v28 = v7;
  v27 = *(_BYTE *)(a2 + 64);
  v22 = *(unsigned __int8 *)(a1 + 65);
  v24 = *(unsigned __int8 *)(a1 + 89);
  v23 = *(unsigned __int8 *)(a2 + 89);
  v25 = *(_QWORD *)(a2 + 72);
  v26 = *(_QWORD *)(a1 + 72);
  if ((v7 & 1) == 0)
  {
    if ((*(_BYTE *)(a2 + 64) & 1) == 0)
      __asm { BR              X9 }
    goto LABEL_21;
  }
  if ((*(_BYTE *)(a2 + 64) & 1) == 0)
  {
    v18 = *(_BYTE *)(a1 + 64);
    swift_bridgeObjectRetain();
    v7 = v18;
LABEL_21:
    v19 = v7 ^ 1;
    v20 = v7;
    sub_20A45DDBC(v10, v29, v7 ^ 1);
    sub_20A45DDCC(v6, v5, v20);
    v15 = v10;
    v16 = v29;
    v17 = v19;
    goto LABEL_23;
  }
  if (v6 == v10 && v5 == v29)
  {
    v11 = *(_QWORD *)(a1 + 40);
    swift_bridgeObjectRetain();
    sub_20A45DDBC(v6, v5, 1);
    v12 = v9;
    swift_bridgeObjectRetain();
    sub_20A45DDBC(v6, v5, 1);
    sub_20A45DDBC(v6, v5, 1);
    sub_20A45DDBC(v6, v5, 1);
    sub_20A45DDCC(v6, v5, 1);
    v13 = v5;
    sub_20A45DDCC(v6, v5, 1);
LABEL_12:
    if ((v4 == v8 && v11 == v12 || (sub_20A5B91AC() & 1) != 0) && v26 == v25 && v24 == v23)
      __asm { BR              X8 }
    swift_bridgeObjectRelease();
    sub_20A45DDCC(v10, v29, v27);
    swift_bridgeObjectRelease();
    v15 = v6;
    v16 = v13;
    v17 = v28;
    goto LABEL_23;
  }
  v21 = sub_20A5B91AC();
  v11 = v3;
  swift_bridgeObjectRetain();
  sub_20A45DDBC(v6, v5, 1);
  v12 = v9;
  swift_bridgeObjectRetain();
  sub_20A45DDBC(v10, v29, 1);
  sub_20A45DDBC(v10, v29, 1);
  sub_20A45DDBC(v6, v5, 1);
  v13 = v5;
  sub_20A45DDCC(v6, v5, 1);
  sub_20A45DDCC(v10, v29, 1);
  if ((v21 & 1) != 0)
    goto LABEL_12;
  swift_bridgeObjectRelease();
  sub_20A45DDCC(v10, v29, 1);
  swift_bridgeObjectRelease();
  v15 = v6;
  v16 = v5;
  v17 = 1;
LABEL_23:
  sub_20A45DDCC(v15, v16, v17);
  return 0;
}

uint64_t sub_20A45C924(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  unint64_t v16;

  v4 = a1[1];
  v5 = a2[1];
  if (!v4)
  {
    if (v5)
      return 0;
    goto LABEL_10;
  }
  if (!v5)
    return 0;
  v6 = *a1 == *a2 && v4 == v5;
  if (v6 || (v7 = sub_20A5B91AC(), result = 0, (v7 & 1) != 0))
  {
LABEL_10:
    v9 = a1[3];
    v10 = a2[3];
    if (v9)
    {
      if (!v10)
        return 0;
      if (a1[2] != a2[2] || v9 != v10)
      {
        v11 = sub_20A5B91AC();
        result = 0;
        if ((v11 & 1) == 0)
          return result;
      }
    }
    else if (v10)
    {
      return 0;
    }
    v12 = a1[5];
    v13 = a2[5];
    if (v12)
    {
      if (v13)
      {
        if (a1[4] != a2[4] || v12 != v13)
        {
          v14 = sub_20A5B91AC();
          result = 0;
          if ((v14 & 1) == 0)
            return result;
        }
LABEL_26:
        v15 = a1[6];
        v16 = a2[6];
        result = (v15 | v16) == 0;
        if (v15)
        {
          if (v16)
            return sub_20A45BABC((_QWORD *)a1[6], (_QWORD *)v16);
        }
        return result;
      }
    }
    else if (!v13)
    {
      goto LABEL_26;
    }
    return 0;
  }
  return result;
}

uint64_t sub_20A45CA3C(unsigned __int8 *a1, uint64_t a2)
{
  int v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  __int128 v21;
  __int128 v22;
  _OWORD v24[3];
  uint64_t v25;
  _OWORD v26[3];
  uint64_t v27;

  v3 = *a1;
  v4 = 0xE500000000000000;
  v5 = 0x33765F4345;
  if (v3 != 1)
  {
    v5 = 0x48535F33765F4345;
    v4 = 0xE800000000000000;
  }
  if (*a1)
    v6 = v5;
  else
    v6 = 0x765F4343455F5645;
  if (v3)
    v7 = v4;
  else
    v7 = 0xEF312E4E53412D31;
  v9 = 0xE500000000000000;
  v10 = 0x33765F4345;
  if (*(_BYTE *)a2 != 1)
  {
    v10 = 0x48535F33765F4345;
    v9 = 0xE800000000000000;
  }
  if (*(_BYTE *)a2)
    v11 = v10;
  else
    v11 = 0x765F4343455F5645;
  if (*(_BYTE *)a2)
    v12 = v9;
  else
    v12 = 0xEF312E4E53412D31;
  if (v6 == v11 && v7 == v12)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v13 = sub_20A5B91AC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v14 = 0;
    if ((v13 & 1) == 0)
      return v14 & 1;
  }
  v15 = *((_QWORD *)a1 + 3);
  v16 = *((_QWORD *)a1 + 4);
  v17 = *(_QWORD *)(a2 + 24);
  v18 = *(_QWORD *)(a2 + 32);
  if (*((_QWORD *)a1 + 1) == *(_QWORD *)(a2 + 8) && *((_QWORD *)a1 + 2) == *(_QWORD *)(a2 + 16)
    || (v19 = sub_20A5B91AC(), v14 = 0, (v19 & 1) != 0))
  {
    if (v15 == v17 && v16 == v18 || (v20 = sub_20A5B91AC(), v14 = 0, (v20 & 1) != 0))
    {
      v21 = *(_OWORD *)(a1 + 56);
      v26[0] = *(_OWORD *)(a1 + 40);
      v26[1] = v21;
      v26[2] = *(_OWORD *)(a1 + 72);
      v27 = *((_QWORD *)a1 + 11);
      v22 = *(_OWORD *)(a2 + 56);
      v24[0] = *(_OWORD *)(a2 + 40);
      v24[1] = v22;
      v24[2] = *(_OWORD *)(a2 + 72);
      v25 = *(_QWORD *)(a2 + 88);
      v14 = sub_20A45C924(v26, v24);
    }
  }
  return v14 & 1;
}

uint64_t type metadata accessor for EncryptedDataContainer.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for EncryptedDataContainer.CodingKeys);
}

unint64_t sub_20A45CC08()
{
  unint64_t result;

  result = qword_253EB4540;
  if (!qword_253EB4540)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5BD180, &type metadata for EncryptionParams);
    atomic_store(result, (unint64_t *)&qword_253EB4540);
  }
  return result;
}

unint64_t sub_20A45CC4C()
{
  unint64_t result;

  result = qword_2545F9E10;
  if (!qword_2545F9E10)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5BD158, &type metadata for EncryptionParams);
    atomic_store(result, (unint64_t *)&qword_2545F9E10);
  }
  return result;
}

uint64_t sub_20A45CC94()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for EncryptedDataContainer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for EncryptedDataContainer);
}

uint64_t method lookup function for EncryptedDataContainer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EncryptedDataContainer.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t destroy for EncryptionParams()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EncryptionParams(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  v7 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v7;
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EncryptionParams(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy96_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t assignWithTake for EncryptionParams(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EncryptionParams(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 96))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EncryptionParams(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 96) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for EncryptionParams()
{
  return &type metadata for EncryptionParams;
}

uint64_t sub_20A45D02C()
{
  return swift_allocateGenericValueMetadata();
}

void sub_20A45D03C()
{
  JUMPOUT(0x20BD26CECLL);
}

void sub_20A45D04C()
{
  JUMPOUT(0x20BD26CECLL);
}

void sub_20A45D05C()
{
  JUMPOUT(0x20BD26CECLL);
}

uint64_t sub_20A45D06C()
{
  unint64_t v0;

  v0 = sub_20A5B9008();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_20A45D0B4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7265646E6573 && a2 == 0xE600000000000000;
  if (v2 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000020A5DC440)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_20A5B91AC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_20A45D198(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  char v12;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9E48);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A45E46C();
  sub_20A5B92F0();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v12 = 0;
    v8 = sub_20A5B9074();
    v11 = 1;
    swift_bridgeObjectRetain();
    sub_20A5B9074();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v8;
}

uint64_t sub_20A45D344(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD00000000000001BLL && a2 == 0x800000020A5DC460 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x800000020A5DC480 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000020A5DC4A0 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000020A5DC4C0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v5 = sub_20A5B91AC();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_20A45D4DC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;
  char v29;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9E50);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A45E4B0();
  sub_20A5B92F0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v29 = 0;
  v10 = sub_20A5B9038();
  v12 = v11;
  v23 = v10;
  v28 = 1;
  swift_bridgeObjectRetain();
  v13 = sub_20A5B9038();
  v24 = v14;
  v21 = v13;
  v27 = 2;
  swift_bridgeObjectRetain();
  v22 = 0;
  v20 = sub_20A5B9038();
  v16 = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5130);
  v26 = 3;
  sub_20A45E53C(&qword_253EB5138, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
  swift_bridgeObjectRetain();
  sub_20A5B9068();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  v17 = v25;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v18 = v24;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a2 = v23;
  a2[1] = v12;
  a2[2] = v21;
  a2[3] = v18;
  a2[4] = v20;
  a2[5] = v16;
  a2[6] = v17;
  return result;
}

uint64_t sub_20A45D7DC(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000013 && a2 == 0x800000020A5DC420 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656572674179656BLL && a2 == 0xEC000000746E656DLL || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 6710379 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_20A5B91AC();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_20A45D934@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  char v31;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9E18);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A45DBE0();
  sub_20A5B92F0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v31 = 0;
  sub_20A45DCF0();
  sub_20A5B90A4();
  v10 = v23;
  v31 = 1;
  sub_20A45DD34();
  sub_20A5B90A4();
  v30 = v10;
  v11 = v24;
  v12 = v26;
  v21 = v25;
  v22 = v23;
  v31 = 2;
  sub_20A45DD78();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_20A5B90A4();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  v13 = v24;
  v14 = v26;
  v19 = v25;
  v20 = v23;
  v15 = v28;
  v18 = v27;
  v16 = v29;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *(_BYTE *)a2 = v30;
  *(_QWORD *)(a2 + 8) = v22;
  *(_QWORD *)(a2 + 16) = v11;
  *(_QWORD *)(a2 + 24) = v21;
  *(_QWORD *)(a2 + 32) = v12;
  *(_QWORD *)(a2 + 40) = v20;
  *(_QWORD *)(a2 + 48) = v13;
  *(_QWORD *)(a2 + 56) = v19;
  *(_QWORD *)(a2 + 64) = v14;
  *(_QWORD *)(a2 + 72) = v18;
  *(_QWORD *)(a2 + 80) = v15;
  *(_QWORD *)(a2 + 88) = v16;
  return result;
}

uint64_t sub_20A45DBD8()
{
  return 2;
}

unint64_t sub_20A45DBE0()
{
  unint64_t result;

  result = qword_253EB4528;
  if (!qword_253EB4528)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5BD4EC, &type metadata for EncryptionParams.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_253EB4528);
  }
  return result;
}

unint64_t sub_20A45DC24()
{
  unint64_t result;

  result = qword_253EB4700;
  if (!qword_253EB4700)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5BD4C4, &type metadata for EncryptionParamsAlgorithmIdentifier);
    atomic_store(result, (unint64_t *)&qword_253EB4700);
  }
  return result;
}

unint64_t sub_20A45DC68()
{
  unint64_t result;

  result = qword_253EB4598;
  if (!qword_253EB4598)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5BD49C, &type metadata for KeyAgreementParams);
    atomic_store(result, (unint64_t *)&qword_253EB4598);
  }
  return result;
}

unint64_t sub_20A45DCAC()
{
  unint64_t result;

  result = qword_253EB4760;
  if (!qword_253EB4760)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5BD474, &type metadata for KDFParams);
    atomic_store(result, (unint64_t *)&qword_253EB4760);
  }
  return result;
}

unint64_t sub_20A45DCF0()
{
  unint64_t result;

  result = qword_2545F9E20;
  if (!qword_2545F9E20)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5BD44C, &type metadata for EncryptionParamsAlgorithmIdentifier);
    atomic_store(result, (unint64_t *)&qword_2545F9E20);
  }
  return result;
}

unint64_t sub_20A45DD34()
{
  unint64_t result;

  result = qword_2545F9E28;
  if (!qword_2545F9E28)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5BD424, &type metadata for KeyAgreementParams);
    atomic_store(result, (unint64_t *)&qword_2545F9E28);
  }
  return result;
}

unint64_t sub_20A45DD78()
{
  unint64_t result;

  result = qword_2545F9E30;
  if (!qword_2545F9E30)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5BD3FC, &type metadata for KDFParams);
    atomic_store(result, (unint64_t *)&qword_2545F9E30);
  }
  return result;
}

uint64_t sub_20A45DDBC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_20A45DDCC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x20BD26C80](a1, v6, a5);
}

ValueMetadata *type metadata accessor for EncryptionParams.CodingKeys()
{
  return &type metadata for EncryptionParams.CodingKeys;
}

uint64_t destroy for KDFParams()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for KDFParams(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for KDFParams(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for KDFParams(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for KDFParams(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 56))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for KDFParams(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 56) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for KDFParams()
{
  return &type metadata for KDFParams;
}

uint64_t destroy for KeyAgreementParams()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for KeyAgreementParams(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for KeyAgreementParams(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for KeyAgreementParams(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for KeyAgreementParams(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for KeyAgreementParams(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for KeyAgreementParams()
{
  return &type metadata for KeyAgreementParams;
}

uint64_t _s17CoreODIEssentials35EncryptionParamsAlgorithmIdentifierOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_20A45E288 + 4 * byte_20A5BCEE9[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_20A45E2BC + 4 * byte_20A5BCEE4[v4]))();
}

uint64_t sub_20A45E2BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A45E2C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A45E2CCLL);
  return result;
}

uint64_t sub_20A45E2D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A45E2E0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_20A45E2E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A45E2EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EncryptionParamsAlgorithmIdentifier()
{
  return &type metadata for EncryptionParamsAlgorithmIdentifier;
}

unint64_t sub_20A45E30C()
{
  unint64_t result;

  result = qword_2545F9E38;
  if (!qword_2545F9E38)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5BD2CC, &type metadata for EncryptionParamsAlgorithmIdentifier);
    atomic_store(result, (unint64_t *)&qword_2545F9E38);
  }
  return result;
}

unint64_t sub_20A45E354()
{
  unint64_t result;

  result = qword_2545F9E40;
  if (!qword_2545F9E40)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5BD3D4, &type metadata for EncryptionParams.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545F9E40);
  }
  return result;
}

unint64_t sub_20A45E39C()
{
  unint64_t result;

  result = qword_253EB4538;
  if (!qword_253EB4538)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5BD344, &type metadata for EncryptionParams.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_253EB4538);
  }
  return result;
}

unint64_t sub_20A45E3E4()
{
  unint64_t result;

  result = qword_253EB4530;
  if (!qword_253EB4530)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5BD36C, &type metadata for EncryptionParams.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_253EB4530);
  }
  return result;
}

unint64_t sub_20A45E428()
{
  unint64_t result;

  result = qword_253EB4708;
  if (!qword_253EB4708)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5BD254, &type metadata for EncryptionParamsAlgorithmIdentifier);
    atomic_store(result, (unint64_t *)&qword_253EB4708);
  }
  return result;
}

unint64_t sub_20A45E46C()
{
  unint64_t result;

  result = qword_253EB4580;
  if (!qword_253EB4580)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5BD6FC, &type metadata for KeyAgreementParams.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_253EB4580);
  }
  return result;
}

unint64_t sub_20A45E4B0()
{
  unint64_t result;

  result = qword_253EB4748;
  if (!qword_253EB4748)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5BD6AC, &type metadata for KDFParams.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_253EB4748);
  }
  return result;
}

uint64_t sub_20A45E4F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB4810);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A45E53C(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253EB5130);
    v8 = a2;
    result = MEMORY[0x20BD26CEC](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for KDFParams.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_20A45E5E8 + 4 * byte_20A5BCEF3[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_20A45E61C + 4 * byte_20A5BCEEE[v4]))();
}

uint64_t sub_20A45E61C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A45E624(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A45E62CLL);
  return result;
}

uint64_t sub_20A45E638(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A45E640);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_20A45E644(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A45E64C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for KDFParams.CodingKeys()
{
  return &type metadata for KDFParams.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ODNRequestTask.ODNatorTriggeringCase(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s17CoreODIEssentials18KeyAgreementParamsV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_20A45E744 + 4 * byte_20A5BCEFD[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_20A45E778 + 4 * byte_20A5BCEF8[v4]))();
}

uint64_t sub_20A45E778(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A45E780(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A45E788);
  return result;
}

uint64_t sub_20A45E794(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A45E79CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_20A45E7A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A45E7A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_20A45E7B4(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for KeyAgreementParams.CodingKeys()
{
  return &type metadata for KeyAgreementParams.CodingKeys;
}

unint64_t sub_20A45E7D4()
{
  unint64_t result;

  result = qword_2545F9E58;
  if (!qword_2545F9E58)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5BD5CC, &type metadata for KeyAgreementParams.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545F9E58);
  }
  return result;
}

unint64_t sub_20A45E81C()
{
  unint64_t result;

  result = qword_2545F9E60;
  if (!qword_2545F9E60)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5BD684, &type metadata for KDFParams.CodingKeys);
    atomic_store(result, &qword_2545F9E60);
  }
  return result;
}

unint64_t sub_20A45E864()
{
  unint64_t result;

  result = qword_253EB4758;
  if (!qword_253EB4758)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5BD5F4, &type metadata for KDFParams.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_253EB4758);
  }
  return result;
}

unint64_t sub_20A45E8AC()
{
  unint64_t result;

  result = qword_253EB4750;
  if (!qword_253EB4750)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5BD61C, &type metadata for KDFParams.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_253EB4750);
  }
  return result;
}

unint64_t sub_20A45E8F4()
{
  unint64_t result;

  result = qword_253EB4590;
  if (!qword_253EB4590)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5BD53C, &type metadata for KeyAgreementParams.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_253EB4590);
  }
  return result;
}

unint64_t sub_20A45E93C()
{
  unint64_t result;

  result = qword_253EB4588;
  if (!qword_253EB4588)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5BD564, &type metadata for KeyAgreementParams.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_253EB4588);
  }
  return result;
}

id sub_20A45E98C()
{
  uint64_t v0;
  id result;

  type metadata accessor for ODIiCloudAccountManager();
  v0 = swift_allocObject();
  swift_defaultActor_initialize();
  result = objc_msgSend((id)objc_opt_self(), sel_defaultStore);
  if (!result)
    result = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB4398]), sel_init);
  *(_QWORD *)(v0 + 112) = result;
  *(_QWORD *)(v0 + 120) = 0;
  qword_253EB6248 = v0;
  return result;
}

uint64_t static ODIiCloudAccountManager.shared.getter()
{
  if (qword_253EB6270 != -1)
    swift_once();
  return swift_retain();
}

uint64_t sub_20A45EA50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  return swift_task_switch();
}

uint64_t sub_20A45EA6C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  _BYTE *v5;

  v1 = (void *)sub_20A5B81EC();
  objc_msgSend(v1, sel_mutableCopy);

  sub_20A5B8DA4();
  swift_unknownObjectRelease();
  sub_20A45ED08();
  if (swift_dynamicCast())
  {
    v2 = *(void **)(v0 + 48);
    *(_QWORD *)(v0 + 80) = v2;
    objc_msgSend(v2, sel_ak_addClientInfoHeader);
    objc_msgSend(v2, sel_ak_addDeviceUDIDHeader);
    sub_20A5B8204();
    v3 = swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v3;
    *(_QWORD *)v3 = v0;
    *(_QWORD *)(v3 + 8) = sub_20A45EBC8;
    *(_QWORD *)(v3 + 56) = *(_QWORD *)(v0 + 72);
    *(_BYTE *)(v3 + 144) = 1;
    return swift_task_switch();
  }
  else
  {
    sub_20A45ED44();
    swift_allocError();
    *v5 = 2;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_20A45EBC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(*v3 + 96) = v2;
  swift_task_dealloc();
  if (!v2)
  {
    *(_QWORD *)(v6 + 104) = a2;
    *(_QWORD *)(v6 + 112) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_20A45EC40()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 80);
  sub_20A5B8228();

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A45ECB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 56);

  v2 = sub_20A5B8240();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_20A45ED08()
{
  unint64_t result;

  result = qword_253EB6280;
  if (!qword_253EB6280)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_253EB6280);
  }
  return result;
}

unint64_t sub_20A45ED44()
{
  unint64_t result;

  result = qword_2545F9E70;
  if (!qword_2545F9E70)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5BD8D0, &type metadata for ODIiCloudAccountManager.AccountError);
    atomic_store(result, &qword_2545F9E70);
  }
  return result;
}

uint64_t sub_20A45ED88()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 344) = v0;
  return swift_task_switch();
}

uint64_t sub_20A45EDA0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t inited;
  uint64_t v6;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  _BYTE *v13;

  v1 = *(_QWORD *)(v0 + 344);
  v2 = *(void **)(v1 + 120);
  if (v2)
    goto LABEL_4;
  v3 = objc_msgSend(*(id *)(v1 + 112), sel_aida_accountForPrimaryiCloudAccount);
  v4 = *(void **)(v1 + 120);
  *(_QWORD *)(v1 + 120) = v3;

  v2 = *(void **)(v1 + 120);
  if (v2)
  {
    v1 = *(_QWORD *)(v0 + 344);
LABEL_4:
    *(_QWORD *)(v0 + 352) = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9E88);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_20A5BA9B0;
    *(_QWORD *)(v0 + 296) = sub_20A5B8900();
    *(_QWORD *)(v0 + 304) = v6;
    v7 = v2;
    sub_20A5B8E34();
    *(_QWORD *)(inited + 96) = MEMORY[0x24BEE1328];
    *(_BYTE *)(inited + 72) = 1;
    *(_QWORD *)(v0 + 312) = sub_20A5B8900();
    *(_QWORD *)(v0 + 320) = v8;
    sub_20A5B8E34();
    *(_QWORD *)(inited + 168) = __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5130);
    *(_QWORD *)(inited + 144) = &unk_24C314D10;
    sub_20A46A2E0(inited);
    v9 = *(void **)(v1 + 112);
    v10 = v7;
    v11 = sub_20A5B887C();
    *(_QWORD *)(v0 + 360) = v11;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 56) = v0 + 328;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_20A45F010;
    *(_QWORD *)(v0 + 288) = swift_continuation_init();
    *(_QWORD *)(v0 + 256) = MEMORY[0x24BDAC760];
    *(_QWORD *)(v0 + 264) = 0x40000000;
    *(_QWORD *)(v0 + 272) = sub_20A45F408;
    *(_QWORD *)(v0 + 280) = &block_descriptor_2;
    objc_msgSend(v9, sel_renewCredentialsForAccount_options_completion_, v10, v11, v0 + 256);
    return swift_continuation_await();
  }
  sub_20A45ED44();
  swift_allocError();
  *v13 = 0;
  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A45F010()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 368) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_20A45F070()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  void *v7;
  uint8_t *v8;
  uint64_t (*v9)(void);
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  const char *v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  os_log_type_t v18;
  uint8_t *v19;
  void *v20;
  _BYTE *v21;

  v1 = *(void **)(v0 + 360);
  v2 = *(_QWORD *)(v0 + 328);

  if (v2 == 2)
  {
    if (qword_253EB5048 != -1)
      swift_once();
    v10 = sub_20A5B8804();
    __swift_project_value_buffer(v10, (uint64_t)qword_253EBC888);
    v11 = sub_20A5B87EC();
    v12 = sub_20A5B8C48();
    if (!os_log_type_enabled(v11, v12))
      goto LABEL_23;
    v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v13 = 0;
    v14 = "GrandSlamRenewal-Failed";
LABEL_17:
    _os_log_impl(&dword_20A443000, v11, v12, v14, v13, 2u);
    v16 = v13;
    goto LABEL_22;
  }
  if (v2 == 1)
  {
    if (qword_253EB5048 != -1)
      swift_once();
    v15 = sub_20A5B8804();
    __swift_project_value_buffer(v15, (uint64_t)qword_253EBC888);
    v11 = sub_20A5B87EC();
    v12 = sub_20A5B8C48();
    if (!os_log_type_enabled(v11, v12))
      goto LABEL_23;
    v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v13 = 0;
    v14 = "GrandSlamRenewal-Rejected";
    goto LABEL_17;
  }
  if (v2)
  {
    if (qword_253EB5048 != -1)
      swift_once();
    v17 = sub_20A5B8804();
    __swift_project_value_buffer(v17, (uint64_t)qword_253EBC888);
    v11 = sub_20A5B87EC();
    v18 = sub_20A5B8C60();
    if (!os_log_type_enabled(v11, v18))
      goto LABEL_23;
    v19 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v19 = 134217984;
    *(_QWORD *)(v0 + 336) = v2;
    sub_20A5B8D50();
    _os_log_impl(&dword_20A443000, v11, v18, "GrandSlamRenewal-UnexpectedResultType: %ld", v19, 0xCu);
    v16 = v19;
LABEL_22:
    MEMORY[0x20BD26DB8](v16, -1, -1);
LABEL_23:
    v20 = *(void **)(v0 + 352);

    sub_20A45ED44();
    swift_allocError();
    *v21 = 1;
    swift_willThrow();

    v9 = *(uint64_t (**)(void))(v0 + 8);
    return v9();
  }
  if (qword_253EB5048 != -1)
    swift_once();
  v3 = sub_20A5B8804();
  __swift_project_value_buffer(v3, (uint64_t)qword_253EBC888);
  v4 = sub_20A5B87EC();
  v5 = sub_20A5B8C48();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(void **)(v0 + 352);
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_20A443000, v4, v5, "GrandSlamRenewal-Success", v8, 2u);
    MEMORY[0x20BD26DB8](v8, -1, -1);
  }

  v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_20A45F3BC()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 360);
  v2 = *(void **)(v0 + 352);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A45F408(uint64_t a1, uint64_t a2, void *a3)
{
  _QWORD *v4;
  id v5;

  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52D0);
    swift_allocError();
    *v4 = a3;
    v5 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    **(_QWORD **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 64) + 40) = a2;
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_20A45F488(char a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 56) = v1;
  *(_BYTE *)(v2 + 144) = a1;
  return swift_task_switch();
}

uint64_t sub_20A45F4A4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v23;
  _BYTE *v24;
  _QWORD *v25;
  _BYTE *v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(void **)(v1 + 120);
  if (v2
    || (v3 = objc_msgSend(*(id *)(v1 + 112), sel_aida_accountForPrimaryiCloudAccount),
        v4 = *(void **)(v1 + 120),
        *(_QWORD *)(v1 + 120) = v3,
        v4,
        (v2 = *(void **)(v1 + 120)) != 0))
  {
    *(_QWORD *)(v0 + 64) = v2;
    v5 = v2;
    v6 = objc_msgSend(v5, sel_aida_alternateDSID);
    if (v6)
    {
      v7 = v6;
      v8 = sub_20A5B8900();
      v10 = v9;

      *(_QWORD *)(v0 + 72) = v8;
      *(_QWORD *)(v0 + 80) = v10;
      v11 = (void *)sub_20A5B88F4();
      v12 = objc_msgSend(v5, sel_aida_tokenWithExpiryCheckForService_, v11);

      if (v12)
      {
        v13 = sub_20A5B8900();
        v15 = v14;

        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52C0);
        v16 = swift_allocObject();
        *(_OWORD *)(v16 + 16) = xmmword_20A5BA9B0;
        v17 = MEMORY[0x24BEE0D00];
        *(_QWORD *)(v16 + 56) = MEMORY[0x24BEE0D00];
        v18 = sub_20A450420();
        *(_QWORD *)(v16 + 32) = v8;
        *(_QWORD *)(v16 + 40) = v10;
        *(_QWORD *)(v16 + 96) = v17;
        *(_QWORD *)(v16 + 104) = v18;
        *(_QWORD *)(v16 + 64) = v18;
        *(_QWORD *)(v16 + 72) = v13;
        *(_QWORD *)(v16 + 80) = v15;
        v19 = sub_20A5B8930();
        v21 = v20;

        return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v19, v21);
      }
      v25 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 88) = v25;
      *v25 = v0;
      v25[1] = sub_20A45F924;
      v25[43] = *(_QWORD *)(v0 + 56);
      return swift_task_switch();
    }
    sub_20A45ED44();
    v23 = (void *)swift_allocError();
    *v24 = 0;
    swift_willThrow();

  }
  else
  {
    sub_20A45ED44();
    v23 = (void *)swift_allocError();
    *v26 = 0;
    swift_willThrow();
  }
  *(_QWORD *)(v0 + 104) = v23;
  if (*(_BYTE *)(v0 + 144) == 1)
  {
    v27 = *(_QWORD *)(v0 + 56);
    v28 = objc_msgSend(*(id *)(v27 + 112), sel_aida_accountForPrimaryiCloudAccount);
    v29 = *(void **)(v27 + 120);
    *(_QWORD *)(v27 + 120) = v28;

    v30 = swift_task_alloc();
    *(_QWORD *)(v0 + 112) = v30;
    *(_QWORD *)v30 = v0;
    *(_QWORD *)(v30 + 8) = sub_20A45FD48;
    *(_QWORD *)(v30 + 56) = *(_QWORD *)(v0 + 56);
    *(_BYTE *)(v30 + 144) = 0;
    return swift_task_switch();
  }
  if (qword_253EB5048 != -1)
    swift_once();
  v31 = sub_20A5B8804();
  __swift_project_value_buffer(v31, (uint64_t)qword_253EBC888);
  v32 = v23;
  v33 = v23;
  v34 = sub_20A5B87EC();
  v35 = sub_20A5B8C54();
  if (os_log_type_enabled(v34, v35))
  {
    v36 = (uint8_t *)swift_slowAlloc();
    v37 = swift_slowAlloc();
    v40 = v37;
    *(_DWORD *)v36 = 136315138;
    swift_getErrorValue();
    v38 = sub_20A5B923C();
    *(_QWORD *)(v0 + 48) = sub_20A503EE0(v38, v39, &v40);
    sub_20A5B8D50();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_20A443000, v34, v35, "Error getting Auth Header %s", v36, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x20BD26DB8](v37, -1, -1);
    MEMORY[0x20BD26DB8](v36, -1, -1);
  }
  else
  {

  }
  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A45F924()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A45F988()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v17;
  void *v18;
  _BYTE *v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;

  v1 = *(void **)(v0 + 64);
  v2 = (void *)sub_20A5B88F4();
  v3 = objc_msgSend(v1, sel_aida_tokenWithExpiryCheckForService_, v2);

  v4 = *(_QWORD *)(v0 + 80);
  if (v3)
  {
    v5 = *(void **)(v0 + 64);
    v6 = *(_QWORD *)(v0 + 72);
    v7 = sub_20A5B8900();
    v9 = v8;

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52C0);
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_20A5BA9B0;
    v11 = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v10 + 56) = MEMORY[0x24BEE0D00];
    v12 = sub_20A450420();
    *(_QWORD *)(v10 + 32) = v6;
    *(_QWORD *)(v10 + 40) = v4;
    *(_QWORD *)(v10 + 96) = v11;
    *(_QWORD *)(v10 + 104) = v12;
    *(_QWORD *)(v10 + 64) = v12;
    *(_QWORD *)(v10 + 72) = v7;
    *(_QWORD *)(v10 + 80) = v9;
    v13 = sub_20A5B8930();
    v15 = v14;

    return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v13, v15);
  }
  else
  {
    v17 = *(void **)(v0 + 64);
    swift_bridgeObjectRelease();
    sub_20A45ED44();
    v18 = (void *)swift_allocError();
    *v19 = 0;
    swift_willThrow();

    *(_QWORD *)(v0 + 104) = v18;
    if (*(_BYTE *)(v0 + 144) == 1)
    {
      v20 = *(_QWORD *)(v0 + 56);
      v21 = objc_msgSend(*(id *)(v20 + 112), sel_aida_accountForPrimaryiCloudAccount);
      v22 = *(void **)(v20 + 120);
      *(_QWORD *)(v20 + 120) = v21;

      v23 = swift_task_alloc();
      *(_QWORD *)(v0 + 112) = v23;
      *(_QWORD *)v23 = v0;
      *(_QWORD *)(v23 + 8) = sub_20A45FD48;
      *(_QWORD *)(v23 + 56) = *(_QWORD *)(v0 + 56);
      *(_BYTE *)(v23 + 144) = 0;
      return swift_task_switch();
    }
    else
    {
      if (qword_253EB5048 != -1)
        swift_once();
      v24 = sub_20A5B8804();
      __swift_project_value_buffer(v24, (uint64_t)qword_253EBC888);
      v25 = v18;
      v26 = v18;
      v27 = sub_20A5B87EC();
      v28 = sub_20A5B8C54();
      if (os_log_type_enabled(v27, v28))
      {
        v29 = (uint8_t *)swift_slowAlloc();
        v30 = swift_slowAlloc();
        v33 = v30;
        *(_DWORD *)v29 = 136315138;
        swift_getErrorValue();
        v31 = sub_20A5B923C();
        *(_QWORD *)(v0 + 48) = sub_20A503EE0(v31, v32, &v33);
        sub_20A5B8D50();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_20A443000, v27, v28, "Error getting Auth Header %s", v29, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x20BD26DB8](v30, -1, -1);
        MEMORY[0x20BD26DB8](v29, -1, -1);
      }
      else
      {

      }
      swift_willThrow();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
  }
}

uint64_t sub_20A45FD48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(*v3 + 120) = v2;
  swift_task_dealloc();
  if (!v2)
  {
    *(_QWORD *)(v6 + 128) = a2;
    *(_QWORD *)(v6 + 136) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_20A45FDC0()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 128));
}

uint64_t sub_20A45FDF8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;

  v1 = *(void **)(v0 + 64);
  swift_bridgeObjectRelease();

  v2 = *(void **)(v0 + 96);
  *(_QWORD *)(v0 + 104) = v2;
  if (*(_BYTE *)(v0 + 144) == 1)
  {
    v3 = *(_QWORD *)(v0 + 56);
    v4 = objc_msgSend(*(id *)(v3 + 112), sel_aida_accountForPrimaryiCloudAccount);
    v5 = *(void **)(v3 + 120);
    *(_QWORD *)(v3 + 120) = v4;

    v6 = swift_task_alloc();
    *(_QWORD *)(v0 + 112) = v6;
    *(_QWORD *)v6 = v0;
    *(_QWORD *)(v6 + 8) = sub_20A45FD48;
    *(_QWORD *)(v6 + 56) = *(_QWORD *)(v0 + 56);
    *(_BYTE *)(v6 + 144) = 0;
    return swift_task_switch();
  }
  else
  {
    if (qword_253EB5048 != -1)
      swift_once();
    v8 = sub_20A5B8804();
    __swift_project_value_buffer(v8, (uint64_t)qword_253EBC888);
    v9 = v2;
    v10 = v2;
    v11 = sub_20A5B87EC();
    v12 = sub_20A5B8C54();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      v14 = swift_slowAlloc();
      v17 = v14;
      *(_DWORD *)v13 = 136315138;
      swift_getErrorValue();
      v15 = sub_20A5B923C();
      *(_QWORD *)(v0 + 48) = sub_20A503EE0(v15, v16, &v17);
      sub_20A5B8D50();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_20A443000, v11, v12, "Error getting Auth Header %s", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x20BD26DB8](v14, -1, -1);
      MEMORY[0x20BD26DB8](v13, -1, -1);
    }
    else
    {

    }
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_20A46007C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ODIiCloudAccountManager.deinit()
{
  uint64_t v0;

  swift_defaultActor_destroy();
  return v0;
}

uint64_t ODIiCloudAccountManager.__deallocating_deinit()
{
  uint64_t v0;

  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t ODIiCloudAccountManager.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_20A460114(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *v2;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_20A4597C0;
  v7[8] = a2;
  v7[9] = v6;
  v7[7] = a1;
  return swift_task_switch();
}

void *sub_20A460188(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  uint64_t v4;

  if (__src)
    v4 = a2 - (_QWORD)__src;
  else
    v4 = 0;
  if (!__dst)
  {
    if (v4 <= 0)
      return __src;
LABEL_10:
    __src = (void *)sub_20A5B8FFC();
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v4)
    goto LABEL_10;
  if (__src)
    return memmove(__dst, __src, a2 - (_QWORD)__src);
  return __src;
}

uint64_t sub_20A46021C@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

uint64_t dispatch thunk of AccountRequestHeaderProvider.applyAuthorisationHeaders(toRequest:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 8) + *(_QWORD *)(a4 + 8));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_20A45A37C;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_20A4602CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 8) + *(_QWORD *)(a2 + 8));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_20A460338;
  return v7(a1, a2);
}

uint64_t sub_20A460338(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v6;

  v6 = *v2;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
}

uint64_t sub_20A460390(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 8) + *(_QWORD *)(a2 + 8));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_20A4597C0;
  return v7(a1, a2);
}

uint64_t type metadata accessor for ODIiCloudAccountManager()
{
  return objc_opt_self();
}

uint64_t method lookup function for ODIiCloudAccountManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ODIiCloudAccountManager.applyAuthorisationHeaders(toRequest:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 160) + *(_QWORD *)(*(_QWORD *)v2 + 160));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_20A45A37C;
  return v8(a1, a2);
}

uint64_t dispatch thunk of ODIiCloudAccountManager.renewToken()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 168) + *(_QWORD *)(*(_QWORD *)v0 + 168));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_20A45A37C;
  return v4();
}

uint64_t storeEnumTagSinglePayload for ODIiCloudAccountManager.AccountError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_20A460540 + 4 * byte_20A5BD765[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_20A460574 + 4 * byte_20A5BD760[v4]))();
}

uint64_t sub_20A460574(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A46057C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A460584);
  return result;
}

uint64_t sub_20A460590(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A460598);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_20A46059C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A4605A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ODIiCloudAccountManager.AccountError()
{
  return &type metadata for ODIiCloudAccountManager.AccountError;
}

unint64_t sub_20A4605C4()
{
  unint64_t result;

  result = qword_2545F9EC0;
  if (!qword_2545F9EC0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5BD8A8, &type metadata for ODIiCloudAccountManager.AccountError);
    atomic_store(result, (unint64_t *)&qword_2545F9EC0);
  }
  return result;
}

uint64_t sub_20A460608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t sub_20A460610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 16))();
}

uint64_t sub_20A460618(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 24))();
}

uint64_t sub_20A460620(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_20A460628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a6 + 40)
                                                                                     + *(_QWORD *)(a6 + 40));
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_20A4597C0;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_20A4606C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t sub_20A4606D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t sub_20A4606D8()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ODNAssessmentsFactory()
{
  return objc_opt_self();
}

uint64_t timeoutTask<A>(maxNanoSeconds:completionAfterTimeout:body:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[7] = a6;
  v7[8] = a7;
  v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  v7[2] = a1;
  return swift_task_switch();
}

uint64_t sub_20A46072C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  _QWORD *v6;
  _QWORD *v8;
  uint64_t (*v9)(_QWORD);

  v1 = *(_QWORD *)(v0 + 24);
  if (v1 == -1)
  {
    v9 = (uint64_t (*)(_QWORD))(**(int **)(v0 + 48) + *(_QWORD *)(v0 + 48));
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 96) = v8;
    *v8 = v0;
    v8[1] = sub_20A4608A4;
    return v9(*(_QWORD *)(v0 + 16));
  }
  else
  {
    v2 = *(_QWORD *)(v0 + 64);
    v3 = swift_task_alloc();
    *(_QWORD *)(v0 + 72) = v3;
    v5 = *(_OWORD *)(v0 + 32);
    v4 = *(_OWORD *)(v0 + 48);
    *(_QWORD *)(v3 + 16) = v2;
    *(_QWORD *)(v3 + 24) = v1;
    *(_OWORD *)(v3 + 32) = v4;
    *(_OWORD *)(v3 + 48) = v5;
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 80) = v6;
    *v6 = v0;
    v6[1] = sub_20A460830;
    return sub_20A5B9200();
  }
}

uint64_t sub_20A460830()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 88) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_20A4608A4()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_20A4608EC()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A460920(uint64_t a1)
{
  swift_allocObject();
  return sub_20A460958(a1);
}

uint64_t sub_20A460958(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v12;
  uint64_t v14;

  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_253EB52D0);
  v3 = sub_20A5B8B1C();
  v4 = sub_20A5B8D38();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v14 - v7;
  swift_defaultActor_initialize();
  v9 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 96);
  v10 = *(_QWORD *)(v3 - 8);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
  v11(v9, 1, 1, v3);
  v12 = (_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 104));
  *v12 = 0;
  v12[1] = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v8, a1, v3);
  v11((uint64_t)v8, 0, 1, v3);
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 40))(v9, v8, v4);
  swift_endAccess();
  return v1;
}

uint64_t sub_20A460AA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t result;
  void (*v12)(uint64_t);
  uint64_t v13;
  _BYTE v14[24];

  v3 = *v1;
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_253EB52D0);
  v4 = sub_20A5B8B1C();
  v5 = sub_20A5B8D38();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = &v14[-v8];
  v10 = (uint64_t)v1 + *(_QWORD *)(v3 + 96);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(a1, v10, v5);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v9, 1, 1, v4);
  swift_beginAccess();
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v6 + 40))(v10, v9, v5);
  result = swift_endAccess();
  v12 = *(void (**)(uint64_t))((char *)v1 + *(_QWORD *)(*v1 + 104));
  if (v12)
  {
    v13 = swift_retain();
    v12(v13);
    return sub_20A459818((uint64_t)v12);
  }
  return result;
}

uint64_t sub_20A460BF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 104));
  v4 = *v3;
  *v3 = a1;
  v3[1] = a2;
  swift_retain();
  return sub_20A459818(v4);
}

uint64_t sub_20A460C2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 96);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_253EB52D0);
  sub_20A5B8B1C();
  v2 = sub_20A5B8D38();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_20A459818(*(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 104)));
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_20A460CC0()
{
  sub_20A460C2C();
  return swift_defaultActor_deallocate();
}

uint64_t sub_20A460CD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v34;
  uint64_t v35;

  v35 = a5;
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB5180);
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_253EB52D0);
  v17 = sub_20A5B8B1C();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17, v19);
  v21 = (char *)&v34 - v20;
  type metadata accessor for TimeoutHelper(0, a7, v22, v23);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v21, a1, v17);
  swift_allocObject();
  v24 = sub_20A460958((uint64_t)v21);
  v25 = sub_20A5B8B64();
  v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56);
  v26(v16, 1, 1, v25);
  v27 = (_QWORD *)swift_allocObject();
  v27[2] = 0;
  v27[3] = 0;
  v27[4] = a2;
  v27[5] = v24;
  swift_retain();
  v28 = sub_20A4B2644((uint64_t)v16, (uint64_t)&unk_2545F9EE0, (uint64_t)v27);
  v26(v16, 1, 1, v25);
  v29 = (_QWORD *)swift_allocObject();
  v29[2] = 0;
  v29[3] = 0;
  v29[4] = a3;
  v29[5] = a4;
  v30 = v35;
  v29[6] = v24;
  v29[7] = v30;
  v29[8] = a6;
  swift_retain();
  swift_retain();
  swift_retain();
  v31 = sub_20A4C69D8((uint64_t)v16, (uint64_t)&unk_2545F9EF0, (uint64_t)v29);
  v26(v16, 1, 1, v25);
  v32 = (_QWORD *)swift_allocObject();
  v32[2] = 0;
  v32[3] = 0;
  v32[4] = v24;
  v32[5] = v28;
  v32[6] = v31;
  sub_20A4C69D8((uint64_t)v16, (uint64_t)&unk_2545F9F00, (uint64_t)v32);
  return swift_release();
}

uint64_t sub_20A460F24(uint64_t a1)
{
  uint64_t *v1;

  return sub_20A460CD8(a1, v1[3], v1[4], v1[5], v1[6], v1[7], v1[2]);
}

uint64_t sub_20A460F34()
{
  uint64_t result;
  unint64_t v1;

  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_253EB52D0);
  sub_20A5B8B1C();
  result = sub_20A5B8D38();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for TimeoutHelper(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TimeoutHelper);
}

ValueMetadata *type metadata accessor for TimeoutError()
{
  return &type metadata for TimeoutError;
}

uint64_t sub_20A460FFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;

  v5[3] = a5;
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_253EB52D0);
  v5[4] = sub_20A5B8B1C();
  v6 = sub_20A5B8D38();
  v5[5] = v6;
  v5[6] = *(_QWORD *)(v6 - 8);
  v5[7] = swift_task_alloc();
  v7 = (_QWORD *)swift_task_alloc();
  v5[8] = v7;
  *v7 = v5;
  v7[1] = sub_20A4610AC;
  return sub_20A5B8BA0();
}

uint64_t sub_20A4610AC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (!v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_20A461120()
{
  uint64_t v0;

  sub_20A460AA0(*(_QWORD *)(v0 + 56));
  return swift_task_switch();
}

uint64_t sub_20A461160()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v2 = *(_QWORD *)(v0 + 40);
    v3 = *(_QWORD *)(v0 + 48);
  }
  else
  {
    sub_20A461B10();
    *(_QWORD *)(v0 + 16) = swift_allocError();
    sub_20A5B8B04();
  }
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  sub_20A5B8B94();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A461220(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t (*v16)(uint64_t);

  v8[4] = a7;
  v8[5] = a8;
  v8[3] = a6;
  v10 = *(_QWORD *)(*(_QWORD *)a6 + 80);
  v8[6] = v10;
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_253EB52D0);
  v11 = sub_20A5B8B1C();
  v8[7] = v11;
  v12 = sub_20A5B8D38();
  v8[8] = v12;
  v8[9] = *(_QWORD *)(v12 - 8);
  v8[10] = swift_task_alloc();
  v8[11] = swift_task_alloc();
  v8[12] = *(_QWORD *)(v11 - 8);
  v8[13] = swift_task_alloc();
  v8[14] = *(_QWORD *)(v10 - 8);
  v8[15] = swift_task_alloc();
  v13 = swift_task_alloc();
  v8[16] = v13;
  v16 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v14 = (_QWORD *)swift_task_alloc();
  v8[17] = v14;
  *v14 = v8;
  v14[1] = sub_20A461358;
  return v16(v13);
}

uint64_t sub_20A461358()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A4613C0()
{
  uint64_t v0;

  sub_20A460AA0(*(_QWORD *)(v0 + 88));
  return swift_task_switch();
}

uint64_t sub_20A461400()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD);

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 56);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    v4 = *(int **)(v0 + 32);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(v1, *(_QWORD *)(v0 + 64));
    v12 = (uint64_t (*)(_QWORD))((char *)v4 + *v4);
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v5;
    *v5 = v0;
    v5[1] = sub_20A461568;
    return v12(*(_QWORD *)(v0 + 128));
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 120);
    v7 = *(_QWORD *)(v0 + 128);
    v9 = *(_QWORD *)(v0 + 104);
    v10 = *(_QWORD *)(v0 + 112);
    v11 = *(_QWORD *)(v0 + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v9, v1, v3);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v8, v7, v11);
    sub_20A5B8B10();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v9, v3);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v7, v11);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_20A461568()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A4615BC()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 112) + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 48));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A461630()
{
  return swift_task_switch();
}

uint64_t sub_20A461644()
{
  uint64_t v0;

  sub_20A460AA0(*(_QWORD *)(v0 + 80));
  return swift_task_switch();
}

uint64_t sub_20A461684()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 56);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v2, 1, v3) == 1)
  {
    v4 = *(void **)(v0 + 144);
    v3 = *(_QWORD *)(v0 + 64);
    v1 = *(_QWORD *)(v0 + 72);
  }
  else
  {
    v5 = *(void **)(v0 + 144);
    *(_QWORD *)(v0 + 16) = v5;
    v6 = v5;
    sub_20A5B8B04();
    v4 = v5;
  }

  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A461758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  return swift_task_switch();
}

uint64_t sub_20A461774()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[3];
  v2 = v0[4];
  v3 = swift_allocObject();
  v0[5] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  swift_retain();
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_20A4617E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = (uint64_t *)(*(_QWORD *)(v0 + 16) + *(_QWORD *)(**(_QWORD **)(v0 + 16) + 104));
  v3 = *v2;
  *v2 = (uint64_t)sub_20A461B08;
  v2[1] = v1;
  swift_retain();
  sub_20A459818(v3);
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A461854()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52D0);
  sub_20A5B8B70();
  return sub_20A5B8B70();
}

uint64_t sub_20A4618C4()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20A4618F0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_20A4597C0;
  return sub_20A460FFC(a1, v4, v5, v7, v6);
}

uint64_t sub_20A461968()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20A4619A4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_20A4597C0;
  return sub_20A461220(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_20A461A38()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20A461A74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc();
  v4 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_20A45A37C;
  *(_QWORD *)(v3 + 32) = v2;
  *(_OWORD *)(v3 + 16) = v4;
  return swift_task_switch();
}

uint64_t sub_20A461ADC()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20A461B08()
{
  return sub_20A461854();
}

unint64_t sub_20A461B10()
{
  unint64_t result;

  result = qword_253EB4480;
  if (!qword_253EB4480)
  {
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for TimeoutError, &type metadata for TimeoutError);
    atomic_store(result, (unint64_t *)&qword_253EB4480);
  }
  return result;
}

uint64_t sub_20A461B54(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_20A461B88 + 4 * byte_20A5BDA80[a1]))(0x696C6F69766152, 0xE700000000000000);
}

uint64_t sub_20A461B88()
{
  return 0x75706D6F43657250;
}

unint64_t sub_20A461BA8()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_20A461CCC(void *a1, uint64_t a2, uint64_t a3, __int16 *a4)
{
  __int16 v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v6 = *a4;
  if (a1)
  {
    sub_20A5B8E94();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v13 = a2;
    v14 = a3;
    sub_20A5B899C();
    type metadata accessor for CFError(0);
    sub_20A44D044((unint64_t *)&qword_2545F9F70, (uint64_t (*)(uint64_t))type metadata accessor for CFError, MEMORY[0x24BDCFD90]);
    sub_20A5B923C();

    sub_20A5B899C();
    swift_bridgeObjectRelease();
    sub_20A5B899C();
    v8 = a2;
    v9 = a3;
    LOWORD(v13) = v6;
    v10 = 679;
  }
  else
  {
    sub_20A5B8E94();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v13 = a2;
    v14 = a3;
    sub_20A5B899C();
    v8 = a2;
    v9 = a3;
    LOWORD(v13) = v6;
    v10 = 676;
  }
  v11 = DIPError(_:fromError:code:forceCode:properties:file:function:line:)(v8, v9, 0, (unsigned __int16 *)&v13, 0, 0, 0xD000000000000070, 0x800000020A5DC8A0, 0xD000000000000018, 0x800000020A5DC920, v10);
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t type metadata accessor for DIPCryptoKeychain()
{
  return objc_opt_self();
}

uint64_t sub_20A461EB8()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DIPKeystoreKeychain()
{
  return objc_opt_self();
}

uint64_t sub_20A461EFC(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_20A461F28()
{
  sub_20A5B881C();
  sub_20A44D044(&qword_253EB5088, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5120);
  sub_20A462E7C();
  return sub_20A5B8DB0();
}

unint64_t sub_20A461FBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t *v17;
  unint64_t v18;
  char v19;
  uint64_t inited;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t result;
  char v29;
  uint64_t *v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  const __CFDictionary *v40;
  OSStatus v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  CFStringRef v49;
  __CFString *v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t *v56;
  unint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  const __CFDictionary *v77;
  OSStatus v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  CFStringRef v86;
  __CFString *v87;
  uint64_t v88;
  unint64_t v89;
  _OWORD *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  __int128 v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  __int128 v106;
  uint64_t v107;
  uint64_t v108;
  _OWORD *v109;
  uint64_t aBlock;
  uint64_t v111;
  _QWORD v112[5];

  v1 = v0;
  v2 = sub_20A5B881C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v91 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_20A5B8840();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v97 = (char *)&v91 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v0 + 73) == 1)
  {
    v91 = v8;
    v92 = v7;
    v93 = v6;
    v94 = v3;
    v95 = v2;
    v96 = v0;
    v11 = *(_QWORD *)(v0 + 24);
    v102 = *(_QWORD *)(v1 + 16);
    v101 = sub_20A5B8900();
    v103 = v12;
    v104 = v11;
    swift_bridgeObjectRetain();
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5210);
    v14 = *MEMORY[0x24BDE90A0];
    v107 = *MEMORY[0x24BDE9220];
    v108 = v14;
    v109 = v112;
    v106 = xmmword_20A5BA9B0;
    v15 = MEMORY[0x24BEE0D00];
    v100 = MEMORY[0x24BEE4AD8] + 8;
    v99 = xmmword_20A5BDA90;
    v16 = 1;
    v98 = v13;
    while (1)
    {
      v19 = v16;
      v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F78);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v106;
      *(_QWORD *)(inited + 32) = sub_20A5B8900();
      *(_QWORD *)(inited + 72) = v15;
      v21 = v102;
      *(_QWORD *)(inited + 40) = v22;
      *(_QWORD *)(inited + 48) = v21;
      *(_QWORD *)(inited + 56) = v104;
      *(_QWORD *)(inited + 80) = sub_20A5B8900();
      *(_QWORD *)(inited + 120) = v15;
      v23 = v101;
      *(_QWORD *)(inited + 88) = v24;
      *(_QWORD *)(inited + 96) = v23;
      *(_QWORD *)(inited + 104) = v103;
      v25 = (_QWORD *)sub_20A5B8FF0();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_20A462E34(inited + 32, (uint64_t)&aBlock);
      v26 = aBlock;
      v27 = v111;
      result = sub_20A47094C(aBlock, v111);
      if ((v29 & 1) != 0)
        break;
      *(_QWORD *)((char *)v25 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      v30 = (uint64_t *)(v25[6] + 16 * result);
      *v30 = v26;
      v30[1] = v27;
      result = (unint64_t)sub_20A44FD68(v109, (_OWORD *)(v25[7] + 32 * result));
      v31 = v25[2];
      v32 = __OFADD__(v31, 1);
      v33 = v31 + 1;
      if (v32)
        goto LABEL_42;
      v25[2] = v33;
      sub_20A462E34(inited + 80, (uint64_t)&aBlock);
      v34 = aBlock;
      v35 = v111;
      result = sub_20A47094C(aBlock, v111);
      if ((v36 & 1) != 0)
        break;
      *(_QWORD *)((char *)v25 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      v37 = (uint64_t *)(v25[6] + 16 * result);
      *v37 = v34;
      v37[1] = v35;
      result = (unint64_t)sub_20A44FD68(v109, (_OWORD *)(v25[7] + 32 * result));
      v38 = v25[2];
      v32 = __OFADD__(v38, 1);
      v39 = v38 + 1;
      if (v32)
        goto LABEL_42;
      v25[2] = v39;
      swift_bridgeObjectRelease();
      v15 = MEMORY[0x24BEE0D00];
      v40 = (const __CFDictionary *)sub_20A5B887C();
      swift_release();
      v41 = SecItemDelete(v40);

      v16 = 0;
      if (v41)
      {
        if (v41 == -25300)
        {
LABEL_18:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v53 = *(_QWORD *)(v96 + 24);
          v102 = *(_QWORD *)(v96 + 16);
          v101 = sub_20A5B8900();
          v103 = v54;
          v104 = v53;
          v109 = v112;
          swift_bridgeObjectRetain();
          v100 = MEMORY[0x24BEE4AD8] + 8;
          v55 = 1;
          while (1)
          {
            do
            {
              v58 = v55;
              v59 = swift_initStackObject();
              *(_OWORD *)(v59 + 16) = v106;
              *(_QWORD *)(v59 + 32) = sub_20A5B8900();
              *(_QWORD *)(v59 + 72) = v15;
              v60 = v102;
              *(_QWORD *)(v59 + 40) = v61;
              *(_QWORD *)(v59 + 48) = v60;
              *(_QWORD *)(v59 + 56) = v104;
              *(_QWORD *)(v59 + 80) = sub_20A5B8900();
              *(_QWORD *)(v59 + 120) = v15;
              v62 = v101;
              *(_QWORD *)(v59 + 88) = v63;
              *(_QWORD *)(v59 + 96) = v62;
              *(_QWORD *)(v59 + 104) = v103;
              v64 = (_QWORD *)sub_20A5B8FF0();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_20A462E34(v59 + 32, (uint64_t)&aBlock);
              v65 = aBlock;
              v66 = v111;
              result = sub_20A47094C(aBlock, v111);
              if ((v67 & 1) != 0)
                goto LABEL_43;
              *(_QWORD *)((char *)v64 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
              v68 = (uint64_t *)(v64[6] + 16 * result);
              *v68 = v65;
              v68[1] = v66;
              result = (unint64_t)sub_20A44FD68(v109, (_OWORD *)(v64[7] + 32 * result));
              v69 = v64[2];
              v32 = __OFADD__(v69, 1);
              v70 = v69 + 1;
              if (v32)
                goto LABEL_44;
              v64[2] = v70;
              sub_20A462E34(v59 + 80, (uint64_t)&aBlock);
              v71 = aBlock;
              v72 = v111;
              result = sub_20A47094C(aBlock, v111);
              if ((v73 & 1) != 0)
                goto LABEL_43;
              *(_QWORD *)((char *)v64 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
              v74 = (uint64_t *)(v64[6] + 16 * result);
              *v74 = v71;
              v74[1] = v72;
              result = (unint64_t)sub_20A44FD68(v109, (_OWORD *)(v64[7] + 32 * result));
              v75 = v64[2];
              v32 = __OFADD__(v75, 1);
              v76 = v75 + 1;
              if (v32)
                goto LABEL_44;
              v64[2] = v76;
              swift_bridgeObjectRelease();
              v15 = MEMORY[0x24BEE0D00];
              v77 = (const __CFDictionary *)sub_20A5B887C();
              swift_release();
              v78 = SecItemDelete(v77);

              v55 = 0;
            }
            while (!v78);
            if (v78 == -25300)
            {
LABEL_34:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v2 = v95;
              v1 = v96;
              v6 = v93;
              v3 = v94;
              v8 = v91;
              v7 = v92;
              goto LABEL_35;
            }
            if (qword_253EB5040 != -1)
              swift_once();
            v79 = (id)qword_253EBC880;
            sub_20A5B8C54();
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52C0);
            v80 = swift_allocObject();
            *(_OWORD *)(v80 + 16) = v99;
            *(_QWORD *)(v80 + 56) = v15;
            v81 = v15;
            v82 = sub_20A450420();
            v83 = v103;
            v84 = v104;
            *(_QWORD *)(v80 + 32) = v102;
            *(_QWORD *)(v80 + 40) = v84;
            *(_QWORD *)(v80 + 96) = v81;
            *(_QWORD *)(v80 + 104) = v82;
            v85 = v101;
            *(_QWORD *)(v80 + 64) = v82;
            *(_QWORD *)(v80 + 72) = v85;
            *(_QWORD *)(v80 + 80) = v83;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v86 = SecCopyErrorMessageString(v78, 0);
            if (v86)
            {
              v87 = (__CFString *)v86;
              v88 = sub_20A5B8900();
              v57 = v89;

              v56 = (uint64_t *)(v80 + 112);
              *(_QWORD *)(v80 + 136) = v81;
              *(_QWORD *)(v80 + 144) = v82;
              if (v57)
              {
                *v56 = v88;
                goto LABEL_21;
              }
            }
            else
            {
              v56 = (uint64_t *)(v80 + 112);
              *(_QWORD *)(v80 + 136) = v81;
              *(_QWORD *)(v80 + 144) = v82;
            }
            *v56 = 0;
            v57 = 0xE000000000000000;
LABEL_21:
            v15 = MEMORY[0x24BEE0D00];
            *(_QWORD *)(v80 + 120) = v57;
            sub_20A5B87B0();

            swift_bridgeObjectRelease();
            v55 = 0;
            if ((v58 & 1) != 0)
              goto LABEL_34;
          }
        }
        if (qword_253EB5040 != -1)
          swift_once();
        v42 = (id)qword_253EBC880;
        sub_20A5B8C54();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52C0);
        v43 = swift_allocObject();
        *(_OWORD *)(v43 + 16) = v99;
        *(_QWORD *)(v43 + 56) = v15;
        v44 = v15;
        v45 = sub_20A450420();
        v46 = v103;
        v47 = v104;
        *(_QWORD *)(v43 + 32) = v102;
        *(_QWORD *)(v43 + 40) = v47;
        *(_QWORD *)(v43 + 96) = v44;
        *(_QWORD *)(v43 + 104) = v45;
        v48 = v101;
        *(_QWORD *)(v43 + 64) = v45;
        *(_QWORD *)(v43 + 72) = v48;
        *(_QWORD *)(v43 + 80) = v46;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v49 = SecCopyErrorMessageString(v41, 0);
        if (v49)
        {
          v50 = (__CFString *)v49;
          v51 = sub_20A5B8900();
          v18 = v52;

          v17 = (uint64_t *)(v43 + 112);
          *(_QWORD *)(v43 + 136) = v44;
          *(_QWORD *)(v43 + 144) = v45;
          if (v18)
          {
            *v17 = v51;
            goto LABEL_5;
          }
        }
        else
        {
          v17 = (uint64_t *)(v43 + 112);
          *(_QWORD *)(v43 + 136) = v44;
          *(_QWORD *)(v43 + 144) = v45;
        }
        *v17 = 0;
        v18 = 0xE000000000000000;
LABEL_5:
        v15 = MEMORY[0x24BEE0D00];
        *(_QWORD *)(v43 + 120) = v18;
        sub_20A5B87B0();

        swift_bridgeObjectRelease();
        v16 = 0;
        if ((v19 & 1) != 0)
          goto LABEL_18;
      }
    }
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
  }
  else
  {
LABEL_35:
    if (*(_BYTE *)(v1 + 88) == 1)
    {
      if (*(_QWORD *)(v1 + 80))
      {
        swift_getObjectType();
        v112[2] = nullsub_1;
        v112[3] = 0;
        aBlock = MEMORY[0x24BDAC760];
        v111 = 1107296256;
        v112[0] = sub_20A461EFC;
        v112[1] = &block_descriptor_3;
        v109 = _Block_copy(&aBlock);
        sub_20A5B8834();
        sub_20A461F28();
        v90 = v109;
        sub_20A5B8CD8();
        _Block_release(v90);
        (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
        (*(void (**)(char *, uint64_t))(v8 + 8))(v97, v7);
        if (*(_QWORD *)(v1 + 80))
        {
          swift_getObjectType();
          sub_20A5B8CE4();
        }
      }
      *(_BYTE *)(v1 + 88) = 0;
    }
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    sub_20A44CFC4(*(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64));
    swift_unknownObjectRelease();
    return v1;
  }
  return result;
}

uint64_t sub_20A46289C()
{
  sub_20A461FBC();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for IdentityKeyWithKeychain()
{
  return objc_opt_self();
}

SecCertificateRef sub_20A4628DC()
{
  SecCertificateRef v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  const __CFAllocator *v5;
  const __CFData *v6;
  unsigned __int16 v8;
  unsigned __int16 v9;

  v1 = sub_20A5B8504();
  if (v2 >> 60 == 15)
  {
    v9 = 88;
    DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000023, 0x800000020A5DCBA0, 0, &v9, 0, 0, 0xD000000000000070, 0x800000020A5DC8A0, 0xD00000000000001FLL, 0x800000020A5DCBD0, 693);
    swift_willThrow();
  }
  else
  {
    v3 = v1;
    v4 = v2;
    v5 = (const __CFAllocator *)*MEMORY[0x24BDBD240];
    v6 = (const __CFData *)sub_20A5B8540();
    v0 = SecCertificateCreateWithData(v5, v6);

    if (v0)
    {
      sub_20A44CFC4(v3, v4);
    }
    else
    {
      v8 = 90;
      DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000027, 0x800000020A5DCBF0, 0, &v8, 0, 0, 0xD000000000000070, 0x800000020A5DC8A0, 0xD00000000000001FLL, 0x800000020A5DCBD0, 696);
      swift_willThrow();
      sub_20A44CFC4(v3, v4);
    }
  }
  return v0;
}

uint64_t sub_20A462A68(__SecKey *a1)
{
  CFDataRef v1;
  CFDataRef v2;
  uint64_t v3;
  void *v4;
  id v5;
  __int16 v7;
  CFErrorRef error[2];

  error[1] = *(CFErrorRef *)MEMORY[0x24BDAC8D0];
  error[0] = 0;
  v1 = SecKeyCopyExternalRepresentation(a1, error);
  if (v1)
  {
    v2 = v1;
    v3 = sub_20A5B8564();

  }
  else
  {
    v7 = 0;
    v4 = (void *)sub_20A461CCC(error[0], 0xD00000000000002DLL, 0x800000020A5DCB70, &v7);
    if (qword_253EB5040 != -1)
      swift_once();
    v5 = (id)qword_253EBC880;
    sub_20A44DDE4(v4, 0, 0xE000000000000000);

    return 0;
  }
  return v3;
}

const __CFString *sub_20A462B78(__SecKey *a1, __SecKey *a2, const __CFString *a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  id v12;
  uint64_t inited;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  const __CFDictionary *v19;
  CFDataRef v20;
  const __CFData *v21;
  const UInt8 *BytePtr;
  size_t Length;
  __int16 v25;
  CFErrorRef error[2];

  error[1] = *(CFErrorRef *)MEMORY[0x24BDAC8D0];
  error[0] = 0;
  if (qword_253EB5040 != -1)
    swift_once();
  v12 = (id)qword_253EBC880;
  sub_20A5B8C48();
  sub_20A5B87B0();

  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB4948);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A5BA9B0;
  v14 = (void *)*MEMORY[0x24BDE9388];
  v15 = MEMORY[0x24BEE1768];
  *(_QWORD *)(inited + 32) = *MEMORY[0x24BDE9388];
  *(_QWORD *)(inited + 40) = a4;
  v16 = (void *)*MEMORY[0x24BDE9390];
  *(_QWORD *)(inited + 64) = v15;
  *(_QWORD *)(inited + 72) = v16;
  *(_QWORD *)(inited + 104) = MEMORY[0x24BDCDDE8];
  *(_QWORD *)(inited + 80) = a5;
  *(_QWORD *)(inited + 88) = a6;
  v17 = v14;
  v18 = v16;
  sub_20A45964C(a5, a6);
  sub_20A46A1B4(inited);
  sub_20A462DE0();
  sub_20A44D044((unint64_t *)&qword_253EB4888, (uint64_t (*)(uint64_t))sub_20A462DE0, MEMORY[0x24BEE5BD8]);
  v19 = (const __CFDictionary *)sub_20A5B887C();
  swift_bridgeObjectRelease();
  v20 = SecKeyCopyKeyExchangeResult(a1, a3, a2, v19, error);

  if (v20)
  {
    type metadata accessor for DIPSecureData();
    a3 = (const __CFString *)swift_allocObject();
    a3->data = (char *)v20;
    v21 = v20;
    BytePtr = CFDataGetBytePtr(v21);
    Length = CFDataGetLength(v21);
    mlock(BytePtr, Length);

  }
  else
  {
    v25 = 203;
    sub_20A461CCC(error[0], 0xD00000000000001DLL, 0x800000020A5DC960, &v25);
    swift_willThrow();
  }
  return a3;
}

unint64_t sub_20A462DE0()
{
  unint64_t result;

  result = qword_253EB4880;
  if (!qword_253EB4880)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_253EB4880);
  }
  return result;
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t sub_20A462E34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_20A462E7C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_253EB5128;
  if (!qword_253EB5128)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253EB5120);
    result = MEMORY[0x20BD26CEC](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_253EB5128);
  }
  return result;
}

void sub_20A462EC8(char a1, __SecAccessControl *a2, char a3)
{
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  CFErrorRef v13;
  char v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  SecAccessControlRef v19;
  uint64_t inited;
  void *v21;
  uint64_t v22;
  void **v23;
  void *v24;
  void *v25;
  _QWORD *v26;
  void *v27;
  uint64_t v28;
  void *v29;
  void **v30;
  void **v31;
  void *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  id v36;
  __SecAccessControl *v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  __SecAccessControl *v43;
  id v44;
  const __CFDictionary *v45;
  __SecKey *RandomKey;
  id v47;
  __SecAccessControl *v48;
  id v49;
  id v50;
  char v51;
  __SecAccessControl *v52;
  uint64_t v53;
  CFErrorRef error[4];

  error[2] = *(CFErrorRef *)MEMORY[0x24BDAC8D0];
  if (a1)
  {
    if (a1 == 1)
    {
      if (qword_253EB5040 != -1)
        swift_once();
      v5 = (id)qword_253EBC880;
      sub_20A5B8C54();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52C0);
      v6 = swift_allocObject();
      *(_OWORD *)(v6 + 16) = xmmword_20A5BA9B0;
      v7 = sub_20A5B8900();
      v9 = v8;
      *(_QWORD *)(v6 + 56) = MEMORY[0x24BEE0D00];
      v10 = sub_20A450420();
      v11 = MEMORY[0x24BEE1768];
      v12 = MEMORY[0x24BEE17F0];
      *(_QWORD *)(v6 + 32) = v7;
      *(_QWORD *)(v6 + 40) = v9;
      *(_QWORD *)(v6 + 96) = v11;
      *(_QWORD *)(v6 + 104) = v12;
      *(_QWORD *)(v6 + 64) = v10;
      *(_QWORD *)(v6 + 72) = 2048;
      sub_20A5B87B0();

      swift_bridgeObjectRelease();
      sub_20A5B8E94();
      swift_bridgeObjectRelease();
      strcpy((char *)error, "key algorithm ");
      HIBYTE(error[1]) = -18;
      sub_20A5B8900();
      sub_20A5B899C();
      swift_bridgeObjectRelease();
      sub_20A5B899C();
      v53 = 2048;
      sub_20A5B9170();
      sub_20A5B899C();
      swift_bridgeObjectRelease();
      sub_20A5B899C();
      v13 = error[0];
      LOWORD(error[0]) = 199;
      DIPError(_:fromError:code:forceCode:properties:file:function:line:)((uint64_t)v13, (uint64_t)error[1], 0, (unsigned __int16 *)error, 0, 0, 0xD000000000000070, 0x800000020A5DC8A0, 0xD000000000000026, 0x800000020A5DCA60, 66);
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
    v14 = 1;
  }
  else
  {
    v14 = 0;
  }
  v15 = objc_msgSend((id)objc_opt_self(), sel_getSharedInstance);
  objc_msgSend(v15, sel_hasPKASupport);

  v16 = sub_20A5B8900();
  v18 = v17;
  error[0] = 0;
  v19 = a2;
  if (!a2)
  {
    v19 = SecAccessControlCreateWithFlags((CFAllocatorRef)*MEMORY[0x24BDBD240], (CFTypeRef)*MEMORY[0x24BDE8F70], 0x40000000uLL, error);
    if (!v19)
    {
      swift_bridgeObjectRelease();
      LOWORD(v53) = 200;
      sub_20A461CCC(error[0], 0xD000000000000036, 0x800000020A5DCB30, (__int16 *)&v53);
LABEL_22:
      swift_willThrow();
      return;
    }
  }
  v51 = a3;
  v52 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB4948);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A5BDAA0;
  v21 = (void *)*MEMORY[0x24BDE9018];
  *(_QWORD *)(inited + 32) = *MEMORY[0x24BDE9018];
  v22 = MEMORY[0x24BEE1328];
  v23 = (void **)MEMORY[0x24BDE9050];
  *(_BYTE *)(inited + 40) = 0;
  v24 = *v23;
  *(_QWORD *)(inited + 64) = v22;
  *(_QWORD *)(inited + 72) = v24;
  *(_QWORD *)(inited + 104) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 80) = v16;
  *(_QWORD *)(inited + 88) = v18;
  v25 = (void *)*MEMORY[0x24BDE9378];
  if (*MEMORY[0x24BDE9378])
  {
    v26 = (_QWORD *)inited;
    *(_QWORD *)(inited + 112) = v25;
    *(_BYTE *)(inited + 120) = v14;
    v27 = (void *)*MEMORY[0x24BDE9048];
    *(_QWORD *)(inited + 144) = v22;
    *(_QWORD *)(inited + 152) = v27;
    v28 = MEMORY[0x24BEE1768];
    *(_QWORD *)(inited + 160) = 256;
    v29 = (void *)*MEMORY[0x24BDE9158];
    v30 = (void **)MEMORY[0x24BDE9160];
    *(_QWORD *)(inited + 184) = v28;
    *(_QWORD *)(inited + 192) = v29;
    v31 = (void **)MEMORY[0x24BDE9168];
    if ((v51 & 1) == 0)
      v31 = v30;
    v32 = *v31;
    v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB4850);
    v26[25] = v32;
    v34 = (void *)*MEMORY[0x24BDE8F48];
    v26[28] = v33;
    v26[29] = v34;
    type metadata accessor for SecAccessControl(0);
    v26[33] = v35;
    v26[30] = v19;
    v36 = v32;
    v37 = v52;
    v38 = v21;
    v39 = v24;
    v40 = v27;
    v41 = v29;
    v42 = v34;
    v43 = v19;
    v44 = v25;
    sub_20A46A1B4((uint64_t)v26);
    sub_20A462DE0();
    sub_20A44D044((unint64_t *)&qword_253EB4888, (uint64_t (*)(uint64_t))sub_20A462DE0, MEMORY[0x24BEE5BD8]);
    v45 = (const __CFDictionary *)sub_20A5B887C();
    swift_bridgeObjectRelease();
    RandomKey = SecKeyCreateRandomKey(v45, error);

    if (RandomKey)
    {
      if (SecKeyCopyPublicKey(RandomKey))
      {

        return;
      }
      if (qword_253EB5040 != -1)
        swift_once();
      v47 = (id)qword_253EBC880;
      sub_20A5B8C54();
      sub_20A5B87B0();

      LOWORD(v53) = 198;
      DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000002ALL, 0x800000020A5DCB00, 0, (unsigned __int16 *)&v53, 0, 0, 0xD000000000000070, 0x800000020A5DC8A0, 0xD000000000000026, 0x800000020A5DCA60, 91);
      swift_willThrow();

    }
    else
    {
      LOWORD(v53) = 197;
      sub_20A461CCC(error[0], 0xD00000000000002CLL, 0x800000020A5DCA90, (__int16 *)&v53);
      swift_willThrow();
    }

  }
  else
  {
    v48 = a2;
    v49 = v21;
    v50 = v24;

    __break(1u);
  }
}

void sub_20A463540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __SecKey *a5, const __CFString *a6)
{
  const __CFData *v8;
  const __CFData *v9;
  __int16 v10;
  CFErrorRef error[2];

  error[1] = *(CFErrorRef *)MEMORY[0x24BDAC8D0];
  error[0] = 0;
  v8 = (const __CFData *)sub_20A5B8540();
  v9 = (const __CFData *)sub_20A5B8540();
  LODWORD(a6) = SecKeyVerifySignature(a5, a6, v8, v9, error);

  if (!(_DWORD)a6)
  {
    v10 = 202;
    sub_20A461CCC(error[0], 0xD000000000000023, 0x800000020A5DC9E0, &v10);
    swift_willThrow();
  }
}

uint64_t Loggable.notice(_:category:)(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5)
{
  char v6;

  v6 = *a3;
  return (*(uint64_t (**)(uint64_t, uint64_t, char *))(a5 + 8))(a1, a2, &v6);
}

uint64_t Loggable.debug(_:category:)(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5)
{
  char v6;

  v6 = *a3;
  return (*(uint64_t (**)(uint64_t, uint64_t, char *))(a5 + 16))(a1, a2, &v6);
}

uint64_t Loggable.warning(_:category:)(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5)
{
  char v6;

  v6 = *a3;
  return (*(uint64_t (**)(uint64_t, uint64_t, char *))(a5 + 24))(a1, a2, &v6);
}

uint64_t Loggable.info(_:category:)(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5)
{
  char v6;

  v6 = *a3;
  return (*(uint64_t (**)(uint64_t, uint64_t, char *))(a5 + 32))(a1, a2, &v6);
}

uint64_t Loggable.error(_:category:)(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5)
{
  char v6;

  v6 = *a3;
  return (*(uint64_t (**)(uint64_t, uint64_t, char *))(a5 + 40))(a1, a2, &v6);
}

uint64_t Loggable.critical(_:category:)(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5)
{
  char v6;

  v6 = *a3;
  return (*(uint64_t (**)(uint64_t, uint64_t, char *))(a5 + 48))(a1, a2, &v6);
}

uint64_t Loggable.fault(_:category:)(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5)
{
  char v6;

  v6 = *a3;
  return (*(uint64_t (**)(uint64_t, uint64_t, char *))(a5 + 56))(a1, a2, &v6);
}

uint64_t Loggable.fault(_:isPublic:category:)(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6)
{
  char v7;

  v7 = *a4;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, char *))(a6 + 64))(a1, a2, a3, &v7);
}

uint64_t Loggable.sensitive(_:category:)(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5)
{
  char v6;

  v6 = *a3;
  return (*(uint64_t (**)(uint64_t, uint64_t, char *))(a5 + 72))(a1, a2, &v6);
}

Swift::Void __swiftcall Loggable.milestone(tag:description:value:isSensitive:)(CoreODIEssentials::MilestoneTag tag, Swift::String description, Swift::String_optional value, Swift::Bool isSensitive)
{
  uint64_t v4;
  char v5;

  v5 = *(_BYTE *)tag;
  (*(void (**)(char *, uint64_t, void *, uint64_t, void *, Swift::Bool))(v4 + 80))(&v5, description._countAndFlagsBits, description._object, value.value._countAndFlagsBits, value.value._object, isSensitive);
}

uint64_t sub_20A463818(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return Loggable.milestone<A>(tag:description:encodableValue:isSensitive:)(a1, a2, a3, a4, a5, a8, a6, a9, a7);
}

uint64_t Loggable.milestone<A>(tag:description:encodableValue:isSensitive:)(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  char v10;

  v10 = *a1;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a8 + 88))(&v10, a2, a3, a4, a5, a7, a9, a6, a8);
}

uint64_t dispatch thunk of Loggable.notice(_:category:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of Loggable.debug(_:category:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of Loggable.warning(_:category:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t dispatch thunk of Loggable.info(_:category:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t dispatch thunk of Loggable.error(_:category:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t dispatch thunk of Loggable.critical(_:category:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 48))();
}

uint64_t dispatch thunk of Loggable.fault(_:category:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 56))();
}

uint64_t dispatch thunk of Loggable.fault(_:isPublic:category:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 64))();
}

uint64_t dispatch thunk of Loggable.sensitive(_:category:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 72))();
}

uint64_t dispatch thunk of Loggable.milestone(tag:description:value:isSensitive:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 80))();
}

uint64_t dispatch thunk of Loggable.milestone<A>(tag:description:encodableValue:isSensitive:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(void))(a9 + 88))();
}

uint64_t _s5StateVwxx(_QWORD *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[6])
  {
    swift_bridgeObjectRelease();
    if (a1[9])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    if (a1[29] != 1)
      swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[42])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (a1[46])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (a1[61] != 1)
      swift_bridgeObjectRelease();
    swift_release();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s5StateVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;

  *(_WORD *)a1 = *(_WORD *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  v6 = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = v6;
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    v7 = *(_QWORD *)(a2 + 72);
    swift_bridgeObjectRetain();
    if (v7)
    {
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = v7;
      v8 = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = v8;
      v9 = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = v9;
      v10 = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v18 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v18;
      v19 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 112) = v19;
    }
    v20 = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = v20;
    v21 = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 152) = v21;
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
    v22 = *(_QWORD *)(a2 + 184);
    *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 184) = v22;
    *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
    v23 = *(_QWORD *)(a2 + 232);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v23 == 1)
    {
      v24 = *(_OWORD *)(a2 + 216);
      *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
      *(_OWORD *)(a1 + 216) = v24;
      *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
    }
    else
    {
      v25 = *(_QWORD *)(a2 + 208);
      *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
      *(_QWORD *)(a1 + 208) = v25;
      *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
      *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
      *(_QWORD *)(a1 + 232) = v23;
      swift_bridgeObjectRetain();
    }
    *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
    *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
    v26 = *(_QWORD *)(a2 + 264);
    *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
    *(_QWORD *)(a1 + 264) = v26;
    v27 = *(_QWORD *)(a2 + 280);
    *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
    *(_QWORD *)(a1 + 280) = v27;
    *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
    *(_BYTE *)(a1 + 304) = *(_BYTE *)(a2 + 304);
    *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
    v28 = *(_QWORD *)(a2 + 320);
    *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
    *(_QWORD *)(a1 + 320) = v28;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11 = *(_QWORD *)(a2 + 336);
    if (v11)
      goto LABEL_11;
LABEL_5:
    v12 = *(_OWORD *)(a2 + 504);
    *(_OWORD *)(a1 + 488) = *(_OWORD *)(a2 + 488);
    *(_OWORD *)(a1 + 504) = v12;
    *(_OWORD *)(a1 + 520) = *(_OWORD *)(a2 + 520);
    *(_BYTE *)(a1 + 536) = *(_BYTE *)(a2 + 536);
    v13 = *(_OWORD *)(a2 + 440);
    *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 424);
    *(_OWORD *)(a1 + 440) = v13;
    v14 = *(_OWORD *)(a2 + 472);
    *(_OWORD *)(a1 + 456) = *(_OWORD *)(a2 + 456);
    *(_OWORD *)(a1 + 472) = v14;
    v15 = *(_OWORD *)(a2 + 376);
    *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
    *(_OWORD *)(a1 + 376) = v15;
    v16 = *(_OWORD *)(a2 + 408);
    *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
    *(_OWORD *)(a1 + 408) = v16;
    v17 = *(_OWORD *)(a2 + 344);
    *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
    *(_OWORD *)(a1 + 344) = v17;
    goto LABEL_18;
  }
  memcpy((void *)(a1 + 40), (const void *)(a2 + 40), 0x120uLL);
  v11 = *(_QWORD *)(a2 + 336);
  if (!v11)
    goto LABEL_5;
LABEL_11:
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  *(_QWORD *)(a1 + 336) = v11;
  v29 = *(_QWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
  *(_QWORD *)(a1 + 352) = v29;
  v30 = *(_QWORD *)(a2 + 368);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v30)
  {
    *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
    *(_QWORD *)(a1 + 368) = v30;
    v31 = *(_QWORD *)(a2 + 384);
    *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
    *(_QWORD *)(a1 + 384) = v31;
    v32 = *(_QWORD *)(a2 + 400);
    *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
    *(_QWORD *)(a1 + 400) = v32;
    v33 = *(_QWORD *)(a2 + 416);
    *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
    *(_QWORD *)(a1 + 416) = v33;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v34 = *(_OWORD *)(a2 + 376);
    *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
    *(_OWORD *)(a1 + 376) = v34;
    v35 = *(_OWORD *)(a2 + 408);
    *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
    *(_OWORD *)(a1 + 408) = v35;
  }
  v36 = *(_QWORD *)(a2 + 432);
  *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
  *(_QWORD *)(a1 + 432) = v36;
  v37 = *(_QWORD *)(a2 + 448);
  *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
  *(_QWORD *)(a1 + 448) = v37;
  v38 = *(_QWORD *)(a2 + 488);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v38 == 1)
  {
    v39 = *(_OWORD *)(a2 + 472);
    *(_OWORD *)(a1 + 456) = *(_OWORD *)(a2 + 456);
    *(_OWORD *)(a1 + 472) = v39;
    *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
  }
  else
  {
    v40 = *(_QWORD *)(a2 + 464);
    *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
    *(_QWORD *)(a1 + 464) = v40;
    *(_BYTE *)(a1 + 472) = *(_BYTE *)(a2 + 472);
    *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
    *(_QWORD *)(a1 + 488) = v38;
    swift_bridgeObjectRetain();
  }
  *(_BYTE *)(a1 + 496) = *(_BYTE *)(a2 + 496);
  v41 = *(_QWORD *)(a2 + 512);
  *(_QWORD *)(a1 + 504) = *(_QWORD *)(a2 + 504);
  *(_QWORD *)(a1 + 512) = v41;
  *(_BYTE *)(a1 + 520) = *(_BYTE *)(a2 + 520);
  *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
  *(_BYTE *)(a1 + 536) = *(_BYTE *)(a2 + 536);
  swift_retain();
LABEL_18:
  *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
  *(_QWORD *)(a1 + 552) = *(_QWORD *)(a2 + 552);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s5StateVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  __int128 *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  __int128 *v27;
  __int128 *v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _OWORD *v39;
  _OWORD *v40;
  uint64_t v41;
  _OWORD *v42;
  __int128 *v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;
  __int128 v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 *v81;
  __int128 *v82;
  uint64_t v83;
  __int128 v84;
  __int128 v85;
  uint64_t v86;
  __int128 v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(a1 + 48))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      v5 = (_OWORD *)(a1 + 64);
      v6 = (__int128 *)(a2 + 64);
      v7 = *(_QWORD *)(a2 + 72);
      if (*(_QWORD *)(a1 + 72))
      {
        if (v7)
        {
          *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
          *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
          *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
          *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
          *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_20A464794(a1 + 64);
          v9 = *(_OWORD *)(a2 + 112);
          v11 = *v6;
          v10 = *(_OWORD *)(a2 + 80);
          *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
          *(_OWORD *)(a1 + 112) = v9;
          *v5 = v11;
          *(_OWORD *)(a1 + 80) = v10;
        }
      }
      else if (v7)
      {
        *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
        *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
        *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
        *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
        *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
        *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
        *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
        *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v23 = *v6;
        v24 = *(_OWORD *)(a2 + 80);
        v25 = *(_OWORD *)(a2 + 112);
        *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
        *(_OWORD *)(a1 + 112) = v25;
        *v5 = v23;
        *(_OWORD *)(a1 + 80) = v24;
      }
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      swift_retain();
      swift_release();
      v26 = *(_QWORD *)(a2 + 184);
      *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
      *(_QWORD *)(a1 + 184) = v26;
      v27 = (__int128 *)(a1 + 200);
      v28 = (__int128 *)(a2 + 200);
      v29 = *(_QWORD *)(a2 + 232);
      if (*(_QWORD *)(a1 + 232) == 1)
      {
        if (v29 == 1)
        {
          v30 = *v28;
          v31 = *(_OWORD *)(a2 + 216);
          *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
          *v27 = v30;
          *(_OWORD *)(a1 + 216) = v31;
        }
        else
        {
          *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
          v34 = *(_QWORD *)(a2 + 208);
          *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
          *(_QWORD *)(a1 + 208) = v34;
          *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
          *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
          swift_bridgeObjectRetain();
        }
      }
      else if (v29 == 1)
      {
        sub_20A4647C8(a1 + 200);
        v32 = *(_QWORD *)(a2 + 232);
        v33 = *(_OWORD *)(a2 + 216);
        *v27 = *v28;
        *(_OWORD *)(a1 + 216) = v33;
        *(_QWORD *)(a1 + 232) = v32;
      }
      else
      {
        *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
        v35 = *(_QWORD *)(a2 + 208);
        *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
        *(_QWORD *)(a1 + 208) = v35;
        *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
        *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
      }
      v36 = *(_QWORD *)(a2 + 240);
      *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
      *(_QWORD *)(a1 + 240) = v36;
      *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
      *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v37 = *(_QWORD *)(a2 + 280);
      *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
      *(_QWORD *)(a1 + 280) = v37;
      v38 = *(_QWORD *)(a2 + 296);
      *(_BYTE *)(a1 + 304) = *(_BYTE *)(a2 + 304);
      *(_QWORD *)(a1 + 296) = v38;
      *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
      *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_28;
    }
    sub_20A4647FC(a1 + 40);
  }
  else if (v4)
  {
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    v8 = *(_QWORD *)(a2 + 72);
    swift_bridgeObjectRetain();
    if (v8)
    {
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v12 = *(_OWORD *)(a2 + 64);
      v13 = *(_OWORD *)(a2 + 80);
      v14 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 112) = v14;
      *(_OWORD *)(a1 + 64) = v12;
      *(_OWORD *)(a1 + 80) = v13;
    }
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
    *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
    v15 = *(_QWORD *)(a2 + 184);
    *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
    *(_QWORD *)(a1 + 184) = v15;
    v16 = *(_QWORD *)(a2 + 232);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v16 == 1)
    {
      v17 = *(_OWORD *)(a2 + 200);
      v18 = *(_OWORD *)(a2 + 216);
      *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
      *(_OWORD *)(a1 + 200) = v17;
      *(_OWORD *)(a1 + 216) = v18;
    }
    else
    {
      *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
      v19 = *(_QWORD *)(a2 + 208);
      *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
      *(_QWORD *)(a1 + 208) = v19;
      *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
      *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
      swift_bridgeObjectRetain();
    }
    v20 = *(_QWORD *)(a2 + 240);
    *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
    *(_QWORD *)(a1 + 240) = v20;
    *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
    *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
    *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
    v21 = *(_QWORD *)(a2 + 280);
    *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
    *(_QWORD *)(a1 + 280) = v21;
    v22 = *(_QWORD *)(a2 + 296);
    *(_BYTE *)(a1 + 304) = *(_BYTE *)(a2 + 304);
    *(_QWORD *)(a1 + 296) = v22;
    *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
    *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_28;
  }
  memcpy((void *)(a1 + 40), (const void *)(a2 + 40), 0x120uLL);
LABEL_28:
  v39 = (_OWORD *)(a1 + 328);
  v40 = (_OWORD *)(a2 + 328);
  v41 = *(_QWORD *)(a2 + 336);
  if (*(_QWORD *)(a1 + 336))
  {
    if (v41)
    {
      *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
      *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
      *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v42 = (_OWORD *)(a1 + 360);
      v43 = (__int128 *)(a2 + 360);
      v44 = *(_QWORD *)(a2 + 368);
      if (*(_QWORD *)(a1 + 368))
      {
        if (v44)
        {
          *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
          *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
          *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
          *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
          *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_20A464794(a1 + 360);
          v66 = *(_OWORD *)(a2 + 408);
          v68 = *v43;
          v67 = *(_OWORD *)(a2 + 376);
          *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
          *(_OWORD *)(a1 + 408) = v66;
          *v42 = v68;
          *(_OWORD *)(a1 + 376) = v67;
        }
      }
      else if (v44)
      {
        *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
        *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
        *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
        *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
        *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
        *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
        *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
        *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v78 = *v43;
        v79 = *(_OWORD *)(a2 + 376);
        v80 = *(_OWORD *)(a2 + 408);
        *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
        *(_OWORD *)(a1 + 408) = v80;
        *v42 = v78;
        *(_OWORD *)(a1 + 376) = v79;
      }
      *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
      *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
      *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v81 = (__int128 *)(a1 + 456);
      v82 = (__int128 *)(a2 + 456);
      v83 = *(_QWORD *)(a2 + 488);
      if (*(_QWORD *)(a1 + 488) == 1)
      {
        if (v83 == 1)
        {
          v84 = *v82;
          v85 = *(_OWORD *)(a2 + 472);
          *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
          *v81 = v84;
          *(_OWORD *)(a1 + 472) = v85;
        }
        else
        {
          *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
          v88 = *(_QWORD *)(a2 + 464);
          *(_BYTE *)(a1 + 472) = *(_BYTE *)(a2 + 472);
          *(_QWORD *)(a1 + 464) = v88;
          *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
          *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
          swift_bridgeObjectRetain();
        }
      }
      else if (v83 == 1)
      {
        sub_20A4647C8(a1 + 456);
        v86 = *(_QWORD *)(a2 + 488);
        v87 = *(_OWORD *)(a2 + 472);
        *v81 = *v82;
        *(_OWORD *)(a1 + 472) = v87;
        *(_QWORD *)(a1 + 488) = v86;
      }
      else
      {
        *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
        v89 = *(_QWORD *)(a2 + 464);
        *(_BYTE *)(a1 + 472) = *(_BYTE *)(a2 + 472);
        *(_QWORD *)(a1 + 464) = v89;
        *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
        *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
      }
      *(_BYTE *)(a1 + 496) = *(_BYTE *)(a2 + 496);
      *(_QWORD *)(a1 + 504) = *(_QWORD *)(a2 + 504);
      swift_retain();
      swift_release();
      v90 = *(_QWORD *)(a2 + 512);
      *(_BYTE *)(a1 + 520) = *(_BYTE *)(a2 + 520);
      *(_QWORD *)(a1 + 512) = v90;
      v91 = *(_QWORD *)(a2 + 528);
      *(_BYTE *)(a1 + 536) = *(_BYTE *)(a2 + 536);
      *(_QWORD *)(a1 + 528) = v91;
    }
    else
    {
      sub_20A464830(a1 + 328);
      v46 = *(_OWORD *)(a2 + 344);
      *v39 = *v40;
      *(_OWORD *)(a1 + 344) = v46;
      v47 = *(_OWORD *)(a2 + 408);
      v49 = *(_OWORD *)(a2 + 360);
      v48 = *(_OWORD *)(a2 + 376);
      *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
      *(_OWORD *)(a1 + 408) = v47;
      *(_OWORD *)(a1 + 360) = v49;
      *(_OWORD *)(a1 + 376) = v48;
      v50 = *(_OWORD *)(a2 + 472);
      v52 = *(_OWORD *)(a2 + 424);
      v51 = *(_OWORD *)(a2 + 440);
      *(_OWORD *)(a1 + 456) = *(_OWORD *)(a2 + 456);
      *(_OWORD *)(a1 + 472) = v50;
      *(_OWORD *)(a1 + 424) = v52;
      *(_OWORD *)(a1 + 440) = v51;
      v54 = *(_OWORD *)(a2 + 504);
      v53 = *(_OWORD *)(a2 + 520);
      v55 = *(_OWORD *)(a2 + 488);
      *(_BYTE *)(a1 + 536) = *(_BYTE *)(a2 + 536);
      *(_OWORD *)(a1 + 504) = v54;
      *(_OWORD *)(a1 + 520) = v53;
      *(_OWORD *)(a1 + 488) = v55;
    }
  }
  else if (v41)
  {
    *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
    *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
    *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
    *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
    v45 = *(_QWORD *)(a2 + 368);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v45)
    {
      *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
      *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
      *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
      *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
      *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
      *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
      *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
      *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v69 = *(_OWORD *)(a2 + 360);
      v70 = *(_OWORD *)(a2 + 376);
      v71 = *(_OWORD *)(a2 + 408);
      *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
      *(_OWORD *)(a1 + 408) = v71;
      *(_OWORD *)(a1 + 360) = v69;
      *(_OWORD *)(a1 + 376) = v70;
    }
    *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
    *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
    *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
    *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
    v72 = *(_QWORD *)(a2 + 488);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v72 == 1)
    {
      v73 = *(_OWORD *)(a2 + 456);
      v74 = *(_OWORD *)(a2 + 472);
      *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
      *(_OWORD *)(a1 + 456) = v73;
      *(_OWORD *)(a1 + 472) = v74;
    }
    else
    {
      *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
      v75 = *(_QWORD *)(a2 + 464);
      *(_BYTE *)(a1 + 472) = *(_BYTE *)(a2 + 472);
      *(_QWORD *)(a1 + 464) = v75;
      *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
      *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
      swift_bridgeObjectRetain();
    }
    *(_BYTE *)(a1 + 496) = *(_BYTE *)(a2 + 496);
    *(_QWORD *)(a1 + 504) = *(_QWORD *)(a2 + 504);
    v76 = *(_QWORD *)(a2 + 512);
    *(_BYTE *)(a1 + 520) = *(_BYTE *)(a2 + 520);
    *(_QWORD *)(a1 + 512) = v76;
    v77 = *(_QWORD *)(a2 + 528);
    *(_BYTE *)(a1 + 536) = *(_BYTE *)(a2 + 536);
    *(_QWORD *)(a1 + 528) = v77;
    swift_retain();
  }
  else
  {
    v56 = *(_OWORD *)(a2 + 344);
    *v39 = *v40;
    *(_OWORD *)(a1 + 344) = v56;
    v57 = *(_OWORD *)(a2 + 360);
    v58 = *(_OWORD *)(a2 + 376);
    v59 = *(_OWORD *)(a2 + 408);
    *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
    *(_OWORD *)(a1 + 408) = v59;
    *(_OWORD *)(a1 + 360) = v57;
    *(_OWORD *)(a1 + 376) = v58;
    v60 = *(_OWORD *)(a2 + 424);
    v61 = *(_OWORD *)(a2 + 440);
    v62 = *(_OWORD *)(a2 + 472);
    *(_OWORD *)(a1 + 456) = *(_OWORD *)(a2 + 456);
    *(_OWORD *)(a1 + 472) = v62;
    *(_OWORD *)(a1 + 424) = v60;
    *(_OWORD *)(a1 + 440) = v61;
    v63 = *(_OWORD *)(a2 + 488);
    v64 = *(_OWORD *)(a2 + 504);
    v65 = *(_OWORD *)(a2 + 520);
    *(_BYTE *)(a1 + 536) = *(_BYTE *)(a2 + 536);
    *(_OWORD *)(a1 + 504) = v64;
    *(_OWORD *)(a1 + 520) = v65;
    *(_OWORD *)(a1 + 488) = v63;
  }
  *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 552) = *(_QWORD *)(a2 + 552);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_20A464794(uint64_t a1)
{
  destroy for ODIClientGUIDSeeds();
  return a1;
}

uint64_t sub_20A4647C8(uint64_t a1)
{
  destroy for ODNErrorInfo();
  return a1;
}

uint64_t sub_20A4647FC(uint64_t a1)
{
  destroy for OTDRequest(a1);
  return a1;
}

uint64_t sub_20A464830(uint64_t a1)
{
  destroy for ORDRequest(a1);
  return a1;
}

void *__swift_memcpy560_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x230uLL);
}

uint64_t _s5StateVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a1 + 48))
    goto LABEL_7;
  v6 = *(_QWORD *)(a2 + 48);
  if (!v6)
  {
    sub_20A4647FC(a1 + 40);
LABEL_7:
    memcpy((void *)(a1 + 40), (const void *)(a2 + 40), 0x120uLL);
    goto LABEL_16;
  }
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  if (*(_QWORD *)(a1 + 72))
  {
    v7 = *(_QWORD *)(a2 + 72);
    if (v7)
    {
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = v7;
      swift_bridgeObjectRelease();
      v8 = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = v8;
      swift_bridgeObjectRelease();
      v9 = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = v9;
      swift_bridgeObjectRelease();
      v10 = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = v10;
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
    sub_20A464794(a1 + 64);
  }
  v11 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v11;
  v12 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v12;
LABEL_10:
  v13 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v13;
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v14;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_release();
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  if (*(_QWORD *)(a1 + 232) != 1)
  {
    v15 = *(_QWORD *)(a2 + 232);
    if (v15 != 1)
    {
      v17 = *(_QWORD *)(a2 + 208);
      *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
      *(_QWORD *)(a1 + 208) = v17;
      *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
      *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
      *(_QWORD *)(a1 + 232) = v15;
      swift_bridgeObjectRelease();
      goto LABEL_15;
    }
    sub_20A4647C8(a1 + 200);
  }
  v16 = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = v16;
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
LABEL_15:
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
  v18 = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = v18;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  *(_BYTE *)(a1 + 304) = *(_BYTE *)(a2 + 304);
  v19 = *(_QWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  *(_QWORD *)(a1 + 320) = v19;
  swift_bridgeObjectRelease();
LABEL_16:
  if (*(_QWORD *)(a1 + 336))
  {
    v20 = *(_QWORD *)(a2 + 336);
    if (v20)
    {
      *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
      *(_QWORD *)(a1 + 336) = v20;
      swift_bridgeObjectRelease();
      v21 = *(_QWORD *)(a2 + 352);
      *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
      *(_QWORD *)(a1 + 352) = v21;
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 368))
      {
        v22 = *(_QWORD *)(a2 + 368);
        if (v22)
        {
          *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
          *(_QWORD *)(a1 + 368) = v22;
          swift_bridgeObjectRelease();
          v23 = *(_QWORD *)(a2 + 384);
          *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
          *(_QWORD *)(a1 + 384) = v23;
          swift_bridgeObjectRelease();
          v24 = *(_QWORD *)(a2 + 400);
          *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
          *(_QWORD *)(a1 + 400) = v24;
          swift_bridgeObjectRelease();
          v25 = *(_QWORD *)(a2 + 416);
          *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
          *(_QWORD *)(a1 + 416) = v25;
          swift_bridgeObjectRelease();
          goto LABEL_25;
        }
        sub_20A464794(a1 + 360);
      }
      v32 = *(_OWORD *)(a2 + 376);
      *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
      *(_OWORD *)(a1 + 376) = v32;
      v33 = *(_OWORD *)(a2 + 408);
      *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
      *(_OWORD *)(a1 + 408) = v33;
LABEL_25:
      v34 = *(_QWORD *)(a2 + 432);
      *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
      *(_QWORD *)(a1 + 432) = v34;
      swift_bridgeObjectRelease();
      v35 = *(_QWORD *)(a2 + 448);
      *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
      *(_QWORD *)(a1 + 448) = v35;
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 488) != 1)
      {
        v36 = *(_QWORD *)(a2 + 488);
        if (v36 != 1)
        {
          v38 = *(_QWORD *)(a2 + 464);
          *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
          *(_QWORD *)(a1 + 464) = v38;
          *(_BYTE *)(a1 + 472) = *(_BYTE *)(a2 + 472);
          *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
          *(_QWORD *)(a1 + 488) = v36;
          swift_bridgeObjectRelease();
          goto LABEL_30;
        }
        sub_20A4647C8(a1 + 456);
      }
      v37 = *(_OWORD *)(a2 + 472);
      *(_OWORD *)(a1 + 456) = *(_OWORD *)(a2 + 456);
      *(_OWORD *)(a1 + 472) = v37;
      *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
LABEL_30:
      *(_BYTE *)(a1 + 496) = *(_BYTE *)(a2 + 496);
      *(_QWORD *)(a1 + 504) = *(_QWORD *)(a2 + 504);
      swift_release();
      *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
      *(_BYTE *)(a1 + 520) = *(_BYTE *)(a2 + 520);
      *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
      *(_BYTE *)(a1 + 536) = *(_BYTE *)(a2 + 536);
      goto LABEL_31;
    }
    sub_20A464830(a1 + 328);
  }
  v26 = *(_OWORD *)(a2 + 504);
  *(_OWORD *)(a1 + 488) = *(_OWORD *)(a2 + 488);
  *(_OWORD *)(a1 + 504) = v26;
  *(_OWORD *)(a1 + 520) = *(_OWORD *)(a2 + 520);
  *(_BYTE *)(a1 + 536) = *(_BYTE *)(a2 + 536);
  v27 = *(_OWORD *)(a2 + 440);
  *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 424);
  *(_OWORD *)(a1 + 440) = v27;
  v28 = *(_OWORD *)(a2 + 472);
  *(_OWORD *)(a1 + 456) = *(_OWORD *)(a2 + 456);
  *(_OWORD *)(a1 + 472) = v28;
  v29 = *(_OWORD *)(a2 + 376);
  *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
  *(_OWORD *)(a1 + 376) = v29;
  v30 = *(_OWORD *)(a2 + 408);
  *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
  *(_OWORD *)(a1 + 408) = v30;
  v31 = *(_OWORD *)(a2 + 344);
  *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
  *(_OWORD *)(a1 + 344) = v31;
LABEL_31:
  *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 552) = *(_QWORD *)(a2 + 552);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s5StateVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 560))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 544);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s5StateVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 552) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 560) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 544) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 560) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s5StateVMa()
{
  return &_s5StateVN;
}

uint64_t sub_20A464D74(uint64_t result, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v16;
  char v17;
  void (*v18)(_QWORD *);
  uint64_t v19;
  uint64_t v20;
  void (*v21)(_QWORD *);
  uint64_t v22;
  uint64_t v23;
  void (*v24)(_QWORD *);
  uint64_t v25;
  uint64_t v26;
  void (*v27)(_QWORD *);
  uint64_t v28;
  uint64_t v29;
  _QWORD v32[4];
  _BYTE v33[288];
  _QWORD v34[36];
  _BYTE v35[288];
  _QWORD v36[36];
  _BYTE v37[288];
  _QWORD v38[36];
  _BYTE v39[288];
  _BYTE v40[296];

  if (*(_QWORD *)(*(_QWORD *)(v10 + 544) + 16))
  {
    v16 = result;
    swift_bridgeObjectRetain();
    sub_20A47094C(v16, a2);
    if ((v17 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v18 = sub_20A464FF0(v38, v16, a2);
      v20 = v19;
      sub_20A465094(v19, (uint64_t)v39);
      sub_20A465094((uint64_t)v39, (uint64_t)v40);
      if (sub_20A4650DC((uint64_t)v40) != 1)
      {
        *(_QWORD *)(v20 + 200) = a3;
        *(_BYTE *)(v20 + 208) = a4 & 1;
      }
      ((void (*)(_QWORD *, _QWORD))v18)(v38, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v21 = sub_20A464FF0(v36, v16, a2);
      v23 = v22;
      sub_20A465094(v22, (uint64_t)v37);
      sub_20A465094((uint64_t)v37, (uint64_t)v38);
      if (sub_20A4650DC((uint64_t)v38) != 1)
      {
        *(_QWORD *)(v23 + 240) = a5;
        *(_BYTE *)(v23 + 248) = a6 & 1;
      }
      ((void (*)(_QWORD *, _QWORD))v21)(v36, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v24 = sub_20A464FF0(v34, v16, a2);
      v26 = v25;
      sub_20A465094(v25, (uint64_t)v35);
      sub_20A465094((uint64_t)v35, (uint64_t)v36);
      if (sub_20A4650DC((uint64_t)v36) != 1)
      {
        *(_QWORD *)(v26 + 256) = a7;
        *(_BYTE *)(v26 + 264) = a8 & 1;
      }
      ((void (*)(_QWORD *, _QWORD))v24)(v34, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v27 = sub_20A464FF0(v32, v16, a2);
      v29 = v28;
      sub_20A465094(v28, (uint64_t)v33);
      sub_20A465094((uint64_t)v33, (uint64_t)v34);
      if (sub_20A4650DC((uint64_t)v34) != 1)
      {
        *(_QWORD *)(v29 + 216) = a9;
        *(_QWORD *)(v29 + 224) = a10;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
      }
      ((void (*)(_QWORD *, _QWORD))v27)(v32, 0);
      return swift_bridgeObjectRelease();
    }
    else
    {
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void (*sub_20A464FF0(_QWORD *a1, uint64_t a2, uint64_t a3))(_QWORD *a1)
{
  _QWORD *v6;

  v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = a3;
  swift_bridgeObjectRetain();
  v6[5] = sub_20A4650F4(v6, a2, a3);
  return sub_20A46505C;
}

void sub_20A46505C(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 40))(*a1, 0);
  swift_bridgeObjectRelease();
  free(v1);
}

uint64_t sub_20A465094(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A4650DC(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

void (*sub_20A4650F4(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  _QWORD *v6;
  char isUniquelyReferenced_nonNull_native;

  v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  swift_bridgeObjectRetain();
  v6[9] = sub_20A465384(v6);
  v6[10] = sub_20A4651D4(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_20A465184;
}

void sub_20A465184(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 72);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 80))(*(_QWORD *)a1 + 32, 0);
  swift_bridgeObjectRelease();
  v2(v1, 0);
  free(v1);
}

void (*sub_20A4651D4(_QWORD *a1, uint64_t a2, uint64_t a3, char a4))(uint64_t *a1)
{
  uint64_t *v4;
  uint64_t *v5;
  _QWORD *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  void (*result)(uint64_t *);

  v5 = v4;
  v10 = malloc(0x268uLL);
  *a1 = v10;
  v10[74] = v5;
  v10[73] = a3;
  v10[72] = a2;
  v11 = *v5;
  v13 = sub_20A47094C(a2, a3);
  *((_BYTE *)v10 + 608) = v12 & 1;
  v14 = *(_QWORD *)(v11 + 16);
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  v17 = v12;
  v18 = *(_QWORD *)(v11 + 24);
  if (v18 < v16 || (a4 & 1) == 0)
  {
    if (v18 >= v16 && (a4 & 1) == 0)
    {
      sub_20A4784B4();
      goto LABEL_9;
    }
    sub_20A4741EC(v16, a4 & 1);
    v19 = sub_20A47094C(a2, a3);
    if ((v17 & 1) == (v20 & 1))
    {
      v13 = v19;
      goto LABEL_9;
    }
LABEL_14:
    result = (void (*)(uint64_t *))sub_20A5B9218();
    __break(1u);
    return result;
  }
LABEL_9:
  v10[75] = v13;
  if ((v17 & 1) != 0)
  {
    memmove(v10 + 36, (const void *)(*(_QWORD *)(*v5 + 56) + 288 * v13), 0x120uLL);
    nullsub_1(v10 + 36);
  }
  else
  {
    sub_20A4653B0((_OWORD *)v10 + 18);
  }
  sub_20A465094((uint64_t)(v10 + 36), (uint64_t)v10);
  return sub_20A465328;
}

void sub_20A465328(uint64_t *a1)
{
  void *v1;
  uint64_t v2;

  v1 = (void *)*a1;
  v2 = *a1 + 288;
  sub_20A4653DC(*a1, *(_BYTE *)(*a1 + 608), *(uint64_t **)(*a1 + 592), *(_QWORD *)(*a1 + 600), *(_QWORD *)(*a1 + 576), *(_QWORD *)(*a1 + 584));
  sub_20A465094((uint64_t)v1, v2);
  sub_20A465660(v2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20A4654E0);
  free(v1);
}

uint64_t (*sub_20A465384(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_20A4653A4;
}

uint64_t sub_20A4653A4(uint64_t result)
{
  **(_QWORD **)(result + 8) = *(_QWORD *)result;
  return result;
}

double sub_20A4653B0(_OWORD *a1)
{
  double result;

  result = 0.0;
  a1[16] = 0u;
  a1[17] = 0u;
  a1[14] = 0u;
  a1[15] = 0u;
  a1[12] = 0u;
  a1[13] = 0u;
  a1[10] = 0u;
  a1[11] = 0u;
  a1[8] = 0u;
  a1[9] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_20A4653DC(uint64_t a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v11;
  _BYTE v13[288];
  _BYTE __dst[288];
  _BYTE v15[288];
  _BYTE v16[288];

  sub_20A465094(a1, (uint64_t)v15);
  sub_20A465094((uint64_t)v15, (uint64_t)v16);
  if (sub_20A4650DC((uint64_t)v16) == 1)
  {
    if ((a2 & 1) != 0)
    {
      swift_arrayDestroy();
      sub_20A57B0A4(a4, *a3);
    }
  }
  else
  {
    sub_20A465094((uint64_t)v15, (uint64_t)v13);
    memcpy(__dst, v13, sizeof(__dst));
    v11 = (_QWORD *)*a3;
    if ((a2 & 1) != 0)
    {
      memmove((void *)(v11[7] + 288 * a4), v13, 0x120uLL);
    }
    else
    {
      sub_20A47745C(a4, a5, a6, __dst, v11);
      swift_bridgeObjectRetain();
    }
  }
  return sub_20A465660((uint64_t)v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20A4656E4);
}

uint64_t sub_20A4654E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    sub_20A4655FC(a4, a5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    sub_20A46564C(a21, a22, a23, a24, a25);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_20A4655FC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_20A46564C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;

  if (a5 != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_20A465660(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  __int128 v4;
  __int128 v5;
  __int128 v6;

  v5 = *(_OWORD *)(a1 + 240);
  v6 = *(_OWORD *)(a1 + 256);
  v4 = *(_OWORD *)(a1 + 208);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    v4,
    *((_QWORD *)&v4 + 1),
    *(_QWORD *)(a1 + 224),
    *(_QWORD *)(a1 + 232),
    v5,
    *((_QWORD *)&v5 + 1),
    v6,
    *((_QWORD *)&v6 + 1),
    *(_QWORD *)(a1 + 272),
    *(_QWORD *)(a1 + 280));
  return a1;
}

uint64_t sub_20A4656E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_20A465800(a4, a5);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_20A465850(a21, a22, a23, a24, a25);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_20A465800(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_20A465850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;

  if (a5 != 1)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t ODIAssessmentResult.payload.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v18;

  v1 = v0;
  v2 = type metadata accessor for ODIAssessment(0);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ODIErrorAssessment(0);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ODIAssessmentResult(0);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A465A2C(v1, (uint64_t)v13);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_20A465A70((uint64_t)v13, (uint64_t)v9, type metadata accessor for ODIErrorAssessment);
    v14 = *((_QWORD *)v9 + 1);
    swift_bridgeObjectRetain();
    v15 = (uint64_t)v9;
    v16 = type metadata accessor for ODIErrorAssessment;
  }
  else
  {
    sub_20A465A70((uint64_t)v13, (uint64_t)v5, type metadata accessor for ODIAssessment);
    v14 = *((_QWORD *)v5 + 2);
    swift_bridgeObjectRetain();
    v15 = (uint64_t)v5;
    v16 = type metadata accessor for ODIAssessment;
  }
  sub_20A465AB4(v15, v16);
  return v14;
}

uint64_t type metadata accessor for ODIAssessment(uint64_t a1)
{
  return sub_20A4659F8(a1, (uint64_t *)&unk_2545F9FA8);
}

uint64_t type metadata accessor for ODIErrorAssessment(uint64_t a1)
{
  return sub_20A4659F8(a1, (uint64_t *)&unk_2545F9FC0);
}

uint64_t type metadata accessor for ODIAssessmentResult(uint64_t a1)
{
  return sub_20A4659F8(a1, (uint64_t *)&unk_2545F9F98);
}

uint64_t sub_20A4659F8(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_20A465A2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ODIAssessmentResult(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A465A70(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A465AB4(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t ODIAssessmentResult.init(id:payload:completedTime:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v8;

  *a6 = a1;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  v8 = type metadata accessor for ODIAssessment(0);
  sub_20A465B80(a5, (uint64_t)a6 + *(int *)(v8 + 24));
  type metadata accessor for ODIAssessmentResult(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t ODIAssessment.init(id:payload:completedTime:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v7;

  *a6 = a1;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  v7 = (uint64_t)a6 + *(int *)(type metadata accessor for ODIAssessment(0) + 24);
  return sub_20A465B80(a5, v7);
}

uint64_t sub_20A465B80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t ODIAssessmentResult.init(errorPayload:errorCode:completedTime:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v7;

  a5[1] = a1;
  a5[2] = a2;
  *a5 = a3;
  v7 = type metadata accessor for ODIErrorAssessment(0);
  sub_20A465B80(a4, (uint64_t)a5 + *(int *)(v7 + 24));
  type metadata accessor for ODIAssessmentResult(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t ODIErrorAssessment.init(errorPayload:errorCode:completedTime:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v6;

  a5[1] = a1;
  a5[2] = a2;
  *a5 = a3;
  v6 = (uint64_t)a5 + *(int *)(type metadata accessor for ODIErrorAssessment(0) + 24);
  return sub_20A465B80(a4, v6);
}

uint64_t ODIAssessmentResult.assessmentCompletedTime.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v19;

  v2 = v1;
  v4 = type metadata accessor for ODIAssessment(0);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ODIErrorAssessment(0);
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ODIAssessmentResult(0);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A465A2C(v2, (uint64_t)v15);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_20A465A70((uint64_t)v15, (uint64_t)v11, type metadata accessor for ODIErrorAssessment);
    sub_20A465DC4((uint64_t)&v11[*(int *)(v8 + 24)], a1);
    v16 = (uint64_t)v11;
    v17 = type metadata accessor for ODIErrorAssessment;
  }
  else
  {
    sub_20A465A70((uint64_t)v15, (uint64_t)v7, type metadata accessor for ODIAssessment);
    sub_20A465DC4((uint64_t)&v7[*(int *)(v4 + 24)], a1);
    v16 = (uint64_t)v7;
    v17 = type metadata accessor for ODIAssessment;
  }
  return sub_20A465AB4(v16, v17);
}

uint64_t sub_20A465DC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t ODIAssessment.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ODIAssessment.payload.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ODIAssessment.assessmentCompletedTime.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A465EB0(type metadata accessor for ODIAssessment, a1);
}

uint64_t ODIErrorAssessment.errorCode.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t ODIErrorAssessment.payload.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ODIErrorAssessment.assessmentCompletedTime.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A465EB0(type metadata accessor for ODIErrorAssessment, a1);
}

uint64_t sub_20A465EB0@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + *(int *)(a1(0) + 24);
  return sub_20A465DC4(v4, a2);
}

_QWORD *initializeBufferWithCopyOfBuffer for ODIAssessmentResult(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      v7 = a2[2];
      a1[1] = a2[1];
      a1[2] = v7;
      v8 = *(int *)(type metadata accessor for ODIErrorAssessment(0) + 24);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_20A5B8F6C();
      v12 = *(_QWORD *)(v11 - 8);
      v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
      swift_bridgeObjectRetain();
      if (!v13(v10, 1, v11))
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
        goto LABEL_10;
      }
    }
    else
    {
      v15 = a2[2];
      a1[1] = a2[1];
      a1[2] = v15;
      a1[3] = a2[3];
      v16 = *(int *)(type metadata accessor for ODIAssessment(0) + 24);
      v9 = (char *)a1 + v16;
      v10 = (char *)a2 + v16;
      v17 = sub_20A5B8F6C();
      v18 = *(_QWORD *)(v17 - 8);
      v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (!v19(v10, 1, v17))
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v9, v10, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v9, 0, 1, v17);
        goto LABEL_10;
      }
    }
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
LABEL_10:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  v14 = *a2;
  *a1 = *a2;
  a1 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t destroy for ODIAssessmentResult(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    v2 = type metadata accessor for ODIErrorAssessment(0);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v2 = type metadata accessor for ODIAssessment(0);
  }
  v3 = a1 + *(int *)(v2 + 24);
  v4 = sub_20A5B8F6C();
  v5 = *(_QWORD *)(v4 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  return result;
}

_QWORD *initializeWithCopy for ODIAssessmentResult(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *a1 = *a2;
  if (EnumCaseMultiPayload == 1)
  {
    v5 = a2[2];
    a1[1] = a2[1];
    a1[2] = v5;
    v6 = *(int *)(type metadata accessor for ODIErrorAssessment(0) + 24);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_20A5B8F6C();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (!v11(v8, 1, v9))
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_8;
    }
  }
  else
  {
    v13 = a2[2];
    a1[1] = a2[1];
    a1[2] = v13;
    a1[3] = a2[3];
    v14 = *(int *)(type metadata accessor for ODIAssessment(0) + 24);
    v7 = (char *)a1 + v14;
    v8 = (char *)a2 + v14;
    v15 = sub_20A5B8F6C();
    v16 = *(_QWORD *)(v15 - 8);
    v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (!v17(v8, 1, v15))
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v7, v8, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v7, 0, 1, v15);
      goto LABEL_8;
    }
  }
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
  memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
LABEL_8:
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithCopy for ODIAssessmentResult(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(char *, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);

  if (a1 != a2)
  {
    sub_20A465AB4((uint64_t)a1, type metadata accessor for ODIAssessmentResult);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      a1[1] = a2[1];
      a1[2] = a2[2];
      v5 = *(int *)(type metadata accessor for ODIErrorAssessment(0) + 24);
      v6 = (char *)a1 + v5;
      v7 = (char *)a2 + v5;
      v8 = sub_20A5B8F6C();
      v9 = *(_QWORD *)(v8 - 8);
      v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
      swift_bridgeObjectRetain();
      if (!v10(v7, 1, v8))
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
        goto LABEL_9;
      }
    }
    else
    {
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      v12 = *(int *)(type metadata accessor for ODIAssessment(0) + 24);
      v6 = (char *)a1 + v12;
      v7 = (char *)a2 + v12;
      v13 = sub_20A5B8F6C();
      v14 = *(_QWORD *)(v13 - 8);
      v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (!v15(v7, 1, v13))
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v6, v7, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v6, 0, 1, v13);
        goto LABEL_9;
      }
    }
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
LABEL_9:
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *initializeWithTake for ODIAssessmentResult(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;

  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    v11 = *(int *)(type metadata accessor for ODIAssessment(0) + 24);
    v5 = (char *)a1 + v11;
    v6 = (char *)a2 + v11;
    v7 = sub_20A5B8F6C();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
      goto LABEL_3;
LABEL_5:
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
    goto LABEL_6;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)((char *)a1 + 8) = *(_OWORD *)((char *)a2 + 8);
  v4 = *(int *)(type metadata accessor for ODIErrorAssessment(0) + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_20A5B8F6C();
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    goto LABEL_5;
LABEL_3:
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
  memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
LABEL_6:
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for ODIAssessmentResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;

  if (a1 != a2)
  {
    sub_20A465AB4(a1, type metadata accessor for ODIAssessmentResult);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      v4 = *(int *)(type metadata accessor for ODIErrorAssessment(0) + 24);
      v5 = (void *)(a1 + v4);
      v6 = (const void *)(a2 + v4);
      v7 = sub_20A5B8F6C();
      v8 = *(_QWORD *)(v7 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
      {
LABEL_4:
        v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
        memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
LABEL_7:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
    }
    else
    {
      v10 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v10;
      v11 = *(int *)(type metadata accessor for ODIAssessment(0) + 24);
      v5 = (void *)(a1 + v11);
      v6 = (const void *)(a2 + v11);
      v7 = sub_20A5B8F6C();
      v8 = *(_QWORD *)(v7 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
        goto LABEL_4;
    }
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
    goto LABEL_7;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ODIAssessmentResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for ODIAssessmentResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_20A4668B0()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_20A4668C0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for ODIAssessment(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for ODIErrorAssessment(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ODIAssessment(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v14 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = *(int *)(a3 + 24);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_20A5B8F6C();
    v11 = *(_QWORD *)(v10 - 8);
    v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12(v9, 1, v10))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
  }
  return v3;
}

uint64_t destroy for ODIAssessment(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_20A5B8F6C();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

_QWORD *initializeWithCopy for ODIAssessment(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_20A5B8F6C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  return a1;
}

_QWORD *assignWithCopy for ODIAssessment(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_20A5B8F6C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_OWORD *initializeWithTake for ODIAssessment(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_20A5B8F6C();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

_QWORD *assignWithTake for ODIAssessment(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_20A5B8F6C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for ODIAssessment()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20A466EE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for ODIAssessment()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_20A466F6C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

void sub_20A466FE4()
{
  sub_20A4676C8();
}

void sub_20A466FF0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2545F9FB8)
  {
    sub_20A5B8F6C();
    v0 = sub_20A5B8D38();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2545F9FB8);
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ODIErrorAssessment(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(char *, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
    v5 = *(int *)(a3 + 24);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_20A5B8F6C();
    v9 = *(_QWORD *)(v8 - 8);
    v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
    swift_bridgeObjectRetain();
    if (v10(v7, 1, v8))
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
  }
  return v3;
}

uint64_t destroy for ODIErrorAssessment(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_20A5B8F6C();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

uint64_t initializeWithCopy for ODIErrorAssessment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(const void *, uint64_t, uint64_t);
  uint64_t v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(int *)(a3 + 24);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = sub_20A5B8F6C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48);
  swift_bridgeObjectRetain();
  if (v9(v6, 1, v7))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v5, v6, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

_QWORD *assignWithCopy for ODIErrorAssessment(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_20A5B8F6C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t initializeWithTake for ODIErrorAssessment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v4 = *(int *)(a3 + 24);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = sub_20A5B8F6C();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t assignWithTake for ODIErrorAssessment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = sub_20A5B8F6C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for ODIErrorAssessment()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20A4675B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for ODIErrorAssessment()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_20A467640(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 16) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

void sub_20A4676B8()
{
  sub_20A4676C8();
}

void sub_20A4676C8()
{
  unint64_t v0;

  sub_20A466FF0();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_20A46773C(uint64_t result, uint64_t a2, uint64_t a3, int64_t a4, unint64_t a5)
{
  int64_t v5;
  uint64_t v6;
  int64_t v7;

  if (result < 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  v5 = a5 >> 1;
  v6 = (a5 >> 1) - a4;
  if (__OFSUB__(a5 >> 1, a4))
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (!result || v6 < 0 || (v7 = a5 >> 1, v6 >= result))
  {
    v7 = a4 + result;
    if (__OFADD__(a4, result))
      goto LABEL_18;
  }
  if (v7 < a4)
    goto LABEL_14;
  if (v5 < a4)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v5 >= v7)
  {
    if ((v7 & 0x8000000000000000) == 0)
      return a2;
    goto LABEL_17;
  }
LABEL_16:
  __break(1u);
LABEL_17:
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

uint64_t *sub_20A4677B8@<X0>(uint64_t *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, unint64_t a5@<X8>)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  _BYTE *v18;
  char v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;

  v15 = result[2];
  v14 = result[3];
  v16 = v14 >> 1;
  v17 = v15 - (v14 >> 1);
  if (v15 == v14 >> 1)
  {
    sub_20A467C20();
    swift_allocError();
    *v18 = 4;
    return (uint64_t *)swift_willThrow();
  }
  if (v15 >= (uint64_t)(v14 >> 1))
    goto LABEL_71;
  v9 = *result;
  a3 = result[1];
  v19 = *(_BYTE *)(a3 + v15);
  v11 = v19;
  v5 = v15 + 1;
  v6 = (v19 & 0x40) >> 6;
  if ((v19 & 0x40) != 0)
    v20 = 3;
  else
    v20 = 2;
  if (v19 >= 0)
    v21 = (v19 & 0x40) >> 6;
  else
    v21 = v20;
  v13 = v19 & 0x1F;
  if ((v19 & 0x1F) == 0x1F)
  {
    if (v5 == v16)
      goto LABEL_22;
    v8 = 0;
    v6 = v14 & 0xFFFFFFFFFFFFFFFELL;
    v22 = a3 + v15;
    v5 = 1;
    v7 = 0xFFFFFFFFFFFFFELL;
    a5 = result[3];
    while (1)
    {
      result = (uint64_t *)(v15 + v5);
      if (v15 + v5 >= (uint64_t)(a5 >> 1))
        goto LABEL_67;
      result = (uint64_t *)(v17 + v5);
      if (!(v17 + v5))
        goto LABEL_68;
      if (a5 >> 1 < v16)
        goto LABEL_69;
      v23 = v5 + 1;
      if (__OFADD__(v5, 1))
        goto LABEL_70;
      result = (uint64_t *)*(unsigned __int8 *)(v22 + v5);
      a5 = a5 & 1 | v6;
      v13 = *(_BYTE *)(v22 + v5) & 0x7F | (unint64_t)(v8 << 7);
      if ((result & 0x80) == 0)
        break;
      if (v13 > 0xFFFFFFFFFFFFFELL)
        goto LABEL_34;
      ++v5;
      v8 = v13;
      if (!(v17 + v5))
        goto LABEL_22;
    }
    v17 += v5;
    if (v17 == -1)
      goto LABEL_22;
    v5 += v15 + 1;
    if (v5 >= v16)
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
  }
  else
  {
    if (v5 == v16)
      goto LABEL_22;
    v23 = 1;
    a5 = result[3];
    if (v5 >= v16)
      goto LABEL_38;
  }
  v7 = v23 + 1;
  if (__OFADD__(v23, 1))
    goto LABEL_72;
  v12 = *(unsigned __int8 *)(a3 + v5);
  a4 = v5 + 1;
  if ((v12 & 0x80) == 0)
    goto LABEL_28;
  v15 = v12 & 0x7F;
  if ((v12 & 0x7Fu) > 7)
  {
LABEL_34:
    sub_20A467C20();
    swift_allocError();
    v25 = 5;
    goto LABEL_23;
  }
LABEL_39:
  if (!(_DWORD)v15)
  {
    v12 = 0;
    goto LABEL_64;
  }
  if (a4 == v16)
    goto LABEL_22;
  v17 = v16 + ~v5;
  v6 = v16 - v5 - 2;
  if (v6 >= (v15 - 1))
    v6 = (v15 - 1);
  if (v17 <= v6)
    goto LABEL_81;
  v12 = *(unsigned __int8 *)(a3 + a4);
  a4 = v5 + 2;
  if ((_DWORD)v15 == 1)
    goto LABEL_64;
  if (a4 == v16)
    goto LABEL_22;
  if (v17 <= v6)
    goto LABEL_81;
  v31 = *(unsigned __int8 *)(a3 + a4);
  a4 = v5 + 3;
  v12 = v31 | (v12 << 8);
  if ((_DWORD)v15 == 2)
  {
LABEL_64:
    v36 = __OFADD__(v7, v15);
    v7 += v15;
    if (v36)
      goto LABEL_66;
LABEL_28:
    v37 = v7;
    v38 = a2;
    v39 = v21;
    v40 = v10;
    result = (uint64_t *)sub_20A46773C(v12, v9, a3, a4, v14 & 0xFFFFFFFFFFFFFFFELL | a5 & 1);
    v41 = (uint64_t)result;
    a5 = (a4 >> 1) - a3;
    if (!__OFSUB__(a4 >> 1, a3))
    {
      if (a5 == v12)
      {
        v26 = a2;
        v27 = a3;
        v28 = a4;
        swift_unknownObjectRetain();
        v9 = v41;
        v29 = v26;
        v10 = v40;
        sub_20A4E83D0(v13, v39, (v11 >> 5) & 1, v41, v29, v27, v28, v38);
        v11 = v40;
        if (!v40)
        {
          LOBYTE(a5) = v37;
          result = (uint64_t *)(v37 + v12);
          if (__OFADD__(v37, v12))
            goto LABEL_74;
          sub_20A467C64((uint64_t)result);
        }
      }
      else
      {
        sub_20A467C20();
        swift_allocError();
        *v30 = 4;
        swift_unknownObjectRetain();
        swift_willThrow();
      }
      return (uint64_t *)swift_unknownObjectRelease();
    }
    while (1)
    {
      __break(1u);
LABEL_74:
      __break(1u);
LABEL_75:
      if (a4 == v16)
        goto LABEL_22;
      if (v17 <= v6)
        goto LABEL_81;
      if ((_DWORD)v15 != 7)
        goto LABEL_22;
      v21 = a2;
      a2 = v8;
      v16 = *(unsigned __int8 *)(a3 + a4);
      a4 = v5 + 8;
      v12 = v16 | (v12 << 8);
      v36 = __OFADD__(v7, v15);
      v7 += v15;
      if (!v36)
        goto LABEL_28;
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
    }
  }
  if (a4 == v16)
  {
LABEL_22:
    sub_20A467C20();
    swift_allocError();
    v25 = 4;
LABEL_23:
    *v24 = v25;
    swift_unknownObjectRetain();
    swift_willThrow();
    return (uint64_t *)swift_unknownObjectRelease();
  }
  if (v17 <= v6)
    goto LABEL_81;
  v32 = *(unsigned __int8 *)(a3 + a4);
  a4 = v5 + 4;
  v12 = v32 | (v12 << 8);
  if ((_DWORD)v15 == 3)
    goto LABEL_64;
  if (a4 == v16)
    goto LABEL_22;
  if (v17 <= v6)
    goto LABEL_81;
  v33 = *(unsigned __int8 *)(a3 + a4);
  a4 = v5 + 5;
  v12 = v33 | (v12 << 8);
  if ((_DWORD)v15 == 4)
    goto LABEL_64;
  if (a4 == v16)
    goto LABEL_22;
  if (v17 > v6)
  {
    v8 = a2;
    LODWORD(a2) = v21;
    v34 = *(unsigned __int8 *)(a3 + a4);
    a4 = v5 + 6;
    v12 = v34 | (v12 << 8);
    if ((_DWORD)v15 == 5)
      goto LABEL_60;
    if (a4 != v16)
    {
      if (v17 > v6)
      {
        v35 = *(unsigned __int8 *)(a3 + a4);
        a4 = v5 + 7;
        v12 = v35 | (v12 << 8);
        if ((_DWORD)v15 != 6)
          goto LABEL_75;
LABEL_60:
        a2 = v8;
        v36 = __OFADD__(v7, v15);
        v7 += v15;
        if (v36)
          goto LABEL_66;
        goto LABEL_28;
      }
      goto LABEL_81;
    }
    goto LABEL_22;
  }
LABEL_81:
  __break(1u);
  return result;
}

unint64_t sub_20A467C20()
{
  unint64_t result;

  result = qword_2545F9FD0;
  if (!qword_2545F9FD0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5BDE00, &type metadata for ASN1DecodeError);
    atomic_store(result, (unint64_t *)&qword_2545F9FD0);
  }
  return result;
}

uint64_t sub_20A467C64(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (result)
  {
    if (result < 0)
    {
      __break(1u);
    }
    else
    {
      v2 = *(_QWORD *)(v1 + 16);
      v3 = *(_QWORD *)(v1 + 24) >> 1;
      v4 = v3 - v2;
      if (!__OFSUB__(v3, v2))
      {
        if ((v4 & 0x8000000000000000) == 0 && v4 < result)
          goto LABEL_16;
        v5 = v2 + result;
        if (!__OFADD__(v2, result))
        {
          if (v3 >= v5)
          {
            if (v5 >= v2)
            {
              *(_QWORD *)(v1 + 16) = v5;
              return result;
            }
            goto LABEL_15;
          }
LABEL_14:
          __break(1u);
LABEL_15:
          __break(1u);
LABEL_16:
          __break(1u);
          return result;
        }
LABEL_13:
        __break(1u);
        goto LABEL_14;
      }
    }
    __break(1u);
    goto LABEL_13;
  }
  return result;
}

_QWORD *sub_20A467CC0(uint64_t *a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _OWORD v17[2];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;

  v4 = v3;
  v7 = *a1;
  v6 = a1[1];
  v8 = a1[2];
  v9 = a1[3];
  v18 = *a1;
  v19 = v6;
  v20 = v8;
  v21 = v9;
  if (v8 == v9 >> 1)
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_12:
    *a1 = v7;
    a1[1] = v6;
    a1[2] = v8;
    a1[3] = v9;
  }
  else
  {
    swift_unknownObjectRetain();
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
    while (1)
    {
      sub_20A4677B8(&v18, a2, a3 & 1, v13, (unint64_t)v17);
      if (v4)
        break;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v10 = sub_20A46FFA8(0, v10[2] + 1, 1, v10);
      v15 = v10[2];
      v14 = v10[3];
      if (v15 >= v14 >> 1)
        v10 = sub_20A46FFA8((_QWORD *)(v14 > 1), v15 + 1, 1, v10);
      v10[2] = v15 + 1;
      sub_20A44FD68(v17, &v10[4 * v15 + 4]);
      v8 = v20;
      v9 = v21;
      if (v20 == v21 >> 1)
      {
        swift_unknownObjectRelease();
        v7 = v18;
        v6 = v19;
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  return v10;
}

uint64_t *__swift_assign_boxed_opaque_existential_0(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CoreODIASN1ApplicationType()
{
  return &type metadata for CoreODIASN1ApplicationType;
}

_QWORD *initializeBufferWithCopyOfBuffer for CoreODILogger(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for CoreODILogger()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for CoreODILogger(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for CoreODILogger(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CoreODILogger(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CoreODILogger(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CoreODIASN1OtherType()
{
  return &type metadata for CoreODIASN1OtherType;
}

uint64_t destroy for ASN1ItemTemp()
{
  return swift_unknownObjectRelease();
}

uint64_t initializeWithCopy for ASN1ItemTemp(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_unknownObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ASN1ItemTemp(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ASN1ItemTemp(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  swift_unknownObjectRelease();
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  return a1;
}

uint64_t getEnumTagSinglePayload for ASN1ItemTemp(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ASN1ItemTemp(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ASN1ItemTemp()
{
  return &type metadata for ASN1ItemTemp;
}

uint64_t getEnumTagSinglePayload for ASN1DecodeError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ASN1DecodeError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_20A468374 + 4 * byte_20A5BDCC5[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_20A4683A8 + 4 * asc_20A5BDCC0[v4]))();
}

uint64_t sub_20A4683A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A4683B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A4683B8);
  return result;
}

uint64_t sub_20A4683C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A4683CCLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_20A4683D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A4683D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ASN1DecodeError()
{
  return &type metadata for ASN1DecodeError;
}

uint64_t destroy for CoreODIASN1ContextType(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1(a1 + 24);
}

ValueMetadata *type metadata accessor for CoreODIASN1ContextType()
{
  return &type metadata for CoreODIASN1ContextType;
}

uint64_t _s17CoreODIEssentials26CoreODIASN1ApplicationTypeVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v3 = a2 + 24;
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v4;
  v5 = **(void (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  swift_bridgeObjectRetain();
  v5(a1 + 24, v3, v4);
  return a1;
}

_QWORD *_s17CoreODIEssentials26CoreODIASN1ApplicationTypeVwca_0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_0(a1 + 3, a2 + 3);
  return a1;
}

uint64_t _s17CoreODIEssentials26CoreODIASN1ApplicationTypeVwta_0(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  return a1;
}

uint64_t _s17CoreODIEssentials26CoreODIASN1ApplicationTypeVwet_0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_20A468594(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CoreODIASN1PrivateType()
{
  return &type metadata for CoreODIASN1PrivateType;
}

unint64_t sub_20A4685F4()
{
  unint64_t result;

  result = qword_2545F9FD8;
  if (!qword_2545F9FD8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5BDDD8, &type metadata for ASN1DecodeError);
    atomic_store(result, (unint64_t *)&qword_2545F9FD8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CoreODIASN1TagCategory(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_20A468684 + 4 * byte_20A5BDCCF[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_20A4686B8 + 4 * byte_20A5BDCCA[v4]))();
}

uint64_t sub_20A4686B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A4686C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A4686C8);
  return result;
}

uint64_t sub_20A4686D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A4686DCLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_20A4686E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A4686E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CoreODIASN1TagCategory()
{
  return &type metadata for CoreODIASN1TagCategory;
}

unint64_t sub_20A468708()
{
  unint64_t result;

  result = qword_2545F9FE0;
  if (!qword_2545F9FE0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5BDE98, &type metadata for CoreODIASN1TagCategory);
    atomic_store(result, (unint64_t *)&qword_2545F9FE0);
  }
  return result;
}

void ODIError(_:fromError:code:forceCode:properties:file:function:line:)(uint64_t a1, uint64_t a2, char *a3, unsigned __int8 *a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v12;
  char *v14;
  unint64_t v15;
  char *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v29;
  uint64_t v30;
  char v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  int64_t v40;
  unint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;
  char v47;
  unint64_t v48;
  uint64_t v49;
  _BOOL8 v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  char v54;
  _OWORD *v55;
  uint64_t v56;
  BOOL v57;
  uint64_t v58;
  char v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  _QWORD *v64;
  unint64_t v65;
  unint64_t v66;
  _QWORD *v67;
  char v68;
  int64_t v69;
  char *v70;
  unint64_t v71;
  int v72;
  int64_t v73;
  _OWORD v78[2];
  _OWORD v79[2];
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;

  LOBYTE(v12) = a5;
  LODWORD(v14) = *a4;
  if (qword_253EB4718 != -1)
    goto LABEL_73;
  while (1)
  {
    v15 = sub_20A469C58(MEMORY[0x24BEE4AF8]);
    if (!a3)
      goto LABEL_9;
    v16 = a3;
    v17 = (void *)sub_20A5B8414();
    v18 = objc_msgSend(v17, sel_domain);
    v19 = sub_20A5B8900();
    v21 = v20;

    if (v19 == 0x726F72724549444FLL && v21 == 0xE800000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v23 = sub_20A5B91AC();
      swift_bridgeObjectRelease();
      if ((v23 & 1) == 0)
      {
        v24 = sub_20A5B8900();
        v26 = v25;
        v82 = sub_20A459574(0, (unint64_t *)&qword_253EB4870);
        *(_QWORD *)&v81 = v17;
        sub_20A44FD68(&v81, v79);
        v27 = v17;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)&v78[0] = v15;
        sub_20A476610(v79, v24, v26, isUniquelyReferenced_nonNull_native);
        v15 = *(_QWORD *)&v78[0];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

LABEL_9:
        if (!a6)
          goto LABEL_61;
        goto LABEL_10;
      }
    }
    if ((v12 & 1) == 0)
    {
      ODIErrorCode.init(rawValue:)((Swift::Int)objc_msgSend(v17, sel_code));
      if (v81 != 209)
        LODWORD(v14) = v81;
    }
    v60 = objc_msgSend(v17, sel_userInfo);
    v15 = sub_20A5B8888();

    swift_bridgeObjectRelease();
    if (!a6)
    {
LABEL_61:
      v61 = *(_QWORD *)(v15 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v61
        && (v62 = sub_20A470B50(0x636F766E4949444FLL, 0xEE00736E6F697461, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x24BEE0B20], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_20A470C9C), (v63 & 1) != 0)&& (sub_20A44FD78(*(_QWORD *)(v15 + 56) + 32 * v62, (uint64_t)&v81), __swift_instantiateConcreteTypeFromMangledName(&qword_253EB47F0), swift_dynamicCast()))
      {
        v64 = *(_QWORD **)&v79[0];
      }
      else
      {
        v64 = (_QWORD *)MEMORY[0x24BEE4AF8];
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v64 = sub_20A46FA34(0, v64[2] + 1, 1, v64, (uint64_t *)&unk_253EB4938);
      v66 = v64[2];
      v65 = v64[3];
      if (v66 >= v65 >> 1)
        v64 = sub_20A46FA34((_QWORD *)(v65 > 1), v66 + 1, 1, v64, (uint64_t *)&unk_253EB4938);
      v64[2] = v66 + 1;
      v67 = &v64[7 * v66];
      v67[4] = a1;
      v67[5] = a2;
      v67[6] = a7;
      v67[7] = a8;
      v67[8] = a9;
      v67[9] = a10;
      v67[10] = a11;
      v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_253EB47F0);
      *(_QWORD *)&v81 = v64;
      sub_20A44FD68(&v81, v79);
      v68 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v78[0] = v15;
      sub_20A476610(v79, 0x636F766E4949444FLL, 0xEE00736E6F697461, v68);
      swift_bridgeObjectRelease();
      __asm { BR              X10 }
    }
LABEL_10:
    v29 = *(_QWORD *)(v15 + 16);
    swift_bridgeObjectRetain();
    v72 = (int)v14;
    v71 = v15;
    if (v29
      && (v30 = sub_20A470B50(0x65706F725049444FLL, 0xED00007365697472, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x24BEE0B20], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_20A470C9C), (v31 & 1) != 0)&& (sub_20A44FD78(*(_QWORD *)(v15 + 56) + 32 * v30, (uint64_t)&v81), __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB47A8), swift_dynamicCast()))
    {
      v32 = *(_QWORD **)&v79[0];
    }
    else
    {
      v32 = (_QWORD *)sub_20A469F2C(MEMORY[0x24BEE4AF8], &qword_253EB51E8, &qword_253EB4FC0, (uint64_t (*)(uint64_t *, unint64_t))sub_20A44FD68);
    }
    a3 = 0;
    v12 = a6 + 64;
    v33 = 1 << *(_BYTE *)(a6 + 32);
    v34 = -1;
    if (v33 < 64)
      v34 = ~(-1 << v33);
    v35 = v34 & *(_QWORD *)(a6 + 64);
    v36 = (unint64_t)(v33 + 63) >> 6;
    v14 = (char *)&v81 + 8;
    v70 = (char *)(v36 - 5);
    v69 = v36 - 1;
    v73 = v36;
    while (1)
    {
      if (v35)
      {
        v37 = __clz(__rbit64(v35));
        v35 &= v35 - 1;
        v38 = v37 | ((_QWORD)a3 << 6);
        goto LABEL_20;
      }
      v40 = (int64_t)(a3 + 1);
      if (__OFADD__(a3, 1))
        break;
      if (v40 >= v36)
      {
        v42 = a3;
LABEL_26:
        v35 = 0;
        v80 = 0;
        a3 = v42;
        memset(v79, 0, sizeof(v79));
        goto LABEL_27;
      }
      v41 = *(_QWORD *)(v12 + 8 * v40);
      if (v41)
        goto LABEL_24;
      v42 = a3 + 1;
      if ((uint64_t)(a3 + 2) >= v36)
        goto LABEL_26;
      v41 = *(_QWORD *)(v12 + 8 * (_QWORD)(a3 + 2));
      if (v41)
      {
        v40 = (int64_t)(a3 + 2);
        goto LABEL_24;
      }
      v42 = a3 + 2;
      if ((uint64_t)(a3 + 3) >= v36)
        goto LABEL_26;
      v41 = *(_QWORD *)(v12 + 8 * (_QWORD)(a3 + 3));
      if (v41)
      {
        v40 = (int64_t)(a3 + 3);
        goto LABEL_24;
      }
      v40 = (int64_t)(a3 + 4);
      v42 = a3 + 3;
      if ((uint64_t)(a3 + 4) >= v36)
        goto LABEL_26;
      v41 = *(_QWORD *)(v12 + 8 * v40);
      if (v41)
        goto LABEL_24;
      do
      {
        if (v70 == a3)
        {
          v42 = (char *)v69;
          goto LABEL_26;
        }
        v41 = *(_QWORD *)(a6 + 104 + 8 * (_QWORD)a3++);
      }
      while (!v41);
      v40 = (int64_t)(a3 + 4);
LABEL_24:
      v35 = (v41 - 1) & v41;
      v38 = __clz(__rbit64(v41)) + (v40 << 6);
      a3 = (char *)v40;
LABEL_20:
      v39 = *(_QWORD *)(a6 + 56);
      LOBYTE(v79[0]) = *(_BYTE *)(*(_QWORD *)(a6 + 48) + v38);
      sub_20A44FD78(v39 + 32 * v38, (uint64_t)v79 + 8);
LABEL_27:
      sub_20A459C88((uint64_t)v79, (uint64_t)&v81, qword_253EB45C8);
      if (!v83)
      {
        swift_release();
        v82 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB47A8);
        *(_QWORD *)&v81 = v32;
        sub_20A44FD68(&v81, v79);
        swift_bridgeObjectRetain();
        v59 = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)&v78[0] = v71;
        sub_20A476610(v79, 0x65706F725049444FLL, 0xED00007365697472, v59);
        v15 = *(_QWORD *)&v78[0];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        LODWORD(v14) = v72;
        goto LABEL_61;
      }
      v43 = v81;
      sub_20A44FD68((__int128 *)((char *)&v81 + 8), v79);
      if (v32[2])
      {
        v44 = sub_20A470988(v43, (void (*)(uint64_t))ODIErrorPropertyKey.rawValue.getter, sub_20A470D7C);
        if ((v45 & 1) != 0)
        {
          sub_20A44FD78(v32[7] + 32 * v44, (uint64_t)v78);
          sub_20A44FDFC((uint64_t)v78);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v79);
          continue;
        }
      }
      memset(v78, 0, sizeof(v78));
      sub_20A44FDFC((uint64_t)v78);
      sub_20A44FD78((uint64_t)v79, (uint64_t)v78);
      v46 = swift_isUniquelyReferenced_nonNull_native();
      v48 = sub_20A470988(v43, (void (*)(uint64_t))ODIErrorPropertyKey.rawValue.getter, sub_20A470D7C);
      v49 = v32[2];
      v50 = (v47 & 1) == 0;
      v51 = v49 + v50;
      if (__OFADD__(v49, v50))
        goto LABEL_72;
      v52 = v47;
      if (v32[3] >= v51)
      {
        if ((v46 & 1) != 0)
        {
          if ((v47 & 1) == 0)
            goto LABEL_52;
        }
        else
        {
          sub_20A478148(&qword_253EB51E8);
          if ((v52 & 1) == 0)
            goto LABEL_52;
        }
LABEL_41:
        v55 = (_OWORD *)(v32[7] + 32 * v48);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
        sub_20A44FD68(v78, v55);
        goto LABEL_54;
      }
      sub_20A473074(v51, v46);
      v53 = sub_20A470988(v43, (void (*)(uint64_t))ODIErrorPropertyKey.rawValue.getter, sub_20A470D7C);
      if ((v52 & 1) != (v54 & 1))
        goto LABEL_75;
      v48 = v53;
      if ((v52 & 1) != 0)
        goto LABEL_41;
LABEL_52:
      v32[(v48 >> 6) + 8] |= 1 << v48;
      *(_BYTE *)(v32[6] + v48) = v43;
      sub_20A44FD68(v78, (_OWORD *)(v32[7] + 32 * v48));
      v56 = v32[2];
      v57 = __OFADD__(v56, 1);
      v58 = v56 + 1;
      if (v57)
      {
        __break(1u);
LABEL_75:
        sub_20A5B9218();
        __break(1u);
        JUMPOUT(0x20A4697C4);
      }
      v32[2] = v58;
LABEL_54:
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v79);
      v36 = v73;
      v12 = a6 + 64;
    }
    __break(1u);
LABEL_72:
    __break(1u);
LABEL_73:
    swift_once();
  }
}

unint64_t sub_20A469B08(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB48D0);
  v2 = sub_20A5B8FF0();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_20A47D62C(v6, (uint64_t)&v15, &qword_2545F9FF0);
    v7 = v15;
    v8 = v16;
    result = sub_20A470B50(v15, v16, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x24BEE0B20], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_20A470C9C);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = sub_20A44CFD8(&v17, v3[7] + 40 * result);
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 56;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_20A469C58(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5210);
  v2 = sub_20A5B8FF0();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  v7 = MEMORY[0x24BEE0B20];
  while (1)
  {
    sub_20A47D62C(v6, (uint64_t)&v16, &qword_2545F9F80);
    v8 = v16;
    v9 = v17;
    result = sub_20A470B50(v16, v17, (void (*)(_BYTE *, uint64_t, uint64_t))v7, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_20A470C9C);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v12 = (uint64_t *)(v3[6] + 16 * result);
    *v12 = v8;
    v12[1] = v9;
    result = (unint64_t)sub_20A44FD68(&v18, (_OWORD *)(v3[7] + 32 * result));
    v13 = v3[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v3[2] = v15;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_20A469DA8(uint64_t a1)
{
  return sub_20A469F2C(a1, &qword_253EB51E8, &qword_253EB4FC0, (uint64_t (*)(uint64_t *, unint64_t))sub_20A44FD68);
}

unint64_t sub_20A469DC4(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  _BYTE v13[8];
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB51E0);
  v2 = sub_20A5B8FF0();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_20A47D62C(v6, (uint64_t)v13, &qword_253EB4FB0);
    v7 = v13[0];
    result = sub_20A470988(v13[0], (void (*)(uint64_t))DIPErrorPropertyKey.rawValue.getter, sub_20A47124C);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_BYTE *)(v3[6] + result) = v7;
    result = (unint64_t)sub_20A44FD68(&v14, (_OWORD *)(v3[7] + 32 * result));
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_20A469F10(uint64_t a1)
{
  return sub_20A469F2C(a1, &qword_2545FA050, &qword_2545FA058, (uint64_t (*)(uint64_t *, unint64_t))sub_20A44FD68);
}

unint64_t sub_20A469F2C(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t *, unint64_t))
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  unint64_t result;
  char v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  _BYTE v18[8];
  uint64_t v19;

  if (!*(_QWORD *)(a1 + 16))
  {
    v8 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v7 = sub_20A5B8FF0();
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  v10 = v7 + 64;
  v11 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_20A47D62C(v11, (uint64_t)v18, a3);
    v12 = v18[0];
    result = sub_20A470988(v18[0], (void (*)(uint64_t))ODIErrorPropertyKey.rawValue.getter, sub_20A470D7C);
    if ((v14 & 1) != 0)
      break;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_BYTE *)(v8[6] + result) = v12;
    result = a4(&v19, v8[7] + 32 * result);
    v15 = v8[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v8[2] = v17;
    v11 += 40;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_20A46A070(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA0E8);
  v2 = (_QWORD *)sub_20A5B8FF0();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v7 = *(v4 - 1);
    v8 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_20A470B50(v5, v6, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x24BEE0B20], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_20A470C9C);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (_QWORD *)(v2[7] + 16 * result);
    *v12 = v7;
    v12[1] = v8;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_20A46A1B4(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB48D8);
  v2 = sub_20A5B8FF0();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_20A47D62C(v6, (uint64_t)&v13, &qword_253EB4890);
    v7 = v13;
    result = sub_20A470A3C(v13);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v7;
    result = (unint64_t)sub_20A44FD68(&v14, (_OWORD *)(v3[7] + 32 * result));
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_20A46A2E0(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5220);
  v2 = sub_20A5B8FF0();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_20A47D62C(v6, (uint64_t)v15, &qword_2545FA0E0);
    result = sub_20A470A0C((uint64_t)v15);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v9 = v3[6] + 40 * result;
    v10 = v15[0];
    v11 = v15[1];
    *(_QWORD *)(v9 + 32) = v16;
    *(_OWORD *)v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    result = (unint64_t)sub_20A44FD68(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

_QWORD *sub_20A46A420(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t *v9;
  _QWORD *result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  char v14;
  _QWORD __dst[39];

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA040);
  v2 = (_QWORD *)sub_20A5B8FF0();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    return v2;
  }
  swift_retain();
  memcpy(__dst, (const void *)(a1 + 32), 0x130uLL);
  v4 = __dst[0];
  v5 = __dst[1];
  sub_20A47C3D0(__dst);
  v6 = sub_20A470B50(v4, v5, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x24BEE0B20], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_20A470C9C);
  if ((v7 & 1) != 0)
  {
LABEL_8:
    __break(1u);
LABEL_9:
    swift_release();
    goto LABEL_11;
  }
  v8 = 336;
  while (1)
  {
    *(_QWORD *)((char *)v2 + ((v6 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v6;
    v9 = (uint64_t *)(v2[6] + 16 * v6);
    *v9 = v4;
    v9[1] = v5;
    result = memcpy((void *)(v2[7] + 288 * v6), &__dst[2], 0x120uLL);
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      break;
    v2[2] = v13;
    if (!--v3)
      goto LABEL_9;
    memcpy(__dst, (const void *)(a1 + v8), 0x130uLL);
    v4 = __dst[0];
    v5 = __dst[1];
    sub_20A47C3D0(__dst);
    v6 = sub_20A470B50(v4, v5, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x24BEE0B20], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_20A470C9C);
    v8 += 304;
    if ((v14 & 1) != 0)
      goto LABEL_8;
  }
  __break(1u);
  return result;
}

unint64_t sub_20A46A5B4(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t (*v5)(void);
  uint64_t v6;
  uint64_t v7;
  char v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5200);
  v2 = (_QWORD *)sub_20A5B8FF0();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_BYTE *)(a1 + 48);
  v5 = MEMORY[0x24BEE0B20];
  while (1)
  {
    v6 = *((_QWORD *)v4 - 2);
    v7 = *((_QWORD *)v4 - 1);
    v8 = *v4;
    swift_bridgeObjectRetain();
    result = sub_20A470B50(v6, v7, (void (*)(_BYTE *, uint64_t, uint64_t))v5, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_20A470C9C);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v6;
    v11[1] = v7;
    *(_BYTE *)(v2[7] + result) = v8;
    v12 = v2[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v4 += 24;
    v2[2] = v14;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_20A46A6EC(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB51F0);
  v2 = (_QWORD *)sub_20A5B8FF0();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v7 = *(v4 - 1);
    v8 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_20A470B50(v5, v6, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x24BEE0B20], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_20A470C9C);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (_QWORD *)(v2[7] + 16 * result);
    *v12 = v7;
    v12[1] = v8;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_20A46A830(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t result;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[1040];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA0D0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA0C0);
  v7 = (_QWORD *)sub_20A5B8FF0();
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = (uint64_t)&v6[*(int *)(v2 + 48)];
  v20 = a1;
  v21 = v9;
  v10 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v11 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_20A47D62C(v10, (uint64_t)v6, &qword_2545FA0D0);
    memcpy(v22, v6, 0x403uLL);
    result = sub_20A470AE4(v22);
    if ((v13 & 1) != 0)
      break;
    v14 = result;
    *(_QWORD *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    memcpy((void *)(v7[6] + 1032 * result), v22, 0x403uLL);
    v15 = v7[7];
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA0B8);
    result = sub_20A459C88(v21, v15 + *(_QWORD *)(*(_QWORD *)(v16 - 8) + 72) * v14, &qword_2545FA0B8);
    v17 = v7[2];
    v18 = __OFADD__(v17, 1);
    v19 = v17 + 1;
    if (v18)
      goto LABEL_11;
    v7[2] = v19;
    v10 += v11;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_20A46A9EC(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  void (*v5)(_BYTE *, uint64_t, uint64_t);
  uint64_t v6;
  unint64_t v7;
  void *v8;
  id v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA0A0);
  v2 = (_QWORD *)sub_20A5B8FF0();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (void **)(a1 + 48);
  v5 = (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x24BDCDCF8];
  while (1)
  {
    v6 = (uint64_t)*(v4 - 2);
    v7 = (unint64_t)*(v4 - 1);
    v8 = *v4;
    sub_20A45964C(v6, v7);
    v9 = v8;
    result = sub_20A470B50(v6, v7, v5, sub_20A471E7C);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v2[6] + 16 * result);
    *v12 = v6;
    v12[1] = v7;
    *(_QWORD *)(v2[7] + 8 * result) = v9;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v2[2] = v15;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_20A46AB30(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  uint64_t (*v5)(void);
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA0B0);
  v2 = (_QWORD *)sub_20A5B8FF0();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (void **)(a1 + 48);
  v5 = MEMORY[0x24BEE0B20];
  while (1)
  {
    v6 = (uint64_t)*(v4 - 2);
    v7 = (uint64_t)*(v4 - 1);
    v8 = *v4;
    swift_bridgeObjectRetain();
    v9 = v8;
    result = sub_20A470B50(v6, v7, (void (*)(_BYTE *, uint64_t, uint64_t))v5, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_20A470C9C);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v2[6] + 16 * result);
    *v12 = v6;
    v12[1] = v7;
    *(_QWORD *)(v2[7] + 8 * result) = v9;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v2[2] = v15;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_20A46AC70(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t result;
  char v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  _QWORD v26[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA090);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (_QWORD *)((char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(_QWORD *)(a1 + 16))
  {
    v8 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA000);
  v7 = sub_20A5B8FF0();
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  v10 = (uint64_t)v6 + *(int *)(v2 + 48);
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v26[1] = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_20A47D62C(v13, (uint64_t)v6, &qword_2545FA090);
    v16 = *v6;
    v15 = v6[1];
    result = sub_20A470B50(*v6, v15, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x24BEE0B20], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_20A470C9C);
    if ((v18 & 1) != 0)
      break;
    v19 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v20 = (uint64_t *)(v8[6] + 16 * result);
    *v20 = v16;
    v20[1] = v15;
    v21 = v8[7];
    v22 = type metadata accessor for ODIKnownBinding();
    result = sub_20A479808(v10, v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v19);
    v23 = v8[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
      goto LABEL_11;
    v8[2] = v25;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_20A46AE14(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t result;
  char v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  _QWORD v26[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_253EB50F0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (_QWORD *)((char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(_QWORD *)(a1 + 16))
  {
    v8 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB51F8);
  v7 = sub_20A5B8FF0();
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  v10 = (char *)v6 + *(int *)(v2 + 48);
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v26[1] = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_20A47D62C(v13, (uint64_t)v6, &qword_253EB50F0);
    v16 = *v6;
    v15 = v6[1];
    result = sub_20A470B50(*v6, v15, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x24BEE0B20], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_20A470C9C);
    if ((v18 & 1) != 0)
      break;
    v19 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v20 = (uint64_t *)(v8[6] + 16 * result);
    *v20 = v16;
    v20[1] = v15;
    v21 = v8[7];
    v22 = sub_20A5B8630();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v19, v10, v22);
    v23 = v8[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
      goto LABEL_11;
    v8[2] = v25;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_20A46AFC0(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t (*v5)(void);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA098);
  v2 = (_QWORD *)sub_20A5B8FF0();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  v5 = MEMORY[0x24BEE0B20];
  while (1)
  {
    v6 = *(v4 - 2);
    v7 = *(v4 - 1);
    v8 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_20A470B50(v6, v7, (void (*)(_BYTE *, uint64_t, uint64_t))v5, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_20A470C9C);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v6;
    v11[1] = v7;
    *(_QWORD *)(v2[7] + 8 * result) = v8;
    v12 = v2[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

CoreODIEssentials::ODIErrorCode_optional __swiftcall ODIErrorCode.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  if (rawValue <= -30)
  {
    if (rawValue <= -1405)
    {
      switch(rawValue)
      {
        case -3155:
          *v1 = 127;
          break;
        case -3154:
          *v1 = 126;
          break;
        case -3153:
          *v1 = 125;
          break;
        case -3152:
          *v1 = 124;
          break;
        case -3151:
          *v1 = 123;
          break;
        case -3150:
        case -3149:
        case -3148:
        case -3147:
        case -3146:
        case -3145:
        case -3144:
        case -3143:
        case -3142:
        case -3141:
        case -3140:
        case -3139:
        case -3138:
        case -3137:
        case -3136:
        case -3135:
        case -3134:
        case -3133:
        case -3132:
        case -3131:
        case -3130:
        case -3129:
        case -3128:
        case -3127:
        case -3126:
        case -3125:
        case -3124:
        case -3123:
        case -3122:
        case -3121:
        case -3120:
        case -3119:
        case -3118:
        case -3117:
        case -3116:
        case -3115:
        case -3114:
          goto LABEL_156;
        case -3113:
          *v1 = 122;
          break;
        case -3112:
          *v1 = 121;
          break;
        case -3111:
          *v1 = 120;
          break;
        case -3110:
          *v1 = 119;
          break;
        case -3109:
          *v1 = 118;
          break;
        case -3108:
          *v1 = 117;
          break;
        case -3107:
          *v1 = 116;
          break;
        case -3106:
          *v1 = 115;
          break;
        case -3105:
          *v1 = 114;
          break;
        case -3104:
          *v1 = 113;
          break;
        case -3103:
          *v1 = 112;
          break;
        case -3102:
          *v1 = 111;
          break;
        case -3101:
          *v1 = 110;
          break;
        default:
          switch(rawValue)
          {
            case -2127:
              *v1 = 109;
              break;
            case -2126:
              *v1 = 108;
              break;
            case -2125:
              *v1 = 107;
              break;
            case -2124:
              *v1 = 106;
              break;
            case -2123:
              *v1 = 105;
              break;
            case -2122:
            case -2121:
            case -2120:
            case -2119:
            case -2118:
            case -2117:
            case -2116:
            case -2115:
            case -2114:
            case -2113:
            case -2109:
            case -2108:
            case -2106:
            case -2105:
              goto LABEL_156;
            case -2112:
              *v1 = 104;
              break;
            case -2111:
              *v1 = 103;
              break;
            case -2110:
              *v1 = 102;
              break;
            case -2107:
              *v1 = 101;
              break;
            case -2104:
              *v1 = 100;
              break;
            case -2103:
              *v1 = 99;
              break;
            default:
              if (rawValue != -131600)
                goto LABEL_156;
              *v1 = 98;
              break;
          }
          break;
      }
    }
    else
    {
      switch(rawValue)
      {
        case -1404:
          *v1 = 84;
          break;
        case -1403:
          *v1 = 83;
          break;
        case -1402:
          *v1 = 82;
          break;
        case -1317:
          *v1 = 97;
          break;
        case -1316:
          *v1 = 96;
          break;
        case -1315:
          *v1 = 95;
          break;
        case -1310:
          *v1 = 94;
          break;
        case -1309:
          *v1 = 93;
          break;
        case -1308:
          *v1 = 92;
          break;
        case -1307:
          *v1 = 91;
          break;
        case -1306:
          *v1 = 90;
          break;
        case -1305:
          *v1 = 89;
          break;
        case -1304:
          *v1 = 88;
          break;
        case -1303:
          *v1 = 87;
          break;
        case -1302:
          *v1 = 86;
          break;
        case -1301:
          *v1 = 85;
          break;
        case -1204:
          *v1 = 81;
          break;
        case -1203:
          *v1 = 80;
          break;
        case -1202:
          *v1 = 79;
          break;
        case -1201:
          *v1 = 78;
          break;
        case -1119:
          *v1 = 77;
          break;
        case -1118:
          *v1 = 76;
          break;
        case -1117:
          *v1 = 75;
          break;
        case -1116:
          *v1 = 74;
          break;
        case -1115:
          *v1 = 73;
          break;
        case -1114:
          *v1 = 72;
          break;
        case -1113:
          *v1 = 71;
          break;
        case -1112:
          *v1 = 70;
          break;
        case -1111:
          *v1 = 69;
          break;
        case -1110:
          *v1 = 68;
          break;
        case -1104:
          *v1 = 67;
          break;
        case -1103:
          *v1 = 66;
          break;
        case -1102:
          *v1 = 65;
          break;
        case -1101:
          *v1 = 64;
          break;
        default:
          goto LABEL_156;
      }
    }
    return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
  }
  if (rawValue > 39999)
  {
    if (rawValue <= 40400)
    {
      switch(rawValue)
      {
        case 40000:
          *v1 = 28;
          break;
        case 40010:
          *v1 = 29;
          break;
        case 40011:
          *v1 = 30;
          break;
        case 40012:
          *v1 = 31;
          break;
        case 40013:
          *v1 = 32;
          break;
        case 40014:
          *v1 = 33;
          break;
        case 40015:
          *v1 = 34;
          break;
        case 40020:
          *v1 = 35;
          break;
        case 40021:
          *v1 = 36;
          break;
        case 40022:
          *v1 = 37;
          break;
        case 40023:
          *v1 = 38;
          break;
        case 40024:
          *v1 = 39;
          break;
        case 40025:
          *v1 = 40;
          break;
        case 40026:
          *v1 = 41;
          break;
        case 40027:
          *v1 = 42;
          break;
        case 40028:
          *v1 = 43;
          break;
        case 40029:
          *v1 = 44;
          break;
        case 40030:
          *v1 = 45;
          break;
        case 40101:
          *v1 = 46;
          break;
        case 40102:
          *v1 = 47;
          break;
        case 40200:
          *v1 = 48;
          break;
        case 40201:
          *v1 = 49;
          break;
        case 40205:
          *v1 = 50;
          break;
        default:
          goto LABEL_156;
      }
      return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
    }
    if (rawValue > 49999)
    {
      if (rawValue > 99990)
      {
        switch(rawValue)
        {
          case 99991:
            *v1 = 61;
            return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
          case 99992:
            *v1 = 62;
            return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
          case 99993:
            *v1 = 63;
            return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        }
      }
      else
      {
        switch(rawValue)
        {
          case 50000:
            *v1 = 58;
            return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
          case 50001:
            *v1 = 59;
            return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
          case 50002:
            *v1 = 60;
            return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        }
      }
    }
    else
    {
      if (rawValue <= 40499)
      {
        switch(rawValue)
        {
          case 40401:
            *v1 = 51;
            break;
          case 40402:
            *v1 = 52;
            break;
          case 40403:
            *v1 = 53;
            break;
          case 40404:
            *v1 = 54;
            break;
          default:
            goto LABEL_156;
        }
        return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
      }
      switch(rawValue)
      {
        case 40500:
          *v1 = 55;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case 40600:
          *v1 = 56;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case 40601:
          *v1 = 57;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
      }
    }
LABEL_156:
    if (rawValue <= -6010)
    {
      if (rawValue > -8305)
      {
        if (rawValue <= -6106)
        {
          switch(rawValue)
          {
            case -8304:
              *v1 = -85;
              break;
            case -8301:
              *v1 = -86;
              break;
            case -8001:
              *v1 = -87;
              break;
            default:
LABEL_176:
              if (rawValue <= -72212)
              {
                switch(rawValue)
                {
                  case -72782:
                    *v1 = -48;
                    break;
                  case -72781:
                    *v1 = -49;
                    break;
                  case -72780:
                    *v1 = -50;
                    break;
                  default:
LABEL_255:
                    *v1 = -47;
                    break;
                }
              }
              else
              {
                switch(rawValue)
                {
                  case -72211:
                    *v1 = -51;
                    break;
                  case -72210:
                    *v1 = -52;
                    break;
                  case -72209:
                    *v1 = -53;
                    break;
                  case -72208:
                    *v1 = -54;
                    break;
                  case -72207:
                    *v1 = -55;
                    break;
                  case -72206:
                    *v1 = -56;
                    break;
                  case -72205:
                    *v1 = -57;
                    break;
                  case -72204:
                    *v1 = -58;
                    break;
                  case -72203:
                    *v1 = -59;
                    break;
                  case -72202:
                    *v1 = -60;
                    break;
                  case -72201:
                    *v1 = -61;
                    break;
                  case -72200:
                    *v1 = -62;
                    break;
                  default:
                    if (rawValue == -22207)
                    {
                      *v1 = -64;
                    }
                    else
                    {
                      if (rawValue != -22208)
                        goto LABEL_255;
                      *v1 = -63;
                    }
                    break;
                }
              }
              break;
          }
        }
        else
        {
          switch(rawValue)
          {
            case -6105:
              *v1 = -88;
              break;
            case -6104:
              *v1 = -89;
              break;
            case -6103:
              *v1 = -90;
              break;
            case -6102:
              *v1 = -91;
              break;
            default:
              if (rawValue != -6010)
                goto LABEL_176;
              *v1 = -92;
              break;
          }
        }
      }
      else
      {
        switch(rawValue)
        {
          case -8504:
            *v1 = -72;
            break;
          case -8503:
            *v1 = -73;
            break;
          case -8502:
            *v1 = -74;
            break;
          case -8501:
            *v1 = -75;
            break;
          case -8500:
            *v1 = -76;
            break;
          case -8499:
          case -8498:
          case -8497:
          case -8496:
          case -8495:
          case -8494:
          case -8493:
          case -8492:
          case -8491:
          case -8490:
          case -8489:
          case -8488:
          case -8487:
          case -8486:
          case -8485:
          case -8484:
          case -8483:
          case -8482:
          case -8481:
          case -8480:
          case -8479:
          case -8478:
          case -8477:
          case -8476:
          case -8475:
          case -8474:
          case -8473:
          case -8472:
          case -8471:
          case -8470:
          case -8469:
          case -8468:
          case -8467:
          case -8466:
          case -8465:
          case -8464:
          case -8463:
          case -8462:
          case -8461:
          case -8460:
          case -8459:
          case -8458:
          case -8457:
          case -8456:
          case -8455:
          case -8454:
          case -8453:
          case -8452:
          case -8451:
          case -8450:
          case -8449:
          case -8448:
          case -8447:
          case -8446:
          case -8445:
          case -8444:
          case -8443:
          case -8442:
          case -8441:
          case -8440:
          case -8439:
          case -8438:
          case -8437:
          case -8436:
          case -8435:
          case -8432:
          case -8431:
          case -8430:
          case -8427:
          case -8426:
          case -8425:
          case -8424:
          case -8423:
          case -8422:
          case -8421:
          case -8420:
          case -8419:
          case -8418:
          case -8417:
          case -8416:
          case -8415:
          case -8414:
          case -8413:
          case -8412:
          case -8411:
          case -8410:
          case -8409:
          case -8408:
          case -8407:
          case -8406:
          case -8405:
          case -8402:
            goto LABEL_176;
          case -8434:
            *v1 = -77;
            break;
          case -8433:
            *v1 = -78;
            break;
          case -8429:
            *v1 = -79;
            break;
          case -8428:
            *v1 = -80;
            break;
          case -8404:
            *v1 = -81;
            break;
          case -8403:
            *v1 = -82;
            break;
          case -8401:
            *v1 = -83;
            break;
          case -8400:
            *v1 = -84;
            break;
          default:
            v2 = -65;
            switch(rawValue)
            {
              case -22206:
                goto LABEL_133;
              case -22205:
                *v1 = -66;
                break;
              case -22204:
                *v1 = -67;
                break;
              case -22203:
                *v1 = -68;
                break;
              case -22202:
                *v1 = -69;
                break;
              case -22201:
                *v1 = -70;
                break;
              case -22200:
                *v1 = -71;
                break;
              default:
                goto LABEL_176;
            }
            break;
        }
      }
    }
    else
    {
      v2 = 0x80;
      switch(rawValue)
      {
        case -3300:
          *v1 = -95;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3299:
        case -3298:
        case -3297:
        case -3296:
        case -3295:
        case -3294:
        case -3293:
        case -3292:
        case -3291:
        case -3290:
        case -3289:
        case -3288:
        case -3287:
        case -3286:
        case -3285:
        case -3284:
        case -3283:
        case -3282:
        case -3281:
        case -3280:
        case -3279:
        case -3278:
        case -3277:
        case -3276:
        case -3275:
        case -3274:
        case -3273:
        case -3272:
        case -3271:
        case -3270:
        case -3269:
        case -3268:
        case -3267:
        case -3266:
        case -3265:
        case -3264:
        case -3263:
        case -3262:
        case -3261:
        case -3260:
        case -3259:
        case -3258:
        case -3257:
        case -3256:
        case -3255:
        case -3254:
        case -3253:
        case -3252:
        case -3251:
        case -3250:
        case -3249:
        case -3248:
        case -3247:
        case -3246:
        case -3245:
        case -3244:
        case -3243:
        case -3242:
        case -3241:
        case -3240:
        case -3239:
        case -3238:
        case -3237:
        case -3236:
        case -3235:
        case -3234:
        case -3233:
        case -3232:
        case -3231:
        case -3230:
        case -3229:
        case -3228:
        case -3227:
        case -3226:
        case -3225:
        case -3224:
        case -3223:
        case -3222:
        case -3221:
        case -3220:
        case -3219:
        case -3218:
        case -3217:
        case -3216:
        case -3215:
        case -3214:
        case -3213:
        case -3212:
        case -3211:
        case -3210:
        case -3209:
        case -3208:
        case -3207:
        case -3206:
        case -3205:
        case -3204:
        case -3203:
        case -3202:
        case -3201:
        case -3200:
        case -3199:
        case -3198:
        case -3197:
        case -3196:
        case -3195:
        case -3194:
        case -3193:
        case -3192:
        case -3191:
        case -3190:
        case -3160:
          goto LABEL_176;
        case -3189:
          *v1 = -96;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3188:
          *v1 = -97;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3187:
          *v1 = -98;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3186:
          *v1 = -99;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3185:
          *v1 = -100;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3184:
          *v1 = -101;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3183:
          *v1 = -102;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3182:
          *v1 = -103;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3181:
          *v1 = -104;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3180:
          *v1 = -105;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3179:
          *v1 = -106;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3178:
          *v1 = -107;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3177:
          *v1 = -108;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3176:
          *v1 = -109;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3175:
          *v1 = -110;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3174:
          *v1 = -111;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3173:
          *v1 = -112;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3172:
          *v1 = -113;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3171:
          *v1 = -114;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3170:
          *v1 = -115;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3169:
          *v1 = -116;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3168:
          *v1 = -117;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3167:
          *v1 = -118;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3166:
          *v1 = -119;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3165:
          *v1 = -120;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3164:
          *v1 = -121;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3163:
          *v1 = -122;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3162:
          *v1 = -123;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3161:
          *v1 = -124;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3159:
          *v1 = -125;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3158:
          *v1 = -126;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3157:
          *v1 = -127;
          return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
        case -3156:
          goto LABEL_133;
        default:
          if (rawValue == -6009)
          {
            *v1 = -93;
          }
          else
          {
            if (rawValue != -5108)
              goto LABEL_176;
            *v1 = -94;
          }
          break;
      }
    }
    return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
  }
  if (rawValue > 19999)
  {
    switch(rawValue)
    {
      case 20000:
        *v1 = 25;
        return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
      case 20001:
        *v1 = 26;
        return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
      case 20100:
        *v1 = 27;
        return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
    }
    goto LABEL_156;
  }
  v2 = 0;
  switch(rawValue)
  {
    case -29:
      *v1 = 23;
      return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
    case -28:
      *v1 = 22;
      return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
    case -22:
      *v1 = 21;
      return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
    case -21:
      *v1 = 20;
      return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
    case -20:
      *v1 = 19;
      return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
    case -19:
      *v1 = 18;
      return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
    case -18:
      *v1 = 17;
      return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
    case -17:
      *v1 = 16;
      return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
    case -16:
      *v1 = 15;
      return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
    case -15:
      *v1 = 14;
      return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
    case -14:
      *v1 = 13;
      return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
    case -13:
      *v1 = 12;
      return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
    case -12:
      *v1 = 11;
      return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
    case -11:
      *v1 = 10;
      return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
    case -10:
      *v1 = 9;
      return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
    case -9:
      *v1 = 8;
      return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
    case -8:
      *v1 = 7;
      return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
    case -7:
      *v1 = 6;
      return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
    case -6:
      *v1 = 5;
      return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
    case -5:
      *v1 = 4;
      return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
    case -4:
      *v1 = 3;
      return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
    case -3:
      *v1 = 2;
      return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
    case -2:
      v2 = 1;
      goto LABEL_133;
    case -1:
LABEL_133:
      *v1 = v2;
      break;
    case 200:
      *v1 = 24;
      break;
    default:
      goto LABEL_156;
  }
  return (CoreODIEssentials::ODIErrorCode_optional)rawValue;
}

uint64_t ODIErrorCode.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t))((char *)sub_20A46BE50 + 4 * word_20A5BE6D2[*v0]))(-1);
}

uint64_t sub_20A46BE50()
{
  return -2;
}

uint64_t sub_20A46BE58()
{
  return -3;
}

uint64_t sub_20A46BE60()
{
  return -4;
}

uint64_t sub_20A46BE68()
{
  return -5;
}

uint64_t sub_20A46BE70()
{
  return -6;
}

uint64_t sub_20A46BE78()
{
  return -7;
}

uint64_t sub_20A46BE80()
{
  return -8;
}

uint64_t sub_20A46BE88()
{
  return -9;
}

uint64_t sub_20A46BE90()
{
  return -10;
}

uint64_t sub_20A46BE98()
{
  return -11;
}

uint64_t sub_20A46BEA0()
{
  return -12;
}

uint64_t sub_20A46BEA8()
{
  return -13;
}

uint64_t sub_20A46BEB0()
{
  return -14;
}

uint64_t sub_20A46BEB8()
{
  return -15;
}

uint64_t sub_20A46BEC0()
{
  return -16;
}

uint64_t sub_20A46BEC8()
{
  return -17;
}

uint64_t sub_20A46BED0()
{
  return -18;
}

uint64_t sub_20A46BED8()
{
  return -19;
}

uint64_t sub_20A46BEE0()
{
  return -20;
}

uint64_t sub_20A46BEE8()
{
  return -21;
}

uint64_t sub_20A46BEF0()
{
  return -22;
}

uint64_t sub_20A46BEF8()
{
  return -28;
}

uint64_t sub_20A46BF00()
{
  return -29;
}

uint64_t sub_20A46BF08()
{
  return 200;
}

uint64_t sub_20A46BF10()
{
  return 20000;
}

uint64_t sub_20A46BF18()
{
  return 20001;
}

uint64_t sub_20A46BF20()
{
  return 20100;
}

uint64_t sub_20A46BF28()
{
  return 40000;
}

uint64_t sub_20A46BF30()
{
  return 40010;
}

uint64_t sub_20A46BF38()
{
  return 40011;
}

uint64_t sub_20A46BF40()
{
  return 40012;
}

uint64_t sub_20A46BF48()
{
  return 40013;
}

uint64_t sub_20A46BF50()
{
  return 40014;
}

uint64_t sub_20A46BF58()
{
  return 40015;
}

uint64_t sub_20A46BF60()
{
  return 40020;
}

uint64_t sub_20A46BF68()
{
  return 40021;
}

uint64_t sub_20A46BF70()
{
  return 40022;
}

uint64_t sub_20A46BF78()
{
  return 40023;
}

uint64_t sub_20A46BF80()
{
  return 40024;
}

uint64_t sub_20A46BF88()
{
  return 40025;
}

uint64_t sub_20A46BF90()
{
  return 40026;
}

uint64_t sub_20A46BF98()
{
  return 40027;
}

uint64_t sub_20A46BFA0()
{
  return 40028;
}

uint64_t sub_20A46BFA8()
{
  return 40029;
}

uint64_t sub_20A46BFB0()
{
  return 40030;
}

uint64_t sub_20A46BFB8()
{
  return 40101;
}

uint64_t sub_20A46BFC0()
{
  return 40102;
}

uint64_t sub_20A46BFC8()
{
  return 40200;
}

uint64_t sub_20A46BFD0()
{
  return 40201;
}

uint64_t sub_20A46BFD8()
{
  return 40205;
}

uint64_t sub_20A46BFE0()
{
  return 40401;
}

uint64_t sub_20A46BFE8()
{
  return 40402;
}

uint64_t sub_20A46BFF0()
{
  return 40403;
}

uint64_t sub_20A46BFF8()
{
  return 40404;
}

uint64_t sub_20A46C000()
{
  return 40500;
}

uint64_t sub_20A46C008()
{
  return 40600;
}

uint64_t sub_20A46C010()
{
  return 40601;
}

uint64_t sub_20A46C018()
{
  return 50000;
}

uint64_t sub_20A46C020()
{
  return 50001;
}

uint64_t sub_20A46C028()
{
  return 50002;
}

uint64_t sub_20A46C030()
{
  return 99991;
}

uint64_t sub_20A46C03C()
{
  return 99992;
}

uint64_t sub_20A46C04C()
{
  return 99993;
}

uint64_t sub_20A46C05C()
{
  return -1101;
}

uint64_t sub_20A46C064()
{
  return -1102;
}

uint64_t sub_20A46C06C()
{
  return -1103;
}

uint64_t sub_20A46C074()
{
  return -1104;
}

uint64_t sub_20A46C07C()
{
  return -1110;
}

uint64_t sub_20A46C084()
{
  return -1111;
}

uint64_t sub_20A46C08C()
{
  return -1112;
}

uint64_t sub_20A46C094()
{
  return -1113;
}

uint64_t sub_20A46C09C()
{
  return -1114;
}

uint64_t sub_20A46C0A4()
{
  return -1115;
}

uint64_t sub_20A46C0AC()
{
  return -1116;
}

uint64_t sub_20A46C0B4()
{
  return -1117;
}

uint64_t sub_20A46C0BC()
{
  return -1118;
}

uint64_t sub_20A46C0C4()
{
  return -1119;
}

uint64_t sub_20A46C0CC()
{
  return -1201;
}

uint64_t sub_20A46C0D4()
{
  return -1202;
}

uint64_t sub_20A46C0DC()
{
  return -1203;
}

uint64_t sub_20A46C0E4()
{
  return -1204;
}

uint64_t sub_20A46C0EC()
{
  return -1402;
}

uint64_t sub_20A46C0F4()
{
  return -1403;
}

uint64_t sub_20A46C0FC()
{
  return -1404;
}

uint64_t sub_20A46C104()
{
  return -1301;
}

uint64_t sub_20A46C10C()
{
  return -1302;
}

uint64_t sub_20A46C114()
{
  return -1303;
}

uint64_t sub_20A46C11C()
{
  return -1304;
}

uint64_t sub_20A46C124()
{
  return -1305;
}

uint64_t sub_20A46C12C()
{
  return -1306;
}

uint64_t sub_20A46C134()
{
  return -1307;
}

uint64_t sub_20A46C13C()
{
  return -1308;
}

uint64_t sub_20A46C144()
{
  return -1309;
}

uint64_t sub_20A46C14C()
{
  return -1310;
}

uint64_t sub_20A46C154()
{
  return -1315;
}

uint64_t sub_20A46C15C()
{
  return -1316;
}

uint64_t sub_20A46C164()
{
  return -1317;
}

uint64_t sub_20A46C16C()
{
  return -131600;
}

uint64_t sub_20A46C178()
{
  return -2103;
}

uint64_t sub_20A46C180()
{
  return -2104;
}

uint64_t sub_20A46C188()
{
  return -2107;
}

uint64_t sub_20A46C190()
{
  return -2110;
}

uint64_t sub_20A46C198()
{
  return -2111;
}

uint64_t sub_20A46C1A0()
{
  return -2112;
}

uint64_t sub_20A46C1A8()
{
  return -2123;
}

uint64_t sub_20A46C1B0()
{
  return -2124;
}

uint64_t sub_20A46C1B8()
{
  return -2125;
}

uint64_t sub_20A46C1C0()
{
  return -2126;
}

uint64_t sub_20A46C1C8()
{
  return -2127;
}

uint64_t sub_20A46C1D0()
{
  return -3101;
}

uint64_t sub_20A46C1D8()
{
  return -3102;
}

uint64_t sub_20A46C1E0()
{
  return -3103;
}

uint64_t sub_20A46C1E8()
{
  return -3104;
}

uint64_t sub_20A46C1F0()
{
  return -3105;
}

uint64_t sub_20A46C1F8()
{
  return -3106;
}

uint64_t sub_20A46C200()
{
  return -3107;
}

uint64_t sub_20A46C208()
{
  return -3108;
}

uint64_t sub_20A46C210()
{
  return -3109;
}

uint64_t sub_20A46C218()
{
  return -3110;
}

uint64_t sub_20A46C220()
{
  return -3111;
}

uint64_t sub_20A46C228()
{
  return -3112;
}

uint64_t sub_20A46C230()
{
  return -3113;
}

uint64_t sub_20A46C238()
{
  return -3151;
}

uint64_t sub_20A46C240()
{
  return -3152;
}

uint64_t sub_20A46C248()
{
  return -3153;
}

uint64_t sub_20A46C250()
{
  return -3154;
}

uint64_t sub_20A46C258()
{
  return -3155;
}

uint64_t sub_20A46C260()
{
  return -3156;
}

uint64_t sub_20A46C268()
{
  return -3157;
}

uint64_t sub_20A46C270()
{
  return -3158;
}

uint64_t sub_20A46C278()
{
  return -3159;
}

uint64_t sub_20A46C280()
{
  return -3161;
}

uint64_t sub_20A46C288()
{
  return -3162;
}

uint64_t sub_20A46C290()
{
  return -3163;
}

uint64_t sub_20A46C298()
{
  return -3164;
}

uint64_t sub_20A46C2A0()
{
  return -3165;
}

uint64_t sub_20A46C2A8()
{
  return -3166;
}

uint64_t sub_20A46C2B0()
{
  return -3167;
}

uint64_t sub_20A46C2B8()
{
  return -3168;
}

uint64_t sub_20A46C2C0()
{
  return -3169;
}

uint64_t sub_20A46C2C8()
{
  return -3170;
}

uint64_t sub_20A46C2D0()
{
  return -3171;
}

uint64_t sub_20A46C2D8()
{
  return -3172;
}

uint64_t sub_20A46C2E0()
{
  return -3173;
}

uint64_t sub_20A46C2E8()
{
  return -3174;
}

uint64_t sub_20A46C2F0()
{
  return -3175;
}

uint64_t sub_20A46C2F8()
{
  return -3176;
}

uint64_t sub_20A46C300()
{
  return -3177;
}

uint64_t sub_20A46C308()
{
  return -3178;
}

uint64_t sub_20A46C310()
{
  return -3179;
}

uint64_t sub_20A46C318()
{
  return -3180;
}

uint64_t sub_20A46C320()
{
  return -3181;
}

uint64_t sub_20A46C328()
{
  return -3182;
}

uint64_t sub_20A46C330()
{
  return -3183;
}

uint64_t sub_20A46C338()
{
  return -3184;
}

uint64_t sub_20A46C340()
{
  return -3185;
}

uint64_t sub_20A46C348()
{
  return -3186;
}

uint64_t sub_20A46C350()
{
  return -3187;
}

uint64_t sub_20A46C358()
{
  return -3188;
}

uint64_t sub_20A46C360()
{
  return -3189;
}

uint64_t sub_20A46C368()
{
  return -3300;
}

uint64_t sub_20A46C370()
{
  return -5108;
}

uint64_t sub_20A46C378()
{
  return -6009;
}

uint64_t sub_20A46C380()
{
  return -6010;
}

uint64_t sub_20A46C388()
{
  return -6102;
}

uint64_t sub_20A46C390()
{
  return -6103;
}

uint64_t sub_20A46C398()
{
  return -6104;
}

uint64_t sub_20A46C3A0()
{
  return -6105;
}

uint64_t sub_20A46C3A8()
{
  return -8001;
}

uint64_t sub_20A46C3B0()
{
  return -8301;
}

uint64_t sub_20A46C3B8()
{
  return -8304;
}

uint64_t sub_20A46C3C0()
{
  return -8400;
}

uint64_t sub_20A46C3C8()
{
  return -8401;
}

uint64_t sub_20A46C3D0()
{
  return -8403;
}

uint64_t sub_20A46C3D8()
{
  return -8404;
}

uint64_t sub_20A46C3E0()
{
  return -8428;
}

uint64_t sub_20A46C3E8()
{
  return -8429;
}

uint64_t sub_20A46C3F0()
{
  return -8433;
}

uint64_t sub_20A46C3F8()
{
  return -8434;
}

uint64_t sub_20A46C400()
{
  return -8500;
}

uint64_t sub_20A46C408()
{
  return -8501;
}

uint64_t sub_20A46C410()
{
  return -8502;
}

uint64_t sub_20A46C418()
{
  return -8503;
}

uint64_t sub_20A46C420()
{
  return -8504;
}

uint64_t sub_20A46C428()
{
  return -22200;
}

uint64_t sub_20A46C430()
{
  return -22201;
}

uint64_t sub_20A46C438()
{
  return -22202;
}

uint64_t sub_20A46C440()
{
  return -22203;
}

uint64_t sub_20A46C448()
{
  return -22204;
}

uint64_t sub_20A46C450()
{
  return -22205;
}

uint64_t sub_20A46C458()
{
  return -22206;
}

uint64_t sub_20A46C460()
{
  return -22207;
}

uint64_t sub_20A46C468()
{
  return -22208;
}

uint64_t sub_20A46C470()
{
  return -72200;
}

uint64_t sub_20A46C480()
{
  return -72201;
}

uint64_t sub_20A46C490()
{
  return -72202;
}

uint64_t sub_20A46C4A0()
{
  return -72203;
}

uint64_t sub_20A46C4B0()
{
  return -72204;
}

uint64_t sub_20A46C4C0()
{
  return -72205;
}

uint64_t sub_20A46C4D0()
{
  return -72206;
}

uint64_t sub_20A46C4E0()
{
  return -72207;
}

uint64_t sub_20A46C4F0()
{
  return -72208;
}

uint64_t sub_20A46C500()
{
  return -72209;
}

uint64_t sub_20A46C510()
{
  return -72210;
}

uint64_t sub_20A46C520()
{
  return -72211;
}

uint64_t sub_20A46C530()
{
  return -72780;
}

uint64_t sub_20A46C540()
{
  return -72781;
}

uint64_t sub_20A46C550()
{
  return -72782;
}

uint64_t sub_20A46C55C(unsigned __int8 *a1)
{
  return ((uint64_t (*)())((char *)sub_20A46C580 + 4 * word_20A5BE874[*a1]))();
}

uint64_t sub_20A46C580()
{
  uint64_t v0;

  return ((uint64_t (*)(void))((char *)sub_20A46CCA4 + 4 * word_20A5BEA16[v0]))();
}

BOOL sub_20A46CCA4@<W0>(uint64_t a1@<X8>)
{
  return a1 == -2;
}

void sub_20A46D3B8()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_20A5B929C();
  __asm { BR              X9 }
}

uint64_t sub_20A46D3F4()
{
  sub_20A5B92A8();
  return sub_20A5B92CC();
}

void sub_20A46DB1C()
{
  __asm { BR              X11 }
}

uint64_t sub_20A46DB4C()
{
  return sub_20A5B92A8();
}

void sub_20A46E268()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_20A5B929C();
  __asm { BR              X9 }
}

uint64_t sub_20A46E2A0()
{
  sub_20A5B92A8();
  return sub_20A5B92CC();
}

CoreODIEssentials::ODIErrorCode_optional sub_20A46E9C8(Swift::Int *a1)
{
  return ODIErrorCode.init(rawValue:)(*a1);
}

uint64_t sub_20A46E9D0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_20A46E9F0 + 4 * word_20A5BF09E[*v0]))();
}

void sub_20A46E9F0(_QWORD *a1@<X8>)
{
  *a1 = -2;
}

void sub_20A46E9FC(_QWORD *a1@<X8>)
{
  *a1 = -3;
}

void sub_20A46EA08(_QWORD *a1@<X8>)
{
  *a1 = -4;
}

void sub_20A46EA14(_QWORD *a1@<X8>)
{
  *a1 = -5;
}

void sub_20A46EA20(_QWORD *a1@<X8>)
{
  *a1 = -6;
}

void sub_20A46EA2C(_QWORD *a1@<X8>)
{
  *a1 = -7;
}

void sub_20A46EA38(_QWORD *a1@<X8>)
{
  *a1 = -8;
}

void sub_20A46EA44(_QWORD *a1@<X8>)
{
  *a1 = -9;
}

void sub_20A46EA50(_QWORD *a1@<X8>)
{
  *a1 = -10;
}

void sub_20A46EA5C(_QWORD *a1@<X8>)
{
  *a1 = -11;
}

void sub_20A46EA68(_QWORD *a1@<X8>)
{
  *a1 = -12;
}

void sub_20A46EA74(_QWORD *a1@<X8>)
{
  *a1 = -13;
}

void sub_20A46EA80(_QWORD *a1@<X8>)
{
  *a1 = -14;
}

void sub_20A46EA8C(_QWORD *a1@<X8>)
{
  *a1 = -15;
}

void sub_20A46EA98(_QWORD *a1@<X8>)
{
  *a1 = -16;
}

void sub_20A46EAA4(_QWORD *a1@<X8>)
{
  *a1 = -17;
}

void sub_20A46EAB0(_QWORD *a1@<X8>)
{
  *a1 = -18;
}

void sub_20A46EABC(_QWORD *a1@<X8>)
{
  *a1 = -19;
}

void sub_20A46EAC8(_QWORD *a1@<X8>)
{
  *a1 = -20;
}

void sub_20A46EAD4(_QWORD *a1@<X8>)
{
  *a1 = -21;
}

void sub_20A46EAE0(_QWORD *a1@<X8>)
{
  *a1 = -22;
}

void sub_20A46EAEC(_QWORD *a1@<X8>)
{
  *a1 = -28;
}

void sub_20A46EAF8(_QWORD *a1@<X8>)
{
  *a1 = -29;
}

void sub_20A46EB04(_QWORD *a1@<X8>)
{
  *a1 = 200;
}

void sub_20A46EB10(_QWORD *a1@<X8>)
{
  *a1 = 20000;
}

void sub_20A46EB1C(_QWORD *a1@<X8>)
{
  *a1 = 20001;
}

void sub_20A46EB28(_QWORD *a1@<X8>)
{
  *a1 = 20100;
}

void sub_20A46EB34(_QWORD *a1@<X8>)
{
  *a1 = 40000;
}

void sub_20A46EB40(_QWORD *a1@<X8>)
{
  *a1 = 40010;
}

void sub_20A46EB4C(_QWORD *a1@<X8>)
{
  *a1 = 40011;
}

void sub_20A46EB58(_QWORD *a1@<X8>)
{
  *a1 = 40012;
}

void sub_20A46EB64(_QWORD *a1@<X8>)
{
  *a1 = 40013;
}

void sub_20A46EB70(_QWORD *a1@<X8>)
{
  *a1 = 40014;
}

void sub_20A46EB7C(_QWORD *a1@<X8>)
{
  *a1 = 40015;
}

void sub_20A46EB88(_QWORD *a1@<X8>)
{
  *a1 = 40020;
}

void sub_20A46EB94(_QWORD *a1@<X8>)
{
  *a1 = 40021;
}

void sub_20A46EBA0(_QWORD *a1@<X8>)
{
  *a1 = 40022;
}

void sub_20A46EBAC(_QWORD *a1@<X8>)
{
  *a1 = 40023;
}

void sub_20A46EBB8(_QWORD *a1@<X8>)
{
  *a1 = 40024;
}

void sub_20A46EBC4(_QWORD *a1@<X8>)
{
  *a1 = 40025;
}

void sub_20A46EBD0(_QWORD *a1@<X8>)
{
  *a1 = 40026;
}

void sub_20A46EBDC(_QWORD *a1@<X8>)
{
  *a1 = 40027;
}

void sub_20A46EBE8(_QWORD *a1@<X8>)
{
  *a1 = 40028;
}

void sub_20A46EBF4(_QWORD *a1@<X8>)
{
  *a1 = 40029;
}

void sub_20A46EC00(_QWORD *a1@<X8>)
{
  *a1 = 40030;
}

void sub_20A46EC0C(_QWORD *a1@<X8>)
{
  *a1 = 40101;
}

void sub_20A46EC18(_QWORD *a1@<X8>)
{
  *a1 = 40102;
}

void sub_20A46EC24(_QWORD *a1@<X8>)
{
  *a1 = 40200;
}

void sub_20A46EC30(_QWORD *a1@<X8>)
{
  *a1 = 40201;
}

void sub_20A46EC3C(_QWORD *a1@<X8>)
{
  *a1 = 40205;
}

void sub_20A46EC48(_QWORD *a1@<X8>)
{
  *a1 = 40401;
}

void sub_20A46EC54(_QWORD *a1@<X8>)
{
  *a1 = 40402;
}

void sub_20A46EC60(_QWORD *a1@<X8>)
{
  *a1 = 40403;
}

void sub_20A46EC6C(_QWORD *a1@<X8>)
{
  *a1 = 40404;
}

void sub_20A46EC78(_QWORD *a1@<X8>)
{
  *a1 = 40500;
}

void sub_20A46EC84(_QWORD *a1@<X8>)
{
  *a1 = 40600;
}

void sub_20A46EC90(_QWORD *a1@<X8>)
{
  *a1 = 40601;
}

void sub_20A46EC9C(_QWORD *a1@<X8>)
{
  *a1 = 50000;
}

void sub_20A46ECA8(_QWORD *a1@<X8>)
{
  *a1 = 50001;
}

void sub_20A46ECB4(_QWORD *a1@<X8>)
{
  *a1 = 50002;
}

void sub_20A46ECC0(_QWORD *a1@<X8>)
{
  *a1 = 99991;
}

void sub_20A46ECD0(_QWORD *a1@<X8>)
{
  *a1 = 99992;
}

void sub_20A46ECE4(_QWORD *a1@<X8>)
{
  *a1 = 99993;
}

void sub_20A46ECF8(_QWORD *a1@<X8>)
{
  *a1 = -1101;
}

void sub_20A46ED04(_QWORD *a1@<X8>)
{
  *a1 = -1102;
}

void sub_20A46ED10(_QWORD *a1@<X8>)
{
  *a1 = -1103;
}

void sub_20A46ED1C(_QWORD *a1@<X8>)
{
  *a1 = -1104;
}

void sub_20A46ED28(_QWORD *a1@<X8>)
{
  *a1 = -1110;
}

void sub_20A46ED34(_QWORD *a1@<X8>)
{
  *a1 = -1111;
}

void sub_20A46ED40(_QWORD *a1@<X8>)
{
  *a1 = -1112;
}

void sub_20A46ED4C(_QWORD *a1@<X8>)
{
  *a1 = -1113;
}

void sub_20A46ED58(_QWORD *a1@<X8>)
{
  *a1 = -1114;
}

void sub_20A46ED64(_QWORD *a1@<X8>)
{
  *a1 = -1115;
}

void sub_20A46ED70(_QWORD *a1@<X8>)
{
  *a1 = -1116;
}

void sub_20A46ED7C(_QWORD *a1@<X8>)
{
  *a1 = -1117;
}

void sub_20A46ED88(_QWORD *a1@<X8>)
{
  *a1 = -1118;
}

void sub_20A46ED94(_QWORD *a1@<X8>)
{
  *a1 = -1119;
}

void sub_20A46EDA0(_QWORD *a1@<X8>)
{
  *a1 = -1201;
}

void sub_20A46EDAC(_QWORD *a1@<X8>)
{
  *a1 = -1202;
}

void sub_20A46EDB8(_QWORD *a1@<X8>)
{
  *a1 = -1203;
}

void sub_20A46EDC4(_QWORD *a1@<X8>)
{
  *a1 = -1204;
}

void sub_20A46EDD0(_QWORD *a1@<X8>)
{
  *a1 = -1402;
}

void sub_20A46EDDC(_QWORD *a1@<X8>)
{
  *a1 = -1403;
}

void sub_20A46EDE8(_QWORD *a1@<X8>)
{
  *a1 = -1404;
}

void sub_20A46EDF4(_QWORD *a1@<X8>)
{
  *a1 = -1301;
}

void sub_20A46EE00(_QWORD *a1@<X8>)
{
  *a1 = -1302;
}

void sub_20A46EE0C(_QWORD *a1@<X8>)
{
  *a1 = -1303;
}

void sub_20A46EE18(_QWORD *a1@<X8>)
{
  *a1 = -1304;
}

void sub_20A46EE24(_QWORD *a1@<X8>)
{
  *a1 = -1305;
}

void sub_20A46EE30(_QWORD *a1@<X8>)
{
  *a1 = -1306;
}

void sub_20A46EE3C(_QWORD *a1@<X8>)
{
  *a1 = -1307;
}

void sub_20A46EE48(_QWORD *a1@<X8>)
{
  *a1 = -1308;
}

void sub_20A46EE54(_QWORD *a1@<X8>)
{
  *a1 = -1309;
}

void sub_20A46EE60(_QWORD *a1@<X8>)
{
  *a1 = -1310;
}

void sub_20A46EE6C(_QWORD *a1@<X8>)
{
  *a1 = -1315;
}

void sub_20A46EE78(_QWORD *a1@<X8>)
{
  *a1 = -1316;
}

void sub_20A46EE84(_QWORD *a1@<X8>)
{
  *a1 = -1317;
}

void sub_20A46EE90(_QWORD *a1@<X8>)
{
  *a1 = -131600;
}

void sub_20A46EEA0(_QWORD *a1@<X8>)
{
  *a1 = -2103;
}

void sub_20A46EEAC(_QWORD *a1@<X8>)
{
  *a1 = -2104;
}

void sub_20A46EEB8(_QWORD *a1@<X8>)
{
  *a1 = -2107;
}

void sub_20A46EEC4(_QWORD *a1@<X8>)
{
  *a1 = -2110;
}

void sub_20A46EED0(_QWORD *a1@<X8>)
{
  *a1 = -2111;
}

void sub_20A46EEDC(_QWORD *a1@<X8>)
{
  *a1 = -2112;
}

void sub_20A46EEE8(_QWORD *a1@<X8>)
{
  *a1 = -2123;
}

void sub_20A46EEF4(_QWORD *a1@<X8>)
{
  *a1 = -2124;
}

void sub_20A46EF00(_QWORD *a1@<X8>)
{
  *a1 = -2125;
}

void sub_20A46EF0C(_QWORD *a1@<X8>)
{
  *a1 = -2126;
}

void sub_20A46EF18(_QWORD *a1@<X8>)
{
  *a1 = -2127;
}

void sub_20A46EF24(_QWORD *a1@<X8>)
{
  *a1 = -3101;
}

void sub_20A46EF30(_QWORD *a1@<X8>)
{
  *a1 = -3102;
}

void sub_20A46EF3C(_QWORD *a1@<X8>)
{
  *a1 = -3103;
}

void sub_20A46EF48(_QWORD *a1@<X8>)
{
  *a1 = -3104;
}

void sub_20A46EF54(_QWORD *a1@<X8>)
{
  *a1 = -3105;
}

void sub_20A46EF60(_QWORD *a1@<X8>)
{
  *a1 = -3106;
}

void sub_20A46EF6C(_QWORD *a1@<X8>)
{
  *a1 = -3107;
}

void sub_20A46EF78(_QWORD *a1@<X8>)
{
  *a1 = -3108;
}

void sub_20A46EF84(_QWORD *a1@<X8>)
{
  *a1 = -3109;
}

void sub_20A46EF90(_QWORD *a1@<X8>)
{
  *a1 = -3110;
}

void sub_20A46EF9C(_QWORD *a1@<X8>)
{
  *a1 = -3111;
}

void sub_20A46EFA8(_QWORD *a1@<X8>)
{
  *a1 = -3112;
}

void sub_20A46EFB4(_QWORD *a1@<X8>)
{
  *a1 = -3113;
}

void sub_20A46EFC0(_QWORD *a1@<X8>)
{
  *a1 = -3151;
}

void sub_20A46EFCC(_QWORD *a1@<X8>)
{
  *a1 = -3152;
}

void sub_20A46EFD8(_QWORD *a1@<X8>)
{
  *a1 = -3153;
}

void sub_20A46EFE4(_QWORD *a1@<X8>)
{
  *a1 = -3154;
}

void sub_20A46EFF0(_QWORD *a1@<X8>)
{
  *a1 = -3155;
}

void sub_20A46EFFC(_QWORD *a1@<X8>)
{
  *a1 = -3156;
}

void sub_20A46F008(_QWORD *a1@<X8>)
{
  *a1 = -3157;
}

void sub_20A46F014(_QWORD *a1@<X8>)
{
  *a1 = -3158;
}

void sub_20A46F020(_QWORD *a1@<X8>)
{
  *a1 = -3159;
}

void sub_20A46F02C(_QWORD *a1@<X8>)
{
  *a1 = -3161;
}

void sub_20A46F038(_QWORD *a1@<X8>)
{
  *a1 = -3162;
}

void sub_20A46F044(_QWORD *a1@<X8>)
{
  *a1 = -3163;
}

void sub_20A46F050(_QWORD *a1@<X8>)
{
  *a1 = -3164;
}

void sub_20A46F05C(_QWORD *a1@<X8>)
{
  *a1 = -3165;
}

void sub_20A46F068(_QWORD *a1@<X8>)
{
  *a1 = -3166;
}

void sub_20A46F074(_QWORD *a1@<X8>)
{
  *a1 = -3167;
}

void sub_20A46F080(_QWORD *a1@<X8>)
{
  *a1 = -3168;
}

void sub_20A46F08C(_QWORD *a1@<X8>)
{
  *a1 = -3169;
}

void sub_20A46F098(_QWORD *a1@<X8>)
{
  *a1 = -3170;
}

void sub_20A46F0A4(_QWORD *a1@<X8>)
{
  *a1 = -3171;
}

void sub_20A46F0B0(_QWORD *a1@<X8>)
{
  *a1 = -3172;
}

void sub_20A46F0BC(_QWORD *a1@<X8>)
{
  *a1 = -3173;
}

void sub_20A46F0C8(_QWORD *a1@<X8>)
{
  *a1 = -3174;
}

void sub_20A46F0D4(_QWORD *a1@<X8>)
{
  *a1 = -3175;
}

void sub_20A46F0E0(_QWORD *a1@<X8>)
{
  *a1 = -3176;
}

void sub_20A46F0EC(_QWORD *a1@<X8>)
{
  *a1 = -3177;
}

void sub_20A46F0F8(_QWORD *a1@<X8>)
{
  *a1 = -3178;
}

void sub_20A46F104(_QWORD *a1@<X8>)
{
  *a1 = -3179;
}

void sub_20A46F110(_QWORD *a1@<X8>)
{
  *a1 = -3180;
}

void sub_20A46F11C(_QWORD *a1@<X8>)
{
  *a1 = -3181;
}

void sub_20A46F128(_QWORD *a1@<X8>)
{
  *a1 = -3182;
}

void sub_20A46F134(_QWORD *a1@<X8>)
{
  *a1 = -3183;
}

void sub_20A46F140(_QWORD *a1@<X8>)
{
  *a1 = -3184;
}

void sub_20A46F14C(_QWORD *a1@<X8>)
{
  *a1 = -3185;
}

void sub_20A46F158(_QWORD *a1@<X8>)
{
  *a1 = -3186;
}

void sub_20A46F164(_QWORD *a1@<X8>)
{
  *a1 = -3187;
}

void sub_20A46F170(_QWORD *a1@<X8>)
{
  *a1 = -3188;
}

void sub_20A46F17C(_QWORD *a1@<X8>)
{
  *a1 = -3189;
}

void sub_20A46F188(_QWORD *a1@<X8>)
{
  *a1 = -3300;
}

void sub_20A46F194(_QWORD *a1@<X8>)
{
  *a1 = -5108;
}

void sub_20A46F1A0(_QWORD *a1@<X8>)
{
  *a1 = -6009;
}

void sub_20A46F1AC(_QWORD *a1@<X8>)
{
  *a1 = -6010;
}

void sub_20A46F1B8(_QWORD *a1@<X8>)
{
  *a1 = -6102;
}

void sub_20A46F1C4(_QWORD *a1@<X8>)
{
  *a1 = -6103;
}

void sub_20A46F1D0(_QWORD *a1@<X8>)
{
  *a1 = -6104;
}

void sub_20A46F1DC(_QWORD *a1@<X8>)
{
  *a1 = -6105;
}

void sub_20A46F1E8(_QWORD *a1@<X8>)
{
  *a1 = -8001;
}

void sub_20A46F1F4(_QWORD *a1@<X8>)
{
  *a1 = -8301;
}

void sub_20A46F200(_QWORD *a1@<X8>)
{
  *a1 = -8304;
}

void sub_20A46F20C(_QWORD *a1@<X8>)
{
  *a1 = -8400;
}

void sub_20A46F218(_QWORD *a1@<X8>)
{
  *a1 = -8401;
}

void sub_20A46F224(_QWORD *a1@<X8>)
{
  *a1 = -8403;
}

void sub_20A46F230(_QWORD *a1@<X8>)
{
  *a1 = -8404;
}

void sub_20A46F23C(_QWORD *a1@<X8>)
{
  *a1 = -8428;
}

void sub_20A46F248(_QWORD *a1@<X8>)
{
  *a1 = -8429;
}

void sub_20A46F254(_QWORD *a1@<X8>)
{
  *a1 = -8433;
}

void sub_20A46F260(_QWORD *a1@<X8>)
{
  *a1 = -8434;
}

void sub_20A46F26C(_QWORD *a1@<X8>)
{
  *a1 = -8500;
}

void sub_20A46F278(_QWORD *a1@<X8>)
{
  *a1 = -8501;
}

void sub_20A46F284(_QWORD *a1@<X8>)
{
  *a1 = -8502;
}

void sub_20A46F290(_QWORD *a1@<X8>)
{
  *a1 = -8503;
}

void sub_20A46F29C(_QWORD *a1@<X8>)
{
  *a1 = -8504;
}

void sub_20A46F2A8(_QWORD *a1@<X8>)
{
  *a1 = -22200;
}

void sub_20A46F2B4(_QWORD *a1@<X8>)
{
  *a1 = -22201;
}

void sub_20A46F2C0(_QWORD *a1@<X8>)
{
  *a1 = -22202;
}

void sub_20A46F2CC(_QWORD *a1@<X8>)
{
  *a1 = -22203;
}

void sub_20A46F2D8(_QWORD *a1@<X8>)
{
  *a1 = -22204;
}

void sub_20A46F2E4(_QWORD *a1@<X8>)
{
  *a1 = -22205;
}

void sub_20A46F2F0(_QWORD *a1@<X8>)
{
  *a1 = -22206;
}

void sub_20A46F2FC(_QWORD *a1@<X8>)
{
  *a1 = -22207;
}

void sub_20A46F308(_QWORD *a1@<X8>)
{
  *a1 = -22208;
}

void sub_20A46F314(_QWORD *a1@<X8>)
{
  *a1 = -72200;
}

void sub_20A46F328(_QWORD *a1@<X8>)
{
  *a1 = -72201;
}

void sub_20A46F33C(_QWORD *a1@<X8>)
{
  *a1 = -72202;
}

void sub_20A46F350(_QWORD *a1@<X8>)
{
  *a1 = -72203;
}

void sub_20A46F364(_QWORD *a1@<X8>)
{
  *a1 = -72204;
}

void sub_20A46F378(_QWORD *a1@<X8>)
{
  *a1 = -72205;
}

void sub_20A46F38C(_QWORD *a1@<X8>)
{
  *a1 = -72206;
}

void sub_20A46F3A0(_QWORD *a1@<X8>)
{
  *a1 = -72207;
}

void sub_20A46F3B4(_QWORD *a1@<X8>)
{
  *a1 = -72208;
}

void sub_20A46F3C8(_QWORD *a1@<X8>)
{
  *a1 = -72209;
}

void sub_20A46F3DC(_QWORD *a1@<X8>)
{
  *a1 = -72210;
}

void sub_20A46F3F0(_QWORD *a1@<X8>)
{
  *a1 = -72211;
}

void sub_20A46F404(_QWORD *a1@<X8>)
{
  *a1 = -72780;
}

void sub_20A46F418(_QWORD *a1@<X8>)
{
  *a1 = -72781;
}

void sub_20A46F42C(_QWORD *a1@<X8>)
{
  *a1 = -72782;
}

uint64_t sub_20A46F43C()
{
  sub_20A47BAF4();
  return sub_20A5B8A80();
}

uint64_t sub_20A46F498()
{
  sub_20A47BAF4();
  return sub_20A5B8A44();
}

CoreODIEssentials::ODIErrorPropertyKey_optional __swiftcall ODIErrorPropertyKey.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  CoreODIEssentials::ODIErrorPropertyKey_optional result;
  char v5;

  v2 = v1;
  v3 = sub_20A5B9008();
  result.value = swift_bridgeObjectRelease();
  v5 = 15;
  if (v3 < 0xF)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t ODIErrorPropertyKey.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_20A46F570 + 4 * byte_20A5BF240[*v0]))(0x776F6C666B726F77, 0xEA00000000004449);
}

uint64_t sub_20A46F570()
{
  return 0x72656469766F7270;
}

uint64_t sub_20A46F584()
{
  return 0x5255726576726573;
}

unint64_t sub_20A46F5A4()
{
  return 0xD000000000000010;
}

uint64_t sub_20A46F624()
{
  return 0x6552656369766564;
}

void sub_20A46F644()
{
  JUMPOUT(0x20A46F658);
}

uint64_t sub_20A46F664()
{
  return 0x6761735574726563;
}

uint64_t sub_20A46F688()
{
  return 0x6573616261746164;
}

uint64_t sub_20A46F6AC()
{
  return 0x74737973656C6966;
}

uint64_t sub_20A46F6D0()
{
  return 0x69796C7265646E75;
}

uint64_t sub_20A46F6F4()
{
  return 0x746E756F43797274;
}

uint64_t sub_20A46F70C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_20A4EA424(*a1, *a2);
}

uint64_t sub_20A46F718()
{
  sub_20A5B929C();
  ODIErrorPropertyKey.rawValue.getter();
  sub_20A5B8978();
  swift_bridgeObjectRelease();
  return sub_20A5B92CC();
}

uint64_t sub_20A46F77C()
{
  ODIErrorPropertyKey.rawValue.getter();
  sub_20A5B8978();
  return swift_bridgeObjectRelease();
}

uint64_t sub_20A46F7CC()
{
  sub_20A5B929C();
  ODIErrorPropertyKey.rawValue.getter();
  sub_20A5B8978();
  swift_bridgeObjectRelease();
  return sub_20A5B92CC();
}

CoreODIEssentials::ODIErrorPropertyKey_optional sub_20A46F82C(Swift::String *a1)
{
  return ODIErrorPropertyKey.init(rawValue:)(*a1);
}

uint64_t sub_20A46F838@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = ODIErrorPropertyKey.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_20A46F85C()
{
  void *v0;
  void *v1;
  void *v2;
  _QWORD v3[6];

  v0 = (void *)objc_opt_self();
  v1 = (void *)sub_20A5B88F4();
  v3[4] = sub_20A46F918;
  v3[5] = 0;
  v3[0] = MEMORY[0x24BDAC760];
  v3[1] = 1107296256;
  v3[2] = sub_20A44FC5C;
  v3[3] = &block_descriptor_4;
  v2 = _Block_copy(v3);
  objc_msgSend(v0, sel_setUserInfoValueProviderForDomain_provider_, v1, v2);
  _Block_release(v2);

}

uint64_t sub_20A46F918@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  char v10;
  uint64_t v11;
  char v13;
  uint64_t result;
  uint64_t v15;

  if (sub_20A5B8900() == a2 && v8 == a3)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  v10 = sub_20A5B91AC();
  swift_bridgeObjectRelease();
  if ((v10 & 1) != 0)
  {
LABEL_13:
    result = sub_20A47A0E0(a1);
    goto LABEL_14;
  }
  if (sub_20A5B8900() == a2 && v11 == a3)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = sub_20A5B91AC();
    result = swift_bridgeObjectRelease();
    if ((v13 & 1) == 0)
    {
      *(_OWORD *)a4 = 0u;
      *(_OWORD *)(a4 + 16) = 0u;
      return result;
    }
  }
  result = sub_20A47A890(a1);
LABEL_14:
  *(_QWORD *)(a4 + 24) = MEMORY[0x24BEE0D00];
  *(_QWORD *)a4 = result;
  *(_QWORD *)(a4 + 8) = v15;
  return result;
}

_QWORD *sub_20A46FA20(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_20A46FA34(a1, a2, a3, a4, &qword_253EB4930);
}

_QWORD *sub_20A46FA34(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v11 = (_QWORD *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      v11[2] = v9;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 56);
      v13 = v11 + 4;
      if ((v6 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[7 * v9 + 4])
          memmove(v13, a4 + 4, 56 * v9);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_20A479890(0, v9, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

char *sub_20A46FB68(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_20A47084C(a1, a2, a3, a4, &qword_253EB52B8);
}

uint64_t sub_20A46FB74(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_20A4701D4(a1, a2, a3, a4, &qword_2545FA060, &qword_2545F9DD0);
}

_QWORD *sub_20A46FB88(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5278);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 + 31;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 6);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[8 * v8 + 4])
          memmove(v13, a4 + 4, v8 << 6);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_20A479CF4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_20A46FC94(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5270);
  v10 = *(_QWORD *)(sub_20A5B82B8() - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (v15 = v11 == -1) : (v15 = 0), v15))
  {
LABEL_29:
    result = sub_20A5B8FA8();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(sub_20A5B82B8() - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (unint64_t)v13 + v17;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(_QWORD *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_20A479DE4(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

_QWORD *sub_20A46FE9C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5298);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_20A479EFC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_20A46FFA8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9DC8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_20A479FEC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_20A4700B4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA048);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_20A47B4BC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_20A4701C0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_20A4701D4(a1, a2, a3, a4, &qword_2545FA028, &qword_253EB5178);
}

uint64_t sub_20A4701D4(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_20A5B8FA8();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_20A47B6A0(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

_QWORD *sub_20A4703E0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA008);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[7 * v8 + 4])
          memmove(v12, a4 + 4, 56 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_20A47B5AC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_20A470508(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_20A4701D4(a1, a2, a3, a4, &qword_2545FA0A8, &qword_2545FAC70);
}

_QWORD *sub_20A47051C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_253EB52B0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_20A47B7B8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_20A470628(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA010);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_20A47B8A8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_20A470734(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA078);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_20A47BB38(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_20A470840(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_20A47084C(a1, a2, a3, a4, &qword_2545FA070);
}

char *sub_20A47084C(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  int64_t v10;
  char *v11;
  size_t v12;
  char *v13;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = *((_QWORD *)a4 + 3);
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = *((_QWORD *)a4 + 2);
    if (v8 <= v9)
      v10 = *((_QWORD *)a4 + 2);
    else
      v10 = v8;
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v11 = (char *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      *((_QWORD *)v11 + 2) = v9;
      *((_QWORD *)v11 + 3) = 2 * v12 - 64;
      v13 = v11 + 32;
      if ((v6 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[v9 + 32])
          memmove(v13, a4 + 32, v9);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = (char *)MEMORY[0x24BEE4AF8];
      v13 = (char *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_20A47BC40(0, v9, v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

char *sub_20A470940(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_20A47084C(a1, a2, a3, a4, &qword_2545FA080);
}

uint64_t sub_20A47094C(uint64_t a1, uint64_t a2)
{
  return sub_20A470B50(a1, a2, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x24BEE0B20], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_20A470C9C);
}

uint64_t sub_20A470960(uint64_t a1)
{
  return sub_20A470988(a1, (void (*)(uint64_t))ODIErrorPropertyKey.rawValue.getter, sub_20A470D7C);
}

uint64_t sub_20A470974(uint64_t a1)
{
  return sub_20A470988(a1, (void (*)(uint64_t))DIPErrorPropertyKey.rawValue.getter, sub_20A47124C);
}

uint64_t sub_20A470988(uint64_t a1, void (*a2)(uint64_t), uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_20A5B929C();
  a2(v5);
  sub_20A5B8978();
  swift_bridgeObjectRelease();
  v6 = sub_20A5B92CC();
  return a3(a1, v6);
}

unint64_t sub_20A470A0C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_20A5B8E10();
  return sub_20A471950(a1, v2);
}

unint64_t sub_20A470A3C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_20A5B8D08();
  return sub_20A472804(a1, v2, (unint64_t *)&qword_253EB4880);
}

unint64_t sub_20A470A88(char a1)
{
  char v1;
  uint64_t v2;

  v1 = a1 & 1;
  sub_20A5B929C();
  sub_20A5B92A8();
  v2 = sub_20A5B92CC();
  return sub_20A471A14(v1, v2);
}

unint64_t sub_20A470AE4(void *__src)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  _BYTE __dst[1027];

  memcpy(__dst, __src, sizeof(__dst));
  sub_20A5B929C();
  sub_20A48B9BC((uint64_t)&v5, v2);
  v3 = sub_20A5B92CC();
  return sub_20A471AD0((uint64_t)__src, v3);
}

uint64_t sub_20A470B50(uint64_t a1, uint64_t a2, void (*a3)(_BYTE *, uint64_t, uint64_t), uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  _BYTE v10[72];

  sub_20A5B929C();
  a3(v10, a1, a2);
  v7 = sub_20A5B92CC();
  return a4(a1, a2, v7);
}

unint64_t sub_20A470BC8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_20A5B8D08();
  return sub_20A472804(a1, v2, &qword_2545F9D58);
}

unint64_t sub_20A470C14(unsigned __int8 a1)
{
  uint64_t v2;

  sub_20A5B929C();
  sub_20A5B92A8();
  v2 = sub_20A5B92CC();
  return sub_20A472914(a1, v2);
}

unint64_t sub_20A470C6C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_20A5B9290();
  return sub_20A4729B4(a1, v2);
}

unint64_t sub_20A470C9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_20A5B91AC() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_20A5B91AC() & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_20A470D7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

uint64_t sub_20A47124C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

unint64_t sub_20A471950(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_20A479788(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x20BD25EB8](v9, a1);
      sub_20A459C54((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_20A471A14(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (((((a1 & 1) == 0) ^ *(unsigned __int8 *)(v7 + result)) & 1) == 0)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (((((a1 & 1) == 0) ^ *(_BYTE *)(v7 + result)) & 1) != 0)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_20A471AD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  int v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  char v20;
  char v21;
  int v23;
  uint64_t v24;
  _BYTE v25[1024];
  _BYTE v26[1024];
  _BYTE __dst[1024];
  uint64_t __src[128];
  uint64_t v29[128];
  uint64_t v30;
  uint64_t v31[128];
  _QWORD v32[129];
  _BYTE v33[1032];

  v3 = (uint64_t *)MEMORY[0x24BDAC7A8](a1, a2);
  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  v7 = v6 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
  {
    v8 = v3;
    v9 = ~v5;
    v10 = *v3;
    v11 = &qword_2545FA0C8;
    sub_20A459C88((uint64_t)(v3 + 1), (uint64_t)v33, &qword_2545FA0C8);
    v12 = *((unsigned __int8 *)v8 + 1025);
    v23 = *((unsigned __int8 *)v8 + 1026);
    v24 = v2;
    do
    {
      memcpy(v32, (const void *)(*(_QWORD *)(v2 + 48) + 1032 * v7), 0x403uLL);
      if (((v12 ^ BYTE1(v32[128])) & 1) != 0)
        goto LABEL_6;
      sub_20A459C88((uint64_t)&v32[1], (uint64_t)v31, v11);
      if (sub_20A47C4E8(v31) == 1)
      {
        sub_20A459C88((uint64_t)v33, (uint64_t)v29, v11);
        v13 = sub_20A47C4E8(v29);
        sub_20A47BDA4((uint64_t)v32);
        if (v13 != 1)
          goto LABEL_4;
      }
      else
      {
        sub_20A459C88((uint64_t)&v32[1], (uint64_t)__src, v11);
        sub_20A459C88((uint64_t)v33, (uint64_t)v29, v11);
        if (sub_20A47C4E8(v29) == 1)
        {
          memcpy(__dst, __src, 0x3F9uLL);
          sub_20A47D3A4(&v32[1], sub_20A47C178);
          sub_20A47D3A4(&v32[1], sub_20A47C178);
          sub_20A47BDA4((uint64_t)v32);
          sub_20A47D1B0((uint64_t)__dst);
LABEL_4:
          sub_20A459C88((uint64_t)&v32[1], (uint64_t)v29, v11);
          sub_20A459C88((uint64_t)v33, (uint64_t)&v30, v11);
          sub_20A47D3A4(v33, sub_20A47C178);
          sub_20A47C50C(v29);
LABEL_5:
          sub_20A47CDDC((uint64_t)v32);
          goto LABEL_6;
        }
        sub_20A459C88((uint64_t)v33, (uint64_t)v26, v11);
        memcpy(v25, v26, 0x3F9uLL);
        sub_20A47D3A4(&v32[1], sub_20A47C178);
        sub_20A47D3A4(&v32[1], sub_20A47C178);
        sub_20A47BDA4((uint64_t)v32);
        v14 = _s17CoreODIEssentials16ArmandDeviceDataV2eeoiySbAC_ACtFZ_0(__src, (uint64_t)v25);
        memcpy(__dst, __src, 0x3F9uLL);
        sub_20A47D1B0((uint64_t)__dst);
        sub_20A47D3A4(&v32[1], sub_20A47CBD0);
        if ((v14 & 1) == 0)
          goto LABEL_5;
      }
      v15 = v12;
      v16 = v4;
      v17 = v9;
      v18 = v11;
      v19 = v32[0];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v20 = sub_20A48B458(v19, v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v20 & 1) == 0)
      {
        sub_20A47CDDC((uint64_t)v32);
LABEL_18:
        v11 = v18;
        v9 = v17;
        v4 = v16;
        v12 = v15;
        v2 = v24;
        goto LABEL_6;
      }
      v21 = Dictionary<>.isSubset(of:)(v10, v19);
      sub_20A47CDDC((uint64_t)v32);
      if ((v21 & 1) == 0)
        goto LABEL_18;
      v11 = v18;
      v9 = v17;
      v4 = v16;
      v12 = v15;
      v2 = v24;
      if (((v23 ^ BYTE2(v32[128])) & 1) == 0)
        return v7;
LABEL_6:
      v7 = (v7 + 1) & v9;
    }
    while (((*(_QWORD *)(v4 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
  }
  return v7;
}

uint64_t sub_20A471E7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v4 = -1 << *(_BYTE *)(v3 + 32);
  v5 = a3 & ~v4;
  if (((*(_QWORD *)(v3 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
    __asm { BR              X8 }
  return a3 & ~v4;
}

unint64_t sub_20A472804(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  id v7;
  char v8;
  uint64_t v9;
  id v10;
  char v11;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a2 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    sub_20A459574(0, a3);
    v7 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * i);
    v8 = sub_20A5B8D14();

    if ((v8 & 1) == 0)
    {
      v9 = ~v5;
      for (i = (i + 1) & v9; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v9)
      {
        v10 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * i);
        v11 = sub_20A5B8D14();

        if ((v11 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_20A472914(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_20A4729B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

uint64_t sub_20A472A50(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA0D8);
  v37 = a2;
  v6 = sub_20A5B8FE4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_38;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v2;
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_21;
    }
    if (__OFADD__(v14++, 1))
      goto LABEL_40;
    if (v14 >= v11)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v14);
    if (!v24)
    {
      v25 = v14 + 1;
      if (v14 + 1 >= v11)
      {
LABEL_31:
        swift_release();
        v3 = v35;
        if ((v37 & 1) == 0)
          goto LABEL_38;
        goto LABEL_34;
      }
      v24 = *(_QWORD *)(v36 + 8 * v25);
      if (!v24)
      {
        while (1)
        {
          v14 = v25 + 1;
          if (__OFADD__(v25, 1))
            break;
          if (v14 >= v11)
            goto LABEL_31;
          v24 = *(_QWORD *)(v36 + 8 * v14);
          ++v25;
          if (v24)
            goto LABEL_20;
        }
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        return result;
      }
      ++v14;
    }
LABEL_20:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_21:
    v26 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v28 = *v26;
    v27 = v26[1];
    v29 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_20A5B929C();
    sub_20A5B8978();
    result = sub_20A5B92CC();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v30 = 0;
      v31 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v32 = v17 == v31;
        if (v17 == v31)
          v17 = 0;
        v30 |= v32;
        v33 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v33 == -1);
      v18 = __clz(__rbit64(~v33)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v18);
    *v19 = v28;
    v19[1] = v27;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v18) = v29;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v23 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_38;
LABEL_34:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_38:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_20A472D40(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  uint64_t v41;
  char v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9FF8);
  v42 = a2;
  v6 = sub_20A5B8FE4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v41 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v39 = v2;
  v40 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_22;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v40)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v41 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v40)
        goto LABEL_34;
      v23 = *(_QWORD *)(v41 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v40)
        {
LABEL_34:
          swift_release();
          v3 = v39;
          if ((v42 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v23 = *(_QWORD *)(v41 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_43;
            if (v13 >= v40)
              goto LABEL_34;
            v23 = *(_QWORD *)(v41 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_21;
          }
        }
        v13 = v24;
      }
    }
LABEL_21:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_22:
    v25 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v27 = *v25;
    v26 = v25[1];
    v28 = *(_QWORD *)(v5 + 56) + 40 * v20;
    if ((v42 & 1) != 0)
    {
      v29 = *(_OWORD *)v28;
      v30 = *(_OWORD *)(v28 + 16);
      v45 = *(_QWORD *)(v28 + 32);
      v43 = v29;
      v44 = v30;
    }
    else
    {
      sub_20A479788(v28, (uint64_t)&v43);
      swift_bridgeObjectRetain();
    }
    sub_20A5B929C();
    sub_20A5B8978();
    result = sub_20A5B92CC();
    v31 = -1 << *(_BYTE *)(v7 + 32);
    v32 = result & ~v31;
    v33 = v32 >> 6;
    if (((-1 << v32) & ~*(_QWORD *)(v11 + 8 * (v32 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v11 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v34 = 0;
      v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v36 = v33 == v35;
        if (v33 == v35)
          v33 = 0;
        v34 |= v36;
        v37 = *(_QWORD *)(v11 + 8 * v33);
      }
      while (v37 == -1);
      v14 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
    *v15 = v27;
    v15[1] = v26;
    v16 = *(_QWORD *)(v7 + 56) + 40 * v14;
    v17 = v43;
    v18 = v44;
    *(_QWORD *)(v16 + 32) = v45;
    *(_OWORD *)v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v39;
  v22 = (_QWORD *)(v5 + 64);
  if ((v42 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v38 = 1 << *(_BYTE *)(v5 + 32);
  if (v38 >= 64)
    bzero(v22, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v38;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_20A473074(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  uint64_t v17;
  uint64_t result;
  _QWORD *v19;
  _OWORD v20[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB51E8);
  v6 = sub_20A5B8FE4();
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_27;
  v7 = 1 << *(_BYTE *)(v5 + 32);
  v19 = (_QWORD *)(v5 + 64);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v5 + 64);
  v10 = (unint64_t)(v7 + 63) >> 6;
  swift_retain();
  if (v9)
  {
    v11 = __clz(__rbit64(v9));
    goto LABEL_18;
  }
  if (v10 > 1)
  {
    v12 = *(_QWORD *)(v5 + 72);
    v13 = 1;
    if (v12)
      goto LABEL_17;
    v13 = 2;
    if (v10 > 2)
    {
      v12 = *(_QWORD *)(v5 + 80);
      if (!v12)
      {
        v14 = 3;
        if (v10 > 3)
        {
          v12 = *(_QWORD *)(v5 + 88);
          if (v12)
          {
            v13 = 3;
            goto LABEL_17;
          }
          while (1)
          {
            v13 = v14 + 1;
            if (__OFADD__(v14, 1))
            {
              __break(1u);
              JUMPOUT(0x20A473544);
            }
            if (v13 >= v10)
              break;
            v12 = v19[v13];
            ++v14;
            if (v12)
              goto LABEL_17;
          }
        }
        goto LABEL_22;
      }
LABEL_17:
      v11 = __clz(__rbit64(v12)) + (v13 << 6);
LABEL_18:
      v15 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + v11);
      v16 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v11);
      if ((a2 & 1) != 0)
        sub_20A44FD68(v16, v20);
      else
        sub_20A44FD78((uint64_t)v16, (uint64_t)v20);
      sub_20A5B929C();
      __asm { BR              X8 }
    }
  }
LABEL_22:
  swift_release();
  v3 = v2;
  if ((a2 & 1) != 0)
  {
    v17 = 1 << *(_BYTE *)(v5 + 32);
    if (v17 >= 64)
      bzero(v19, ((unint64_t)(v17 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    else
      *v19 = -1 << v17;
    *(_QWORD *)(v5 + 16) = 0;
  }
LABEL_27:
  result = swift_release();
  *v3 = v6;
  return result;
}

uint64_t sub_20A473580(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;
  _OWORD v35[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5210);
  v6 = sub_20A5B8FE4();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v34 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33)
          goto LABEL_34;
        v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v33)
            goto LABEL_34;
          v19 = v34[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              v3 = v2;
              if ((a2 & 1) != 0)
              {
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 >= 64)
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v34 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_41;
                if (v13 >= v33)
                  goto LABEL_34;
                v19 = v34[v13];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v13 = v20;
          }
        }
LABEL_21:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v21;
      v22 = v21[1];
      v24 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
      if ((a2 & 1) != 0)
      {
        sub_20A44FD68(v24, v35);
      }
      else
      {
        sub_20A44FD78((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_20A5B929C();
      sub_20A5B8978();
      result = sub_20A5B92CC();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v22;
      result = (uint64_t)sub_20A44FD68(v35, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v14));
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_20A47387C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  uint64_t v18;
  uint64_t result;
  _OWORD v20[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB51E0);
  v6 = sub_20A5B8FE4();
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_27:
    result = swift_release();
    goto LABEL_28;
  }
  v7 = 1 << *(_BYTE *)(v5 + 32);
  v8 = (_QWORD *)(v5 + 64);
  v9 = -1;
  if (v7 < 64)
    v9 = ~(-1 << v7);
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v7 + 63) >> 6;
  swift_retain();
  if (v10)
  {
    v12 = __clz(__rbit64(v10));
    goto LABEL_17;
  }
  if (v11 > 1)
  {
    v13 = *(_QWORD *)(v5 + 72);
    v14 = 1;
    if (v13)
      goto LABEL_16;
    v14 = 2;
    if (v11 <= 2)
      goto LABEL_21;
    v13 = *(_QWORD *)(v5 + 80);
    if (v13)
    {
LABEL_16:
      v12 = __clz(__rbit64(v13)) + (v14 << 6);
LABEL_17:
      v16 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + v12);
      v17 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v12);
      if ((a2 & 1) != 0)
        sub_20A44FD68(v17, v20);
      else
        sub_20A44FD78((uint64_t)v17, (uint64_t)v20);
      sub_20A5B929C();
      __asm { BR              X8 }
    }
    v15 = 3;
    if (v11 > 3)
    {
      v13 = *(_QWORD *)(v5 + 88);
      if (v13)
      {
        v14 = 3;
        goto LABEL_16;
      }
      while (1)
      {
        v14 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
          __break(1u);
          JUMPOUT(0x20A473E64);
        }
        if (v14 >= v11)
          break;
        v13 = v8[v14];
        ++v15;
        if (v13)
          goto LABEL_16;
      }
    }
  }
LABEL_21:
  swift_release();
  if ((a2 & 1) != 0)
  {
    v18 = 1 << *(_BYTE *)(v5 + 32);
    if (v18 >= 64)
      bzero((void *)(v5 + 64), ((unint64_t)(v18 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    else
      *v8 = -1 << v18;
    v3 = v2;
    *(_QWORD *)(v5 + 16) = 0;
    goto LABEL_27;
  }
  result = swift_release();
  v3 = v2;
LABEL_28:
  *v3 = v6;
  return result;
}

uint64_t sub_20A473EC8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  uint64_t v41;
  char v42;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB51F0);
  v42 = a2;
  v6 = sub_20A5B8FE4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v41 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v39 = v2;
  v40 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      v13 = v23 + 1;
      if (v23 + 1 >= v40)
        goto LABEL_33;
      v25 = *(_QWORD *)(v41 + 8 * v13);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          v3 = v39;
          if ((v42 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v13 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v13 >= v40)
              goto LABEL_33;
            v25 = *(_QWORD *)(v41 + 8 * v13);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v13 = v26;
      }
    }
LABEL_30:
    v10 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    v31 = 16 * v22;
    v32 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v31);
    v34 = *v32;
    v33 = v32[1];
    v35 = (uint64_t *)(*(_QWORD *)(v5 + 56) + v31);
    v36 = *v35;
    v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_20A5B929C();
    sub_20A5B8978();
    result = sub_20A5B92CC();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v16 == v28;
        if (v16 == v28)
          v16 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = 16 * v17;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v18);
    *v19 = v34;
    v19[1] = v33;
    v20 = (_QWORD *)(*(_QWORD *)(v7 + 56) + v18);
    *v20 = v36;
    v20[1] = v37;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v39;
  v24 = (_QWORD *)(v5 + 64);
  if ((v42 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v38 = 1 << *(_BYTE *)(v5 + 32);
  if (v38 >= 64)
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v38;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_20A4741EC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  char v25;
  int64_t v26;
  _QWORD *v27;
  unint64_t v28;
  int64_t v29;
  uint64_t *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  _QWORD *v41;
  uint64_t i;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD __dst[37];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA040);
  v43 = a2;
  v6 = sub_20A5B8FE4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v41 = (_QWORD *)(v5 + 64);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v39 = v2;
  v40 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  for (i = v5; ; v5 = i)
  {
    if (v10)
    {
      v17 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v18 = v17 | (v13 << 6);
      if ((v43 & 1) != 0)
        goto LABEL_10;
      goto LABEL_23;
    }
    v26 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v26 >= v40)
      break;
    v27 = v41;
    v28 = v41[v26];
    ++v13;
    if (!v28)
    {
      v13 = v26 + 1;
      if (v26 + 1 >= v40)
        goto LABEL_33;
      v28 = v41[v13];
      if (!v28)
      {
        v29 = v26 + 2;
        if (v29 >= v40)
        {
LABEL_33:
          swift_release();
          v3 = v39;
          if ((v43 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v28 = v41[v29];
        if (!v28)
        {
          while (1)
          {
            v13 = v29 + 1;
            if (__OFADD__(v29, 1))
              goto LABEL_42;
            if (v13 >= v40)
              goto LABEL_33;
            v28 = v41[v13];
            ++v29;
            if (v28)
              goto LABEL_22;
          }
        }
        v13 = v29;
      }
    }
LABEL_22:
    v10 = (v28 - 1) & v28;
    v18 = __clz(__rbit64(v28)) + (v13 << 6);
    if ((v43 & 1) != 0)
    {
LABEL_10:
      v19 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v18);
      v20 = *v19;
      v21 = v19[1];
      v22 = *(_QWORD *)(v5 + 56) + 288 * v18;
      v47 = *(_QWORD *)(v22 + 16);
      v48 = *(_QWORD *)(v22 + 24);
      v59 = *(_QWORD *)(v22 + 32);
      v56 = *(_QWORD *)(v22 + 40);
      v54 = *(_QWORD *)(v22 + 48);
      v52 = *(_QWORD *)v22;
      v53 = *(_QWORD *)(v22 + 56);
      v50 = *(_QWORD *)(v22 + 8);
      v51 = *(_QWORD *)(v22 + 64);
      v49 = *(_QWORD *)(v22 + 72);
      v45 = *(_QWORD *)(v22 + 80);
      v46 = *(_QWORD *)(v22 + 88);
      v55 = *(_QWORD *)(v22 + 96);
      v57 = *(_QWORD *)(v22 + 112);
      v58 = *(_QWORD *)(v22 + 104);
      v60 = *(_QWORD *)(v22 + 120);
      v61 = *(_BYTE *)(v22 + 128);
      v23 = *(_BYTE *)(v22 + 152);
      v73 = *(_QWORD *)(v22 + 160);
      v72 = *(_QWORD *)(v22 + 168);
      v71 = *(_QWORD *)(v22 + 176);
      v68 = *(_QWORD *)(v22 + 184);
      v63 = *(_QWORD *)(v22 + 192);
      v64 = *(_QWORD *)(v22 + 136);
      v65 = *(_QWORD *)(v22 + 200);
      v66 = *(_QWORD *)(v22 + 144);
      v24 = *(_BYTE *)(v22 + 208);
      v25 = *(_BYTE *)(v22 + 264);
      v67 = *(_QWORD *)(v22 + 216);
      v62 = *(_QWORD *)(v22 + 224);
      v69 = *(_QWORD *)(v22 + 232);
      v70 = *(_QWORD *)(v22 + 240);
      v44 = *(_BYTE *)(v22 + 248);
      v74 = *(_QWORD *)(v22 + 256);
      v75 = *(_QWORD *)(v22 + 272);
      v76 = *(_QWORD *)(v22 + 280);
      goto LABEL_24;
    }
LABEL_23:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v18);
    v20 = *v30;
    v21 = v30[1];
    memcpy(__dst, (const void *)(*(_QWORD *)(v5 + 56) + 288 * v18), 0x120uLL);
    v75 = __dst[34];
    v76 = __dst[35];
    v25 = __dst[33];
    v44 = __dst[31];
    v69 = __dst[29];
    v70 = __dst[30];
    v62 = __dst[28];
    v24 = __dst[26];
    v73 = __dst[20];
    v74 = __dst[32];
    v71 = __dst[22];
    v72 = __dst[21];
    v67 = __dst[27];
    v68 = __dst[23];
    v23 = __dst[19];
    v65 = __dst[25];
    v66 = __dst[18];
    v63 = __dst[24];
    v64 = __dst[17];
    v61 = __dst[16];
    v57 = __dst[14];
    v58 = __dst[13];
    v59 = __dst[4];
    v60 = __dst[15];
    v55 = __dst[12];
    v56 = __dst[5];
    v53 = __dst[7];
    v54 = __dst[6];
    v46 = __dst[11];
    v45 = __dst[10];
    v51 = __dst[8];
    v52 = __dst[0];
    v49 = __dst[9];
    v50 = __dst[1];
    v47 = __dst[2];
    v48 = __dst[3];
    swift_bridgeObjectRetain();
    sub_20A47B9B0(__dst);
LABEL_24:
    sub_20A5B929C();
    sub_20A5B8978();
    result = sub_20A5B92CC();
    v31 = -1 << *(_BYTE *)(v7 + 32);
    v32 = result & ~v31;
    v33 = v32 >> 6;
    if (((-1 << v32) & ~*(_QWORD *)(v11 + 8 * (v32 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v11 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v34 = 0;
      v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v36 = v33 == v35;
        if (v33 == v35)
          v33 = 0;
        v34 |= v36;
        v37 = *(_QWORD *)(v11 + 8 * v33);
      }
      while (v37 == -1);
      v14 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    LOBYTE(__dst[0]) = v23;
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
    *v15 = v20;
    v15[1] = v21;
    v16 = *(_QWORD *)(v7 + 56) + 288 * v14;
    *(_QWORD *)v16 = v52;
    *(_QWORD *)(v16 + 8) = v50;
    *(_QWORD *)(v16 + 16) = v47;
    *(_QWORD *)(v16 + 24) = v48;
    *(_QWORD *)(v16 + 32) = v59;
    *(_QWORD *)(v16 + 40) = v56;
    *(_QWORD *)(v16 + 48) = v54;
    *(_QWORD *)(v16 + 56) = v53;
    *(_QWORD *)(v16 + 64) = v51;
    *(_QWORD *)(v16 + 72) = v49;
    *(_QWORD *)(v16 + 80) = v45;
    *(_QWORD *)(v16 + 88) = v46;
    *(_QWORD *)(v16 + 96) = v55;
    *(_QWORD *)(v16 + 104) = v58;
    *(_QWORD *)(v16 + 112) = v57;
    *(_QWORD *)(v16 + 120) = v60;
    *(_BYTE *)(v16 + 128) = v61;
    *(_QWORD *)(v16 + 136) = v64;
    *(_QWORD *)(v16 + 144) = v66;
    *(_BYTE *)(v16 + 152) = __dst[0];
    *(_QWORD *)(v16 + 160) = v73;
    *(_QWORD *)(v16 + 168) = v72;
    *(_QWORD *)(v16 + 176) = v71;
    *(_QWORD *)(v16 + 184) = v68;
    *(_QWORD *)(v16 + 192) = v63;
    *(_QWORD *)(v16 + 200) = v65;
    *(_BYTE *)(v16 + 208) = v24;
    *(_QWORD *)(v16 + 216) = v67;
    *(_QWORD *)(v16 + 224) = v62;
    *(_QWORD *)(v16 + 232) = v69;
    *(_QWORD *)(v16 + 240) = v70;
    *(_BYTE *)(v16 + 248) = v44;
    *(_QWORD *)(v16 + 256) = v74;
    *(_BYTE *)(v16 + 264) = v25;
    *(_QWORD *)(v16 + 272) = v75;
    *(_QWORD *)(v16 + 280) = v76;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v39;
  v27 = v41;
  if ((v43 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v38 = 1 << *(_BYTE *)(v5 + 32);
  if (v38 >= 64)
    bzero(v27, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v27 = -1 << v38;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_20A474808(uint64_t a1, int a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t result;
  int64_t i;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  int64_t v29;
  _QWORD *v30;
  unint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  int64_t v42;
  _QWORD *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  int64_t v50;
  uint64_t v51;
  _BYTE v52[1027];
  _QWORD v53[129];
  _BYTE v54[1032];

  v3 = v2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA0B8);
  v47 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v6);
  v46 = (uint64_t)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA0C0);
  v49 = a2;
  v9 = sub_20A5B8FE4();
  v10 = (_QWORD *)v9;
  if (*(_QWORD *)(v8 + 16))
  {
    v44 = (char *)&v53[128] + 1;
    v11 = 1 << *(_BYTE *)(v8 + 32);
    v12 = *(_QWORD *)(v8 + 64);
    v43 = (_QWORD *)(v8 + 64);
    if (v11 < 64)
      v13 = ~(-1 << v11);
    else
      v13 = -1;
    v14 = v13 & v12;
    v41 = v2;
    v42 = (unint64_t)(v11 + 63) >> 6;
    v45 = v9 + 64;
    v48 = v8;
    result = swift_retain();
    for (i = 0; ; i = v50)
    {
      if (v14)
      {
        v27 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        v28 = v27 | (i << 6);
      }
      else
      {
        v29 = i + 1;
        if (__OFADD__(i, 1))
        {
          __break(1u);
LABEL_34:
          __break(1u);
          return result;
        }
        v30 = v43;
        if (v29 >= v42)
          goto LABEL_24;
        v31 = v43[v29];
        ++i;
        if (!v31)
        {
          i = v29 + 1;
          if (v29 + 1 >= v42)
            goto LABEL_24;
          v31 = v43[i];
          if (!v31)
          {
            v32 = v29 + 2;
            if (v32 >= v42)
            {
LABEL_24:
              v39 = v48;
              swift_release();
              if ((v49 & 1) == 0)
              {
                result = swift_release();
                v3 = v41;
                goto LABEL_32;
              }
              v40 = 1 << *(_BYTE *)(v39 + 32);
              if (v40 >= 64)
                bzero(v30, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v30 = -1 << v40;
              v3 = v41;
              *(_QWORD *)(v39 + 16) = 0;
              break;
            }
            v31 = v43[v32];
            if (!v31)
            {
              while (1)
              {
                i = v32 + 1;
                if (__OFADD__(v32, 1))
                  goto LABEL_34;
                if (i >= v42)
                  goto LABEL_24;
                v31 = v43[i];
                ++v32;
                if (v31)
                  goto LABEL_21;
              }
            }
            i = v32;
          }
        }
LABEL_21:
        v14 = (v31 - 1) & v31;
        v28 = __clz(__rbit64(v31)) + (i << 6);
      }
      v33 = 1032 * v28;
      v50 = i;
      if ((v49 & 1) != 0)
      {
        v34 = v48;
        v35 = *(_QWORD *)(v48 + 48);
        v36 = v35 + v33;
        v22 = *(_QWORD *)(v35 + 1032 * v28);
        sub_20A459C88(v35 + v33 + 8, (uint64_t)v53, &qword_2545FA0C8);
        v21 = *(_BYTE *)(v36 + 1025);
        v20 = *(_BYTE *)(v36 + 1026);
        v37 = *(_QWORD *)(v34 + 56);
        v17 = *(_QWORD *)(v47 + 72);
        v38 = v37 + v17 * v28;
        v19 = v46;
        sub_20A459C88(v38, v46, &qword_2545FA0B8);
        v23 = v53;
      }
      else
      {
        memcpy(v53, (const void *)(*(_QWORD *)(v48 + 48) + v33), 0x403uLL);
        v17 = *(_QWORD *)(v47 + 72);
        v18 = *(_QWORD *)(v48 + 56) + v17 * v28;
        v19 = v46;
        sub_20A47D62C(v18, v46, &qword_2545FA0B8);
        v20 = v44[1];
        v21 = *v44;
        v22 = v53[0];
        sub_20A47BDA4((uint64_t)v53);
        v23 = &v53[1];
      }
      sub_20A459C88((uint64_t)v23, (uint64_t)v54, &qword_2545FA0C8);
      v53[0] = v22;
      sub_20A459C88((uint64_t)v54, (uint64_t)&v53[1], &qword_2545FA0C8);
      BYTE1(v53[128]) = v21;
      BYTE2(v53[128]) = v20;
      memcpy(v52, v53, sizeof(v52));
      sub_20A5B929C();
      sub_20A48B9BC((uint64_t)&v51, v24);
      sub_20A5B92CC();
      v25 = v45;
      v26 = sub_20A5B8DC8();
      *(_QWORD *)(v25 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
      memcpy((void *)(v10[6] + 1032 * v26), v53, 0x403uLL);
      result = sub_20A459C88(v19, v10[7] + v17 * v26, &qword_2545FA0B8);
      ++v10[2];
    }
  }
  result = swift_release();
LABEL_32:
  *v3 = v10;
  return result;
}

uint64_t sub_20A474C14(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5200);
  v37 = a2;
  v6 = sub_20A5B8FE4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = v2;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v35)
        goto LABEL_33;
      v23 = *(_QWORD *)(v36 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          v3 = v34;
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v35)
              goto LABEL_33;
            v23 = *(_QWORD *)(v36 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_BYTE *)(*(_QWORD *)(v5 + 56) + v20);
    if ((v37 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_20A5B929C();
    sub_20A5B8978();
    result = sub_20A5B92CC();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_BYTE *)(*(_QWORD *)(v7 + 56) + v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v34;
  v22 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_20A474F1C(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  uint64_t v43;
  int v44;

  v3 = v2;
  v5 = type metadata accessor for ODIKnownBinding();
  v43 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA000);
  v44 = a2;
  v10 = sub_20A5B8FE4();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v42 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v40 = v2;
  v41 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  while (1)
  {
    if (v15)
    {
      v21 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v22 = v21 | (v18 << 6);
      goto LABEL_22;
    }
    v23 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v23 >= v41)
      break;
    v24 = v42;
    v25 = v42[v23];
    ++v18;
    if (!v25)
    {
      v18 = v23 + 1;
      if (v23 + 1 >= v41)
        goto LABEL_34;
      v25 = v42[v18];
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v41)
        {
LABEL_34:
          swift_release();
          v3 = v40;
          if ((v44 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v25 = v42[v26];
        if (!v25)
        {
          while (1)
          {
            v18 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_43;
            if (v18 >= v41)
              goto LABEL_34;
            v25 = v42[v18];
            ++v26;
            if (v25)
              goto LABEL_21;
          }
        }
        v18 = v26;
      }
    }
LABEL_21:
    v15 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v18 << 6);
LABEL_22:
    v27 = (uint64_t *)(*(_QWORD *)(v9 + 48) + 16 * v22);
    v29 = *v27;
    v28 = v27[1];
    v30 = *(_QWORD *)(v43 + 72);
    v31 = *(_QWORD *)(v9 + 56) + v30 * v22;
    if ((v44 & 1) != 0)
    {
      sub_20A479808(v31, (uint64_t)v8);
    }
    else
    {
      sub_20A4797C4(v31, (uint64_t)v8);
      swift_bridgeObjectRetain();
    }
    sub_20A5B929C();
    sub_20A5B8978();
    result = sub_20A5B92CC();
    v32 = -1 << *(_BYTE *)(v11 + 32);
    v33 = result & ~v32;
    v34 = v33 >> 6;
    if (((-1 << v33) & ~*(_QWORD *)(v16 + 8 * (v33 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v16 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v35 = 0;
      v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v37 = v34 == v36;
        if (v34 == v36)
          v34 = 0;
        v35 |= v37;
        v38 = *(_QWORD *)(v16 + 8 * v34);
      }
      while (v38 == -1);
      v19 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    v20 = (_QWORD *)(*(_QWORD *)(v11 + 48) + 16 * v19);
    *v20 = v29;
    v20[1] = v28;
    result = sub_20A479808((uint64_t)v8, *(_QWORD *)(v11 + 56) + v30 * v19);
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v40;
  v24 = v42;
  if ((v44 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v39 = 1 << *(_BYTE *)(v9 + 32);
  if (v39 >= 64)
    bzero(v24, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v39;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_20A475284(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  __int128 *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;
  char v37;
  __int128 v38[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB48D0);
  v37 = a2;
  v6 = sub_20A5B8FE4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = v2;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v13 << 6);
      goto LABEL_22;
    }
    v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v35)
      break;
    v19 = (_QWORD *)(v5 + 64);
    v20 = *(_QWORD *)(v36 + 8 * v18);
    ++v13;
    if (!v20)
    {
      v13 = v18 + 1;
      if (v18 + 1 >= v35)
        goto LABEL_34;
      v20 = *(_QWORD *)(v36 + 8 * v13);
      if (!v20)
      {
        v21 = v18 + 2;
        if (v21 >= v35)
        {
LABEL_34:
          swift_release();
          v3 = v34;
          if ((v37 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v20 = *(_QWORD *)(v36 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            v13 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_43;
            if (v13 >= v35)
              goto LABEL_34;
            v20 = *(_QWORD *)(v36 + 8 * v13);
            ++v21;
            if (v20)
              goto LABEL_21;
          }
        }
        v13 = v21;
      }
    }
LABEL_21:
    v10 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_22:
    v22 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
    v24 = *v22;
    v23 = v22[1];
    v25 = (__int128 *)(*(_QWORD *)(v5 + 56) + 40 * v17);
    if ((v37 & 1) != 0)
    {
      sub_20A44CFD8(v25, (uint64_t)v38);
    }
    else
    {
      sub_20A47BD60((uint64_t)v25, (uint64_t)v38);
      swift_bridgeObjectRetain();
    }
    sub_20A5B929C();
    sub_20A5B8978();
    result = sub_20A5B92CC();
    v26 = -1 << *(_BYTE *)(v7 + 32);
    v27 = result & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~*(_QWORD *)(v11 + 8 * (v27 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v29 = 0;
      v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v31 = v28 == v30;
        if (v28 == v30)
          v28 = 0;
        v29 |= v31;
        v32 = *(_QWORD *)(v11 + 8 * v28);
      }
      while (v32 == -1);
      v14 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
    *v15 = v24;
    v15[1] = v23;
    result = sub_20A44CFD8(v38, *(_QWORD *)(v7 + 56) + 40 * v14);
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v34;
  v19 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v19, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v19 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_20A4755A8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  char v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  __int128 v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA020);
  v36 = a2;
  v6 = sub_20A5B8FE4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v35 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v11)
        goto LABEL_33;
      v24 = *(_QWORD *)(v35 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v35 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v11)
              goto LABEL_33;
            v24 = *(_QWORD *)(v35 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v21);
    v31 = *(_QWORD *)(v5 + 56) + 24 * v21;
    v37 = *(_OWORD *)v31;
    v32 = *(_BYTE *)(v31 + 16);
    if ((v36 & 1) == 0)
      v33 = v30;
    result = sub_20A5B8D08();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v18) = v30;
    v19 = *(_QWORD *)(v7 + 56) + 24 * v18;
    *(_OWORD *)v19 = v37;
    *(_BYTE *)(v19 + 16) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v23 = (_QWORD *)(v5 + 64);
  if ((v36 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_20A475898(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  char v34;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA030);
  result = sub_20A5B8FE4();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v34 = a2;
    v8 = 0;
    v9 = (_QWORD *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v18 = v17 | (v8 << 6);
      }
      else
      {
        v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v19 >= v13)
          goto LABEL_31;
        v20 = v9[v19];
        ++v8;
        if (!v20)
        {
          v8 = v19 + 1;
          if (v19 + 1 >= v13)
            goto LABEL_31;
          v20 = v9[v8];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v13)
            {
LABEL_31:
              if ((v34 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_38;
              }
              v33 = 1 << *(_BYTE *)(v5 + 32);
              if (v33 >= 64)
                bzero((void *)(v5 + 64), ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v9 = -1 << v33;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                v8 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_40;
                if (v8 >= v13)
                  goto LABEL_31;
                v20 = v9[v8];
                ++v21;
                if (v20)
                  goto LABEL_21;
              }
            }
            v8 = v21;
          }
        }
LABEL_21:
        v12 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      v22 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v18);
      v23 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 16 * v18);
      v25 = *v23;
      v24 = v23[1];
      sub_20A5B929C();
      sub_20A5B92A8();
      result = sub_20A5B92CC();
      v26 = -1 << *(_BYTE *)(v7 + 32);
      v27 = result & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v14 + 8 * (v27 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v14 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v14 + 8 * v28);
        }
        while (v32 == -1);
        v15 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_BYTE *)(*(_QWORD *)(v7 + 48) + v15) = v22;
      v16 = (_QWORD *)(*(_QWORD *)(v7 + 56) + 16 * v15);
      *v16 = v25;
      v16[1] = v24;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_38:
  *v3 = v7;
  return result;
}

uint64_t sub_20A475B68(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  char v26;
  void *v27;
  id v28;
  uint64_t v29;
  int64_t v30;
  _QWORD *v31;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA038);
  result = sub_20A5B8FE4();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v31 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v30 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v18 = v17 | (v8 << 6);
      }
      else
      {
        v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v19 >= v30)
          goto LABEL_33;
        v20 = v31[v19];
        ++v8;
        if (!v20)
        {
          v8 = v19 + 1;
          if (v19 + 1 >= v30)
            goto LABEL_33;
          v20 = v31[v8];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v30)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v29 = 1 << *(_BYTE *)(v5 + 32);
              if (v29 >= 64)
                bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v31 = -1 << v29;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v20 = v31[v21];
            if (!v20)
            {
              while (1)
              {
                v8 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_42;
                if (v8 >= v30)
                  goto LABEL_33;
                v20 = v31[v8];
                ++v21;
                if (v20)
                  goto LABEL_30;
              }
            }
            v8 = v21;
          }
        }
LABEL_30:
        v11 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      v26 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v18);
      v27 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v18);
      if ((a2 & 1) == 0)
        v28 = v27;
      sub_20A5B929C();
      sub_20A5B92A8();
      result = sub_20A5B92CC();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v24 = v15 == v23;
          if (v15 == v23)
            v15 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_BYTE *)(*(_QWORD *)(v7 + 48) + v16) = v26;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v16) = v27;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_20A475E30(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  char v35;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5218);
  result = sub_20A5B8FE4();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v35 = a2;
    v34 = v3;
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v32 = -1 << v10;
    v33 = v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v18 = v17 | (v8 << 6);
      }
      else
      {
        v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v19 >= v13)
          goto LABEL_31;
        v20 = v9[v19];
        ++v8;
        if (!v20)
        {
          v8 = v19 + 1;
          if (v19 + 1 >= v13)
            goto LABEL_31;
          v20 = v9[v8];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v13)
            {
LABEL_31:
              if ((v35 & 1) == 0)
              {
                result = swift_release();
                v3 = v34;
                goto LABEL_38;
              }
              if (v33 >= 64)
                bzero((void *)(v5 + 64), 8 * v13);
              else
                *v9 = v32;
              v3 = v34;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                v8 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_40;
                if (v8 >= v13)
                  goto LABEL_31;
                v20 = v9[v8];
                ++v21;
                if (v20)
                  goto LABEL_21;
              }
            }
            v8 = v21;
          }
        }
LABEL_21:
        v12 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      v22 = 8 * v18;
      v23 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v22);
      v24 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v22);
      result = sub_20A5B9290();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v14 + 8 * (v26 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v14 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v14 + 8 * v27);
        }
        while (v31 == -1);
        v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      v16 = 8 * v15;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v16) = v23;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v16) = v24;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_38:
  *v3 = v7;
  return result;
}

uint64_t sub_20A4760D4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  int64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA088);
  v34 = a2;
  result = sub_20A5B8FE4();
  v7 = result;
  v35 = v5;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v31 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v32 = result;
    v33 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v19 = v18 | (v8 << 6);
      }
      else
      {
        v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        result = (uint64_t)v31;
        if (v20 >= v33)
          goto LABEL_33;
        v21 = v31[v20];
        ++v8;
        if (!v21)
        {
          v8 = v20 + 1;
          if (v20 + 1 >= v33)
            goto LABEL_33;
          v21 = v31[v8];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v33)
            {
LABEL_33:
              if ((v34 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_41;
              }
              v30 = 1 << *(_BYTE *)(v35 + 32);
              if (v30 >= 64)
                bzero(v31, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v31 = -1 << v30;
              v3 = v2;
              *(_QWORD *)(v35 + 16) = 0;
              break;
            }
            v21 = v31[v22];
            if (!v21)
            {
              while (1)
              {
                v8 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_43;
                if (v8 >= v33)
                  goto LABEL_33;
                v21 = v31[v8];
                ++v22;
                if (v21)
                  goto LABEL_30;
              }
            }
            v8 = v22;
          }
        }
LABEL_30:
        v11 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      v27 = *(_BYTE *)(*(_QWORD *)(v35 + 48) + v19);
      v28 = *(_QWORD *)(v35 + 56) + 112 * v19;
      v29 = *(_QWORD *)v28;
      v41 = *(_OWORD *)(v28 + 24);
      v42 = *(_OWORD *)(v28 + 8);
      v39 = *(_OWORD *)(v28 + 56);
      v40 = *(_OWORD *)(v28 + 40);
      v37 = *(_OWORD *)(v28 + 88);
      v38 = *(_OWORD *)(v28 + 72);
      v36 = *(_QWORD *)(v28 + 104);
      if ((v34 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v7 = v32;
        swift_bridgeObjectRetain();
      }
      sub_20A5B929C();
      sub_20A5B92A8();
      result = sub_20A5B92CC();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v25 = v15 == v24;
          if (v15 == v24)
            v15 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_BYTE *)(*(_QWORD *)(v7 + 48) + v16) = v27;
      v17 = *(_QWORD *)(v7 + 56) + 112 * v16;
      *(_QWORD *)v17 = v29;
      *(_OWORD *)(v17 + 8) = v42;
      *(_OWORD *)(v17 + 24) = v41;
      *(_OWORD *)(v17 + 40) = v40;
      *(_OWORD *)(v17 + 56) = v39;
      *(_OWORD *)(v17 + 72) = v38;
      *(_OWORD *)(v17 + 88) = v37;
      *(_QWORD *)(v17 + 104) = v36;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_41:
  *v3 = v7;
  return result;
}

_OWORD *sub_20A4764CC(_OWORD *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  _OWORD *v17;
  _OWORD *result;
  uint64_t v19;
  char v20;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_20A470988(a2, (void (*)(uint64_t))ODIErrorPropertyKey.rawValue.getter, sub_20A470D7C);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = (_OWORD *)(v16[7] + 32 * v10);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
        return sub_20A44FD68(a1, v17);
      }
      return sub_20A4773F8(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_20A478148(&qword_253EB51E8);
      goto LABEL_7;
    }
    sub_20A473074(v13, a3 & 1);
    v19 = sub_20A470988(a2, (void (*)(uint64_t))ODIErrorPropertyKey.rawValue.getter, sub_20A470D7C);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_20A4773F8(v10, a2, a1, v16);
    }
  }
  result = (_OWORD *)sub_20A5B9218();
  __break(1u);
  return result;
}

_OWORD *sub_20A476610(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _OWORD *v19;
  _OWORD *result;
  uint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_20A470B50(a2, a3, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x24BEE0B20], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_20A470C9C);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_OWORD *)(v18[7] + 32 * v12);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
        return sub_20A44FD68(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_20A477F58();
      goto LABEL_7;
    }
    sub_20A473580(v15, a4 & 1);
    v21 = sub_20A470B50(a2, a3, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x24BEE0B20], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_20A470C9C);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_20A47738C(v12, a2, a3, a1, v18);
      return (_OWORD *)swift_bridgeObjectRetain();
    }
  }
  result = (_OWORD *)sub_20A5B9218();
  __break(1u);
  return result;
}

_OWORD *sub_20A476760(_OWORD *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  _OWORD *v17;
  _OWORD *result;
  uint64_t v19;
  char v20;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_20A470988(a2, (void (*)(uint64_t))DIPErrorPropertyKey.rawValue.getter, sub_20A47124C);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = (_OWORD *)(v16[7] + 32 * v10);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
        return sub_20A44FD68(a1, v17);
      }
      return sub_20A4773F8(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_20A478148(&qword_253EB51E0);
      goto LABEL_7;
    }
    sub_20A47387C(v13, a3 & 1);
    v19 = sub_20A470988(a2, (void (*)(uint64_t))DIPErrorPropertyKey.rawValue.getter, sub_20A47124C);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_20A4773F8(v10, a2, a1, v16);
    }
  }
  result = (_OWORD *)sub_20A5B9218();
  __break(1u);
  return result;
}

uint64_t sub_20A4768A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t result;
  uint64_t v23;
  char v24;
  uint64_t *v25;
  _QWORD *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;

  v6 = v5;
  v12 = *v5;
  v14 = sub_20A470B50(a3, a4, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x24BEE0B20], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_20A470C9C);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0)
    goto LABEL_7;
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_20A4782FC();
LABEL_7:
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = (_QWORD *)(v20[7] + 16 * v14);
      result = swift_bridgeObjectRelease();
      *v21 = a1;
      v21[1] = a2;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v25 = (uint64_t *)(v20[6] + 16 * v14);
    *v25 = a3;
    v25[1] = a4;
    v26 = (_QWORD *)(v20[7] + 16 * v14);
    *v26 = a1;
    v26[1] = a2;
    v27 = v20[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (!v28)
    {
      v20[2] = v29;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_20A473EC8(v17, a5 & 1);
  v23 = sub_20A470B50(a3, a4, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x24BEE0B20], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_20A470C9C);
  if ((v18 & 1) == (v24 & 1))
  {
    v14 = v23;
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_20A5B9218();
  __break(1u);
  return result;
}

uint64_t sub_20A476A38(const void *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t result;
  uint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v5 = v4;
  v10 = *v4;
  v12 = sub_20A470B50(a2, a3, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x24BEE0B20], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_20A470C9C);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_20A4784B4();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      return sub_20A47BAB8((uint64_t)a1, v18[7] + 288 * v12);
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    memcpy((void *)(v18[7] + 288 * v12), a1, 0x120uLL);
    v23 = v18[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_20A4741EC(v15, a4 & 1);
  v20 = sub_20A470B50(a2, a3, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x24BEE0B20], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_20A470C9C);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      return sub_20A47BAB8((uint64_t)a1, v18[7] + 288 * v12);
    goto LABEL_11;
  }
LABEL_15:
  result = sub_20A5B9218();
  __break(1u);
  return result;
}

uint64_t sub_20A476BC0(uint64_t a1, void *__src, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  unint64_t v20;
  char v21;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_20A470AE4(__src);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];
        v18 = v17
            + *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545FA0B8) - 8) + 72)
            * v10;
        return sub_20A47C388(a1, v18);
      }
      goto LABEL_11;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_20A4786AC();
      goto LABEL_7;
    }
    sub_20A474808(v13, a3 & 1);
    v20 = sub_20A470AE4(__src);
    if ((v14 & 1) == (v21 & 1))
    {
      v10 = v20;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_20A4774CC(v10, __src, a1, v16);
      return sub_20A47BDA4((uint64_t)__src);
    }
  }
  result = sub_20A5B9218();
  __break(1u);
  return result;
}

uint64_t sub_20A476CE8(char a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  char v19;
  uint64_t *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v5 = v4;
  v10 = *v4;
  v12 = sub_20A470B50(a2, a3, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x24BEE0B20], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_20A470C9C);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= result && (a4 & 1) == 0)
  {
    result = (uint64_t)sub_20A47890C();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      *(_BYTE *)(v18[7] + v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v20 = (uint64_t *)(v18[6] + 16 * v12);
    *v20 = a2;
    v20[1] = a3;
    *(_BYTE *)(v18[7] + v12) = a1;
    v21 = v18[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v18[2] = v23;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_20A474C14(result, a4 & 1);
  result = sub_20A470B50(a2, a3, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x24BEE0B20], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_20A470C9C);
  if ((v16 & 1) == (v19 & 1))
  {
    v12 = result;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_20A5B9218();
  __break(1u);
  return result;
}

uint64_t sub_20A476E58(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  char v23;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_20A470B50(a2, a3, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x24BEE0B20], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_20A470C9C);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];
        v20 = v19 + *(_QWORD *)(*(_QWORD *)(type metadata accessor for ODIKnownBinding() - 8) + 72) * v12;
        return sub_20A47984C(a1, v20);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_20A478AB4();
      goto LABEL_7;
    }
    sub_20A474F1C(v15, a4 & 1);
    v22 = sub_20A470B50(a2, a3, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x24BEE0B20], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_20A470C9C);
    if ((v16 & 1) == (v23 & 1))
    {
      v12 = v22;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_20A477570(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_20A5B9218();
  __break(1u);
  return result;
}

id sub_20A476FAC(uint64_t a1, uint64_t a2, char a3, void *a4, char a5)
{
  _QWORD *v5;
  _QWORD **v6;
  _QWORD *v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  id result;
  char v17;
  uint64_t v18;
  char v19;
  int v20;
  _QWORD *v21;
  uint64_t v22;

  v6 = (_QWORD **)v5;
  v11 = (_QWORD *)*v5;
  v13 = sub_20A470BC8((uint64_t)a4);
  v14 = v11[2];
  v15 = (v12 & 1) == 0;
  result = (id)(v14 + v15);
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_13;
  }
  v17 = v12;
  v18 = v11[3];
  if (v18 >= (uint64_t)result && (a5 & 1) != 0)
    goto LABEL_9;
  if (v18 >= (uint64_t)result && (a5 & 1) == 0)
  {
    result = sub_20A478EC8();
    goto LABEL_9;
  }
  sub_20A4755A8((uint64_t)result, a5 & 1);
  result = (id)sub_20A470BC8((uint64_t)a4);
  if ((v17 & 1) != (v19 & 1))
  {
LABEL_13:
    sub_20A459574(0, &qword_2545F9D58);
    result = (id)sub_20A5B9218();
    __break(1u);
    return result;
  }
  v13 = (unint64_t)result;
LABEL_9:
  v20 = a3 & 1;
  v21 = *v6;
  if ((v17 & 1) != 0)
  {
    v22 = v21[7] + 24 * v13;
    *(_QWORD *)v22 = a1;
    *(_QWORD *)(v22 + 8) = a2;
    *(_BYTE *)(v22 + 16) = v20 != 0;
  }
  else
  {
    sub_20A4775F8(v13, (uint64_t)a4, a1, a2, v20, v21);
    return a4;
  }
  return result;
}

uint64_t sub_20A4770F8(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v4 = v3;
  v8 = *v3;
  v10 = sub_20A470C6C(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_20A4793AC();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      *(_QWORD *)(v16[7] + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    v18 = 8 * v10;
    *(_QWORD *)(v16[6] + v18) = a2;
    *(_QWORD *)(v16[7] + v18) = a1;
    v19 = v16[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (!v20)
    {
      v16[2] = v21;
      return result;
    }
    goto LABEL_14;
  }
  sub_20A475E30(result, a3 & 1);
  result = sub_20A470C6C(a2);
  if ((v14 & 1) == (v17 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_20A5B9218();
  __break(1u);
  return result;
}

_QWORD *sub_20A477224(__int128 *a1, unsigned __int8 a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  _QWORD *result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  char v17;
  _OWORD *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v4 = v3;
  v8 = *v3;
  v10 = sub_20A470C14(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = (_QWORD *)(v11 + v12);
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= (uint64_t)result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= (uint64_t)result && (a3 & 1) == 0)
  {
    result = sub_20A479538();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      return sub_20A47BD24(a1, (_QWORD *)(v16[7] + 112 * v10));
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(_BYTE *)(v16[6] + v10) = a2;
    v18 = (_OWORD *)(v16[7] + 112 * v10);
    v19 = *a1;
    v20 = a1[2];
    v18[1] = a1[1];
    v18[2] = v20;
    *v18 = v19;
    v21 = a1[3];
    v22 = a1[4];
    v23 = a1[6];
    v18[5] = a1[5];
    v18[6] = v23;
    v18[3] = v21;
    v18[4] = v22;
    v24 = v16[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (!v25)
    {
      v16[2] = v26;
      return result;
    }
    goto LABEL_14;
  }
  sub_20A4760D4((uint64_t)result, a3 & 1);
  result = (_QWORD *)sub_20A470C14(a2);
  if ((v14 & 1) == (v17 & 1))
  {
    v10 = (unint64_t)result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      return sub_20A47BD24(a1, (_QWORD *)(v16[7] + 112 * v10));
    goto LABEL_11;
  }
LABEL_15:
  result = (_QWORD *)sub_20A5B9218();
  __break(1u);
  return result;
}

_OWORD *sub_20A47738C(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_20A44FD68(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

_OWORD *sub_20A4773F8(unint64_t a1, char a2, _OWORD *a3, _QWORD *a4)
{
  _OWORD *result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_BYTE *)(a4[6] + a1) = a2;
  result = sub_20A44FD68(a3, (_OWORD *)(a4[7] + 32 * a1));
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

void *sub_20A47745C(unint64_t a1, uint64_t a2, uint64_t a3, void *__src, _QWORD *a5)
{
  _QWORD *v6;
  void *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = memcpy((void *)(a5[7] + 288 * a1), __src, 0x120uLL);
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

uint64_t sub_20A4774CC(unint64_t a1, const void *a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  memcpy((void *)(a4[6] + 1032 * a1), a2, 0x403uLL);
  v7 = a4[7];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA0B8);
  result = sub_20A459C88(a3, v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * a1, &qword_2545FA0B8);
  v10 = a4[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a4[2] = v12;
  return result;
}

uint64_t sub_20A477570(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v8 = (_QWORD *)(a5[6] + 16 * a1);
  *v8 = a2;
  v8[1] = a3;
  v9 = a5[7];
  v10 = type metadata accessor for ODIKnownBinding();
  result = sub_20A479808(a4, v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * a1);
  v12 = a5[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a5[2] = v14;
  return result;
}

unint64_t sub_20A4775F8(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, _QWORD *a6)
{
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;

  a6[(result >> 6) + 8] |= 1 << result;
  *(_QWORD *)(a6[6] + 8 * result) = a2;
  v6 = a6[7] + 24 * result;
  *(_QWORD *)v6 = a3;
  *(_QWORD *)(v6 + 8) = a4;
  *(_BYTE *)(v6 + 16) = a5 & 1;
  v7 = a6[2];
  v8 = __OFADD__(v7, 1);
  v9 = v7 + 1;
  if (v8)
    __break(1u);
  else
    a6[2] = v9;
  return result;
}

void *sub_20A47764C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA0D8);
  v2 = *v0;
  v3 = sub_20A5B8FD8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_20A477800()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t *v28;
  _OWORD v29[2];
  uint64_t v30;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9FF8);
  v2 = *v0;
  v3 = sub_20A5B8FD8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v28 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 40 * v15;
    sub_20A479788(*(_QWORD *)(v2 + 56) + 40 * v15, (uint64_t)v29);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    v22 = *(_QWORD *)(v4 + 56) + v20;
    v23 = v30;
    v24 = v29[1];
    *(_OWORD *)v22 = v29[0];
    *(_OWORD *)(v22 + 16) = v24;
    *(_QWORD *)(v22 + 32) = v23;
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v28;
    goto LABEL_28;
  }
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

unint64_t sub_20A4779F8()
{
  unint64_t result;

  result = qword_2545F9FE8;
  if (!qword_2545F9FE8)
  {
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for ODIErrorCode, &type metadata for ODIErrorCode);
    atomic_store(result, (unint64_t *)&qword_2545F9FE8);
  }
  return result;
}

unint64_t sub_20A477A40()
{
  unint64_t result;

  result = qword_253EB4FB8;
  if (!qword_253EB4FB8)
  {
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for ODIErrorPropertyKey, &type metadata for ODIErrorPropertyKey);
    atomic_store(result, (unint64_t *)&qword_253EB4FB8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ODIErrorCode(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0x30)
    goto LABEL_17;
  if (a2 + 208 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 208) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 208;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 208;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 208;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xD1;
  v8 = v6 - 209;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ODIErrorCode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 208 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 208) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0x30)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0x2F)
    return ((uint64_t (*)(void))((char *)&loc_20A477B60 + 4 * byte_20A5BF2A4[v4]))();
  *a1 = a2 - 48;
  return ((uint64_t (*)(void))((char *)sub_20A477B94 + 4 * byte_20A5BF29F[v4]))();
}

uint64_t sub_20A477B94(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A477B9C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A477BA4);
  return result;
}

uint64_t sub_20A477BB0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A477BB8);
  *(_BYTE *)result = a2 - 48;
  return result;
}

uint64_t sub_20A477BBC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A477BC4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ODIErrorCode()
{
  return &type metadata for ODIErrorCode;
}

uint64_t getEnumTagSinglePayload for ODIErrorPropertyKey(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF2)
    goto LABEL_17;
  if (a2 + 14 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 14) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 14;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 14;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 14;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xF;
  v8 = v6 - 15;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ODIErrorPropertyKey(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 14 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 14) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF2)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF1)
    return ((uint64_t (*)(void))((char *)&loc_20A477CBC + 4 * byte_20A5BF2AE[v4]))();
  *a1 = a2 + 14;
  return ((uint64_t (*)(void))((char *)sub_20A477CF0 + 4 * byte_20A5BF2A9[v4]))();
}

uint64_t sub_20A477CF0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A477CF8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A477D00);
  return result;
}

uint64_t sub_20A477D0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A477D14);
  *(_BYTE *)result = a2 + 14;
  return result;
}

uint64_t sub_20A477D18(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A477D20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ODIErrorPropertyKey()
{
  return &type metadata for ODIErrorPropertyKey;
}

uint64_t sub_20A477D40(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (!a3 || a3 == 2)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for TTRError(uint64_t a1)
{
  return sub_20A477D6C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_20A477D6C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (!a3 || a3 == 2)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s17CoreODIEssentials8TTRErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_20A477D40(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for TTRError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_20A477D40(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_20A477D6C(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for TTRError(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_20A477D6C(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 253;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_20A477F08(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 2u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 3);
}

uint64_t sub_20A477F20(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(_QWORD *)result = a2 - 3;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for TTRError()
{
  return &type metadata for TTRError;
}

ValueMetadata *type metadata accessor for ODIInvocation()
{
  return &type metadata for ODIInvocation;
}

void *sub_20A477F58()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5210);
  v2 = *v0;
  v3 = sub_20A5B8FD8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_20A44FD78(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_20A44FD68(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_20A47813C()
{
  return sub_20A478148(&qword_253EB51E0);
}

void *sub_20A478148(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  char v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  _OWORD v21[2];

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_20A5B8FD8();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v14)
      goto LABEL_26;
    v19 = *(_QWORD *)(v7 + 8 * v18);
    ++v10;
    if (!v19)
    {
      v10 = v18 + 1;
      if (v18 + 1 >= v14)
        goto LABEL_26;
      v19 = *(_QWORD *)(v7 + 8 * v10);
      if (!v19)
        break;
    }
LABEL_25:
    v13 = (v19 - 1) & v19;
    v16 = __clz(__rbit64(v19)) + (v10 << 6);
LABEL_12:
    v17 = *(_BYTE *)(*(_QWORD *)(v3 + 48) + v16);
    sub_20A44FD78(*(_QWORD *)(v3 + 56) + 32 * v16, (uint64_t)v21);
    *(_BYTE *)(*(_QWORD *)(v5 + 48) + v16) = v17;
    result = sub_20A44FD68(v21, (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v16));
  }
  v20 = v18 + 2;
  if (v20 >= v14)
    goto LABEL_26;
  v19 = *(_QWORD *)(v7 + 8 * v20);
  if (v19)
  {
    v10 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v19 = *(_QWORD *)(v7 + 8 * v10);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_20A4782FC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB51F0);
  v2 = *v0;
  v3 = sub_20A5B8FD8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = *v20;
    v22 = v20[1];
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v19;
    v23[1] = v18;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_20A4784B4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _QWORD __dst[37];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA040);
  v2 = *v0;
  v3 = sub_20A5B8FD8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 288 * v15;
    memcpy(__dst, (const void *)(*(_QWORD *)(v2 + 56) + 288 * v15), 0x120uLL);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    memcpy((void *)(*(_QWORD *)(v4 + 56) + v20), __dst, 0x120uLL);
    swift_bridgeObjectRetain();
    result = sub_20A47B9B0(__dst);
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_20A4786AC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[1040];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA0B8);
  v26 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA0C0);
  v6 = *v0;
  v7 = sub_20A5B8FD8();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_25:
    *v1 = v8;
    return result;
  }
  v24 = v1;
  result = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  v25 = v6 + 64;
  v11 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v12 = 1 << *(_BYTE *)(v6 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v6 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_9;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v20 >= v15)
      goto LABEL_23;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v15)
        goto LABEL_23;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_22:
    v14 = (v21 - 1) & v21;
    v17 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_9:
    v18 = 1032 * v17;
    memcpy(v27, (const void *)(*(_QWORD *)(v6 + 48) + 1032 * v17), 0x403uLL);
    v19 = *(_QWORD *)(v26 + 72) * v17;
    sub_20A47D62C(*(_QWORD *)(v6 + 56) + v19, (uint64_t)v5, &qword_2545FA0B8);
    memcpy((void *)(*(_QWORD *)(v8 + 48) + v18), v27, 0x403uLL);
    sub_20A459C88((uint64_t)v5, *(_QWORD *)(v8 + 56) + v19, &qword_2545FA0B8);
    result = (void *)sub_20A47BDA4((uint64_t)v27);
  }
  v22 = v20 + 2;
  if (v22 >= v15)
  {
LABEL_23:
    result = (void *)swift_release();
    v1 = v24;
    goto LABEL_25;
  }
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_22;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v15)
      goto LABEL_23;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_20A47890C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5200);
  v2 = *v0;
  v3 = sub_20A5B8FD8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = *v16;
    v17 = v16[1];
    LOBYTE(v16) = *(_BYTE *)(*(_QWORD *)(v2 + 56) + v15);
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v15);
    *v19 = v18;
    v19[1] = v17;
    *(_BYTE *)(*(_QWORD *)(v4 + 56) + v15) = (_BYTE)v16;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_20A478AB4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;

  v1 = v0;
  v2 = type metadata accessor for ODIKnownBinding();
  v31 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA000);
  v6 = *v0;
  v7 = sub_20A5B8FD8();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v8;
    return result;
  }
  v29 = v1;
  result = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  v30 = v6 + 64;
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v25 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v16)
      goto LABEL_26;
    v26 = *(_QWORD *)(v30 + 8 * v25);
    ++v12;
    if (!v26)
    {
      v12 = v25 + 1;
      if (v25 + 1 >= v16)
        goto LABEL_26;
      v26 = *(_QWORD *)(v30 + 8 * v12);
      if (!v26)
        break;
    }
LABEL_25:
    v15 = (v26 - 1) & v26;
    v18 = __clz(__rbit64(v26)) + (v12 << 6);
LABEL_12:
    v19 = 16 * v18;
    v20 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v18);
    v22 = *v20;
    v21 = v20[1];
    v23 = *(_QWORD *)(v31 + 72) * v18;
    sub_20A4797C4(*(_QWORD *)(v6 + 56) + v23, (uint64_t)v5);
    v24 = (_QWORD *)(*(_QWORD *)(v8 + 48) + v19);
    *v24 = v22;
    v24[1] = v21;
    sub_20A479808((uint64_t)v5, *(_QWORD *)(v8 + 56) + v23);
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v16)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v29;
    goto LABEL_28;
  }
  v26 = *(_QWORD *)(v30 + 8 * v27);
  if (v26)
  {
    v12 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v26 = *(_QWORD *)(v30 + 8 * v12);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_20A478CE0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  __int128 v26[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB48D0);
  v2 = *v0;
  v3 = sub_20A5B8FD8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 40 * v15;
    sub_20A47BD60(*(_QWORD *)(v2 + 56) + 40 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_20A44CFD8(v26, *(_QWORD *)(v4 + 56) + v20);
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_20A478EC8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  __int128 v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA020);
  v2 = *v0;
  v3 = sub_20A5B8FD8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 24 * v15;
    v19 = *(_QWORD *)(v2 + 56) + v18;
    v20 = *(_BYTE *)(v19 + 16);
    v21 = *(_OWORD *)v19;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v22 = *(_QWORD *)(v4 + 56) + v18;
    *(_OWORD *)v22 = v21;
    *(_BYTE *)(v22 + 16) = v20;
    result = v17;
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_20A479080()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA030);
  v2 = *v0;
  v3 = sub_20A5B8FD8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v20 = __clz(__rbit64(v18));
    v12 = (v18 - 1) & v18;
    v15 = v20 + (v9 << 6);
LABEL_12:
    v16 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + 16 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + 16 * v15) = v16;
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_20A47920C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  void *v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA038);
  v2 = *v0;
  v3 = sub_20A5B8FD8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    v16 = *(void **)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
    result = v16;
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_20A4793AC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5218);
  v2 = *v0;
  v3 = sub_20A5B8FD8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v21 = __clz(__rbit64(v19));
    v12 = (v19 - 1) & v19;
    v15 = v21 + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_20A479538()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *result;
  unint64_t v5;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  int64_t v27;
  uint64_t v28;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA088);
  v26 = v0;
  v1 = *v0;
  v2 = sub_20A5B8FD8();
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v26 = v3;
    return result;
  }
  result = (void *)(v2 + 64);
  v5 = (unint64_t)((1 << *(_BYTE *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v5)
    result = memmove(result, (const void *)(v1 + 64), 8 * v5);
  v28 = v1 + 64;
  v7 = 0;
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v1 + 16);
  v8 = 1 << *(_BYTE *)(v1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(v1 + 64);
  v27 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      v11 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v12 = v11 | (v7 << 6);
      goto LABEL_12;
    }
    v23 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v27)
      goto LABEL_26;
    v24 = *(_QWORD *)(v28 + 8 * v23);
    ++v7;
    if (!v24)
    {
      v7 = v23 + 1;
      if (v23 + 1 >= v27)
        goto LABEL_26;
      v24 = *(_QWORD *)(v28 + 8 * v7);
      if (!v24)
        break;
    }
LABEL_25:
    v10 = (v24 - 1) & v24;
    v12 = __clz(__rbit64(v24)) + (v7 << 6);
LABEL_12:
    v13 = *(_QWORD *)(v1 + 56) + 112 * v12;
    v14 = *(_QWORD *)v13;
    v15 = *(_QWORD *)(v13 + 104);
    v16 = *(_OWORD *)(v13 + 8);
    v17 = *(_OWORD *)(v13 + 24);
    v18 = *(_OWORD *)(v13 + 40);
    v19 = *(_OWORD *)(v13 + 56);
    v20 = *(_OWORD *)(v13 + 72);
    v21 = *(_OWORD *)(v13 + 88);
    *(_BYTE *)(*(_QWORD *)(v3 + 48) + v12) = *(_BYTE *)(*(_QWORD *)(v1 + 48) + v12);
    v22 = *(_QWORD *)(v3 + 56) + 112 * v12;
    *(_QWORD *)v22 = v14;
    *(_OWORD *)(v22 + 8) = v16;
    *(_OWORD *)(v22 + 24) = v17;
    *(_OWORD *)(v22 + 40) = v18;
    *(_OWORD *)(v22 + 56) = v19;
    *(_OWORD *)(v22 + 72) = v20;
    *(_OWORD *)(v22 + 88) = v21;
    *(_QWORD *)(v22 + 104) = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v27)
    goto LABEL_26;
  v24 = *(_QWORD *)(v28 + 8 * v25);
  if (v24)
  {
    v7 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v7 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v7 >= v27)
      goto LABEL_26;
    v24 = *(_QWORD *)(v28 + 8 * v7);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_20A479788(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_20A4797C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ODIKnownBinding();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A479808(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ODIKnownBinding();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A47984C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ODIKnownBinding();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A479890(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 56 * a1 + 32;
    v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_20A5B8FFC();
  __break(1u);
  return result;
}

unint64_t sub_20A479980(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  char v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t result;
  char v8;
  unint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  char v14;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB48C8);
  v3 = (_QWORD *)sub_20A5B8FF0();
  v4 = *(_BYTE *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  result = sub_20A470A88(v4);
  if ((v8 & 1) != 0)
  {
LABEL_7:
    __break(1u);
    return MEMORY[0x24BEE4B00];
  }
  v9 = (unint64_t *)(a1 + 72);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v3[6] + result) = v4;
    v10 = (uint64_t *)(v3[7] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    v11 = v3[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      break;
    v3[2] = v13;
    sub_20A45964C(v5, v6);
    if (!--v1)
      return (unint64_t)v3;
    v4 = *((_BYTE *)v9 - 16);
    v5 = *(v9 - 1);
    v6 = *v9;
    result = sub_20A470A88(v4);
    v9 += 3;
    if ((v14 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_20A479A80(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _OWORD *i;
  unsigned __int8 v5;
  unint64_t result;
  char v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  __int128 v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA030);
    v3 = (_QWORD *)sub_20A5B8FF0();
    for (i = (_OWORD *)(a1 + 40); ; i = (_OWORD *)((char *)i + 24))
    {
      v5 = *((_BYTE *)i - 8);
      v11 = *i;
      result = sub_20A470C14(v5);
      if ((v7 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_BYTE *)(v3[6] + result) = v5;
      *(_OWORD *)(v3[7] + 16 * result) = v11;
      v8 = v3[2];
      v9 = __OFADD__(v8, 1);
      v10 = v8 + 1;
      if (v9)
        goto LABEL_10;
      v3[2] = v10;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

unint64_t sub_20A479B5C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t result;
  char v14;
  _QWORD *v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA088);
    v3 = (_QWORD *)sub_20A5B8FF0();
    v4 = (_QWORD *)(a1 + 72);
    while (1)
    {
      v19 = v1;
      v5 = *((_BYTE *)v4 - 40);
      v24 = *(v4 - 4);
      v25 = *(v4 - 3);
      v26 = *(v4 - 1);
      v6 = v4[1];
      v22 = *v4;
      v23 = *(v4 - 2);
      v7 = v4[3];
      v9 = v4[4];
      v8 = v4[5];
      v11 = v4[6];
      v10 = v4[7];
      v12 = v4[9];
      v20 = v4[8];
      v21 = v4[2];
      result = sub_20A470C14(v5);
      if ((v14 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_BYTE *)(v3[6] + result) = v5;
      v15 = (_QWORD *)(v3[7] + 112 * result);
      *v15 = v24;
      v15[1] = v25;
      v15[2] = v23;
      v15[3] = v26;
      v15[4] = v22;
      v15[5] = v6;
      v15[6] = v21;
      v15[7] = v7;
      v15[8] = v9;
      v15[9] = v8;
      v15[10] = v11;
      v15[11] = v10;
      v15[12] = v20;
      v15[13] = v12;
      v16 = v3[2];
      v17 = __OFADD__(v16, 1);
      v18 = v16 + 1;
      if (v17)
        goto LABEL_10;
      v4 += 15;
      v3[2] = v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v1 = v19 - 1;
      if (v19 == 1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

uint64_t sub_20A479CF4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + (a1 << 6) + 32;
    v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_20A5B8FFC();
  __break(1u);
  return result;
}

uint64_t sub_20A479DE4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v8 = *(_QWORD *)(sub_20A5B82B8() - 8);
    v9 = *(unsigned __int8 *)(v8 + 80);
    v10 = *(_QWORD *)(v8 + 72);
    v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
    v12 = v10 * v4;
    v13 = a3 + v12;
    v14 = v11 + v12;
    if (v11 >= v13 || v14 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  result = sub_20A5B8FFC();
  __break(1u);
  return result;
}

uint64_t sub_20A479EFC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_20A5B8FFC();
  __break(1u);
  return result;
}

uint64_t sub_20A479FEC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_20A5B8FFC();
  __break(1u);
  return result;
}

uint64_t sub_20A47A0E0(void *a1)
{
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t result;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  void *v32;
  uint64_t v33;
  int64_t v34;
  _OWORD v35[2];
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  __int128 v40;

  if (!a1)
    return 0x3E6C696E3CLL;
  v2 = a1;
  v3 = (void *)sub_20A5B8414();
  v4 = objc_msgSend(v3, sel_userInfo);
  v5 = sub_20A5B8888();

  if (!*(_QWORD *)(v5 + 16)
    || (v6 = sub_20A470B50(0x636F766E4949444FLL, 0xEE00736E6F697461, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x24BEE0B20], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_20A470C9C), (v7 & 1) == 0))
  {
    v37 = 0u;
    v38 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  sub_20A44FD78(*(_QWORD *)(v5 + 56) + 32 * v6, (uint64_t)&v37);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v38 + 1))
  {
LABEL_14:
    sub_20A44FDFC((uint64_t)&v37);
    goto LABEL_15;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB47F0);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v8 = *(_QWORD *)(*(_QWORD *)&v35[0] + 16);
    if (v8)
    {
      v9 = v8 + 1;
      v10 = *(_QWORD *)&v35[0] + 56 * v8;
      while (1)
      {
        v11 = *(_QWORD *)(v10 - 16);
        v12 = HIBYTE(v11) & 0xF;
        if ((v11 & 0x2000000000000000) == 0)
          v12 = *(_QWORD *)(v10 - 24) & 0xFFFFFFFFFFFFLL;
        if (v12)
          break;
        --v9;
        v10 -= 56;
        if (v9 <= 1)
          goto LABEL_12;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v37 = 40;
      *((_QWORD *)&v37 + 1) = 0xE100000000000000;
      swift_bridgeObjectRetain();
      sub_20A5B899C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      sub_20A5B899C();
    }
    else
    {
LABEL_12:
      swift_bridgeObjectRelease();
    }
  }
LABEL_15:
  ODIErrorCode.init(rawValue:)((Swift::Int)objc_msgSend(v3, sel_code));
  if (v37 != 209)
    sub_20A5B8960();
  *(_QWORD *)&v37 = 0;
  *((_QWORD *)&v37 + 1) = 0xE000000000000000;
  sub_20A5B8E94();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v37 = 0x20726F727245;
  *((_QWORD *)&v37 + 1) = 0xE600000000000000;
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  v14 = objc_msgSend(v3, sel_domain);
  sub_20A5B8900();

  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  *(_QWORD *)&v35[0] = objc_msgSend(v3, sel_code);
  sub_20A5B9170();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  v13 = v37;
  v40 = v37;
  v15 = objc_msgSend(v3, sel_userInfo);
  v16 = sub_20A5B8888();

  if (*(_QWORD *)(v16 + 16)
    && (v17 = sub_20A470B50(0x65706F725049444FLL, 0xED00007365697472, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x24BEE0B20], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_20A470C9C), (v18 & 1) != 0))
  {
    sub_20A44FD78(*(_QWORD *)(v16 + 56) + 32 * v17, (uint64_t)&v37);
  }
  else
  {
    v37 = 0u;
    v38 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v38 + 1))
  {

    sub_20A44FDFC((uint64_t)&v37);
    return v13;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB47A8);
  if ((swift_dynamicCast() & 1) == 0)
  {

LABEL_56:
    return v13;
  }
  v19 = *(_QWORD *)&v35[0];
  if (!*(_QWORD *)(*(_QWORD *)&v35[0] + 16))
  {

    swift_bridgeObjectRelease();
    goto LABEL_56;
  }
  v32 = v3;
  result = sub_20A5B899C();
  v21 = 0;
  v22 = *(_QWORD *)(*(_QWORD *)&v35[0] + 64);
  v33 = *(_QWORD *)&v35[0] + 64;
  v23 = 1 << *(_BYTE *)(*(_QWORD *)&v35[0] + 32);
  v24 = -1;
  if (v23 < 64)
    v24 = ~(-1 << v23);
  v25 = v24 & v22;
  v34 = (unint64_t)(v23 + 63) >> 6;
  if ((v24 & v22) == 0)
    goto LABEL_33;
LABEL_31:
  v26 = __clz(__rbit64(v25));
  v25 &= v25 - 1;
  v27 = v26 | (v21 << 6);
  while (2)
  {
    v28 = *(_QWORD *)(v19 + 56);
    LOBYTE(v35[0]) = *(_BYTE *)(*(_QWORD *)(v19 + 48) + v27);
    sub_20A44FD78(v28 + 32 * v27, (uint64_t)v35 + 8);
    while (1)
    {
      sub_20A459C88((uint64_t)v35, (uint64_t)&v37, qword_253EB45C8);
      if (!v39)
      {
        swift_bridgeObjectRelease();
        swift_release();
        sub_20A5B899C();

        return v40;
      }
      sub_20A44FD68((__int128 *)((char *)&v37 + 8), v35);
      sub_20A5B8F9C();
      sub_20A5B899C();
      sub_20A5B8F9C();
      swift_bridgeObjectRetain();
      sub_20A5B899C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_20A5B899C();
      swift_bridgeObjectRelease();
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
      if (v25)
        goto LABEL_31;
LABEL_33:
      v29 = v21 + 1;
      if (__OFADD__(v21, 1))
      {
        __break(1u);
        goto LABEL_60;
      }
      if (v29 < v34)
      {
        v30 = *(_QWORD *)(v33 + 8 * v29);
        if (v30)
          goto LABEL_36;
        v31 = v21 + 2;
        ++v21;
        if (v29 + 1 < v34)
        {
          v30 = *(_QWORD *)(v33 + 8 * v31);
          if (v30)
            goto LABEL_39;
          v21 = v29 + 1;
          if (v29 + 2 < v34)
          {
            v30 = *(_QWORD *)(v33 + 8 * (v29 + 2));
            if (v30)
            {
              v29 += 2;
              goto LABEL_36;
            }
            v31 = v29 + 3;
            v21 = v29 + 2;
            if (v29 + 3 < v34)
              break;
          }
        }
      }
LABEL_50:
      v25 = 0;
      v36 = 0;
      memset(v35, 0, sizeof(v35));
    }
    v30 = *(_QWORD *)(v33 + 8 * v31);
    if (v30)
    {
LABEL_39:
      v29 = v31;
LABEL_36:
      v25 = (v30 - 1) & v30;
      v27 = __clz(__rbit64(v30)) + (v29 << 6);
      v21 = v29;
      continue;
    }
    break;
  }
  while (1)
  {
    v29 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v29 >= v34)
    {
      v21 = v34 - 1;
      goto LABEL_50;
    }
    v30 = *(_QWORD *)(v33 + 8 * v29);
    ++v31;
    if (v30)
      goto LABEL_36;
  }
LABEL_60:
  __break(1u);
  return result;
}

uint64_t sub_20A47A890(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t result;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  void *v44;
  int64_t v45;
  void *v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  int64_t v53;
  char v54;
  uint64_t v55;
  unint64_t v56;
  _OWORD v57[2];
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  __int128 v62;

  v2 = sub_20A5B84D4();
  v51 = *(_QWORD *)(v2 - 8);
  v52 = v2;
  MEMORY[0x24BDAC7A8](v2, v3);
  v50 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
    return 0x3E6C696E3CLL;
  v5 = a1;
  v6 = (void *)sub_20A5B8414();
  ODIErrorCode.init(rawValue:)((Swift::Int)objc_msgSend(v6, sel_code));
  if (v59 != 209)
    sub_20A5B8960();
  v8 = objc_msgSend(v6, sel_userInfo);
  v9 = sub_20A5B8888();

  *(_QWORD *)&v59 = 0;
  *((_QWORD *)&v59 + 1) = 0xE000000000000000;
  sub_20A5B8E94();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v59 = 0x6F4420726F727245;
  *((_QWORD *)&v59 + 1) = 0xEF203D206E69616DLL;
  v10 = objc_msgSend(v6, sel_domain);
  sub_20A5B8900();

  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  *(_QWORD *)&v57[0] = objc_msgSend(v6, sel_code);
  sub_20A5B9170();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  v62 = v59;
  v11 = *(_QWORD *)(v9 + 16);
  v49 = v9;
  if (v11)
  {
    v12 = sub_20A470B50(0x65706F725049444FLL, 0xED00007365697472, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x24BEE0B20], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_20A470C9C);
    if ((v13 & 1) != 0)
    {
      v47 = v6;
      sub_20A44FD78(*(_QWORD *)(v9 + 56) + 32 * v12, (uint64_t)&v59);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB47A8);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v46 = a1;
        v14 = *(_QWORD *)&v57[0];
        result = sub_20A5B899C();
        v15 = 0;
        v16 = *(_QWORD *)(v14 + 64);
        v48 = v14 + 64;
        v17 = 1 << *(_BYTE *)(v14 + 32);
        v18 = -1;
        if (v17 < 64)
          v18 = ~(-1 << v17);
        v19 = v18 & v16;
        v53 = (unint64_t)(v17 + 63) >> 6;
        v45 = v53 - 1;
        if ((v18 & v16) == 0)
          goto LABEL_16;
LABEL_14:
        v21 = __clz(__rbit64(v19));
        v19 &= v19 - 1;
        v22 = v21 | (v15 << 6);
LABEL_15:
        v23 = *(_QWORD *)(v14 + 56);
        LOBYTE(v57[0]) = *(_BYTE *)(*(_QWORD *)(v14 + 48) + v22);
        sub_20A44FD78(v23 + 32 * v22, (uint64_t)v57 + 8);
        while (1)
        {
          sub_20A459C88((uint64_t)v57, (uint64_t)&v59, qword_253EB45C8);
          if (!v61)
            break;
          v20 = v59;
          sub_20A44FD68((__int128 *)((char *)&v59 + 8), v57);
          sub_20A5B899C();
          v55 = 0;
          v56 = 0xE000000000000000;
          v54 = v20;
          sub_20A5B8F9C();
          sub_20A5B899C();
          sub_20A5B8F9C();
          v55 = 539822345;
          v56 = 0xE400000000000000;
          sub_20A5B899C();
          swift_bridgeObjectRelease();
          sub_20A5B899C();
          swift_bridgeObjectRelease();
          result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
          if (v19)
            goto LABEL_14;
LABEL_16:
          v24 = v15 + 1;
          if (__OFADD__(v15, 1))
            goto LABEL_65;
          if (v24 < v53)
          {
            v25 = *(_QWORD *)(v48 + 8 * v24);
            if (v25)
              goto LABEL_19;
            v26 = v15 + 2;
            ++v15;
            if (v24 + 1 < v53)
            {
              v25 = *(_QWORD *)(v48 + 8 * v26);
              if (v25)
                goto LABEL_22;
              v15 = v24 + 1;
              if (v24 + 2 < v53)
              {
                v25 = *(_QWORD *)(v48 + 8 * (v24 + 2));
                if (v25)
                {
                  v24 += 2;
                  goto LABEL_19;
                }
                v26 = v24 + 3;
                v15 = v24 + 2;
                if (v24 + 3 < v53)
                {
                  v25 = *(_QWORD *)(v48 + 8 * v26);
                  if (!v25)
                  {
                    while (1)
                    {
                      v24 = v26 + 1;
                      if (__OFADD__(v26, 1))
                        goto LABEL_66;
                      if (v24 >= v53)
                      {
                        v15 = v45;
                        goto LABEL_33;
                      }
                      v25 = *(_QWORD *)(v48 + 8 * v24);
                      ++v26;
                      if (v25)
                        goto LABEL_19;
                    }
                  }
LABEL_22:
                  v24 = v26;
LABEL_19:
                  v19 = (v25 - 1) & v25;
                  v22 = __clz(__rbit64(v25)) + (v24 << 6);
                  v15 = v24;
                  goto LABEL_15;
                }
              }
            }
          }
LABEL_33:
          v19 = 0;
          v58 = 0;
          memset(v57, 0, sizeof(v57));
        }
        swift_release();
        a1 = v46;
        v6 = v47;
        v9 = v49;
        if (!*(_QWORD *)(v49 + 16))
          goto LABEL_54;
        goto LABEL_39;
      }
      v6 = v47;
    }
  }
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_54;
LABEL_39:
  v27 = sub_20A470B50(0x636F766E4949444FLL, 0xEE00736E6F697461, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x24BEE0B20], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_20A470C9C);
  if ((v28 & 1) == 0)
    goto LABEL_54;
  sub_20A44FD78(*(_QWORD *)(v9 + 56) + 32 * v27, (uint64_t)&v59);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB47F0);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_54;
  v29 = *(_QWORD *)&v57[0];
  if (!*(_QWORD *)(*(_QWORD *)&v57[0] + 16) || (result = sub_20A5B899C(), (v30 = *(_QWORD *)(v29 + 16)) == 0))
  {
    swift_bridgeObjectRelease();
LABEL_54:
    v40 = sub_20A5B8900();
    if (*(_QWORD *)(v9 + 16)
      && (v42 = sub_20A470B50(v40, v41, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x24BEE0B20], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_20A470C9C), (v43 & 1) != 0))
    {
      sub_20A44FD78(*(_QWORD *)(v9 + 56) + 32 * v42, (uint64_t)&v59);
    }
    else
    {
      v59 = 0u;
      v60 = 0u;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*((_QWORD *)&v60 + 1))
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52D0);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v44 = *(void **)&v57[0];
        sub_20A5B899C();
        *(_QWORD *)&v59 = 0;
        *((_QWORD *)&v59 + 1) = 0xE000000000000000;
        *(_QWORD *)&v57[0] = v44;
        sub_20A5B8F9C();
        *(_QWORD *)&v59 = 0x202D09090ALL;
        *((_QWORD *)&v59 + 1) = 0xE500000000000000;
        sub_20A5B899C();
        swift_bridgeObjectRelease();
        sub_20A5B899C();

        swift_bridgeObjectRelease();
      }
      else
      {

      }
    }
    else
    {

      sub_20A44FDFC((uint64_t)&v59);
    }
    return v62;
  }
  v47 = v6;
  v46 = a1;
  v31 = v30 + 1;
  v32 = v29 + 56 * v30;
  v48 = v29;
  while (v31 - 2 < *(_QWORD *)(v29 + 16))
  {
    v33 = *(_QWORD *)(v32 - 16);
    v53 = *(_QWORD *)(v32 - 24);
    v34 = *(_QWORD *)(v32 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_20A5B899C();
    *(_QWORD *)&v59 = 0;
    *((_QWORD *)&v59 + 1) = 0xE000000000000000;
    v35 = v50;
    sub_20A5B845C();
    v36 = sub_20A5B8468();
    v38 = v37;
    (*(void (**)(char *, uint64_t))(v51 + 8))(v35, v52);
    swift_bridgeObjectRelease();
    *(_QWORD *)&v59 = v36;
    *((_QWORD *)&v59 + 1) = v38;
    sub_20A5B899C();
    swift_bridgeObjectRetain();
    sub_20A5B899C();
    swift_bridgeObjectRelease();
    sub_20A5B899C();
    *(_QWORD *)&v57[0] = v34;
    sub_20A5B9170();
    sub_20A5B899C();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v59 = 539822345;
    *((_QWORD *)&v59 + 1) = 0xE400000000000000;
    sub_20A5B899C();
    swift_bridgeObjectRelease();
    sub_20A5B899C();
    v39 = v53;
    swift_bridgeObjectRelease();
    if (!v39 && v33 == 0xE000000000000000 || (sub_20A5B91AC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      *(_QWORD *)&v59 = 9;
      *((_QWORD *)&v59 + 1) = 0xE100000000000000;
      swift_bridgeObjectRetain();
      sub_20A5B899C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      sub_20A5B899C();
    }
    result = swift_bridgeObjectRelease();
    v9 = v49;
    v29 = v48;
    --v31;
    v32 -= 56;
    if (v31 <= 1)
    {
      swift_bridgeObjectRelease();
      a1 = v46;
      v6 = v47;
      goto LABEL_54;
    }
  }
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
  return result;
}

uint64_t sub_20A47B2F4()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t result;
  uint64_t v12;
  __int128 v13;
  __int128 v14;

  v0 = (void *)sub_20A5B8414();
  v1 = objc_msgSend(v0, sel_domain);
  v2 = sub_20A5B8900();
  v4 = v3;

  if (v2 == 0x726F72724549444FLL && v4 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = sub_20A5B91AC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) == 0)
    {

      return 0;
    }
  }
  v7 = objc_msgSend(v0, sel_userInfo);
  v8 = sub_20A5B8888();

  if (!*(_QWORD *)(v8 + 16)
    || (v9 = sub_20A470B50(0x65706F725049444FLL, 0xED00007365697472, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x24BEE0B20], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_20A470C9C), (v10 & 1) == 0))
  {
    v13 = 0u;
    v14 = 0u;
    swift_bridgeObjectRelease();

    goto LABEL_15;
  }
  sub_20A44FD78(*(_QWORD *)(v8 + 56) + 32 * v9, (uint64_t)&v13);
  swift_bridgeObjectRelease();

  if (!*((_QWORD *)&v14 + 1))
  {
LABEL_15:
    sub_20A44FDFC((uint64_t)&v13);
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB47A8);
  if ((swift_dynamicCast() & 1) != 0)
  {
    result = v12;
    if (*(_QWORD *)(v12 + 16))
      return result;
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_20A47B4BC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_20A5B8FFC();
  __break(1u);
  return result;
}

uint64_t sub_20A47B5AC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 56 * a1 + 32;
    v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_20A5B8FFC();
  __break(1u);
  return result;
}

uint64_t sub_20A47B6A0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a5) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_20A5B8FFC();
  __break(1u);
  return result;
}

uint64_t sub_20A47B7B8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_20A5B8FFC();
  __break(1u);
  return result;
}

uint64_t sub_20A47B8A8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA018);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_20A5B8FFC();
  __break(1u);
  return result;
}

_QWORD *sub_20A47B9B0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = a1[3];
  v3 = a1[4];
  v8 = a1[21];
  v9 = a1[20];
  v6 = a1[23];
  v7 = a1[22];
  v5 = a1[24];
  swift_bridgeObjectRetain();
  sub_20A465800(v2, v3);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_20A465850(v9, v8, v7, v6, v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_20A47BAB8(uint64_t a1, uint64_t a2)
{
  assignWithTake for OTDRequest(a2, a1);
  return a2;
}

unint64_t sub_20A47BAF4()
{
  unint64_t result;

  result = qword_2545FA068;
  if (!qword_2545FA068)
  {
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for ODIErrorCode, &type metadata for ODIErrorCode);
    atomic_store(result, (unint64_t *)&qword_2545FA068);
  }
  return result;
}

uint64_t sub_20A47BB38(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_253EB50E8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_20A5B8FFC();
  __break(1u);
  return result;
}

char *sub_20A47BC40(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  result = (char *)sub_20A5B8FFC();
  __break(1u);
  return result;
}

_QWORD *sub_20A47BD24(_QWORD *a1, _QWORD *a2)
{
  assignWithTake for GeoCoderAddress(a2, a1);
  return a2;
}

uint64_t sub_20A47BD60(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_20A47BDA4(uint64_t a1)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 8);
  swift_bridgeObjectRetain();
  sub_20A47C178(v3);
  return a1;
}

uint64_t sub_20A47C178(uint64_t result)
{
  if (result != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_20A47C388(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA0B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

_QWORD *sub_20A47C3D0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = a1[5];
  v3 = a1[6];
  v8 = a1[23];
  v9 = a1[22];
  v6 = a1[25];
  v7 = a1[24];
  v5 = a1[26];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_20A465800(v2, v3);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_20A465850(v9, v8, v7, v6, v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_20A47C4E8(uint64_t *a1)
{
  uint64_t v1;
  int v2;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 - 1;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

uint64_t *sub_20A47C50C(uint64_t *a1)
{
  uint64_t v3;

  v3 = a1[128];
  sub_20A47CBD0(*a1);
  sub_20A47CBD0(v3);
  return a1;
}

uint64_t sub_20A47CBD0(uint64_t result)
{
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_20A47CDDC(uint64_t a1)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 8);
  swift_bridgeObjectRelease();
  sub_20A47CBD0(v3);
  return a1;
}

uint64_t sub_20A47D1B0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

#error "20A47D604: call analysis failed (funcsize=162)"

uint64_t sub_20A47D62C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t sub_20A47D688()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for DeviceStatus();
  v0 = swift_allocObject();
  result = sub_20A47D6C0();
  qword_25460FF70 = v0;
  return result;
}

uint64_t sub_20A47D6C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[2];

  v1 = v0;
  v13[0] = sub_20A5B8C9C();
  v2 = *(_QWORD *)(v13[0] - 8);
  MEMORY[0x24BDAC7A8](v13[0], v3);
  v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_20A5B8C90();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v6, v8);
  v9 = sub_20A5B8840();
  MEMORY[0x24BDAC7A8](v9, v10);
  swift_defaultActor_initialize();
  sub_20A459574(0, qword_253EB51B0);
  sub_20A5B8834();
  v13[1] = MEMORY[0x24BEE4AF8];
  sub_20A44D044((unint64_t *)&qword_253EB51A8, v7, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5150);
  sub_20A47DDA8((unint64_t *)&qword_253EB5158, &qword_253EB5150);
  sub_20A5B8DB0();
  (*(void (**)(char *, _QWORD, _QWORD))(v2 + 104))(v5, *MEMORY[0x24BEE5750], v13[0]);
  v11 = sub_20A5B8CC0();
  *(_QWORD *)(v1 + 112) = v11;
  *(_QWORD *)(v1 + 120) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEB4938]), sel_initWithQueue_, v11);
  return v1;
}

uint64_t sub_20A47D8BC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD aBlock[6];

  v6 = sub_20A5B881C();
  v26 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_20A5B8840();
  v24 = *(_QWORD *)(v10 - 8);
  v25 = v10;
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA0F0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  MEMORY[0x24BDAC7A8](v14, v17);
  v23[1] = *(_QWORD *)(a2 + 112);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))((char *)v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v14);
  v18 = (*(unsigned __int8 *)(v15 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v19 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v19 + v18, (char *)v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v14);
  *(_QWORD *)(v19 + ((v16 + v18 + 7) & 0xFFFFFFFFFFFFFFF8)) = a3;
  aBlock[4] = sub_20A47DD4C;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_20A461EFC;
  aBlock[3] = &block_descriptor_5;
  v20 = _Block_copy(aBlock);
  v21 = a3;
  sub_20A5B8834();
  v27 = MEMORY[0x24BEE4AF8];
  sub_20A44D044(&qword_253EB5088, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5120);
  sub_20A47DDA8((unint64_t *)&qword_253EB5128, &qword_253EB5120);
  sub_20A5B8DB0();
  MEMORY[0x20BD25D50](0, v13, v9, v20);
  _Block_release(v20);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v13, v25);
  return swift_release();
}

uint64_t sub_20A47DB28(int a1, id a2)
{
  id v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  unsigned __int8 v9;

  v2 = objc_msgSend(a2, sel_currentAudioAndVideoCalls);
  sub_20A459574(0, &qword_2545FA0F8);
  v3 = sub_20A5B8AA4();

  if (v3 >> 62)
    goto LABEL_12;
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; v4 = sub_20A5B8FCC())
  {
    v5 = 4;
    while (1)
    {
      v6 = (v3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x20BD25F48](v5 - 4, v3) : *(id *)(v3 + 8 * v5);
      v7 = v6;
      v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1))
        break;
      v9 = objc_msgSend(v6, sel_isSharingScreen);

      if ((v9 & 1) == 0)
      {
        ++v5;
        if (v8 != v4)
          continue;
      }
      goto LABEL_13;
    }
    __break(1u);
LABEL_12:
    swift_bridgeObjectRetain();
  }
LABEL_13:
  swift_bridgeObjectRelease_n();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA0F0);
  return sub_20A5B8B10();
}

uint64_t sub_20A47DC88()
{
  uint64_t v0;

  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for DeviceStatus()
{
  return objc_opt_self();
}

uint64_t sub_20A47DCD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA0F0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_20A47DD4C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545FA0F0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_20A47DB28((int)v0 + (int)v2, *(id *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t sub_20A47DDA8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x20BD26CEC](MEMORY[0x24BEE12C8], v4);
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for Base64AssessmentPayloadAdapter()
{
  return &type metadata for Base64AssessmentPayloadAdapter;
}

uint64_t sub_20A47DDF8()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;

  sub_20A5B8288();
  swift_allocObject();
  sub_20A5B827C();
  sub_20A47E088();
  v0 = sub_20A5B8270();
  v2 = v1;
  swift_release();
  v3 = sub_20A5B854C();
  sub_20A44BD90(v0, v2);
  return v3;
}

unint64_t sub_20A47E088()
{
  unint64_t result;

  result = qword_2545FA100;
  if (!qword_2545FA100)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C7D2C, &type metadata for ODIWrappedAssessment);
    atomic_store(result, (unint64_t *)&qword_2545FA100);
  }
  return result;
}

uint64_t sub_20A47E0CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA108);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t static RavioliFetcher.fetchRavioli(session:url:appBundleId:notificationId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v6[28] = a5;
  v6[29] = a6;
  v6[26] = a3;
  v6[27] = a4;
  v6[25] = a1;
  v7 = sub_20A5B8240();
  v6[30] = v7;
  v6[31] = *(_QWORD *)(v7 - 8);
  v6[32] = swift_task_alloc();
  v8 = sub_20A5B84D4();
  v6[33] = v8;
  v6[34] = *(_QWORD *)(v8 - 8);
  v6[35] = swift_task_alloc();
  v6[36] = type metadata accessor for RavioliRequestFactory();
  v6[37] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A47E1C8()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;
  uint64_t inited;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  char v10;

  v1 = objc_msgSend(*(id *)(v0 + 200), sel_configuration);
  v2 = objc_msgSend(v1, sel__appleIDContext);

  swift_unknownObjectRelease();
  if (!v2)
  {
    v10 = 14;
    CoreODILogger.fault(_:category:)(0xD000000000000047, 0x800000020A5DCDA0, &v10);
  }
  v3 = *(void **)(v0 + 200);
  type metadata accessor for RavioliFetcherImpl();
  inited = swift_initStackObject();
  *(_QWORD *)(v0 + 304) = inited;
  *(_QWORD *)(inited + 16) = v3;
  v5 = qword_253EB6258;
  v6 = v3;
  if (v5 != -1)
    swift_once();
  v7 = qword_253EB6240;
  *(_QWORD *)(v0 + 40) = type metadata accessor for DeviceInformation();
  *(_QWORD *)(v0 + 48) = &protocol witness table for DeviceInformation;
  *(_QWORD *)(v0 + 16) = v7;
  v8 = qword_253EB4EB8;
  swift_retain();
  if (v8 != -1)
    swift_once();
  *(_QWORD *)(v0 + 312) = qword_253EB4EB0;
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_20A47E32C()
{
  uint64_t v0;
  _QWORD *v2;

  if ((*(_BYTE *)(*(_QWORD *)(v0 + 312) + 168) & 1) != 0)
    return swift_task_switch();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 320) = v2;
  *v2 = v0;
  v2[1] = sub_20A47E3A0;
  return sub_20A4BBF60();
}

uint64_t sub_20A47E3A0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A47E3F4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[39];
  v0[10] = type metadata accessor for ODIDeviceInfo();
  v0[11] = &off_24C317BC8;
  v0[7] = v1;
  if (qword_253EB6270 != -1)
    swift_once();
  v2 = qword_253EB6248;
  v3 = type metadata accessor for ODIiCloudAccountManager();
  v0[41] = v3;
  v0[15] = v3;
  v0[16] = &protocol witness table for ODIiCloudAccountManager;
  v0[12] = v2;
  swift_retain();
  swift_bridgeObjectRetain();
  v4 = (_QWORD *)swift_task_alloc();
  v0[42] = v4;
  *v4 = v0;
  v4[1] = sub_20A47E4E4;
  return sub_20A47FE54(v0[35], 0, 0xD00000000000001ELL, 0x800000020A5DCD80);
}

uint64_t sub_20A47E4E4()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A47E538()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;

  v2 = *(int **)(v0 + 288);
  v1 = *(_QWORD *)(v0 + 296);
  v4 = *(_QWORD *)(v0 + 224);
  v3 = *(_QWORD *)(v0 + 232);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 272) + 32))(v1, *(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 264));
  sub_20A44CFD8((__int128 *)(v0 + 16), v1 + v2[5]);
  sub_20A44CFD8((__int128 *)(v0 + 96), v1 + v2[6]);
  sub_20A44CFD8((__int128 *)(v0 + 56), v1 + v2[7]);
  v5 = (_QWORD *)(v1 + v2[8]);
  *v5 = v4;
  v5[1] = v3;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 344) = v6;
  *v6 = v0;
  v6[1] = sub_20A47E608;
  return sub_20A515C4C(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 216));
}

uint64_t sub_20A47E608()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 352) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A47E66C()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = qword_253EB6248;
  v0[20] = v0[41];
  v0[21] = &off_24C31A8F0;
  v0[17] = v1;
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  v0[45] = v2;
  *v2 = v0;
  v2[1] = sub_20A47E6F4;
  return sub_20A47E90C(v0[32], 1, (uint64_t)(v0 + 17));
}

uint64_t sub_20A47E6F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(*v3 + 368) = v2;
  swift_task_dealloc();
  if (!v2)
  {
    *(_QWORD *)(v6 + 376) = a2;
    *(_QWORD *)(v6 + 384) = a1;
  }
  __swift_destroy_boxed_opaque_existential_1(v6 + 136);
  return swift_task_switch();
}

uint64_t sub_20A47E788()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 296);
  v3 = *(_QWORD *)(v0 + 248);
  v2 = *(_QWORD *)(v0 + 256);
  v4 = *(_QWORD *)(v0 + 240);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_20A47FA58(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 384), *(_QWORD *)(v0 + 376));
}

uint64_t sub_20A47E80C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 296);
  swift_release();
  sub_20A47FA58(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A47E870()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 296);
  v3 = *(_QWORD *)(v0 + 248);
  v2 = *(_QWORD *)(v0 + 256);
  v4 = *(_QWORD *)(v0 + 240);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_20A47FA58(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for RavioliFetcherImpl()
{
  return objc_opt_self();
}

uint64_t sub_20A47E90C(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v4 + 80) = a3;
  *(_QWORD *)(v4 + 88) = v3;
  *(_BYTE *)(v4 + 232) = a2;
  *(_QWORD *)(v4 + 72) = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB4980);
  *(_QWORD *)(v4 + 96) = swift_task_alloc();
  v5 = sub_20A5B8240();
  *(_QWORD *)(v4 + 104) = v5;
  *(_QWORD *)(v4 + 112) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v4 + 120) = swift_task_alloc();
  *(_QWORD *)(v4 + 128) = swift_task_alloc();
  *(_QWORD *)(v4 + 136) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A47E9B4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  _BOOL4 v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v43;
  uint64_t v44;
  os_log_type_t v45;
  void (*v46)(uint64_t, uint64_t, uint64_t);
  void (*v47)(uint64_t, uint64_t);
  uint64_t v48;

  if (qword_253EB5048 != -1)
    swift_once();
  v1 = v0[9];
  v2 = v0[17];
  v3 = v0[13];
  v4 = v0[14];
  v5 = sub_20A5B8804();
  v0[18] = __swift_project_value_buffer(v5, (uint64_t)qword_253EBC888);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v6(v2, v1, v3);
  v7 = sub_20A5B87EC();
  v8 = sub_20A5B8C48();
  v46 = v6;
  if (os_log_type_enabled(v7, v8))
  {
    v45 = v8;
    v9 = v0[12];
    v10 = (uint8_t *)swift_slowAlloc();
    v43 = swift_slowAlloc();
    v48 = v43;
    *(_DWORD *)v10 = 136315138;
    sub_20A5B821C();
    v11 = sub_20A5B84D4();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11);
    v14 = v0[12];
    if (v13 == 1)
    {
      sub_20A47FAE8(v0[12]);
      v15 = 0xE300000000000000;
      v16 = 7104878;
    }
    else
    {
      v16 = sub_20A5B8444();
      v15 = v17;
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v14, v11);
    }
    v18 = v0[17];
    v20 = v0[13];
    v19 = v0[14];
    v0[8] = sub_20A503EE0(v16, v15, &v48);
    sub_20A5B8D50();
    swift_bridgeObjectRelease();
    v47 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
    v47(v18, v20);
    _os_log_impl(&dword_20A443000, v7, v45, "Requesting ravioli: %s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x20BD26DB8](v43, -1, -1);
    MEMORY[0x20BD26DB8](v10, -1, -1);

    v6 = v46;
  }
  else
  {
    v47 = *(void (**)(uint64_t, uint64_t))(v0[14] + 8);
    v47(v0[17], v0[13]);

  }
  v6(v0[16], v0[9], v0[13]);
  v21 = sub_20A5B87EC();
  v22 = sub_20A5B8C48();
  v23 = os_log_type_enabled(v21, v22);
  v24 = v0[16];
  if (v23)
  {
    v44 = v0[13];
    v25 = (uint8_t *)swift_slowAlloc();
    v26 = swift_slowAlloc();
    v48 = v26;
    *(_DWORD *)v25 = 136315138;
    v27 = sub_20A5B81E0();
    v0[7] = sub_20A503EE0(v27, v28, &v48);
    sub_20A5B8D50();
    swift_bridgeObjectRelease();
    v29 = v24;
    v30 = v47;
    v47(v29, v44);
    _os_log_impl(&dword_20A443000, v21, v22, "Request: %s", v25, 0xCu);
    swift_arrayDestroy();
    v31 = v26;
    v6 = v46;
    MEMORY[0x20BD26DB8](v31, -1, -1);
    MEMORY[0x20BD26DB8](v25, -1, -1);
  }
  else
  {
    v30 = v47;
    v47(v0[16], v0[13]);
  }

  v6(v0[15], v0[9], v0[13]);
  v32 = sub_20A5B87EC();
  v33 = sub_20A5B8C48();
  if (os_log_type_enabled(v32, v33))
  {
    v34 = (uint8_t *)swift_slowAlloc();
    v35 = swift_slowAlloc();
    v48 = v35;
    *(_DWORD *)v34 = 136315138;
    if (sub_20A5B81F8())
    {
      v36 = sub_20A5B88A0();
      v38 = v37;
      swift_bridgeObjectRelease();
    }
    else
    {
      v38 = 0xEA00000000007372;
      v36 = 0x6564616568206F4ELL;
    }
    v39 = v0[15];
    v40 = v0[13];
    v0[6] = sub_20A503EE0(v36, v38, &v48);
    sub_20A5B8D50();
    swift_bridgeObjectRelease();
    v47(v39, v40);
    _os_log_impl(&dword_20A443000, v32, v33, "Request: %s", v34, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x20BD26DB8](v35, -1, -1);
    MEMORY[0x20BD26DB8](v34, -1, -1);
  }
  else
  {
    v30(v0[15], v0[13]);
  }

  v41 = (_QWORD *)swift_task_alloc();
  v0[19] = v41;
  *v41 = v0;
  v41[1] = sub_20A47EF00;
  return sub_20A5B8C30();
}

uint64_t sub_20A47EF00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;

  v5 = *v4;
  *(_QWORD *)(v5 + 160) = a1;
  *(_QWORD *)(v5 + 168) = a2;
  *(_QWORD *)(v5 + 176) = a3;
  swift_task_dealloc();
  if (!v3)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_20A47EFAC()
{
  uint64_t v0;
  id v1;
  NSObject *v2;
  os_log_type_t v3;
  void *v4;
  uint8_t *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  char v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;

  v1 = *(id *)(v0 + 176);
  v2 = sub_20A5B87EC();
  v3 = sub_20A5B8C48();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = *(void **)(v0 + 176);
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v34 = v6;
    *(_DWORD *)v5 = 136315138;
    v7 = objc_msgSend(v4, sel_debugDescription);
    v8 = sub_20A5B8900();
    v10 = v9;

    *(_QWORD *)(v0 + 40) = sub_20A503EE0(v8, v10, &v34);
    sub_20A5B8D50();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_20A443000, v2, v3, "Response: %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x20BD26DB8](v6, -1, -1);
    MEMORY[0x20BD26DB8](v5, -1, -1);

  }
  else
  {
    v11 = *(void **)(v0 + 176);

  }
  objc_opt_self();
  if (swift_dynamicCastObjCClass())
  {
    objc_opt_self();
    v12 = swift_dynamicCastObjCClass();
    v13 = *(void **)(v0 + 176);
    if (v12)
    {
      v14 = (void *)v12;
      v15 = v13;
      sub_20A48B058((uint64_t)objc_msgSend(v14, sel_statusCode), (uint64_t)&v34);

      v16 = v34;
      if (v35 == 1)
        __asm { BR              X9 }
      v22 = 0;
    }
    else
    {
      v21 = v13;
      v16 = 1;
      v22 = 1;
    }
    v23 = sub_20A5B87EC();
    v24 = sub_20A5B8C54();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      v32 = v16;
      v26 = swift_slowAlloc();
      *(_DWORD *)v25 = 136315138;
      v33 = v26;
      v34 = v32;
      v35 = v22;
      v27 = HTTPStatusCode.description.getter();
      *(_QWORD *)(v0 + 16) = sub_20A503EE0(v27, v28, &v33);
      sub_20A5B8D50();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_20A443000, v23, v24, "FetchRavioli Failed - Response: %s", v25, 0xCu);
      swift_arrayDestroy();
      v29 = v26;
      v16 = v32;
      MEMORY[0x20BD26DB8](v29, -1, -1);
      MEMORY[0x20BD26DB8](v25, -1, -1);
    }

    v17 = *(_QWORD *)(v0 + 168);
    v18 = *(void **)(v0 + 176);
    v19 = *(_QWORD *)(v0 + 160);
    sub_20A47FAA4();
    swift_allocError();
    *(_QWORD *)v30 = v16;
    *(_BYTE *)(v30 + 8) = v22;
    *(_BYTE *)(v30 + 9) = 0;
    swift_willThrow();

  }
  else
  {
    v17 = *(_QWORD *)(v0 + 168);
    v18 = *(void **)(v0 + 176);
    v19 = *(_QWORD *)(v0 + 160);
    sub_20A47FAA4();
    swift_allocError();
    *(_QWORD *)v20 = 5;
    *(_WORD *)(v20 + 8) = 256;
    swift_willThrow();
  }

  sub_20A44BD90(v19, v17);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_20A47F474()
{
  NSObject *v0;
  os_log_type_t v1;
  uint8_t *v2;

  v0 = sub_20A5B87EC();
  v1 = sub_20A5B8C48();
  if (os_log_type_enabled(v0, v1))
  {
    v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v2 = 0;
    _os_log_impl(&dword_20A443000, v0, v1, "Requesting ravioli - data received", v2, 2u);
    JUMPOUT(0x20A47F4D8);
  }
  JUMPOUT(0x20A47F5C4);
}

uint64_t sub_20A47F4F0()
{
  uint64_t v0;
  int v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  _QWORD *v5;
  _QWORD *v6;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14[2];
  char v15;

  v1 = *(unsigned __int8 *)(v0 + 232);
  v2 = sub_20A5B87EC();
  if (v1 != 1)
  {
    v8 = sub_20A5B8C54();
    if (os_log_type_enabled(v2, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      v10 = swift_slowAlloc();
      *(_DWORD *)v9 = 136315138;
      v14[0] = v10;
      v14[1] = 5;
      v15 = 1;
      v11 = HTTPStatusCode.description.getter();
      *(_QWORD *)(v0 + 32) = sub_20A503EE0(v11, v12, v14);
      sub_20A5B8D50();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_20A443000, v2, v8, "Authorisation error not retrying or have already retried: %s", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x20BD26DB8](v10, -1, -1);
      MEMORY[0x20BD26DB8](v9, -1, -1);
    }

    sub_20A47FAA4();
    swift_allocError();
    *(_QWORD *)v13 = 5;
    *(_WORD *)(v13 + 8) = 1;
    JUMPOUT(0x20A47F40CLL);
  }
  v3 = sub_20A5B8C48();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_20A443000, v2, v3, "Requesting ravioli - Authorisation error will renew and retry only one retry will be attempted", v4, 2u);
    MEMORY[0x20BD26DB8](v4, -1, -1);
  }
  v5 = *(_QWORD **)(v0 + 80);

  __swift_project_boxed_opaque_existential_1(v5, v5[3]);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 184) = v6;
  *v6 = v0;
  v6[1] = sub_20A47F7A4;
  return sub_20A45ED88();
}

uint64_t sub_20A47F7A4()
{
  uint64_t v0;
  uint64_t **v1;
  uint64_t *v2;
  _QWORD *v4;

  v2 = *v1;
  v2[24] = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  v4 = (_QWORD *)swift_task_alloc();
  v2[25] = (uint64_t)v4;
  *v4 = v2;
  v4[1] = sub_20A47F83C;
  return sub_20A47E90C(v2[9], 0, v2[10]);
}

uint64_t sub_20A47F83C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(*v3 + 208) = v2;
  swift_task_dealloc();
  if (!v2)
  {
    *(_QWORD *)(v6 + 216) = a2;
    *(_QWORD *)(v6 + 224) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_20A47F8B4()
{
  uint64_t v0;
  unint64_t v1;
  void *v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(void **)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 160);

  sub_20A44BD90(v3, v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A47F92C()
{
  uint64_t v0;
  unint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(void **)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 160);

  sub_20A44BD90(v3, v1);
  v4 = *(_QWORD *)(v0 + 216);
  v5 = *(_QWORD *)(v0 + 224);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v5, v4);
}

uint64_t sub_20A47F9B8()
{
  uint64_t v0;
  unint64_t v1;
  void *v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(void **)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 160);

  sub_20A44BD90(v3, v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A47FA34()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t sub_20A47FA58(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for RavioliRequestFactory();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for RavioliFetcher()
{
  return &type metadata for RavioliFetcher;
}

unint64_t sub_20A47FAA4()
{
  unint64_t result;

  result = qword_2545FA120;
  if (!qword_2545FA120)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5BF9B8, &type metadata for RavioliFetcherImpl.FetchError);
    atomic_store(result, &qword_2545FA120);
  }
  return result;
}

uint64_t sub_20A47FAE8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB4980);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t __swift_memcpy10_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for RavioliFetcherImpl.FetchError(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 10))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for RavioliFetcherImpl.FetchError(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_WORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 10) = v3;
  return result;
}

uint64_t sub_20A47FB8C(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_20A47FBA8(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    *(_BYTE *)(result + 9) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for RavioliFetcherImpl.FetchError()
{
  return &type metadata for RavioliFetcherImpl.FetchError;
}

uint64_t sub_20A47FBE0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;

  v2 = *a2;
  v3 = *((_BYTE *)a2 + 8);
  if (*(_BYTE *)(a1 + 9) == 1)
    __asm { BR              X13 }
  if ((*((_BYTE *)a2 + 9) & 1) != 0)
  {
    v5 = 0;
  }
  else
  {
    v4 = *(_BYTE *)(a1 + 8);
    v9 = *(_QWORD *)a1;
    v10 = v4 & 1;
    v7 = v2;
    v8 = v3 & 1;
    v5 = _s17CoreODIEssentials14HTTPStatusCodeO2eeoiySbAC_ACtFZ_0(&v9, (uint64_t)&v7);
  }
  return v5 & 1;
}

void sub_20A47FCA4()
{
  unint64_t v0;
  int v1;

  if (v1)
  {
    if (v0 > 4)
      JUMPOUT(0x20A47FCB8);
  }
  JUMPOUT(0x20A47FC90);
}

uint64_t sub_20A47FCC0(double a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  _QWORD *v16;
  double v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;

  v2 = sub_20A5B8864();
  v3 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x24BDAC7A8](v2, v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v8);
  v10 = (char *)&v20 - v9;
  v11 = sub_20A5B8810();
  v12 = *(_QWORD *)(v11 - 8);
  result = MEMORY[0x24BDAC7A8](v11, v13);
  v16 = (uint64_t *)((char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = a1 * 1000.0;
  if ((~COERCE__INT64(a1 * 1000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v17 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v17 < 9.22337204e18)
  {
    *v16 = (uint64_t)v17;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v12 + 104))(v16, *MEMORY[0x24BEE5410], v11);
    sub_20A5B8858();
    MEMORY[0x20BD2590C](v7, v16);
    v18 = *(void (**)(char *, uint64_t))(v3 + 8);
    v18(v7, v2);
    v19 = sub_20A5B8C78() & 1;
    v18(v10, v2);
    (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v16, v11);
    return v19;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_20A47FE54(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 536) = a4;
  *(_QWORD *)(v4 + 528) = a3;
  *(_BYTE *)(v4 + 257) = a2;
  *(_QWORD *)(v4 + 520) = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB4980);
  *(_QWORD *)(v4 + 544) = swift_task_alloc();
  *(_QWORD *)(v4 + 552) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A47FECC()
{
  uint64_t v0;
  unsigned __int8 v1;
  id v2;
  void *v3;
  id v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  unsigned __int8 v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  _QWORD *v20;
  uint64_t v21[2];

  v1 = *(_BYTE *)(v0 + 257);
  v2 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  sub_20A5B8E94();
  swift_bridgeObjectRelease();
  v21[0] = 0x4F49444F65726F63;
  v21[1] = 0xEF65646972726576;
  sub_20A461B54(v1);
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  if (qword_253EB4740 != -1)
    swift_once();
  if (byte_253EBC790 == 1
    && (v3 = (void *)sub_20A5B88F4(),
        v4 = objc_msgSend(v2, sel_stringForKey_, v3),
        v3,
        v4))
  {
    sub_20A5B8900();

    swift_bridgeObjectRelease();
    v5 = (uint64_t *)(v0 + 552);
    v6 = *(_QWORD *)(v0 + 552);
    sub_20A5B84A4();
    swift_bridgeObjectRelease();
    v7 = sub_20A5B84D4();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    if (v9(v6, 1, v7) != 1)
    {
LABEL_12:
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v8 + 32))(*(_QWORD *)(v0 + 520), *v5, v7);
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    sub_20A47FAE8(*v5);
    if (qword_253EB5048 != -1)
      swift_once();
    v10 = sub_20A5B8804();
    __swift_project_value_buffer(v10, (uint64_t)qword_253EBC888);
    v11 = sub_20A5B87EC();
    v12 = sub_20A5B8C54();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = *(_BYTE *)(v0 + 257);
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v21[0] = v15;
      *(_DWORD *)v14 = 136315138;
      v16 = sub_20A461B54(v13);
      *(_QWORD *)(v0 + 512) = sub_20A503EE0(v16, v17, v21);
      sub_20A5B8D50();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_20A443000, v11, v12, "No URL override or config found for %s URL", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x20BD26DB8](v15, -1, -1);
      MEMORY[0x20BD26DB8](v14, -1, -1);
    }

    v18 = *(_QWORD *)(v0 + 544);
    sub_20A5B84A4();
    result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v9)(v18, 1, v7);
    if ((_DWORD)result != 1)
    {
      v5 = (uint64_t *)(v0 + 544);
      goto LABEL_12;
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();

    if (qword_253EB4A90 != -1)
      swift_once();
    v20 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 560) = v20;
    *v20 = v0;
    v20[1] = sub_20A4802C0;
    return sub_20A4E0CC4(v0 + 264);
  }
  return result;
}

uint64_t sub_20A4802C0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A480314()
{
  uint64_t v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  unsigned __int8 v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t result;
  _OWORD v39[15];
  char v40;

  v2 = *(_OWORD *)(v0 + 456);
  v1 = *(_OWORD *)(v0 + 472);
  v3 = *(_OWORD *)(v0 + 440);
  *(_OWORD *)(v0 + 208) = v2;
  *(_OWORD *)(v0 + 224) = v1;
  v4 = *(_OWORD *)(v0 + 472);
  *(_OWORD *)(v0 + 240) = *(_OWORD *)(v0 + 488);
  v6 = *(_OWORD *)(v0 + 392);
  v5 = *(_OWORD *)(v0 + 408);
  v7 = *(_OWORD *)(v0 + 376);
  *(_OWORD *)(v0 + 144) = v6;
  *(_OWORD *)(v0 + 160) = v5;
  v8 = *(_OWORD *)(v0 + 408);
  v10 = *(_OWORD *)(v0 + 424);
  v9 = *(_OWORD *)(v0 + 440);
  *(_OWORD *)(v0 + 176) = v10;
  *(_OWORD *)(v0 + 192) = v9;
  v12 = *(_OWORD *)(v0 + 328);
  v11 = *(_OWORD *)(v0 + 344);
  v13 = *(_OWORD *)(v0 + 312);
  *(_OWORD *)(v0 + 80) = v12;
  *(_OWORD *)(v0 + 96) = v11;
  v14 = *(_OWORD *)(v0 + 344);
  v16 = *(_OWORD *)(v0 + 360);
  v15 = *(_OWORD *)(v0 + 376);
  *(_OWORD *)(v0 + 112) = v16;
  *(_OWORD *)(v0 + 128) = v15;
  v17 = *(_OWORD *)(v0 + 280);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 264);
  *(_OWORD *)(v0 + 32) = v17;
  v18 = *(_OWORD *)(v0 + 312);
  v20 = *(_OWORD *)(v0 + 264);
  v19 = *(_OWORD *)(v0 + 280);
  v21 = *(_OWORD *)(v0 + 296);
  *(_OWORD *)(v0 + 48) = v21;
  *(_OWORD *)(v0 + 64) = v18;
  v39[12] = v2;
  v39[13] = v4;
  v39[14] = *(_OWORD *)(v0 + 488);
  v39[8] = v6;
  v39[9] = v8;
  v39[10] = v10;
  v39[11] = v3;
  v39[4] = v12;
  v39[5] = v14;
  v39[6] = v16;
  v39[7] = v7;
  v39[0] = v20;
  v39[1] = v19;
  *(_BYTE *)(v0 + 256) = *(_BYTE *)(v0 + 504);
  v22 = *(_BYTE *)(v0 + 257);
  v40 = *(_BYTE *)(v0 + 504);
  v39[2] = v21;
  v39[3] = v13;
  sub_20A4E0A64(v22);
  v24 = v23;
  sub_20A480614((_QWORD *)(v0 + 16));
  if (v24)
  {
    v25 = (uint64_t *)(v0 + 552);
    v26 = *(_QWORD *)(v0 + 552);
    sub_20A5B84A4();
    swift_bridgeObjectRelease();
    v27 = sub_20A5B84D4();
    v28 = *(_QWORD *)(v27 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27) != 1)
    {
LABEL_10:
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v28 + 32))(*(_QWORD *)(v0 + 520), *v25, v27);
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    sub_20A47FAE8(*v25);
  }
  if (qword_253EB5048 != -1)
    swift_once();
  v29 = sub_20A5B8804();
  __swift_project_value_buffer(v29, (uint64_t)qword_253EBC888);
  v30 = sub_20A5B87EC();
  v31 = sub_20A5B8C54();
  if (os_log_type_enabled(v30, v31))
  {
    v32 = *(_BYTE *)(v0 + 257);
    v33 = (uint8_t *)swift_slowAlloc();
    v34 = swift_slowAlloc();
    *(_QWORD *)&v39[0] = v34;
    *(_DWORD *)v33 = 136315138;
    v35 = sub_20A461B54(v32);
    *(_QWORD *)(v0 + 512) = sub_20A503EE0(v35, v36, (uint64_t *)v39);
    sub_20A5B8D50();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_20A443000, v30, v31, "No URL override or config found for %s URL", v33, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x20BD26DB8](v34, -1, -1);
    MEMORY[0x20BD26DB8](v33, -1, -1);
  }

  v37 = *(_QWORD *)(v0 + 544);
  sub_20A5B84A4();
  v27 = sub_20A5B84D4();
  v28 = *(_QWORD *)(v27 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v37, 1, v27);
  if ((_DWORD)result != 1)
  {
    v25 = (uint64_t *)(v0 + 544);
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_20A480614(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  v6 = a1[3];
  v7 = a1[2];
  v3 = a1[24];
  v2 = a1[25];
  v4 = a1[26];
  swift_bridgeObjectRelease();
  sub_20A480730(v7, v6);
  sub_20A4807F0(v3, v2, v4);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_20A480730(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_20A4807F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3 != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_20A480804(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v8;
  uint64_t v9;
  char v10;
  char v11;
  _QWORD *v12;
  __int128 v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);

  v8 = *a2;
  v14 = *(_OWORD *)(a2 + 8);
  v9 = *((_QWORD *)a2 + 3);
  v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 16) + *(_QWORD *)(a4 + 16));
  v10 = a2[32];
  v11 = a2[33];
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 56) = v12;
  *(_BYTE *)(v4 + 16) = v8;
  *(_OWORD *)(v4 + 24) = v14;
  *(_QWORD *)(v4 + 40) = v9;
  *(_BYTE *)(v4 + 48) = v10;
  *(_BYTE *)(v4 + 49) = v11;
  *v12 = v4;
  v12[1] = sub_20A4808C4;
  return v15(a1, v4 + 16, a3, a4);
}

uint64_t sub_20A4808C4()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_20A48090C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_20A480914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 32) + *(_QWORD *)(a4 + 32));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_20A4597C0;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_20A480998(_BYTE *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 104) = v1;
  *(_BYTE *)(v2 + 98) = *a1;
  return swift_task_switch();
}

uint64_t sub_20A4809B8()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_BYTE *)(v0 + 98);
  v2 = swift_allocObject();
  *(_QWORD *)(v0 + 112) = v2;
  swift_weakInit();
  *(_BYTE *)(v0 + 97) = v1;
  swift_retain_n();
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v3;
  *v3 = v0;
  v3[1] = sub_20A480A6C;
  return DIPClientGUIDFactory.init(primaryDSIDBehavior:stsFetcher:)(v0 + 16, (_BYTE *)(v0 + 97), (uint64_t)&unk_2545FA200, v2);
}

uint64_t sub_20A480A6C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release_n();
  return swift_task_switch();
}

uint64_t sub_20A480AE0()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  __int128 v8;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_OWORD *)(v0 + 48);
  v3 = *(_OWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 88);
  v6 = *(_BYTE *)(v0 + 96);
  v7 = *(_QWORD *)(v1 + 240);
  v8 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v1 + 240) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v1 + 256) = v8;
  *(_OWORD *)(v1 + 272) = v2;
  *(_OWORD *)(v1 + 288) = v3;
  *(_QWORD *)(v1 + 304) = v4;
  *(_QWORD *)(v1 + 312) = v5;
  *(_BYTE *)(v1 + 320) = v6;
  sub_20A48A9EC(v7);
  sub_20A480D50();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A480B58()
{
  return swift_task_switch();
}

uint64_t sub_20A480B6C()
{
  uint64_t v0;

  swift_release_n();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A480BA4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 64) = a1;
  return swift_task_switch();
}

uint64_t sub_20A480BBC()
{
  uint64_t v0;
  uint64_t Strong;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    *(_QWORD *)(v0 + 72) = *(_QWORD *)(Strong + 176);
    swift_unknownObjectRetain();
    swift_release();
    return swift_task_switch();
  }
  else
  {
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(_QWORD, unint64_t))(v0 + 8))(0, 0xE000000000000000);
  }
}

uint64_t sub_20A480C54()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v1;
  *v1 = v0;
  v1[1] = sub_20A480CA0;
  return sub_20A4A22F0();
}

uint64_t sub_20A480CA0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  v3 = (_QWORD *)*v2;
  v3[5] = v2;
  v3[6] = a1;
  v3[7] = a2;
  v3[11] = a2;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  return swift_task_switch();
}

uint64_t sub_20A480D04()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 88);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 48);
  }
  else
  {
    swift_bridgeObjectRelease();
    v2 = 0;
    v1 = 0xE000000000000000;
  }
  return (*(uint64_t (**)(uint64_t, unint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_20A480D50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[40];
  _QWORD v18[6];

  v1 = *(_QWORD *)(v0 + 240);
  v2 = *(_QWORD *)(v0 + 248);
  v3 = *(_QWORD *)(v0 + 256);
  v4 = *(_QWORD *)(v0 + 264);
  v6 = *(_QWORD *)(v0 + 272);
  v5 = *(_QWORD *)(v0 + 280);
  v16 = *(_QWORD *)(v0 + 160);
  v7 = *(_QWORD *)(v0 + 288);
  v8 = *(_QWORD *)(v0 + 296);
  v15 = *(_QWORD *)(v0 + 152);
  v13 = *(_QWORD *)(v0 + 312);
  v14 = *(_QWORD *)(v0 + 304);
  v12 = *(_BYTE *)(v0 + 320);
  v9 = type metadata accessor for ODNAssessmentGUIDManager();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v15;
  *(_QWORD *)(v10 + 24) = v16;
  *(_QWORD *)(v10 + 32) = v1;
  *(_QWORD *)(v10 + 40) = v2;
  *(_QWORD *)(v10 + 48) = v3;
  *(_QWORD *)(v10 + 56) = v4;
  *(_QWORD *)(v10 + 64) = v6;
  *(_QWORD *)(v10 + 72) = v5;
  *(_QWORD *)(v10 + 80) = v7;
  *(_QWORD *)(v10 + 88) = v8;
  *(_QWORD *)(v10 + 96) = v14;
  *(_QWORD *)(v10 + 104) = v13;
  *(_BYTE *)(v10 + 112) = v12;
  v18[3] = v9;
  v18[4] = &off_24C314D40;
  v18[0] = v10;
  sub_20A459C88((uint64_t)v18, (uint64_t)v17, &qword_2545FA1B8);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_20A48AA48(v1);
  sub_20A48AAA4((uint64_t)v17, v0 + 328);
  return swift_endAccess();
}

uint64_t sub_20A480E8C(uint64_t result, char *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (result == 5)
  {
    v4 = *(_QWORD *)(v2 + 240);
    *(_OWORD *)(v2 + 240) = 0u;
    *(_OWORD *)(v2 + 256) = 0u;
    *(_OWORD *)(v2 + 272) = 0u;
    *(_OWORD *)(v2 + 288) = 0u;
    *(_OWORD *)(v2 + 304) = 0u;
    *(_BYTE *)(v2 + 320) = 0;
    sub_20A48A9EC(v4);
    sub_20A480D50();
    v5 = *(_QWORD *)(v2 + 160);
    v12 = *(_QWORD *)(v2 + 152);
    v6 = v12;
    v13 = v5;
    LOBYTE(v10) = 14;
    swift_bridgeObjectRetain();
    CoreODILogger.info(_:category:)(0xD000000000000072, 0x800000020A5DD6C0, &v10);
    swift_bridgeObjectRelease();
    LOBYTE(v12) = -118;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000023, 0x800000020A5DD740, a2, (unsigned __int8 *)&v12, 0, 0, 0xD000000000000087, 0x800000020A5DCEE0, 0xD00000000000002ALL, 0x800000020A5DD770, 95);
    v8 = v7;
    v12 = v6;
    v13 = v5;
    v10 = 0x203A726F727245;
    v11 = 0xE700000000000000;
    swift_getErrorValue();
    swift_bridgeObjectRetain();
    sub_20A5B923C();
    sub_20A5B899C();
    swift_bridgeObjectRelease();
    v9 = v10;
    LOBYTE(v10) = 0;
    CoreODILogger.error(_:category:)(v9, v11, &v10);
    swift_bridgeObjectRelease();

    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_20A481044(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[19] = a3;
  v4[20] = v3;
  v4[18] = a2;
  return swift_task_switch();
}

uint64_t sub_20A481060()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 168) = v1;
  *v1 = v0;
  v1[1] = sub_20A4810B8;
  return sub_20A4A2118(v0 + 16);
}

uint64_t sub_20A4810B8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 176) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A48111C()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t);

  v1 = *(int **)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(v0 + 192) = v2;
  v4 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 72);
  *(_QWORD *)(v0 + 208) = v4;
  v6 = *(_OWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 184) = v6;
  v7 = *(_OWORD *)(v0 + 48);
  *(_QWORD *)(v0 + 200) = v7;
  *(_OWORD *)(v0 + 80) = v6;
  *(_QWORD *)(v0 + 96) = v2;
  *(_QWORD *)(v0 + 104) = v3;
  *(_OWORD *)(v0 + 112) = v7;
  *(_QWORD *)(v0 + 128) = v4;
  *(_QWORD *)(v0 + 136) = v5;
  v10 = (uint64_t (*)(uint64_t))((char *)v1 + *v1);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 216) = v8;
  *v8 = v0;
  v8[1] = sub_20A4811B0;
  return v10(v0 + 80);
}

uint64_t sub_20A4811B0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A481208()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A48125C()
{
  uint64_t v0;
  void *v1;
  char v3;

  v1 = *(void **)(v0 + 176);
  v3 = 14;
  swift_bridgeObjectRetain();
  CoreODILogger.info(_:category:)(0xD00000000000002ALL, 0x800000020A5DD660, &v3);
  swift_bridgeObjectRelease();
  v3 = 1;
  swift_bridgeObjectRetain();
  CoreODILogger.error(_:category:)(0xD000000000000026, 0x800000020A5DD690, &v3);

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A48132C()
{
  uint64_t v0;
  _QWORD __dst[75];

  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 192);

  sub_20A48A9EC(*(_QWORD *)(v0 + 240));
  sub_20A44CE2C(v0 + 328, &qword_2545FA1B8);
  memcpy(__dst, (const void *)(v0 + 368), 0x252uLL);
  sub_20A48A4AC(__dst);
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_20A4813D4()
{
  sub_20A48132C();
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for ODNAssessmentsManager()
{
  return objc_opt_self();
}

unint64_t sub_20A48140C(uint64_t a1)
{
  unint64_t result;

  result = sub_20A481430();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_20A481430()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2545FA150;
  if (!qword_2545FA150)
  {
    v1 = type metadata accessor for ODNAssessmentsManager();
    result = MEMORY[0x20BD26CEC](&unk_20A5BFAD4, v1);
    atomic_store(result, &qword_2545FA150);
  }
  return result;
}

uint64_t sub_20A481474(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[290] = v2;
  v3[289] = a2;
  v3[288] = a1;
  type metadata accessor for ODNAssessmentsFeedbackManager.ODNResultsPayload(0);
  v3[291] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA1D8);
  v3[292] = swift_task_alloc();
  v4 = type metadata accessor for PregeneratedAssessment();
  v3[293] = v4;
  v3[294] = *(_QWORD *)(v4 - 8);
  v3[295] = swift_task_alloc();
  v3[296] = swift_task_alloc();
  v3[297] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A48153C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v1 = (_QWORD *)v0[290];
  v0[298] = v1[46];
  v0[299] = v1[47];
  v2 = v1[48];
  v0[300] = v2;
  v3 = v1[49];
  v0[301] = v3;
  v4 = (_QWORD *)(v1[29] + OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_conversationID);
  v0[302] = *v4;
  v0[303] = v4[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = (_QWORD *)swift_task_alloc();
  v0[304] = v5;
  *v5 = v0;
  v5[1] = sub_20A481608;
  v5[66] = v0[290];
  v5[65] = v3;
  v5[64] = v2;
  return swift_task_switch();
}

uint64_t sub_20A481608(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 1889) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A481668()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v1 = *(_QWORD *)(v0 + 2320);
  if (*(_BYTE *)(v0 + 1889) == 1)
  {
    v2 = *(_QWORD *)(v0 + 2312);
    *(_QWORD *)(v0 + 2440) = *(_QWORD *)(v1 + 152);
    *(_QWORD *)(v0 + 2448) = *(_QWORD *)(v1 + 160);
    v8 = 8;
    swift_bridgeObjectRetain();
    CoreODILogger.debug(_:category:)(0xD000000000000022, 0x800000020A5DD3E0, &v8);
    swift_bridgeObjectRelease();
    *(_BYTE *)(v1 + 928) = 0;
    *(_QWORD *)(v0 + 2168) = &type metadata for AssessmentPregenerator;
    *(_QWORD *)(v0 + 2176) = &off_24C31A0A0;
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 2144), (uint64_t)&type metadata for AssessmentPregenerator);
    v3 = *(_QWORD *)(v2 + 8);
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 2456) = v4;
    *v4 = v0;
    v4[1] = sub_20A481848;
    return sub_20A4E7F74(*(_QWORD *)(v0 + 2336), v3, *(_QWORD *)(v0 + 2400), *(_QWORD *)(v0 + 2408));
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 2304);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v8 = 14;
    swift_bridgeObjectRetain();
    CoreODILogger.debug(_:category:)(0xD000000000000011, 0x800000020A5DD3C0, &v8);
    swift_bridgeObjectRelease();
    v7 = type metadata accessor for ODNAssessmentResult();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_20A481848()
{
  void *v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 2464) = v0;
  swift_task_dealloc();
  if (v0)

  return swift_task_switch();
}

uint64_t sub_20A4818B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  void *v38;
  void *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  void *v56;
  void *v57;
  unint64_t v58;
  _QWORD *v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _OWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;

  v1 = *(_QWORD *)(v0 + 2376);
  v2 = *(_QWORD *)(v0 + 2336);
  v3 = *(_QWORD *)(v0 + 2320);
  (*(void (**)(uint64_t, _QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 2352) + 56))(v2, 0, 1, *(_QWORD *)(v0 + 2344));
  sub_20A48A7CC(v2, v1);
  swift_beginAccess();
  sub_20A489EF0(v3 + 328, v0 + 2064);
  if (!*(_QWORD *)(v0 + 2088))
  {
    v11 = *(_QWORD *)(v0 + 2376);
    v12 = *(_QWORD *)(v0 + 2344);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_20A44CE2C(v0 + 2064, &qword_2545FA1B8);
    LOBYTE(v91) = -118;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000018, 0x800000020A5DD430, 0, (unsigned __int8 *)&v91, 0, 0, 0xD000000000000087, 0x800000020A5DCEE0, 0xD000000000000022, 0x800000020A5DD450, 160);
    v14 = v13;
    sub_20A529F30();
    sub_20A459C88(v0 + 2048, v0 + 2272, &qword_253EB50E8);
    sub_20A48989C(v0 + 2272);
    swift_bridgeObjectRelease();

    v15 = (uint64_t *)(v11 + *(int *)(v12 + 28));
    v16 = *v15;
    v17 = v15[1];
    swift_bridgeObjectRetain();
    LOBYTE(v16) = sub_20A4894E0(v16, v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v18 = swift_task_alloc();
    *(_QWORD *)(v0 + 2648) = v18;
    *(_QWORD *)v18 = v0;
    *(_QWORD *)(v18 + 8) = sub_20A483014;
    v19 = *(_QWORD *)(v0 + 2304);
    *(_QWORD *)(v18 + 600) = *(_QWORD *)(v0 + 2320);
    *(_BYTE *)(v18 + 417) = v16 & 1;
    *(_QWORD *)(v18 + 592) = 0;
    *(_QWORD *)(v18 + 584) = v0 + 2024;
    *(_QWORD *)(v18 + 576) = v19;
    *(_OWORD *)(v18 + 608) = *(_OWORD *)(v0 + 2024);
    *(_BYTE *)(v18 + 418) = *(_BYTE *)(v0 + 2040);
    *(_OWORD *)(v18 + 624) = *(_OWORD *)(v0 + 2048);
    return swift_task_switch();
  }
  v4 = *(void **)(v0 + 2464);
  v5 = *(_QWORD *)(v0 + 2376);
  swift_bridgeObjectRelease();
  sub_20A44CFD8((__int128 *)(v0 + 2064), v0 + 2104);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 2104), *(_QWORD *)(v0 + 2128));
  sub_20A4CED74(v5, v0 + 944);
  if (!v4)
  {
    v21 = *(_QWORD *)(v0 + 2376);
    v22 = *(_QWORD *)(v0 + 2344);
    memcpy((void *)(v0 + 1216), (const void *)(v0 + 944), 0x110uLL);
    v23 = (uint64_t *)(v21 + *(int *)(v22 + 32));
    v25 = *v23;
    v24 = v23[1];
    swift_bridgeObjectRetain();
    v26 = sub_20A458B5C(v25, v24);
    *(_QWORD *)(v0 + 2472) = v26;
    *(_QWORD *)(v0 + 2480) = v27;
    v28 = v26;
    v29 = v27;
    swift_bridgeObjectRelease();
    if (v29 >> 60 == 15)
    {
      swift_bridgeObjectRelease();
      sub_20A48A810(v0 + 1216);
      swift_bridgeObjectRelease();
LABEL_8:
      v30 = *(_QWORD *)(v0 + 2448);
      v31 = *(_QWORD *)(v0 + 2376);
      v32 = *(_QWORD *)(v0 + 2304);
      v89 = *(_QWORD *)(v0 + 2440);
      v90 = v30;
      v91 = 0;
      v92 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      sub_20A5B8E94();
      swift_bridgeObjectRelease();
      v91 = 0xD000000000000021;
      v92 = 0x800000020A5DD4A0;
      swift_bridgeObjectRetain();
      sub_20A5B899C();
      swift_bridgeObjectRelease();
      v33 = v91;
      LOBYTE(v91) = 14;
      CoreODILogger.debug(_:category:)(v33, v92, &v91);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v34 = v31;
LABEL_9:
      sub_20A465AB4(v34, (uint64_t (*)(_QWORD))type metadata accessor for PregeneratedAssessment);
      v35 = type metadata accessor for ODNAssessmentResult();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v32, 1, 1, v35);
      goto LABEL_10;
    }
    v88 = v28;
    v36 = sub_20A5B8504();
    if (v37 >> 60 == 15)
    {
      LOBYTE(v91) = 109;
      ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000022, 0x800000020A5DD4D0, 0, (unsigned __int8 *)&v91, 0, 0, 0xD000000000000074, 0x800000020A5DD500, 0x6F72662864656573, 0xEB00000000293A6DLL, 77);
      v39 = v38;
      swift_willThrow();
      swift_bridgeObjectRelease();
      sub_20A48A810(v0 + 1216);
      sub_20A44CFC4(v88, v29);
      swift_bridgeObjectRelease();

      goto LABEL_8;
    }
    v85 = (_OWORD *)(v0 + 1216);
    v40 = v36;
    v41 = v37;
    sub_20A5B8264();
    swift_allocObject();
    sub_20A5B8258();
    sub_20A48A920();
    sub_20A5B824C();
    swift_release();
    v42 = *(_QWORD *)(v0 + 2376);
    v43 = *(_QWORD *)(v0 + 2344);
    sub_20A44CFC4(v40, v41);
    v44 = *(_QWORD *)(v0 + 1904);
    v82 = *(_QWORD *)(v0 + 1912);
    v83 = *(_QWORD *)(v0 + 1896);
    v45 = *(_QWORD *)(v0 + 1920);
    v81 = *(_QWORD *)(v0 + 1928);
    v87 = *(_QWORD *)(v0 + 1936);
    v80 = *(_QWORD *)(v0 + 1944);
    v86 = *(_QWORD *)(v0 + 1952);
    v46 = (uint64_t *)(v42 + *(int *)(v43 + 40));
    v47 = *v46;
    v48 = v46[1];
    swift_bridgeObjectRetain();
    v49 = sub_20A458B5C(v47, v48);
    *(_QWORD *)(v0 + 2488) = v49;
    *(_QWORD *)(v0 + 2496) = v50;
    v78 = v49;
    v79 = v44;
    v51 = v50;
    swift_bridgeObjectRelease();
    if (v51 >> 60 == 15)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_20A48A810((uint64_t)v85);
      swift_bridgeObjectRelease();
LABEL_15:
      v52 = *(_QWORD *)(v0 + 2448);
      v53 = *(_QWORD *)(v0 + 2376);
      v32 = *(_QWORD *)(v0 + 2304);
      v89 = *(_QWORD *)(v0 + 2440);
      v90 = v52;
      v91 = 0;
      v92 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      sub_20A5B8E94();
      swift_bridgeObjectRelease();
      v91 = 0xD00000000000001FLL;
      v92 = 0x800000020A5DD580;
      swift_bridgeObjectRetain();
      sub_20A5B899C();
      swift_bridgeObjectRelease();
      v54 = v91;
      LOBYTE(v91) = 14;
      CoreODILogger.debug(_:category:)(v54, v92, &v91);
      swift_bridgeObjectRelease();
      sub_20A44CFC4(v88, v29);
      swift_bridgeObjectRelease();
      v34 = v53;
      goto LABEL_9;
    }
    v75 = v45;
    v76 = sub_20A5B8504();
    if (v55 >> 60 == 15)
    {
      LOBYTE(v91) = 109;
      ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000022, 0x800000020A5DD4D0, 0, (unsigned __int8 *)&v91, 0, 0, 0xD000000000000074, 0x800000020A5DD500, 0x6F72662864656573, 0xEB00000000293A6DLL, 77);
      v57 = v56;
      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_20A48A810((uint64_t)v85);
      sub_20A44CFC4(v78, v51);
      swift_bridgeObjectRelease();

      goto LABEL_15;
    }
    v58 = v55;
    swift_allocObject();
    sub_20A5B8258();
    sub_20A5B824C();
    v84 = *(_QWORD *)(v0 + 2376);
    v74 = *(_QWORD *)(v0 + 2344);
    v59 = *(_QWORD **)(v0 + 2320);
    swift_release();
    sub_20A44CFC4(v76, v58);
    v77 = *(_OWORD *)(v0 + 1960);
    v72 = *(_OWORD *)(v0 + 1992);
    v73 = *(_OWORD *)(v0 + 1976);
    v70 = *(_QWORD *)(v0 + 2016);
    v71 = *(_QWORD *)(v0 + 2008);
    v60 = *(_OWORD *)(v0 + 1328);
    *(_OWORD *)(v0 + 1720) = *(_OWORD *)(v0 + 1312);
    *(_OWORD *)(v0 + 1736) = v60;
    *(_QWORD *)(v0 + 1752) = *(_QWORD *)(v0 + 1344);
    v61 = *(_OWORD *)(v0 + 1264);
    *(_OWORD *)(v0 + 1656) = *(_OWORD *)(v0 + 1248);
    *(_OWORD *)(v0 + 1672) = v61;
    v62 = *(_OWORD *)(v0 + 1296);
    *(_OWORD *)(v0 + 1688) = *(_OWORD *)(v0 + 1280);
    *(_OWORD *)(v0 + 1704) = v62;
    v63 = *(_OWORD *)(v0 + 1232);
    *(_OWORD *)(v0 + 1624) = *v85;
    *(_OWORD *)(v0 + 1640) = v63;
    nullsub_1(v0 + 1624);
    v64 = *(_OWORD *)(v0 + 1416);
    *(_OWORD *)(v0 + 1568) = *(_OWORD *)(v0 + 1432);
    v65 = *(_OWORD *)(v0 + 1464);
    *(_OWORD *)(v0 + 1584) = *(_OWORD *)(v0 + 1448);
    *(_OWORD *)(v0 + 1600) = v65;
    v66 = *(_OWORD *)(v0 + 1352);
    *(_OWORD *)(v0 + 1504) = *(_OWORD *)(v0 + 1368);
    v67 = *(_OWORD *)(v0 + 1400);
    *(_OWORD *)(v0 + 1520) = *(_OWORD *)(v0 + 1384);
    *(_OWORD *)(v0 + 1536) = v67;
    *(_OWORD *)(v0 + 1552) = v64;
    *(_QWORD *)(v0 + 1616) = *(_QWORD *)(v0 + 1480);
    *(_OWORD *)(v0 + 1488) = v66;
    nullsub_1(v0 + 1488);
    sub_20A44D0E4((uint64_t)v85);
    sub_20A459690(v88, v29);
    sub_20A44D0E4(v0 + 1352);
    sub_20A459690(v78, v51);
    sub_20A459C88(v0 + 1624, v0 + 16, qword_253EB4498);
    *(_QWORD *)(v0 + 152) = 0;
    *(_QWORD *)(v0 + 160) = 0;
    *(_QWORD *)(v0 + 168) = v83;
    *(_QWORD *)(v0 + 176) = v79;
    *(_QWORD *)(v0 + 184) = v82;
    *(_QWORD *)(v0 + 192) = v75;
    *(_QWORD *)(v0 + 200) = v81;
    *(_QWORD *)(v0 + 208) = v87;
    *(_QWORD *)(v0 + 216) = v80;
    *(_QWORD *)(v0 + 224) = v86;
    *(_QWORD *)(v0 + 232) = v88;
    *(_QWORD *)(v0 + 240) = v29;
    sub_20A459C88(v0 + 1488, v0 + 248, qword_253EB4498);
    *(_QWORD *)(v0 + 384) = 0;
    *(_QWORD *)(v0 + 392) = 0;
    *(_OWORD *)(v0 + 400) = v77;
    *(_OWORD *)(v0 + 416) = v73;
    *(_OWORD *)(v0 + 432) = v72;
    *(_QWORD *)(v0 + 448) = v71;
    *(_QWORD *)(v0 + 456) = v70;
    *(_QWORD *)(v0 + 464) = v78;
    *(_QWORD *)(v0 + 472) = v51;
    memcpy((void *)(v0 + 480), v59 + 58, 0x1D0uLL);
    memcpy(v59 + 58, (const void *)(v0 + 16), 0x1D0uLL);
    sub_20A489F38((uint64_t *)(v0 + 480));
    v68 = __swift_project_boxed_opaque_existential_1(v59 + 24, v59[27]);
    *(_BYTE *)(v0 + 1890) = *(_BYTE *)(v84 + *(int *)(v74 + 68));
    v69 = (_QWORD *)(v84 + *(int *)(v74 + 72));
    *(_QWORD *)(v0 + 2504) = *v69;
    *(_QWORD *)(v0 + 2512) = v69[1];
    *(_QWORD *)(v0 + 2520) = *v68;
    swift_bridgeObjectRetain();
    return swift_task_switch();
  }
  v6 = *(_QWORD *)(v0 + 2448);
  v7 = *(_QWORD *)(v0 + 2440);
  v8 = *(_QWORD *)(v0 + 2376);
  v9 = *(_QWORD *)(v0 + 2304);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v91 = v7;
  v92 = v6;
  LOBYTE(v89) = 14;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD000000000000015, 0x800000020A5DD480, &v89);
  swift_bridgeObjectRelease();
  sub_20A465AB4(v8, (uint64_t (*)(_QWORD))type metadata accessor for PregeneratedAssessment);
  v10 = type metadata accessor for ODNAssessmentResult();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
LABEL_10:
  __swift_destroy_boxed_opaque_existential_1(v0 + 2104);
  __swift_destroy_boxed_opaque_existential_1(v0 + 2144);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4825CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v1 = *(_QWORD *)(v0 + 2336);
  v2 = *(_QWORD *)(v0 + 2304);
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 2352) + 56))(v1, 1, 1, *(_QWORD *)(v0 + 2344));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_20A44CE2C(v1, &qword_2545FA1D8);
  v5 = 14;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD000000000000010, 0x800000020A5DD410, &v5);
  swift_bridgeObjectRelease();
  v3 = type metadata accessor for ODNAssessmentResult();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  __swift_destroy_boxed_opaque_existential_1(v0 + 2144);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A48271C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)(v0 + 2520);
  v2 = *(_QWORD *)(v0 + 2512);
  v3 = *(_BYTE *)(v0 + 1890);
  swift_beginAccess();
  *(_BYTE *)(v1 + 112) = v3;
  if (v2)
  {
    *(_OWORD *)(*(_QWORD *)(v0 + 2520) + 120) = *(_OWORD *)(v0 + 2504);
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_20A48279C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v1 = *(_QWORD *)(v0 + 2392);
  v2 = *(_QWORD *)(v0 + 2384);
  v3 = *(_QWORD **)(v0 + 2368);
  v4 = *(_QWORD *)(v0 + 2328);
  v5 = *(_QWORD *)(v0 + 2320);
  v6 = *(_QWORD *)(v0 + 2312);
  sub_20A48A964(*(_QWORD *)(v0 + 2376), (uint64_t)v3);
  *(_OWORD *)(v0 + 2184) = 0u;
  *(_OWORD *)(v0 + 2200) = 0u;
  *(_QWORD *)(v0 + 2216) = 1;
  sub_20A4EB9A8(v2, v1, v3, v0 + 2184, v4);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v5 + 192), *(_QWORD *)(v5 + 216));
  LOBYTE(v1) = *(_BYTE *)(v6 + 33);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 2528) = v7;
  *v7 = v0;
  v7[1] = sub_20A48286C;
  return sub_20A4EC1FC(*(_QWORD *)(v0 + 2328), v1);
}

uint64_t sub_20A48286C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 2536) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A4828D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v0 + 2544) = *(unsigned __int8 *)(v0 + 1216) + 49;
  v1 = *(_QWORD *)(v0 + 2376);
  v2 = *(_QWORD *)(v0 + 2360);
  *(_QWORD *)(v0 + 2552) = *(_QWORD *)(v0 + 1288);
  *(_QWORD *)(v0 + 2560) = *(_QWORD *)(v0 + 1296);
  *(_QWORD *)(v0 + 2568) = *(_QWORD *)(v0 + 1304);
  *(_QWORD *)(v0 + 2576) = *(_QWORD *)(v0 + 1312);
  *(_QWORD *)(v0 + 2584) = *(_QWORD *)(v0 + 1320);
  *(_QWORD *)(v0 + 2592) = *(_QWORD *)(v0 + 1328);
  sub_20A48A964(v1, v2);
  v3 = qword_2545F9978;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v3 != -1)
    swift_once();
  *(_QWORD *)(v0 + 2600) = qword_25460FF78;
  return swift_task_switch();
}

uint64_t sub_20A48299C()
{
  uint64_t v0;
  void *v1;
  id v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  v1 = *(void **)(v0 + 2536);
  *(_QWORD *)(v0 + 2288) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52D0);
  if ((swift_dynamicCast() & 1) != 0)
  {

    v3 = *(_QWORD *)(v0 + 2296);
    sub_20A4871F4(v3);
    sub_20A48A7B0(v3);

    *(_QWORD *)(v0 + 2544) = *(unsigned __int8 *)(v0 + 1216) + 49;
    v4 = *(_QWORD *)(v0 + 2376);
    v5 = *(_QWORD *)(v0 + 2360);
    *(_QWORD *)(v0 + 2552) = *(_QWORD *)(v0 + 1288);
    *(_QWORD *)(v0 + 2560) = *(_QWORD *)(v0 + 1296);
    *(_QWORD *)(v0 + 2568) = *(_QWORD *)(v0 + 1304);
    *(_QWORD *)(v0 + 2576) = *(_QWORD *)(v0 + 1312);
    *(_QWORD *)(v0 + 2584) = *(_QWORD *)(v0 + 1320);
    *(_QWORD *)(v0 + 2592) = *(_QWORD *)(v0 + 1328);
    sub_20A48A964(v4, v5);
    v6 = qword_2545F9978;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v6 != -1)
      swift_once();
    *(_QWORD *)(v0 + 2600) = qword_25460FF78;
    return swift_task_switch();
  }
  else
  {
    v8 = *(void **)(v0 + 2536);
    v9 = *(_QWORD *)(v0 + 2496);
    v10 = *(_QWORD *)(v0 + 2488);
    v11 = *(_QWORD *)(v0 + 2480);
    v12 = *(_QWORD *)(v0 + 2472);
    v13 = *(_QWORD *)(v0 + 2328);
    v15 = *(_QWORD *)(v0 + 2376);
    v16 = *(_QWORD *)(v0 + 2304);
    swift_bridgeObjectRelease();
    sub_20A48A810(v0 + 1216);

    v17 = 14;
    swift_bridgeObjectRetain();
    CoreODILogger.debug(_:category:)(0xD000000000000019, 0x800000020A5DD5A0, &v17);

    sub_20A44CFC4(v10, v9);
    sub_20A44CFC4(v12, v11);
    swift_bridgeObjectRelease();
    sub_20A465AB4(v13, type metadata accessor for ODNAssessmentsFeedbackManager.ODNResultsPayload);
    sub_20A465AB4(v15, (uint64_t (*)(_QWORD))type metadata accessor for PregeneratedAssessment);
    v14 = type metadata accessor for ODNAssessmentResult();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v16, 1, 1, v14);
    __swift_destroy_boxed_opaque_existential_1(v0 + 2104);
    __swift_destroy_boxed_opaque_existential_1(v0 + 2144);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_20A482C4C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;

  v1 = v0[325];
  v2 = *(_QWORD *)(v1 + 120);
  if (v2)
  {
    v3 = *(_QWORD *)(v1 + 112);
    v0[330] = v2;
    v0[329] = v3;
    swift_bridgeObjectRetain();
    return swift_task_switch();
  }
  else
  {
    v5 = (_QWORD *)swift_task_alloc();
    v0[326] = v5;
    *v5 = v0;
    v5[1] = sub_20A482CD0;
    return sub_20A4AAD6C();
  }
}

uint64_t sub_20A482CD0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 2616) = a1;
  *(_QWORD *)(v3 + 2624) = a2;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A482D34()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[328];
  v2 = v0[325];
  *(_QWORD *)(v2 + 112) = v0[327];
  *(_QWORD *)(v2 + 120) = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v3 = v0[327];
  v0[330] = v0[328];
  v0[329] = v3;
  return swift_task_switch();
}

uint64_t sub_20A482D98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  __int128 v33[3];
  uint64_t v34;
  uint64_t v35;
  _OWORD v36[8];
  uint64_t v37;
  _OWORD v38[8];
  uint64_t v39;
  _OWORD v40[8];
  char v41;

  v1 = *(_QWORD *)(v0 + 2640);
  v2 = *(_QWORD *)(v0 + 2632);
  v3 = *(_QWORD *)(v0 + 2592);
  v4 = *(_QWORD *)(v0 + 2584);
  v26 = *(_OWORD *)(v0 + 2552);
  v27 = *(_OWORD *)(v0 + 2568);
  v5 = *(_QWORD *)(v0 + 2544);
  v28 = *(_QWORD *)(v0 + 2488);
  v29 = *(_QWORD *)(v0 + 2496);
  v31 = *(_QWORD *)(v0 + 2472);
  v32 = *(_QWORD *)(v0 + 2480);
  v6 = *(_QWORD *)(v0 + 2424);
  v7 = *(_QWORD *)(v0 + 2416);
  v8 = *(_QWORD *)(v0 + 2376);
  v9 = *(_QWORD *)(v0 + 2368);
  v10 = *(uint64_t **)(v0 + 2360);
  v30 = *(_QWORD *)(v0 + 2328);
  v11 = *(_QWORD *)(v0 + 2304);
  LOBYTE(v38[0]) = -47;
  sub_20A519364(v10, v2, v1, v7, v6, 0, (char *)v38, v0 + 1760);
  sub_20A48A964(v8, v9);
  *(_QWORD *)&v33[0] = v5;
  *((_QWORD *)&v33[0] + 1) = 0xE100000000000000;
  v33[1] = v26;
  v33[2] = v27;
  v34 = v4;
  v35 = v3;
  v12 = *(_OWORD *)(v0 + 1296);
  v13 = *(_OWORD *)(v0 + 1328);
  v36[6] = *(_OWORD *)(v0 + 1312);
  v36[7] = v13;
  v37 = *(_QWORD *)(v0 + 1344);
  v14 = *(_OWORD *)(v0 + 1232);
  v15 = *(_OWORD *)(v0 + 1264);
  v36[2] = *(_OWORD *)(v0 + 1248);
  v36[3] = v15;
  v36[4] = *(_OWORD *)(v0 + 1280);
  v36[5] = v12;
  v36[0] = *(_OWORD *)(v0 + 1216);
  v36[1] = v14;
  v16 = *(_OWORD *)(v0 + 1464);
  v38[6] = *(_OWORD *)(v0 + 1448);
  v38[7] = v16;
  v39 = *(_QWORD *)(v0 + 1480);
  v17 = *(_OWORD *)(v0 + 1400);
  v38[2] = *(_OWORD *)(v0 + 1384);
  v38[3] = v17;
  v18 = *(_OWORD *)(v0 + 1432);
  v38[4] = *(_OWORD *)(v0 + 1416);
  v38[5] = v18;
  v19 = *(_OWORD *)(v0 + 1368);
  v38[0] = *(_OWORD *)(v0 + 1352);
  v38[1] = v19;
  v20 = *(_OWORD *)(v0 + 1840);
  v21 = *(_OWORD *)(v0 + 1872);
  v40[6] = *(_OWORD *)(v0 + 1856);
  v40[7] = v21;
  v41 = *(_BYTE *)(v0 + 1888);
  v22 = *(_OWORD *)(v0 + 1776);
  v23 = *(_OWORD *)(v0 + 1808);
  v40[2] = *(_OWORD *)(v0 + 1792);
  v40[3] = v23;
  v40[4] = *(_OWORD *)(v0 + 1824);
  v40[5] = v20;
  v40[0] = *(_OWORD *)(v0 + 1760);
  v40[1] = v22;
  sub_20A44D0E4(v0 + 1216);
  sub_20A44D0E4(v0 + 1352);
  sub_20A489D88(v0 + 1760);
  sub_20A4B00C4(v9, v33, (uint64_t)v36, (uint64_t)v38, (uint64_t)v40, v11);
  sub_20A48A810(v0 + 1216);
  sub_20A489E68(v0 + 1760);
  sub_20A44CFC4(v28, v29);
  sub_20A44CFC4(v31, v32);
  sub_20A465AB4(v30, type metadata accessor for ODNAssessmentsFeedbackManager.ODNResultsPayload);
  sub_20A465AB4(v8, (uint64_t (*)(_QWORD))type metadata accessor for PregeneratedAssessment);
  v24 = type metadata accessor for ODNAssessmentResult();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v11, 0, 1, v24);
  __swift_destroy_boxed_opaque_existential_1(v0 + 2104);
  __swift_destroy_boxed_opaque_existential_1(v0 + 2144);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A483014()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *v0 + 2024;
  swift_task_dealloc();
  sub_20A4898C4(v1);
  return swift_task_switch();
}

uint64_t sub_20A483078()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 2304);
  sub_20A465AB4(*(_QWORD *)(v0 + 2376), (uint64_t (*)(_QWORD))type metadata accessor for PregeneratedAssessment);
  v2 = type metadata accessor for ODNAssessmentResult();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
  __swift_destroy_boxed_opaque_existential_1(v0 + 2144);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A483124(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[494] = v2;
  v3[493] = a2;
  v3[492] = a1;
  v4 = sub_20A5B8954();
  v3[495] = v4;
  v3[496] = *(_QWORD *)(v4 - 8);
  v3[497] = swift_task_alloc();
  v5 = sub_20A5B866C();
  v3[498] = v5;
  v3[499] = *(_QWORD *)(v5 - 8);
  v3[500] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A4831B4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  char v4;

  v1 = *(_QWORD *)(v0 + 3952);
  *(_QWORD *)(v0 + 4008) = *(_QWORD *)(v1 + 152);
  *(_QWORD *)(v0 + 4016) = *(_QWORD *)(v1 + 160);
  v4 = 8;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD000000000000018, 0x800000020A5DCF90, &v4);
  swift_bridgeObjectRelease();
  *(_DWORD *)(v0 + 2972) = MKBGetDeviceLockState();
  *(_BYTE *)(v1 + 928) = 1;
  *(_QWORD *)(v0 + 4024) = *(_QWORD *)(v1 + 432);
  *(_QWORD *)(v0 + 4032) = *(_QWORD *)(v1 + 440);
  swift_bridgeObjectRetain();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 4040) = v2;
  *v2 = v0;
  v2[1] = sub_20A483298;
  return sub_20A4A2118(v0 + 3504);
}

uint64_t sub_20A483298()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 4048) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_20A48330C()
{
  uint64_t v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_OWORD *)(v0 + 3504);
  *(_OWORD *)(v0 + 3248) = v1;
  v2 = *(_OWORD *)(v0 + 3520);
  *(_OWORD *)(v0 + 3264) = v2;
  v3 = *(_OWORD *)(v0 + 3536);
  *(_OWORD *)(v0 + 3280) = v3;
  v4 = *(_OWORD *)(v0 + 3552);
  *(_OWORD *)(v0 + 3296) = v4;
  *(_OWORD *)(v0 + 3568) = v1;
  *(_OWORD *)(v0 + 3584) = v2;
  *(_OWORD *)(v0 + 3600) = v3;
  *(_OWORD *)(v0 + 3616) = v4;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 4056) = v5;
  *v5 = v0;
  v5[1] = sub_20A4833A8;
  v6 = *(_QWORD *)(v0 + 3568);
  v5[2] = *(_QWORD *)(v0 + 3952);
  v5[3] = v6;
  v7 = *(_QWORD *)(v0 + 3616);
  v5[4] = *(_QWORD *)(v0 + 3608);
  v5[5] = v7;
  return swift_task_switch();
}

uint64_t sub_20A4833A8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A483400()
{
  uint64_t v0;
  __int128 v1;
  __int128 v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  char *v50;
  void *v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  id v56;
  id v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  void (*v91)(uint64_t, uint64_t);
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  _QWORD *v101;
  unint64_t v102;
  _QWORD *v103;
  unint64_t v104;
  _QWORD *v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  BOOL v114;
  uint64_t v115;
  __int128 v116;
  __int128 v117;
  __int16 v118;
  __int128 v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char v128;
  _QWORD *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  _QWORD *v159;
  _QWORD *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  _QWORD *v167;
  uint64_t v168;
  uint64_t v169;
  int v170;
  uint64_t v171;
  uint64_t v172;
  unint64_t v173;
  unint64_t v174;
  _OWORD *v175;
  _OWORD v176[4];
  uint64_t v177;
  uint64_t v178;
  _QWORD *v179;
  uint64_t v180;
  unint64_t v181;
  uint64_t v182;
  uint64_t v183;
  char v184;
  char v185;
  void *v186;
  uint64_t v187;

  v1 = *(_OWORD *)(v0 + 3264);
  v176[0] = *(_OWORD *)(v0 + 3248);
  v176[1] = v1;
  v2 = *(_OWORD *)(v0 + 3296);
  v176[2] = *(_OWORD *)(v0 + 3280);
  v176[3] = v2;
  sub_20A487758((uint64_t)v176);
  v3 = sub_20A5B8504();
  *(_QWORD *)(v0 + 4064) = v3;
  *(_QWORD *)(v0 + 4072) = v4;
  if (v4 >> 60 == 15)
  {
    swift_bridgeObjectRelease();
    sub_20A48999C();
    swift_allocError();
    *v5 = 0;
    swift_willThrow();
LABEL_6:
    sub_20A4899E0(v0 + 3248);
LABEL_7:
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v6 = v3;
  v7 = v4;
  if (!*(_QWORD *)(v0 + 3280)
    || (swift_bridgeObjectRetain(),
        v8 = sub_20A5B8504(),
        v10 = v9,
        swift_bridgeObjectRelease(),
        *(_QWORD *)(v0 + 4080) = v8,
        *(_QWORD *)(v0 + 4088) = v10,
        v10 >> 60 == 15))
  {
    swift_bridgeObjectRelease();
    sub_20A48999C();
    swift_allocError();
    *v11 = 1;
    swift_willThrow();
    sub_20A44CFC4(v6, v7);
    goto LABEL_6;
  }
  v175 = (_OWORD *)(v0 + 3248);
  v13 = *(_QWORD **)(v0 + 3952);
  sub_20A459C88((uint64_t)(v13 + 58), v0 + 2704, qword_253EB4498);
  v14 = v13[76];
  v15 = v13[78];
  v173 = v13[86];
  sub_20A459C88((uint64_t)(v13 + 87), v0 + 2568, qword_253EB4498);
  v16 = v13[105];
  v17 = v13[107];
  v18 = v13[115];
  sub_20A459C88(v0 + 2704, v0 + 2432, qword_253EB4498);
  if (sub_20A44BE1C(v0 + 2432) == 1
    || (sub_20A459C88(v0 + 2568, v0 + 2296, qword_253EB4498), sub_20A44BE1C(v0 + 2296) == 1)
    || !v15
    || !v17
    || !v14
    || !v16
    || v173 >> 60 == 15
    || v18 >> 60 == 15)
  {
    v19 = *(_QWORD *)(v0 + 3952) + 328;
    swift_beginAccess();
    sub_20A489EF0(v19, v0 + 3800);
    if (*(_QWORD *)(v0 + 3824))
    {
      sub_20A44CFD8((__int128 *)(v0 + 3800), v0 + 3760);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 3760), *(_QWORD *)(v0 + 3784));
      v20 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 4096) = v20;
      *v20 = v0;
      v20[1] = sub_20A4846FC;
      return sub_20A4CF7E8(v0 + 1280);
    }
    sub_20A44CE2C(v0 + 3800, &qword_2545FA1B8);
  }
  v155 = v0 + 3680;
  v161 = v0 + 3840;
  v158 = *(_QWORD *)(v0 + 4048);
  v21 = *(_QWORD **)(v0 + 3952);
  sub_20A459C88((uint64_t)(v21 + 58), v0 + 2160, qword_253EB4498);
  v22 = v21[85];
  *(_QWORD *)(v0 + 4112) = v22;
  v23 = v21[86];
  *(_QWORD *)(v0 + 4120) = v23;
  v140 = v21[75];
  v171 = v21[76];
  v24 = v21[77];
  v25 = v21[79];
  v26 = v21[80];
  v27 = v21[81];
  v28 = v21[82];
  v29 = v21[83];
  v151 = v21[78];
  v153 = v24;
  v30 = v151;
  v31 = v21[84];
  v169 = v22;
  if (!v151)
  {
    sub_20A459C88(v0 + 2160, v0 + 1888, qword_253EB4498);
    if (sub_20A44BE1C(v0 + 1888) == 1)
    {
      v24 = 0;
      v30 = 0;
      v25 = 0;
      v26 = 0;
      v27 = 0;
      v28 = 0;
      v29 = 0;
      v31 = 0;
    }
    else
    {
      v24 = *(unsigned __int8 *)(v0 + 1888) + 49;
      v25 = *(_QWORD *)(v0 + 1960);
      v26 = *(_QWORD *)(v0 + 1968);
      v27 = *(_QWORD *)(v0 + 1976);
      v32 = *(_QWORD *)(v0 + 1984);
      v166 = *(_QWORD *)(v0 + 1992);
      v31 = *(_QWORD *)(v0 + 2000);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v29 = v166;
      v28 = v32;
      v30 = 0xE100000000000000;
    }
  }
  v167 = (_QWORD *)(v0 + 2160);
  v174 = v23;
  v33 = *(_QWORD **)(v0 + 3952);
  *(_QWORD *)(v0 + 3312) = v24;
  v143 = v30;
  *(_QWORD *)(v0 + 3320) = v30;
  *(_QWORD *)(v0 + 3328) = v25;
  *(_QWORD *)(v0 + 3336) = v26;
  *(_QWORD *)(v0 + 3344) = v27;
  *(_QWORD *)(v0 + 3352) = v28;
  *(_QWORD *)(v0 + 3360) = v29;
  *(_QWORD *)(v0 + 3368) = v31;
  sub_20A459C88((uint64_t)(v33 + 87), v0 + 1616, qword_253EB4498);
  v34 = v33[106];
  v35 = v33[107];
  v36 = v34;
  v37 = v35;
  v38 = v33[108];
  v39 = v33[109];
  v40 = v33[110];
  v41 = v33[111];
  v42 = v33[112];
  v43 = v33[113];
  v144 = v24;
  if (!v35)
  {
    v44 = v33[106];
    sub_20A459C88(v0 + 1616, v0 + 1752, qword_253EB4498);
    if (sub_20A44BE1C(v0 + 1752) == 1)
    {
      v36 = 0;
      v37 = 0;
      v38 = 0;
      v39 = 0;
      v40 = 0;
      v41 = 0;
      v42 = 0;
      v43 = 0;
    }
    else
    {
      v36 = *(unsigned __int8 *)(v0 + 1752) + 49;
      v38 = *(_QWORD *)(v0 + 1824);
      v45 = *(_QWORD *)(v0 + 1832);
      v46 = *(_QWORD *)(v0 + 1840);
      v41 = *(_QWORD *)(v0 + 1848);
      v164 = *(_QWORD *)(v0 + 1856);
      v47 = *(_QWORD *)(v0 + 1864);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v43 = v47;
      v42 = v164;
      v40 = v46;
      v39 = v45;
      v37 = 0xE100000000000000;
    }
    v34 = v44;
    v35 = 0;
  }
  v145 = v34;
  v141 = v37;
  v142 = v36;
  v146 = *(_QWORD *)(v0 + 4008);
  v147 = *(_QWORD *)(v0 + 4016);
  v48 = *(_QWORD **)(v0 + 3952);
  *(_QWORD *)(v0 + 3376) = v36;
  *(_QWORD *)(v0 + 3384) = v37;
  *(_QWORD *)(v0 + 3392) = v38;
  *(_QWORD *)(v0 + 3400) = v39;
  *(_QWORD *)(v0 + 3408) = v40;
  *(_QWORD *)(v0 + 3416) = v41;
  *(_QWORD *)(v0 + 3424) = v42;
  *(_QWORD *)(v0 + 3432) = v43;
  v163 = v48[104];
  v49 = v48[105];
  *(_QWORD *)(v0 + 4128) = v49;
  v50 = (char *)v48[29];
  v51 = *(void **)&v50[OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_httpSession];
  sub_20A47BD60((uint64_t)&v50[OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_logger], v161);
  v52 = (char *)objc_allocWithZone((Class)type metadata accessor for DIPAssessmentWebService());
  v53 = &v52[OBJC_IVAR____TtC17CoreODIEssentials23DIPAssessmentWebService_DUA_ORD_ENDPOINT];
  *(_QWORD *)v53 = 0x726F5F646E65732FLL;
  *((_QWORD *)v53 + 1) = 0xE900000000000064;
  v54 = &v52[OBJC_IVAR____TtC17CoreODIEssentials23DIPAssessmentWebService_DUA_TRAIN_ENDPOINT];
  *(_QWORD *)v54 = 0x746F5F646E65732FLL;
  *((_QWORD *)v54 + 1) = 0xE900000000000064;
  sub_20A47BD60(v161, v155);
  sub_20A465800(v153, v151);
  v55 = v50;
  v56 = v51;
  sub_20A465800(v145, v35);
  swift_bridgeObjectRetain();
  sub_20A489A78((_QWORD *)(v0 + 1616), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20A48990C);
  sub_20A489A78(v167, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20A48990C);
  sub_20A459690(v169, v174);
  swift_bridgeObjectRetain();
  v57 = sub_20A50507C(v56, v155);

  __swift_destroy_boxed_opaque_existential_1(v161);
  v58 = (void *)v48[29];
  v48[29] = v57;

  sub_20A5B8660();
  v59 = sub_20A5B863C();
  v61 = v60;
  *(_QWORD *)(v0 + 4136) = v59;
  *(_QWORD *)(v0 + 4144) = v60;
  v62 = sub_20A5B863C();
  v64 = v63;
  *(_QWORD *)(v0 + 4152) = v63;
  v177 = v146;
  v178 = v147;
  *(_QWORD *)&v176[0] = 0;
  *((_QWORD *)&v176[0] + 1) = 0xE000000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_20A5B8E94();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v176[0] = 0x737420676E697375;
  *((_QWORD *)&v176[0] + 1) = 0xEB00000000206469;
  sub_20A5B863C();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  v65 = *(_QWORD *)&v176[0];
  LOBYTE(v176[0]) = 8;
  CoreODILogger.debug(_:category:)(v65, *((unint64_t *)&v176[0] + 1), v176);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_20A5B8288();
  swift_allocObject();
  sub_20A5B827C();
  *(_QWORD *)(v0 + 3632) = v59;
  v162 = v61;
  *(_QWORD *)(v0 + 3640) = v61;
  *(_QWORD *)(v0 + 3648) = v62;
  v156 = v64;
  *(_QWORD *)(v0 + 3656) = v64;
  *(_QWORD *)(v0 + 3664) = v163;
  *(_QWORD *)(v0 + 3672) = v49;
  sub_20A489A34();
  v66 = sub_20A5B8270();
  *(_QWORD *)(v0 + 4160) = v66;
  *(_QWORD *)(v0 + 4168) = v67;
  if (v158)
  {
    v68 = *(_QWORD *)(v0 + 4088);
    v69 = *(_QWORD *)(v0 + 4080);
    v70 = *(_QWORD *)(v0 + 4072);
    v71 = *(_QWORD *)(v0 + 4064);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 3992) + 8))(*(_QWORD *)(v0 + 4000), *(_QWORD *)(v0 + 3984));
    swift_bridgeObjectRelease();
    sub_20A489A78(v167, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20A489AD4);
    swift_bridgeObjectRelease();
    sub_20A489A78((_QWORD *)(v0 + 1616), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20A489AD4);
    swift_release();
    sub_20A44CFC4(v169, v174);
    sub_20A44CFC4(v69, v68);
    sub_20A4655FC(v144, v143);
    sub_20A4655FC(v142, v141);
    sub_20A44CFC4(v71, v70);
    sub_20A4899E0((uint64_t)v175);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  v72 = v66;
  v73 = v67;
  v150 = v62;
  v152 = v49;
  v157 = v59;
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA048);
  v74 = swift_allocObject();
  *(_OWORD *)(v74 + 16) = xmmword_20A5BA9A0;
  *(_QWORD *)(v74 + 32) = v72;
  *(_QWORD *)(v74 + 40) = v73;
  sub_20A459C88((uint64_t)v175, v0 + 3920, &qword_2545FA190);
  sub_20A459C88(v0 + 3920, v0 + 3928, &qword_2545FA190);
  v75 = *(_QWORD **)(v0 + 3928);
  v154 = v73;
  v159 = (_QWORD *)v74;
  if (v75)
  {
    v76 = v162;
    v77 = v171;
    if (v75[20])
    {
      v78 = v75[25];
      v79 = v75[26];
      swift_bridgeObjectRetain();
    }
    else
    {
      v78 = 0;
      v79 = 0;
    }
  }
  else
  {
    v78 = 0;
    v79 = 0;
    v76 = v162;
    v77 = v171;
  }
  if (v77)
    v80 = v140;
  else
    v80 = 0;
  if (!v77)
    v77 = 0xE000000000000000;
  v81 = v72;
  sub_20A45964C(v72, v154);
  v82 = sub_20A4D0620(v78, v79, v157, v76, v80, v77);
  *(_QWORD *)(v0 + 4176) = v82;
  *(_QWORD *)(v0 + 4184) = v83;
  v168 = v83;
  v172 = v82;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v172)
  {
    v84 = v76;
    v85 = v159;
    if (!*(_QWORD *)(v172 + 24))
      goto LABEL_43;
    v86 = *(_QWORD *)(v0 + 3976);
    v87 = *(_QWORD *)(v0 + 3968);
    v88 = *(_QWORD *)(v0 + 3960);
    swift_bridgeObjectRetain();
    sub_20A5B893C();
    v165 = sub_20A5B890C();
    v90 = v89;
    swift_bridgeObjectRelease();
    v91 = *(void (**)(uint64_t, uint64_t))(v87 + 8);
    v91(v86, v88);
    if (v90 >> 60 != 15)
    {
      v92 = v163;
      if (v168 && *(_QWORD *)(v168 + 24))
      {
        v93 = *(_QWORD *)(v0 + 3976);
        v148 = *(_QWORD *)(v0 + 3960);
        swift_bridgeObjectRetain();
        sub_20A5B893C();
        v94 = sub_20A5B890C();
        v96 = v95;
        swift_bridgeObjectRelease();
        v91(v93, v148);
        if (v96 >> 60 == 15)
        {
          sub_20A44CFC4(v165, v90);
          v92 = v163;
        }
        else
        {
          v97 = v96;
          v149 = v90;
          sub_20A45964C(v81, v154);
          v99 = v159[2];
          v98 = v159[3];
          v100 = v99 + 1;
          v92 = v163;
          if (v99 >= v98 >> 1)
            v85 = sub_20A4700B4((_QWORD *)(v98 > 1), v99 + 1, 1, v159);
          v85[2] = v100;
          v101 = &v85[2 * v99];
          v101[4] = v81;
          v101[5] = v154;
          sub_20A45964C(v94, v97);
          v102 = v85[3];
          v103 = v85;
          v104 = v99 + 2;
          if ((uint64_t)(v99 + 2) > (uint64_t)(v102 >> 1))
            v105 = sub_20A4700B4((_QWORD *)(v102 > 1), v99 + 2, 1, v103);
          else
            v105 = v103;
          v106 = *(_QWORD *)(v0 + 4016);
          v107 = *(_QWORD *)(v0 + 4008);
          v108 = v105;
          v105[2] = v104;
          v109 = &v105[2 * v100];
          v109[4] = v94;
          v109[5] = v97;
          v177 = v107;
          v178 = v106;
          *(_QWORD *)&v176[0] = 0;
          *((_QWORD *)&v176[0] + 1) = 0xE000000000000000;
          swift_bridgeObjectRetain();
          sub_20A5B8E94();
          swift_bridgeObjectRelease();
          *(_QWORD *)&v176[0] = 0x6469737420726F66;
          *((_QWORD *)&v176[0] + 1) = 0xE900000000000020;
          sub_20A5B863C();
          sub_20A5B899C();
          swift_bridgeObjectRelease();
          sub_20A5B899C();
          sub_20A5B854C();
          sub_20A5B899C();
          swift_bridgeObjectRelease();
          v110 = *(_QWORD *)&v176[0];
          LOBYTE(v176[0]) = 8;
          CoreODILogger.debug(_:category:)(v110, *((unint64_t *)&v176[0] + 1), v176);
          sub_20A44CFC4(v165, v149);
          swift_bridgeObjectRelease();
          sub_20A44CFC4(v94, v97);
          v85 = v108;
          swift_bridgeObjectRelease();
          v84 = v162;
        }
      }
      else
      {
        sub_20A44CFC4(v165, v90);
      }
    }
    else
    {
LABEL_43:
      v92 = v163;
    }
  }
  else
  {
    v84 = v76;
    v92 = v163;
    v85 = v159;
  }
  v160 = v85;
  *(_QWORD *)(v0 + 4192) = v85;
  v111 = *(_QWORD *)(v0 + 4032);
  v112 = *(_QWORD *)(v0 + 3952);
  v113 = *(_QWORD *)(v0 + 3944);
  v114 = (*(_DWORD *)(v0 + 2972) - 1) < 2;
  v115 = swift_allocObject();
  *(_QWORD *)(v0 + 4200) = v115;
  *(_QWORD *)(v115 + 16) = v112;
  v116 = *(_OWORD *)(v0 + 3264);
  *(_OWORD *)(v115 + 24) = *v175;
  *(_OWORD *)(v115 + 40) = v116;
  v117 = *(_OWORD *)(v0 + 3296);
  *(_OWORD *)(v115 + 56) = *(_OWORD *)(v0 + 3280);
  *(_OWORD *)(v115 + 72) = v117;
  *(_BYTE *)(v115 + 88) = v114;
  sub_20A459C88(v0 + 3312, v115 + 96, &qword_2545FA1A0);
  sub_20A459C88(v0 + 3376, v115 + 160, &qword_2545FA1A0);
  *(_QWORD *)(v115 + 224) = v157;
  *(_QWORD *)(v115 + 232) = v84;
  *(_QWORD *)(v115 + 240) = v150;
  *(_QWORD *)(v115 + 248) = v156;
  *(_QWORD *)(v115 + 256) = v92;
  *(_QWORD *)(v115 + 264) = v152;
  *(_QWORD *)(v115 + 272) = v172;
  *(_QWORD *)(v115 + 280) = v168;
  v118 = *(_WORD *)(v113 + 32);
  v119 = *(_OWORD *)(v113 + 16);
  *(_OWORD *)(v115 + 288) = *(_OWORD *)v113;
  *(_OWORD *)(v115 + 304) = v119;
  *(_WORD *)(v115 + 320) = v118;
  if (v174 >> 60 == 15 || !v111)
  {
    v170 = *(_DWORD *)(v0 + 2972);
    v135 = *(_QWORD *)(v0 + 4016);
    v136 = *(_QWORD *)(v0 + 4008);
    v137 = *(_QWORD *)(v0 + 3944);
    sub_20A489CF4((uint64_t)v175);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_20A489D48(v137);
    swift_bridgeObjectRelease();
    *(_QWORD *)&v176[0] = v136;
    *((_QWORD *)&v176[0] + 1) = v135;
    LOBYTE(v177) = 8;
    swift_bridgeObjectRetain();
    CoreODILogger.error(_:category:)(0xD00000000000002FLL, 0x800000020A5DCFB0, &v177);
    swift_bridgeObjectRelease();
    LOWORD(v176[0]) = 161;
    *(_QWORD *)(v0 + 4328) = DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xE000000000000000, 0, (unsigned __int16 *)v176, 0, 0, 0xD000000000000087, 0x800000020A5DCEE0, 0xD00000000000001CLL, 0x800000020A5DCFE0, 484);
    sub_20A529F30();
    *(_OWORD *)(v0 + 4336) = *(_OWORD *)(v0 + 3720);
    *(_BYTE *)(v0 + 2969) = *(_BYTE *)(v0 + 3736);
    *(_OWORD *)(v0 + 4352) = *(_OWORD *)(v0 + 3744);
    sub_20A459C88(v0 + 3744, v0 + 3904, &qword_253EB50E8);
    sub_20A48989C(v0 + 3904);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 4368) = *(_QWORD *)(v0 + 3288);
    *(_QWORD *)(v0 + 4376) = *(_QWORD *)(v0 + 3296);
    swift_bridgeObjectRetain();
    v138 = swift_task_alloc();
    *(_QWORD *)(v0 + 4384) = v138;
    *(_QWORD *)v138 = v0;
    *(_QWORD *)(v138 + 8) = sub_20A486208;
    v139 = *(_QWORD *)(v0 + 3952);
    *(_QWORD *)(v138 + 24) = 0;
    *(_QWORD *)(v138 + 32) = v139;
    *(_BYTE *)(v138 + 120) = (v170 - 1) < 2;
    *(_QWORD *)(v138 + 16) = v0 + 2976;
    return swift_task_switch();
  }
  else
  {
    v120 = *(_QWORD *)(v0 + 3944);
    swift_bridgeObjectRetain();
    sub_20A459690(v169, v174);
    sub_20A489CF4((uint64_t)v175);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_20A489D48(v120);
    if (qword_2545F9958 != -1)
      swift_once();
    v121 = *(_QWORD *)(v0 + 4088);
    v122 = *(_QWORD *)(v0 + 4080);
    v123 = *(_QWORD *)(v0 + 4032);
    v124 = *(_QWORD *)(v0 + 3944);
    v125 = *(_QWORD *)(v124 + 8);
    *(_QWORD *)(v0 + 4208) = v125;
    v126 = *(_QWORD *)(v124 + 16);
    v127 = *(_QWORD *)(v124 + 24);
    v128 = *(_BYTE *)(v124 + 32);
    sub_20A459690(v122, v121);
    swift_retain();
    v129 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 4216) = v129;
    *v129 = v0;
    v129[1] = sub_20A48594C;
    v130 = *(_QWORD *)(v0 + 4088);
    v131 = *(_QWORD *)(v0 + 4080);
    v132 = *(_QWORD *)(v0 + 4072);
    v133 = *(_QWORD *)(v0 + 4064);
    v134 = *(_QWORD *)(v0 + 4024);
    v186 = &unk_2545FA1A8;
    v187 = v115;
    v185 = v128;
    v184 = 0;
    v182 = v134;
    v183 = v123;
    v180 = v169;
    v181 = v174;
    v179 = v160;
    return sub_20A4570A8(v0 + 3440, v133, v132, v131, v130, v125, v126, v127);
  }
}

uint64_t sub_20A4846BC()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4846FC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 4104) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_20A484770()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  char *v37;
  void *v38;
  char *v39;
  char *v40;
  char *v41;
  char *v42;
  id v43;
  id v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  void (*v78)(uint64_t, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  BOOL v83;
  uint64_t v84;
  __int128 v85;
  __int128 v86;
  __int16 v87;
  __int128 v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  unint64_t v111;
  unint64_t v112;
  unint64_t v113;
  unint64_t v114;
  unint64_t v115;
  _QWORD *v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  _QWORD *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  _OWORD *v148;
  uint64_t v149;
  _QWORD *v150;
  void *v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  int v155;
  uint64_t v156;
  _QWORD *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  unint64_t v162;
  _QWORD *v163;
  uint64_t v164;
  unint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char v168;
  char v169;
  void *v170;
  uint64_t v171;

  v157 = (_QWORD *)(v0 + 2160);
  v150 = (_QWORD *)(v0 + 1616);
  v133 = v0 + 3680;
  v135 = v0 + 3840;
  v151 = (void *)(*(_QWORD *)(v0 + 3952) + 464);
  memcpy((void *)(v0 + 944), (const void *)(v0 + 1280), 0x150uLL);
  v1 = *(_QWORD *)(v0 + 1088);
  v2 = *(_QWORD *)(v0 + 1096);
  v3 = *(_QWORD *)(v0 + 1104);
  v139 = *(_QWORD *)(v0 + 1080);
  v141 = *(_QWORD *)(v0 + 1248);
  v4 = *(_QWORD *)(v0 + 1256);
  v5 = *(_QWORD *)(v0 + 1264);
  v6 = *(_QWORD *)(v0 + 1272);
  sub_20A459C88(v0 + 944, v0 + 16, qword_253EB4498);
  *(_QWORD *)(v0 + 152) = v139;
  *(_QWORD *)(v0 + 160) = v1;
  *(_OWORD *)(v0 + 168) = 0u;
  *(_OWORD *)(v0 + 184) = 0u;
  *(_OWORD *)(v0 + 200) = 0u;
  *(_OWORD *)(v0 + 216) = 0u;
  *(_QWORD *)(v0 + 232) = v2;
  *(_QWORD *)(v0 + 240) = v3;
  sub_20A459C88(v0 + 1112, v0 + 248, qword_253EB4498);
  *(_QWORD *)(v0 + 384) = v141;
  *(_QWORD *)(v0 + 392) = v4;
  *(_OWORD *)(v0 + 400) = 0u;
  *(_OWORD *)(v0 + 416) = 0u;
  *(_OWORD *)(v0 + 432) = 0u;
  *(_OWORD *)(v0 + 448) = 0u;
  *(_QWORD *)(v0 + 464) = v5;
  *(_QWORD *)(v0 + 472) = v6;
  memcpy((void *)(v0 + 480), v151, 0x1D0uLL);
  memcpy(v151, (const void *)(v0 + 16), 0x1D0uLL);
  sub_20A489A78((_QWORD *)(v0 + 944), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20A48990C);
  swift_bridgeObjectRetain();
  sub_20A459690(v2, v3);
  sub_20A489A78((_QWORD *)(v0 + 1112), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20A48990C);
  swift_bridgeObjectRetain();
  sub_20A459690(v5, v6);
  sub_20A489F38((uint64_t *)(v0 + 480));
  sub_20A48A100((uint64_t *)(v0 + 944));
  __swift_destroy_boxed_opaque_existential_1(v0 + 3760);
  v137 = *(_QWORD *)(v0 + 4104);
  v7 = *(_QWORD **)(v0 + 3952);
  sub_20A459C88((uint64_t)(v7 + 58), v0 + 2160, qword_253EB4498);
  v8 = v7[85];
  *(_QWORD *)(v0 + 4112) = v8;
  v154 = v7[86];
  *(_QWORD *)(v0 + 4120) = v154;
  v122 = v7[75];
  v152 = v7[76];
  v9 = v7[79];
  v10 = v7[81];
  v11 = v7[82];
  v12 = v7[83];
  v131 = v7[77];
  v13 = v131;
  v14 = v7[78];
  v15 = v7[80];
  v16 = v7[84];
  v130 = v14;
  if (!v14)
  {
    sub_20A459C88(v0 + 2160, v0 + 1888, qword_253EB4498);
    if (sub_20A44BE1C(v0 + 1888) == 1)
    {
      v13 = 0;
      v14 = 0;
      v9 = 0;
      v15 = 0;
      v10 = 0;
      v11 = 0;
      v12 = 0;
      v16 = 0;
    }
    else
    {
      v17 = *(unsigned __int8 *)(v0 + 1888) + 49;
      v9 = *(_QWORD *)(v0 + 1960);
      v15 = *(_QWORD *)(v0 + 1968);
      v10 = *(_QWORD *)(v0 + 1976);
      v11 = *(_QWORD *)(v0 + 1984);
      v18 = *(_QWORD *)(v0 + 1992);
      v16 = *(_QWORD *)(v0 + 2000);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v13 = v17;
      v12 = v18;
      v14 = 0xE100000000000000;
    }
  }
  v156 = v8;
  v19 = *(_QWORD **)(v0 + 3952);
  *(_QWORD *)(v0 + 3312) = v13;
  v125 = v14;
  *(_QWORD *)(v0 + 3320) = v14;
  *(_QWORD *)(v0 + 3328) = v9;
  *(_QWORD *)(v0 + 3336) = v15;
  *(_QWORD *)(v0 + 3344) = v10;
  *(_QWORD *)(v0 + 3352) = v11;
  *(_QWORD *)(v0 + 3360) = v12;
  *(_QWORD *)(v0 + 3368) = v16;
  v20 = v13;
  sub_20A459C88((uint64_t)(v19 + 87), (uint64_t)v150, qword_253EB4498);
  v21 = v19[106];
  v22 = v19[107];
  v23 = v19[112];
  v24 = v21;
  v25 = v22;
  v26 = v19[108];
  v27 = v19[109];
  v28 = v19[113];
  v29 = v19[110];
  v30 = v19[111];
  v31 = v23;
  v32 = v28;
  v126 = v20;
  if (!v22)
  {
    v33 = v21;
    sub_20A459C88((uint64_t)v150, v0 + 1752, qword_253EB4498);
    if (sub_20A44BE1C(v0 + 1752) == 1)
    {
      v24 = 0;
      v25 = 0;
      v26 = 0;
      v27 = 0;
      v29 = 0;
      v30 = 0;
      v31 = 0;
      v32 = 0;
    }
    else
    {
      v24 = *(unsigned __int8 *)(v0 + 1752) + 49;
      v34 = *(_QWORD *)(v0 + 1832);
      v144 = *(_QWORD *)(v0 + 1840);
      v146 = *(_QWORD *)(v0 + 1824);
      v30 = *(_QWORD *)(v0 + 1848);
      v142 = *(_QWORD *)(v0 + 1856);
      v35 = *(_QWORD *)(v0 + 1864);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v32 = v35;
      v31 = v142;
      v29 = v144;
      v27 = v34;
      v26 = v146;
      v25 = 0xE100000000000000;
    }
    v21 = v33;
    v22 = 0;
  }
  v127 = v21;
  v123 = v25;
  v124 = v24;
  v148 = (_OWORD *)(v0 + 3248);
  v129 = *(_QWORD *)(v0 + 4016);
  v128 = *(_QWORD *)(v0 + 4008);
  v36 = *(_QWORD **)(v0 + 3952);
  *(_QWORD *)(v0 + 3376) = v24;
  *(_QWORD *)(v0 + 3384) = v25;
  *(_QWORD *)(v0 + 3392) = v26;
  *(_QWORD *)(v0 + 3400) = v27;
  *(_QWORD *)(v0 + 3408) = v29;
  *(_QWORD *)(v0 + 3416) = v30;
  *(_QWORD *)(v0 + 3424) = v31;
  *(_QWORD *)(v0 + 3432) = v32;
  v140 = v36[104];
  v149 = v36[105];
  *(_QWORD *)(v0 + 4128) = v149;
  v37 = (char *)v36[29];
  v38 = *(void **)&v37[OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_httpSession];
  sub_20A47BD60((uint64_t)&v37[OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_logger], v135);
  v39 = (char *)objc_allocWithZone((Class)type metadata accessor for DIPAssessmentWebService());
  v40 = &v39[OBJC_IVAR____TtC17CoreODIEssentials23DIPAssessmentWebService_DUA_ORD_ENDPOINT];
  *(_QWORD *)v40 = 0x726F5F646E65732FLL;
  *((_QWORD *)v40 + 1) = 0xE900000000000064;
  v41 = &v39[OBJC_IVAR____TtC17CoreODIEssentials23DIPAssessmentWebService_DUA_TRAIN_ENDPOINT];
  *(_QWORD *)v41 = 0x746F5F646E65732FLL;
  *((_QWORD *)v41 + 1) = 0xE900000000000064;
  sub_20A47BD60(v135, v133);
  sub_20A465800(v131, v130);
  v42 = v37;
  v43 = v38;
  sub_20A465800(v127, v22);
  swift_bridgeObjectRetain();
  sub_20A489A78(v150, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20A48990C);
  sub_20A489A78(v157, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20A48990C);
  sub_20A459690(v156, v154);
  swift_bridgeObjectRetain();
  v44 = sub_20A50507C(v43, v133);

  __swift_destroy_boxed_opaque_existential_1(v135);
  v45 = (void *)v36[29];
  v36[29] = v44;

  sub_20A5B8660();
  v46 = sub_20A5B863C();
  v48 = v47;
  *(_QWORD *)(v0 + 4136) = v46;
  *(_QWORD *)(v0 + 4144) = v47;
  v49 = sub_20A5B863C();
  v51 = v50;
  *(_QWORD *)(v0 + 4152) = v50;
  v159 = v128;
  v160 = v129;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_20A5B8E94();
  swift_bridgeObjectRelease();
  v161 = 0x737420676E697308;
  v162 = 0xEB00000000206469;
  sub_20A5B863C();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  CoreODILogger.debug(_:category:)(0x737420676E697375, 0xEB00000000206469, &v161);
  swift_bridgeObjectRelease();
  v52 = v49;
  swift_bridgeObjectRelease();
  sub_20A5B8288();
  swift_allocObject();
  sub_20A5B827C();
  *(_QWORD *)(v0 + 3632) = v46;
  *(_QWORD *)(v0 + 3640) = v48;
  *(_QWORD *)(v0 + 3648) = v49;
  *(_QWORD *)(v0 + 3656) = v51;
  *(_QWORD *)(v0 + 3664) = v140;
  *(_QWORD *)(v0 + 3672) = v149;
  sub_20A489A34();
  v53 = sub_20A5B8270();
  *(_QWORD *)(v0 + 4160) = v53;
  *(_QWORD *)(v0 + 4168) = v54;
  if (v137)
  {
    v55 = *(_QWORD *)(v0 + 4088);
    v56 = *(_QWORD *)(v0 + 4080);
    v57 = *(_QWORD *)(v0 + 4072);
    v58 = *(_QWORD *)(v0 + 4064);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 3992) + 8))(*(_QWORD *)(v0 + 4000), *(_QWORD *)(v0 + 3984));
    swift_bridgeObjectRelease();
    sub_20A489A78(v157, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20A489AD4);
    swift_bridgeObjectRelease();
    sub_20A489A78(v150, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20A489AD4);
    swift_release();
    sub_20A44CFC4(v156, v154);
    sub_20A44CFC4(v56, v55);
    sub_20A4655FC(v126, v125);
    sub_20A4655FC(v124, v123);
    sub_20A44CFC4(v58, v57);
    sub_20A4899E0((uint64_t)v148);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v59 = v53;
    v60 = v54;
    v132 = v52;
    v134 = v51;
    v136 = v46;
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA048);
    v61 = swift_allocObject();
    *(_OWORD *)(v61 + 16) = xmmword_20A5BA9A0;
    *(_QWORD *)(v61 + 32) = v59;
    *(_QWORD *)(v61 + 40) = v60;
    v138 = (_QWORD *)v61;
    sub_20A459C88((uint64_t)v148, v0 + 3920, &qword_2545FA190);
    sub_20A459C88(v0 + 3920, v0 + 3928, &qword_2545FA190);
    v62 = *(_QWORD **)(v0 + 3928);
    if (v62)
    {
      v63 = v152;
      if (v62[20])
      {
        v64 = v62[25];
        v65 = v62[26];
        swift_bridgeObjectRetain();
      }
      else
      {
        v64 = 0;
        v65 = 0;
      }
    }
    else
    {
      v64 = 0;
      v65 = 0;
      v63 = v152;
    }
    if (v63)
      v66 = v122;
    else
      v66 = 0;
    if (v63)
      v67 = v63;
    else
      v67 = 0xE000000000000000;
    sub_20A45964C(v59, v60);
    v68 = sub_20A4D0620(v64, v65, v136, v48, v66, v67);
    *(_QWORD *)(v0 + 4176) = v68;
    *(_QWORD *)(v0 + 4184) = v69;
    v71 = v68;
    v158 = v69;
    v72 = v0 + 3312;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v153 = v71;
    if (v71 && *(_QWORD *)(v71 + 24))
    {
      v73 = *(_QWORD *)(v0 + 3976);
      v74 = *(_QWORD *)(v0 + 3968);
      v75 = *(_QWORD *)(v0 + 3960);
      swift_bridgeObjectRetain();
      sub_20A5B893C();
      v147 = sub_20A5B890C();
      v77 = v76;
      swift_bridgeObjectRelease();
      v78 = *(void (**)(uint64_t, uint64_t))(v74 + 8);
      v78(v73, v75);
      if (v77 >> 60 == 15)
      {
        v79 = v149;
        v72 = v0 + 3312;
      }
      else
      {
        v79 = v149;
        v72 = v0 + 3312;
        if (v158 && *(_QWORD *)(v158 + 24))
        {
          v109 = *(_QWORD *)(v0 + 3976);
          v143 = *(_QWORD *)(v0 + 3960);
          swift_bridgeObjectRetain();
          sub_20A5B893C();
          v145 = sub_20A5B890C();
          v111 = v110;
          swift_bridgeObjectRelease();
          v78(v109, v143);
          if (v111 >> 60 == 15)
          {
            sub_20A44CFC4(v147, v77);
            v79 = v149;
          }
          else
          {
            v112 = v111;
            sub_20A45964C(v59, v60);
            v114 = v138[2];
            v113 = v138[3];
            v115 = v114 + 1;
            v79 = v149;
            if (v114 >= v113 >> 1)
              v138 = sub_20A4700B4((_QWORD *)(v113 > 1), v114 + 1, 1, v138);
            v138[2] = v115;
            v116 = &v138[2 * v114];
            v116[4] = v59;
            v116[5] = v60;
            sub_20A45964C(v145, v112);
            v117 = v138[3];
            if ((uint64_t)(v114 + 2) > (uint64_t)(v117 >> 1))
              v138 = sub_20A4700B4((_QWORD *)(v117 > 1), v114 + 2, 1, v138);
            v118 = *(_QWORD *)(v0 + 4016);
            v119 = *(_QWORD *)(v0 + 4008);
            v138[2] = v114 + 2;
            v120 = &v138[2 * v115];
            v120[4] = v145;
            v120[5] = v112;
            v159 = v119;
            v160 = v118;
            v161 = 0;
            v162 = 0xE000000000000000;
            swift_bridgeObjectRetain();
            sub_20A5B8E94();
            swift_bridgeObjectRelease();
            v161 = 0x6469737420726F66;
            v162 = 0xE900000000000020;
            sub_20A5B863C();
            sub_20A5B899C();
            swift_bridgeObjectRelease();
            sub_20A5B899C();
            sub_20A5B854C();
            sub_20A5B899C();
            swift_bridgeObjectRelease();
            v121 = v161;
            LOBYTE(v161) = 8;
            CoreODILogger.debug(_:category:)(v121, v162, &v161);
            sub_20A44CFC4(v147, v77);
            swift_bridgeObjectRelease();
            sub_20A44CFC4(v145, v112);
            swift_bridgeObjectRelease();
          }
        }
        else
        {
          sub_20A44CFC4(v147, v77);
        }
      }
    }
    else
    {
      v79 = v149;
    }
    *(_QWORD *)(v0 + 4192) = v138;
    v80 = *(_QWORD *)(v0 + 4032);
    v81 = *(_QWORD *)(v0 + 3952);
    v82 = *(_QWORD *)(v0 + 3944);
    v83 = (*(_DWORD *)(v0 + 2972) - 1) < 2;
    v84 = swift_allocObject();
    *(_QWORD *)(v0 + 4200) = v84;
    *(_QWORD *)(v84 + 16) = v81;
    v85 = *(_OWORD *)(v0 + 3264);
    *(_OWORD *)(v84 + 24) = *v148;
    *(_OWORD *)(v84 + 40) = v85;
    v86 = *(_OWORD *)(v0 + 3296);
    *(_OWORD *)(v84 + 56) = *(_OWORD *)(v0 + 3280);
    *(_OWORD *)(v84 + 72) = v86;
    *(_BYTE *)(v84 + 88) = v83;
    sub_20A459C88(v72, v84 + 96, &qword_2545FA1A0);
    sub_20A459C88(v0 + 3376, v84 + 160, &qword_2545FA1A0);
    *(_QWORD *)(v84 + 224) = v136;
    *(_QWORD *)(v84 + 232) = v48;
    *(_QWORD *)(v84 + 240) = v132;
    *(_QWORD *)(v84 + 248) = v134;
    *(_QWORD *)(v84 + 256) = v140;
    *(_QWORD *)(v84 + 264) = v79;
    *(_QWORD *)(v84 + 272) = v153;
    *(_QWORD *)(v84 + 280) = v158;
    v87 = *(_WORD *)(v82 + 32);
    v88 = *(_OWORD *)(v82 + 16);
    *(_OWORD *)(v84 + 288) = *(_OWORD *)v82;
    *(_OWORD *)(v84 + 304) = v88;
    *(_WORD *)(v84 + 320) = v87;
    if (v154 >> 60 == 15 || !v80)
    {
      v155 = *(_DWORD *)(v0 + 2972);
      v104 = *(_QWORD *)(v0 + 4016);
      v105 = *(_QWORD *)(v0 + 4008);
      v106 = *(_QWORD *)(v0 + 3944);
      sub_20A489CF4((uint64_t)v148);
      swift_retain();
      swift_retain();
      swift_retain();
      sub_20A489D48(v106);
      swift_bridgeObjectRelease();
      v161 = v105;
      v162 = v104;
      LOBYTE(v159) = 8;
      swift_bridgeObjectRetain();
      CoreODILogger.error(_:category:)(0xD00000000000002FLL, 0x800000020A5DCFB0, &v159);
      swift_bridgeObjectRelease();
      LOWORD(v161) = 161;
      *(_QWORD *)(v0 + 4328) = DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xE000000000000000, 0, (unsigned __int16 *)&v161, 0, 0, 0xD000000000000087, 0x800000020A5DCEE0, 0xD00000000000001CLL, 0x800000020A5DCFE0, 484);
      sub_20A529F30();
      *(_OWORD *)(v0 + 4336) = *(_OWORD *)(v0 + 3720);
      *(_BYTE *)(v0 + 2969) = *(_BYTE *)(v0 + 3736);
      *(_OWORD *)(v0 + 4352) = *(_OWORD *)(v0 + 3744);
      sub_20A459C88(v0 + 3744, v0 + 3904, &qword_253EB50E8);
      sub_20A48989C(v0 + 3904);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 4368) = *(_QWORD *)(v0 + 3288);
      *(_QWORD *)(v0 + 4376) = *(_QWORD *)(v0 + 3296);
      swift_bridgeObjectRetain();
      v107 = swift_task_alloc();
      *(_QWORD *)(v0 + 4384) = v107;
      *(_QWORD *)v107 = v0;
      *(_QWORD *)(v107 + 8) = sub_20A486208;
      v108 = *(_QWORD *)(v0 + 3952);
      *(_QWORD *)(v107 + 24) = 0;
      *(_QWORD *)(v107 + 32) = v108;
      *(_BYTE *)(v107 + 120) = (v155 - 1) < 2;
      *(_QWORD *)(v107 + 16) = v0 + 2976;
      return swift_task_switch();
    }
    else
    {
      v89 = *(_QWORD *)(v0 + 3944);
      swift_bridgeObjectRetain();
      sub_20A459690(v156, v154);
      sub_20A489CF4((uint64_t)v148);
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_20A489D48(v89);
      if (qword_2545F9958 != -1)
        swift_once();
      v90 = *(_QWORD *)(v0 + 4088);
      v91 = *(_QWORD *)(v0 + 4080);
      v92 = *(_QWORD *)(v0 + 4032);
      v93 = *(_QWORD *)(v0 + 3944);
      v94 = *(_QWORD *)(v93 + 8);
      *(_QWORD *)(v0 + 4208) = v94;
      v95 = *(_QWORD *)(v93 + 16);
      v96 = *(_QWORD *)(v93 + 24);
      v97 = *(_BYTE *)(v93 + 32);
      sub_20A459690(v91, v90);
      swift_retain();
      v98 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 4216) = v98;
      *v98 = v0;
      v98[1] = sub_20A48594C;
      v99 = *(_QWORD *)(v0 + 4088);
      v100 = *(_QWORD *)(v0 + 4080);
      v101 = *(_QWORD *)(v0 + 4072);
      v102 = *(_QWORD *)(v0 + 4064);
      v103 = *(_QWORD *)(v0 + 4024);
      v170 = &unk_2545FA1A8;
      v171 = v84;
      v169 = v97;
      v168 = 0;
      v166 = v103;
      v167 = v92;
      v164 = v156;
      v165 = v154;
      v163 = v138;
      return sub_20A4570A8(v0 + 3440, v102, v101, v100, v99, v94, v95, v96);
    }
  }
}

uint64_t sub_20A4858CC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 4072);
  v2 = *(_QWORD *)(v0 + 4064);
  sub_20A44CFC4(*(_QWORD *)(v0 + 4080), *(_QWORD *)(v0 + 4088));
  sub_20A44CFC4(v2, v1);
  sub_20A4899E0(v0 + 3248);
  __swift_destroy_boxed_opaque_existential_1(v0 + 3760);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A48594C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 4224) = v0;
  swift_task_dealloc();
  if (v0)
  {
    v3 = v2[511];
    v4 = v2[510];
    swift_bridgeObjectRelease();
    sub_20A489A78(v2 + 270, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20A489AD4);
    sub_20A489A78(v2 + 202, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20A489AD4);
    swift_release();
    swift_bridgeObjectRelease();
    sub_20A44CFC4(v4, v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = v2[511];
    v6 = v2[510];
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_20A44CFC4(v6, v5);
  }
  return swift_task_switch();
}

uint64_t sub_20A485AA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  BOOL v8;
  int v9;
  uint64_t v10;

  v1 = 0;
  v2 = 0;
  *(_QWORD *)(v0 + 4232) = sub_20A5B854C();
  *(_QWORD *)(v0 + 4240) = v3;
  v4 = *(_QWORD *)(v0 + 3480);
  if (v4 >> 60 != 15)
  {
    v5 = *(_QWORD *)(v0 + 3472);
    sub_20A45964C(v5, *(_QWORD *)(v0 + 3480));
    v1 = sub_20A5B854C();
    v2 = v6;
    sub_20A44CFC4(v5, v4);
  }
  *(_QWORD *)(v0 + 4256) = v2;
  *(_QWORD *)(v0 + 4248) = v1;
  v7 = *(_DWORD *)(v0 + 3488);
  v8 = __CFADD__(v7, 1);
  v9 = v7 + 1;
  if (v8)
  {
    __break(1u);
    goto LABEL_7;
  }
  *(_DWORD *)(v0 + 3108) = v9;
  *(_QWORD *)(v0 + 4264) = *(_QWORD *)(v0 + 3288);
  *(_QWORD *)(v0 + 4272) = *(_QWORD *)(v0 + 3296);
  v10 = qword_2545F9978;
  swift_bridgeObjectRetain();
  if (v10 != -1)
LABEL_7:
    swift_once();
  *(_QWORD *)(v0 + 4280) = qword_25460FF78;
  return swift_task_switch();
}

uint64_t sub_20A485BA4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;

  v1 = v0[535];
  v2 = *(_QWORD *)(v1 + 120);
  if (v2)
  {
    v3 = *(_QWORD *)(v1 + 112);
    v0[540] = v2;
    v0[539] = v3;
    swift_bridgeObjectRetain();
    return swift_task_switch();
  }
  else
  {
    v5 = (_QWORD *)swift_task_alloc();
    v0[536] = v5;
    *v5 = v0;
    v5[1] = sub_20A485C28;
    return sub_20A4AAD6C();
  }
}

uint64_t sub_20A485C28(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 4296) = a1;
  *(_QWORD *)(v3 + 4304) = a2;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A485C8C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[538];
  v2 = v0[535];
  *(_QWORD *)(v2 + 112) = v0[537];
  *(_QWORD *)(v2 + 120) = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v3 = v0[537];
  v0[540] = v0[538];
  v0[539] = v3;
  return swift_task_switch();
}

uint64_t sub_20A485CF0()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  Swift::String v21;
  int v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;

  v58 = v0 + 2024;
  v60 = v0 + 2160;
  v1 = (_OWORD *)(v0 + 3112);
  v2 = *(_QWORD *)(v0 + 4176);
  v3 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(v0 + 3952) + 232)
                 + OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_conversationID);
  v5 = *v3;
  v4 = v3[1];
  v6 = qword_253EB6228;
  swift_retain();
  swift_bridgeObjectRetain();
  if (v6 != -1)
  {
    swift_once();
    v2 = *(_QWORD *)(v0 + 4176);
  }
  v7 = *(_QWORD *)(v0 + 4320);
  v8 = *(_QWORD *)(v0 + 4312);
  v9 = *(_OWORD *)(v0 + 4264);
  v10 = *(unsigned int *)(v0 + 3108);
  v11 = *(_QWORD *)(v0 + 4208);
  v12 = *(_QWORD *)(v0 + 4144);
  v13 = *(_QWORD *)(v0 + 4136);
  v14 = (*(_DWORD *)(v0 + 2972) - 1) < 2;
  v15 = qword_2546103B8;
  v16 = qword_2546103C0;
  *v1 = *(_OWORD *)(v0 + 4024);
  *(_OWORD *)(v0 + 3128) = v9;
  *(_QWORD *)(v0 + 3144) = v8;
  *(_QWORD *)(v0 + 3152) = v7;
  *(_QWORD *)(v0 + 3160) = v5;
  *(_QWORD *)(v0 + 3168) = v4;
  *(_QWORD *)(v0 + 3176) = v2;
  *(_QWORD *)(v0 + 3184) = v10;
  *(_BYTE *)(v0 + 3192) = 0;
  *(_QWORD *)(v0 + 3200) = 0;
  *(_QWORD *)(v0 + 3208) = v15;
  *(_QWORD *)(v0 + 3216) = v16;
  *(_BYTE *)(v0 + 3224) = -47;
  *(_QWORD *)(v0 + 3232) = 0;
  *(_BYTE *)(v0 + 3240) = v14;
  v61 = 14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F78);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_20A5BDA90;
  *(_QWORD *)(v17 + 32) = 0x73676E69646E6962;
  *(_QWORD *)(v17 + 40) = 0xE800000000000000;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA1B0);
  *(_QWORD *)(v17 + 48) = v11;
  *(_QWORD *)(v17 + 72) = v18;
  *(_QWORD *)(v17 + 80) = 1684632436;
  v19 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v17 + 88) = 0xE400000000000000;
  *(_QWORD *)(v17 + 96) = v13;
  *(_QWORD *)(v17 + 104) = v12;
  *(_QWORD *)(v17 + 120) = v19;
  *(_QWORD *)(v17 + 128) = 0xD000000000000011;
  *(_QWORD *)(v17 + 168) = v19;
  *(_QWORD *)(v17 + 136) = 0x800000020A5DA8B0;
  *(_QWORD *)(v17 + 144) = v5;
  *(_QWORD *)(v17 + 152) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v20 = sub_20A469C58(v17);
  v21._countAndFlagsBits = 0xD000000000000014;
  v21._object = (void *)0x800000020A5DD000;
  CoreODILogger.milestone(tag:description:dictionary:isSensitive:)((CoreODIEssentials::MilestoneTag)&v61, v21, (Swift::OpaquePointer)v20, 1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_20A459C88(v60, v58, qword_253EB4498);
  v22 = sub_20A44BE1C(v58);
  v23 = 0;
  v24 = 0;
  v25 = 0;
  v59 = 0;
  v26 = 0;
  v27 = 0;
  v28 = 0;
  v29 = 0;
  if (v22 != 1)
  {
    v23 = *(unsigned __int8 *)(v0 + 2024) + 49;
    v25 = *(_QWORD *)(v0 + 2096);
    v26 = *(_QWORD *)(v0 + 2112);
    v27 = *(_QWORD *)(v0 + 2120);
    v28 = *(_QWORD *)(v0 + 2128);
    v29 = *(_QWORD *)(v0 + 2136);
    v59 = *(_QWORD *)(v0 + 2104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v24 = 0xE100000000000000;
  }
  v43 = v26;
  v44 = v24;
  v45 = *(_QWORD *)(v0 + 4264);
  v46 = *(_QWORD *)(v0 + 4272);
  v41 = *(_QWORD *)(v0 + 4248);
  v42 = *(_QWORD *)(v0 + 4256);
  v40 = *(_OWORD *)(v0 + 4232);
  v56 = *(_QWORD *)(v0 + 4160);
  v57 = *(_QWORD *)(v0 + 4168);
  v30 = *(_QWORD *)(v0 + 4144);
  v31 = *(_QWORD *)(v0 + 4136);
  v51 = *(_QWORD *)(v0 + 4080);
  v52 = *(_QWORD *)(v0 + 4088);
  v49 = *(_QWORD *)(v0 + 4120);
  v50 = *(_QWORD *)(v0 + 4072);
  v47 = *(_QWORD *)(v0 + 4112);
  v48 = *(_QWORD *)(v0 + 4064);
  v55 = *(_QWORD *)(v0 + 4000);
  v53 = *(_QWORD *)(v0 + 3992);
  v54 = *(_QWORD *)(v0 + 3984);
  v32 = *(_QWORD *)(v0 + 3936);
  sub_20A459C88(v60, v32, qword_253EB4498);
  sub_20A459C88(v0 + 1616, v32 + 136, qword_253EB4498);
  *(_QWORD *)(v32 + 272) = v31;
  *(_QWORD *)(v32 + 280) = v30;
  *(_OWORD *)(v32 + 288) = v40;
  *(_QWORD *)(v32 + 304) = v41;
  *(_QWORD *)(v32 + 312) = v42;
  *(_OWORD *)(v32 + 320) = 0u;
  *(_OWORD *)(v32 + 336) = 0u;
  *(_QWORD *)(v32 + 352) = 1;
  *(_QWORD *)(v32 + 360) = v23;
  *(_QWORD *)(v32 + 368) = v44;
  *(_QWORD *)(v32 + 376) = v25;
  *(_QWORD *)(v32 + 384) = v59;
  *(_QWORD *)(v32 + 392) = v43;
  *(_QWORD *)(v32 + 400) = v27;
  *(_QWORD *)(v32 + 408) = v28;
  *(_QWORD *)(v32 + 416) = v29;
  *(_QWORD *)(v32 + 424) = v45;
  *(_QWORD *)(v32 + 432) = v46;
  *(_OWORD *)(v32 + 440) = *v1;
  v33 = *(_OWORD *)(v0 + 3128);
  v34 = *(_OWORD *)(v0 + 3144);
  v35 = *(_OWORD *)(v0 + 3176);
  *(_OWORD *)(v32 + 488) = *(_OWORD *)(v0 + 3160);
  *(_OWORD *)(v32 + 504) = v35;
  *(_OWORD *)(v32 + 456) = v33;
  *(_OWORD *)(v32 + 472) = v34;
  v36 = *(_OWORD *)(v0 + 3192);
  v37 = *(_OWORD *)(v0 + 3208);
  v38 = *(_OWORD *)(v0 + 3224);
  *(_BYTE *)(v32 + 568) = *(_BYTE *)(v0 + 3240);
  *(_OWORD *)(v32 + 536) = v37;
  *(_OWORD *)(v32 + 552) = v38;
  *(_OWORD *)(v32 + 520) = v36;
  type metadata accessor for ODNAssessmentResult();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_20A489D88(v0 + 3112);
  sub_20A5B8F48();
  sub_20A44CFC4(v47, v49);
  sub_20A44CFC4(v48, v50);
  sub_20A4899E0(v0 + 3248);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_20A489E0C((uint64_t *)(v0 + 3440));
  sub_20A489E68(v0 + 3112);
  swift_release();
  sub_20A44CFC4(v51, v52);
  sub_20A44CFC4(v47, v49);
  swift_release();
  swift_release();
  sub_20A44BD90(v56, v57);
  (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v55, v54);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A486208()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A486260()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;

  v18 = *(_QWORD *)(v0 + 4368);
  v19 = *(_QWORD *)(v0 + 4376);
  v1 = *(_QWORD *)(v0 + 4360);
  v2 = *(_QWORD *)(v0 + 4352);
  v3 = *(unsigned __int8 *)(v0 + 2969);
  v4 = *(_QWORD *)(v0 + 4344);
  v5 = *(_QWORD *)(v0 + 4336);
  v22 = *(id *)(v0 + 4328);
  v30 = *(_QWORD *)(v0 + 4160);
  v31 = *(_QWORD *)(v0 + 4168);
  v26 = *(_QWORD *)(v0 + 4120);
  v25 = *(_QWORD *)(v0 + 4112);
  v23 = *(_QWORD *)(v0 + 4080);
  v24 = *(_QWORD *)(v0 + 4088);
  v20 = *(_QWORD *)(v0 + 4064);
  v21 = *(_QWORD *)(v0 + 4072);
  v29 = *(_QWORD *)(v0 + 4000);
  v27 = *(_QWORD *)(v0 + 3992);
  v28 = *(_QWORD *)(v0 + 3984);
  v6 = *(_QWORD *)(v0 + 3936);
  v7 = *(_OWORD *)(v0 + 3056);
  v8 = *(_OWORD *)(v0 + 3088);
  *(_OWORD *)(v0 + 2936) = *(_OWORD *)(v0 + 3072);
  *(_OWORD *)(v0 + 2952) = v8;
  *(_BYTE *)(v0 + 2968) = *(_BYTE *)(v0 + 3104);
  v9 = *(_OWORD *)(v0 + 2992);
  v10 = *(_OWORD *)(v0 + 3024);
  *(_OWORD *)(v0 + 2872) = *(_OWORD *)(v0 + 3008);
  *(_OWORD *)(v0 + 2888) = v10;
  *(_OWORD *)(v0 + 2904) = *(_OWORD *)(v0 + 3040);
  *(_OWORD *)(v0 + 2920) = v7;
  *(_OWORD *)(v0 + 2840) = *(_OWORD *)(v0 + 2976);
  *(_OWORD *)(v0 + 2856) = v9;
  sub_20A459C88(v0 + 2160, v6, qword_253EB4498);
  sub_20A459C88(v0 + 1616, v6 + 136, qword_253EB4498);
  *(_OWORD *)(v6 + 272) = 0u;
  *(_OWORD *)(v6 + 288) = 0u;
  *(_OWORD *)(v6 + 304) = 0u;
  *(_QWORD *)(v6 + 320) = v5;
  *(_QWORD *)(v6 + 328) = v4;
  *(_QWORD *)(v6 + 336) = v3;
  *(_QWORD *)(v6 + 344) = v2;
  *(_QWORD *)(v6 + 352) = v1;
  *(_OWORD *)(v6 + 360) = 0u;
  *(_OWORD *)(v6 + 376) = 0u;
  *(_OWORD *)(v6 + 392) = 0u;
  *(_OWORD *)(v6 + 408) = 0u;
  *(_QWORD *)(v6 + 424) = v18;
  *(_QWORD *)(v6 + 432) = v19;
  *(_OWORD *)(v6 + 440) = *(_OWORD *)(v0 + 2840);
  v11 = *(_OWORD *)(v0 + 2904);
  v13 = *(_OWORD *)(v0 + 2856);
  v12 = *(_OWORD *)(v0 + 2872);
  *(_OWORD *)(v6 + 488) = *(_OWORD *)(v0 + 2888);
  *(_OWORD *)(v6 + 504) = v11;
  *(_OWORD *)(v6 + 456) = v13;
  *(_OWORD *)(v6 + 472) = v12;
  v15 = *(_OWORD *)(v0 + 2936);
  v14 = *(_OWORD *)(v0 + 2952);
  v16 = *(_OWORD *)(v0 + 2920);
  *(_BYTE *)(v6 + 568) = *(_BYTE *)(v0 + 2968);
  *(_OWORD *)(v6 + 536) = v15;
  *(_OWORD *)(v6 + 552) = v14;
  *(_OWORD *)(v6 + 520) = v16;
  type metadata accessor for ODNAssessmentResult();
  sub_20A5B8F48();
  sub_20A44CFC4(v20, v21);

  sub_20A4899E0(v0 + 3248);
  swift_release();
  sub_20A44CFC4(v23, v24);
  sub_20A44CFC4(v25, v26);
  swift_release();
  swift_release();
  sub_20A44BD90(v30, v31);
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v29, v28);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A486490()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;

  v11 = *(_QWORD *)(v0 + 4160);
  v12 = *(_QWORD *)(v0 + 4168);
  v1 = *(_QWORD *)(v0 + 4120);
  v2 = *(_QWORD *)(v0 + 4112);
  v3 = *(_QWORD *)(v0 + 4088);
  v4 = *(_QWORD *)(v0 + 4080);
  v5 = *(_QWORD *)(v0 + 4072);
  v6 = *(_QWORD *)(v0 + 4064);
  v10 = *(_QWORD *)(v0 + 4000);
  v8 = *(_QWORD *)(v0 + 3992);
  v9 = *(_QWORD *)(v0 + 3984);
  sub_20A44CFC4(v2, v1);
  sub_20A44CFC4(v6, v5);
  swift_release();
  sub_20A44CFC4(v4, v3);
  sub_20A44CFC4(v2, v1);
  swift_release();
  sub_20A4899E0(v0 + 3248);
  swift_release();
  sub_20A44BD90(v11, v12);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v10, v9);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4865A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[51] = a2;
  v3[52] = v2;
  v3[50] = a1;
  return swift_task_switch();
}

uint64_t sub_20A4865BC()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _BOOL8 v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  unsigned __int8 v28;
  unsigned __int8 v29;

  v1 = *(void **)(v0 + 408);
  *(_QWORD *)(v0 + 384) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52D0);
  if (swift_dynamicCast())
  {
    v3 = *(void **)(v0 + 392);
    *(_QWORD *)(v0 + 424) = v3;
    if (v3)
    {
      if (v3 == (void *)1)
      {
        v4 = *(_QWORD *)(v0 + 416);
        v28 = 106;
        __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5290);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_20A5BA9A0;
        *(_BYTE *)(inited + 32) = 0;
        v7 = *(_QWORD *)(v4 + 384);
        v6 = *(_QWORD *)(v4 + 392);
        *(_QWORD *)(inited + 64) = MEMORY[0x24BEE0D00];
        *(_QWORD *)(inited + 40) = v7;
        *(_QWORD *)(inited + 48) = v6;
        swift_bridgeObjectRetain();
        v8 = sub_20A469DA8(inited);
        ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xE000000000000000, 0, &v28, 0, v8, 0xD000000000000087, 0x800000020A5DCEE0, 0xD000000000000019, 0x800000020A5DCF70, 511);
        *(_QWORD *)(v0 + 456) = v9;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_20A529F30();
        sub_20A459C88(v0 + 304, v0 + 352, &qword_253EB50E8);
        sub_20A48989C(v0 + 352);
        swift_bridgeObjectRelease();
        v10 = MKBGetDeviceLockState() - 1 < 2;
        v11 = swift_task_alloc();
        *(_QWORD *)(v0 + 464) = v11;
        *(_QWORD *)v11 = v0;
        *(_QWORD *)(v11 + 8) = sub_20A486BD8;
        v12 = *(_QWORD *)(v0 + 400);
        *(_QWORD *)(v11 + 600) = *(_QWORD *)(v0 + 416);
        *(_BYTE *)(v11 + 417) = v10;
        *(_QWORD *)(v11 + 592) = 0;
        *(_QWORD *)(v11 + 584) = v0 + 280;
        *(_QWORD *)(v11 + 576) = v12;
        v13 = *(_OWORD *)(v0 + 280);
        *(_BYTE *)(v11 + 418) = *(_BYTE *)(v0 + 296);
        v14 = *(_OWORD *)(v0 + 304);
      }
      else
      {
        sub_20A4898EC(v3);
        swift_bridgeObjectRetain();
        sub_20A529F30();
        sub_20A459C88(v0 + 224, v0 + 336, &qword_253EB50E8);
        sub_20A48989C(v0 + 336);
        swift_bridgeObjectRelease();
        v25 = MKBGetDeviceLockState() - 1 < 2;
        v11 = swift_task_alloc();
        *(_QWORD *)(v0 + 432) = v11;
        *(_QWORD *)v11 = v0;
        *(_QWORD *)(v11 + 8) = sub_20A486AA4;
        v26 = *(_QWORD *)(v0 + 400);
        *(_QWORD *)(v11 + 600) = *(_QWORD *)(v0 + 416);
        *(_BYTE *)(v11 + 417) = v25;
        *(_QWORD *)(v11 + 592) = 0;
        *(_QWORD *)(v11 + 584) = v0 + 200;
        *(_QWORD *)(v11 + 576) = v26;
        v13 = *(_OWORD *)(v0 + 200);
        *(_BYTE *)(v11 + 418) = *(_BYTE *)(v0 + 216);
        v14 = *(_OWORD *)(v0 + 224);
      }
    }
    else
    {
      v17 = *(_QWORD *)(v0 + 416);
      v29 = 103;
      __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5290);
      v18 = swift_initStackObject();
      *(_OWORD *)(v18 + 16) = xmmword_20A5BA9A0;
      *(_BYTE *)(v18 + 32) = 0;
      v20 = *(_QWORD *)(v17 + 384);
      v19 = *(_QWORD *)(v17 + 392);
      *(_QWORD *)(v18 + 64) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v18 + 40) = v20;
      *(_QWORD *)(v18 + 48) = v19;
      swift_bridgeObjectRetain();
      v21 = sub_20A469DA8(v18);
      ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xE000000000000000, 0, &v29, 0, v21, 0xD000000000000087, 0x800000020A5DCEE0, 0xD000000000000019, 0x800000020A5DCF70, 507);
      *(_QWORD *)(v0 + 440) = v22;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_20A529F30();
      sub_20A459C88(v0 + 184, v0 + 320, &qword_253EB50E8);
      sub_20A48989C(v0 + 320);
      swift_bridgeObjectRelease();
      v23 = MKBGetDeviceLockState() - 1 < 2;
      v11 = swift_task_alloc();
      *(_QWORD *)(v0 + 448) = v11;
      *(_QWORD *)v11 = v0;
      *(_QWORD *)(v11 + 8) = sub_20A486B44;
      v24 = *(_QWORD *)(v0 + 400);
      *(_QWORD *)(v11 + 600) = *(_QWORD *)(v0 + 416);
      *(_BYTE *)(v11 + 417) = v23;
      *(_QWORD *)(v11 + 592) = 0;
      *(_QWORD *)(v11 + 584) = v0 + 160;
      *(_QWORD *)(v11 + 576) = v24;
      v13 = *(_OWORD *)(v0 + 160);
      *(_BYTE *)(v11 + 418) = *(_BYTE *)(v0 + 176);
      v14 = *(_OWORD *)(v0 + 184);
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_20A529F30();
    sub_20A459C88(v0 + 264, v0 + 368, &qword_253EB50E8);
    sub_20A48989C(v0 + 368);
    swift_bridgeObjectRelease();
    v15 = MKBGetDeviceLockState() - 1 < 2;
    v11 = swift_task_alloc();
    *(_QWORD *)(v0 + 472) = v11;
    *(_QWORD *)v11 = v0;
    *(_QWORD *)(v11 + 8) = sub_20A486C6C;
    v16 = *(_QWORD *)(v0 + 400);
    *(_QWORD *)(v11 + 600) = *(_QWORD *)(v0 + 416);
    *(_BYTE *)(v11 + 417) = v15;
    *(_QWORD *)(v11 + 592) = 0;
    *(_QWORD *)(v11 + 584) = v0 + 240;
    *(_QWORD *)(v11 + 576) = v16;
    v13 = *(_OWORD *)(v0 + 240);
    *(_BYTE *)(v11 + 418) = *(_BYTE *)(v0 + 256);
    v14 = *(_OWORD *)(v0 + 264);
  }
  *(_OWORD *)(v11 + 608) = v13;
  *(_OWORD *)(v11 + 624) = v14;
  return swift_task_switch();
}

uint64_t sub_20A486AA4()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *v0 + 200;
  swift_task_dealloc();
  sub_20A4898C4(v1);
  return swift_task_switch();
}

uint64_t sub_20A486B08()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 424);
  sub_20A4898FC(v1);
  sub_20A4898FC(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A486B44()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *v0 + 160;
  swift_task_dealloc();
  sub_20A4898C4(v1);
  return swift_task_switch();
}

uint64_t sub_20A486BA8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A486BD8()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *v0 + 280;
  swift_task_dealloc();
  sub_20A4898C4(v1);
  return swift_task_switch();
}

uint64_t sub_20A486C3C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A486C6C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *v0 + 240;
  v3 = *v0;
  swift_task_dealloc();
  sub_20A4898C4(v1);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_20A486CC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[66] = v2;
  v3[65] = a2;
  v3[64] = a1;
  return swift_task_switch();
}

uint64_t sub_20A486CE0()
{
  uint64_t v0;
  _QWORD *v1;

  if (qword_253EB4A90 != -1)
    swift_once();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 536) = v1;
  *v1 = v0;
  v1[1] = sub_20A486D60;
  return sub_20A4E0CC4(v0 + 264);
}

uint64_t sub_20A486D60()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A486DB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v1 = *(_QWORD *)(v0 + 520);
  v2 = *(_QWORD *)(v0 + 512);
  *(_BYTE *)(v0 + 256) = *(_BYTE *)(v0 + 504);
  v3 = *(_OWORD *)(v0 + 472);
  *(_OWORD *)(v0 + 208) = *(_OWORD *)(v0 + 456);
  *(_OWORD *)(v0 + 224) = v3;
  *(_OWORD *)(v0 + 240) = *(_OWORD *)(v0 + 488);
  v4 = *(_OWORD *)(v0 + 408);
  *(_OWORD *)(v0 + 144) = *(_OWORD *)(v0 + 392);
  *(_OWORD *)(v0 + 160) = v4;
  v5 = *(_OWORD *)(v0 + 440);
  *(_OWORD *)(v0 + 176) = *(_OWORD *)(v0 + 424);
  *(_OWORD *)(v0 + 192) = v5;
  v6 = *(_OWORD *)(v0 + 344);
  *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 328);
  *(_OWORD *)(v0 + 96) = v6;
  v7 = *(_OWORD *)(v0 + 376);
  *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 360);
  *(_OWORD *)(v0 + 128) = v7;
  v8 = *(_OWORD *)(v0 + 280);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 264);
  *(_OWORD *)(v0 + 32) = v8;
  v9 = *(_OWORD *)(v0 + 312);
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 296);
  *(_OWORD *)(v0 + 64) = v9;
  v15 = v2;
  v16 = v1;
  swift_bridgeObjectRetain();
  sub_20A5B899C();
  v10 = *(_QWORD *)(v0 + 248);
  if (v10)
  {
    if (*(_QWORD *)(v10 + 16) && (v11 = sub_20A47094C(v15, v16), (v12 & 1) != 0))
    {
      v13 = *(unsigned __int8 *)(*(_QWORD *)(v10 + 56) + v11);
      sub_20A480614((_QWORD *)(v0 + 16));
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(uint64_t))(v0 + 8))(v13);
    }
    else
    {
      sub_20A480614((_QWORD *)(v0 + 16));
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_20A480614((_QWORD *)(v0 + 16));
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
}

uint64_t sub_20A486ED4(uint64_t a1, __int128 *a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;

  *(_QWORD *)(v5 + 600) = v4;
  *(_BYTE *)(v5 + 417) = a4;
  *(_QWORD *)(v5 + 592) = a3;
  *(_QWORD *)(v5 + 584) = a2;
  *(_QWORD *)(v5 + 576) = a1;
  v6 = *a2;
  *(_BYTE *)(v5 + 418) = *((_BYTE *)a2 + 16);
  v7 = *(__int128 *)((char *)a2 + 24);
  *(_OWORD *)(v5 + 608) = v6;
  *(_OWORD *)(v5 + 624) = v7;
  return swift_task_switch();
}

uint64_t sub_20A486F10()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[75];
  v0[80] = *(_QWORD *)(v1 + 448);
  v0[81] = *(_QWORD *)(v1 + 456);
  swift_bridgeObjectRetain();
  return swift_task_switch();
}

uint64_t sub_20A486F5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v1 = *(_QWORD *)(v0 + 600);
  sub_20A459C88(v1 + 464, v0 + 152, qword_253EB4498);
  sub_20A489A78((_QWORD *)(v0 + 152), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20A48990C);
  sub_20A459C88(v1 + 696, v0 + 16, qword_253EB4498);
  sub_20A489A78((_QWORD *)(v0 + 16), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20A48990C);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 656) = v2;
  *(_QWORD *)v2 = v0;
  *(_QWORD *)(v2 + 8) = sub_20A487030;
  v3 = *(_QWORD *)(v0 + 600);
  v4 = *(_BYTE *)(v0 + 417);
  *(_QWORD *)(v2 + 24) = *(_QWORD *)(v0 + 592);
  *(_QWORD *)(v2 + 32) = v3;
  *(_BYTE *)(v2 + 120) = v4;
  *(_QWORD *)(v2 + 16) = v0 + 424;
  return swift_task_switch();
}

uint64_t sub_20A487030()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A487084()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v18 = *(_QWORD *)(v0 + 640);
  v19 = *(_QWORD *)(v0 + 648);
  v1 = *(_QWORD *)(v0 + 632);
  v2 = *(_QWORD *)(v0 + 624);
  v3 = *(_QWORD *)(v0 + 616);
  v4 = *(_QWORD *)(v0 + 608);
  v5 = *(_QWORD *)(v0 + 576);
  v6 = *(_BYTE *)(v0 + 418) & 1;
  v20 = *(_QWORD *)(v0 + 584) + 24;
  *(_BYTE *)(v0 + 416) = *(_BYTE *)(v0 + 552);
  v7 = *(_OWORD *)(v0 + 536);
  *(_OWORD *)(v0 + 384) = *(_OWORD *)(v0 + 520);
  *(_OWORD *)(v0 + 400) = v7;
  v8 = *(_OWORD *)(v0 + 472);
  *(_OWORD *)(v0 + 320) = *(_OWORD *)(v0 + 456);
  *(_OWORD *)(v0 + 336) = v8;
  v9 = *(_OWORD *)(v0 + 504);
  *(_OWORD *)(v0 + 352) = *(_OWORD *)(v0 + 488);
  *(_OWORD *)(v0 + 368) = v9;
  v10 = *(_OWORD *)(v0 + 440);
  *(_OWORD *)(v0 + 288) = *(_OWORD *)(v0 + 424);
  *(_OWORD *)(v0 + 304) = v10;
  sub_20A459C88(v0 + 152, v5, qword_253EB4498);
  sub_20A459C88(v0 + 16, v5 + 136, qword_253EB4498);
  *(_OWORD *)(v5 + 272) = 0u;
  *(_OWORD *)(v5 + 288) = 0u;
  *(_OWORD *)(v5 + 304) = 0u;
  *(_QWORD *)(v5 + 320) = v4;
  *(_QWORD *)(v5 + 328) = v3;
  *(_QWORD *)(v5 + 336) = v6;
  *(_QWORD *)(v5 + 344) = v2;
  *(_QWORD *)(v5 + 352) = v1;
  *(_OWORD *)(v5 + 360) = 0u;
  *(_OWORD *)(v5 + 376) = 0u;
  *(_OWORD *)(v5 + 392) = 0u;
  *(_OWORD *)(v5 + 408) = 0u;
  *(_QWORD *)(v5 + 424) = v18;
  *(_QWORD *)(v5 + 432) = v19;
  *(_OWORD *)(v5 + 440) = *(_OWORD *)(v0 + 288);
  v11 = *(_OWORD *)(v0 + 352);
  v13 = *(_OWORD *)(v0 + 304);
  v12 = *(_OWORD *)(v0 + 320);
  *(_OWORD *)(v5 + 488) = *(_OWORD *)(v0 + 336);
  *(_OWORD *)(v5 + 504) = v11;
  *(_OWORD *)(v5 + 456) = v13;
  *(_OWORD *)(v5 + 472) = v12;
  v15 = *(_OWORD *)(v0 + 384);
  v14 = *(_OWORD *)(v0 + 400);
  v16 = *(_OWORD *)(v0 + 368);
  *(_BYTE *)(v5 + 568) = *(_BYTE *)(v0 + 416);
  *(_OWORD *)(v5 + 536) = v15;
  *(_OWORD *)(v5 + 552) = v14;
  *(_OWORD *)(v5 + 520) = v16;
  type metadata accessor for ODNAssessmentResult();
  sub_20A459C88(v20, v0 + 560, &qword_253EB50E8);
  sub_20A48989C(v0 + 560);
  sub_20A5B8F48();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4871F4(unint64_t a1)
{
  uint64_t v1;
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  char v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (a1 >> 62)
  {
    if (a1 >> 62 != 1)
      __asm { BR              X10 }
    LOBYTE(v14) = 0;
    v3 = (id)(a1 & 0x3FFFFFFFFFFFFFFFLL);
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000019, 0x800000020A5DD1A0, (char *)(a1 & 0x3FFFFFFFFFFFFFFFLL), (unsigned __int8 *)&v14, 0, 0, 0xD000000000000087, 0x800000020A5DCEE0, 0xD00000000000001DLL, 0x800000020A5DD1C0, 674);
    v5 = v4;
    v6 = *(_QWORD *)(v1 + 160);
    v14 = *(_QWORD *)(v1 + 152);
    v15 = v6;
    v12 = 0;
    v13 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_20A5B8E94();
    sub_20A5B899C();
    swift_getErrorValue();
    sub_20A5B923C();
    sub_20A5B899C();
    swift_bridgeObjectRelease();
    v7 = 12;
  }
  else
  {
    LOBYTE(v14) = 0;
    v8 = (id)a1;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000019, 0x800000020A5DD220, (char *)a1, (unsigned __int8 *)&v14, 0, 0, 0xD000000000000087, 0x800000020A5DCEE0, 0xD00000000000001DLL, 0x800000020A5DD1C0, 670);
    v5 = v9;
    v10 = *(_QWORD *)(v1 + 160);
    v14 = *(_QWORD *)(v1 + 152);
    v15 = v10;
    v12 = 0;
    v13 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_20A5B8E94();
    sub_20A5B899C();
    swift_getErrorValue();
    sub_20A5B923C();
    sub_20A5B899C();
    swift_bridgeObjectRelease();
    v7 = 8;
  }
  LOBYTE(v12) = v7;
  CoreODILogger.error(_:category:)(0, 0xE000000000000000, &v12);
  swift_bridgeObjectRelease();

  sub_20A48A7B0(a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_20A4875D8(uint64_t *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v2[2] = v1;
  v2[3] = v3;
  v4 = a1[6];
  v2[4] = a1[5];
  v2[5] = v4;
  return swift_task_switch();
}

uint64_t sub_20A4875FC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v1 = v0[5];
  v2 = v0[2];
  v3 = v0[3];
  *(_QWORD *)(v2 + 448) = v0[4];
  *(_QWORD *)(v2 + 456) = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (v3)
  {
    v4 = v0[3];
    v5 = *(_BYTE *)(v4 + 248);
    v6 = *(_BYTE *)(v4 + 249);
    v3 = *(_QWORD *)(v4 + 160);
    if (v3)
    {
      v8 = *(_QWORD *)(v4 + 168);
      v7 = *(_QWORD *)(v4 + 176);
      v9 = *(_QWORD *)(v4 + 152);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v8 = 0;
      v7 = 0;
      v9 = 0;
    }
  }
  else
  {
    v8 = 0;
    v7 = 0;
    v9 = 0;
    v5 = 1;
    v6 = 1;
  }
  v0[6] = v7;
  v0[7] = v3;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0[2] + 192), *(_QWORD *)(v0[2] + 216));
  v10 = (_QWORD *)swift_task_alloc();
  v0[8] = v10;
  *v10 = v0;
  v10[1] = sub_20A4876FC;
  return sub_20A4EEA70(v5, v6, v9, v3, v8, v7);
}

uint64_t sub_20A4876FC()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_20A487758(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t i;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[2];
  uint64_t v34;
  uint64_t v35;

  v2 = *(_QWORD *)result;
  if (!*(_QWORD *)result)
    return result;
  v3 = *(_QWORD *)(v2 + 160);
  v4 = *(_QWORD *)(v2 + 224);
  v5 = *(_QWORD *)(v1 + 160);
  v34 = *(_QWORD *)(v1 + 152);
  v6 = v34;
  v35 = v5;
  LOBYTE(v33[0]) = 8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD000000000000027, 0x800000020A5DD310, v33);
  swift_bridgeObjectRelease();
  v34 = v6;
  v35 = v5;
  v33[0] = 0;
  v33[1] = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_20A5B8E94();
  swift_bridgeObjectRelease();
  strcpy((char *)v33, "  ord enabled ");
  HIBYTE(v33[1]) = -18;
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  v7 = v33[0];
  LOBYTE(v33[0]) = 8;
  CoreODILogger.debug(_:category:)(v7, v33[1], v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v31 = v6;
  v32 = v5;
  v34 = v6;
  v35 = v5;
  v33[0] = 0;
  v33[1] = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_20A5B8E94();
  swift_bridgeObjectRelease();
  v33[0] = 0xD000000000000012;
  v33[1] = 0x800000020A5DD340;
  if (v3)
    swift_bridgeObjectRetain();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  v8 = v33[0];
  LOBYTE(v33[0]) = 8;
  CoreODILogger.debug(_:category:)(v8, v33[1], v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v34 = v6;
  v35 = v5;
  v33[0] = 0;
  v33[1] = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_20A5B8E94();
  swift_bridgeObjectRelease();
  strcpy((char *)v33, "  otd enabled ");
  HIBYTE(v33[1]) = -18;
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  v9 = v33[0];
  LOBYTE(v33[0]) = 8;
  CoreODILogger.debug(_:category:)(v9, v33[1], v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v34 = v6;
  v35 = v5;
  v33[0] = 0;
  v33[1] = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_20A5B8E94();
  swift_bridgeObjectRelease();
  v33[0] = 0xD000000000000012;
  v33[1] = 0x800000020A5DD360;
  if (v3)
    swift_bridgeObjectRetain();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  v10 = v33[0];
  LOBYTE(v33[0]) = 8;
  CoreODILogger.debug(_:category:)(v10, v33[1], v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v34 = v6;
  v35 = v5;
  v33[0] = 0;
  v33[1] = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_20A5B8E94();
  swift_bridgeObjectRelease();
  v33[0] = 0xD000000000000012;
  v33[1] = 0x800000020A5DD380;
  if (v3)
    swift_bridgeObjectRetain();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  v11 = v33[0];
  LOBYTE(v33[0]) = 8;
  CoreODILogger.debug(_:category:)(v11, v33[1], v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = v4 + 64;
  v13 = 1 << *(_BYTE *)(v4 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v4 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v17 = 0;
  v18 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (!v15)
    goto LABEL_12;
LABEL_11:
  v19 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  for (i = v19 | (v17 << 6); ; i = __clz(__rbit64(v22)) + (v17 << 6))
  {
    v24 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * i);
    v26 = *v24;
    v25 = v24[1];
    swift_bridgeObjectRetain();
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_20A46FE9C(0, v18[2] + 1, 1, v18);
      v18 = (_QWORD *)result;
    }
    v28 = v18[2];
    v27 = v18[3];
    if (v28 >= v27 >> 1)
    {
      result = (uint64_t)sub_20A46FE9C((_QWORD *)(v27 > 1), v28 + 1, 1, v18);
      v18 = (_QWORD *)result;
    }
    v18[2] = v28 + 1;
    v29 = &v18[2 * v28];
    v29[4] = v26;
    v29[5] = v25;
    if (v15)
      goto LABEL_11;
LABEL_12:
    v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v21 >= v16)
      goto LABEL_36;
    v22 = *(_QWORD *)(v12 + 8 * v21);
    ++v17;
    if (!v22)
    {
      v17 = v21 + 1;
      if (v21 + 1 >= v16)
        goto LABEL_36;
      v22 = *(_QWORD *)(v12 + 8 * v17);
      if (!v22)
      {
        v17 = v21 + 2;
        if (v21 + 2 >= v16)
          goto LABEL_36;
        v22 = *(_QWORD *)(v12 + 8 * v17);
        if (!v22)
        {
          v17 = v21 + 3;
          if (v21 + 3 >= v16)
            goto LABEL_36;
          v22 = *(_QWORD *)(v12 + 8 * v17);
          if (!v22)
          {
            v17 = v21 + 4;
            if (v21 + 4 >= v16)
              goto LABEL_36;
            v22 = *(_QWORD *)(v12 + 8 * v17);
            if (!v22)
              break;
          }
        }
      }
    }
LABEL_29:
    v15 = (v22 - 1) & v22;
  }
  v23 = v21 + 5;
  if (v23 >= v16)
  {
LABEL_36:
    swift_release();
    swift_bridgeObjectRelease();
    v34 = v31;
    v35 = v32;
    v33[0] = 0;
    v33[1] = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_20A5B8E94();
    swift_bridgeObjectRelease();
    v33[0] = 0xD000000000000012;
    v33[1] = 0x800000020A5DD3A0;
    MEMORY[0x20BD25B4C](v18, MEMORY[0x24BEE0D00]);
    sub_20A5B899C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v30 = v33[0];
    LOBYTE(v33[0]) = 8;
    CoreODILogger.debug(_:category:)(v30, v33[1], v33);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  v22 = *(_QWORD *)(v12 + 8 * v23);
  if (v22)
  {
    v17 = v23;
    goto LABEL_29;
  }
  while (1)
  {
    v17 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v17 >= v16)
      goto LABEL_36;
    v22 = *(_QWORD *)(v12 + 8 * v17);
    ++v23;
    if (v22)
      goto LABEL_29;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_20A487DC8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;

  *(_QWORD *)(v8 + 2136) = v13;
  *(_OWORD *)(v8 + 2120) = v12;
  *(_QWORD *)(v8 + 2112) = v11;
  *(_QWORD *)(v8 + 2104) = a8;
  *(_QWORD *)(v8 + 2096) = a7;
  *(_BYTE *)(v8 + 611) = a6;
  *(_QWORD *)(v8 + 2088) = a5;
  *(_QWORD *)(v8 + 2080) = a4;
  *(_QWORD *)(v8 + 2072) = a3;
  *(_BYTE *)(v8 + 610) = a2;
  *(_QWORD *)(v8 + 2064) = a1;
  *(_OWORD *)(v8 + 2144) = *(_OWORD *)v11;
  v9 = *(_QWORD *)(v11 + 24);
  *(_QWORD *)(v8 + 2160) = *(_QWORD *)(v11 + 16);
  *(_QWORD *)(v8 + 2168) = v9;
  *(_OWORD *)(v8 + 2176) = *(_OWORD *)(v11 + 32);
  sub_20A459C88(a1, v8 + 1760, &qword_2545FA1C0);
  *(_OWORD *)(v8 + 2192) = *(_OWORD *)(v8 + 1760);
  *(_OWORD *)(v8 + 2208) = *(_OWORD *)(v8 + 1808);
  *(_QWORD *)(v8 + 2224) = type metadata accessor for ODNAssessmentsFeedbackManager.ODNResultsPayload(0);
  *(_QWORD *)(v8 + 2232) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A487E9C()
{
  uint64_t v0;
  __int128 *v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _QWORD *v6;
  _QWORD v8[2];

  v1 = *(__int128 **)(v0 + 2088);
  v2 = *(_QWORD *)(v0 + 2080);
  *(_QWORD *)(v0 + 2240) = *(_QWORD *)(v2 + 152);
  *(_QWORD *)(v0 + 2248) = *(_QWORD *)(v2 + 160);
  swift_bridgeObjectRetain();
  sub_20A5B8E94();
  swift_bridgeObjectRelease();
  v8[0] = 0xD00000000000000ELL;
  v8[1] = 0x800000020A5DD020;
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  CoreODILogger.info(_:category:)(0xD000000000000014, 0x800000020A5DD020, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v3 = *v1;
  v4 = v1[1];
  v5 = v1[2];
  *(_OWORD *)(v0 + 1936) = v1[3];
  *(_OWORD *)(v0 + 1920) = v5;
  *(_OWORD *)(v0 + 1904) = v4;
  *(_OWORD *)(v0 + 1888) = v3;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 2256) = v6;
  *v6 = v0;
  v6[1] = sub_20A488004;
  return sub_20A488C2C(*(_QWORD *)(v0 + 2072), v0 + 1888, *(_BYTE *)(v0 + 610), *(_BYTE *)(v0 + 611));
}

uint64_t sub_20A488004()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A488058()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  _QWORD v14[2];
  char v15;

  v1 = *(_QWORD *)(v0 + 2248);
  v2 = *(_BYTE *)(v0 + 610);
  v14[0] = *(_QWORD *)(v0 + 2240);
  v14[1] = v1;
  v15 = 8;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD000000000000015, 0x800000020A5DD060, &v15);
  swift_bridgeObjectRelease();
  if ((v2 & 1) != 0)
  {
    *(_QWORD *)(v0 + 2312) = 1;
    *(_OWORD *)(v0 + 2280) = 0u;
    *(_OWORD *)(v0 + 2296) = 0u;
    sub_20A459C88(*(_QWORD *)(v0 + 2064), v0 + 1824, &qword_2545FA1C0);
    v3 = *(_QWORD *)(v0 + 1848) >> 60;
    if (v3 == 15)
    {
      v4 = 0;
      v5 = 0;
      v6 = 0;
      v7 = 0;
      v8 = 0;
      v9 = 0xF000000000000000;
    }
    else
    {
      v8 = *(unsigned int *)(v0 + 2208);
      v6 = sub_20A5B854C();
      v7 = v10;
      v4 = *(_QWORD *)(v0 + 2216);
      v9 = *(_QWORD *)(v0 + 2200);
      v5 = *(_QWORD *)(v0 + 2192);
    }
    *(_QWORD *)(v0 + 2336) = v8;
    *(_QWORD *)(v0 + 2328) = v7;
    *(_QWORD *)(v0 + 2320) = v6;
    v11 = *(_BYTE *)(v0 + 611);
    LOBYTE(v14[0]) = 1;
    *(_QWORD *)(v0 + 2344) = sub_20A458D00(v5, v9, v4, v3 > 0xE, (unsigned __int8 *)v14, v11);
    *(_QWORD *)(v0 + 2352) = v12;
  }
  return swift_task_switch();
}

uint64_t sub_20A4881A8()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[260];
  v0[283] = *(_QWORD *)(v1 + 432);
  v0[284] = *(_QWORD *)(v1 + 440);
  swift_bridgeObjectRetain();
  return swift_task_switch();
}

uint64_t sub_20A4881F4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  unsigned __int8 v26;
  unsigned __int8 v27;

  v1 = *(_QWORD *)(v0 + 2272);
  v2 = *(_QWORD *)(v0 + 2264);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5290);
  v3 = swift_allocObject();
  v4 = v3;
  *(_OWORD *)(v3 + 16) = xmmword_20A5BA9A0;
  *(_BYTE *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 64) = MEMORY[0x24BEE0D00];
  if (v1)
    v5 = v2;
  else
    v5 = 0;
  v6 = 0xE000000000000000;
  if (v1)
    v6 = v1;
  *(_QWORD *)(v3 + 40) = v5;
  *(_QWORD *)(v3 + 48) = v6;
  swift_bridgeObjectRetain();
  v7 = sub_20A469DA8(v4);
  v26 = 124;
  ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0x656D6974204E444FLL, 0xEB0000000074756FLL, 0, &v26, 0, v7, 0xD000000000000087, 0x800000020A5DCEE0, 0xD00000000000001CLL, 0x800000020A5DCFE0, 382);
  v9 = v8;
  swift_bridgeObjectRelease();
  sub_20A529F30();
  v10 = *(_QWORD *)(v0 + 1952);
  v11 = *(_QWORD *)(v0 + 1960);
  v12 = *(unsigned __int8 *)(v0 + 1968);
  v13 = *(_QWORD *)(v0 + 1976);
  v14 = *(_QWORD *)(v0 + 1984);
  sub_20A459C88(v0 + 1976, v0 + 1992, &qword_253EB50E8);
  sub_20A48989C(v0 + 1992);
  swift_bridgeObjectRelease();

  *(_QWORD *)(v0 + 2312) = v14;
  *(_QWORD *)(v0 + 2304) = v13;
  *(_QWORD *)(v0 + 2296) = v12;
  *(_QWORD *)(v0 + 2288) = v11;
  *(_QWORD *)(v0 + 2280) = v10;
  sub_20A459C88(*(_QWORD *)(v0 + 2064), v0 + 1824, &qword_2545FA1C0);
  v15 = *(_QWORD *)(v0 + 1848) >> 60;
  if (v15 == 15)
  {
    v16 = 0;
    v17 = 0;
    v18 = 0;
    v19 = 0;
    v20 = 0;
    v21 = 0xF000000000000000;
  }
  else
  {
    v20 = *(unsigned int *)(v0 + 2208);
    v18 = sub_20A5B854C();
    v19 = v22;
    v16 = *(_QWORD *)(v0 + 2216);
    v21 = *(_QWORD *)(v0 + 2200);
    v17 = *(_QWORD *)(v0 + 2192);
  }
  *(_QWORD *)(v0 + 2336) = v20;
  *(_QWORD *)(v0 + 2328) = v19;
  *(_QWORD *)(v0 + 2320) = v18;
  v23 = *(_BYTE *)(v0 + 611);
  v27 = 1;
  *(_QWORD *)(v0 + 2344) = sub_20A458D00(v17, v21, v16, v15 > 0xE, &v27, v23);
  *(_QWORD *)(v0 + 2352) = v24;
  return swift_task_switch();
}

uint64_t sub_20A488444()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[260];
  v0[295] = *(_QWORD *)(v1 + 384);
  v0[296] = *(_QWORD *)(v1 + 392);
  swift_bridgeObjectRetain();
  return swift_task_switch();
}

uint64_t sub_20A488490()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[260];
  v0[297] = *(_QWORD *)(v1 + 368);
  v0[298] = *(_QWORD *)(v1 + 376);
  swift_bridgeObjectRetain();
  return swift_task_switch();
}

uint64_t sub_20A4884DC()
{
  uint64_t v0;

  memcpy((void *)(v0 + 616), (const void *)(*(_QWORD *)(v0 + 2080) + 368), 0x252uLL);
  sub_20A48A224((_QWORD *)(v0 + 616));
  return swift_task_switch();
}

uint64_t sub_20A488530()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_20A459C88(v0 + 712, v0 + 1352, qword_253EB4498);
  if (sub_20A44BE1C(v0 + 1352) == 1)
  {
    sub_20A48A4AC((_QWORD *)(v0 + 616));
    v1 = 0;
    v2 = 0;
  }
  else
  {
    sub_20A459C88(v0 + 712, v0 + 1488, qword_253EB4498);
    sub_20A44D0E4(v0 + 1488);
    sub_20A48A4AC((_QWORD *)(v0 + 616));
    v1 = *(_QWORD *)(v0 + 1608);
    v2 = *(_QWORD *)(v0 + 1616);
    swift_bridgeObjectRetain();
    sub_20A489A78((_QWORD *)(v0 + 712), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20A489AD4);
  }
  *(_QWORD *)(v0 + 2400) = v2;
  *(_QWORD *)(v0 + 2392) = v1;
  sub_20A48A730(*(uint64_t **)(v0 + 2096));
  return swift_task_switch();
}

uint64_t sub_20A48860C()
{
  uint64_t v0;

  memcpy((void *)(v0 + 16), (const void *)(*(_QWORD *)(v0 + 2080) + 368), 0x252uLL);
  sub_20A48A224((_QWORD *)(v0 + 16));
  return swift_task_switch();
}

uint64_t sub_20A488660()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  char v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_20A459C88(v0 + 344, v0 + 1216, qword_253EB4498);
  if (sub_20A44BE1C(v0 + 1216) == 1)
  {
    sub_20A48A4AC((_QWORD *)(v0 + 16));
    v29 = 0;
    v27 = 0;
  }
  else
  {
    sub_20A459C88(v0 + 344, v0 + 1624, qword_253EB4498);
    sub_20A44D0E4(v0 + 1624);
    sub_20A48A4AC((_QWORD *)(v0 + 16));
    v29 = *(_QWORD *)(v0 + 1744);
    v27 = *(_QWORD *)(v0 + 1752);
    swift_bridgeObjectRetain();
    sub_20A489A78((_QWORD *)(v0 + 344), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20A489AD4);
  }
  v16 = *(_QWORD *)(v0 + 2400);
  v1 = *(_QWORD *)(v0 + 2392);
  v13 = *(_OWORD *)(v0 + 2360);
  v14 = *(_OWORD *)(v0 + 2376);
  v24 = *(_QWORD *)(v0 + 2344);
  v25 = *(_QWORD *)(v0 + 2352);
  v2 = *(_QWORD *)(v0 + 2336);
  v21 = *(_OWORD *)(v0 + 2320);
  v26 = *(_QWORD *)(v0 + 2312);
  v22 = *(_OWORD *)(v0 + 2280);
  v23 = *(_OWORD *)(v0 + 2296);
  v3 = *(_QWORD *)(v0 + 2232);
  v4 = *(_QWORD *)(v0 + 2224);
  v19 = *(_OWORD *)(v0 + 2176);
  v17 = *(_OWORD *)(v0 + 2160);
  v15 = *(_OWORD *)(v0 + 2144);
  v28 = *(_QWORD *)(v0 + 2136);
  v5 = *(_QWORD *)(v0 + 2128);
  v20 = *(_QWORD *)(v0 + 2120);
  v30 = *(_QWORD *)(v0 + 2112);
  v6 = *(uint64_t **)(v0 + 2104);
  v7 = *(_QWORD *)(v0 + 2096);
  v18 = *(_BYTE *)(v0 + 611);
  v8 = *(_QWORD *)(v0 + 2080);
  *(_OWORD *)(v0 + 2008) = *(_OWORD *)(*(_QWORD *)(v0 + 2088) + 40);
  v9 = v3 + *(int *)(v4 + 88);
  v10 = type metadata accessor for ODNAssessmentsFeedbackManager.ORDResultsPayload(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  *(_OWORD *)v3 = v13;
  *(_OWORD *)(v3 + 16) = v14;
  *(_QWORD *)(v3 + 32) = v1;
  *(_QWORD *)(v3 + 40) = v16;
  sub_20A459C88(v7, v3 + 48, &qword_2545FA1A0);
  *(_QWORD *)(v3 + 112) = v29;
  *(_QWORD *)(v3 + 120) = v27;
  sub_20A459C88((uint64_t)v6, v3 + 128, &qword_2545FA1A0);
  *(_OWORD *)(v3 + 192) = v21;
  *(_OWORD *)(v3 + 208) = v15;
  *(_OWORD *)(v3 + 224) = v17;
  *(_OWORD *)(v3 + 240) = v19;
  *(_QWORD *)(v3 + 256) = v24;
  *(_QWORD *)(v3 + 264) = v25;
  *(_QWORD *)(v3 + 272) = v2;
  *(_OWORD *)(v3 + 280) = v22;
  *(_OWORD *)(v3 + 296) = v23;
  *(_QWORD *)(v3 + 312) = v26;
  *(_BYTE *)(v3 + 320) = v18;
  *(_QWORD *)(v3 + 328) = v20;
  *(_QWORD *)(v3 + 336) = v2 + 1;
  *(_BYTE *)(v3 + 344) = 0;
  *(_QWORD *)(v3 + 352) = v5;
  *(_QWORD *)(v3 + 360) = v2 + 2;
  *(_BYTE *)(v3 + 368) = 0;
  *(_OWORD *)(v3 + 376) = *(_OWORD *)(v0 + 2008);
  *(_QWORD *)(v3 + 392) = 0;
  *(_BYTE *)(v3 + 400) = 0;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v8 + 192), *(_QWORD *)(v8 + 216));
  LOBYTE(v8) = *(_BYTE *)(v28 + 33);
  sub_20A48A730(v6);
  sub_20A48A768(v30);
  swift_retain();
  swift_retain();
  sub_20A48989C(v0 + 2008);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 2408) = v11;
  *v11 = v0;
  v11[1] = sub_20A488950;
  return sub_20A4EC1FC(*(_QWORD *)(v0 + 2232), v8);
}

uint64_t sub_20A488950()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 2416) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A4889B4()
{
  uint64_t v0;

  sub_20A465AB4(*(_QWORD *)(v0 + 2232), type metadata accessor for ODNAssessmentsFeedbackManager.ODNResultsPayload);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4889F4()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[2];

  v1 = *(void **)(v0 + 2416);
  *(_QWORD *)(v0 + 2040) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52D0);
  if (swift_dynamicCast())
  {

    *(_QWORD *)(v0 + 2424) = *(_QWORD *)(v0 + 2048);
    return swift_task_switch();
  }
  else
  {
    v4 = *(void **)(v0 + 2416);
    v5 = *(_QWORD *)(v0 + 2232);

    v8[0] = 0;
    v8[1] = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_20A5B8E94();
    *(_QWORD *)(v0 + 2024) = 0;
    *(_QWORD *)(v0 + 2032) = 0xE000000000000000;
    sub_20A5B899C();
    *(_QWORD *)(v0 + 2056) = v4;
    sub_20A5B8F9C();
    v6 = *(_QWORD *)(v0 + 2024);
    v7 = *(_QWORD *)(v0 + 2032);
    LOBYTE(v8[0]) = 14;
    CoreODILogger.info(_:category:)(v6, v7, v8);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    sub_20A465AB4(v5, type metadata accessor for ODNAssessmentsFeedbackManager.ODNResultsPayload);
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_20A488B98()
{
  uint64_t v0;

  sub_20A4871F4(*(_QWORD *)(v0 + 2424));
  return swift_task_switch();
}

uint64_t sub_20A488BD8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 2232);
  sub_20A48A7B0(*(_QWORD *)(v0 + 2424));
  sub_20A465AB4(v1, type metadata accessor for ODNAssessmentsFeedbackManager.ODNResultsPayload);

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A488C2C(uint64_t a1, uint64_t a2, char a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)(v5 + 225) = a4;
  *(_BYTE *)(v5 + 224) = a3;
  *(_QWORD *)(v5 + 144) = a1;
  *(_QWORD *)(v5 + 152) = v4;
  *(_QWORD *)(v5 + 160) = type metadata accessor for ODNAssessmentsFeedbackManager.ODNResultsPayload(0);
  v7 = swift_task_alloc();
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(v5 + 168) = v7;
  *(_QWORD *)(v5 + 176) = v8;
  *(_QWORD *)(v5 + 184) = v9;
  return swift_task_switch();
}

uint64_t sub_20A488C9C()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;
  char v3;
  id v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];
  unint64_t v26;
  unint64_t v27;

  v1 = *(void **)(v0 + 144);
  if (v1)
  {
    v2 = *(_QWORD **)(v0 + 152);
    v3 = *(_BYTE *)(v0 + 224);
    v4 = v1;
    swift_bridgeObjectRetain();
    sub_20A529F30();
    v21 = *(_QWORD *)(v0 + 24);
    v22 = *(_QWORD *)(v0 + 16);
    v23 = *(unsigned __int8 *)(v0 + 32);
    v24 = *(_QWORD *)(v0 + 40);
    v20 = *(_QWORD *)(v0 + 48);
    sub_20A459C88(v0 + 40, v0 + 80, &qword_253EB50E8);
    sub_20A48989C(v0 + 80);
    swift_bridgeObjectRelease();
    v5 = v2[19];
    *(_QWORD *)(v0 + 192) = v5;
    v6 = v2[20];
    *(_QWORD *)(v0 + 200) = v6;
    if ((v3 & 1) != 0)
    {
      v26 = v5;
      v27 = v6;
      LOBYTE(v25[0]) = 8;
      swift_bridgeObjectRetain();
      CoreODILogger.debug(_:category:)(0xD000000000000056, 0x800000020A5DD2B0, v25);
    }
    else
    {
      v25[0] = v5;
      v25[1] = v6;
      swift_bridgeObjectRetain();
      sub_20A5B8E94();
      swift_bridgeObjectRelease();
      v26 = 0xD000000000000008;
      v27 = 0x800000020A5DD280;
      swift_getErrorValue();
      sub_20A5B923C();
      sub_20A5B899C();
      swift_bridgeObjectRelease();
      CoreODILogger.error(_:category:)(0xD000000000000026, 0x800000020A5DD280, &v26);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v8 = *(_QWORD *)(v0 + 184);
    v19 = *(_QWORD *)(v0 + 176);
    v9 = *(_QWORD *)(v0 + 168);
    v10 = *(_QWORD *)(v0 + 152);
    v18 = *(_BYTE *)(v0 + 225);
    v12 = *(_QWORD *)(v10 + 384);
    v11 = *(_QWORD *)(v10 + 392);
    v13 = v2[46];
    v14 = *(_QWORD *)(v10 + 376);
    v15 = v9 + *(int *)(*(_QWORD *)(v0 + 160) + 88);
    v16 = type metadata accessor for ODNAssessmentsFeedbackManager.ORDResultsPayload(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
    *(_QWORD *)v9 = v12;
    *(_QWORD *)(v9 + 8) = v11;
    *(_QWORD *)(v9 + 16) = v13;
    *(_QWORD *)(v9 + 24) = v14;
    *(_OWORD *)(v9 + 32) = 0u;
    *(_OWORD *)(v9 + 48) = 0u;
    *(_OWORD *)(v9 + 64) = 0u;
    *(_OWORD *)(v9 + 80) = 0u;
    *(_OWORD *)(v9 + 96) = 0u;
    *(_OWORD *)(v9 + 112) = 0u;
    *(_OWORD *)(v9 + 128) = 0u;
    *(_OWORD *)(v9 + 144) = 0u;
    *(_OWORD *)(v9 + 160) = 0u;
    *(_OWORD *)(v9 + 176) = 0u;
    *(_OWORD *)(v9 + 192) = 0u;
    *(_OWORD *)(v9 + 208) = 0u;
    *(_OWORD *)(v9 + 224) = 0u;
    *(_OWORD *)(v9 + 240) = 0u;
    *(_OWORD *)(v9 + 256) = 0u;
    *(_QWORD *)(v9 + 272) = -1;
    *(_QWORD *)(v9 + 280) = v22;
    *(_QWORD *)(v9 + 288) = v21;
    *(_QWORD *)(v9 + 296) = v23;
    *(_QWORD *)(v9 + 304) = v24;
    *(_QWORD *)(v9 + 312) = v20;
    *(_BYTE *)(v9 + 320) = v18;
    *(_QWORD *)(v9 + 328) = 0;
    *(_QWORD *)(v9 + 336) = 0;
    *(_BYTE *)(v9 + 344) = 1;
    *(_QWORD *)(v9 + 352) = 0;
    *(_QWORD *)(v9 + 360) = 0;
    *(_BYTE *)(v9 + 368) = 1;
    *(_QWORD *)(v9 + 376) = v19;
    *(_QWORD *)(v9 + 384) = v8;
    *(_QWORD *)(v9 + 392) = 0;
    *(_BYTE *)(v9 + 400) = 1;
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v10 + 192), *(_QWORD *)(v10 + 216));
    LOBYTE(v15) = *(_BYTE *)(v10 + 961);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v17 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 208) = v17;
    *v17 = v0;
    v17[1] = sub_20A488FB0;
    return sub_20A4EC1FC(*(_QWORD *)(v0 + 168), v15);
  }
  else
  {
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_20A488FB0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 216) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A489014()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 168);

  sub_20A465AB4(v1, type metadata accessor for ODNAssessmentsFeedbackManager.ODNResultsPayload);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A489060()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  void *v4;
  unint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD v12[2];

  v1 = *(void **)(v0 + 216);
  *(_QWORD *)(v0 + 112) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52D0);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v3 = *(_QWORD *)(v0 + 168);
    v4 = *(void **)(v0 + 144);

    v5 = *(_QWORD *)(v0 + 120);
    sub_20A4871F4(v5);
    sub_20A48A7B0(v5);

    sub_20A465AB4(v3, type metadata accessor for ODNAssessmentsFeedbackManager.ODNResultsPayload);
  }
  else
  {
    v6 = *(void **)(v0 + 216);
    v7 = *(_QWORD *)(v0 + 168);
    v8 = *(void **)(v0 + 144);

    v12[0] = 0;
    v12[1] = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_20A5B8E94();
    *(_QWORD *)(v0 + 96) = 0;
    *(_QWORD *)(v0 + 104) = 0xE000000000000000;
    sub_20A5B899C();
    *(_QWORD *)(v0 + 136) = v6;
    sub_20A5B8F9C();
    v9 = *(_QWORD *)(v0 + 96);
    v10 = *(_QWORD *)(v0 + 104);
    LOBYTE(v12[0]) = 14;
    CoreODILogger.info(_:category:)(v9, v10, v12);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    sub_20A465AB4(v7, type metadata accessor for ODNAssessmentsFeedbackManager.ODNResultsPayload);
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A48920C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 24) = a2;
  *(_QWORD *)(v4 + 32) = v3;
  *(_BYTE *)(v4 + 120) = a3;
  *(_QWORD *)(v4 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_20A48922C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = (_QWORD *)v0[4];
  if (v1[55])
  {
    v2 = v1[54];
    v3 = v1[55];
  }
  else
  {
    v2 = 0;
    v3 = 0xE000000000000000;
  }
  v0[5] = v2;
  v0[6] = v3;
  v0[7] = v1[56];
  v0[8] = v1[57];
  v4 = qword_2545F9978;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v4 != -1)
    swift_once();
  v0[9] = qword_25460FF78;
  return swift_task_switch();
}

uint64_t sub_20A4892D0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v1 = v0[9];
  v2 = *(_QWORD *)(v1 + 120);
  if (v2)
  {
    v0[13] = *(_QWORD *)(v1 + 112);
    v0[14] = v2;
    swift_bridgeObjectRetain();
    return swift_task_switch();
  }
  else
  {
    v4 = (_QWORD *)swift_task_alloc();
    v0[10] = v4;
    *v4 = v0;
    v4[1] = sub_20A489350;
    return sub_20A4AAD6C();
  }
}

uint64_t sub_20A489350(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 88) = a1;
  *(_QWORD *)(v3 + 96) = a2;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A4893AC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[12];
  v2 = v0[9];
  *(_QWORD *)(v2 + 112) = v0[11];
  *(_QWORD *)(v2 + 120) = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v3 = v0[12];
  v0[13] = v0[11];
  v0[14] = v3;
  return swift_task_switch();
}

uint64_t sub_20A489404()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t (*v15)(void);

  v1 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(v0 + 32) + 232)
                 + OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_conversationID);
  v2 = *v1;
  v3 = v1[1];
  v4 = qword_253EB6228;
  swift_bridgeObjectRetain();
  if (v4 != -1)
    swift_once();
  v6 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 112);
  v7 = *(_QWORD *)(v0 + 48);
  v8 = *(_BYTE *)(v0 + 120);
  v10 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v12 = qword_2546103B8;
  v11 = qword_2546103C0;
  v13 = *(_OWORD *)(v0 + 56);
  *(_QWORD *)v10 = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(v10 + 8) = v7;
  *(_OWORD *)(v10 + 16) = v13;
  *(_QWORD *)(v10 + 32) = v6;
  *(_QWORD *)(v10 + 40) = v5;
  *(_QWORD *)(v10 + 48) = v2;
  *(_QWORD *)(v10 + 56) = v3;
  *(_QWORD *)(v10 + 64) = 0;
  *(_QWORD *)(v10 + 72) = 0;
  *(_BYTE *)(v10 + 80) = 1;
  *(_QWORD *)(v10 + 88) = 0;
  *(_QWORD *)(v10 + 96) = v12;
  *(_QWORD *)(v10 + 104) = v11;
  *(_BYTE *)(v10 + 112) = -47;
  *(_QWORD *)(v10 + 120) = v9;
  *(_BYTE *)(v10 + 128) = v8;
  v15 = *(uint64_t (**)(void))(v0 + 8);
  swift_bridgeObjectRetain();
  return v15();
}

uint64_t sub_20A4894E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  char v25;

  v3 = sub_20A5B8954();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2
    && (sub_20A5B893C(),
        v8 = sub_20A5B890C(),
        v10 = v9,
        (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3),
        v10 >> 60 != 15))
  {
    sub_20A5B8264();
    swift_allocObject();
    sub_20A5B8258();
    sub_20A48A9A8();
    sub_20A5B824C();
    swift_release();
    v12 = v21;
    v19 = v20;
    v13 = v22;
    v14 = v23;
    v11 = v24 & 1;
    sub_20A5B8288();
    swift_allocObject();
    sub_20A5B827C();
    v20 = v19;
    v21 = v12;
    v22 = v13;
    v23 = v14;
    v24 = 2;
    sub_20A459D5C();
    v15 = sub_20A5B8270();
    v19 = v16;
    swift_release();
    swift_bridgeObjectRelease();
    v18 = v19;
    v20 = v15;
    v21 = v19;
    sub_20A5B893C();
    sub_20A459DA0();
    sub_20A5B8924();
    sub_20A44CFC4(v8, v10);
    sub_20A44BD90(v15, v18);
  }
  else
  {
    v20 = 0x657261685369646FLL;
    v21 = 0xEF726567676F4C64;
    v25 = 1;
    CoreODILogger.debug(_:category:)(0xD00000000000001DLL, 0x800000020A5DD5C0, &v25);
    swift_bridgeObjectRetain();
    return 0;
  }
  return v11;
}

uint64_t sub_20A48989C(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_20A4898C4(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

id sub_20A4898EC(id result)
{
  if ((unint64_t)result >= 2)
    return result;
  return result;
}

void sub_20A4898FC(id a1)
{
  if ((unint64_t)a1 >= 2)

}

uint64_t sub_20A48990C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_20A48999C()
{
  unint64_t result;

  result = qword_2545FA180;
  if (!qword_2545FA180)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5BFB1C, &type metadata for ODNAssessmentsManager.ODNAssessmentsManagerError);
    atomic_store(result, (unint64_t *)&qword_2545FA180);
  }
  return result;
}

uint64_t sub_20A4899E0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_20A489A34()
{
  unint64_t result;

  result = qword_2545FA188;
  if (!qword_2545FA188)
  {
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for TSID, &type metadata for TSID);
    atomic_store(result, (unint64_t *)&qword_2545FA188);
  }
  return result;
}

_QWORD *sub_20A489A78(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16]);
  return a1;
}

uint64_t sub_20A489AD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_20A489B64()
{
  _QWORD *v0;
  unint64_t v1;

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0[13])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (v0[21])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v1 = v0[39];
  if (v1 >> 60 != 15)
    sub_20A44BD90(v0[38], v1);
  return swift_deallocObject();
}

uint64_t sub_20A489C38(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v6;
  _QWORD *v7;
  uint64_t v9;

  v9 = *(_QWORD *)(v3 + 16);
  v6 = *(_BYTE *)(v3 + 88);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v7;
  *v7 = v4;
  v7[1] = sub_20A4597C0;
  return sub_20A487DC8(a1, a2, a3, v9, v3 + 24, v6, v3 + 96, v3 + 160);
}

uint64_t sub_20A489CF4(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_20A489D48(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  swift_bridgeObjectRetain();
  sub_20A459690(v2, v3);
  return a1;
}

uint64_t sub_20A489D88(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *sub_20A489E0C(uint64_t *a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a1[4];
  v5 = a1[5];
  sub_20A44CFC4(*a1, a1[1]);
  sub_20A44BD90(v2, v3);
  sub_20A44CFC4(v4, v5);
  return a1;
}

uint64_t sub_20A489E68(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_20A489EF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA1B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t *sub_20A489F38(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  v2 = a1[19];
  v3 = a1[20];
  v6 = a1[27];
  v9 = a1[29];
  v5 = a1[28];
  v7 = a1[31];
  v8 = a1[30];
  v10 = a1[49];
  v11 = a1[48];
  v12 = a1[57];
  v13 = a1[56];
  sub_20A489AD4(*a1, a1[1], a1[2]);
  swift_bridgeObjectRelease();
  sub_20A4655FC(v2, v3);
  sub_20A44CFC4(v6, v5);
  sub_20A489AD4(v9, v8, v7);
  swift_bridgeObjectRelease();
  sub_20A4655FC(v11, v10);
  sub_20A44CFC4(v13, v12);
  return a1;
}

uint64_t *sub_20A48A100(uint64_t *a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v2 = a1[19];
  v3 = a1[20];
  v4 = a1[23];
  v6 = a1[22];
  v7 = a1[21];
  v8 = a1[41];
  v9 = a1[40];
  sub_20A489AD4(*a1, a1[1], a1[2]);
  swift_bridgeObjectRelease();
  sub_20A44CFC4(v2, v3);
  sub_20A489AD4(v7, v6, v4);
  swift_bridgeObjectRelease();
  sub_20A44CFC4(v9, v8);
  return a1;
}

_QWORD *sub_20A48A224(_QWORD *a1)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;

  v4 = a1[13];
  v5 = a1[12];
  v3 = a1[14];
  v6 = a1[32];
  v7 = a1[31];
  v9 = a1[39];
  v8 = a1[40];
  v12 = a1[42];
  v13 = a1[41];
  v11 = a1[43];
  v10 = a1[60];
  v14 = a1[61];
  v15 = a1[69];
  v16 = a1[68];
  v18 = a1[72];
  v17 = a1[73];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_20A48990C(v5, v4, v3);
  swift_bridgeObjectRetain();
  sub_20A465800(v7, v6);
  sub_20A459690(v9, v8);
  sub_20A48990C(v13, v12, v11);
  swift_bridgeObjectRetain();
  sub_20A465800(v10, v14);
  sub_20A459690(v16, v15);
  swift_bridgeObjectRetain();
  sub_20A459690(v18, v17);
  return a1;
}

_QWORD *sub_20A48A4AC(_QWORD *a1)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;

  v4 = a1[13];
  v5 = a1[12];
  v3 = a1[14];
  v6 = a1[32];
  v7 = a1[31];
  v9 = a1[39];
  v8 = a1[40];
  v12 = a1[42];
  v13 = a1[41];
  v11 = a1[43];
  v10 = a1[60];
  v14 = a1[61];
  v15 = a1[69];
  v16 = a1[68];
  v18 = a1[72];
  v17 = a1[73];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_20A489AD4(v5, v4, v3);
  swift_bridgeObjectRelease();
  sub_20A4655FC(v7, v6);
  sub_20A44CFC4(v9, v8);
  sub_20A489AD4(v13, v12, v11);
  swift_bridgeObjectRelease();
  sub_20A4655FC(v10, v14);
  sub_20A44CFC4(v16, v15);
  swift_bridgeObjectRelease();
  sub_20A44CFC4(v18, v17);
  return a1;
}

uint64_t *sub_20A48A730(uint64_t *a1)
{
  sub_20A465800(*a1, a1[1]);
  return a1;
}

uint64_t sub_20A48A768(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void sub_20A48A7B0(unint64_t a1)
{
  if (a1 >> 62)
  {
    if (a1 >> 62 != 1)
      return;
    a1 &= 0x3FFFFFFFFFFFFFFFuLL;
  }

}

uint64_t sub_20A48A7CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PregeneratedAssessment();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A48A810(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_20A48A920()
{
  unint64_t result;

  result = qword_2545FA1E8;
  if (!qword_2545FA1E8)
  {
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for ODIClientGUIDSeeds, &type metadata for ODIClientGUIDSeeds);
    atomic_store(result, (unint64_t *)&qword_2545FA1E8);
  }
  return result;
}

uint64_t sub_20A48A964(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PregeneratedAssessment();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_20A48A9A8()
{
  unint64_t result;

  result = qword_2545FA1F0;
  if (!qword_2545FA1F0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C7994, &type metadata for DUADataAug);
    atomic_store(result, &qword_2545FA1F0);
  }
  return result;
}

uint64_t sub_20A48A9EC(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_20A48AA48(uint64_t result)
{
  if (result)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_20A48AAA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA1B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A48AAEC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_20A48AB10()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_20A48AB6C;
  v2[8] = v0;
  return swift_task_switch();
}

uint64_t sub_20A48AB6C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v6;

  v6 = *v2;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
}

_QWORD *initializeBufferWithCopyOfBuffer for ODNAssessmentsManager.ODNAssessmentsManagerError(_QWORD *a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF)
    v4 = v3;
  *a1 = v3;
  return a1;
}

void destroy for ODNAssessmentsManager.ODNAssessmentsManagerError(void **a1)
{
  void *v1;

  v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF)

}

void **assignWithCopy for ODNAssessmentsManager.ODNAssessmentsManagerError(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)v3 < 0xFFFFFFFF)
  {
    if ((unint64_t)v4 >= 0xFFFFFFFF)
      v7 = v4;
    *a1 = v4;
  }
  else if ((unint64_t)v4 < 0xFFFFFFFF)
  {

    *a1 = *a2;
  }
  else
  {
    v5 = v4;
    v6 = *a1;
    *a1 = v4;

  }
  return a1;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

void **assignWithTake for ODNAssessmentsManager.ODNAssessmentsManagerError(void **a1, unint64_t *a2)
{
  void *v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)v3 < 0xFFFFFFFF)
    goto LABEL_6;
  if (v4 < 0xFFFFFFFF)
  {

LABEL_6:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t getEnumTagSinglePayload for ODNAssessmentsManager.ODNAssessmentsManagerError(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ODNAssessmentsManager.ODNAssessmentsManagerError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 1;
  }
  return result;
}

uint64_t sub_20A48ADC8(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_20A48ADE0(_QWORD *result, int a2)
{
  unsigned int v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2 - 1;
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for ODNAssessmentsManager.ODNAssessmentsManagerError()
{
  return &type metadata for ODNAssessmentsManager.ODNAssessmentsManagerError;
}

uint64_t HTTPStatusCode.description.getter()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 8) == 1)
    __asm { BR              X10 }
  sub_20A5B9170();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  return 0x206E776F6E6B6E55;
}

uint64_t sub_20A48B058@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v2;

  if (result <= 399)
  {
    switch(result)
    {
      case 200:
        result = 0;
        v2 = 1;
        break;
      case 301:
        v2 = 1;
        result = 2;
        break;
      case 304:
        v2 = 1;
        result = 3;
        break;
      default:
LABEL_22:
        v2 = 0;
        break;
    }
  }
  else
  {
    switch(result)
    {
      case 400:
        v2 = 1;
        result = 4;
        break;
      case 401:
        v2 = 1;
        result = 5;
        break;
      case 403:
        v2 = 1;
        result = 6;
        break;
      case 404:
        v2 = 1;
        result = 7;
        break;
      case 428:
        v2 = 1;
        result = 8;
        break;
      case 429:
        v2 = 1;
        result = 9;
        break;
      case 433:
        v2 = 1;
        result = 10;
        break;
      case 434:
        v2 = 1;
        result = 11;
        break;
      case 500:
        v2 = 1;
        result = 12;
        break;
      case 501:
        v2 = 1;
        result = 13;
        break;
      case 502:
        v2 = 1;
        result = 14;
        break;
      case 503:
        v2 = 1;
        result = 15;
        break;
      case 504:
        v2 = 1;
        result = 16;
        break;
      default:
        goto LABEL_22;
    }
  }
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t _s17CoreODIEssentials14HTTPStatusCodeO2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *a1;
  if (*((_BYTE *)a1 + 8) == 1)
    return ((uint64_t (*)(void))((char *)&loc_20A48B1A8 + 4 * byte_20A5BFBDA[v2]))();
  if ((*(_BYTE *)(a2 + 8) & 1) != 0)
    return 0;
  return v2 == *(_QWORD *)a2;
}

uint64_t sub_20A48B1D4@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 1)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A48B1C0);
  return 1;
}

uint64_t sub_20A48B1E8@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 2)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A48B1C0);
  return 1;
}

uint64_t sub_20A48B1FC@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 3)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A48B1C0);
  return 1;
}

uint64_t sub_20A48B210@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 4)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A48B1C0);
  return 1;
}

uint64_t sub_20A48B224@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 5)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A48B1C0);
  return 1;
}

uint64_t sub_20A48B238@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 6)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A48B1C0);
  return 1;
}

uint64_t sub_20A48B24C@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 7)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A48B1C0);
  return 1;
}

uint64_t sub_20A48B260@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 9)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A48B1C0);
  return 1;
}

uint64_t sub_20A48B274@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 10)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A48B1C0);
  return 1;
}

uint64_t sub_20A48B288@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 11)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A48B1C0);
  return 1;
}

uint64_t sub_20A48B29C@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 12)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A48B1C0);
  return 1;
}

uint64_t sub_20A48B2B0@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 13)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A48B1C0);
  return 1;
}

uint64_t sub_20A48B2C4@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 14)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A48B1C0);
  return 1;
}

uint64_t sub_20A48B2D8@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 15)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A48B1C0);
  return 1;
}

uint64_t sub_20A48B2EC@<X0>(char a1@<W8>)
{
  unint64_t v1;

  if (v1 <= 0xF)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A48B1C0);
  return 1;
}

uint64_t sub_20A48B300@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 8)
    a1 = 0;
  if ((a1 & 1) == 0)
    JUMPOUT(0x20A48B1C0);
  return 1;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for HTTPStatusCode(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for HTTPStatusCode(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

uint64_t sub_20A48B378(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_20A48B394(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    *(_BYTE *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for HTTPStatusCode()
{
  return &type metadata for HTTPStatusCode;
}

CoreODIEssentials::ComputationContext __swiftcall ComputationContext.init(evaluateProfile:shouldCaptureBindings:)(Swift::Bool evaluateProfile, Swift::Bool shouldCaptureBindings)
{
  Swift::Bool *v2;
  CoreODIEssentials::ComputationContext result;

  *v2 = evaluateProfile;
  v2[1] = shouldCaptureBindings;
  result.evaluateProfile = evaluateProfile;
  return result;
}

uint64_t ComputationContext.evaluateProfile.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t ComputationContext.shouldCaptureBindings.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t Dictionary<>.isEquivalent(to:)(uint64_t a1, uint64_t a2)
{
  char v4;

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v4 = sub_20A48B458(a2, a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v4 & 1) != 0)
    return Dictionary<>.isSubset(of:)(a1, a2);
  else
    return 0;
}

uint64_t sub_20A48B458(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  int64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;

  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = a1 + 64;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(a1 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(63 - v6) >> 6;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  while (1)
  {
    v17 = v10;
    if (v7)
    {
      v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v12 = v11 | (v10 << 6);
      if (!*(_QWORD *)(a2 + 16))
        goto LABEL_27;
      goto LABEL_7;
    }
    v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v18 >= v8)
      goto LABEL_30;
    v19 = *(_QWORD *)(v4 + 8 * v18);
    ++v10;
    if (!v19)
    {
      v10 = v17 + 2;
      if (v17 + 2 >= v8)
        goto LABEL_30;
      v19 = *(_QWORD *)(v4 + 8 * v10);
      if (!v19)
      {
        v10 = v17 + 3;
        if (v17 + 3 >= v8)
          goto LABEL_30;
        v19 = *(_QWORD *)(v4 + 8 * v10);
        if (!v19)
        {
          v10 = v17 + 4;
          if (v17 + 4 >= v8)
            goto LABEL_30;
          v19 = *(_QWORD *)(v4 + 8 * v10);
          if (!v19)
          {
            v10 = v17 + 5;
            if (v17 + 5 >= v8)
              goto LABEL_30;
            v19 = *(_QWORD *)(v4 + 8 * v10);
            if (!v19)
              break;
          }
        }
      }
    }
LABEL_26:
    v7 = (v19 - 1) & v19;
    v12 = __clz(__rbit64(v19)) + (v10 << 6);
    if (!*(_QWORD *)(a2 + 16))
    {
LABEL_27:
      v21 = 0;
LABEL_31:
      sub_20A498A68();
      return v21;
    }
LABEL_7:
    v13 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v15 = *v13;
    v14 = v13[1];
    swift_bridgeObjectRetain();
    sub_20A47094C(v15, v14);
    LOBYTE(v15) = v16;
    result = swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
      goto LABEL_27;
  }
  v20 = v17 + 6;
  if (v17 + 6 >= v8)
  {
LABEL_30:
    v21 = 1;
    goto LABEL_31;
  }
  v19 = *(_QWORD *)(v4 + 8 * v20);
  if (v19)
  {
    v10 = v17 + 6;
    goto LABEL_26;
  }
  while (1)
  {
    v10 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v10 >= v8)
      goto LABEL_30;
    v19 = *(_QWORD *)(v4 + 8 * v10);
    ++v20;
    if (v19)
      goto LABEL_26;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t Dictionary<>.isSubset(of:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  _QWORD v27[5];
  __int128 v28;
  _OWORD v29[2];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33[3];

  v23 = a2 + 64;
  v4 = 1 << *(_BYTE *)(a2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a2 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  while (1)
  {
    if (v6)
    {
      v10 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v11 = v10 | (v9 << 6);
LABEL_6:
      v12 = *(_QWORD *)(a2 + 56);
      v13 = (_QWORD *)(*(_QWORD *)(a2 + 48) + 16 * v11);
      v14 = v13[1];
      *(_QWORD *)&v28 = *v13;
      *((_QWORD *)&v28 + 1) = v14;
      sub_20A47BD60(v12 + 40 * v11, (uint64_t)v29);
      swift_bridgeObjectRetain();
      goto LABEL_25;
    }
    v15 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v15 < v7)
    {
      v16 = *(_QWORD *)(v23 + 8 * v15);
      if (v16)
        goto LABEL_10;
      v17 = v9 + 2;
      ++v9;
      if (v15 + 1 < v7)
      {
        v16 = *(_QWORD *)(v23 + 8 * v17);
        if (v16)
          goto LABEL_13;
        v9 = v15 + 1;
        if (v15 + 2 < v7)
        {
          v16 = *(_QWORD *)(v23 + 8 * (v15 + 2));
          if (v16)
          {
            v15 += 2;
            goto LABEL_10;
          }
          v17 = v15 + 3;
          v9 = v15 + 2;
          if (v15 + 3 < v7)
            break;
        }
      }
    }
LABEL_24:
    v6 = 0;
    v30 = 0;
    memset(v29, 0, sizeof(v29));
    v28 = 0u;
LABEL_25:
    sub_20A459C88((uint64_t)&v28, (uint64_t)&v31, &qword_253EB47E0);
    v18 = v32;
    if (!v32)
      goto LABEL_32;
    v19 = v31;
    sub_20A44CFD8(v33, (uint64_t)&v28);
    if (*(_QWORD *)(a1 + 16) && (v20 = sub_20A47094C(v19, v18), (v21 & 1) != 0))
    {
      sub_20A47BD60(*(_QWORD *)(a1 + 56) + 40 * v20, (uint64_t)&v24);
    }
    else
    {
      v26 = 0;
      v24 = 0u;
      v25 = 0u;
    }
    swift_bridgeObjectRelease();
    if (!*((_QWORD *)&v25 + 1))
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v28);
      swift_release();
      sub_20A44CE2C((uint64_t)&v24, &qword_2545FA208);
      return v18 == 0;
    }
    sub_20A44CFD8(&v24, (uint64_t)v27);
    v22 = _s17CoreODIEssentials12ODNAtorProxyC15isEqualBindings3lhs3rhsSbSH_s8Sendablep_SH_sAGptFZ_0(&v28, v27);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v28);
    if ((v22 & 1) == 0)
    {
LABEL_32:
      swift_release();
      return v18 == 0;
    }
  }
  v16 = *(_QWORD *)(v23 + 8 * v17);
  if (v16)
  {
LABEL_13:
    v15 = v17;
LABEL_10:
    v6 = (v16 - 1) & v16;
    v11 = __clz(__rbit64(v16)) + (v15 << 6);
    v9 = v15;
    goto LABEL_6;
  }
  while (1)
  {
    v15 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v15 >= v7)
    {
      v9 = v7 - 1;
      goto LABEL_24;
    }
    v16 = *(_QWORD *)(v23 + 8 * v15);
    ++v17;
    if (v16)
      goto LABEL_10;
  }
LABEL_36:
  __break(1u);
  return result;
}

void *ODNAtorParameters.init(bindings:missingBindings:structuredDeviceData:deviceDataFields:computationContext:contextualErrorInfo:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, _BYTE *a6@<X5>, void *a7@<X8>)
{
  char v13;
  _BYTE v15[1024];
  _QWORD __src[132];

  sub_20A459C88(a3, (uint64_t)v15, &qword_2545FA0C8);
  v13 = *a5;
  LOBYTE(a5) = a5[1];
  LOBYTE(a6) = *a6;
  __src[0] = a1;
  __src[1] = a2;
  sub_20A459C88((uint64_t)v15, (uint64_t)&__src[2], &qword_2545FA0C8);
  __src[130] = a4;
  LOBYTE(__src[131]) = v13;
  BYTE1(__src[131]) = (_BYTE)a5;
  BYTE2(__src[131]) = (_BYTE)a6;
  return memcpy(a7, __src, 0x41BuLL);
}

uint64_t sub_20A48B9BC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  char isUniquelyReferenced_nonNull_native;
  char v24;
  unint64_t v25;
  uint64_t v26;
  _BOOL8 v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t *v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  __int128 *v39;
  uint64_t result;
  int64_t v41;
  int v42;
  int v43;
  __int128 *v44;
  uint64_t v45;
  int64_t v46;
  __int128 *v47;
  uint64_t v48;
  int64_t v49;
  _QWORD v50[128];
  _OWORD v51[64];
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD v58[5];
  _BYTE v59[1032];

  v44 = (__int128 *)MEMORY[0x24BDAC7A8](a1, a2);
  v3 = *v2;
  sub_20A459C88((uint64_t)(v2 + 1), (uint64_t)v59, &qword_2545FA0C8);
  v4 = *((unsigned __int8 *)v2 + 1026);
  v42 = *((unsigned __int8 *)v2 + 1025);
  v43 = v4;
  v5 = *(_QWORD *)(v3 + 64);
  v45 = v3 + 64;
  v6 = 1 << *(_BYTE *)(v3 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & v5;
  v46 = (unint64_t)(v6 + 63) >> 6;
  v47 = &v53;
  v41 = v46 - 1;
  v48 = v3;
  swift_bridgeObjectRetain();
  v49 = 0;
  v9 = (_QWORD *)MEMORY[0x24BEE4B00];
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v49 << 6);
LABEL_8:
      v12 = *(_QWORD *)(v48 + 56);
      v13 = (_QWORD *)(*(_QWORD *)(v48 + 48) + 16 * v11);
      v14 = v13[1];
      *(_QWORD *)&v52 = *v13;
      *((_QWORD *)&v52 + 1) = v14;
      sub_20A47BD60(v12 + 40 * v11, (uint64_t)v47);
      swift_bridgeObjectRetain();
      goto LABEL_27;
    }
    v15 = v49 + 1;
    if (__OFADD__(v49, 1))
      goto LABEL_45;
    if (v15 < v46)
    {
      v16 = *(_QWORD *)(v45 + 8 * v15);
      if (v16)
        goto LABEL_12;
      v17 = v49 + 2;
      ++v49;
      if (v15 + 1 < v46)
      {
        v16 = *(_QWORD *)(v45 + 8 * v17);
        if (v16)
          goto LABEL_15;
        v49 = v15 + 1;
        if (v15 + 2 < v46)
        {
          v16 = *(_QWORD *)(v45 + 8 * (v15 + 2));
          if (v16)
          {
            v15 += 2;
LABEL_12:
            v8 = (v16 - 1) & v16;
            v11 = __clz(__rbit64(v16)) + (v15 << 6);
            v49 = v15;
            goto LABEL_8;
          }
          v17 = v15 + 3;
          v49 = v15 + 2;
          if (v15 + 3 < v46)
          {
            v16 = *(_QWORD *)(v45 + 8 * v17);
            if (!v16)
            {
              while (1)
              {
                v15 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_46;
                if (v15 >= v46)
                {
                  v49 = v41;
                  goto LABEL_26;
                }
                v16 = *(_QWORD *)(v45 + 8 * v15);
                ++v17;
                if (v16)
                  goto LABEL_12;
              }
            }
LABEL_15:
            v15 = v17;
            goto LABEL_12;
          }
        }
      }
    }
LABEL_26:
    v8 = 0;
    v55 = 0;
    v54 = 0u;
    v53 = 0u;
    v52 = 0u;
LABEL_27:
    sub_20A459C88((uint64_t)&v52, (uint64_t)&v56, &qword_253EB47E0);
    v18 = v57;
    if (!v57)
      break;
    v19 = v56;
    v20 = __swift_project_boxed_opaque_existential_1(v58, v58[3]);
    MEMORY[0x24BDAC7A8](v20, v20);
    (*(void (**)(char *))(v22 + 16))((char *)&v41 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
    sub_20A5B8E34();
    v51[0] = v52;
    v51[1] = v53;
    *(_QWORD *)&v51[2] = v54;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v50[0] = v9;
    v25 = sub_20A47094C(v19, v18);
    v26 = v9[2];
    v27 = (v24 & 1) == 0;
    v28 = v26 + v27;
    if (__OFADD__(v26, v27))
    {
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
LABEL_47:
      result = sub_20A5B9218();
      __break(1u);
      return result;
    }
    v29 = v24;
    if (v9[3] >= v28)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v9 = (_QWORD *)v50[0];
        if ((v24 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_20A477800();
        v9 = (_QWORD *)v50[0];
        if ((v29 & 1) != 0)
          goto LABEL_4;
      }
    }
    else
    {
      sub_20A472D40(v28, isUniquelyReferenced_nonNull_native);
      v30 = sub_20A47094C(v19, v18);
      if ((v29 & 1) != (v31 & 1))
        goto LABEL_47;
      v25 = v30;
      v9 = (_QWORD *)v50[0];
      if ((v29 & 1) != 0)
      {
LABEL_4:
        sub_20A497EF4((uint64_t)v51, v9[7] + 40 * v25);
        goto LABEL_5;
      }
    }
    v9[(v25 >> 6) + 8] |= 1 << v25;
    v32 = (uint64_t *)(v9[6] + 16 * v25);
    *v32 = v19;
    v32[1] = v18;
    v33 = v9[7] + 40 * v25;
    v34 = v51[0];
    v35 = v51[1];
    *(_QWORD *)(v33 + 32) = *(_QWORD *)&v51[2];
    *(_OWORD *)v33 = v34;
    *(_OWORD *)(v33 + 16) = v35;
    v36 = v9[2];
    v37 = __OFADD__(v36, 1);
    v38 = v36 + 1;
    if (v37)
      goto LABEL_44;
    v9[2] = v38;
    swift_bridgeObjectRetain();
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  v39 = v44;
  sub_20A57E0E0(v44, (uint64_t)v9);
  swift_bridgeObjectRelease();
  sub_20A459C88((uint64_t)v59, (uint64_t)&v52, &qword_2545FA0C8);
  if (sub_20A47C4E8((uint64_t *)&v52) == 1)
  {
    sub_20A5B92B4();
  }
  else
  {
    sub_20A459C88((uint64_t)v59, (uint64_t)v51, &qword_2545FA0C8);
    memcpy(v50, v51, 0x3F9uLL);
    sub_20A5B92B4();
    ArmandDeviceData.hash(into:)(v39);
  }
  sub_20A5B92B4();
  return sub_20A5B92B4();
}

uint64_t sub_20A48BE8C()
{
  uint64_t v0;
  id v1;
  void *v2;
  unsigned int v3;
  _QWORD v5[128];
  uint64_t v6;
  unint64_t v7;
  uint64_t __src[128];
  _BYTE v9[1024];

  sub_20A459C88(v0 + 8, (uint64_t)v9, &qword_2545FA0C8);
  v1 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v2 = (void *)sub_20A5B88F4();
  v3 = objc_msgSend(v1, sel_BOOLForKey_, v2);

  if (v3)
  {
    __src[0] = 0;
    __src[1] = 0xE000000000000000;
    sub_20A5B8E94();
    v5[1] = 0xE000000000000000;
    sub_20A5B899C();
    sub_20A459C88((uint64_t)v9, (uint64_t)__src, &qword_2545FA0C8);
    sub_20A47D3A4(v9, sub_20A47C178);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA0C8);
    sub_20A5B8960();
    sub_20A5B899C();
    swift_bridgeObjectRelease();
    sub_20A5B899C();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_253EB47D0);
    sub_20A5B8894();
    sub_20A5B899C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_20A5B899C();
    sub_20A5B899C();
    swift_bridgeObjectRelease();
    sub_20A5B899C();
    return 0;
  }
  else
  {
    __src[0] = 0;
    __src[1] = 0xE000000000000000;
    sub_20A5B8E94();
    v6 = 0;
    v7 = 0xE000000000000000;
    sub_20A5B899C();
    sub_20A459C88((uint64_t)v9, (uint64_t)__src, &qword_2545FA0C8);
    if (sub_20A47C4E8(__src) != 1)
    {
      memcpy(v5, __src, 0x3F9uLL);
      ArmandDeviceData.description.getter();
    }
    sub_20A5B899C();
    swift_bridgeObjectRelease();
    sub_20A5B899C();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_253EB47D0);
    sub_20A5B88AC();
    sub_20A5B899C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_20A5B899C();
    sub_20A5B899C();
    swift_bridgeObjectRelease();
    sub_20A5B899C();
    return v6;
  }
}

uint64_t sub_20A48C22C()
{
  const void *v0;
  uint64_t v1;
  uint64_t v3;
  _BYTE __dst[1027];

  memcpy(__dst, v0, sizeof(__dst));
  sub_20A5B929C();
  sub_20A48B9BC((uint64_t)&v3, v1);
  return sub_20A5B92CC();
}

uint64_t sub_20A48C280()
{
  const void *v0;
  uint64_t v1;
  uint64_t v3;
  _BYTE __dst[1027];

  memcpy(__dst, v0, sizeof(__dst));
  sub_20A5B929C();
  sub_20A48B9BC((uint64_t)&v3, v1);
  return sub_20A5B92CC();
}

void *sub_20A48C2E4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  void (*v32)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  int v43;
  uint64_t v44;
  void *result;
  unint64_t v46;
  unint64_t v47;
  int64_t v48;
  unint64_t v49;
  int64_t v50;
  int64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int (*v70)(_QWORD, _QWORD, _QWORD);
  char v71;
  __int128 *v72;
  uint64_t v73;
  unsigned int v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t (*v84)(_QWORD, _QWORD, _QWORD);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  _QWORD v96[2];
  _QWORD *v97;
  unsigned __int8 *v98;
  void (*v99)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t *v105;
  uint64_t *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  int v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  int64_t v119;
  uint64_t v120;
  char *v121;
  _QWORD *v122;
  uint64_t v123;
  uint64_t v124;
  unsigned int v125;
  int v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  _OWORD v140[7];
  _OWORD v141[50];
  char v142;
  char v143;
  _OWORD v144[14];
  _OWORD v145[50];
  _QWORD v146[129];
  _BYTE v147[1048];
  _QWORD v148[129];
  _QWORD v149[129];
  _QWORD v150[128];
  _QWORD v151[131];
  int64_t v152;

  v4 = MEMORY[0x24BDAC7A8](a1, a2);
  v104 = v3;
  v5 = v2;
  v101 = v6;
  v7 = v4;
  v106 = v8;
  v9 = type metadata accessor for ODNAssessmentResult();
  v10 = *(_QWORD *)(v9 - 8);
  v12 = MEMORY[0x24BDAC7A8](v9, v11);
  v100 = (uint64_t)v96 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12, v14);
  v113 = (uint64_t)v96 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA210);
  MEMORY[0x24BDAC7A8](v16, v17);
  v127 = (uint64_t)v96 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA218);
  v21 = MEMORY[0x24BDAC7A8](v19, v20);
  v103 = (char *)v96 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v21, v23);
  v115 = (uint64_t)v96 - v25;
  v27 = MEMORY[0x24BDAC7A8](v24, v26);
  v120 = (uint64_t)v96 - v28;
  MEMORY[0x24BDAC7A8](v27, v29);
  v31 = (char *)v96 - v30;
  sub_20A4912C0(v150);
  v151[0] = v7;
  sub_20A459C88((uint64_t)v150, (uint64_t)&v151[1], &qword_2545FA0C8);
  *(_WORD *)((char *)&v151[128] + 1) = 257;
  v116 = v10;
  v117 = v9;
  v32 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v10 + 56);
  v33 = v7;
  v108 = v31;
  v99 = v32;
  v32(v31, 1, 1, v9);
  v34 = v2[15];
  v35 = v2[16];
  v149[0] = 0;
  v149[1] = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_20A47BDA4((uint64_t)v151);
  swift_bridgeObjectRetain();
  sub_20A5B8E94();
  swift_bridgeObjectRelease();
  v146[0] = 0xD00000000000002ALL;
  v146[1] = 0x800000020A5DD960;
  memcpy(v149, v151, 0x403uLL);
  sub_20A47BDA4((uint64_t)v151);
  sub_20A48BE8C();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A47CDDC((uint64_t)v151);
  if (qword_2545F9AE0 != -1)
LABEL_60:
    swift_once();
  v98 = (unsigned __int8 *)&v148[128] + 1;
  v36 = sub_20A5B8804();
  __swift_project_value_buffer(v36, (uint64_t)qword_254610440);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_20A5044CC();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  v121 = (char *)(v5 + 26);
  swift_beginAccess();
  v105 = v5;
  v37 = v5[26];
  v38 = *(_QWORD *)(v37 + 64);
  v118 = v37 + 64;
  v39 = 1;
  v40 = 1 << *(_BYTE *)(v37 + 32);
  v41 = -1;
  if (v40 < 64)
    v41 = ~(-1 << v40);
  v42 = v41 & v38;
  v123 = v37;
  swift_bridgeObjectRetain();
  sub_20A459C88((uint64_t)v150, (uint64_t)v147, &qword_2545FA0C8);
  v152 = 0;
  v122 = &v146[1];
  v119 = (unint64_t)(v40 + 63) >> 6;
  v107 = (uint64_t)&v133 + 8;
  v109 = 0x7FFFFFFFFFFFFFFFLL;
  v5 = &qword_2545FA0B8;
  v96[1] = 0x800000020A5DDA10;
  v97 = &v148[1];
  v114 = 0x800000020A5DD9E0;
  v102 = v33;
  v124 = v33;
  v43 = 1;
  v112 = v34;
  v44 = v113;
  v33 = v127;
LABEL_5:
  v111 = v39;
  v110 = v43;
  v125 = v39 & 1;
  v126 = v43 & 1;
  while (1)
  {
    v146[0] = v124;
    sub_20A459C88((uint64_t)v147, (uint64_t)v122, &qword_2545FA0C8);
    BYTE1(v146[128]) = v125;
    BYTE2(v146[128]) = v126;
    result = memcpy(v149, v146, 0x403uLL);
    if (!v42)
      break;
    v46 = __clz(__rbit64(v42));
    v42 &= v42 - 1;
    v47 = v46 | (v152 << 6);
LABEL_27:
    memcpy(v148, (const void *)(*(_QWORD *)(v123 + 48) + 1032 * v47), 0x403uLL);
    v52 = *(_QWORD *)v121;
    if (*(_QWORD *)(*(_QWORD *)v121 + 16))
    {
      sub_20A47BDA4((uint64_t)v148);
      sub_20A47BDA4((uint64_t)v148);
      swift_bridgeObjectRetain();
      v53 = sub_20A470AE4(v148);
      if ((v54 & 1) != 0)
      {
        v55 = v53;
        v56 = v35;
        v57 = *(_QWORD *)(v52 + 56);
        v5 = &qword_2545FA0B8;
        v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA0B8);
        v59 = *(_QWORD *)(v58 - 8);
        v60 = v57 + *(_QWORD *)(v59 + 72) * v55;
        v35 = v56;
        v34 = v112;
        sub_20A47D62C(v60, v127, &qword_2545FA0B8);
        v61 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v59 + 56);
        v33 = v127;
        v62 = v58;
        v44 = v113;
        v61(v127, 0, 1, v62);
      }
      else
      {
        v5 = &qword_2545FA0B8;
        v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA0B8);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v33, 1, 1, v64);
      }
      swift_bridgeObjectRelease();
      sub_20A47CDDC((uint64_t)v148);
    }
    else
    {
      v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA0B8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 56))(v33, 1, 1, v63);
      sub_20A47BDA4((uint64_t)v148);
    }
    v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA0B8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 48))(v33, 1, v65) == 1)
    {
      sub_20A47CDDC((uint64_t)v148);
      sub_20A44CE2C(v33, &qword_2545FA210);
      sub_20A459C88((uint64_t)v147, (uint64_t)&v133, &qword_2545FA0C8);
      sub_20A459C88((uint64_t)&v133, (uint64_t)v147, &qword_2545FA0C8);
    }
    else
    {
      swift_release();
      v66 = v33 + *(int *)(v65 + 48);
      v67 = v120;
      sub_20A459C88(v66, v120, &qword_2545FA218);
      v68 = v67;
      v69 = v115;
      sub_20A47D62C(v68, v115, &qword_2545FA218);
      v70 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v116 + 48);
      if (v70(v69, 1, v117) == 1)
      {
        sub_20A47CDDC((uint64_t)v148);
        sub_20A44CE2C(v69, &qword_2545FA218);
        v72 = (__int128 *)v147;
LABEL_47:
        sub_20A459C88((uint64_t)v72, (uint64_t)v144, &qword_2545FA0C8);
        *(_QWORD *)&v133 = v124;
        sub_20A459C88((uint64_t)v144, v107, &qword_2545FA0C8);
        v142 = v125;
        v143 = v126;
        if (v109)
        {
          sub_20A44CE2C(v120, &qword_2545FA218);
          sub_20A459C88((uint64_t)v144, (uint64_t)v147, &qword_2545FA0C8);
          v5 = &qword_2545FA0B8;
          v39 = v111;
          v43 = v110;
          goto LABEL_5;
        }
        sub_20A47CDDC((uint64_t)&v133);
        sub_20A47CDDC((uint64_t)v151);
        v128 = v34;
        v129 = v35;
        *(_QWORD *)&v132 = 0;
        *((_QWORD *)&v132 + 1) = 0xE000000000000000;
        swift_bridgeObjectRetain();
        sub_20A5B8E94();
        swift_bridgeObjectRelease();
        *(_QWORD *)&v132 = 0xD000000000000026;
        *((_QWORD *)&v132 + 1) = 0x800000020A5DD990;
        v78 = (uint64_t)v108;
        if (v70(v108, 1, v117) || !*(_QWORD *)(v78 + 280))
          swift_bridgeObjectRelease();
        else
          swift_bridgeObjectRetain();
        v77 = (uint64_t)v103;
        sub_20A5B899C();
        swift_bridgeObjectRelease();
        v95 = v132;
        LOBYTE(v132) = 13;
        CoreODILogger.debug(_:category:)(v95, *((unint64_t *)&v132 + 1), &v132);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_20A44CE2C(v120, &qword_2545FA218);
        swift_release();
        goto LABEL_50;
      }
      sub_20A465A70(v69, v44, (uint64_t (*)(_QWORD))type metadata accessor for ODNAssessmentResult);
      swift_bridgeObjectRetain();
      sub_20A47BDA4((uint64_t)v146);
      v71 = sub_20A48FF8C((uint64_t)v148, (uint64_t)v149);
      sub_20A47CDDC((uint64_t)v146);
      swift_bridgeObjectRelease();
      if ((v71 & 1) != 0)
      {
        if (*(_QWORD *)(v102 + 16) - *(_QWORD *)(v148[0] + 16) >= v109)
        {
          sub_20A465AB4(v44, (uint64_t (*)(_QWORD))type metadata accessor for ODNAssessmentResult);
          sub_20A47CDDC((uint64_t)v148);
          sub_20A459C88((uint64_t)v147, (uint64_t)&v133, &qword_2545FA0C8);
        }
        else
        {
          v111 = *(_QWORD *)(v102 + 16) - *(_QWORD *)(v148[0] + 16);
          v124 = v148[0];
          sub_20A47CDDC((uint64_t)v146);
          *(_QWORD *)&v132 = v34;
          *((_QWORD *)&v132 + 1) = v35;
          *(_QWORD *)&v133 = 0;
          *((_QWORD *)&v133 + 1) = 0xE000000000000000;
          swift_bridgeObjectRetain();
          sub_20A5B8E94();
          swift_bridgeObjectRelease();
          v130 = 0x20746C75736552;
          v131 = 0xE700000000000000;
          swift_bridgeObjectRetain();
          sub_20A5B899C();
          swift_bridgeObjectRelease();
          sub_20A5B899C();
          v73 = (uint64_t)v108;
          v74 = v70(v108, 1, v117);
          if (v74 || !*(_QWORD *)(v73 + 280))
            swift_bridgeObjectRelease();
          else
            swift_bridgeObjectRetain();
          sub_20A5B899C();
          swift_bridgeObjectRelease();
          LOBYTE(v133) = 13;
          CoreODILogger.debug(_:category:)(v130, v131, &v133);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v75 = (uint64_t)v108;
          sub_20A44CE2C((uint64_t)v108, &qword_2545FA218);
          v44 = v113;
          sub_20A465A70(v113, v75, (uint64_t (*)(_QWORD))type metadata accessor for ODNAssessmentResult);
          v99(v75, 0, 1, v117);
          v76 = v98[1];
          v125 = *v98;
          v126 = v76;
          sub_20A459C88((uint64_t)v97, (uint64_t)&v128, &qword_2545FA0C8);
          sub_20A459C88((uint64_t)&v128, (uint64_t)&v133, &qword_2545FA0C8);
          v109 = v111;
          v111 = v125;
          v110 = v126;
        }
        v72 = &v133;
        goto LABEL_47;
      }
      sub_20A47CDDC((uint64_t)v148);
      v128 = v34;
      v129 = v35;
      *(_QWORD *)&v133 = 0;
      *((_QWORD *)&v133 + 1) = 0xE000000000000000;
      swift_bridgeObjectRetain();
      sub_20A5B8E94();
      v132 = v133;
      swift_bridgeObjectRetain();
      sub_20A5B899C();
      swift_bridgeObjectRelease();
      sub_20A5B899C();
      LOBYTE(v133) = 13;
      CoreODILogger.debug(_:category:)(v132, *((unint64_t *)&v132 + 1), &v133);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_20A465AB4(v44, (uint64_t (*)(_QWORD))type metadata accessor for ODNAssessmentResult);
      sub_20A44CE2C(v120, &qword_2545FA218);
      sub_20A459C88((uint64_t)v147, (uint64_t)&v133, &qword_2545FA0C8);
      sub_20A459C88((uint64_t)&v133, (uint64_t)v147, &qword_2545FA0C8);
      v33 = v127;
      v5 = &qword_2545FA0B8;
    }
  }
  v48 = v152 + 1;
  if (__OFADD__(v152, 1))
  {
    __break(1u);
    goto LABEL_60;
  }
  if (v48 >= v119)
  {
LABEL_49:
    swift_release();
    sub_20A47CDDC((uint64_t)v146);
    sub_20A47CDDC((uint64_t)v151);
    v77 = (uint64_t)v103;
    v78 = (uint64_t)v108;
LABEL_50:
    sub_20A47D62C(v78, v77, &qword_2545FA218);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v116 + 48))(v77, 1, v117) == 1)
    {
      sub_20A44CE2C(v77, &qword_2545FA218);
      *(_QWORD *)&v133 = v112;
      *((_QWORD *)&v133 + 1) = v35;
      LOBYTE(v144[0]) = 13;
      swift_bridgeObjectRetain();
      CoreODILogger.debug(_:category:)(0xD000000000000018, 0x800000020A5DD9C0, v144);
      swift_bridgeObjectRelease();
      v79 = v105;
      v81 = v105[19];
      v80 = v105[20];
      sub_20A4912D0((uint64_t)&v128);
      v136 = 0u;
      v135 = 0u;
      v134 = 0u;
      v133 = 0u;
      v137 = 0u;
      v138 = xmmword_20A5BFCB0;
      *(_QWORD *)&v139 = 1;
      *((_QWORD *)&v139 + 1) = v81;
      *(_QWORD *)&v140[0] = v80;
      sub_20A459C88((uint64_t)&v128, (uint64_t)v140 + 8, &qword_2545FA108);
      v82 = v79[24];
      v83 = v79[25];
      __swift_project_boxed_opaque_existential_1(v79 + 21, v82);
      v144[12] = v140[5];
      v144[13] = v140[6];
      v145[0] = v141[0];
      *(_OWORD *)((char *)v145 + 9) = *(_OWORD *)((char *)v141 + 9);
      v144[8] = v140[1];
      v144[9] = v140[2];
      v144[10] = v140[3];
      v144[11] = v140[4];
      v144[4] = v137;
      v144[5] = v138;
      v144[6] = v139;
      v144[7] = v140[0];
      v144[0] = v133;
      v144[1] = v134;
      v144[2] = v135;
      v144[3] = v136;
      v84 = *(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v83 + 8);
      swift_bridgeObjectRetain();
      v85 = v84(v144, v82, v83);
      v87 = v86;
      v88 = type metadata accessor for ODIErrorAssessment(0);
      v89 = v106;
      v90 = (char *)v106 + *(int *)(v88 + 24);
      sub_20A5B8F48();
      sub_20A4912EC(&v133);
      v91 = sub_20A5B8F6C();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 56))(v90, 0, 1, v91);
      v89[1] = v85;
      v89[2] = v87;
      *v89 = -3179;
      type metadata accessor for ODIAssessmentResult(0);
      v78 = (uint64_t)v108;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      v92 = v100;
      sub_20A465A70(v77, v100, (uint64_t (*)(_QWORD))type metadata accessor for ODNAssessmentResult);
      *(_QWORD *)&v133 = v112;
      *((_QWORD *)&v133 + 1) = v35;
      swift_bridgeObjectRetain();
      v93 = sub_20A45A3B0();
      LOBYTE(v144[0]) = 13;
      CoreODILogger.debug(_:category:)(v93, v94, v144);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_20A4B0B30(v92, v101, v106);
      sub_20A465AB4(v92, (uint64_t (*)(_QWORD))type metadata accessor for ODNAssessmentResult);
    }
    return (void *)sub_20A44CE2C(v78, &qword_2545FA218);
  }
  v49 = *(_QWORD *)(v118 + 8 * v48);
  v50 = v152 + 1;
  if (v49)
    goto LABEL_26;
  v50 = v152 + 2;
  if (v152 + 2 >= v119)
    goto LABEL_49;
  v49 = *(_QWORD *)(v118 + 8 * v50);
  if (v49)
    goto LABEL_26;
  v50 = v152 + 3;
  if (v152 + 3 >= v119)
    goto LABEL_49;
  v49 = *(_QWORD *)(v118 + 8 * v50);
  if (v49)
    goto LABEL_26;
  v50 = v152 + 4;
  if (v152 + 4 >= v119)
    goto LABEL_49;
  v49 = *(_QWORD *)(v118 + 8 * v50);
  if (v49)
    goto LABEL_26;
  v50 = v152 + 5;
  if (v152 + 5 >= v119)
    goto LABEL_49;
  v49 = *(_QWORD *)(v118 + 8 * v50);
  if (v49)
  {
LABEL_26:
    v42 = (v49 - 1) & v49;
    v152 = v50;
    v47 = __clz(__rbit64(v49)) + (v50 << 6);
    goto LABEL_27;
  }
  v51 = v152 + 6;
  if (v152 + 6 >= v119)
    goto LABEL_49;
  v49 = *(_QWORD *)(v118 + 8 * v51);
  if (v49)
  {
    v50 = v152 + 6;
    goto LABEL_26;
  }
  while (1)
  {
    v50 = v51 + 1;
    if (__OFADD__(v51, 1))
      break;
    if (v50 >= v119)
      goto LABEL_49;
    v49 = *(_QWORD *)(v118 + 8 * v50);
    ++v51;
    if (v49)
      goto LABEL_26;
  }
  __break(1u);
  return result;
}

uint64_t ODNAtorProxy.__allocating_init(providerID:serverRepo:useDSID:sessionIdentifier:augmentedProfileReceivedClosure:)(uint64_t a1, uint64_t a2, _BYTE *a3, _BYTE *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v17;
  char *v19;

  *(_QWORD *)(v8 + 16) = a8;
  swift_allocObject();
  v19 = (char *)&dword_2545FA228 + dword_2545FA228;
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 24) = v17;
  *v17 = v8;
  v17[1] = sub_20A48D3B8;
  return ((uint64_t (*)(uint64_t, uint64_t, _BYTE *, _BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))v19)(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_20A48D3B8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  swift_release();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t ODNAtorProxy.init(providerID:serverRepo:useDSID:sessionIdentifier:augmentedProfileReceivedClosure:)(uint64_t a1, uint64_t a2, _BYTE *a3, _BYTE *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v17;
  char *v19;

  v19 = (char *)&dword_2545FA228 + dword_2545FA228;
  *(_QWORD *)(v8 + 16) = a8;
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 24) = v17;
  *v17 = v8;
  v17[1] = sub_20A498A70;
  return ((uint64_t (*)(uint64_t, uint64_t, _BYTE *, _BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))v19)(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_20A48D4CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 7192) = v2;
  *(_QWORD *)(v3 + 7184) = a1;
  type metadata accessor for ODNAssessmentResult();
  *(_QWORD *)(v3 + 7200) = swift_task_alloc();
  *(_QWORD *)(v3 + 7208) = *(_QWORD *)a2;
  sub_20A459C88(a2 + 16, v3 + 1040, &qword_2545FA0C8);
  *(_QWORD *)(v3 + 7216) = *(_QWORD *)(a2 + 1040);
  *(_BYTE *)(v3 + 1033) = *(_BYTE *)(a2 + 1048);
  return swift_task_switch();
}

uint64_t sub_20A48D564()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _BYTE v13[1017];
  char v14[9];

  sub_20A459C88(v0 + 1040, v0 + 2064, &qword_2545FA0C8);
  sub_20A459C88(v0 + 1040, v0 + 16, &qword_2545FA0C8);
  if (sub_20A47C4E8((uint64_t *)(v0 + 16)) != 1)
  {
    v1 = *(_QWORD *)(v0 + 7216);
    sub_20A47D3A4(v0 + 1040, sub_20A47C178);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 2064) = v1;
  }
  sub_20A459C88(v0 + 2064, v0 + 4112, &qword_2545FA0C8);
  sub_20A459C88(v0 + 4112, v0 + 3088, &qword_2545FA0C8);
  if (sub_20A47C4E8((uint64_t *)(v0 + 3088)) == 1)
  {
    v3 = sub_20A44A5C8(32123, 0xE200000000000000);
    v5 = v2;
    v6 = 0;
    v7 = 0xF000000000000000;
  }
  else
  {
    sub_20A459C88(v0 + 4112, v0 + 5136, &qword_2545FA0C8);
    memcpy(v13, (const void *)(v0 + 5136), sizeof(v13));
    sub_20A497F30(v0 + 5136);
    v3 = sub_20A535888();
    v5 = v4;
    sub_20A47D3A4(v0 + 4112, sub_20A47CBD0);
    sub_20A45964C(v3, v5);
    v6 = v3;
    v7 = v5;
  }
  *(_QWORD *)(v0 + 7248) = v7;
  *(_QWORD *)(v0 + 7240) = v6;
  *(_QWORD *)(v0 + 7232) = v5;
  *(_QWORD *)(v0 + 7224) = v3;
  v8 = *(_QWORD *)(v0 + 7192);
  v9 = *(_QWORD *)(v8 + 120);
  *(_QWORD *)(v0 + 7256) = v9;
  v10 = *(_QWORD *)(v8 + 128);
  *(_QWORD *)(v0 + 7264) = v10;
  *(_QWORD *)v13 = v9;
  *(_QWORD *)&v13[8] = v10;
  v14[0] = 8;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD000000000000053, 0x800000020A5DDB30, v14);
  swift_bridgeObjectRelease();
  sub_20A45964C(v3, v5);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 7272) = v11;
  *v11 = v0;
  v11[1] = sub_20A48D7B4;
  return sub_20A4B66D8(*(_QWORD *)(v0 + 7200), *(_QWORD *)(v0 + 7208), v3, v5, 1, *(_BYTE *)(v0 + 1033));
}

uint64_t sub_20A48D7B4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 7232);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 7224);
  swift_task_dealloc();
  sub_20A44BD90(v2, v1);
  return swift_task_switch();
}

uint64_t sub_20A48D828()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD v12[2];
  unint64_t v13;
  unint64_t v14;

  v1 = *(_QWORD *)(v0 + 7264);
  v2 = *(_QWORD *)(v0 + 7200);
  v13 = *(_QWORD *)(v0 + 7256);
  v14 = v1;
  LOBYTE(v12[0]) = 8;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD000000000000024, 0x800000020A5DDB90, v12);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v2 + 296))
  {
    v3 = *(_QWORD *)(v0 + 7264);
    v4 = *(_QWORD *)(v0 + 7248);
    v5 = *(_QWORD *)(v0 + 7240);
    v6 = *(_QWORD *)(v0 + 7232);
    v7 = *(_QWORD *)(v0 + 7224);
    v12[0] = *(_QWORD *)(v0 + 7256);
    v12[1] = v3;
    v13 = 0;
    v14 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_20A5B8E94();
    swift_bridgeObjectRelease();
    v13 = 0xD000000000000014;
    v14 = 0x800000020A5DDBC0;
    sub_20A5B899C();
    swift_bridgeObjectRelease();
    v8 = v13;
    LOBYTE(v13) = 8;
    CoreODILogger.debug(_:category:)(v8, v14, &v13);
    swift_bridgeObjectRelease();
    sub_20A44BD90(v7, v6);
    sub_20A44CFC4(v5, v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 7232);
    v10 = *(_QWORD *)(v0 + 7224);
    sub_20A44CFC4(*(_QWORD *)(v0 + 7240), *(_QWORD *)(v0 + 7248));
    sub_20A44BD90(v10, v9);
  }
  sub_20A465A70(*(_QWORD *)(v0 + 7200), *(_QWORD *)(v0 + 7184), (uint64_t (*)(_QWORD))type metadata accessor for ODNAssessmentResult);
  sub_20A459C88(v0 + 2064, v0 + 6160, &qword_2545FA0C8);
  sub_20A47D3A4(v0 + 6160, sub_20A47CBD0);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> static ODNAtorProxy.workflowIdFromServiceProviderId(_:)()
{
  swift_bridgeObjectRetain();
  sub_20A5B899C();
}

uint64_t sub_20A48DA54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;

  *(_QWORD *)(v3 + 2112) = v2;
  *(_QWORD *)(v3 + 2104) = a1;
  type metadata accessor for ODNAssessmentResult();
  *(_QWORD *)(v3 + 2120) = swift_task_alloc();
  *(_OWORD *)(v3 + 2128) = *(_OWORD *)a2;
  memcpy((void *)(v3 + 1072), (const void *)(a2 + 16), 0x408uLL);
  v5 = *(_BYTE *)(a2 + 1048);
  *(_BYTE *)(v3 + 1067) = v5;
  *(_BYTE *)(v3 + 2168) = v5;
  *(_WORD *)(v3 + 1068) = *(_WORD *)(a2 + 1049);
  return swift_task_switch();
}

uint64_t sub_20A48DAF0()
{
  uint64_t v0;
  char v1;
  char v2;
  uint64_t v3;
  _QWORD *v4;
  __int128 v6;
  _QWORD v7[2];

  v1 = *(_BYTE *)(v0 + 1069);
  v2 = *(_BYTE *)(v0 + 1068);
  v3 = *(_QWORD *)(v0 + 2112);
  *(_QWORD *)(v0 + 2144) = *(_QWORD *)(v3 + 120);
  *(_QWORD *)(v0 + 2152) = *(_QWORD *)(v3 + 128);
  v7[0] = 0;
  v7[1] = 0xE000000000000000;
  swift_bridgeObjectRetain();
  v6 = *(_OWORD *)(v0 + 2128);
  sub_20A5B8E94();
  sub_20A5B899C();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB47D0);
  sub_20A5B88AC();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  LOBYTE(v7[0]) = 8;
  CoreODILogger.debug(_:category:)(0, 0xE000000000000000, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(v0 + 16) = v6;
  memcpy((void *)(v0 + 32), (const void *)(v0 + 1072), 0x408uLL);
  *(_BYTE *)(v0 + 1064) = *(_BYTE *)(v0 + 2168);
  *(_BYTE *)(v0 + 1065) = v2;
  *(_BYTE *)(v0 + 1066) = v1;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 2160) = v4;
  *v4 = v0;
  v4[1] = sub_20A48DCF0;
  return sub_20A48DE0C(*(_QWORD *)(v0 + 2120), (const void *)(v0 + 16));
}

uint64_t sub_20A48DCF0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A48DD48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  unint64_t v4;
  unint64_t v5;
  char v7;

  v1 = *(_QWORD *)(v0 + 2136);
  v2 = *(_QWORD *)(v0 + 2120);
  v3 = *(uint64_t **)(v0 + 2104);
  swift_bridgeObjectRetain();
  v4 = sub_20A45A3B0();
  v7 = 14;
  CoreODILogger.debug(_:category:)(v4, v5, &v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_20A4B0B30(v2, v1, v3);
  sub_20A465AB4(v2, (uint64_t (*)(_QWORD))type metadata accessor for ODNAssessmentResult);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A48DE0C(uint64_t a1, const void *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;

  v3[530] = v2;
  v3[529] = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB5180);
  v3[531] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA0B8);
  v3[532] = v5;
  v3[533] = *(_QWORD *)(v5 - 8);
  v3[534] = swift_task_alloc();
  v3[535] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA210);
  v3[536] = swift_task_alloc();
  v3[537] = swift_task_alloc();
  v3[538] = swift_task_alloc();
  memcpy(v3 + 2, a2, 0x41BuLL);
  return swift_task_switch();
}

uint64_t sub_20A48DF08()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  void (*v13)(uint64_t *, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD *v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  void (*v48)(uint64_t *, _QWORD, uint64_t, uint64_t);
  uint64_t v49;
  _QWORD v50[2];
  _QWORD __dst[130];

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD **)(v0 + 4240);
  sub_20A459C88(v0 + 32, v0 + 3136, &qword_2545FA0C8);
  v3 = *(_BYTE *)(v0 + 1064);
  v4 = *(_BYTE *)(v0 + 1065) & 1;
  *(_QWORD *)(v0 + 2104) = v1;
  sub_20A459C88(v0 + 3136, v0 + 2112, &qword_2545FA0C8);
  *(_BYTE *)(v0 + 3129) = v3 & 1;
  *(_BYTE *)(v0 + 3130) = v4;
  v49 = v0 + 2104;
  memcpy((void *)(v0 + 1072), (const void *)(v0 + 2104), 0x403uLL);
  v5 = v2[15];
  v6 = v2[16];
  __dst[0] = 8;
  __dst[1] = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_20A47D3A4(v0 + 3136, sub_20A47C178);
  swift_bridgeObjectRetain();
  sub_20A5B8E94();
  sub_20A5B899C();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  CoreODILogger.debug(_:category:)(0, 0xE000000000000000, __dst);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v47 = v5;
  __dst[0] = 0;
  __dst[1] = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_20A5B8E94();
  swift_bridgeObjectRelease();
  v50[0] = 0xD000000000000019;
  v50[1] = 0x800000020A5DDC20;
  memcpy(__dst, (const void *)(v0 + 1072), 0x403uLL);
  sub_20A48BE8C();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  LOBYTE(__dst[0]) = 8;
  CoreODILogger.debug(_:category:)(0xD000000000000019, 0x800000020A5DDC20, __dst);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v7 = v2[26];
  if (*(_QWORD *)(v7 + 16))
  {
    sub_20A47BDA4(v49);
    swift_bridgeObjectRetain();
    v8 = sub_20A470AE4((void *)(v0 + 1072));
    v9 = *(uint64_t **)(v0 + 4304);
    v10 = *(_QWORD *)(v0 + 4264);
    v11 = *(_QWORD *)(v0 + 4256);
    if ((v12 & 1) != 0)
    {
      sub_20A47D62C(*(_QWORD *)(v7 + 56) + *(_QWORD *)(v10 + 72) * v8, *(_QWORD *)(v0 + 4304), &qword_2545FA0B8);
      v13 = *(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v10 + 56);
      v13(v9, 0, 1, v11);
    }
    else
    {
      v13 = *(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v10 + 56);
      v13(*(uint64_t **)(v0 + 4304), 1, 1, v11);
    }
    swift_bridgeObjectRelease();
    sub_20A47CDDC(v49);
  }
  else
  {
    v13 = *(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v0 + 4264) + 56);
    v13(*(uint64_t **)(v0 + 4304), 1, 1, *(_QWORD *)(v0 + 4256));
  }
  *(_QWORD *)(v0 + 4312) = v13;
  v14 = *(_QWORD *)(v0 + 4296);
  v15 = *(_QWORD *)(v0 + 4264);
  v16 = *(_QWORD *)(v0 + 4256);
  sub_20A47D62C(*(_QWORD *)(v0 + 4304), v14, &qword_2545FA210);
  v17 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v14, 1, v16);
  v18 = *(uint64_t **)(v0 + 4296);
  v48 = v13;
  if (v17 == 1)
  {
    v19 = &qword_2545FA210;
    goto LABEL_9;
  }
  v33 = *(_QWORD **)(v0 + 4280);
  v34 = *(_QWORD **)(v0 + 4272);
  v35 = *(_QWORD *)(v0 + 4256);
  v36 = *(int *)(v35 + 48);
  v37 = (uint64_t)v33 + v36;
  v38 = *v18;
  *(_QWORD *)(v0 + 4320) = *v18;
  *v33 = v38;
  sub_20A459C88((uint64_t)v18 + v36, (uint64_t)v33 + v36, &qword_2545FA218);
  __dst[0] = v47;
  __dst[1] = v6;
  LOBYTE(v50[0]) = 8;
  swift_retain();
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD000000000000036, 0x800000020A5DDC40, v50);
  swift_bridgeObjectRelease();
  v39 = (uint64_t)v34 + *(int *)(v35 + 48);
  *v34 = v38;
  sub_20A47D62C(v37, v39, &qword_2545FA218);
  v40 = type metadata accessor for ODNAssessmentResult();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 48))(v39, 1, v40) == 1)
  {
    if (v38)
    {
      sub_20A47CDDC(v49);
      __dst[0] = v47;
      __dst[1] = v6;
      LOBYTE(v50[0]) = 8;
      swift_bridgeObjectRetain();
      CoreODILogger.debug(_:category:)(0xD00000000000004BLL, 0x800000020A5DDCD0, v50);
      swift_bridgeObjectRelease();
      v41 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 4328) = v41;
      *v41 = v0;
      v41[1] = sub_20A48E69C;
      return sub_20A5B8B7C();
    }
    v46 = *(uint64_t **)(v0 + 4280);
    __dst[0] = v47;
    __dst[1] = v6;
    LOBYTE(v50[0]) = 8;
    swift_bridgeObjectRetain();
    CoreODILogger.fault(_:category:)(0xD000000000000044, 0x800000020A5DDC80, v50);
    swift_bridgeObjectRelease();
    v19 = &qword_2545FA0B8;
    v18 = v46;
LABEL_9:
    sub_20A44CE2C((uint64_t)v18, v19);
    v20 = *(uint64_t **)(v0 + 4288);
    v21 = *(_QWORD *)(v0 + 4256);
    v22 = *(_QWORD *)(v0 + 4248);
    v23 = *(_QWORD *)(v0 + 4240);
    v24 = sub_20A5B8B64();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v22, 1, 1, v24);
    v26 = sub_20A498124(&qword_2545FA2A8, v25, (uint64_t (*)(uint64_t))type metadata accessor for ODNAtorProxy, (uint64_t)&protocol conformance descriptor for ODNAtorProxy);
    v27 = (_QWORD *)swift_allocObject();
    v27[2] = v23;
    v27[3] = v26;
    v27[4] = v23;
    memcpy(v27 + 5, (const void *)(v0 + 16), 0x41BuLL);
    swift_retain_n();
    sub_20A498350(v0 + 16);
    v28 = sub_20A4C6B24(v22, (uint64_t)&unk_2545FA2B0, (uint64_t)v27);
    *(_QWORD *)(v0 + 4336) = v28;
    v29 = (char *)v20 + *(int *)(v21 + 48);
    *v20 = v28;
    v30 = type metadata accessor for ODNAssessmentResult();
    *(_QWORD *)(v0 + 4344) = v30;
    v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56);
    *(_QWORD *)(v0 + 4352) = v31;
    v31(v29, 1, 1, v30);
    v48(v20, 0, 1, v21);
    swift_beginAccess();
    sub_20A47BDA4(v49);
    swift_retain();
    sub_20A4DB8AC((uint64_t)v20, (void *)(v0 + 1072));
    swift_endAccess();
    v32 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 4360) = v32;
    *v32 = v0;
    v32[1] = sub_20A48E7A0;
    return sub_20A5B8B7C();
  }
  v43 = *(_QWORD *)(v0 + 4304);
  v44 = *(_QWORD *)(v0 + 4280);
  v45 = *(_QWORD *)(v0 + 4232);
  swift_release();
  sub_20A47CDDC(v49);
  sub_20A465A70(v39, v45, (uint64_t (*)(_QWORD))type metadata accessor for ODNAssessmentResult);
  __dst[0] = v47;
  __dst[1] = v6;
  LOBYTE(v50[0]) = 8;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD000000000000033, 0x800000020A5DDD20, v50);
  swift_bridgeObjectRelease();
  sub_20A44CE2C(v44, &qword_2545FA0B8);
  sub_20A44CE2C(v43, &qword_2545FA210);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A48E69C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A48E6F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 4304);
  v2 = *(_QWORD *)(v0 + 4280);
  swift_release();
  sub_20A44CE2C(v2, &qword_2545FA0B8);
  sub_20A44CE2C(v1, &qword_2545FA210);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A48E7A0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A48E7F8()
{
  uint64_t v0;
  void (*v1)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v2;
  void (*v3)(_QWORD *, _QWORD, uint64_t, uint64_t);
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 4352);
  v2 = *(_QWORD *)(v0 + 4344);
  v3 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v0 + 4312);
  v9 = *(_QWORD *)(v0 + 4304);
  v4 = *(_QWORD **)(v0 + 4288);
  v5 = *(_QWORD *)(v0 + 4256);
  v6 = *(_QWORD *)(v0 + 4232);
  v7 = (uint64_t)v4 + *(int *)(v5 + 48);
  *v4 = 0;
  sub_20A498734(v6, v7, (uint64_t (*)(_QWORD))type metadata accessor for ODNAssessmentResult);
  v1(v7, 0, 1, v2);
  v3(v4, 0, 1, v5);
  swift_beginAccess();
  sub_20A4DB8AC((uint64_t)v4, (void *)(v0 + 1072));
  swift_endAccess();
  swift_release();
  sub_20A44CE2C(v9, &qword_2545FA210);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A48E944(uint64_t a1, int a2, int a3, int a4, void *__src)
{
  uint64_t v5;
  _QWORD *v7;

  memcpy((void *)(v5 + 16), __src, 0x41BuLL);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 1072) = v7;
  *v7 = v5;
  v7[1] = sub_20A48E9B8;
  return sub_20A48D4CC(a1, v5 + 16);
}

uint64_t sub_20A48E9B8()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_20A48EA00(uint64_t a1, _BYTE *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v6 + 40) = a5;
  *(_QWORD *)(v6 + 48) = v5;
  *(_QWORD *)(v6 + 24) = a3;
  *(_QWORD *)(v6 + 32) = a4;
  *(_QWORD *)(v6 + 16) = a1;
  *(_BYTE *)(v6 + 65) = *a2;
  return swift_task_switch();
}

uint64_t sub_20A48EA28()
{
  uint64_t v0;
  _QWORD *v1;

  *(_BYTE *)(v0 + 64) = *(_BYTE *)(v0 + 65);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v1;
  *v1 = v0;
  v1[1] = sub_20A4808C4;
  return sub_20A4B6DF0(*(_QWORD *)(v0 + 16), (_BYTE *)(v0 + 64), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t ODNAtorProxy.deinit()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_20A492DF8(v0 + 152);
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t ODNAtorProxy.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_20A492DF8(v0 + 152);
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t ODNAtorProxy.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

BOOL static AssessmentOutcome.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t AssessmentOutcome.hash(into:)()
{
  return sub_20A5B92A8();
}

uint64_t AssessmentOutcome.hashValue.getter()
{
  sub_20A5B929C();
  sub_20A5B92A8();
  return sub_20A5B92CC();
}

uint64_t AssessmentTiming.init()@<X0>(uint64_t a1@<X8>)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  void (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);

  sub_20A5B8F48();
  v2 = (int *)type metadata accessor for AssessmentTiming();
  sub_20A5B8F48();
  v3 = a1 + v2[6];
  v4 = sub_20A5B8F6C();
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56);
  v6(v3, 1, 1, v4);
  v6(a1 + v2[7], 1, 1, v4);
  v6(a1 + v2[8], 1, 1, v4);
  v6(a1 + v2[9], 1, 1, v4);
  v6(a1 + v2[10], 1, 1, v4);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v6)(a1 + v2[11], 1, 1, v4);
}

BOOL AssessmentTiming.hasReceivedFeedback.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _BOOL8 v7;
  uint64_t v9;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for AssessmentTiming();
  sub_20A47D62C(v0 + *(int *)(v5 + 36), (uint64_t)v4, &qword_2545F9F90);
  v6 = sub_20A5B8F6C();
  v7 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v4, 1, v6) != 1;
  sub_20A44CE2C((uint64_t)v4, &qword_2545F9F90);
  return v7;
}

Swift::Void __swiftcall AssessmentTiming.profileFetched()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5B8F48();
  v5 = sub_20A5B8F6C();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 0, 1, v5);
  v6 = type metadata accessor for AssessmentTiming();
  sub_20A492E68((uint64_t)v4, v0 + *(int *)(v6 + 40));
}

Swift::Void __swiftcall AssessmentTiming.attributesUpdated()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int *v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = sub_20A5B8F6C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1, v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5B8F48();
  v6 = (int *)type metadata accessor for AssessmentTiming();
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 40))(v0 + v6[5], v5, v1);
  v7 = v0 + v6[7];
  sub_20A44CE2C(v7, &qword_2545F9F90);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56);
  v8(v7, 1, 1, v1);
  v9 = v0 + v6[6];
  sub_20A44CE2C(v9, &qword_2545F9F90);
  v8(v9, 1, 1, v1);
  v10 = v0 + v6[8];
  sub_20A44CE2C(v10, &qword_2545F9F90);
  v8(v10, 1, 1, v1);
  v11 = v0 + v6[9];
  sub_20A44CE2C(v11, &qword_2545F9F90);
  v8(v11, 1, 1, v1);
}

uint64_t AssessmentTiming.assessmentReady(at:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for AssessmentTiming() + 28);
  return sub_20A492EB0(a1, v3);
}

Swift::Void __swiftcall AssessmentTiming.assesmentRequested()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t, uint64_t, uint64_t);
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5B8F48();
  v5 = sub_20A5B8F6C();
  v6 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
  v6(v4, 0, 1, v5);
  v7 = (int *)type metadata accessor for AssessmentTiming();
  sub_20A492E68((uint64_t)v4, v0 + v7[6]);
  v8 = v0 + v7[8];
  sub_20A44CE2C(v8, &qword_2545F9F90);
  v6((char *)v8, 1, 1, v5);
  v9 = v0 + v7[9];
  sub_20A44CE2C(v9, &qword_2545F9F90);
  v6((char *)v9, 1, 1, v5);
}

Swift::Void __swiftcall AssessmentTiming.assessmentReturned()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5B8F48();
  v5 = sub_20A5B8F6C();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 0, 1, v5);
  v6 = type metadata accessor for AssessmentTiming();
  sub_20A492E68((uint64_t)v4, v0 + *(int *)(v6 + 32));
}

Swift::Void __swiftcall AssessmentTiming.feedbackReceived()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5B8F48();
  v5 = sub_20A5B8F6C();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 0, 1, v5);
  v6 = (int *)type metadata accessor for AssessmentTiming();
  sub_20A492E68((uint64_t)v4, v0 + v6[9]);
  sub_20A492EB0(v0 + v6[7], v0 + v6[11]);
}

uint64_t AssessmentTiming.profileFetchDuration.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_20A5B8F6C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for AssessmentTiming();
  sub_20A47D62C(v0 + *(int *)(v10 + 40), (uint64_t)v4, &qword_2545F9F90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_20A44CE2C((uint64_t)v4, &qword_2545F9F90);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v4, v5);
    sub_20A5B8F60();
    v12 = sub_20A5B9308();
    v14 = (double)v13 / 1.0e18 + (double)v12;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    return *(_QWORD *)&v14;
  }
}

uint64_t AssessmentTiming.updateToAssessmentDuration.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_20A5B8F6C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for AssessmentTiming();
  sub_20A47D62C(v0 + *(int *)(v10 + 28), (uint64_t)v4, &qword_2545F9F90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_20A44CE2C((uint64_t)v4, &qword_2545F9F90);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v4, v5);
    sub_20A5B8F60();
    v12 = sub_20A5B9308();
    v14 = (double)v13 / 1.0e18 + (double)v12;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    return *(_QWORD *)&v14;
  }
}

uint64_t AssessmentTiming.updateToFeedbackDuration.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_20A5B8F6C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for AssessmentTiming();
  sub_20A47D62C(v0 + *(int *)(v10 + 36), (uint64_t)v4, &qword_2545F9F90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_20A44CE2C((uint64_t)v4, &qword_2545F9F90);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v4, v5);
    sub_20A5B8F60();
    v12 = sub_20A5B9308();
    v14 = (double)v13 / 1.0e18 + (double)v12;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    return *(_QWORD *)&v14;
  }
}

uint64_t AssessmentTiming.assessmentReadyBeforeFeedbackDuration.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  double v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
  v3 = MEMORY[0x24BDAC7A8](v1, v2);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3, v6);
  v8 = (char *)&v27 - v7;
  v9 = sub_20A5B8F6C();
  v10 = *(_QWORD *)(v9 - 8);
  v12 = MEMORY[0x24BDAC7A8](v9, v11);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12, v15);
  v17 = (char *)&v27 - v16;
  v18 = type metadata accessor for AssessmentTiming();
  sub_20A47D62C(v0 + *(int *)(v18 + 28), (uint64_t)v8, &qword_2545F9F90);
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v19(v8, 1, v9) == 1)
  {
    v20 = (uint64_t)v8;
LABEL_5:
    sub_20A44CE2C(v20, &qword_2545F9F90);
    return 0;
  }
  v21 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v21(v17, v8, v9);
  sub_20A47D62C(v0 + *(int *)(v18 + 36), (uint64_t)v5, &qword_2545F9F90);
  if (v19(v5, 1, v9) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
    v20 = (uint64_t)v5;
    goto LABEL_5;
  }
  v21(v14, v5, v9);
  sub_20A5B8F60();
  v23 = sub_20A5B9308();
  v25 = (double)v24 / 1.0e18 + (double)v23;
  v26 = *(void (**)(char *, uint64_t))(v10 + 8);
  v26(v14, v9);
  v26(v17, v9);
  return *(_QWORD *)&v25;
}

uint64_t AssessmentTiming.requestToReturnDuration.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  double v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
  v3 = MEMORY[0x24BDAC7A8](v1, v2);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3, v6);
  v8 = (char *)&v27 - v7;
  v9 = sub_20A5B8F6C();
  v10 = *(_QWORD *)(v9 - 8);
  v12 = MEMORY[0x24BDAC7A8](v9, v11);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12, v15);
  v17 = (char *)&v27 - v16;
  v18 = type metadata accessor for AssessmentTiming();
  sub_20A47D62C(v0 + *(int *)(v18 + 32), (uint64_t)v8, &qword_2545F9F90);
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v19(v8, 1, v9) == 1)
  {
    v20 = (uint64_t)v8;
LABEL_5:
    sub_20A44CE2C(v20, &qword_2545F9F90);
    return 0;
  }
  v21 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v21(v17, v8, v9);
  sub_20A47D62C(v0 + *(int *)(v18 + 24), (uint64_t)v5, &qword_2545F9F90);
  if (v19(v5, 1, v9) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
    v20 = (uint64_t)v5;
    goto LABEL_5;
  }
  v21(v14, v5, v9);
  sub_20A5B8F60();
  v23 = sub_20A5B9308();
  v25 = (double)v24 / 1.0e18 + (double)v23;
  v26 = *(void (**)(char *, uint64_t))(v10 + 8);
  v26(v14, v9);
  v26(v17, v9);
  return *(_QWORD *)&v25;
}

double AssessmentTiming.timeSinceLastUpdate.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v9;

  v0 = sub_20A5B8F6C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for AssessmentTiming();
  sub_20A5B8F48();
  sub_20A5B8F60();
  v5 = sub_20A5B9308();
  v7 = (double)v6 / 1.0e18 + (double)v5;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  return v7;
}

uint64_t static AssessmentTiming.lastUpdateTimesEqual(lhs:rhs:)()
{
  type metadata accessor for AssessmentTiming();
  return sub_20A5B8F54();
}

BOOL AssessmentTiming.assessmentHasBeenRequested.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _BOOL8 v7;
  uint64_t v9;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for AssessmentTiming();
  sub_20A47D62C(v0 + *(int *)(v5 + 24), (uint64_t)v4, &qword_2545F9F90);
  v6 = sub_20A5B8F6C();
  v7 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v4, 1, v6) != 1;
  sub_20A44CE2C((uint64_t)v4, &qword_2545F9F90);
  return v7;
}

BOOL AssessmentTiming.assessmentHasBeenReturned.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _BOOL8 v7;
  uint64_t v9;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for AssessmentTiming();
  sub_20A47D62C(v0 + *(int *)(v5 + 32), (uint64_t)v4, &qword_2545F9F90);
  v6 = sub_20A5B8F6C();
  v7 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v4, 1, v6) != 1;
  sub_20A44CE2C((uint64_t)v4, &qword_2545F9F90);
  return v7;
}

uint64_t AssessmentTiming.feedbackHasBeenReceivedForAssessmentWithCurrentTime.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t (*v21)(char *, uint64_t, uint64_t);
  int v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v28;
  char *v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;

  v1 = v0;
  v2 = sub_20A5B8F6C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v32 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA250);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for AssessmentTiming();
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
  v16 = MEMORY[0x24BDAC7A8](v14, v15);
  v33 = (uint64_t)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16, v18);
  v20 = (char *)&v31 - v19;
  sub_20A47D62C(v1 + *(int *)(v10 + 28), (uint64_t)&v31 - v19, &qword_2545F9F90);
  v34 = v3;
  v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48);
  v22 = v21(v20, 1, v2);
  sub_20A44CE2C((uint64_t)v20, &qword_2545F9F90);
  sub_20A498734(v1, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for AssessmentTiming);
  if (v22 == 1)
  {
    sub_20A465AB4((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for AssessmentTiming);
LABEL_9:
    v25 = 0;
    return v25 & 1;
  }
  v23 = (uint64_t)&v13[*(int *)(v10 + 28)];
  v24 = (uint64_t)&v9[*(int *)(v6 + 48)];
  sub_20A47D62C((uint64_t)&v13[*(int *)(v10 + 44)], (uint64_t)v9, &qword_2545F9F90);
  sub_20A47D62C(v23, v24, &qword_2545F9F90);
  if (v21(v9, 1, v2) != 1)
  {
    v26 = v33;
    sub_20A47D62C((uint64_t)v9, v33, &qword_2545F9F90);
    if (v21((char *)v24, 1, v2) != 1)
    {
      v28 = v34;
      v29 = v32;
      (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v32, v24, v2);
      sub_20A498124(&qword_2545FA258, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6DC8], MEMORY[0x24BEE6DF0]);
      v25 = sub_20A5B88E8();
      v30 = *(void (**)(char *, uint64_t))(v28 + 8);
      v30(v29, v2);
      sub_20A465AB4((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for AssessmentTiming);
      v30((char *)v26, v2);
      sub_20A44CE2C((uint64_t)v9, &qword_2545F9F90);
      return v25 & 1;
    }
    sub_20A465AB4((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for AssessmentTiming);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v26, v2);
    goto LABEL_8;
  }
  sub_20A465AB4((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for AssessmentTiming);
  if (v21((char *)v24, 1, v2) != 1)
  {
LABEL_8:
    sub_20A44CE2C((uint64_t)v9, &qword_2545FA250);
    goto LABEL_9;
  }
  sub_20A44CE2C((uint64_t)v9, &qword_2545F9F90);
  v25 = 1;
  return v25 & 1;
}

uint64_t sub_20A48FF8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  __int128 *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _OWORD v17[64];
  _OWORD __dst[64];
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[1024];
  _BYTE v23[1024];
  uint64_t v24[128];
  _OWORD v25[64];
  uint64_t v26[128];
  _QWORD v27[128];
  _BYTE v28[24];
  __int128 v29;
  __int128 v30;
  __int128 v31;
  char v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int16 v38;
  __int128 v39;
  char v40;
  __int128 v41;
  __int128 v42;
  _OWORD v43[5];
  _OWORD v44[3];
  char v45;
  __int128 v46;
  char v47;
  uint64_t v48;
  char v49;
  __int128 v50;
  __int128 v51;
  __int16 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  char v57;
  _QWORD v58[3];

  v2 = MEMORY[0x24BDAC7A8](a1, a2);
  v4 = v3;
  v5 = v2;
  v20 = v6;
  v21 = v7;
  if ((*(_BYTE *)(v3 + 1025) & 1) == 0 || (*(_BYTE *)(v2 + 1025) & 1) != 0)
  {
    v8 = *(_QWORD *)v2;
    v9 = *(_QWORD *)v3;
    swift_bridgeObjectRetain();
    if ((Dictionary<>.isSubset(of:)(v9, v8) & 1) == 0)
    {
      v27[0] = 0;
      v27[1] = 0xE000000000000000;
      sub_20A5B8E94();
      sub_20A5B899C();
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_253EB47D0);
      sub_20A5B8894();
      sub_20A5B899C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_20A5B899C();
      swift_bridgeObjectRetain();
      sub_20A5B8894();
      sub_20A5B899C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (qword_2545F9AE0 != -1)
        swift_once();
      v13 = sub_20A5B8804();
      __swift_project_value_buffer(v13, (uint64_t)qword_254610440);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_20A5044CC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      goto LABEL_10;
    }
    sub_20A459C88(v5 + 8, (uint64_t)v23, &qword_2545FA0C8);
    sub_20A459C88((uint64_t)v23, (uint64_t)v24, &qword_2545FA0C8);
    if (sub_20A47C4E8(v24) == 1)
    {
      LOBYTE(v27[0]) = 13;
      v10 = 0xD000000000000026;
      v11 = 0x800000020A5DDEE0;
      v12 = (__int128 *)v27;
    }
    else
    {
      memcpy(v25, v24, 0x3F9uLL);
      sub_20A459C88(v4 + 8, (uint64_t)v22, &qword_2545FA0C8);
      sub_20A459C88((uint64_t)v22, (uint64_t)v26, &qword_2545FA0C8);
      if (sub_20A47C4E8(v26) != 1)
      {
        memcpy(v27, v26, 0x3F9uLL);
        memcpy(__dst, v25, 0x3F9uLL);
        memcpy(v17, v26, 0x3F9uLL);
        sub_20A47D3A4(v22, sub_20A47C178);
        sub_20A47D3A4(v23, sub_20A47C178);
        if ((_s17CoreODIEssentials16ArmandDeviceDataV2eeoiySbAC_ACtFZ_0((uint64_t *)__dst, (uint64_t)v17) & 1) == 0)
        {
          memcpy(__dst, v25, 0x3F9uLL);
          memcpy(v17, v27, 0x3F9uLL);
          v14 = _s17CoreODIEssentials16ArmandDeviceDataV21isLessCompleteOrEqual3lhs2toSbAC_ACtFZ_0((uint64_t)__dst, (uint64_t)v17);
          LOBYTE(__dst[0]) = 13;
          CoreODILogger.debug(_:category:)(0xD000000000000037, 0x800000020A5DDE80, __dst);
          sub_20A47D3A4(v22, sub_20A47CBD0);
          sub_20A47D3A4(v23, sub_20A47CBD0);
          goto LABEL_18;
        }
        LOBYTE(__dst[0]) = 13;
        CoreODILogger.debug(_:category:)(0xD00000000000001ELL, 0x800000020A5DDEC0, __dst);
        sub_20A47D3A4(v22, sub_20A47CBD0);
        sub_20A47D3A4(v23, sub_20A47CBD0);
        goto LABEL_17;
      }
      sub_20A459C88((uint64_t)v25, (uint64_t)v28, &qword_2545FA2B8);
      sub_20A459C88((uint64_t)v28, (uint64_t)v58, &qword_2545FA2B8);
      v15 = v58[0];
      if (v58[0] && *(_QWORD *)(v58[0] + 16))
      {
        v30 = *(_OWORD *)((char *)&v25[2] + 8);
        v31 = *(_OWORD *)((char *)&v25[3] + 8);
        v32 = BYTE8(v25[4]);
        v29 = *(_OWORD *)((char *)&v25[1] + 8);
        *(_OWORD *)&v28[8] = *(_OWORD *)((char *)v25 + 8);
        v35 = v25[7];
        v36 = v25[8];
        v37 = v25[9];
        v38 = v25[10];
        v33 = v25[5];
        v34 = v25[6];
        v40 = BYTE8(v25[11]);
        v39 = *(_OWORD *)((char *)&v25[10] + 8);
        *(_OWORD *)((char *)v43 + 9) = *(_OWORD *)((char *)&v25[14] + 9);
        v43[0] = v25[14];
        v42 = v25[13];
        v41 = v25[12];
        v43[4] = v25[18];
        v44[0] = v25[19];
        *(_DWORD *)((char *)v44 + 15) = *(_DWORD *)((char *)&v25[19] + 15);
        v43[3] = v25[17];
        v43[2] = v25[16];
        v45 = BYTE8(v25[21]);
        v44[2] = *(_OWORD *)((char *)&v25[20] + 8);
        v47 = v25[23];
        v46 = v25[22];
        v17[0] = *(_OWORD *)((char *)&v25[23] + 8);
        v17[1] = *(_OWORD *)((char *)&v25[24] + 8);
        LOWORD(v17[6]) = WORD4(v25[29]);
        v17[4] = *(_OWORD *)((char *)&v25[27] + 8);
        v17[5] = *(_OWORD *)((char *)&v25[28] + 8);
        v17[2] = *(_OWORD *)((char *)&v25[25] + 8);
        v17[3] = *(_OWORD *)((char *)&v25[26] + 8);
        v49 = BYTE8(v25[30]);
        v48 = *(_QWORD *)&v25[30];
        memcpy(v27, &v25[31], 0x119uLL);
        v50 = v25[49];
        v51 = v25[50];
        v52 = v25[51];
        __dst[4] = *(_OWORD *)((char *)&v25[55] + 8);
        __dst[5] = *(_OWORD *)((char *)&v25[56] + 8);
        __dst[6] = *(_OWORD *)((char *)&v25[57] + 8);
        *(_OWORD *)((char *)&__dst[6] + 10) = *(_OWORD *)((char *)&v25[58] + 2);
        __dst[0] = *(_OWORD *)((char *)&v25[51] + 8);
        __dst[1] = *(_OWORD *)((char *)&v25[52] + 8);
        __dst[2] = *(_OWORD *)((char *)&v25[53] + 8);
        __dst[3] = *(_OWORD *)((char *)&v25[54] + 8);
        v57 = BYTE8(v25[63]);
        v55 = *(_OWORD *)((char *)&v25[61] + 8);
        v56 = *(_OWORD *)((char *)&v25[62] + 8);
        v53 = *(_OWORD *)((char *)&v25[59] + 8);
        v54 = *(_OWORD *)((char *)&v25[60] + 8);
        sub_20A47D3A4(v23, sub_20A47C178);
        sub_20A49891C((uint64_t)v28);
        __asm { BR              X9 }
      }
      LOBYTE(v19) = 13;
      v10 = 0xD00000000000001FLL;
      v11 = 0x800000020A5DDE10;
      v12 = &v19;
    }
    CoreODILogger.debug(_:category:)(v10, v11, v12);
LABEL_17:
    v14 = 1;
    goto LABEL_18;
  }
  LOBYTE(v27[0]) = 13;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD00000000000003BLL, 0x800000020A5DDF10, v27);
LABEL_10:
  v14 = 0;
LABEL_18:
  swift_bridgeObjectRelease();
  return v14 & 1;
}

uint64_t _s17CoreODIEssentials12ODNAtorProxyC15isEqualBindings3lhs3rhsSbSH_s8Sendablep_SH_sAGptFZ_0(_QWORD *a1, _QWORD *a2)
{
  char v4;
  BOOL v5;
  id v6;
  id v7;
  id v8;
  uint64_t v10;
  void *v11;
  double v12;
  unint64_t v13;
  double v14;
  unint64_t v15;
  id v16;
  _BYTE v17[40];
  _BYTE v18[40];

  sub_20A47BD60((uint64_t)a1, (uint64_t)v17);
  sub_20A47BD60((uint64_t)a2, (uint64_t)v18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB47D0);
  if (swift_dynamicCast())
  {
    if (swift_dynamicCast())
    {
      if (*(_QWORD *)&v12 == *(_QWORD *)&v14 && v13 == v15)
        v4 = 1;
      else
        v4 = sub_20A5B91AC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_24;
    }
    swift_bridgeObjectRelease();
  }
  if (swift_dynamicCast() && swift_dynamicCast())
  {
    v5 = *(_QWORD *)&v12 == *(_QWORD *)&v14;
    goto LABEL_13;
  }
  if (swift_dynamicCast() && swift_dynamicCast())
  {
    v5 = v12 == v14;
LABEL_13:
    v4 = v5;
    goto LABEL_24;
  }
  if (swift_dynamicCast() && swift_dynamicCast())
  {
    v4 = LOBYTE(v12) ^ LOBYTE(v14) ^ 1;
LABEL_24:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    return v4 & 1;
  }
  sub_20A459574(0, (unint64_t *)&qword_2545FA2C0);
  if (swift_dynamicCast())
  {
    v6 = v16;
    if (swift_dynamicCast())
    {
      v12 = 4.7668852e180;
      v13 = 0xEF726567676F4C64;
      v14 = 0.0;
      v15 = 0xE000000000000000;
      sub_20A5B8E94();
      sub_20A5B899C();
      v7 = objc_msgSend(v16, sel_description);
      sub_20A5B8900();

      sub_20A5B899C();
      swift_bridgeObjectRelease();
      sub_20A5B899C();
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      swift_getDynamicType();
      sub_20A5B932C();
      sub_20A5B899C();
      swift_bridgeObjectRelease();
      sub_20A5B899C();
      v8 = objc_msgSend(v11, sel_description);
      sub_20A5B8900();

      sub_20A5B899C();
      swift_bridgeObjectRelease();
      sub_20A5B899C();
      __swift_project_boxed_opaque_existential_1(a2, a2[3]);
      swift_getDynamicType();
      sub_20A5B932C();
      sub_20A5B899C();
      swift_bridgeObjectRelease();
      sub_20A5B899C();
      LOBYTE(v14) = 6;
      CoreODILogger.debug(_:category:)(0, 0xE000000000000000, &v14);
      swift_bridgeObjectRelease();
      sub_20A459574(0, (unint64_t *)&unk_2545FA2D8);
      v4 = sub_20A5B8D14();

      goto LABEL_24;
    }

  }
  sub_20A459574(0, &qword_2545FA2C8);
  if (swift_dynamicCast() && (*(id *)&v12, swift_dynamicCast()))
  {

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    v4 = 1;
  }
  else
  {
    v12 = 0.0;
    v13 = 0xE000000000000000;
    sub_20A5B8E94();
    swift_bridgeObjectRelease();
    v14 = -2.31584178e77;
    v15 = 0x800000020A5DE000;
    sub_20A47BD60((uint64_t)a1, (uint64_t)&v12);
    sub_20A5B8960();
    sub_20A5B899C();
    swift_bridgeObjectRelease();
    sub_20A5B899C();
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    swift_getDynamicType();
    sub_20A5B932C();
    sub_20A5B899C();
    swift_bridgeObjectRelease();
    sub_20A5B899C();
    sub_20A47BD60((uint64_t)a2, (uint64_t)&v12);
    sub_20A5B8960();
    sub_20A5B899C();
    swift_bridgeObjectRelease();
    sub_20A5B899C();
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    swift_getDynamicType();
    sub_20A5B932C();
    sub_20A5B899C();
    swift_bridgeObjectRelease();
    sub_20A5B899C();
    if (qword_253EB4788 != -1)
      swift_once();
    v10 = sub_20A5B8804();
    __swift_project_value_buffer(v10, (uint64_t)qword_253EBC7C8);
    swift_bridgeObjectRetain();
    sub_20A5044CC();
    swift_bridgeObjectRelease_n();
    sub_20A44CE2C((uint64_t)v17, &qword_2545FA2D0);
    v4 = 0;
  }
  return v4 & 1;
}

void sub_20A4912C0(_QWORD *a1)
{
  *a1 = 1;
  bzero(a1 + 1, 0x3F1uLL);
}

double sub_20A4912D0(uint64_t a1)
{
  double result;

  *(_BYTE *)(a1 + 128) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

_QWORD *sub_20A4912EC(_QWORD *a1)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = a1[3];
  v4 = a1[2];
  v8 = a1[11];
  v9 = a1[10];
  v6 = a1[13];
  v7 = a1[12];
  v5 = a1[14];
  v10 = a1[16];
  v11 = a1[15];
  swift_bridgeObjectRelease();
  sub_20A4655FC(v4, v3);
  sub_20A46564C(v9, v8, v7, v6, v5);
  sub_20A491420(v11, v10);
  return a1;
}

uint64_t sub_20A491420(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_20A49149C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  char *v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  char v12;
  char v13;
  _BYTE v15[1024];
  _BYTE v16[1024];
  _BYTE __dst[1024];
  _BYTE v18[1024];
  uint64_t v19[128];
  uint64_t v20[128];
  uint64_t v21;
  uint64_t v22[128];
  _BYTE v23[1024];
  _BYTE v24[1024];

  v2 = (uint64_t *)MEMORY[0x24BDAC7A8](a1, a2);
  v4 = v3;
  v5 = v2;
  v6 = (char *)v2 + 1025;
  v7 = *v2;
  sub_20A459C88((uint64_t)(v2 + 1), (uint64_t)v23, &qword_2545FA0C8);
  v8 = *((unsigned __int8 *)v5 + 1025);
  v9 = v6[1];
  v10 = *(_QWORD *)v4;
  sub_20A459C88(v4 + 8, (uint64_t)v24, &qword_2545FA0C8);
  if (v8 != *(unsigned __int8 *)(v4 + 1025))
    return 0;
  v11 = *(unsigned __int8 *)(v4 + 1026);
  sub_20A459C88((uint64_t)v23, (uint64_t)v22, &qword_2545FA0C8);
  if (sub_20A47C4E8(v22) != 1)
  {
    sub_20A459C88((uint64_t)v23, (uint64_t)v19, &qword_2545FA0C8);
    sub_20A459C88((uint64_t)v24, (uint64_t)v20, &qword_2545FA0C8);
    if (sub_20A47C4E8(v20) != 1)
    {
      sub_20A459C88((uint64_t)v24, (uint64_t)v16, &qword_2545FA0C8);
      memcpy(v15, v16, 0x3F9uLL);
      sub_20A459C88((uint64_t)v23, (uint64_t)__dst, &qword_2545FA0C8);
      sub_20A47D3A4(v23, sub_20A47C178);
      sub_20A497F30((uint64_t)__dst);
      v12 = _s17CoreODIEssentials16ArmandDeviceDataV2eeoiySbAC_ACtFZ_0(v19, (uint64_t)v15);
      memcpy(v18, v19, 0x3F9uLL);
      sub_20A47D1B0((uint64_t)v18);
      sub_20A47D3A4(v23, sub_20A47CBD0);
      if ((v12 & 1) == 0)
        return 0;
      goto LABEL_9;
    }
    memcpy(__dst, v19, 0x3F9uLL);
    sub_20A459C88((uint64_t)v23, (uint64_t)v18, &qword_2545FA0C8);
    sub_20A497F30((uint64_t)v18);
    sub_20A497F30((uint64_t)v18);
    sub_20A47D1B0((uint64_t)__dst);
LABEL_7:
    sub_20A459C88((uint64_t)v23, (uint64_t)v20, &qword_2545FA0C8);
    sub_20A459C88((uint64_t)v24, (uint64_t)&v21, &qword_2545FA0C8);
    sub_20A47D3A4(v24, sub_20A47C178);
    sub_20A47C50C(v20);
    return 0;
  }
  sub_20A459C88((uint64_t)v24, (uint64_t)v20, &qword_2545FA0C8);
  if (sub_20A47C4E8(v20) != 1)
    goto LABEL_7;
LABEL_9:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13 = sub_20A48B458(v7, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v13 & 1) != 0 && (Dictionary<>.isSubset(of:)(v10, v7) & 1) != 0)
    return v9 ^ v11 ^ 1u;
  return 0;
}

BOOL _s17CoreODIEssentials16AssessmentTimingV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unsigned int (*v90)(uint64_t, uint64_t, uint64_t);
  int *v91;
  uint64_t v92;
  uint64_t v93;
  unsigned int (*v94)(uint64_t, uint64_t, uint64_t);
  char *v95;
  void (*v96)(char *, uint64_t);
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void (*v106)(char *, uint64_t, uint64_t);
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  void (*v111)(char *, uint64_t);
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unsigned int v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char v123;
  void (*v124)(char *, uint64_t);
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unsigned int (*v129)(uint64_t, uint64_t, uint64_t);
  uint64_t v130;
  uint64_t v131;
  unsigned int v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  char v136;
  void (*v137)(char *, uint64_t);
  uint64_t v138;
  uint64_t v139;
  unsigned int (*v140)(uint64_t, uint64_t, uint64_t);
  uint64_t v141;
  uint64_t v142;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  void (*v147)(char *, uint64_t);
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  unsigned int (*v154)(uint64_t, uint64_t, uint64_t);
  uint64_t v155;
  uint64_t v156;
  char *v157;
  char v158;
  void (*v159)(char *, uint64_t);
  uint64_t v160;
  unsigned int (*v161)(uint64_t, uint64_t, uint64_t);
  int v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;

  v4 = sub_20A5B8F6C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v185 = (char *)&v160 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v188 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA250);
  v9 = MEMORY[0x24BDAC7A8](v188, v8);
  v11 = (char *)&v160 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v9, v12);
  v174 = (uint64_t)&v160 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13, v15);
  v176 = (uint64_t)&v160 - v17;
  v19 = MEMORY[0x24BDAC7A8](v16, v18);
  v180 = (uint64_t)&v160 - v20;
  v22 = MEMORY[0x24BDAC7A8](v19, v21);
  v184 = (uint64_t)&v160 - v23;
  MEMORY[0x24BDAC7A8](v22, v24);
  v26 = (char *)&v160 - v25;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
  v29 = MEMORY[0x24BDAC7A8](v27, v28);
  v169 = (uint64_t)&v160 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = MEMORY[0x24BDAC7A8](v29, v31);
  v170 = (uint64_t)&v160 - v33;
  v35 = MEMORY[0x24BDAC7A8](v32, v34);
  v171 = (uint64_t)&v160 - v36;
  v38 = MEMORY[0x24BDAC7A8](v35, v37);
  v172 = (uint64_t)&v160 - v39;
  v41 = MEMORY[0x24BDAC7A8](v38, v40);
  v175 = (uint64_t)&v160 - v42;
  v44 = MEMORY[0x24BDAC7A8](v41, v43);
  v173 = (uint64_t)&v160 - v45;
  v47 = MEMORY[0x24BDAC7A8](v44, v46);
  v49 = (char *)&v160 - v48;
  v51 = MEMORY[0x24BDAC7A8](v47, v50);
  v178 = (uint64_t)&v160 - v52;
  v54 = MEMORY[0x24BDAC7A8](v51, v53);
  v179 = (uint64_t)&v160 - v55;
  v57 = MEMORY[0x24BDAC7A8](v54, v56);
  v177 = (uint64_t)&v160 - v58;
  v60 = MEMORY[0x24BDAC7A8](v57, v59);
  v181 = (uint64_t)&v160 - v61;
  v63 = MEMORY[0x24BDAC7A8](v60, v62);
  v182 = (uint64_t)&v160 - v64;
  v66 = MEMORY[0x24BDAC7A8](v63, v65);
  v183 = (uint64_t)&v160 - v67;
  v69 = MEMORY[0x24BDAC7A8](v66, v68);
  v186 = (uint64_t)&v160 - v70;
  v72 = MEMORY[0x24BDAC7A8](v69, v71);
  v187 = (uint64_t)&v160 - v73;
  v75 = MEMORY[0x24BDAC7A8](v72, v74);
  v77 = (char *)&v160 - v76;
  v79 = MEMORY[0x24BDAC7A8](v75, v78);
  v81 = (char *)&v160 - v80;
  MEMORY[0x24BDAC7A8](v79, v82);
  v84 = (char *)&v160 - v83;
  if ((sub_20A5B8F54() & 1) == 0)
    return 0;
  v167 = v49;
  v85 = type metadata accessor for AssessmentTiming();
  if ((sub_20A5B8F54() & 1) == 0)
    return 0;
  v163 = v11;
  v86 = *(int *)(v85 + 24);
  v164 = a1;
  v168 = v4;
  sub_20A47D62C(a1 + v86, (uint64_t)v84, &qword_2545F9F90);
  v87 = *(int *)(v85 + 24);
  v165 = a2;
  sub_20A47D62C(a2 + v87, (uint64_t)v81, &qword_2545F9F90);
  v88 = (uint64_t)&v26[*(int *)(v188 + 48)];
  sub_20A47D62C((uint64_t)v84, (uint64_t)v26, &qword_2545F9F90);
  v89 = v168;
  sub_20A47D62C((uint64_t)v81, v88, &qword_2545F9F90);
  v166 = v5;
  v90 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  v91 = (int *)v85;
  if (v90((uint64_t)v26, 1, v89) == 1)
  {
    sub_20A44CE2C((uint64_t)v81, &qword_2545F9F90);
    sub_20A44CE2C((uint64_t)v84, &qword_2545F9F90);
    if (v90(v88, 1, v89) == 1)
    {
      sub_20A44CE2C((uint64_t)v26, &qword_2545F9F90);
      goto LABEL_10;
    }
LABEL_8:
    v92 = (uint64_t)v26;
LABEL_36:
    sub_20A44CE2C(v92, &qword_2545FA250);
    return 0;
  }
  sub_20A47D62C((uint64_t)v26, (uint64_t)v77, &qword_2545F9F90);
  if (v90(v88, 1, v89) == 1)
  {
    sub_20A44CE2C((uint64_t)v81, &qword_2545F9F90);
    sub_20A44CE2C((uint64_t)v84, &qword_2545F9F90);
    (*(void (**)(char *, uint64_t))(v166 + 8))(v77, v89);
    goto LABEL_8;
  }
  v93 = v166;
  v94 = v90;
  v95 = v185;
  (*(void (**)(char *, uint64_t, uint64_t))(v166 + 32))(v185, v88, v89);
  sub_20A498124(&qword_2545FA258, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6DC8], MEMORY[0x24BEE6DF0]);
  v162 = sub_20A5B88E8();
  v96 = *(void (**)(char *, uint64_t))(v93 + 8);
  v97 = v95;
  v90 = v94;
  v91 = (int *)v85;
  v96(v97, v89);
  sub_20A44CE2C((uint64_t)v81, &qword_2545F9F90);
  sub_20A44CE2C((uint64_t)v84, &qword_2545F9F90);
  v96(v77, v168);
  v89 = v168;
  sub_20A44CE2C((uint64_t)v26, &qword_2545F9F90);
  if ((v162 & 1) == 0)
    return 0;
LABEL_10:
  v98 = v164;
  v99 = v187;
  sub_20A47D62C(v164 + v91[7], v187, &qword_2545F9F90);
  v100 = v165;
  v101 = v186;
  sub_20A47D62C(v165 + v91[7], v186, &qword_2545F9F90);
  v102 = v184;
  v103 = v184 + *(int *)(v188 + 48);
  sub_20A47D62C(v99, v184, &qword_2545F9F90);
  sub_20A47D62C(v101, v103, &qword_2545F9F90);
  if (v90(v102, 1, v89) == 1)
  {
    sub_20A44CE2C(v101, &qword_2545F9F90);
    sub_20A44CE2C(v99, &qword_2545F9F90);
    if (v90(v103, 1, v89) == 1)
    {
      sub_20A44CE2C(v102, &qword_2545F9F90);
      goto LABEL_17;
    }
    goto LABEL_15;
  }
  v104 = v183;
  sub_20A47D62C(v102, v183, &qword_2545F9F90);
  if (v90(v103, 1, v89) == 1)
  {
    sub_20A44CE2C(v186, &qword_2545F9F90);
    sub_20A44CE2C(v187, &qword_2545F9F90);
    (*(void (**)(uint64_t, uint64_t))(v166 + 8))(v104, v89);
LABEL_15:
    v92 = v102;
    goto LABEL_36;
  }
  v105 = v166;
  v106 = *(void (**)(char *, uint64_t, uint64_t))(v166 + 32);
  v161 = v90;
  v107 = v185;
  v106(v185, v103, v89);
  sub_20A498124(&qword_2545FA258, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6DC8], MEMORY[0x24BEE6DF0]);
  LODWORD(v168) = sub_20A5B88E8();
  v108 = v98;
  v109 = v100;
  v110 = v102;
  v111 = *(void (**)(char *, uint64_t))(v105 + 8);
  v112 = v107;
  v90 = v161;
  v111(v112, v89);
  sub_20A44CE2C(v186, &qword_2545F9F90);
  sub_20A44CE2C(v187, &qword_2545F9F90);
  v111((char *)v104, v89);
  v113 = v110;
  v100 = v109;
  v98 = v108;
  sub_20A44CE2C(v113, &qword_2545F9F90);
  if ((v168 & 1) == 0)
    return 0;
LABEL_17:
  v114 = v182;
  sub_20A47D62C(v98 + v91[8], v182, &qword_2545F9F90);
  v115 = v181;
  sub_20A47D62C(v100 + v91[8], v181, &qword_2545F9F90);
  v116 = v180;
  v117 = v180 + *(int *)(v188 + 48);
  sub_20A47D62C(v114, v180, &qword_2545F9F90);
  sub_20A47D62C(v115, v117, &qword_2545F9F90);
  v118 = v90(v116, 1, v89);
  v161 = v90;
  if (v118 == 1)
  {
    sub_20A44CE2C(v115, &qword_2545F9F90);
    sub_20A44CE2C(v114, &qword_2545F9F90);
    if (v90(v117, 1, v89) == 1)
    {
      sub_20A44CE2C(v116, &qword_2545F9F90);
      goto LABEL_24;
    }
    goto LABEL_22;
  }
  v119 = v177;
  sub_20A47D62C(v116, v177, &qword_2545F9F90);
  if (v90(v117, 1, v89) == 1)
  {
    sub_20A44CE2C(v115, &qword_2545F9F90);
    sub_20A44CE2C(v114, &qword_2545F9F90);
    (*(void (**)(uint64_t, uint64_t))(v166 + 8))(v119, v89);
LABEL_22:
    v92 = v116;
    goto LABEL_36;
  }
  v120 = v89;
  v121 = v166;
  v122 = v185;
  (*(void (**)(char *, uint64_t, uint64_t))(v166 + 32))(v185, v117, v120);
  sub_20A498124(&qword_2545FA258, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6DC8], MEMORY[0x24BEE6DF0]);
  v123 = sub_20A5B88E8();
  v124 = *(void (**)(char *, uint64_t))(v121 + 8);
  v124(v122, v120);
  sub_20A44CE2C(v181, &qword_2545F9F90);
  sub_20A44CE2C(v182, &qword_2545F9F90);
  v124((char *)v119, v120);
  v89 = v120;
  sub_20A44CE2C(v116, &qword_2545F9F90);
  if ((v123 & 1) == 0)
    return 0;
LABEL_24:
  v125 = v179;
  sub_20A47D62C(v98 + v91[9], v179, &qword_2545F9F90);
  v126 = v178;
  sub_20A47D62C(v100 + v91[9], v178, &qword_2545F9F90);
  v127 = v176;
  v128 = v176 + *(int *)(v188 + 48);
  sub_20A47D62C(v125, v176, &qword_2545F9F90);
  sub_20A47D62C(v126, v128, &qword_2545F9F90);
  v129 = v161;
  if (v161(v127, 1, v89) == 1)
  {
    sub_20A44CE2C(v126, &qword_2545F9F90);
    sub_20A44CE2C(v125, &qword_2545F9F90);
    if (v129(v128, 1, v89) != 1)
      goto LABEL_35;
    sub_20A44CE2C(v127, &qword_2545F9F90);
    v130 = v175;
  }
  else
  {
    v131 = (uint64_t)v167;
    sub_20A47D62C(v127, (uint64_t)v167, &qword_2545F9F90);
    v132 = v129(v128, 1, v89);
    v130 = v175;
    if (v132 == 1)
    {
      sub_20A44CE2C(v178, &qword_2545F9F90);
      sub_20A44CE2C(v179, &qword_2545F9F90);
      (*(void (**)(uint64_t, uint64_t))(v166 + 8))(v131, v89);
      goto LABEL_35;
    }
    v133 = v89;
    v134 = v166;
    v135 = v185;
    (*(void (**)(char *, uint64_t, uint64_t))(v166 + 32))(v185, v128, v133);
    sub_20A498124(&qword_2545FA258, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6DC8], MEMORY[0x24BEE6DF0]);
    v136 = sub_20A5B88E8();
    v137 = *(void (**)(char *, uint64_t))(v134 + 8);
    v137(v135, v133);
    sub_20A44CE2C(v178, &qword_2545F9F90);
    sub_20A44CE2C(v179, &qword_2545F9F90);
    v137((char *)v131, v133);
    v89 = v133;
    sub_20A44CE2C(v176, &qword_2545F9F90);
    if ((v136 & 1) == 0)
      return 0;
  }
  v138 = v173;
  sub_20A47D62C(v98 + v91[10], v173, &qword_2545F9F90);
  sub_20A47D62C(v100 + v91[10], v130, &qword_2545F9F90);
  v127 = v174;
  v139 = v174 + *(int *)(v188 + 48);
  sub_20A47D62C(v138, v174, &qword_2545F9F90);
  sub_20A47D62C(v130, v139, &qword_2545F9F90);
  v140 = v161;
  if (v161(v127, 1, v89) != 1)
  {
    v142 = v172;
    sub_20A47D62C(v127, v172, &qword_2545F9F90);
    if (v140(v139, 1, v89) != 1)
    {
      v141 = v89;
      v144 = v166;
      v145 = v127;
      v146 = v185;
      (*(void (**)(char *, uint64_t, uint64_t))(v166 + 32))(v185, v139, v141);
      sub_20A498124(&qword_2545FA258, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6DC8], MEMORY[0x24BEE6DF0]);
      LODWORD(v187) = sub_20A5B88E8();
      v147 = *(void (**)(char *, uint64_t))(v144 + 8);
      v147(v146, v141);
      sub_20A44CE2C(v175, &qword_2545F9F90);
      sub_20A44CE2C(v138, &qword_2545F9F90);
      v147((char *)v142, v141);
      sub_20A44CE2C(v145, &qword_2545F9F90);
      if ((v187 & 1) == 0)
        return 0;
      goto LABEL_40;
    }
    sub_20A44CE2C(v130, &qword_2545F9F90);
    sub_20A44CE2C(v138, &qword_2545F9F90);
    (*(void (**)(uint64_t, uint64_t))(v166 + 8))(v142, v89);
    goto LABEL_35;
  }
  sub_20A44CE2C(v130, &qword_2545F9F90);
  sub_20A44CE2C(v138, &qword_2545F9F90);
  if (v140(v139, 1, v89) != 1)
  {
LABEL_35:
    v92 = v127;
    goto LABEL_36;
  }
  sub_20A44CE2C(v127, &qword_2545F9F90);
  v141 = v89;
LABEL_40:
  v148 = v98 + v91[11];
  v149 = v171;
  sub_20A47D62C(v148, v171, &qword_2545F9F90);
  v150 = v100 + v91[11];
  v151 = v170;
  sub_20A47D62C(v150, v170, &qword_2545F9F90);
  v152 = (uint64_t)v163;
  v153 = (uint64_t)&v163[*(int *)(v188 + 48)];
  sub_20A47D62C(v149, (uint64_t)v163, &qword_2545F9F90);
  sub_20A47D62C(v151, v153, &qword_2545F9F90);
  v154 = v161;
  if (v161(v152, 1, v141) == 1)
  {
    sub_20A44CE2C(v151, &qword_2545F9F90);
    sub_20A44CE2C(v149, &qword_2545F9F90);
    if (v154(v153, 1, v141) == 1)
    {
      sub_20A44CE2C((uint64_t)v163, &qword_2545F9F90);
      return 1;
    }
    goto LABEL_45;
  }
  v155 = v169;
  sub_20A47D62C(v152, v169, &qword_2545F9F90);
  if (v154(v153, 1, v141) == 1)
  {
    sub_20A44CE2C(v151, &qword_2545F9F90);
    sub_20A44CE2C(v149, &qword_2545F9F90);
    (*(void (**)(uint64_t, uint64_t))(v166 + 8))(v155, v141);
LABEL_45:
    v92 = (uint64_t)v163;
    goto LABEL_36;
  }
  v156 = v166;
  v157 = v185;
  (*(void (**)(char *, uint64_t, uint64_t))(v166 + 32))(v185, v153, v141);
  sub_20A498124(&qword_2545FA258, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6DC8], MEMORY[0x24BEE6DF0]);
  v158 = sub_20A5B88E8();
  v159 = *(void (**)(char *, uint64_t))(v156 + 8);
  v159(v157, v141);
  sub_20A44CE2C(v151, &qword_2545F9F90);
  sub_20A44CE2C(v149, &qword_2545F9F90);
  v159((char *)v155, v141);
  sub_20A44CE2C(v152, &qword_2545F9F90);
  return (v158 & 1) != 0;
}

uint64_t sub_20A492764(uint64_t a1, uint64_t a2, _BYTE *a3, _BYTE *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void *v18;
  int v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  _UNKNOWN **v23;
  ValueMetadata *v24;
  _QWORD *v25;
  uint64_t v27;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v10 = v8;
  *(_QWORD *)(v9 + 560) = v8;
  *(_QWORD *)(v9 + 552) = a8;
  *(_QWORD *)(v9 + 544) = a7;
  *(_QWORD *)(v9 + 536) = a6;
  *(_QWORD *)(v9 + 528) = a5;
  *(_QWORD *)(v9 + 520) = a2;
  *(_QWORD *)(v9 + 512) = a1;
  *(_QWORD *)(v9 + 568) = type metadata accessor for ODISignpost();
  v14 = swift_task_alloc();
  *(_QWORD *)(v9 + 576) = v14;
  v27 = swift_task_alloc();
  *(_QWORD *)(v9 + 584) = v27;
  *(_BYTE *)(v9 + 259) = *a3;
  *(_BYTE *)(v9 + 260) = *a4;
  swift_defaultActor_initialize();
  v8[26] = sub_20A46A830(MEMORY[0x24BEE4AF8]);
  if (qword_2545F9A98 != -1)
    swift_once();
  v16 = qword_254610390;
  v15 = *(_QWORD *)algn_254610398;
  v17 = byte_2546103A0;
  v18 = (void *)qword_2546103A8;
  v19 = byte_2546103B0;
  *(_QWORD *)(v14 + 32) = "enableTelemetry=YES";
  *(_QWORD *)(v14 + 40) = 19;
  *(_BYTE *)(v14 + 48) = 2;
  *(_QWORD *)v14 = v16;
  *(_QWORD *)(v14 + 8) = v15;
  *(_BYTE *)(v14 + 16) = v17;
  *(_QWORD *)(v14 + 24) = v18;
  v20 = v18;
  sub_20A5B87D4();
  sub_20A5B8CFC();
  if (v19 == 1)
    sub_20A5B87BC();
  else
    sub_20A5B87C8();

  sub_20A465A70(v14, v27, (uint64_t (*)(_QWORD))type metadata accessor for ODISignpost);
  v10[17] = a1;
  v10[18] = a2;
  v10[15] = a5;
  v10[16] = a6;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  if ((sub_20A4B0FF0() & 1) != 0)
  {
    swift_bridgeObjectRetain();
    sub_20A5B899C();
    swift_bridgeObjectRelease();
    v21 = a1;
    v22 = a2;
    v23 = &off_24C3157D8;
    v24 = &type metadata for AMPAssessmentPayloadAdapter;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_20A5B899C();
    swift_bridgeObjectRelease();
    v21 = a1;
    v22 = a2;
    v23 = &off_24C315AF0;
    v24 = &type metadata for Base64AssessmentPayloadAdapter;
  }
  v10[19] = v21;
  v10[20] = v22;
  v10[21] = 45;
  v10[22] = 0xE100000000000000;
  v10[24] = v24;
  v10[25] = v23;
  v32 = a5;
  v33 = a6;
  v31 = 8;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD00000000000001ALL, 0x800000020A5DDD60, &v31);
  swift_bridgeObjectRelease();
  if (qword_253EB4A90 != -1)
    swift_once();
  v25 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v9 + 592) = v25;
  *v25 = v9;
  v25[1] = sub_20A492AFC;
  return sub_20A4E0CC4(v9 + 264);
}

void sub_20A492AFC()
{
  uint64_t *v0;
  uint64_t v1;
  __int16 v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;
  void (*v12)(uint64_t, uint64_t, unsigned __int8 *, unsigned __int8 *, uint64_t, uint64_t, uint64_t, uint64_t);
  char v13;
  uint64_t v14;

  v1 = *v0;
  v14 = v1;
  v2 = *(_WORD *)(v1 + 259);
  v14 = *v0;
  v3 = v14;
  swift_task_dealloc();
  v4 = *(_OWORD *)(v1 + 472);
  *(_OWORD *)(v1 + 208) = *(_OWORD *)(v1 + 456);
  *(_OWORD *)(v1 + 224) = v4;
  *(_OWORD *)(v1 + 240) = *(_OWORD *)(v1 + 488);
  *(_BYTE *)(v1 + 256) = *(_BYTE *)(v1 + 504);
  v5 = *(_OWORD *)(v1 + 408);
  *(_OWORD *)(v1 + 144) = *(_OWORD *)(v1 + 392);
  *(_OWORD *)(v1 + 160) = v5;
  v6 = *(_OWORD *)(v1 + 440);
  *(_OWORD *)(v1 + 176) = *(_OWORD *)(v1 + 424);
  *(_OWORD *)(v1 + 192) = v6;
  v7 = *(_OWORD *)(v1 + 344);
  *(_OWORD *)(v1 + 80) = *(_OWORD *)(v1 + 328);
  *(_OWORD *)(v1 + 96) = v7;
  v8 = *(_OWORD *)(v1 + 376);
  *(_OWORD *)(v1 + 112) = *(_OWORD *)(v1 + 360);
  *(_OWORD *)(v1 + 128) = v8;
  v9 = *(_OWORD *)(v1 + 280);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v1 + 264);
  *(_OWORD *)(v1 + 32) = v9;
  v10 = *(_OWORD *)(v1 + 312);
  *(_OWORD *)(v1 + 48) = *(_OWORD *)(v1 + 296);
  *(_OWORD *)(v1 + 64) = v10;
  sub_20A480614((_QWORD *)(v1 + 16));
  v13 = 14;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD00000000000001ELL, 0x800000020A5DDD80, &v13);
  swift_bridgeObjectRelease();
  *(_WORD *)(v1 + 257) = v2;
  type metadata accessor for ODNAtorQueueManager();
  swift_allocObject();
  v12 = (void (*)(uint64_t, uint64_t, unsigned __int8 *, unsigned __int8 *, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_2545FA7B0 + dword_2545FA7B0);
  swift_retain();
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 600) = v11;
  *v11 = v3;
  v11[1] = sub_20A492C94;
  v12(*(_QWORD *)(v1 + 512), *(_QWORD *)(v1 + 520), (unsigned __int8 *)(v1 + 257), (unsigned __int8 *)(v1 + 258), *(_QWORD *)(v1 + 528), *(_QWORD *)(v1 + 536), *(_QWORD *)(v1 + 544), *(_QWORD *)(v1 + 552));
}

uint64_t sub_20A492C94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 560);
  *(_QWORD *)(*(_QWORD *)v1 + 608) = a1;
  swift_task_dealloc();
  swift_release();
  *(_QWORD *)(v3 + 112) = a1;
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_20A492D10()
{
  uint64_t v0;
  uint64_t v1;
  char v3;

  v1 = *(_QWORD *)(v0 + 584);
  v3 = 8;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD000000000000019, 0x800000020A5DDDA0, &v3);
  swift_release();
  swift_bridgeObjectRelease();
  sub_20A5B8CF0();
  sub_20A5B87C8();
  sub_20A465AB4(v1, (uint64_t (*)(_QWORD))type metadata accessor for ODISignpost);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 560));
}

uint64_t sub_20A492DF8(uint64_t a1)
{
  destroy for ODIAssessmentAdapter(a1);
  return a1;
}

uint64_t type metadata accessor for AssessmentTiming()
{
  uint64_t result;

  result = qword_2545FA288;
  if (!qword_2545FA288)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_20A492E68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A492EB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

unint64_t sub_20A492EFC()
{
  unint64_t result;

  result = qword_2545FA260;
  if (!qword_2545FA260)
  {
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for AssessmentOutcome, &type metadata for AssessmentOutcome);
    atomic_store(result, (unint64_t *)&qword_2545FA260);
  }
  return result;
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ComputationContext(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 65281 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65281 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65281;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65281;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65281;
  }
LABEL_17:
  v6 = *(unsigned __int8 *)a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ComputationContext(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_20A49303C + 4 * byte_20A5BFCF1[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_20A493070 + 4 * byte_20A5BFCEC[v4]))();
}

uint64_t sub_20A493070(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_20A493078(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x20A493080);
  return result;
}

uint64_t sub_20A49308C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x20A493094);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_20A493098(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_20A4930A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ComputationContext()
{
  return &type metadata for ComputationContext;
}

uint64_t destroy for ODNAtorParameters(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 16) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ODNAtorParameters(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v6 = (const void *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v5 == 1)
  {
    memcpy((void *)(a1 + 16), v6, 0x3F9uLL);
  }
  else
  {
    v7 = *(_QWORD *)(a2 + 24);
    v37 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 24) = v7;
    *(_QWORD *)(a1 + 32) = v37;
    *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
    v36 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = v36;
    *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
    v35 = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = v35;
    *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
    v34 = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = v34;
    *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
    v33 = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 128) = v33;
    *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
    v32 = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 152) = v32;
    *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
    v8 = *(_QWORD *)(a2 + 168);
    *(_WORD *)(a1 + 176) = *(_WORD *)(a2 + 176);
    *(_QWORD *)(a1 + 168) = v8;
    v9 = *(_QWORD *)(a2 + 192);
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    *(_QWORD *)(a1 + 192) = v9;
    *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
    *(_WORD *)(a1 + 216) = *(_WORD *)(a2 + 216);
    *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
    v10 = *(_QWORD *)(a2 + 232);
    *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
    *(_QWORD *)(a1 + 232) = v10;
    *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
    v11 = *(_QWORD *)(a2 + 256);
    *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
    *(_QWORD *)(a1 + 256) = v11;
    *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
    v12 = *(_QWORD *)(a2 + 280);
    *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
    *(_QWORD *)(a1 + 280) = v12;
    *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
    v13 = *(_QWORD *)(a2 + 304);
    *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
    *(_QWORD *)(a1 + 304) = v13;
    *(_BYTE *)(a1 + 312) = *(_BYTE *)(a2 + 312);
    v14 = *(_QWORD *)(a2 + 328);
    *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
    *(_QWORD *)(a1 + 328) = v14;
    *(_BYTE *)(a1 + 336) = *(_BYTE *)(a2 + 336);
    *(_WORD *)(a1 + 337) = *(_WORD *)(a2 + 337);
    v15 = *(_QWORD *)(a2 + 352);
    *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
    *(_QWORD *)(a1 + 352) = v15;
    *(_BYTE *)(a1 + 360) = *(_BYTE *)(a2 + 360);
    *(_WORD *)(a1 + 361) = *(_WORD *)(a2 + 361);
    v16 = *(_QWORD *)(a2 + 376);
    *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
    *(_QWORD *)(a1 + 376) = v16;
    *(_BYTE *)(a1 + 384) = *(_BYTE *)(a2 + 384);
    v17 = *(_QWORD *)(a2 + 400);
    *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
    *(_QWORD *)(a1 + 400) = v17;
    *(_BYTE *)(a1 + 408) = *(_BYTE *)(a2 + 408);
    *(_WORD *)(a1 + 409) = *(_WORD *)(a2 + 409);
    v18 = *(_QWORD *)(a2 + 416);
    *(_WORD *)(a1 + 424) = *(_WORD *)(a2 + 424);
    *(_QWORD *)(a1 + 416) = v18;
    v19 = *(_QWORD *)(a2 + 432);
    *(_WORD *)(a1 + 440) = *(_WORD *)(a2 + 440);
    *(_QWORD *)(a1 + 432) = v19;
    v20 = *(_QWORD *)(a2 + 448);
    *(_WORD *)(a1 + 456) = *(_WORD *)(a2 + 456);
    *(_QWORD *)(a1 + 448) = v20;
    v21 = *(_QWORD *)(a2 + 464);
    *(_WORD *)(a1 + 472) = *(_WORD *)(a2 + 472);
    *(_QWORD *)(a1 + 464) = v21;
    v22 = *(_QWORD *)(a2 + 480);
    *(_WORD *)(a1 + 488) = *(_WORD *)(a2 + 488);
    *(_QWORD *)(a1 + 480) = v22;
    *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
    *(_BYTE *)(a1 + 504) = *(_BYTE *)(a2 + 504);
    *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
    *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
    *(_BYTE *)(a1 + 528) = *(_BYTE *)(a2 + 528);
    *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
    *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
    *(_BYTE *)(a1 + 552) = *(_BYTE *)(a2 + 552);
    *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
    *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
    *(_BYTE *)(a1 + 576) = *(_BYTE *)(a2 + 576);
    *(_QWORD *)(a1 + 584) = *(_QWORD *)(a2 + 584);
    *(_QWORD *)(a1 + 592) = *(_QWORD *)(a2 + 592);
    *(_BYTE *)(a1 + 600) = *(_BYTE *)(a2 + 600);
    *(_QWORD *)(a1 + 608) = *(_QWORD *)(a2 + 608);
    *(_QWORD *)(a1 + 616) = *(_QWORD *)(a2 + 616);
    *(_BYTE *)(a1 + 624) = *(_BYTE *)(a2 + 624);
    *(_QWORD *)(a1 + 632) = *(_QWORD *)(a2 + 632);
    *(_QWORD *)(a1 + 640) = *(_QWORD *)(a2 + 640);
    *(_BYTE *)(a1 + 648) = *(_BYTE *)(a2 + 648);
    *(_QWORD *)(a1 + 656) = *(_QWORD *)(a2 + 656);
    *(_QWORD *)(a1 + 664) = *(_QWORD *)(a2 + 664);
    *(_BYTE *)(a1 + 672) = *(_BYTE *)(a2 + 672);
    *(_QWORD *)(a1 + 680) = *(_QWORD *)(a2 + 680);
    *(_QWORD *)(a1 + 688) = *(_QWORD *)(a2 + 688);
    *(_BYTE *)(a1 + 696) = *(_BYTE *)(a2 + 696);
    *(_QWORD *)(a1 + 704) = *(_QWORD *)(a2 + 704);
    *(_QWORD *)(a1 + 712) = *(_QWORD *)(a2 + 712);
    *(_BYTE *)(a1 + 720) = *(_BYTE *)(a2 + 720);
    *(_QWORD *)(a1 + 728) = *(_QWORD *)(a2 + 728);
    *(_QWORD *)(a1 + 736) = *(_QWORD *)(a2 + 736);
    *(_BYTE *)(a1 + 744) = *(_BYTE *)(a2 + 744);
    *(_QWORD *)(a1 + 752) = *(_QWORD *)(a2 + 752);
    *(_QWORD *)(a1 + 760) = *(_QWORD *)(a2 + 760);
    *(_BYTE *)(a1 + 768) = *(_BYTE *)(a2 + 768);
    *(_QWORD *)(a1 + 776) = *(_QWORD *)(a2 + 776);
    *(_QWORD *)(a1 + 784) = *(_QWORD *)(a2 + 784);
    *(_BYTE *)(a1 + 792) = *(_BYTE *)(a2 + 792);
    v23 = *(_OWORD *)(a2 + 800);
    v24 = *(_OWORD *)(a2 + 816);
    *(_WORD *)(a1 + 832) = *(_WORD *)(a2 + 832);
    *(_OWORD *)(a1 + 800) = v23;
    *(_OWORD *)(a1 + 816) = v24;
    v25 = *(_OWORD *)(a2 + 840);
    v26 = *(_OWORD *)(a2 + 856);
    v27 = *(_OWORD *)(a2 + 888);
    *(_OWORD *)(a1 + 872) = *(_OWORD *)(a2 + 872);
    *(_OWORD *)(a1 + 888) = v27;
    *(_OWORD *)(a1 + 840) = v25;
    *(_OWORD *)(a1 + 856) = v26;
    v28 = *(_OWORD *)(a2 + 904);
    v29 = *(_OWORD *)(a2 + 920);
    v30 = *(_OWORD *)(a2 + 936);
    *(_OWORD *)(a1 + 946) = *(_OWORD *)(a2 + 946);
    *(_OWORD *)(a1 + 920) = v29;
    *(_OWORD *)(a1 + 936) = v30;
    *(_OWORD *)(a1 + 904) = v28;
    *(_QWORD *)(a1 + 968) = *(_QWORD *)(a2 + 968);
    *(_QWORD *)(a1 + 976) = *(_QWORD *)(a2 + 976);
    *(_BYTE *)(a1 + 984) = *(_BYTE *)(a2 + 984);
    *(_QWORD *)(a1 + 992) = *(_QWORD *)(a2 + 992);
    *(_QWORD *)(a1 + 1000) = *(_QWORD *)(a2 + 1000);
    *(_BYTE *)(a1 + 1008) = *(_BYTE *)(a2 + 1008);
    *(_QWORD *)(a1 + 1016) = *(_QWORD *)(a2 + 1016);
    *(_BYTE *)(a1 + 1032) = *(_BYTE *)(a2 + 1032);
    *(_QWORD *)(a1 + 1024) = *(_QWORD *)(a2 + 1024);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *(_QWORD *)(a1 + 1040) = *(_QWORD *)(a2 + 1040);
  *(_WORD *)(a1 + 1048) = *(_WORD *)(a2 + 1048);
  *(_BYTE *)(a1 + 1050) = *(_BYTE *)(a2 + 1050);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ODNAtorParameters(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  if (*(_QWORD *)(a1 + 16) != 1)
  {
    if (v4 != 1)
    {
      *(_QWORD *)(a1 + 16) = v4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
      v20 = *(_QWORD *)(a2 + 168);
      *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
      *(_QWORD *)(a1 + 168) = v20;
      *(_BYTE *)(a1 + 177) = *(_BYTE *)(a2 + 177);
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
      v21 = *(_QWORD *)(a2 + 208);
      *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
      *(_QWORD *)(a1 + 208) = v21;
      *(_BYTE *)(a1 + 217) = *(_BYTE *)(a2 + 217);
      *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
      *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
      *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
      *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
      *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
      *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
      *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
      *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 312) = *(_BYTE *)(a2 + 312);
      *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
      *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 336) = *(_BYTE *)(a2 + 336);
      *(_BYTE *)(a1 + 337) = *(_BYTE *)(a2 + 337);
      *(_BYTE *)(a1 + 338) = *(_BYTE *)(a2 + 338);
      *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
      *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 360) = *(_BYTE *)(a2 + 360);
      *(_BYTE *)(a1 + 361) = *(_BYTE *)(a2 + 361);
      *(_BYTE *)(a1 + 362) = *(_BYTE *)(a2 + 362);
      *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
      *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 384) = *(_BYTE *)(a2 + 384);
      *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
      *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 408) = *(_BYTE *)(a2 + 408);
      *(_BYTE *)(a1 + 409) = *(_BYTE *)(a2 + 409);
      *(_BYTE *)(a1 + 410) = *(_BYTE *)(a2 + 410);
      v22 = *(_QWORD *)(a2 + 416);
      *(_BYTE *)(a1 + 424) = *(_BYTE *)(a2 + 424);
      *(_QWORD *)(a1 + 416) = v22;
      *(_BYTE *)(a1 + 425) = *(_BYTE *)(a2 + 425);
      v23 = *(_QWORD *)(a2 + 432);
      *(_BYTE *)(a1 + 440) = *(_BYTE *)(a2 + 440);
      *(_QWORD *)(a1 + 432) = v23;
      *(_BYTE *)(a1 + 441) = *(_BYTE *)(a2 + 441);
      v24 = *(_QWORD *)(a2 + 448);
      *(_BYTE *)(a1 + 456) = *(_BYTE *)(a2 + 456);
      *(_QWORD *)(a1 + 448) = v24;
      *(_BYTE *)(a1 + 457) = *(_BYTE *)(a2 + 457);
      v25 = *(_QWORD *)(a2 + 464);
      *(_BYTE *)(a1 + 472) = *(_BYTE *)(a2 + 472);
      *(_QWORD *)(a1 + 464) = v25;
      *(_BYTE *)(a1 + 473) = *(_BYTE *)(a2 + 473);
      v26 = *(_QWORD *)(a2 + 480);
      *(_BYTE *)(a1 + 488) = *(_BYTE *)(a2 + 488);
      *(_QWORD *)(a1 + 480) = v26;
      *(_BYTE *)(a1 + 489) = *(_BYTE *)(a2 + 489);
      *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 504) = *(_BYTE *)(a2 + 504);
      *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
      *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 528) = *(_BYTE *)(a2 + 528);
      *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
      *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 552) = *(_BYTE *)(a2 + 552);
      *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
      *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 576) = *(_BYTE *)(a2 + 576);
      *(_QWORD *)(a1 + 584) = *(_QWORD *)(a2 + 584);
      *(_QWORD *)(a1 + 592) = *(_QWORD *)(a2 + 592);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 600) = *(_BYTE *)(a2 + 600);
      *(_QWORD *)(a1 + 608) = *(_QWORD *)(a2 + 608);
      *(_QWORD *)(a1 + 616) = *(_QWORD *)(a2 + 616);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 624) = *(_BYTE *)(a2 + 624);
      *(_QWORD *)(a1 + 632) = *(_QWORD *)(a2 + 632);
      *(_QWORD *)(a1 + 640) = *(_QWORD *)(a2 + 640);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 648) = *(_BYTE *)(a2 + 648);
      *(_QWORD *)(a1 + 656) = *(_QWORD *)(a2 + 656);
      *(_QWORD *)(a1 + 664) = *(_QWORD *)(a2 + 664);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 672) = *(_BYTE *)(a2 + 672);
      *(_QWORD *)(a1 + 680) = *(_QWORD *)(a2 + 680);
      *(_QWORD *)(a1 + 688) = *(_QWORD *)(a2 + 688);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 696) = *(_BYTE *)(a2 + 696);
      *(_QWORD *)(a1 + 704) = *(_QWORD *)(a2 + 704);
      *(_QWORD *)(a1 + 712) = *(_QWORD *)(a2 + 712);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 720) = *(_BYTE *)(a2 + 720);
      *(_QWORD *)(a1 + 728) = *(_QWORD *)(a2 + 728);
      *(_QWORD *)(a1 + 736) = *(_QWORD *)(a2 + 736);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 744) = *(_BYTE *)(a2 + 744);
      *(_QWORD *)(a1 + 752) = *(_QWORD *)(a2 + 752);
      *(_QWORD *)(a1 + 760) = *(_QWORD *)(a2 + 760);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 768) = *(_BYTE *)(a2 + 768);
      *(_QWORD *)(a1 + 776) = *(_QWORD *)(a2 + 776);
      *(_QWORD *)(a1 + 784) = *(_QWORD *)(a2 + 784);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 792) = *(_BYTE *)(a2 + 792);
      *(_BYTE *)(a1 + 800) = *(_BYTE *)(a2 + 800);
      *(_BYTE *)(a1 + 801) = *(_BYTE *)(a2 + 801);
      *(_BYTE *)(a1 + 802) = *(_BYTE *)(a2 + 802);
      *(_BYTE *)(a1 + 803) = *(_BYTE *)(a2 + 803);
      v27 = *(_QWORD *)(a2 + 808);
      *(_BYTE *)(a1 + 816) = *(_BYTE *)(a2 + 816);
      *(_QWORD *)(a1 + 808) = v27;
      *(_BYTE *)(a1 + 817) = *(_BYTE *)(a2 + 817);
      v28 = *(_QWORD *)(a2 + 824);
      *(_BYTE *)(a1 + 832) = *(_BYTE *)(a2 + 832);
      *(_QWORD *)(a1 + 824) = v28;
      *(_BYTE *)(a1 + 833) = *(_BYTE *)(a2 + 833);
      v29 = *(_QWORD *)(a2 + 840);
      *(_BYTE *)(a1 + 848) = *(_BYTE *)(a2 + 848);
      *(_QWORD *)(a1 + 840) = v29;
      *(_BYTE *)(a1 + 849) = *(_BYTE *)(a2 + 849);
      v30 = *(_QWORD *)(a2 + 856);
      *(_BYTE *)(a1 + 864) = *(_BYTE *)(a2 + 864);
      *(_QWORD *)(a1 + 856) = v30;
      *(_BYTE *)(a1 + 865) = *(_BYTE *)(a2 + 865);
      v31 = *(_QWORD *)(a2 + 872);
      *(_BYTE *)(a1 + 880) = *(_BYTE *)(a2 + 880);
      *(_QWORD *)(a1 + 872) = v31;
      *(_BYTE *)(a1 + 881) = *(_BYTE *)(a2 + 881);
      v32 = *(_QWORD *)(a2 + 888);
      *(_BYTE *)(a1 + 896) = *(_BYTE *)(a2 + 896);
      *(_QWORD *)(a1 + 888) = v32;
      *(_BYTE *)(a1 + 897) = *(_BYTE *)(a2 + 897);
      v33 = *(_QWORD *)(a2 + 904);
      *(_BYTE *)(a1 + 912) = *(_BYTE *)(a2 + 912);
      *(_QWORD *)(a1 + 904) = v33;
      *(_BYTE *)(a1 + 913) = *(_BYTE *)(a2 + 913);
      v34 = *(_QWORD *)(a2 + 920);
      *(_BYTE *)(a1 + 928) = *(_BYTE *)(a2 + 928);
      *(_QWORD *)(a1 + 920) = v34;
      *(_BYTE *)(a1 + 929) = *(_BYTE *)(a2 + 929);
      v35 = *(_QWORD *)(a2 + 936);
      *(_BYTE *)(a1 + 944) = *(_BYTE *)(a2 + 944);
      *(_QWORD *)(a1 + 936) = v35;
      *(_BYTE *)(a1 + 945) = *(_BYTE *)(a2 + 945);
      v36 = *(_QWORD *)(a2 + 952);
      *(_BYTE *)(a1 + 960) = *(_BYTE *)(a2 + 960);
      *(_QWORD *)(a1 + 952) = v36;
      *(_BYTE *)(a1 + 961) = *(_BYTE *)(a2 + 961);
      *(_QWORD *)(a1 + 968) = *(_QWORD *)(a2 + 968);
      *(_QWORD *)(a1 + 976) = *(_QWORD *)(a2 + 976);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 984) = *(_BYTE *)(a2 + 984);
      *(_QWORD *)(a1 + 992) = *(_QWORD *)(a2 + 992);
      *(_QWORD *)(a1 + 1000) = *(_QWORD *)(a2 + 1000);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 1008) = *(_BYTE *)(a2 + 1008);
      *(_QWORD *)(a1 + 1016) = *(_QWORD *)(a2 + 1016);
      *(_QWORD *)(a1 + 1024) = *(_QWORD *)(a2 + 1024);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 1032) = *(_BYTE *)(a2 + 1032);
      goto LABEL_8;
    }
    sub_20A494404(a1 + 16);
    goto LABEL_6;
  }
  if (v4 == 1)
  {
LABEL_6:
    memcpy((void *)(a1 + 16), (const void *)(a2 + 16), 0x3F9uLL);
    goto LABEL_8;
  }
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
  v5 = *(_QWORD *)(a2 + 168);
  *(_WORD *)(a1 + 176) = *(_WORD *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = v5;
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
  v6 = *(_QWORD *)(a2 + 208);
  *(_WORD *)(a1 + 216) = *(_WORD *)(a2 + 216);
  *(_QWORD *)(a1 + 208) = v6;
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  *(_BYTE *)(a1 + 312) = *(_BYTE *)(a2 + 312);
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  *(_BYTE *)(a1 + 336) = *(_BYTE *)(a2 + 336);
  *(_WORD *)(a1 + 337) = *(_WORD *)(a2 + 337);
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  *(_BYTE *)(a1 + 360) = *(_BYTE *)(a2 + 360);
  *(_WORD *)(a1 + 361) = *(_WORD *)(a2 + 361);
  *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  *(_BYTE *)(a1 + 384) = *(_BYTE *)(a2 + 384);
  *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
  *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
  *(_BYTE *)(a1 + 408) = *(_BYTE *)(a2 + 408);
  *(_WORD *)(a1 + 409) = *(_WORD *)(a2 + 409);
  v7 = *(_QWORD *)(a2 + 416);
  *(_WORD *)(a1 + 424) = *(_WORD *)(a2 + 424);
  *(_QWORD *)(a1 + 416) = v7;
  v8 = *(_QWORD *)(a2 + 432);
  *(_WORD *)(a1 + 440) = *(_WORD *)(a2 + 440);
  *(_QWORD *)(a1 + 432) = v8;
  v9 = *(_QWORD *)(a2 + 448);
  *(_WORD *)(a1 + 456) = *(_WORD *)(a2 + 456);
  *(_QWORD *)(a1 + 448) = v9;
  v10 = *(_QWORD *)(a2 + 464);
  *(_WORD *)(a1 + 472) = *(_WORD *)(a2 + 472);
  *(_QWORD *)(a1 + 464) = v10;
  v11 = *(_QWORD *)(a2 + 480);
  *(_WORD *)(a1 + 488) = *(_WORD *)(a2 + 488);
  *(_QWORD *)(a1 + 480) = v11;
  *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
  *(_BYTE *)(a1 + 504) = *(_BYTE *)(a2 + 504);
  *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
  *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
  *(_BYTE *)(a1 + 528) = *(_BYTE *)(a2 + 528);
  *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
  *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
  *(_BYTE *)(a1 + 552) = *(_BYTE *)(a2 + 552);
  *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
  *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
  *(_BYTE *)(a1 + 576) = *(_BYTE *)(a2 + 576);
  *(_QWORD *)(a1 + 584) = *(_QWORD *)(a2 + 584);
  *(_QWORD *)(a1 + 592) = *(_QWORD *)(a2 + 592);
  *(_BYTE *)(a1 + 600) = *(_BYTE *)(a2 + 600);
  *(_QWORD *)(a1 + 608) = *(_QWORD *)(a2 + 608);
  *(_QWORD *)(a1 + 616) = *(_QWORD *)(a2 + 616);
  *(_BYTE *)(a1 + 624) = *(_BYTE *)(a2 + 624);
  *(_QWORD *)(a1 + 632) = *(_QWORD *)(a2 + 632);
  *(_QWORD *)(a1 + 640) = *(_QWORD *)(a2 + 640);
  *(_BYTE *)(a1 + 648) = *(_BYTE *)(a2 + 648);
  *(_QWORD *)(a1 + 656) = *(_QWORD *)(a2 + 656);
  *(_QWORD *)(a1 + 664) = *(_QWORD *)(a2 + 664);
  *(_BYTE *)(a1 + 672) = *(_BYTE *)(a2 + 672);
  *(_QWORD *)(a1 + 680) = *(_QWORD *)(a2 + 680);
  *(_QWORD *)(a1 + 688) = *(_QWORD *)(a2 + 688);
  *(_BYTE *)(a1 + 696) = *(_BYTE *)(a2 + 696);
  *(_QWORD *)(a1 + 704) = *(_QWORD *)(a2 + 704);
  *(_QWORD *)(a1 + 712) = *(_QWORD *)(a2 + 712);
  *(_BYTE *)(a1 + 720) = *(_BYTE *)(a2 + 720);
  *(_QWORD *)(a1 + 728) = *(_QWORD *)(a2 + 728);
  *(_QWORD *)(a1 + 736) = *(_QWORD *)(a2 + 736);
  *(_BYTE *)(a1 + 744) = *(_BYTE *)(a2 + 744);
  *(_QWORD *)(a1 + 752) = *(_QWORD *)(a2 + 752);
  *(_QWORD *)(a1 + 760) = *(_QWORD *)(a2 + 760);
  *(_BYTE *)(a1 + 768) = *(_BYTE *)(a2 + 768);
  *(_QWORD *)(a1 + 776) = *(_QWORD *)(a2 + 776);
  *(_QWORD *)(a1 + 784) = *(_QWORD *)(a2 + 784);
  *(_BYTE *)(a1 + 792) = *(_BYTE *)(a2 + 792);
  v12 = *(_OWORD *)(a2 + 800);
  v13 = *(_OWORD *)(a2 + 816);
  *(_WORD *)(a1 + 832) = *(_WORD *)(a2 + 832);
  *(_OWORD *)(a1 + 800) = v12;
  *(_OWORD *)(a1 + 816) = v13;
  v15 = *(_OWORD *)(a2 + 920);
  v14 = *(_OWORD *)(a2 + 936);
  v16 = *(_OWORD *)(a2 + 904);
  *(_OWORD *)(a1 + 946) = *(_OWORD *)(a2 + 946);
  *(_OWORD *)(a1 + 920) = v15;
  *(_OWORD *)(a1 + 936) = v14;
  *(_OWORD *)(a1 + 904) = v16;
  v17 = *(_OWORD *)(a2 + 840);
  v18 = *(_OWORD *)(a2 + 856);
  v19 = *(_OWORD *)(a2 + 888);
  *(_OWORD *)(a1 + 872) = *(_OWORD *)(a2 + 872);
  *(_OWORD *)(a1 + 888) = v19;
  *(_OWORD *)(a1 + 840) = v17;
  *(_OWORD *)(a1 + 856) = v18;
  *(_QWORD *)(a1 + 968) = *(_QWORD *)(a2 + 968);
  *(_QWORD *)(a1 + 976) = *(_QWORD *)(a2 + 976);
  *(_BYTE *)(a1 + 984) = *(_BYTE *)(a2 + 984);
  *(_QWORD *)(a1 + 992) = *(_QWORD *)(a2 + 992);
  *(_QWORD *)(a1 + 1000) = *(_QWORD *)(a2 + 1000);
  *(_BYTE *)(a1 + 1008) = *(_BYTE *)(a2 + 1008);
  *(_QWORD *)(a1 + 1016) = *(_QWORD *)(a2 + 1016);
  *(_QWORD *)(a1 + 1024) = *(_QWORD *)(a2 + 1024);
  *(_BYTE *)(a1 + 1032) = *(_BYTE *)(a2 + 1032);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_8:
  *(_QWORD *)(a1 + 1040) = *(_QWORD *)(a2 + 1040);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 1048) = *(_BYTE *)(a2 + 1048);
  *(_BYTE *)(a1 + 1049) = *(_BYTE *)(a2 + 1049);
  *(_BYTE *)(a1 + 1050) = *(_BYTE *)(a2 + 1050);
  return a1;
}

uint64_t sub_20A494404(uint64_t a1)
{
  destroy for ArmandDeviceData();
  return a1;
}

void *__swift_memcpy1051_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x41BuLL);
}

uint64_t assignWithTake for ODNAtorParameters(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  if (*(_QWORD *)(a1 + 16) != 1)
  {
    if (v4 != 1)
    {
      *(_QWORD *)(a1 + 16) = v4;
      swift_bridgeObjectRelease();
      v5 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = v5;
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
      v6 = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = v6;
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
      v7 = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = v7;
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
      v8 = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = v8;
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
      v9 = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = v9;
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
      v10 = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 152) = v10;
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      *(_WORD *)(a1 + 176) = *(_WORD *)(a2 + 176);
      v11 = *(_QWORD *)(a2 + 192);
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      *(_QWORD *)(a1 + 192) = v11;
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
      *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
      *(_WORD *)(a1 + 216) = *(_WORD *)(a2 + 216);
      v12 = *(_QWORD *)(a2 + 232);
      *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
      *(_QWORD *)(a1 + 232) = v12;
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
      v13 = *(_QWORD *)(a2 + 256);
      *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
      *(_QWORD *)(a1 + 256) = v13;
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
      v14 = *(_QWORD *)(a2 + 280);
      *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
      *(_QWORD *)(a1 + 280) = v14;
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
      v15 = *(_QWORD *)(a2 + 304);
      *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
      *(_QWORD *)(a1 + 304) = v15;
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 312) = *(_BYTE *)(a2 + 312);
      v16 = *(_QWORD *)(a2 + 328);
      *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
      *(_QWORD *)(a1 + 328) = v16;
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 336) = *(_BYTE *)(a2 + 336);
      *(_WORD *)(a1 + 337) = *(_WORD *)(a2 + 337);
      v17 = *(_QWORD *)(a2 + 352);
      *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
      *(_QWORD *)(a1 + 352) = v17;
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 360) = *(_BYTE *)(a2 + 360);
      *(_WORD *)(a1 + 361) = *(_WORD *)(a2 + 361);
      v18 = *(_QWORD *)(a2 + 376);
      *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
      *(_QWORD *)(a1 + 376) = v18;
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 384) = *(_BYTE *)(a2 + 384);
      v19 = *(_QWORD *)(a2 + 400);
      *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
      *(_QWORD *)(a1 + 400) = v19;
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 408) = *(_BYTE *)(a2 + 408);
      *(_WORD *)(a1 + 409) = *(_WORD *)(a2 + 409);
      *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
      *(_WORD *)(a1 + 424) = *(_WORD *)(a2 + 424);
      *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
      *(_WORD *)(a1 + 440) = *(_WORD *)(a2 + 440);
      *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
      *(_WORD *)(a1 + 456) = *(_WORD *)(a2 + 456);
      v20 = *(_QWORD *)(a2 + 464);
      *(_BYTE *)(a1 + 472) = *(_BYTE *)(a2 + 472);
      *(_QWORD *)(a1 + 464) = v20;
      *(_BYTE *)(a1 + 473) = *(_BYTE *)(a2 + 473);
      *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
      *(_WORD *)(a1 + 488) = *(_WORD *)(a2 + 488);
      *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 504) = *(_BYTE *)(a2 + 504);
      *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
      *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 528) = *(_BYTE *)(a2 + 528);
      *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
      *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 552) = *(_BYTE *)(a2 + 552);
      *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
      *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 576) = *(_BYTE *)(a2 + 576);
      *(_QWORD *)(a1 + 584) = *(_QWORD *)(a2 + 584);
      *(_QWORD *)(a1 + 592) = *(_QWORD *)(a2 + 592);
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 600) = *(_BYTE *)(a2 + 600);
      *(_QWORD *)(a1 + 608) = *(_QWORD *)(a2 + 608);
      *(_QWORD *)(a1 + 616) = *(_QWORD *)(a2 + 616);
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 624) = *(_BYTE *)(a2 + 624);
      *(_QWORD *)(a1 + 632) = *(_QWORD *)(a2 + 632);
      *(_QWORD *)(a1 + 640) = *(_QWORD *)(a2 + 640);
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 648) = *(_BYTE *)(a2 + 648);
      *(_QWORD *)(a1 + 656) = *(_QWORD *)(a2 + 656);
      *(_QWORD *)(a1 + 664) = *(_QWORD *)(a2 + 664);
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 672) = *(_BYTE *)(a2 + 672);
      *(_QWORD *)(a1 + 680) = *(_QWORD *)(a2 + 680);
      *(_QWORD *)(a1 + 688) = *(_QWORD *)(a2 + 688);
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 696) = *(_BYTE *)(a2 + 696);
      *(_QWORD *)(a1 + 704) = *(_QWORD *)(a2 + 704);
      *(_QWORD *)(a1 + 712) = *(_QWORD *)(a2 + 712);
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 720) = *(_BYTE *)(a2 + 720);
      *(_QWORD *)(a1 + 728) = *(_QWORD *)(a2 + 728);
      *(_QWORD *)(a1 + 736) = *(_QWORD *)(a2 + 736);
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 744) = *(_BYTE *)(a2 + 744);
      *(_QWORD *)(a1 + 752) = *(_QWORD *)(a2 + 752);
      *(_QWORD *)(a1 + 760) = *(_QWORD *)(a2 + 760);
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 768) = *(_BYTE *)(a2 + 768);
      *(_QWORD *)(a1 + 776) = *(_QWORD *)(a2 + 776);
      *(_QWORD *)(a1 + 784) = *(_QWORD *)(a2 + 784);
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 792) = *(_BYTE *)(a2 + 792);
      *(_DWORD *)(a1 + 800) = *(_DWORD *)(a2 + 800);
      *(_QWORD *)(a1 + 808) = *(_QWORD *)(a2 + 808);
      *(_WORD *)(a1 + 816) = *(_WORD *)(a2 + 816);
      *(_QWORD *)(a1 + 824) = *(_QWORD *)(a2 + 824);
      *(_WORD *)(a1 + 832) = *(_WORD *)(a2 + 832);
      *(_QWORD *)(a1 + 840) = *(_QWORD *)(a2 + 840);
      *(_WORD *)(a1 + 848) = *(_WORD *)(a2 + 848);
      *(_BYTE *)(a1 + 864) = *(_BYTE *)(a2 + 864);
      *(_QWORD *)(a1 + 856) = *(_QWORD *)(a2 + 856);
      *(_BYTE *)(a1 + 865) = *(_BYTE *)(a2 + 865);
      *(_QWORD *)(a1 + 872) = *(_QWORD *)(a2 + 872);
      *(_WORD *)(a1 + 880) = *(_WORD *)(a2 + 880);
      *(_QWORD *)(a1 + 888) = *(_QWORD *)(a2 + 888);
      *(_WORD *)(a1 + 896) = *(_WORD *)(a2 + 896);
      *(_QWORD *)(a1 + 904) = *(_QWORD *)(a2 + 904);
      *(_WORD *)(a1 + 912) = *(_WORD *)(a2 + 912);
      *(_QWORD *)(a1 + 920) = *(_QWORD *)(a2 + 920);
      *(_BYTE *)(a1 + 928) = *(_BYTE *)(a2 + 928);
      *(_BYTE *)(a1 + 929) = *(_BYTE *)(a2 + 929);
      *(_QWORD *)(a1 + 936) = *(_QWORD *)(a2 + 936);
      *(_WORD *)(a1 + 944) = *(_WORD *)(a2 + 944);
      *(_QWORD *)(a1 + 952) = *(_QWORD *)(a2 + 952);
      *(_WORD *)(a1 + 960) = *(_WORD *)(a2 + 960);
      *(_QWORD *)(a1 + 968) = *(_QWORD *)(a2 + 968);
      *(_QWORD *)(a1 + 976) = *(_QWORD *)(a2 + 976);
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 984) = *(_BYTE *)(a2 + 984);
      *(_QWORD *)(a1 + 992) = *(_QWORD *)(a2 + 992);
      *(_QWORD *)(a1 + 1000) = *(_QWORD *)(a2 + 1000);
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 1008) = *(_BYTE *)(a2 + 1008);
      *(_QWORD *)(a1 + 1016) = *(_QWORD *)(a2 + 1016);
      *(_QWORD *)(a1 + 1024) = *(_QWORD *)(a2 + 1024);
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 1032) = *(_BYTE *)(a2 + 1032);
      goto LABEL_6;
    }
    sub_20A494404(a1 + 16);
  }
  memcpy((void *)(a1 + 16), (const void *)(a2 + 16), 0x3F9uLL);
LABEL_6:
  *(_QWORD *)(a1 + 1040) = *(_QWORD *)(a2 + 1040);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 1048) = *(_BYTE *)(a2 + 1048);
  *(_BYTE *)(a1 + 1049) = *(_BYTE *)(a2 + 1049);
  *(_BYTE *)(a1 + 1050) = *(_BYTE *)(a2 + 1050);
  return a1;
}

uint64_t getEnumTagSinglePayload for ODNAtorParameters(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 1051))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ODNAtorParameters(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 1050) = 0;
    *(_WORD *)(result + 1048) = 0;
    *(_OWORD *)(result + 1032) = 0u;
    *(_OWORD *)(result + 1016) = 0u;
    *(_OWORD *)(result + 1000) = 0u;
    *(_OWORD *)(result + 984) = 0u;
    *(_OWORD *)(result + 968) = 0u;
    *(_OWORD *)(result + 952) = 0u;
    *(_OWORD *)(result + 936) = 0u;
    *(_OWORD *)(result + 920) = 0u;
    *(_OWORD *)(result + 904) = 0u;
    *(_OWORD *)(result + 888) = 0u;
    *(_OWORD *)(result + 872) = 0u;
    *(_OWORD *)(result + 856) = 0u;
    *(_OWORD *)(result + 840) = 0u;
    *(_OWORD *)(result + 824) = 0u;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 1051) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 1051) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ODNAtorParameters()
{
  return &type metadata for ODNAtorParameters;
}

uint64_t type metadata accessor for ODNAtorProxy()
{
  return objc_opt_self();
}

uint64_t method lookup function for ODNAtorProxy()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ODNAtorProxy.getBestAssessmentForBindings(inputBindings:missingBindings:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of ODNAtorProxy.__allocating_init(providerID:serverRepo:useDSID:sessionIdentifier:augmentedProfileReceivedClosure:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  _QWORD *v18;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v20 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(v8 + 160) + *(_QWORD *)(v8 + 160));
  v18 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v9 + 16) = v18;
  *v18 = v9;
  v18[1] = sub_20A494C74;
  return v20(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_20A494C74(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t dispatch thunk of ODNAtorProxy.getOutputPayload(getAssessmentsParameters:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 176) + *(_QWORD *)(*(_QWORD *)v2 + 176));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_20A4597C0;
  return v8(a1, a2);
}

uint64_t dispatch thunk of ODNAtorProxy.sendODNResults(assessmentTiming:outcome:partialAssessmentStates:sessionId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v5 + 192)
                                                                            + *(_QWORD *)(*(_QWORD *)v5 + 192));
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v12;
  *v12 = v6;
  v12[1] = sub_20A45A37C;
  return v14(a1, a2, a3, a4, a5);
}

uint64_t storeEnumTagSinglePayload for AssessmentOutcome(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_20A494E18 + 4 * byte_20A5BFCFB[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_20A494E4C + 4 * byte_20A5BFCF6[v4]))();
}

uint64_t sub_20A494E4C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A494E54(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A494E5CLL);
  return result;
}

uint64_t sub_20A494E68(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A494E70);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_20A494E74(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A494E7C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AssessmentOutcome()
{
  return &type metadata for AssessmentOutcome;
}

uint64_t *initializeBufferWithCopyOfBuffer for AssessmentTiming(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v10;
  char *v11;
  char *v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_20A5B8F6C();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    v9((uint64_t *)((char *)a1 + a3[5]), (uint64_t *)((char *)a2 + a3[5]), v7);
    v10 = a3[6];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
    if (v13((char *)a2 + v10, 1, v7))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v9((uint64_t *)v11, (uint64_t *)v12, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
    }
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    if (v13((char *)a2 + v16, 1, v7))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      v9((uint64_t *)v17, (uint64_t *)v18, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v17, 0, 1, v7);
    }
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    if (v13((char *)a2 + v20, 1, v7))
    {
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      v9((uint64_t *)v21, (uint64_t *)v22, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v21, 0, 1, v7);
    }
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    if (v13((char *)a2 + v24, 1, v7))
    {
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      v9((uint64_t *)v25, (uint64_t *)v26, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v25, 0, 1, v7);
    }
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    if (v13((char *)a2 + v28, 1, v7))
    {
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      v9((uint64_t *)v29, (uint64_t *)v30, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v29, 0, 1, v7);
    }
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    if (v13(v34, 1, v7))
    {
      v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      v9((uint64_t *)v33, (uint64_t *)v34, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v33, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for AssessmentTiming(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  void (*v14)(uint64_t, uint64_t);

  v4 = sub_20A5B8F6C();
  v5 = *(_QWORD *)(v4 - 8);
  v14 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v14(a1, v4);
  v14(a1 + a2[5], v4);
  v6 = a1 + a2[6];
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v7(v6, 1, v4))
    v14(v6, v4);
  v8 = a1 + a2[7];
  if (!v7(v8, 1, v4))
    v14(v8, v4);
  v9 = a1 + a2[8];
  if (!v7(v9, 1, v4))
    v14(v9, v4);
  v10 = a1 + a2[9];
  if (!v7(v10, 1, v4))
    v14(v10, v4);
  v11 = a1 + a2[10];
  if (!v7(v11, 1, v4))
    v14(v11, v4);
  v12 = a1 + a2[11];
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(v12, 1, v4);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v14)(v12, v4);
  return result;
}

char *initializeWithCopy for AssessmentTiming(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;

  v6 = sub_20A5B8F6C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  v8(&a1[a3[5]], &a2[a3[5]], v6);
  v9 = a3[6];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  if (v12(&a2[v9], 1, v6))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  v14 = a3[7];
  v15 = &a1[v14];
  v16 = &a2[v14];
  if (v12(&a2[v14], 1, v6))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v8(v15, v16, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v15, 0, 1, v6);
  }
  v18 = a3[8];
  v19 = &a1[v18];
  v20 = &a2[v18];
  if (v12(&a2[v18], 1, v6))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v8(v19, v20, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
  }
  v22 = a3[9];
  v23 = &a1[v22];
  v24 = &a2[v22];
  if (v12(&a2[v22], 1, v6))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    v8(v23, v24, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v23, 0, 1, v6);
  }
  v26 = a3[10];
  v27 = &a1[v26];
  v28 = &a2[v26];
  if (v12(&a2[v26], 1, v6))
  {
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    v8(v27, v28, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v27, 0, 1, v6);
  }
  v30 = a3[11];
  v31 = &a1[v30];
  v32 = &a2[v30];
  if (v12(v32, 1, v6))
  {
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    v8(v31, v32, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v31, 0, 1, v6);
  }
  return a1;
}

char *assignWithCopy for AssessmentTiming(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t (*v12)(const void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  int v43;
  int v44;
  uint64_t v45;

  v6 = sub_20A5B8F6C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v8(&a1[a3[5]], &a2[a3[5]], v6);
  v9 = a3[6];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  v13 = v12(&a1[v9], 1, v6);
  v14 = v12(v11, 1, v6);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  v8(v10, v11, v6);
LABEL_7:
  v16 = a3[7];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = v12(&a1[v16], 1, v6);
  v20 = v12(v18, 1, v6);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v17, v18, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v17, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v17, v6);
LABEL_12:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  v8(v17, v18, v6);
LABEL_13:
  v22 = a3[8];
  v23 = &a1[v22];
  v24 = &a2[v22];
  v25 = v12(&a1[v22], 1, v6);
  v26 = v12(v24, 1, v6);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v23, v24, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v23, 0, 1, v6);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v26)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v23, v6);
LABEL_18:
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    goto LABEL_19;
  }
  v8(v23, v24, v6);
LABEL_19:
  v28 = a3[9];
  v29 = &a1[v28];
  v30 = &a2[v28];
  v31 = v12(&a1[v28], 1, v6);
  v32 = v12(v30, 1, v6);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v29, v30, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v29, 0, 1, v6);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v29, v6);
LABEL_24:
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    goto LABEL_25;
  }
  v8(v29, v30, v6);
LABEL_25:
  v34 = a3[10];
  v35 = &a1[v34];
  v36 = &a2[v34];
  v37 = v12(&a1[v34], 1, v6);
  v38 = v12(v36, 1, v6);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v35, v36, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v35, 0, 1, v6);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v38)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v35, v6);
LABEL_30:
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    goto LABEL_31;
  }
  v8(v35, v36, v6);
LABEL_31:
  v40 = a3[11];
  v41 = &a1[v40];
  v42 = &a2[v40];
  v43 = v12(&a1[v40], 1, v6);
  v44 = v12(v42, 1, v6);
  if (!v43)
  {
    if (!v44)
    {
      v8(v41, v42, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v41, v6);
    goto LABEL_36;
  }
  if (v44)
  {
LABEL_36:
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v41, v42, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v41, 0, 1, v6);
  return a1;
}

char *initializeWithTake for AssessmentTiming(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;

  v6 = sub_20A5B8F6C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v8(&a1[a3[5]], &a2[a3[5]], v6);
  v9 = a3[6];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  if (v12(&a2[v9], 1, v6))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  v14 = a3[7];
  v15 = &a1[v14];
  v16 = &a2[v14];
  if (v12(&a2[v14], 1, v6))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v8(v15, v16, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v15, 0, 1, v6);
  }
  v18 = a3[8];
  v19 = &a1[v18];
  v20 = &a2[v18];
  if (v12(&a2[v18], 1, v6))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v8(v19, v20, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
  }
  v22 = a3[9];
  v23 = &a1[v22];
  v24 = &a2[v22];
  if (v12(&a2[v22], 1, v6))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    v8(v23, v24, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v23, 0, 1, v6);
  }
  v26 = a3[10];
  v27 = &a1[v26];
  v28 = &a2[v26];
  if (v12(&a2[v26], 1, v6))
  {
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    v8(v27, v28, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v27, 0, 1, v6);
  }
  v30 = a3[11];
  v31 = &a1[v30];
  v32 = &a2[v30];
  if (v12(v32, 1, v6))
  {
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    v8(v31, v32, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v31, 0, 1, v6);
  }
  return a1;
}

char *assignWithTake for AssessmentTiming(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t (*v12)(const void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  int v43;
  int v44;
  uint64_t v45;

  v6 = sub_20A5B8F6C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v8(&a1[a3[5]], &a2[a3[5]], v6);
  v9 = a3[6];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  v13 = v12(&a1[v9], 1, v6);
  v14 = v12(v11, 1, v6);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  v8(v10, v11, v6);
LABEL_7:
  v16 = a3[7];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = v12(&a1[v16], 1, v6);
  v20 = v12(v18, 1, v6);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v17, v18, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v17, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v17, v6);
LABEL_12:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  v8(v17, v18, v6);
LABEL_13:
  v22 = a3[8];
  v23 = &a1[v22];
  v24 = &a2[v22];
  v25 = v12(&a1[v22], 1, v6);
  v26 = v12(v24, 1, v6);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v23, v24, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v23, 0, 1, v6);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v26)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v23, v6);
LABEL_18:
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    goto LABEL_19;
  }
  v8(v23, v24, v6);
LABEL_19:
  v28 = a3[9];
  v29 = &a1[v28];
  v30 = &a2[v28];
  v31 = v12(&a1[v28], 1, v6);
  v32 = v12(v30, 1, v6);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v29, v30, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v29, 0, 1, v6);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v29, v6);
LABEL_24:
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    goto LABEL_25;
  }
  v8(v29, v30, v6);
LABEL_25:
  v34 = a3[10];
  v35 = &a1[v34];
  v36 = &a2[v34];
  v37 = v12(&a1[v34], 1, v6);
  v38 = v12(v36, 1, v6);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v35, v36, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v35, 0, 1, v6);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v38)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v35, v6);
LABEL_30:
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    goto LABEL_31;
  }
  v8(v35, v36, v6);
LABEL_31:
  v40 = a3[11];
  v41 = &a1[v40];
  v42 = &a2[v40];
  v43 = v12(&a1[v40], 1, v6);
  v44 = v12(v42, 1, v6);
  if (!v43)
  {
    if (!v44)
    {
      v8(v41, v42, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v41, v6);
    goto LABEL_36;
  }
  if (v44)
  {
LABEL_36:
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v41, v42, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v41, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for AssessmentTiming()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20A4962D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = sub_20A5B8F6C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
    v10 = a1 + *(int *)(a3 + 24);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for AssessmentTiming()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_20A496354(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = sub_20A5B8F6C();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_20A4963D4()
{
  unint64_t v0;
  unint64_t v1;

  sub_20A5B8F6C();
  if (v0 <= 0x3F)
  {
    sub_20A466FF0();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t destroy for OdiAssessmentsParameters(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 8);
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for OdiAssessmentsParameters(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  const void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = (const void *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  if (v4 == 1)
  {
    memcpy((void *)(a1 + 8), v5, 0x3F9uLL);
  }
  else
  {
    v6 = *(_QWORD *)(a2 + 16);
    v37 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 8) = v4;
    *(_QWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 24) = v37;
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    v36 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = v36;
    *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
    v35 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = v35;
    *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
    v34 = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = v34;
    *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
    v33 = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = v33;
    *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
    v32 = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 144) = v32;
    *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
    v7 = *(_QWORD *)(a2 + 160);
    *(_WORD *)(a1 + 168) = *(_WORD *)(a2 + 168);
    *(_QWORD *)(a1 + 160) = v7;
    v8 = *(_QWORD *)(a2 + 184);
    *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 184) = v8;
    *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
    *(_WORD *)(a1 + 208) = *(_WORD *)(a2 + 208);
    *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
    v9 = *(_QWORD *)(a2 + 224);
    *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
    *(_QWORD *)(a1 + 224) = v9;
    *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
    v10 = *(_QWORD *)(a2 + 248);
    *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
    *(_QWORD *)(a1 + 248) = v10;
    *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
    v11 = *(_QWORD *)(a2 + 272);
    *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
    *(_QWORD *)(a1 + 272) = v11;
    *(_BYTE *)(a1 + 280) = *(_BYTE *)(a2 + 280);
    v12 = *(_QWORD *)(a2 + 296);
    *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
    *(_QWORD *)(a1 + 296) = v12;
    *(_BYTE *)(a1 + 304) = *(_BYTE *)(a2 + 304);
    v13 = *(_QWORD *)(a2 + 320);
    *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
    *(_QWORD *)(a1 + 320) = v13;
    *(_BYTE *)(a1 + 328) = *(_BYTE *)(a2 + 328);
    *(_WORD *)(a1 + 329) = *(_WORD *)(a2 + 329);
    v14 = *(_QWORD *)(a2 + 344);
    *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
    *(_QWORD *)(a1 + 344) = v14;
    *(_BYTE *)(a1 + 352) = *(_BYTE *)(a2 + 352);
    *(_WORD *)(a1 + 353) = *(_WORD *)(a2 + 353);
    v15 = *(_QWORD *)(a2 + 368);
    *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
    *(_QWORD *)(a1 + 368) = v15;
    *(_BYTE *)(a1 + 376) = *(_BYTE *)(a2 + 376);
    v16 = *(_QWORD *)(a2 + 392);
    *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
    *(_QWORD *)(a1 + 392) = v16;
    *(_BYTE *)(a1 + 400) = *(_BYTE *)(a2 + 400);
    *(_WORD *)(a1 + 401) = *(_WORD *)(a2 + 401);
    v17 = *(_QWORD *)(a2 + 408);
    *(_WORD *)(a1 + 416) = *(_WORD *)(a2 + 416);
    *(_QWORD *)(a1 + 408) = v17;
    v18 = *(_QWORD *)(a2 + 424);
    *(_WORD *)(a1 + 432) = *(_WORD *)(a2 + 432);
    *(_QWORD *)(a1 + 424) = v18;
    v19 = *(_QWORD *)(a2 + 440);
    *(_WORD *)(a1 + 448) = *(_WORD *)(a2 + 448);
    *(_QWORD *)(a1 + 440) = v19;
    v20 = *(_QWORD *)(a2 + 456);
    *(_WORD *)(a1 + 464) = *(_WORD *)(a2 + 464);
    *(_QWORD *)(a1 + 456) = v20;
    v21 = *(_QWORD *)(a2 + 472);
    *(_WORD *)(a1 + 480) = *(_WORD *)(a2 + 480);
    *(_QWORD *)(a1 + 472) = v21;
    *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
    *(_BYTE *)(a1 + 496) = *(_BYTE *)(a2 + 496);
    v22 = *(_QWORD *)(a2 + 512);
    *(_QWORD *)(a1 + 504) = *(_QWORD *)(a2 + 504);
    *(_QWORD *)(a1 + 512) = v22;
    *(_BYTE *)(a1 + 520) = *(_BYTE *)(a2 + 520);
    *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
    *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
    *(_BYTE *)(a1 + 544) = *(_BYTE *)(a2 + 544);
    *(_QWORD *)(a1 + 552) = *(_QWORD *)(a2 + 552);
    *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
    *(_BYTE *)(a1 + 568) = *(_BYTE *)(a2 + 568);
    *(_QWORD *)(a1 + 576) = *(_QWORD *)(a2 + 576);
    *(_QWORD *)(a1 + 584) = *(_QWORD *)(a2 + 584);
    *(_BYTE *)(a1 + 592) = *(_BYTE *)(a2 + 592);
    *(_QWORD *)(a1 + 600) = *(_QWORD *)(a2 + 600);
    *(_QWORD *)(a1 + 608) = *(_QWORD *)(a2 + 608);
    *(_BYTE *)(a1 + 616) = *(_BYTE *)(a2 + 616);
    *(_QWORD *)(a1 + 624) = *(_QWORD *)(a2 + 624);
    *(_QWORD *)(a1 + 632) = *(_QWORD *)(a2 + 632);
    *(_BYTE *)(a1 + 640) = *(_BYTE *)(a2 + 640);
    *(_QWORD *)(a1 + 648) = *(_QWORD *)(a2 + 648);
    *(_QWORD *)(a1 + 656) = *(_QWORD *)(a2 + 656);
    *(_BYTE *)(a1 + 664) = *(_BYTE *)(a2 + 664);
    *(_QWORD *)(a1 + 672) = *(_QWORD *)(a2 + 672);
    *(_QWORD *)(a1 + 680) = *(_QWORD *)(a2 + 680);
    *(_BYTE *)(a1 + 688) = *(_BYTE *)(a2 + 688);
    *(_QWORD *)(a1 + 696) = *(_QWORD *)(a2 + 696);
    *(_QWORD *)(a1 + 704) = *(_QWORD *)(a2 + 704);
    *(_BYTE *)(a1 + 712) = *(_BYTE *)(a2 + 712);
    *(_QWORD *)(a1 + 720) = *(_QWORD *)(a2 + 720);
    *(_QWORD *)(a1 + 728) = *(_QWORD *)(a2 + 728);
    *(_BYTE *)(a1 + 736) = *(_BYTE *)(a2 + 736);
    *(_QWORD *)(a1 + 744) = *(_QWORD *)(a2 + 744);
    *(_QWORD *)(a1 + 752) = *(_QWORD *)(a2 + 752);
    *(_BYTE *)(a1 + 760) = *(_BYTE *)(a2 + 760);
    *(_QWORD *)(a1 + 768) = *(_QWORD *)(a2 + 768);
    *(_QWORD *)(a1 + 776) = *(_QWORD *)(a2 + 776);
    *(_BYTE *)(a1 + 784) = *(_BYTE *)(a2 + 784);
    v23 = *(_OWORD *)(a2 + 792);
    v24 = *(_OWORD *)(a2 + 808);
    *(_WORD *)(a1 + 824) = *(_WORD *)(a2 + 824);
    *(_OWORD *)(a1 + 792) = v23;
    *(_OWORD *)(a1 + 808) = v24;
    v25 = *(_OWORD *)(a2 + 832);
    v26 = *(_OWORD *)(a2 + 848);
    v27 = *(_OWORD *)(a2 + 864);
    *(_OWORD *)(a1 + 880) = *(_OWORD *)(a2 + 880);
    *(_OWORD *)(a1 + 864) = v27;
    *(_OWORD *)(a1 + 848) = v26;
    *(_OWORD *)(a1 + 832) = v25;
    v28 = *(_OWORD *)(a2 + 896);
    v29 = *(_OWORD *)(a2 + 912);
    v30 = *(_OWORD *)(a2 + 928);
    *(_OWORD *)(a1 + 938) = *(_OWORD *)(a2 + 938);
    *(_OWORD *)(a1 + 928) = v30;
    *(_OWORD *)(a1 + 912) = v29;
    *(_OWORD *)(a1 + 896) = v28;
    *(_QWORD *)(a1 + 960) = *(_QWORD *)(a2 + 960);
    *(_QWORD *)(a1 + 968) = *(_QWORD *)(a2 + 968);
    *(_BYTE *)(a1 + 976) = *(_BYTE *)(a2 + 976);
    *(_QWORD *)(a1 + 984) = *(_QWORD *)(a2 + 984);
    *(_BYTE *)(a1 + 1000) = *(_BYTE *)(a2 + 1000);
    *(_QWORD *)(a1 + 1008) = *(_QWORD *)(a2 + 1008);
    *(_BYTE *)(a1 + 1024) = *(_BYTE *)(a2 + 1024);
    *(_QWORD *)(a1 + 992) = *(_QWORD *)(a2 + 992);
    *(_QWORD *)(a1 + 1016) = *(_QWORD *)(a2 + 1016);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *(_WORD *)(a1 + 1025) = *(_WORD *)(a2 + 1025);
  return a1;
}

uint64_t assignWithCopy for OdiAssessmentsParameters(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 8);
  v5 = a2 + 329;
  if (*(_QWORD *)(a1 + 8) != 1)
  {
    if (v4 != 1)
    {
      *(_QWORD *)(a1 + 8) = v4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
      v21 = *(_QWORD *)(a2 + 160);
      *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
      *(_QWORD *)(a1 + 160) = v21;
      *(_BYTE *)(a1 + 169) = *(_BYTE *)(a2 + 169);
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
      v22 = *(_QWORD *)(a2 + 200);
      *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
      *(_QWORD *)(a1 + 200) = v22;
      *(_BYTE *)(a1 + 209) = *(_BYTE *)(a2 + 209);
      *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
      *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
      *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
      *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
      *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
      *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 280) = *(_BYTE *)(a2 + 280);
      *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
      *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 304) = *(_BYTE *)(a2 + 304);
      *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
      *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 328) = *(_BYTE *)(a2 + 328);
      *(_BYTE *)(a1 + 329) = *(_BYTE *)(a2 + 329);
      *(_BYTE *)(a1 + 330) = *(_BYTE *)(a2 + 330);
      *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
      *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 352) = *(_BYTE *)(a2 + 352);
      *(_BYTE *)(a1 + 353) = *(_BYTE *)(a2 + 353);
      *(_BYTE *)(a1 + 354) = *(_BYTE *)(a2 + 354);
      *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
      *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 376) = *(_BYTE *)(a2 + 376);
      *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
      *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 400) = *(_BYTE *)(a2 + 400);
      *(_BYTE *)(a1 + 401) = *(_BYTE *)(a2 + 401);
      *(_BYTE *)(a1 + 402) = *(_BYTE *)(a2 + 402);
      v23 = *(_QWORD *)(a2 + 408);
      *(_BYTE *)(a1 + 416) = *(_BYTE *)(a2 + 416);
      *(_QWORD *)(a1 + 408) = v23;
      *(_BYTE *)(a1 + 417) = *(_BYTE *)(a2 + 417);
      v24 = *(_QWORD *)(a2 + 424);
      *(_BYTE *)(a1 + 432) = *(_BYTE *)(a2 + 432);
      *(_QWORD *)(a1 + 424) = v24;
      *(_BYTE *)(a1 + 433) = *(_BYTE *)(a2 + 433);
      v25 = *(_QWORD *)(a2 + 440);
      *(_BYTE *)(a1 + 448) = *(_BYTE *)(a2 + 448);
      *(_QWORD *)(a1 + 440) = v25;
      *(_BYTE *)(a1 + 449) = *(_BYTE *)(a2 + 449);
      v26 = *(_QWORD *)(a2 + 456);
      *(_BYTE *)(a1 + 464) = *(_BYTE *)(a2 + 464);
      *(_QWORD *)(a1 + 456) = v26;
      *(_BYTE *)(a1 + 465) = *(_BYTE *)(a2 + 465);
      v27 = *(_QWORD *)(a2 + 472);
      *(_BYTE *)(a1 + 480) = *(_BYTE *)(a2 + 480);
      *(_QWORD *)(a1 + 472) = v27;
      *(_BYTE *)(a1 + 481) = *(_BYTE *)(a2 + 481);
      *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 496) = *(_BYTE *)(a2 + 496);
      *(_QWORD *)(a1 + 504) = *(_QWORD *)(a2 + 504);
      *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 520) = *(_BYTE *)(a2 + 520);
      *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
      *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 544) = *(_BYTE *)(a2 + 544);
      *(_QWORD *)(a1 + 552) = *(_QWORD *)(a2 + 552);
      *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 568) = *(_BYTE *)(a2 + 568);
      *(_QWORD *)(a1 + 576) = *(_QWORD *)(a2 + 576);
      *(_QWORD *)(a1 + 584) = *(_QWORD *)(a2 + 584);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 592) = *(_BYTE *)(a2 + 592);
      *(_QWORD *)(a1 + 600) = *(_QWORD *)(a2 + 600);
      *(_QWORD *)(a1 + 608) = *(_QWORD *)(a2 + 608);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 616) = *(_BYTE *)(a2 + 616);
      *(_QWORD *)(a1 + 624) = *(_QWORD *)(a2 + 624);
      *(_QWORD *)(a1 + 632) = *(_QWORD *)(a2 + 632);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 640) = *(_BYTE *)(a2 + 640);
      *(_QWORD *)(a1 + 648) = *(_QWORD *)(a2 + 648);
      *(_QWORD *)(a1 + 656) = *(_QWORD *)(a2 + 656);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 664) = *(_BYTE *)(a2 + 664);
      *(_QWORD *)(a1 + 672) = *(_QWORD *)(a2 + 672);
      *(_QWORD *)(a1 + 680) = *(_QWORD *)(a2 + 680);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 688) = *(_BYTE *)(a2 + 688);
      *(_QWORD *)(a1 + 696) = *(_QWORD *)(a2 + 696);
      *(_QWORD *)(a1 + 704) = *(_QWORD *)(a2 + 704);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 712) = *(_BYTE *)(a2 + 712);
      *(_QWORD *)(a1 + 720) = *(_QWORD *)(a2 + 720);
      *(_QWORD *)(a1 + 728) = *(_QWORD *)(a2 + 728);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 736) = *(_BYTE *)(a2 + 736);
      *(_QWORD *)(a1 + 744) = *(_QWORD *)(a2 + 744);
      *(_QWORD *)(a1 + 752) = *(_QWORD *)(a2 + 752);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 760) = *(_BYTE *)(a2 + 760);
      *(_QWORD *)(a1 + 768) = *(_QWORD *)(a2 + 768);
      *(_QWORD *)(a1 + 776) = *(_QWORD *)(a2 + 776);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 784) = *(_BYTE *)(a2 + 784);
      *(_BYTE *)(a1 + 792) = *(_BYTE *)(a2 + 792);
      *(_BYTE *)(a1 + 793) = *(_BYTE *)(a2 + 793);
      *(_BYTE *)(a1 + 794) = *(_BYTE *)(a2 + 794);
      *(_BYTE *)(a1 + 795) = *(_BYTE *)(a2 + 795);
      v28 = *(_QWORD *)(a2 + 800);
      *(_BYTE *)(a1 + 808) = *(_BYTE *)(a2 + 808);
      *(_QWORD *)(a1 + 800) = v28;
      *(_BYTE *)(a1 + 809) = *(_BYTE *)(a2 + 809);
      v29 = *(_QWORD *)(a2 + 816);
      *(_BYTE *)(a1 + 824) = *(_BYTE *)(a2 + 824);
      *(_QWORD *)(a1 + 816) = v29;
      *(_BYTE *)(a1 + 825) = *(_BYTE *)(a2 + 825);
      v30 = *(_QWORD *)(a2 + 832);
      *(_BYTE *)(a1 + 840) = *(_BYTE *)(a2 + 840);
      *(_QWORD *)(a1 + 832) = v30;
      *(_BYTE *)(a1 + 841) = *(_BYTE *)(a2 + 841);
      v31 = *(_QWORD *)(a2 + 848);
      *(_BYTE *)(a1 + 856) = *(_BYTE *)(a2 + 856);
      *(_QWORD *)(a1 + 848) = v31;
      *(_BYTE *)(a1 + 857) = *(_BYTE *)(a2 + 857);
      v32 = *(_QWORD *)(a2 + 864);
      *(_BYTE *)(a1 + 872) = *(_BYTE *)(a2 + 872);
      *(_QWORD *)(a1 + 864) = v32;
      *(_BYTE *)(a1 + 873) = *(_BYTE *)(a2 + 873);
      v33 = *(_QWORD *)(a2 + 880);
      *(_BYTE *)(a1 + 888) = *(_BYTE *)(a2 + 888);
      *(_QWORD *)(a1 + 880) = v33;
      *(_BYTE *)(a1 + 889) = *(_BYTE *)(a2 + 889);
      v34 = *(_QWORD *)(a2 + 896);
      *(_BYTE *)(a1 + 904) = *(_BYTE *)(a2 + 904);
      *(_QWORD *)(a1 + 896) = v34;
      *(_BYTE *)(a1 + 905) = *(_BYTE *)(a2 + 905);
      v35 = *(_QWORD *)(a2 + 912);
      *(_BYTE *)(a1 + 920) = *(_BYTE *)(a2 + 920);
      *(_QWORD *)(a1 + 912) = v35;
      *(_BYTE *)(a1 + 921) = *(_BYTE *)(a2 + 921);
      v36 = *(_QWORD *)(a2 + 928);
      *(_BYTE *)(a1 + 936) = *(_BYTE *)(a2 + 936);
      *(_QWORD *)(a1 + 928) = v36;
      *(_BYTE *)(a1 + 937) = *(_BYTE *)(a2 + 937);
      v37 = *(_QWORD *)(a2 + 944);
      *(_BYTE *)(a1 + 952) = *(_BYTE *)(a2 + 952);
      *(_QWORD *)(a1 + 944) = v37;
      *(_BYTE *)(a1 + 953) = *(_BYTE *)(a2 + 953);
      *(_QWORD *)(a1 + 960) = *(_QWORD *)(a2 + 960);
      *(_QWORD *)(a1 + 968) = *(_QWORD *)(a2 + 968);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 976) = *(_BYTE *)(a2 + 976);
      *(_QWORD *)(a1 + 984) = *(_QWORD *)(a2 + 984);
      *(_QWORD *)(a1 + 992) = *(_QWORD *)(a2 + 992);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 1000) = *(_BYTE *)(a2 + 1000);
      *(_QWORD *)(a1 + 1008) = *(_QWORD *)(a2 + 1008);
      *(_QWORD *)(a1 + 1016) = *(_QWORD *)(a2 + 1016);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 1024) = *(_BYTE *)(a2 + 1024);
      goto LABEL_8;
    }
    sub_20A494404(a1 + 8);
    goto LABEL_6;
  }
  if (v4 == 1)
  {
LABEL_6:
    memcpy((void *)(a1 + 8), (const void *)(a2 + 8), 0x3F9uLL);
    goto LABEL_8;
  }
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  v6 = *(_QWORD *)(a2 + 160);
  *(_WORD *)(a1 + 168) = *(_WORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = v6;
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  v7 = *(_QWORD *)(a2 + 200);
  *(_WORD *)(a1 + 208) = *(_WORD *)(a2 + 208);
  *(_QWORD *)(a1 + 200) = v7;
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_BYTE *)(a1 + 280) = *(_BYTE *)(a2 + 280);
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  *(_BYTE *)(a1 + 304) = *(_BYTE *)(a2 + 304);
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  *(_BYTE *)(a1 + 328) = *(_BYTE *)(a2 + 328);
  *(_WORD *)(a1 + 329) = *(_WORD *)v5;
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
  *(_BYTE *)(a1 + 352) = *(_BYTE *)(a2 + 352);
  *(_WORD *)(a1 + 353) = *(_WORD *)(a2 + 353);
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
  *(_BYTE *)(a1 + 376) = *(_BYTE *)(a2 + 376);
  *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
  *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
  *(_BYTE *)(a1 + 400) = *(_BYTE *)(a2 + 400);
  *(_WORD *)(a1 + 401) = *(_WORD *)(a2 + 401);
  v8 = *(_QWORD *)(a2 + 408);
  *(_WORD *)(a1 + 416) = *(_WORD *)(a2 + 416);
  *(_QWORD *)(a1 + 408) = v8;
  v9 = *(_QWORD *)(a2 + 424);
  *(_WORD *)(a1 + 432) = *(_WORD *)(a2 + 432);
  *(_QWORD *)(a1 + 424) = v9;
  v10 = *(_QWORD *)(a2 + 440);
  *(_WORD *)(a1 + 448) = *(_WORD *)(a2 + 448);
  *(_QWORD *)(a1 + 440) = v10;
  v11 = *(_QWORD *)(a2 + 456);
  *(_WORD *)(a1 + 464) = *(_WORD *)(a2 + 464);
  *(_QWORD *)(a1 + 456) = v11;
  v12 = *(_QWORD *)(a2 + 472);
  *(_WORD *)(a1 + 480) = *(_WORD *)(a2 + 480);
  *(_QWORD *)(a1 + 472) = v12;
  *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
  *(_BYTE *)(a1 + 496) = *(_BYTE *)(a2 + 496);
  *(_QWORD *)(a1 + 504) = *(_QWORD *)(a2 + 504);
  *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
  *(_BYTE *)(a1 + 520) = *(_BYTE *)(a2 + 520);
  *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
  *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
  *(_BYTE *)(a1 + 544) = *(_BYTE *)(a2 + 544);
  *(_QWORD *)(a1 + 552) = *(_QWORD *)(a2 + 552);
  *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
  *(_BYTE *)(a1 + 568) = *(_BYTE *)(a2 + 568);
  *(_QWORD *)(a1 + 576) = *(_QWORD *)(a2 + 576);
  *(_QWORD *)(a1 + 584) = *(_QWORD *)(a2 + 584);
  *(_BYTE *)(a1 + 592) = *(_BYTE *)(a2 + 592);
  *(_QWORD *)(a1 + 600) = *(_QWORD *)(a2 + 600);
  *(_QWORD *)(a1 + 608) = *(_QWORD *)(a2 + 608);
  *(_BYTE *)(a1 + 616) = *(_BYTE *)(a2 + 616);
  *(_QWORD *)(a1 + 624) = *(_QWORD *)(a2 + 624);
  *(_QWORD *)(a1 + 632) = *(_QWORD *)(a2 + 632);
  *(_BYTE *)(a1 + 640) = *(_BYTE *)(a2 + 640);
  *(_QWORD *)(a1 + 648) = *(_QWORD *)(a2 + 648);
  *(_QWORD *)(a1 + 656) = *(_QWORD *)(a2 + 656);
  *(_BYTE *)(a1 + 664) = *(_BYTE *)(a2 + 664);
  *(_QWORD *)(a1 + 672) = *(_QWORD *)(a2 + 672);
  *(_QWORD *)(a1 + 680) = *(_QWORD *)(a2 + 680);
  *(_BYTE *)(a1 + 688) = *(_BYTE *)(a2 + 688);
  *(_QWORD *)(a1 + 696) = *(_QWORD *)(a2 + 696);
  *(_QWORD *)(a1 + 704) = *(_QWORD *)(a2 + 704);
  *(_BYTE *)(a1 + 712) = *(_BYTE *)(a2 + 712);
  *(_QWORD *)(a1 + 720) = *(_QWORD *)(a2 + 720);
  *(_QWORD *)(a1 + 728) = *(_QWORD *)(a2 + 728);
  *(_BYTE *)(a1 + 736) = *(_BYTE *)(a2 + 736);
  *(_QWORD *)(a1 + 744) = *(_QWORD *)(a2 + 744);
  *(_QWORD *)(a1 + 752) = *(_QWORD *)(a2 + 752);
  *(_BYTE *)(a1 + 760) = *(_BYTE *)(a2 + 760);
  *(_QWORD *)(a1 + 768) = *(_QWORD *)(a2 + 768);
  *(_QWORD *)(a1 + 776) = *(_QWORD *)(a2 + 776);
  *(_BYTE *)(a1 + 784) = *(_BYTE *)(a2 + 784);
  v13 = *(_OWORD *)(a2 + 792);
  v14 = *(_OWORD *)(a2 + 808);
  *(_WORD *)(a1 + 824) = *(_WORD *)(a2 + 824);
  *(_OWORD *)(a1 + 792) = v13;
  *(_OWORD *)(a1 + 808) = v14;
  v15 = *(_OWORD *)(a2 + 938);
  v17 = *(_OWORD *)(a2 + 912);
  v16 = *(_OWORD *)(a2 + 928);
  *(_OWORD *)(a1 + 896) = *(_OWORD *)(a2 + 896);
  *(_OWORD *)(a1 + 938) = v15;
  *(_OWORD *)(a1 + 928) = v16;
  *(_OWORD *)(a1 + 912) = v17;
  v18 = *(_OWORD *)(a2 + 832);
  v19 = *(_OWORD *)(a2 + 848);
  v20 = *(_OWORD *)(a2 + 864);
  *(_OWORD *)(a1 + 880) = *(_OWORD *)(a2 + 880);
  *(_OWORD *)(a1 + 864) = v20;
  *(_OWORD *)(a1 + 848) = v19;
  *(_OWORD *)(a1 + 832) = v18;
  *(_QWORD *)(a1 + 960) = *(_QWORD *)(a2 + 960);
  *(_QWORD *)(a1 + 968) = *(_QWORD *)(a2 + 968);
  *(_BYTE *)(a1 + 976) = *(_BYTE *)(a2 + 976);
  *(_QWORD *)(a1 + 984) = *(_QWORD *)(a2 + 984);
  *(_QWORD *)(a1 + 992) = *(_QWORD *)(a2 + 992);
  *(_BYTE *)(a1 + 1000) = *(_BYTE *)(a2 + 1000);
  *(_QWORD *)(a1 + 1008) = *(_QWORD *)(a2 + 1008);
  *(_QWORD *)(a1 + 1016) = *(_QWORD *)(a2 + 1016);
  *(_BYTE *)(a1 + 1024) = *(_BYTE *)(a2 + 1024);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = a2 + 329;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_8:
  *(_BYTE *)(a1 + 1025) = *(_BYTE *)(v5 + 696);
  *(_BYTE *)(a1 + 1026) = *(_BYTE *)(v5 + 697);
  return a1;
}

void *__swift_memcpy1027_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x403uLL);
}

uint64_t assignWithTake for OdiAssessmentsParameters(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)(a1 + 8) != 1)
  {
    if (v4 != 1)
    {
      *(_QWORD *)(a1 + 8) = v4;
      swift_bridgeObjectRelease();
      v5 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = v5;
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
      v6 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = v6;
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
      v7 = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = v7;
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
      v8 = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = v8;
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
      v9 = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = v9;
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
      v10 = *(_QWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 144) = v10;
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      *(_WORD *)(a1 + 168) = *(_WORD *)(a2 + 168);
      v11 = *(_QWORD *)(a2 + 184);
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      *(_QWORD *)(a1 + 184) = v11;
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
      *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
      *(_WORD *)(a1 + 208) = *(_WORD *)(a2 + 208);
      v12 = *(_QWORD *)(a2 + 224);
      *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
      *(_QWORD *)(a1 + 224) = v12;
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
      v13 = *(_QWORD *)(a2 + 248);
      *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
      *(_QWORD *)(a1 + 248) = v13;
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
      v14 = *(_QWORD *)(a2 + 272);
      *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
      *(_QWORD *)(a1 + 272) = v14;
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 280) = *(_BYTE *)(a2 + 280);
      v15 = *(_QWORD *)(a2 + 296);
      *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
      *(_QWORD *)(a1 + 296) = v15;
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 304) = *(_BYTE *)(a2 + 304);
      v16 = *(_QWORD *)(a2 + 320);
      *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
      *(_QWORD *)(a1 + 320) = v16;
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 328) = *(_BYTE *)(a2 + 328);
      *(_WORD *)(a1 + 329) = *(_WORD *)(a2 + 329);
      v17 = *(_QWORD *)(a2 + 344);
      *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
      *(_QWORD *)(a1 + 344) = v17;
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 352) = *(_BYTE *)(a2 + 352);
      *(_WORD *)(a1 + 353) = *(_WORD *)(a2 + 353);
      v18 = *(_QWORD *)(a2 + 368);
      *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
      *(_QWORD *)(a1 + 368) = v18;
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 376) = *(_BYTE *)(a2 + 376);
      v19 = *(_QWORD *)(a2 + 392);
      *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
      *(_QWORD *)(a1 + 392) = v19;
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 400) = *(_BYTE *)(a2 + 400);
      *(_WORD *)(a1 + 401) = *(_WORD *)(a2 + 401);
      *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
      *(_WORD *)(a1 + 416) = *(_WORD *)(a2 + 416);
      *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
      *(_WORD *)(a1 + 432) = *(_WORD *)(a2 + 432);
      *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
      *(_WORD *)(a1 + 448) = *(_WORD *)(a2 + 448);
      v20 = *(_QWORD *)(a2 + 456);
      *(_BYTE *)(a1 + 464) = *(_BYTE *)(a2 + 464);
      *(_QWORD *)(a1 + 456) = v20;
      *(_BYTE *)(a1 + 465) = *(_BYTE *)(a2 + 465);
      *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
      *(_WORD *)(a1 + 480) = *(_WORD *)(a2 + 480);
      *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 496) = *(_BYTE *)(a2 + 496);
      v21 = *(_QWORD *)(a2 + 512);
      *(_QWORD *)(a1 + 504) = *(_QWORD *)(a2 + 504);
      *(_QWORD *)(a1 + 512) = v21;
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 520) = *(_BYTE *)(a2 + 520);
      *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
      *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 544) = *(_BYTE *)(a2 + 544);
      *(_QWORD *)(a1 + 552) = *(_QWORD *)(a2 + 552);
      *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 568) = *(_BYTE *)(a2 + 568);
      *(_QWORD *)(a1 + 576) = *(_QWORD *)(a2 + 576);
      *(_QWORD *)(a1 + 584) = *(_QWORD *)(a2 + 584);
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 592) = *(_BYTE *)(a2 + 592);
      *(_QWORD *)(a1 + 600) = *(_QWORD *)(a2 + 600);
      *(_QWORD *)(a1 + 608) = *(_QWORD *)(a2 + 608);
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 616) = *(_BYTE *)(a2 + 616);
      *(_QWORD *)(a1 + 624) = *(_QWORD *)(a2 + 624);
      *(_QWORD *)(a1 + 632) = *(_QWORD *)(a2 + 632);
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 640) = *(_BYTE *)(a2 + 640);
      *(_QWORD *)(a1 + 648) = *(_QWORD *)(a2 + 648);
      *(_QWORD *)(a1 + 656) = *(_QWORD *)(a2 + 656);
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 664) = *(_BYTE *)(a2 + 664);
      *(_QWORD *)(a1 + 672) = *(_QWORD *)(a2 + 672);
      *(_QWORD *)(a1 + 680) = *(_QWORD *)(a2 + 680);
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 688) = *(_BYTE *)(a2 + 688);
      *(_QWORD *)(a1 + 696) = *(_QWORD *)(a2 + 696);
      *(_QWORD *)(a1 + 704) = *(_QWORD *)(a2 + 704);
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 712) = *(_BYTE *)(a2 + 712);
      *(_QWORD *)(a1 + 720) = *(_QWORD *)(a2 + 720);
      *(_QWORD *)(a1 + 728) = *(_QWORD *)(a2 + 728);
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 736) = *(_BYTE *)(a2 + 736);
      *(_QWORD *)(a1 + 744) = *(_QWORD *)(a2 + 744);
      *(_QWORD *)(a1 + 752) = *(_QWORD *)(a2 + 752);
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 760) = *(_BYTE *)(a2 + 760);
      *(_QWORD *)(a1 + 768) = *(_QWORD *)(a2 + 768);
      *(_QWORD *)(a1 + 776) = *(_QWORD *)(a2 + 776);
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 784) = *(_BYTE *)(a2 + 784);
      *(_DWORD *)(a1 + 792) = *(_DWORD *)(a2 + 792);
      *(_QWORD *)(a1 + 800) = *(_QWORD *)(a2 + 800);
      *(_WORD *)(a1 + 808) = *(_WORD *)(a2 + 808);
      *(_QWORD *)(a1 + 816) = *(_QWORD *)(a2 + 816);
      *(_WORD *)(a1 + 824) = *(_WORD *)(a2 + 824);
      *(_QWORD *)(a1 + 832) = *(_QWORD *)(a2 + 832);
      *(_WORD *)(a1 + 840) = *(_WORD *)(a2 + 840);
      *(_BYTE *)(a1 + 856) = *(_BYTE *)(a2 + 856);
      *(_QWORD *)(a1 + 848) = *(_QWORD *)(a2 + 848);
      *(_BYTE *)(a1 + 857) = *(_BYTE *)(a2 + 857);
      *(_QWORD *)(a1 + 864) = *(_QWORD *)(a2 + 864);
      *(_WORD *)(a1 + 872) = *(_WORD *)(a2 + 872);
      *(_QWORD *)(a1 + 880) = *(_QWORD *)(a2 + 880);
      *(_WORD *)(a1 + 888) = *(_WORD *)(a2 + 888);
      *(_QWORD *)(a1 + 896) = *(_QWORD *)(a2 + 896);
      *(_WORD *)(a1 + 904) = *(_WORD *)(a2 + 904);
      *(_QWORD *)(a1 + 912) = *(_QWORD *)(a2 + 912);
      *(_BYTE *)(a1 + 920) = *(_BYTE *)(a2 + 920);
      *(_BYTE *)(a1 + 921) = *(_BYTE *)(a2 + 921);
      *(_QWORD *)(a1 + 928) = *(_QWORD *)(a2 + 928);
      *(_WORD *)(a1 + 936) = *(_WORD *)(a2 + 936);
      *(_QWORD *)(a1 + 944) = *(_QWORD *)(a2 + 944);
      *(_WORD *)(a1 + 952) = *(_WORD *)(a2 + 952);
      *(_QWORD *)(a1 + 960) = *(_QWORD *)(a2 + 960);
      *(_QWORD *)(a1 + 968) = *(_QWORD *)(a2 + 968);
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 976) = *(_BYTE *)(a2 + 976);
      *(_QWORD *)(a1 + 984) = *(_QWORD *)(a2 + 984);
      *(_QWORD *)(a1 + 992) = *(_QWORD *)(a2 + 992);
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 1000) = *(_BYTE *)(a2 + 1000);
      *(_QWORD *)(a1 + 1008) = *(_QWORD *)(a2 + 1008);
      *(_QWORD *)(a1 + 1016) = *(_QWORD *)(a2 + 1016);
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 1024) = *(_BYTE *)(a2 + 1024);
      goto LABEL_6;
    }
    sub_20A494404(a1 + 8);
  }
  memcpy((void *)(a1 + 8), (const void *)(a2 + 8), 0x3F9uLL);
LABEL_6:
  *(_BYTE *)(a1 + 1025) = *(_BYTE *)(a2 + 1025);
  *(_BYTE *)(a1 + 1026) = *(_BYTE *)(a2 + 1026);
  return a1;
}

uint64_t getEnumTagSinglePayload for OdiAssessmentsParameters(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 1027))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OdiAssessmentsParameters(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 1016) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 1026) = 0;
    *(_WORD *)(result + 1024) = 0;
    *(_OWORD *)(result + 1000) = 0u;
    *(_OWORD *)(result + 984) = 0u;
    *(_OWORD *)(result + 968) = 0u;
    *(_OWORD *)(result + 952) = 0u;
    *(_OWORD *)(result + 936) = 0u;
    *(_OWORD *)(result + 920) = 0u;
    *(_OWORD *)(result + 904) = 0u;
    *(_OWORD *)(result + 888) = 0u;
    *(_OWORD *)(result + 872) = 0u;
    *(_OWORD *)(result + 856) = 0u;
    *(_OWORD *)(result + 840) = 0u;
    *(_OWORD *)(result + 824) = 0u;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 1027) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 1027) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for OdiAssessmentsParameters()
{
  return &type metadata for OdiAssessmentsParameters;
}

unint64_t sub_20A497EB0()
{
  unint64_t result;

  result = qword_2545FA298;
  if (!qword_2545FA298)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5BFECC, &type metadata for OdiAssessmentsParameters);
    atomic_store(result, &qword_2545FA298);
  }
  return result;
}

uint64_t sub_20A497EF4(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 40))(a2, a1);
  return a2;
}

uint64_t sub_20A497F30(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_20A498124(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x20BD26CEC](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A498164()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 56) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_20A4982B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  _QWORD *v5;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_20A4597C0;
  memcpy(v4 + 2, (const void *)(v1 + 40), 0x41BuLL);
  v5 = (_QWORD *)swift_task_alloc();
  v4[134] = v5;
  *v5 = v4;
  v5[1] = sub_20A48E9B8;
  return sub_20A48D4CC(a1, (uint64_t)(v4 + 2));
}

uint64_t sub_20A498350(uint64_t a1)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_20A47C178(v3);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_20A498734(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A498778()
{
  return objectdestroy_16Tm();
}

uint64_t sub_20A498780(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_20A4987A8()
{
  return swift_deallocObject();
}

uint64_t sub_20A4987B8()
{
  return swift_deallocObject();
}

uint64_t sub_20A4987C8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_20A498844(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_20A49891C(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_20A498944()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_20A498968()
{
  return objectdestroy_16Tm();
}

uint64_t sub_20A498970()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_20A49899C(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_20A4989D0()
{
  return objectdestroy_16Tm();
}

uint64_t sub_20A4989D8()
{
  return objectdestroy_16Tm();
}

uint64_t objectdestroy_16Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_20A498A20(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_20A498A68()
{
  return swift_release();
}

uint64_t sub_20A498A74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 8) + *(_QWORD *)(a2 + 8));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_20A459310;
  return v7(a1, a2);
}

uint64_t sub_20A498AE0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 128) = v0;
  return swift_task_switch();
}

uint64_t sub_20A498AF8()
{
  _QWORD *v0;
  id v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4FC68]), sel_initWithQueue_, *(_QWORD *)(v0[16] + 16));
  v0[17] = v1;
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_20A498BC0;
  v2 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v3 = v0 + 10;
  v3[1] = 0x40000000;
  v3[2] = sub_20A498E4C;
  v3[3] = &block_descriptor_6;
  v3[4] = v2;
  objc_msgSend(v1, sel_generatePhoneAuthenticationSignatureOverData_withCompletion_, 0, v3);
  return swift_continuation_await();
}

uint64_t sub_20A498BC0()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 144) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_20A498C20()
{
  uint64_t v0;
  void *v1;
  id v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;

  v1 = *(void **)(v0 + 120);
  v2 = objc_msgSend(v1, sel_authenticationCertificateSignatures);
  sub_20A459574(0, &qword_2545FA308);
  v3 = sub_20A5B8AA4();

  if (!(v3 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v4)
      goto LABEL_3;
LABEL_13:
    v18 = *(void **)(v0 + 136);

    swift_bridgeObjectRelease();
    v7 = MEMORY[0x24BEE4AF8];
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v7);
  }
  swift_bridgeObjectRetain();
  v4 = sub_20A5B8FCC();
  swift_bridgeObjectRelease();
  if (!v4)
    goto LABEL_13;
LABEL_3:
  v21 = MEMORY[0x24BEE4AF8];
  result = sub_20A457724(0, v4 & ~(v4 >> 63), 0);
  if ((v4 & 0x8000000000000000) == 0)
  {
    v19 = v1;
    v20 = v0;
    v6 = 0;
    v7 = v21;
    do
    {
      if ((v3 & 0xC000000000000001) != 0)
        v8 = (id)MEMORY[0x20BD25F48](v6, v3);
      else
        v8 = *(id *)(v3 + 8 * v6 + 32);
      v9 = v8;
      v10 = objc_msgSend(v8, sel_serverVerifiableEncoding, v19, v20);
      v11 = sub_20A5B8900();
      v13 = v12;

      v15 = *(_QWORD *)(v21 + 16);
      v14 = *(_QWORD *)(v21 + 24);
      if (v15 >= v14 >> 1)
        sub_20A457724(v14 > 1, v15 + 1, 1);
      ++v6;
      *(_QWORD *)(v21 + 16) = v15 + 1;
      v16 = v21 + 16 * v15;
      *(_QWORD *)(v16 + 32) = v11;
      *(_QWORD *)(v16 + 40) = v13;
    }
    while (v4 != v6);
    v0 = v20;
    v17 = *(void **)(v20 + 136);

    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v7);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A498E0C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 136);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A498E4C(uint64_t result, void *a2, void *a3)
{
  _QWORD *v4;
  id v5;
  id v6;

  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52D0);
    swift_allocError();
    *v4 = a3;
    v5 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else if (a2)
  {
    **(_QWORD **)(*(_QWORD *)(*(_QWORD *)(result + 32) + 64) + 40) = a2;
    v6 = a2;
    return swift_continuation_throwingResume();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for PhoneCertificateVendorWrapper()
{
  return objc_opt_self();
}

uint64_t sub_20A498EF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];

  v1 = sub_20A5B8C9C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1, v3);
  v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_20A5B8C90();
  MEMORY[0x24BDAC7A8](v6, v7);
  v8 = sub_20A5B8840();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_20A459574(0, qword_253EB51B0);
  sub_20A5B8834();
  v11[1] = MEMORY[0x24BEE4AF8];
  sub_20A499F34();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5150);
  sub_20A499F7C();
  sub_20A5B8DB0();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v5, *MEMORY[0x24BEE5750], v1);
  *(_QWORD *)(v0 + 16) = sub_20A5B8CC0();
  return v0;
}

uint64_t sub_20A49909C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *v0;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_20A4990FC;
  v3[16] = v2;
  return swift_task_switch();
}

uint64_t sub_20A4990FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t sub_20A499150()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_20A499168()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v7)(uint64_t);
  uint64_t (*v8)(uint64_t, uint64_t);

  v1 = (_QWORD *)v0[2];
  if (v1[19])
  {
    v7 = (uint64_t (*)(uint64_t))v0[1];
    v2 = swift_bridgeObjectRetain();
    return v7(v2);
  }
  else
  {
    v4 = v1[17];
    v5 = v1[18];
    __swift_project_boxed_opaque_existential_1(v1 + 14, v4);
    v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v5 + 8) + *(_QWORD *)(v5 + 8));
    v6 = (_QWORD *)swift_task_alloc();
    v0[3] = v6;
    *v6 = v0;
    v6[1] = sub_20A499214;
    return v8(v4, v5);
  }
}

uint64_t sub_20A499214(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 32) = a1;
  *(_QWORD *)(v3 + 40) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A499280()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  _BYTE *v7;

  v1 = *(_QWORD *)(v0 + 32);
  if (*(_QWORD *)(v1 + 16))
  {
    *(_QWORD *)(*(_QWORD *)(v0 + 16) + 152) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 32));
  }
  else
  {
    swift_bridgeObjectRelease();
    if (qword_253EB5048 != -1)
      swift_once();
    v3 = sub_20A5B8804();
    __swift_project_value_buffer(v3, (uint64_t)qword_253EBC888);
    v4 = sub_20A5B87EC();
    v5 = sub_20A5B8C60();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_20A443000, v4, v5, "No PAC to process", v6, 2u);
      MEMORY[0x20BD26DB8](v6, -1, -1);
    }

    sub_20A499EAC();
    swift_allocError();
    *v7 = 4;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_20A4993D4()
{
  uint64_t v0;
  void *v1;
  void *v2;
  char v3;
  _BYTE *v4;

  v1 = *(void **)(v0 + 40);
  v2 = (void *)sub_20A5B8414();
  v3 = sub_20A499504(v2);
  sub_20A499EAC();
  swift_allocError();
  *v4 = v3;
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A499458()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for PhoneAuthenticationCertificateProvider()
{
  return objc_opt_self();
}

uint64_t sub_20A4994A4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *v0;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_20A49A16C;
  v3[2] = v2;
  return swift_task_switch();
}

uint64_t sub_20A499504(void *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;
  uint64_t v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  id v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  void *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  char v34;
  char v35;
  uint64_t v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  NSObject *v45;
  os_log_type_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  id v52;
  unint64_t v53;
  uint64_t v54;
  int v55;
  id v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v62;
  int v63;
  char v64;
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  id v68;

  v2 = objc_msgSend(a1, sel_domain);
  v3 = sub_20A5B8900();
  v5 = v4;

  if (v3 == sub_20A5B8900() && v5 == v6)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v8 = sub_20A5B91AC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0)
    {
      if (qword_253EB5048 != -1)
        swift_once();
      v9 = sub_20A5B8804();
      __swift_project_value_buffer(v9, (uint64_t)qword_253EBC888);
      v10 = a1;
      v11 = sub_20A5B87EC();
      v12 = sub_20A5B8C60();
      if (os_log_type_enabled(v11, v12))
      {
        v13 = swift_slowAlloc();
        v14 = swift_slowAlloc();
        *(_QWORD *)&v66 = v14;
        *(_DWORD *)v13 = 136315394;
        v15 = objc_msgSend(v10, sel_domain);
        v16 = sub_20A5B8900();
        v18 = v17;

        v68 = (id)sub_20A503EE0(v16, v18, (uint64_t *)&v66);
        sub_20A5B8D50();

        swift_bridgeObjectRelease();
        *(_WORD *)(v13 + 12) = 2048;
        v19 = objc_msgSend(v10, sel_code);

        v68 = v19;
        sub_20A5B8D50();

        _os_log_impl(&dword_20A443000, v11, v12, "Unexpected PAC domain: %s, with error code: %ld", (uint8_t *)v13, 0x16u);
        v20 = 1;
        swift_arrayDestroy();
        MEMORY[0x20BD26DB8](v14, -1, -1);
        MEMORY[0x20BD26DB8](v13, -1, -1);

      }
      else
      {

        return 1;
      }
      return v20;
    }
  }
  v21 = objc_msgSend(a1, sel_userInfo);
  v22 = sub_20A5B8888();

  v23 = sub_20A5B8900();
  if (!*(_QWORD *)(v22 + 16) || (v25 = sub_20A47094C(v23, v24), (v26 & 1) == 0))
  {
    v66 = 0u;
    v67 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  sub_20A44FD78(*(_QWORD *)(v22 + 56) + 32 * v25, (uint64_t)&v66);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v67 + 1))
  {
LABEL_22:
    sub_20A44FDFC((uint64_t)&v66);
    goto LABEL_23;
  }
  sub_20A459574(0, (unint64_t *)&qword_253EB4870);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_23:
    v28 = (uint64_t)objc_msgSend(a1, sel_code);
    v27 = 0;
    goto LABEL_24;
  }
  v27 = v68;
  v28 = (uint64_t)objc_msgSend(a1, sel_code);
  if (v27)
  {
    v29 = objc_msgSend(v27, sel_domain);
    v30 = sub_20A5B8900();
    v32 = v31;

    v20 = (uint64_t)objc_msgSend(v27, sel_code);
    v33 = 0;
    if (v28 > -1101)
      goto LABEL_17;
    goto LABEL_25;
  }
LABEL_24:
  v20 = 0;
  v30 = 0;
  v32 = 0;
  v33 = 1;
  if (v28 > -1101)
  {
LABEL_17:
    if (v28 == -1100)
    {

      swift_bridgeObjectRelease();
      return 11;
    }
    if (v28 != -1000)
    {
      if (v28 == -900)
      {

        swift_bridgeObjectRelease();
        return 10;
      }
      goto LABEL_45;
    }
    if (!v32)
    {
      sub_20A5B8900();
      swift_bridgeObjectRelease();

      return 2;
    }
    if (v30 == 0xD00000000000001FLL && v32 == 0x800000020A5DE160)
    {
      if (v20 == -1000)
        v34 = v33;
      else
        v34 = 1;
      if ((v34 & 1) != 0)
      {
        if (v20 == -5000)
          v35 = v33;
        else
          v35 = 1;
        if ((v35 & 1) != 0)
        {
LABEL_67:
          if (sub_20A5B8900() == v30 && v32 == v62)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            if (v20 == 3)
              v63 = v33;
            else
              v63 = 1;
            if (v63 != 1)
              return 3;
          }
          else
          {
            v64 = sub_20A5B91AC();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            if ((v64 & 1) != 0 && v33 != 1 && v20 == 3)
              return v20;
          }
          return 2;
        }
LABEL_66:

        swift_bridgeObjectRelease();
        return 6;
      }
    }
    else
    {
      v55 = v33 ^ 1;
      if ((sub_20A5B91AC() & 1) == 0 || !v55 || v20 != -1000)
      {
        if ((sub_20A5B91AC() & v55) != 1 || v20 != -5000)
          goto LABEL_67;
        goto LABEL_66;
      }
    }

    swift_bridgeObjectRelease();
    return 5;
  }
LABEL_25:
  switch(v28)
  {
    case -4000:

      swift_bridgeObjectRelease();
      return 7;
    case -3000:

      swift_bridgeObjectRelease();
      return 8;
    case -2000:

      swift_bridgeObjectRelease();
      return 9;
  }
LABEL_45:
  swift_bridgeObjectRelease();
  if (qword_253EB5048 != -1)
    swift_once();
  v36 = sub_20A5B8804();
  __swift_project_value_buffer(v36, (uint64_t)qword_253EBC888);
  v37 = a1;
  v38 = v27;
  v39 = v37;
  v40 = v38;
  v41 = v39;
  v42 = v40;
  v43 = v41;
  v44 = v42;
  v45 = sub_20A5B87EC();
  v46 = sub_20A5B8C60();
  if (os_log_type_enabled(v45, v46))
  {
    v47 = swift_slowAlloc();
    v65 = swift_slowAlloc();
    *(_QWORD *)&v66 = v65;
    *(_DWORD *)v47 = 136315906;
    v48 = objc_msgSend(v43, sel_domain);
    v49 = sub_20A5B8900();
    v51 = v50;

    v68 = (id)sub_20A503EE0(v49, v51, (uint64_t *)&v66);
    sub_20A5B8D50();

    swift_bridgeObjectRelease();
    *(_WORD *)(v47 + 12) = 2048;
    v52 = objc_msgSend(v43, sel_code);

    v68 = v52;
    sub_20A5B8D50();

    *(_WORD *)(v47 + 22) = 2080;
    if ((v33 & 1) != 0)
    {
      v53 = 0xE300000000000000;
      v54 = 7104878;
    }
    else
    {
      v56 = objc_msgSend(v44, sel_domain);
      v54 = sub_20A5B8900();
      v53 = v57;

    }
    v68 = (id)sub_20A503EE0(v54, v53, (uint64_t *)&v66);
    sub_20A5B8D50();

    swift_bridgeObjectRelease();
    *(_WORD *)(v47 + 32) = 2080;
    if ((v33 & 1) != 0)
    {
      v58 = 0xE300000000000000;
      v59 = 7104878;
    }
    else
    {
      v68 = objc_msgSend(v44, sel_code);
      sub_20A499EF0();
      v59 = sub_20A5B8D98();
      v58 = v60;
    }
    v68 = (id)sub_20A503EE0(v59, v58, (uint64_t *)&v66);
    sub_20A5B8D50();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_20A443000, v45, v46, "Unexpected PAC domain: %s, with error code: %ld, and underlying error domain: %s with underlying error code: %s", (uint8_t *)v47, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x20BD26DB8](v65, -1, -1);
    MEMORY[0x20BD26DB8](v47, -1, -1);

  }
  else
  {

  }
  return 0;
}

unint64_t sub_20A499EAC()
{
  unint64_t result;

  result = qword_2545FA310;
  if (!qword_2545FA310)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C00E4, &type metadata for PhoneAuthenticationError);
    atomic_store(result, (unint64_t *)&qword_2545FA310);
  }
  return result;
}

unint64_t sub_20A499EF0()
{
  unint64_t result;

  result = qword_253EB6278;
  if (!qword_253EB6278)
  {
    result = MEMORY[0x20BD26CEC](MEMORY[0x24BEE17B0], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_253EB6278);
  }
  return result;
}

unint64_t sub_20A499F34()
{
  unint64_t result;
  uint64_t v1;

  result = qword_253EB51A8;
  if (!qword_253EB51A8)
  {
    v1 = sub_20A5B8C90();
    result = MEMORY[0x20BD26CEC](MEMORY[0x24BEE5698], v1);
    atomic_store(result, (unint64_t *)&qword_253EB51A8);
  }
  return result;
}

unint64_t sub_20A499F7C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_253EB5158;
  if (!qword_253EB5158)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253EB5150);
    result = MEMORY[0x20BD26CEC](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_253EB5158);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PhoneAuthenticationError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF5)
    goto LABEL_17;
  if (a2 + 11 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 11) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 11;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 11;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 11;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xC;
  v8 = v6 - 12;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PhoneAuthenticationError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_20A49A0A4 + 4 * byte_20A5BFF75[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_20A49A0D8 + 4 * byte_20A5BFF70[v4]))();
}

uint64_t sub_20A49A0D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A49A0E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A49A0E8);
  return result;
}

uint64_t sub_20A49A0F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A49A0FCLL);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_20A49A100(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A49A108(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PhoneAuthenticationError()
{
  return &type metadata for PhoneAuthenticationError;
}

unint64_t sub_20A49A128()
{
  unint64_t result;

  result = qword_2545FA318;
  if (!qword_2545FA318)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C00BC, &type metadata for PhoneAuthenticationError);
    atomic_store(result, (unint64_t *)&qword_2545FA318);
  }
  return result;
}

uint64_t sub_20A49A170(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_20A49A188(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_20A49A1A0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_20A49A1B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t sub_20A49A1D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t sub_20A49A1E8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t sub_20A49A1F0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t sub_20A49A208(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t sub_20A49A210(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 72) + *(_QWORD *)(a2 + 72));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_20A48AB6C;
  return v7(a1, a2);
}

uint64_t sub_20A49A27C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t sub_20A49A284(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_20A49A2C0
                                                            + 4 * asc_20A5C0150[a1]))(0x776F6C666B726F77, 0xEB0000000064695FLL);
}

unint64_t sub_20A49A2C0()
{
  return 0xD000000000000010;
}

uint64_t sub_20A49A348(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_20A49A384 + 4 * byte_20A5C0156[a1]))(0x776F6C666B726F77, 0xEB0000000064695FLL);
}

unint64_t sub_20A49A384()
{
  return 0xD000000000000010;
}

uint64_t sub_20A49A40C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_20A49A43C + 4 * byte_20A5C015C[*v0]))(0x656D697473, 0xE500000000000000);
}

uint64_t sub_20A49A43C()
{
  return 1684955506;
}

uint64_t sub_20A49A44C()
{
  return 0x656D697464;
}

uint64_t sub_20A49A45C()
{
  return 0x6E6F6973726576;
}

uint64_t sub_20A49A474@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A49C60C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A49A498()
{
  sub_20A49CD0C();
  return sub_20A5B9314();
}

uint64_t sub_20A49A4C0()
{
  sub_20A49CD0C();
  return sub_20A5B9320();
}

void sub_20A49A4E8(char *a1)
{
  sub_20A4EA1BC(*a1);
}

void sub_20A49A4F4()
{
  char *v0;

  sub_20A517734(*v0);
}

void sub_20A49A4FC(uint64_t a1)
{
  char *v1;

  sub_20A517E80(a1, *v1);
}

void sub_20A49A504(uint64_t a1)
{
  char *v1;

  sub_20A5182F0(a1, *v1);
}

uint64_t sub_20A49A50C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_20A49C798();
  *a1 = result;
  return result;
}

uint64_t sub_20A49A538@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_20A49A284(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_20A49A560()
{
  unsigned __int8 *v0;

  return sub_20A49A348(*v0);
}

uint64_t sub_20A49A568@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_20A49C798();
  *a1 = result;
  return result;
}

void sub_20A49A58C(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_20A49A598()
{
  sub_20A49D050();
  return sub_20A5B9314();
}

uint64_t sub_20A49A5C0()
{
  sub_20A49D050();
  return sub_20A5B9320();
}

uint64_t sub_20A49A5E8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA338);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A49CD0C();
  sub_20A5B92FC();
  v9[15] = 0;
  sub_20A5B9110();
  if (!v1)
  {
    v9[14] = 1;
    sub_20A5B9110();
    v9[13] = 2;
    sub_20A5B9110();
    v9[12] = 3;
    sub_20A5B9110();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_20A49A74C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE v11[16];
  char v12[8];
  _BYTE v13[8];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA358);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = &v11[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A49D050();
  sub_20A5B92FC();
  v12[0] = 0;
  sub_20A5B9110();
  if (!v2)
  {
    v12[0] = 1;
    sub_20A5B911C();
    v12[0] = 2;
    sub_20A5B90F8();
    sub_20A459C88(v3 + 40, (uint64_t)v13, &qword_2545FA360);
    sub_20A459C88((uint64_t)v13, (uint64_t)v12, &qword_2545FA360);
    v11[15] = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_253EB46D0);
    sub_20A49D094(&qword_2545FA368, (uint64_t)&protocol conformance descriptor for EncryptedDataContainer<A>);
    sub_20A5B9104();
    v12[0] = 4;
    sub_20A5B9134();
    v12[0] = 5;
    sub_20A5B90D4();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_20A49A958(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE v11[72];
  _BYTE v12[40];
  _BYTE v13[72];
  _BYTE v14[72];
  char v15;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA398);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = &v11[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A49D768();
  sub_20A5B92FC();
  sub_20A459C88(v3, (uint64_t)v14, &qword_2545FA3A0);
  sub_20A459C88((uint64_t)v14, (uint64_t)v11, &qword_2545FA3A0);
  v15 = 0;
  sub_20A49DAB0();
  sub_20A5B9104();
  if (!v2)
  {
    v11[0] = 1;
    sub_20A5B90D4();
    v11[0] = 2;
    sub_20A5B90D4();
    sub_20A459C88(v3 + 96, (uint64_t)v13, &qword_2545FA3B0);
    sub_20A459C88((uint64_t)v13, (uint64_t)v11, &qword_2545FA3B0);
    v15 = 3;
    sub_20A49DAF4();
    sub_20A5B9104();
    sub_20A459C88(v3 + 168, (uint64_t)v12, &qword_2545FA3C0);
    sub_20A459C88((uint64_t)v12, (uint64_t)v11, &qword_2545FA3C0);
    v15 = 4;
    sub_20A49DB38();
    sub_20A5B9104();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_20A49AB98()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_20A49ABC4 + 4 * byte_20A5C0160[*v0]))(0x7364656573, 0xE500000000000000);
}

uint64_t sub_20A49ABC4()
{
  return 0x49656C69666F7270;
}

uint64_t sub_20A49ABE0()
{
  return 0x656D737365737361;
}

uint64_t sub_20A49ABFC()
{
  return 0x6E6F697469646461;
}

uint64_t sub_20A49AC20()
{
  return 0x666E49726F727265;
}

uint64_t sub_20A49AC44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A49C7E0(a1, a2);
  *a3 = result;
  return result;
}

void sub_20A49AC68(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_20A49AC74()
{
  sub_20A49D768();
  return sub_20A5B9314();
}

uint64_t sub_20A49AC9C()
{
  sub_20A49D768();
  return sub_20A5B9320();
}

double sub_20A49ACC4@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[2];
  __int128 v8;
  __int128 v9;

  sub_20A49CA34(a1, (uint64_t *)v7);
  if (!v2)
  {
    v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    result = *(double *)&v8;
    v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

uint64_t sub_20A49AD04(_QWORD *a1)
{
  return sub_20A49A5E8(a1);
}

__n128 sub_20A49AD18@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v5;
  _OWORD v6[4];
  uint64_t v7;

  sub_20A49CD50(a1, (uint64_t)v6);
  if (!v2)
  {
    v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_QWORD *)(a2 + 64) = v7;
    result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_20A49AD68(_QWORD *a1)
{
  return sub_20A49A74C(a1);
}

__n128 sub_20A49ADA8@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD v10[13];

  sub_20A49D0D8(a1, v10);
  if (!v2)
  {
    v5 = v10[11];
    *(_OWORD *)(a2 + 160) = v10[10];
    *(_OWORD *)(a2 + 176) = v5;
    *(_OWORD *)(a2 + 192) = v10[12];
    v6 = v10[7];
    *(_OWORD *)(a2 + 96) = v10[6];
    *(_OWORD *)(a2 + 112) = v6;
    v7 = v10[9];
    *(_OWORD *)(a2 + 128) = v10[8];
    *(_OWORD *)(a2 + 144) = v7;
    v8 = v10[3];
    *(_OWORD *)(a2 + 32) = v10[2];
    *(_OWORD *)(a2 + 48) = v8;
    v9 = v10[5];
    *(_OWORD *)(a2 + 64) = v10[4];
    *(_OWORD *)(a2 + 80) = v9;
    result = (__n128)v10[1];
    *(_OWORD *)a2 = v10[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_20A49AE10(_QWORD *a1)
{
  return sub_20A49A958(a1);
}

uint64_t sub_20A49AE70(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _OWORD v45[13];
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  _QWORD *v50;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA3D0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a1[3];
  v50 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_20A49DB7C();
  sub_20A5B92F0();
  if (v2)
  {
    v12 = v3;
  }
  else
  {
    v42 = v6;
    LOBYTE(v45[0]) = 0;
    v11 = sub_20A5B9074();
    v40 = v5;
    v41 = v3;
    v43 = v11;
    v44 = v16;
    v48 = 45;
    v49 = 0xE100000000000000;
    v46 = 43;
    v47 = 0xE100000000000000;
    sub_20A49DBC0();
    v17 = sub_20A5B8D74();
    v19 = v18;
    swift_bridgeObjectRelease();
    v43 = v17;
    v44 = v19;
    v48 = 95;
    v49 = 0xE100000000000000;
    v46 = 47;
    v47 = 0xE100000000000000;
    v20 = sub_20A5B8D74();
    v22 = v21;
    swift_bridgeObjectRelease();
    *(_QWORD *)&v45[0] = v20;
    *((_QWORD *)&v45[0] + 1) = v22;
    swift_bridgeObjectRetain();
    v23 = sub_20A5B8984();
    if ((v23 & 3) != 0)
    {
      if ((sub_20A5B8984() & 3) != 0)
      {
        v24 = sub_20A5B8984();
        swift_bridgeObjectRelease();
        v25 = v24 & 3;
        if (v24 <= 0)
          v25 = -(-v24 & 3);
        MEMORY[0x20BD25AA4](61, 0xE100000000000000, 4 - v25);
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      v26 = v40;
      v12 = v41;
      sub_20A5B899C();
    }
    else
    {
      v26 = v40;
      v12 = v41;
    }
    swift_bridgeObjectRelease();
    v27 = sub_20A5B8504();
    v29 = v28;
    sub_20A459690(v27, v28);
    swift_bridgeObjectRelease();
    if (v29 >> 60 != 15)
    {
      sub_20A44CFC4(v27, v29);
      sub_20A5B8264();
      swift_allocObject();
      sub_20A5B8258();
      sub_20A49DC04();
      sub_20A5B824C();
      swift_release();
      v30 = v45[11];
      *(_OWORD *)(v12 + 176) = v45[10];
      *(_OWORD *)(v12 + 192) = v30;
      *(_OWORD *)(v12 + 208) = v45[12];
      v31 = v45[7];
      *(_OWORD *)(v12 + 112) = v45[6];
      *(_OWORD *)(v12 + 128) = v31;
      v32 = v45[9];
      *(_OWORD *)(v12 + 144) = v45[8];
      *(_OWORD *)(v12 + 160) = v32;
      v33 = v45[3];
      *(_OWORD *)(v12 + 48) = v45[2];
      *(_OWORD *)(v12 + 64) = v33;
      v34 = v45[5];
      *(_OWORD *)(v12 + 80) = v45[4];
      *(_OWORD *)(v12 + 96) = v34;
      v35 = v45[1];
      *(_OWORD *)(v12 + 16) = v45[0];
      *(_OWORD *)(v12 + 32) = v35;
      LOBYTE(v48) = 1;
      v36 = sub_20A5B9074();
      v38 = v37;
      (*(void (**)(char *, uint64_t))(v42 + 8))(v9, v26);
      sub_20A44CFC4(v27, v29);
      *(_QWORD *)(v12 + 224) = v36;
      *(_QWORD *)(v12 + 232) = v38;
      v14 = (uint64_t)v50;
      goto LABEL_5;
    }
    LOWORD(v45[0]) = 0;
    DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000028, 0x800000020A5DE1D0, 0, (unsigned __int16 *)v45, 0, 0, 0xD00000000000006CLL, 0x800000020A5DE200, 0x6F72662874696E69, 0xEB00000000293A6DLL, 75);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v9, v26);
  }
  v13 = (uint64_t)v50;
  type metadata accessor for AMPCristalPayloadData();
  swift_deallocPartialClassInstance();
  v14 = v13;
LABEL_5:
  __swift_destroy_boxed_opaque_existential_1(v14);
  return v12;
}

uint64_t sub_20A49B3B4(char *a1, char *a2)
{
  return sub_20A4EA378(*a1, *a2);
}

uint64_t sub_20A49B3C0()
{
  sub_20A5B929C();
  sub_20A5B8978();
  swift_bridgeObjectRelease();
  return sub_20A5B92CC();
}

uint64_t sub_20A49B448()
{
  sub_20A5B8978();
  return swift_bridgeObjectRelease();
}

uint64_t sub_20A49B4AC()
{
  sub_20A5B929C();
  sub_20A5B8978();
  swift_bridgeObjectRelease();
  return sub_20A5B92CC();
}

uint64_t sub_20A49B530@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_20A5B9008();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_20A49B58C(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  v2 = 0x656D737365737361;
  if (*v1)
    v2 = 0xD000000000000011;
  v3 = 0x800000020A5DA8B0;
  if (!*v1)
    v3 = 0xEA0000000000746ELL;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_20A49B5D4()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000011;
  else
    return 0x656D737365737361;
}

uint64_t sub_20A49B618@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_20A5B9008();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_20A49B678()
{
  sub_20A49DB7C();
  return sub_20A5B9314();
}

uint64_t sub_20A49B6A0()
{
  sub_20A49DB7C();
  return sub_20A5B9320();
}

void sub_20A49B6C8(_QWORD *a1)
{
  _OWORD *v1;
  _QWORD *v2;
  _OWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _QWORD *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _OWORD v26[13];
  _OWORD v27[2];
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  char v39;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA3E8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A49DB7C();
  sub_20A5B92FC();
  v39 = 1;
  sub_20A5B9110();
  if (v2)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    LOWORD(v27[0]) = 85;
    v22 = v2;
    DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000046, 0x800000020A5DE270, v2, (unsigned __int16 *)v27, 0, 0, 0xD00000000000006CLL, 0x800000020A5DE200, 0x742865646F636E65, 0xEB00000000293A6FLL, 101);

    swift_willThrow();
  }
  else
  {
    sub_20A5B8288();
    swift_allocObject();
    sub_20A5B827C();
    v10 = v3[10];
    v11 = v3[12];
    v36 = v3[11];
    v37 = v11;
    v12 = v3[12];
    v38 = v3[13];
    v13 = v3[6];
    v14 = v3[8];
    v32 = v3[7];
    v33 = v14;
    v15 = v3[8];
    v16 = v3[10];
    v34 = v3[9];
    v35 = v16;
    v17 = v3[2];
    v18 = v3[4];
    v28 = v3[3];
    v29 = v18;
    v19 = v3[4];
    v20 = v3[6];
    v30 = v3[5];
    v31 = v20;
    v21 = v3[2];
    v27[0] = v3[1];
    v27[1] = v21;
    v26[10] = v36;
    v26[11] = v12;
    v26[12] = v3[13];
    v26[6] = v32;
    v26[7] = v15;
    v26[8] = v34;
    v26[9] = v10;
    v26[2] = v28;
    v26[3] = v19;
    v26[4] = v30;
    v26[5] = v13;
    v26[0] = v27[0];
    v26[1] = v17;
    sub_20A49D8F0((uint64_t *)v27);
    sub_20A49DC48();
    v23 = sub_20A5B8270();
    v25 = v24;
    sub_20A49D9D0((uint64_t *)v27);
    swift_release();
    sub_20A5B854C();
    sub_20A44BD90(v23, v25);
    LOBYTE(v26[0]) = 0;
    sub_20A5B9110();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_20A49B9D8()
{
  _OWORD *v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  _OWORD v8[13];

  v1 = v0[12];
  v8[10] = v0[11];
  v8[11] = v1;
  v8[12] = v0[13];
  v2 = v0[8];
  v8[6] = v0[7];
  v8[7] = v2;
  v3 = v0[10];
  v8[8] = v0[9];
  v8[9] = v3;
  v4 = v0[4];
  v8[2] = v0[3];
  v8[3] = v4;
  v5 = v0[6];
  v8[4] = v0[5];
  v8[5] = v5;
  v6 = v0[2];
  v8[0] = v0[1];
  v8[1] = v6;
  sub_20A49D9D0((uint64_t *)v8);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AMPCristalPayloadData()
{
  return objc_opt_self();
}

uint64_t destroy for ODNAssessmentResultAMP(_QWORD *a1)
{
  uint64_t result;

  if (a1[1])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[13])
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
  }
  result = a1[25];
  if (result != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t initializeWithCopy for ODNAssessmentResultAMP(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;

  v4 = *(_QWORD *)(a2 + 8);
  if (v4)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v4;
    v5 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v5;
    v6 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v6;
    v7 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    v9 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v9;
  }
  v10 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v10;
  v11 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v11;
  v12 = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12)
  {
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = v12;
    *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v13 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v13;
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    v14 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v14;
  }
  v15 = *(_QWORD *)(a2 + 200);
  if (v15 == 1)
  {
    v16 = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 184) = v16;
    *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  }
  else
  {
    v17 = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 176) = v17;
    *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
    *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
    *(_QWORD *)(a1 + 200) = v15;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for ODNAssessmentResultAMP(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _OWORD *v11;
  _OWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 *v22;
  __int128 *v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;

  v4 = *((_QWORD *)a2 + 1);
  if (*(_QWORD *)(a1 + 8))
  {
    if (v4)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
      *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
      *(_QWORD *)(a1 + 56) = *((_QWORD *)a2 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_20A49BFE4(a1);
      v5 = a2[3];
      v7 = *a2;
      v6 = a2[1];
      *(_OWORD *)(a1 + 32) = a2[2];
      *(_OWORD *)(a1 + 48) = v5;
      *(_OWORD *)a1 = v7;
      *(_OWORD *)(a1 + 16) = v6;
    }
  }
  else if (v4)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
    *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
    *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 3);
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
    *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
    *(_QWORD *)(a1 + 56) = *((_QWORD *)a2 + 7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v8 = *a2;
    v9 = a2[1];
    v10 = a2[3];
    *(_OWORD *)(a1 + 32) = a2[2];
    *(_OWORD *)(a1 + 48) = v10;
    *(_OWORD *)a1 = v8;
    *(_OWORD *)(a1 + 16) = v9;
  }
  *(_QWORD *)(a1 + 64) = *((_QWORD *)a2 + 8);
  *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *((_QWORD *)a2 + 10);
  *(_QWORD *)(a1 + 88) = *((_QWORD *)a2 + 11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = (_OWORD *)(a1 + 96);
  v12 = a2 + 6;
  v13 = *((_QWORD *)a2 + 13);
  if (*(_QWORD *)(a1 + 104))
  {
    if (v13)
    {
      *(_QWORD *)(a1 + 96) = *((_QWORD *)a2 + 12);
      *(_QWORD *)(a1 + 104) = *((_QWORD *)a2 + 13);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 112) = *((_BYTE *)a2 + 112);
      v14 = *((_QWORD *)a2 + 15);
      *(_BYTE *)(a1 + 128) = *((_BYTE *)a2 + 128);
      *(_QWORD *)(a1 + 120) = v14;
      *(_QWORD *)(a1 + 136) = *((_QWORD *)a2 + 17);
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 144) = *((_QWORD *)a2 + 18);
      *(_QWORD *)(a1 + 152) = *((_QWORD *)a2 + 19);
      *(_QWORD *)(a1 + 160) = *((_QWORD *)a2 + 20);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_20A49C010(a1 + 96);
      *v11 = *v12;
      v17 = a2[8];
      v16 = a2[9];
      v18 = a2[7];
      *(_QWORD *)(a1 + 160) = *((_QWORD *)a2 + 20);
      *(_OWORD *)(a1 + 128) = v17;
      *(_OWORD *)(a1 + 144) = v16;
      *(_OWORD *)(a1 + 112) = v18;
    }
  }
  else if (v13)
  {
    *(_QWORD *)(a1 + 96) = *((_QWORD *)a2 + 12);
    *(_QWORD *)(a1 + 104) = *((_QWORD *)a2 + 13);
    *(_BYTE *)(a1 + 112) = *((_BYTE *)a2 + 112);
    v15 = *((_QWORD *)a2 + 15);
    *(_BYTE *)(a1 + 128) = *((_BYTE *)a2 + 128);
    *(_QWORD *)(a1 + 120) = v15;
    *(_QWORD *)(a1 + 136) = *((_QWORD *)a2 + 17);
    *(_QWORD *)(a1 + 144) = *((_QWORD *)a2 + 18);
    *(_QWORD *)(a1 + 152) = *((_QWORD *)a2 + 19);
    *(_QWORD *)(a1 + 160) = *((_QWORD *)a2 + 20);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *v11 = *v12;
    v19 = a2[7];
    v20 = a2[8];
    v21 = a2[9];
    *(_QWORD *)(a1 + 160) = *((_QWORD *)a2 + 20);
    *(_OWORD *)(a1 + 128) = v20;
    *(_OWORD *)(a1 + 144) = v21;
    *(_OWORD *)(a1 + 112) = v19;
  }
  v22 = (__int128 *)(a1 + 168);
  v23 = (__int128 *)((char *)a2 + 168);
  v24 = *((_QWORD *)a2 + 25);
  if (*(_QWORD *)(a1 + 200) == 1)
  {
    if (v24 == 1)
    {
      v25 = *v23;
      v26 = *(__int128 *)((char *)a2 + 184);
      *(_QWORD *)(a1 + 200) = *((_QWORD *)a2 + 25);
      *v22 = v25;
      *(_OWORD *)(a1 + 184) = v26;
    }
    else
    {
      *(_QWORD *)(a1 + 168) = *((_QWORD *)a2 + 21);
      v29 = *((_QWORD *)a2 + 22);
      *(_BYTE *)(a1 + 184) = *((_BYTE *)a2 + 184);
      *(_QWORD *)(a1 + 176) = v29;
      *(_QWORD *)(a1 + 192) = *((_QWORD *)a2 + 24);
      *(_QWORD *)(a1 + 200) = *((_QWORD *)a2 + 25);
      swift_bridgeObjectRetain();
    }
  }
  else if (v24 == 1)
  {
    sub_20A4647C8(a1 + 168);
    v27 = *((_QWORD *)a2 + 25);
    v28 = *(__int128 *)((char *)a2 + 184);
    *v22 = *v23;
    *(_OWORD *)(a1 + 184) = v28;
    *(_QWORD *)(a1 + 200) = v27;
  }
  else
  {
    *(_QWORD *)(a1 + 168) = *((_QWORD *)a2 + 21);
    v30 = *((_QWORD *)a2 + 22);
    *(_BYTE *)(a1 + 184) = *((_BYTE *)a2 + 184);
    *(_QWORD *)(a1 + 176) = v30;
    *(_QWORD *)(a1 + 192) = *((_QWORD *)a2 + 24);
    *(_QWORD *)(a1 + 200) = *((_QWORD *)a2 + 25);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

uint64_t sub_20A49BFE4(uint64_t a1)
{
  destroy for ODIClientGUIDSeeds();
  return a1;
}

uint64_t sub_20A49C010(uint64_t a1)
{
  destroy for ODNAssessmentResultAMP.AdditionalInfo();
  return a1;
}

__n128 __swift_memcpy208_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  __int128 v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  v5 = *(_OWORD *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  result = *(__n128 *)(a2 + 144);
  v9 = *(_OWORD *)(a2 + 160);
  v10 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v10;
  *(__n128 *)(a1 + 144) = result;
  *(_OWORD *)(a1 + 160) = v9;
  return result;
}

uint64_t assignWithTake for ODNAssessmentResultAMP(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;

  if (*(_QWORD *)(a1 + 8))
  {
    v4 = *(_QWORD *)(a2 + 8);
    if (v4)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v4;
      swift_bridgeObjectRelease();
      v5 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = v5;
      swift_bridgeObjectRelease();
      v6 = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = v6;
      swift_bridgeObjectRelease();
      v7 = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = v7;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_20A49BFE4(a1);
  }
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v9;
LABEL_6:
  v10 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v11;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 104))
  {
    v12 = *(_QWORD *)(a2 + 104);
    if (v12)
    {
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = v12;
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      swift_release();
      *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_20A49C010(a1 + 96);
  }
  v13 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v13;
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  v14 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v14;
LABEL_11:
  if (*(_QWORD *)(a1 + 200) != 1)
  {
    v15 = *(_QWORD *)(a2 + 200);
    if (v15 != 1)
    {
      v17 = *(_QWORD *)(a2 + 176);
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      *(_QWORD *)(a1 + 176) = v17;
      *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
      *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
      *(_QWORD *)(a1 + 200) = v15;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_20A4647C8(a1 + 168);
  }
  v16 = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = v16;
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  return a1;
}

uint64_t getEnumTagSinglePayload for ODNAssessmentResultAMP(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 208))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ODNAssessmentResultAMP(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 200) = 0;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 208) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 208) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ODNAssessmentResultAMP()
{
  return &type metadata for ODNAssessmentResultAMP;
}

uint64_t destroy for ODNAssessmentResultAMP.AdditionalInfo()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ODNAssessmentResultAMP.AdditionalInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ODNAssessmentResultAMP.AdditionalInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for ODNAssessmentResultAMP.AdditionalInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ODNAssessmentResultAMP.AdditionalInfo(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ODNAssessmentResultAMP.AdditionalInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ODNAssessmentResultAMP.AdditionalInfo()
{
  return &type metadata for ODNAssessmentResultAMP.AdditionalInfo;
}

ValueMetadata *type metadata accessor for ODNAssessmentResultAMP.Seeds()
{
  return &type metadata for ODNAssessmentResultAMP.Seeds;
}

uint64_t sub_20A49C598@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  type metadata accessor for AMPCristalPayloadData();
  v5 = swift_allocObject();
  result = sub_20A49AE70(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

void sub_20A49C5EC(_QWORD *a1)
{
  sub_20A49B6C8(a1);
}

uint64_t sub_20A49C60C(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x656D697473 && a2 == 0xE500000000000000;
  if (v3 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1684955506 && a2 == 0xE400000000000000 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656D697464 && a2 == 0xE500000000000000 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_20A5B91AC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_20A49C798()
{
  unint64_t v0;

  v0 = sub_20A5B9008();
  swift_bridgeObjectRelease();
  if (v0 >= 6)
    return 6;
  else
    return v0;
}

uint64_t sub_20A49C7E0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7364656573 && a2 == 0xE500000000000000;
  if (v2 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x49656C69666F7270 && a2 == 0xE900000000000064 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656D737365737361 && a2 == 0xEA0000000000746ELL || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E6F697469646461 && a2 == 0xEE006F666E496C61 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x666E49726F727265 && a2 == 0xE90000000000006FLL)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_20A5B91AC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_20A49CA34@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  char v33;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA328);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A49CD0C();
  sub_20A5B92F0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v33 = 0;
  v10 = sub_20A5B9074();
  v12 = v11;
  v28 = v10;
  v32 = 1;
  swift_bridgeObjectRetain();
  v13 = sub_20A5B9074();
  v29 = v14;
  v27 = v13;
  v31 = 2;
  swift_bridgeObjectRetain();
  v25 = sub_20A5B9074();
  v26 = v15;
  v30 = 3;
  swift_bridgeObjectRetain();
  v16 = sub_20A5B9074();
  v18 = v17;
  v19 = *(void (**)(char *, uint64_t))(v6 + 8);
  v20 = v16;
  v19(v9, v5);
  swift_bridgeObjectRetain();
  v21 = v29;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  v22 = v26;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a2 = v28;
  a2[1] = v12;
  a2[2] = v27;
  a2[3] = v21;
  a2[4] = v25;
  a2[5] = v22;
  a2[6] = v20;
  a2[7] = v18;
  return result;
}

unint64_t sub_20A49CD0C()
{
  unint64_t result;

  result = qword_2545FA330;
  if (!qword_2545FA330)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C0798, &type metadata for ODNAssessmentResultAMP.Seeds.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FA330);
  }
  return result;
}

uint64_t sub_20A49CD50@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA340);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A49D050();
  sub_20A5B92F0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v34 = 0;
  v10 = sub_20A5B9074();
  v12 = v11;
  v33 = 1;
  swift_bridgeObjectRetain();
  v27 = sub_20A5B9080();
  v32 = 2;
  v13 = sub_20A5B905C();
  v25 = v14;
  v26 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB46D0);
  v31 = 3;
  sub_20A49D094(&qword_2545FA350, (uint64_t)&protocol conformance descriptor for EncryptedDataContainer<A>);
  sub_20A5B9068();
  v30 = 4;
  v24 = v28;
  swift_retain();
  v23 = sub_20A5B9098();
  v29 = 5;
  v15 = sub_20A5B9038();
  v17 = v16;
  v27 &= 1u;
  v18 = *(void (**)(char *, uint64_t))(v6 + 8);
  v19 = v15;
  v18(v9, v5);
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  v20 = v24;
  swift_release();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v12;
  *(_BYTE *)(a2 + 16) = v27;
  *(_QWORD *)(a2 + 24) = v26;
  *(_BYTE *)(a2 + 32) = v25 & 1;
  v22 = v23;
  *(_QWORD *)(a2 + 40) = v20;
  *(_QWORD *)(a2 + 48) = v22;
  *(_QWORD *)(a2 + 56) = v19;
  *(_QWORD *)(a2 + 64) = v17;
  return result;
}

unint64_t sub_20A49D050()
{
  unint64_t result;

  result = qword_2545FA348;
  if (!qword_2545FA348)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C0748, &type metadata for ODNAssessmentResultAMP.AdditionalInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FA348);
  }
  return result;
}

uint64_t sub_20A49D094(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253EB46D0);
    result = MEMORY[0x20BD26CEC](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_20A49D0D8@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *result;
  __int128 v33;
  _OWORD *v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  _OWORD *v66;
  uint64_t v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  __int128 v108;
  __int128 v109;
  char v110;

  v66 = a2;
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA370);
  v4 = *(_QWORD *)(v67 - 8);
  MEMORY[0x24BDAC7A8](v67, v5);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A49D768();
  sub_20A5B92F0();
  if (v2)
    return (uint64_t *)__swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v64 = a1;
  v65 = v4;
  LOBYTE(v68) = 0;
  sub_20A49D7AC();
  v8 = v67;
  v9 = v7;
  sub_20A5B9068();
  v10 = v81;
  v11 = v83;
  v12 = v84;
  v13 = v85;
  LOBYTE(v81) = 1;
  v14 = v10;
  v15 = v82;
  v62 = v87;
  v63 = v86;
  v61 = v88;
  sub_20A465800(v10, v82);
  v16 = sub_20A5B9038();
  v59 = v17;
  v60 = v13;
  v44 = v16;
  v51 = v12;
  v52 = v11;
  v50 = v15;
  v18 = v14;
  LOBYTE(v81) = 2;
  swift_bridgeObjectRetain();
  v49 = 0;
  v19 = sub_20A5B9038();
  LOBYTE(v68) = 3;
  v21 = v20;
  sub_20A49D82C();
  swift_bridgeObjectRetain();
  sub_20A5B9068();
  v48 = v21;
  v23 = v81;
  v22 = v82;
  v24 = v89;
  v110 = 4;
  v57 = v84;
  v58 = v83;
  v55 = v86;
  v56 = v85;
  v46 = v88;
  v47 = v87;
  sub_20A49D870(v81, v82);
  sub_20A49D8AC();
  sub_20A5B9068();
  v53 = v22;
  v54 = v23;
  v45 = v24;
  (*(void (**)(char *, uint64_t))(v65 + 8))(v9, v8);
  v67 = v107;
  *(_QWORD *)&v68 = v18;
  v49 = *((_QWORD *)&v108 + 1);
  v65 = v108;
  v41 = *((_QWORD *)&v109 + 1);
  v42 = v109;
  v40 = v18;
  *((_QWORD *)&v68 + 1) = v50;
  *(_QWORD *)&v69 = v52;
  *((_QWORD *)&v69 + 1) = v51;
  *(_QWORD *)&v70 = v60;
  v43 = v19;
  *((_QWORD *)&v70 + 1) = v63;
  *(_QWORD *)&v71 = v62;
  *((_QWORD *)&v71 + 1) = v61;
  *(_QWORD *)&v72 = v44;
  *((_QWORD *)&v72 + 1) = v59;
  *(_QWORD *)&v73 = v19;
  *((_QWORD *)&v73 + 1) = v48;
  *(_QWORD *)&v74 = v23;
  *((_QWORD *)&v74 + 1) = v22;
  *(_QWORD *)&v75 = v58;
  *((_QWORD *)&v75 + 1) = v57;
  *(_QWORD *)&v76 = v56;
  *((_QWORD *)&v76 + 1) = v55;
  *(_QWORD *)&v77 = v47;
  *((_QWORD *)&v77 + 1) = v46;
  *(_QWORD *)&v78 = v24;
  *((_QWORD *)&v78 + 1) = v107;
  v79 = v108;
  v80 = v109;
  sub_20A49D8F0((uint64_t *)&v68);
  sub_20A49D7F0(v54, v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v25 = v40;
  v27 = v50;
  v26 = v51;
  v28 = v52;
  v30 = v60;
  v29 = v61;
  v31 = v62;
  sub_20A4655FC(v40, v50);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v64);
  v81 = v25;
  v82 = v27;
  v83 = v28;
  v84 = v26;
  v85 = v30;
  v86 = v63;
  v87 = v31;
  v88 = v29;
  v89 = v44;
  v90 = v59;
  v91 = v43;
  v92 = v48;
  v93 = v54;
  v94 = v53;
  v95 = v58;
  v96 = v57;
  v97 = v56;
  v98 = v55;
  v99 = v47;
  v100 = v46;
  v101 = v45;
  v102 = v67;
  v103 = v65;
  v104 = v49;
  v105 = v42;
  v106 = v41;
  result = sub_20A49D9D0(&v81);
  v33 = v79;
  v34 = v66;
  v66[10] = v78;
  v34[11] = v33;
  v34[12] = v80;
  v35 = v75;
  v34[6] = v74;
  v34[7] = v35;
  v36 = v77;
  v34[8] = v76;
  v34[9] = v36;
  v37 = v71;
  v34[2] = v70;
  v34[3] = v37;
  v38 = v73;
  v34[4] = v72;
  v34[5] = v38;
  v39 = v69;
  *v34 = v68;
  v34[1] = v39;
  return result;
}

unint64_t sub_20A49D768()
{
  unint64_t result;

  result = qword_2545FA378;
  if (!qword_2545FA378)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C06F8, &type metadata for ODNAssessmentResultAMP.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FA378);
  }
  return result;
}

unint64_t sub_20A49D7AC()
{
  unint64_t result;

  result = qword_2545FA380;
  if (!qword_2545FA380)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C0324, &type metadata for ODNAssessmentResultAMP.Seeds);
    atomic_store(result, (unint64_t *)&qword_2545FA380);
  }
  return result;
}

uint64_t sub_20A49D7F0(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_20A49D82C()
{
  unint64_t result;

  result = qword_2545FA388;
  if (!qword_2545FA388)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C02D4, &type metadata for ODNAssessmentResultAMP.AdditionalInfo);
    atomic_store(result, (unint64_t *)&qword_2545FA388);
  }
  return result;
}

uint64_t sub_20A49D870(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  return result;
}

unint64_t sub_20A49D8AC()
{
  unint64_t result;

  result = qword_2545FA390;
  if (!qword_2545FA390)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C6A6C, &type metadata for ODNErrorInfo);
    atomic_store(result, (unint64_t *)&qword_2545FA390);
  }
  return result;
}

uint64_t *sub_20A49D8F0(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = a1[13];
  v4 = a1[12];
  v8 = a1[22];
  v9 = a1[21];
  v6 = a1[24];
  v7 = a1[23];
  v5 = a1[25];
  sub_20A465800(*a1, a1[1]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_20A49D870(v4, v2);
  sub_20A465850(v9, v8, v7, v6, v5);
  return a1;
}

uint64_t *sub_20A49D9D0(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = a1[13];
  v4 = a1[12];
  v8 = a1[22];
  v9 = a1[21];
  v6 = a1[24];
  v7 = a1[23];
  v5 = a1[25];
  sub_20A4655FC(*a1, a1[1]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_20A49D7F0(v4, v2);
  sub_20A46564C(v9, v8, v7, v6, v5);
  return a1;
}

unint64_t sub_20A49DAB0()
{
  unint64_t result;

  result = qword_2545FA3A8;
  if (!qword_2545FA3A8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C02FC, &type metadata for ODNAssessmentResultAMP.Seeds);
    atomic_store(result, (unint64_t *)&qword_2545FA3A8);
  }
  return result;
}

unint64_t sub_20A49DAF4()
{
  unint64_t result;

  result = qword_2545FA3B8;
  if (!qword_2545FA3B8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C02AC, &type metadata for ODNAssessmentResultAMP.AdditionalInfo);
    atomic_store(result, (unint64_t *)&qword_2545FA3B8);
  }
  return result;
}

unint64_t sub_20A49DB38()
{
  unint64_t result;

  result = qword_2545FA3C8;
  if (!qword_2545FA3C8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C6A44, &type metadata for ODNErrorInfo);
    atomic_store(result, (unint64_t *)&qword_2545FA3C8);
  }
  return result;
}

unint64_t sub_20A49DB7C()
{
  unint64_t result;

  result = qword_2545FA3D8;
  if (!qword_2545FA3D8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C06A8, &type metadata for AMPCristalPayloadData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FA3D8);
  }
  return result;
}

unint64_t sub_20A49DBC0()
{
  unint64_t result;

  result = qword_253EB5090;
  if (!qword_253EB5090)
  {
    result = MEMORY[0x20BD26CEC](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_253EB5090);
  }
  return result;
}

unint64_t sub_20A49DC04()
{
  unint64_t result;

  result = qword_2545FA3E0;
  if (!qword_2545FA3E0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C0284, &type metadata for ODNAssessmentResultAMP);
    atomic_store(result, (unint64_t *)&qword_2545FA3E0);
  }
  return result;
}

unint64_t sub_20A49DC48()
{
  unint64_t result;

  result = qword_2545FA3F0;
  if (!qword_2545FA3F0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C025C, &type metadata for ODNAssessmentResultAMP);
    atomic_store(result, (unint64_t *)&qword_2545FA3F0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AMPCristalPayloadData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_20A49DCD8 + 4 * byte_20A5C016A[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_20A49DD0C + 4 * byte_20A5C0165[v4]))();
}

uint64_t sub_20A49DD0C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A49DD14(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A49DD1CLL);
  return result;
}

uint64_t sub_20A49DD28(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A49DD30);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_20A49DD34(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A49DD3C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AMPCristalPayloadData.CodingKeys()
{
  return &type metadata for AMPCristalPayloadData.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ODNAssessmentResultAMP.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ODNAssessmentResultAMP.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_20A49DE34 + 4 * byte_20A5C0174[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_20A49DE68 + 4 * byte_20A5C016F[v4]))();
}

uint64_t sub_20A49DE68(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A49DE70(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A49DE78);
  return result;
}

uint64_t sub_20A49DE84(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A49DE8CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_20A49DE90(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A49DE98(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ODNAssessmentResultAMP.CodingKeys()
{
  return &type metadata for ODNAssessmentResultAMP.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for ODNAssessmentResultAMP.AdditionalInfo.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_20A49DF00 + 4 * byte_20A5C017E[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_20A49DF34 + 4 * byte_20A5C0179[v4]))();
}

uint64_t sub_20A49DF34(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A49DF3C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A49DF44);
  return result;
}

uint64_t sub_20A49DF50(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A49DF58);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_20A49DF5C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A49DF64(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ODNAssessmentResultAMP.AdditionalInfo.CodingKeys()
{
  return &type metadata for ODNAssessmentResultAMP.AdditionalInfo.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for ODNAssessmentResultAMP.Seeds.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_20A49DFCC + 4 * byte_20A5C0188[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_20A49E000 + 4 * byte_20A5C0183[v4]))();
}

uint64_t sub_20A49E000(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A49E008(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A49E010);
  return result;
}

uint64_t sub_20A49E01C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A49E024);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_20A49E028(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A49E030(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ODNAssessmentResultAMP.Seeds.CodingKeys()
{
  return &type metadata for ODNAssessmentResultAMP.Seeds.CodingKeys;
}

unint64_t sub_20A49E050()
{
  unint64_t result;

  result = qword_2545FA3F8;
  if (!qword_2545FA3F8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C03E8, &type metadata for ODNAssessmentResultAMP.Seeds.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FA3F8);
  }
  return result;
}

unint64_t sub_20A49E098()
{
  unint64_t result;

  result = qword_2545FA400;
  if (!qword_2545FA400)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C04D8, &type metadata for ODNAssessmentResultAMP.AdditionalInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FA400);
  }
  return result;
}

unint64_t sub_20A49E0E0()
{
  unint64_t result;

  result = qword_2545FA408;
  if (!qword_2545FA408)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C0590, &type metadata for ODNAssessmentResultAMP.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FA408);
  }
  return result;
}

unint64_t sub_20A49E128()
{
  unint64_t result;

  result = qword_2545FA410;
  if (!qword_2545FA410)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C0680, &type metadata for AMPCristalPayloadData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FA410);
  }
  return result;
}

unint64_t sub_20A49E170()
{
  unint64_t result;

  result = qword_2545FA418;
  if (!qword_2545FA418)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C05B8, &type metadata for AMPCristalPayloadData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FA418);
  }
  return result;
}

unint64_t sub_20A49E1B8()
{
  unint64_t result;

  result = qword_2545FA420;
  if (!qword_2545FA420)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C05E0, &type metadata for AMPCristalPayloadData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FA420);
  }
  return result;
}

unint64_t sub_20A49E200()
{
  unint64_t result;

  result = qword_2545FA428;
  if (!qword_2545FA428)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C0500, &type metadata for ODNAssessmentResultAMP.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FA428);
  }
  return result;
}

unint64_t sub_20A49E248()
{
  unint64_t result;

  result = qword_2545FA430;
  if (!qword_2545FA430)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C0528, &type metadata for ODNAssessmentResultAMP.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FA430);
  }
  return result;
}

unint64_t sub_20A49E290()
{
  unint64_t result;

  result = qword_2545FA438;
  if (!qword_2545FA438)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C0410, &type metadata for ODNAssessmentResultAMP.AdditionalInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FA438);
  }
  return result;
}

unint64_t sub_20A49E2D8()
{
  unint64_t result;

  result = qword_2545FA440;
  if (!qword_2545FA440)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C0438, &type metadata for ODNAssessmentResultAMP.AdditionalInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FA440);
  }
  return result;
}

unint64_t sub_20A49E320()
{
  unint64_t result;

  result = qword_2545FA448;
  if (!qword_2545FA448)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C0358, &type metadata for ODNAssessmentResultAMP.Seeds.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FA448);
  }
  return result;
}

unint64_t sub_20A49E368()
{
  unint64_t result;

  result = qword_2545FA450;
  if (!qword_2545FA450)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C0380, &type metadata for ODNAssessmentResultAMP.Seeds.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FA450);
  }
  return result;
}

uint64_t sub_20A49E3AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 8))();
}

uint64_t sub_20A49E3C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 16))();
}

uint64_t sub_20A49E3DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for DIPRetrier(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DIPRetrier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for DIPRetrier()
{
  return &type metadata for DIPRetrier;
}

uint64_t sub_20A49E4A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v6;

  *(_QWORD *)(v6 + 112) = a4;
  *(_QWORD *)(v6 + 120) = a6;
  *(_BYTE *)(v6 + 42) = a5;
  *(_QWORD *)(v6 + 96) = a2;
  *(_QWORD *)(v6 + 104) = a3;
  *(_QWORD *)(v6 + 88) = a1;
  return swift_task_switch();
}

uint64_t sub_20A49E4CC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v3;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(uint64_t **)(v0 + 96);
  v2 = *v1;
  *(_QWORD *)(v0 + 128) = *v1;
  if (v2 <= 0)
  {
    v6 = *(void **)(v0 + 112);
    v5 = *(void **)(v0 + 120);
    v7 = *(void **)(v0 + 104);
    sub_20A5B8E94();
    swift_bridgeObjectRelease();
    v9 = 0x656972742078616DLL;
    v10 = 0xEA00000000002073;
    *(_QWORD *)(v0 + 80) = v2;
    sub_20A5B9170();
    sub_20A5B899C();
    swift_bridgeObjectRelease();
    sub_20A5B899C();
    v8 = v9;
    LOWORD(v9) = 107;
    DIPError(_:fromError:code:forceCode:properties:file:function:line:)(v8, v10, 0, (unsigned __int16 *)&v9, 0, 0, 0xD000000000000069, 0x800000020A5DE340, 0x293A5F28636E7973, 0xE800000000000000, 109);
    swift_bridgeObjectRelease();
    swift_willThrow();

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_OWORD *)(v0 + 136) = xmmword_20A5BCDD0;
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v3;
    *v3 = v0;
    v3[1] = sub_20A49E69C;
    return sub_20A4A7CE4(v0 + 16, 1, *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_BYTE *)(v0 + 42), *(_QWORD *)(v0 + 120));
  }
}

uint64_t sub_20A49E69C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

void sub_20A49E6F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  *(_QWORD *)(v0 + 160) = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 168) = v1;
  *(_QWORD *)(v0 + 176) = v2;
  *(_BYTE *)(v0 + 43) = *(_BYTE *)(v0 + 40);
  __asm { BR              X10 }
}

uint64_t sub_20A49E760()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  void *v5;
  void *v6;
  uint64_t v7;

  v6 = *(void **)(v3 + 112);
  v5 = *(void **)(v3 + 120);
  v7 = *(_QWORD *)(v3 + 88);

  *(_QWORD *)v7 = v0;
  *(_QWORD *)(v7 + 8) = v1;
  *(_QWORD *)(v7 + 16) = v2;
  *(_BYTE *)(v7 + 24) = v4 & 1;

  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_20A49F060()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 192) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

void sub_20A49F0C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  sub_20A49FB90(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(unsigned __int8 *)(v0 + 40), *(_BYTE *)(v0 + 41));
  v1 = *(_QWORD *)(v0 + 144);
  v2 = v1 + 1;
  if (__OFADD__(v1, 1))
  {
    __break(1u);
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 128);
    if (v3 >= v2)
    {
      *(_QWORD *)(v0 + 136) = 0;
      *(_QWORD *)(v0 + 144) = v2;
      v8 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 152) = v8;
      *v8 = v0;
      v8[1] = sub_20A49E69C;
      sub_20A4A7CE4(v0 + 16, v2, *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_BYTE *)(v0 + 42), *(_QWORD *)(v0 + 120));
    }
    else
    {
      v5 = *(void **)(v0 + 112);
      v4 = *(void **)(v0 + 120);
      v6 = *(void **)(v0 + 104);
      sub_20A5B8E94();
      swift_bridgeObjectRelease();
      v9 = 0x656972742078616DLL;
      v10 = 0xEA00000000002073;
      *(_QWORD *)(v0 + 80) = v3;
      sub_20A5B9170();
      sub_20A5B899C();
      swift_bridgeObjectRelease();
      sub_20A5B899C();
      v7 = v9;
      LOWORD(v9) = 107;
      DIPError(_:fromError:code:forceCode:properties:file:function:line:)(v7, v10, 0, (unsigned __int16 *)&v9, 0, 0, 0xD000000000000069, 0x800000020A5DE340, 0x293A5F28636E7973, 0xE800000000000000, 109);
      swift_bridgeObjectRelease();
      swift_willThrow();

      (*(void (**)(void))(v0 + 8))();
    }
  }
}

uint64_t sub_20A49F2A8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    *(_QWORD *)(v2 + 208) = v0;
  return swift_task_switch();
}

uint64_t sub_20A49F30C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;

  v1 = *(void **)(v0 + 112);
  v2 = *(void **)(v0 + 120);
  v3 = *(void **)(v0 + 104);
  sub_20A49FB90(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(unsigned __int8 *)(v0 + 40), *(_BYTE *)(v0 + 41));

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A49F368()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    *(_QWORD *)(v2 + 208) = v0;
  return swift_task_switch();
}

void sub_20A49F3CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  sub_20A49FB90(*(void **)(v0 + 160), *(_QWORD *)(v0 + 168), *(void **)(v0 + 176), *(unsigned __int8 *)(v0 + 43), 2);
  sub_20A49FB90(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(unsigned __int8 *)(v0 + 40), *(_BYTE *)(v0 + 41));
  v1 = *(_QWORD *)(v0 + 144);
  v2 = v1 + 1;
  if (__OFADD__(v1, 1))
  {
    __break(1u);
  }
  else
  {
    v3 = *(_QWORD **)(v0 + 160);
    v4 = *(_QWORD *)(v0 + 128);
    if (v4 >= v2)
    {
      *(_QWORD *)(v0 + 136) = v3;
      *(_QWORD *)(v0 + 144) = v2;
      v9 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 152) = v9;
      *v9 = v0;
      v9[1] = sub_20A49E69C;
      sub_20A4A7CE4(v0 + 16, v2, *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_BYTE *)(v0 + 42), *(_QWORD *)(v0 + 120));
    }
    else
    {
      v6 = *(void **)(v0 + 112);
      v5 = *(void **)(v0 + 120);
      v7 = *(void **)(v0 + 104);
      sub_20A5B8E94();
      swift_bridgeObjectRelease();
      v10 = 0x656972742078616DLL;
      v11 = 0xEA00000000002073;
      *(_QWORD *)(v0 + 80) = v4;
      sub_20A5B9170();
      sub_20A5B899C();
      swift_bridgeObjectRelease();
      sub_20A5B899C();
      v8 = v10;
      LOWORD(v10) = 107;
      DIPError(_:fromError:code:forceCode:properties:file:function:line:)(v8, v11, v3, (unsigned __int16 *)&v10, 0, 0, 0xD000000000000069, 0x800000020A5DE340, 0x293A5F28636E7973, 0xE800000000000000, 109);
      swift_bridgeObjectRelease();
      swift_willThrow();

      (*(void (**)(void))(v0 + 8))();
    }
  }
}

uint64_t sub_20A49F5C8()
{
  uint64_t v0;
  unint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(void **)(v0 + 176);
  v3 = *(void **)(v0 + 160);
  v5 = *(void **)(v0 + 112);
  v4 = *(void **)(v0 + 120);
  v6 = *(void **)(v0 + 104);
  v7 = *(unsigned __int8 *)(v0 + 43);
  sub_20A49FB90(v3, v1, v2, v7, 2);
  sub_20A49FB90(v3, v1, v2, v7, 2);
  sub_20A49FB90(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(unsigned __int8 *)(v0 + 40), *(_BYTE *)(v0 + 41));

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A49F670()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 232) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

void sub_20A49F6D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  sub_20A49FB90(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(unsigned __int8 *)(v0 + 40), *(_BYTE *)(v0 + 41));
  v1 = *(_QWORD *)(v0 + 144);
  v2 = v1 + 1;
  if (__OFADD__(v1, 1))
  {
    __break(1u);
  }
  else
  {
    v3 = *(_QWORD **)(v0 + 160);
    v4 = *(_QWORD *)(v0 + 128);
    if (v4 >= v2)
    {
      *(_QWORD *)(v0 + 136) = v3;
      *(_QWORD *)(v0 + 144) = v2;
      v9 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 152) = v9;
      *v9 = v0;
      v9[1] = sub_20A49E69C;
      sub_20A4A7CE4(v0 + 16, v2, *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_BYTE *)(v0 + 42), *(_QWORD *)(v0 + 120));
    }
    else
    {
      v6 = *(void **)(v0 + 112);
      v5 = *(void **)(v0 + 120);
      v7 = *(void **)(v0 + 104);
      sub_20A5B8E94();
      swift_bridgeObjectRelease();
      v10 = 0x656972742078616DLL;
      v11 = 0xEA00000000002073;
      *(_QWORD *)(v0 + 80) = v4;
      sub_20A5B9170();
      sub_20A5B899C();
      swift_bridgeObjectRelease();
      sub_20A5B899C();
      v8 = v10;
      LOWORD(v10) = 107;
      DIPError(_:fromError:code:forceCode:properties:file:function:line:)(v8, v11, v3, (unsigned __int16 *)&v10, 0, 0, 0xD000000000000069, 0x800000020A5DE340, 0x293A5F28636E7973, 0xE800000000000000, 109);
      swift_bridgeObjectRelease();
      swift_willThrow();

      (*(void (**)(void))(v0 + 8))();
    }
  }
}

uint64_t sub_20A49F8C4()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v1 = *(void **)(v0 + 160);
  v3 = *(void **)(v0 + 112);
  v2 = *(void **)(v0 + 120);
  v4 = *(void **)(v0 + 104);

  sub_20A49FB90(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(unsigned __int8 *)(v0 + 40), *(_BYTE *)(v0 + 41));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A49F934(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = v1;
  return swift_task_switch();
}

uint64_t sub_20A49F94C()
{
  uint64_t v0;
  _QWORD *v1;
  double *v2;
  uint64_t result;
  uint64_t v4;
  BOOL v5;
  unint64_t v6;
  BOOL v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v10)();
  double v11;
  double v12;

  v1 = *(_QWORD **)(v0 + 56);
  if (*v1 == *(_QWORD *)(v0 + 48))
    return (*(uint64_t (**)(void))(v0 + 8))();
  v2 = (double *)(v0 + 16);
  sub_20A49FC38(v1 + 1, v0 + 32);
  result = sub_20A49FC38((uint64_t *)(v0 + 32), v0 + 16);
  if (*(_BYTE *)(v0 + 24))
  {
    if (*(_BYTE *)(v0 + 24) == 1)
    {
      v4 = *(_QWORD *)(v0 + 48);
      v5 = __OFSUB__(v4, 1);
      v6 = v4 - 1;
      if (!v5)
      {
        v7 = v6 > 0x40;
        if (v6 >= 0x40)
          v8 = 0;
        else
          v8 = 1 << v6;
        if (v7)
          v8 = 0;
        sub_20A4B94E0(*(double *)(v0 + 16) * (double)v8);
        v9 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 72) = v9;
        v10 = sub_20A49FB48;
        goto LABEL_21;
      }
      __break(1u);
      goto LABEL_23;
    }
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v11 = *v2;
  if (*v2 <= 0.0)
    goto LABEL_20;
  if ((~*(_QWORD *)&v11 & 0x7FF0000000000000) == 0)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v11 <= -1.0)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v11 >= 1.84467441e19)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if ((unint64_t)v11 > 0x44B82FA08)
    goto LABEL_20;
  v12 = v11 * 1000000000.0;
  if ((~*(_QWORD *)&v12 & 0x7FF0000000000000) == 0)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v12 <= -1.0)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v12 < 1.84467441e19)
  {
LABEL_20:
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 64) = v9;
    v10 = sub_20A49FB00;
LABEL_21:
    *v9 = v0;
    v9[1] = v10;
    return sub_20A5B8BA0();
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_20A49FB00()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_20A49FB48()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

void sub_20A49FB90(void *a1, unint64_t a2, void *a3, uint64_t a4, char a5)
{
  switch(a5)
  {
    case 0:
      sub_20A44BD90((uint64_t)a1, a2);

      break;
    case 1:
    case 2:
    case 3:

      break;
    default:
      return;
  }
}

id sub_20A49FBE4(id result, unint64_t a2, void *a3, uint64_t a4, char a5)
{
  switch(a5)
  {
    case 0:
      sub_20A45964C((uint64_t)result, a2);
      result = a3;
      break;
    case 1:
    case 2:
    case 3:
      result = result;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20A49FC38(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *a1;
  *(_BYTE *)(a2 + 8) = *((_BYTE *)a1 + 8);
  *(_QWORD *)a2 = v2;
  return a2;
}

uint64_t getEnumTagSinglePayload for DIPBackoffStrategy(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DIPBackoffStrategy(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_20A49FCDC(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_20A49FCF4(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for DIPBackoffStrategy()
{
  return &type metadata for DIPBackoffStrategy;
}

uint64_t sub_20A49FD1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 16) + *(_QWORD *)(a2 + 16));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_20A460338;
  return v7(a1, a2);
}

uint64_t sub_20A49FD88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 24) + *(_QWORD *)(a3 + 24));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_20A45A37C;
  return v9(a1, a2, a3);
}

uint64_t sub_20A49FE04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 32) + *(_QWORD *)(a2 + 32));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_20A4A30B8;
  return v7(a1, a2);
}

uint64_t sub_20A49FE70(__int128 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t);

  v15 = *a1;
  v13 = a1[2];
  v14 = a1[1];
  v11 = a1[4];
  v12 = a1[3];
  v10 = a1[5];
  v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 8) + *(_QWORD *)(a3 + 8));
  v6 = *((_QWORD *)a1 + 12);
  v7 = *((_QWORD *)a1 + 13);
  v8 = (_QWORD *)swift_task_alloc();
  *(_OWORD *)(v3 + 16) = v15;
  *(_QWORD *)(v3 + 120) = v7;
  *(_QWORD *)(v3 + 128) = v8;
  *(_OWORD *)(v3 + 32) = v14;
  *(_OWORD *)(v3 + 48) = v13;
  *(_OWORD *)(v3 + 64) = v12;
  *(_OWORD *)(v3 + 80) = v11;
  *(_OWORD *)(v3 + 96) = v10;
  *(_QWORD *)(v3 + 112) = v6;
  *v8 = v3;
  v8[1] = sub_20A49FF48;
  return v16(v3 + 16, a2, a3);
}

uint64_t sub_20A49FF48()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_20A49FF90(__int128 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t);

  v15 = *a1;
  v13 = a1[2];
  v14 = a1[1];
  v11 = a1[4];
  v12 = a1[3];
  v10 = a1[5];
  v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 16) + *(_QWORD *)(a3 + 16));
  v6 = *((_QWORD *)a1 + 12);
  v7 = *((_QWORD *)a1 + 13);
  v8 = (_QWORD *)swift_task_alloc();
  *(_OWORD *)(v3 + 16) = v15;
  *(_QWORD *)(v3 + 120) = v7;
  *(_QWORD *)(v3 + 128) = v8;
  *(_OWORD *)(v3 + 32) = v14;
  *(_OWORD *)(v3 + 48) = v13;
  *(_OWORD *)(v3 + 64) = v12;
  *(_OWORD *)(v3 + 80) = v11;
  *(_OWORD *)(v3 + 96) = v10;
  *(_QWORD *)(v3 + 112) = v6;
  *v8 = v3;
  v8[1] = sub_20A49FF48;
  return v16(v3 + 16, a2, a3);
}

uint64_t sub_20A4A0068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 24) + *(_QWORD *)(a3 + 24));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_20A4597C0;
  return v9(a1, a2, a3);
}

uint64_t sub_20A4A00E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 32) + *(_QWORD *)(a3 + 32));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_20A48AB6C;
  return v9(a1, a2, a3);
}

uint64_t sub_20A4A0158(__int128 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t);

  v15 = *a1;
  v13 = a1[2];
  v14 = a1[1];
  v11 = a1[4];
  v12 = a1[3];
  v10 = a1[5];
  v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 40) + *(_QWORD *)(a3 + 40));
  v6 = *((_QWORD *)a1 + 12);
  v7 = *((_QWORD *)a1 + 13);
  v8 = (_QWORD *)swift_task_alloc();
  *(_OWORD *)(v3 + 16) = v15;
  *(_QWORD *)(v3 + 120) = v7;
  *(_QWORD *)(v3 + 128) = v8;
  *(_OWORD *)(v3 + 32) = v14;
  *(_OWORD *)(v3 + 48) = v13;
  *(_OWORD *)(v3 + 64) = v12;
  *(_OWORD *)(v3 + 80) = v11;
  *(_OWORD *)(v3 + 96) = v10;
  *(_QWORD *)(v3 + 112) = v6;
  *v8 = v3;
  v8[1] = sub_20A4A0230;
  return v16(v3 + 16, a2, a3);
}

uint64_t sub_20A4A0230(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v6;

  v6 = *v2;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
}

uint64_t sub_20A4A0290()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 136) = v0;
  return swift_task_switch();
}

uint64_t sub_20A4A02A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v1 + 112);
  v3 = *(_QWORD *)(v1 + 120);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 144) = v4;
  *v4 = v0;
  v4[1] = sub_20A4A0314;
  return sub_20A4A0F94(v0 + 16, v2, v3);
}

uint64_t sub_20A4A0314()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A4A0368()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = swift_allocObject();
  v3 = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v2 + 72) = *(_OWORD *)(v0 + 64);
  v4 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v2 + 88) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v2 + 104) = v4;
  *(_OWORD *)(v2 + 120) = *(_OWORD *)(v0 + 112);
  v5 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v2 + 24) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v2 + 40) = v5;
  *(_QWORD *)(v0 + 152) = v2;
  *(_QWORD *)(v2 + 16) = v1;
  *(_OWORD *)(v2 + 56) = v3;
  swift_retain_n();
  sub_20A4A2E50(v0 + 16);
  return swift_task_switch();
}

uint64_t sub_20A4A0400()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  v1 = v0[19];
  v2 = (_QWORD *)swift_task_alloc();
  v0[20] = v2;
  v2[2] = 4000000000;
  v2[3] = &unk_2545FA518;
  v2[4] = v1;
  v2[5] = &unk_2545FC268;
  v2[6] = 0;
  v3 = (_QWORD *)swift_task_alloc();
  v0[21] = v3;
  *v3 = v0;
  v3[1] = sub_20A4A04B8;
  return sub_20A5B9200();
}

uint64_t sub_20A4A04B8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 176) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_release();
    sub_20A4A2ED8(v2 + 16);
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_20A4A0550()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4A055C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A4A059C()
{
  uint64_t v0;
  void *v1;
  id v2;
  int v3;
  void *v4;
  void *v5;
  id v6;
  _QWORD v8[3];

  v1 = *(void **)(v0 + 176);
  swift_release();
  swift_release();
  sub_20A4A2ED8(v0 + 16);
  *(_QWORD *)(v0 + 128) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52D0);
  v3 = swift_dynamicCast();
  v4 = *(void **)(v0 + 176);
  if (v3)
  {

    v8[0] = 0x203A726F727201;
    v8[1] = 0xE700000000000000;
    sub_20A461B10();
    swift_bridgeObjectRetain();
    sub_20A5B923C();
    sub_20A5B899C();
    swift_bridgeObjectRelease();
    CoreODILogger.error(_:category:)(0x203A726F727245, 0xE700000000000000, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    LOBYTE(v8[0]) = -89;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001ALL, 0x800000020A5DE6A0, 0, (unsigned __int8 *)v8, 0, 0, 0xD00000000000005CLL, 0x800000020A5DE540, 0xD00000000000001ALL, 0x800000020A5DE720, 60);
    swift_willThrow();
    v5 = *(void **)(v0 + 128);
  }
  else
  {

    LOBYTE(v8[0]) = 0;
    v6 = v4;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xE000000000000000, (char *)v4, (unsigned __int8 *)v8, 0, 0, 0xD00000000000005CLL, 0x800000020A5DE540, 0xD00000000000001ALL, 0x800000020A5DE720, 62);

    swift_willThrow();
    v5 = v4;
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4A07C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = a2;
  *(_QWORD *)(v3 + 24) = a3;
  return swift_task_switch();
}

uint64_t sub_20A4A07D8()
{
  _QWORD *v0;
  _QWORD *v1;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0[2] + 144), *(_QWORD *)(v0[2] + 168));
  v1 = (_QWORD *)swift_task_alloc();
  v0[4] = v1;
  *v1 = v0;
  v1[1] = sub_20A4A0838;
  return sub_20A4F6604(v0[3]);
}

uint64_t sub_20A4A0838()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_20A4A0880()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 192) = v0;
  return swift_task_switch();
}

uint64_t sub_20A4A0898()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v1 + 112);
  v3 = *(_QWORD *)(v1 + 120);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 200) = v4;
  *v4 = v0;
  v4[1] = sub_20A4A0904;
  return sub_20A4A0F94(v0 + 16, v2, v3);
}

uint64_t sub_20A4A0904()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A4A0958()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;

  v1 = *(_QWORD *)(v0 + 192);
  v2 = swift_allocObject();
  v3 = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v2 + 72) = *(_OWORD *)(v0 + 64);
  v4 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v2 + 88) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v2 + 104) = v4;
  *(_OWORD *)(v2 + 120) = *(_OWORD *)(v0 + 112);
  v5 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v2 + 24) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v2 + 40) = v5;
  *(_QWORD *)(v0 + 208) = v2;
  *(_QWORD *)(v2 + 16) = v1;
  *(_OWORD *)(v2 + 56) = v3;
  swift_retain_n();
  sub_20A4A2E50(v0 + 16);
  return swift_task_switch();
}

uint64_t sub_20A4A09F0()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  v1 = v0[26];
  v2 = (_QWORD *)swift_task_alloc();
  v0[27] = v2;
  v2[2] = 4000000000;
  v2[3] = &unk_2545FA4E8;
  v2[4] = v1;
  v2[5] = &unk_2545FA4F0;
  v2[6] = 0;
  v3 = (_QWORD *)swift_task_alloc();
  v0[28] = v3;
  *v3 = v0;
  v3[1] = sub_20A4A0AB8;
  return sub_20A5B9200();
}

uint64_t sub_20A4A0AB8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 232) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_release();
  swift_release();
  sub_20A4A2ED8(v2 + 16);
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD, _QWORD))(v2 + 8))(*(_QWORD *)(v2 + 128), *(_QWORD *)(v2 + 136));
}

uint64_t sub_20A4A0B60()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A4A0BA0()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  id v9;
  uint64_t v11;
  unint64_t v12;

  v1 = *(void **)(v0 + 232);
  swift_release();
  swift_release();
  sub_20A4A2ED8(v0 + 16);
  *(_QWORD *)(v0 + 176) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52D0);
  if (swift_dynamicCast())
  {

    v11 = 0;
    v12 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_20A5B8E94();
    *(_QWORD *)(v0 + 160) = 0;
    *(_QWORD *)(v0 + 168) = 0xE000000000000000;
    sub_20A5B899C();
    sub_20A5B8F9C();
    v3 = *(_QWORD *)(v0 + 160);
    v4 = *(_QWORD *)(v0 + 168);
    LOBYTE(v11) = 1;
    CoreODILogger.error(_:category:)(v3, v4, &v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    LOBYTE(v11) = -89;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001ALL, 0x800000020A5DE6A0, 0, (unsigned __int8 *)&v11, 0, 0, 0xD00000000000005CLL, 0x800000020A5DE540, 0xD000000000000016, 0x800000020A5DE680, 80);
    swift_willThrow();
    v5 = *(void **)(v0 + 176);
  }
  else
  {
    v6 = *(void **)(v0 + 232);

    v11 = 0;
    v12 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_20A5B8E94();
    *(_QWORD *)(v0 + 144) = 0;
    *(_QWORD *)(v0 + 152) = 0xE000000000000000;
    sub_20A5B899C();
    *(_QWORD *)(v0 + 184) = v6;
    sub_20A5B8F9C();
    v7 = *(_QWORD *)(v0 + 144);
    v8 = *(_QWORD *)(v0 + 152);
    LOBYTE(v11) = 1;
    CoreODILogger.error(_:category:)(v7, v8, &v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    LOBYTE(v11) = 0;
    v9 = v6;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xE000000000000000, (char *)v6, (unsigned __int8 *)&v11, 0, 0, 0xD00000000000005CLL, 0x800000020A5DE540, 0xD000000000000016, 0x800000020A5DE680, 83);

    swift_willThrow();
    v5 = v6;
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4A0E7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_20A4A0E98()
{
  _QWORD *v0;
  _QWORD *v1;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0[3] + 144), *(_QWORD *)(v0[3] + 168));
  v1 = (_QWORD *)swift_task_alloc();
  v0[5] = v1;
  *v1 = v0;
  v1[1] = sub_20A4A0EFC;
  return sub_20A4F884C(v0[4], 0);
}

uint64_t sub_20A4A0EFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;

  v6 = *v3;
  v7 = *v3;
  swift_task_dealloc();
  if (v2)
    return (*(uint64_t (**)(void))(v7 + 8))();
  *(_QWORD *)(v6 + 48) = a2;
  *(_QWORD *)(v6 + 56) = a1;
  return swift_task_switch();
}

uint64_t sub_20A4A0F7C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD **)(v0 + 16);
  *v2 = *(_QWORD *)(v0 + 56);
  v2[1] = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4A0F94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[125] = v3;
  v4[124] = a3;
  v4[123] = a2;
  v4[122] = a1;
  v4[126] = *v3;
  v5 = sub_20A5B86F0();
  v4[127] = v5;
  v4[128] = *(_QWORD *)(v5 - 8);
  v4[129] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB4998);
  v4[130] = swift_task_alloc();
  v6 = sub_20A5B8708();
  v4[131] = v6;
  v4[132] = *(_QWORD *)(v6 - 8);
  v4[133] = swift_task_alloc();
  v4[134] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB49A0);
  v4[135] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A4A1088()
{
  uint64_t v0;

  if (qword_253EB4EB8 != -1)
    swift_once();
  *(_QWORD *)(v0 + 1088) = qword_253EB4EB0;
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_20A4A10F8()
{
  uint64_t v0;
  _QWORD *v2;

  if ((*(_BYTE *)(*(_QWORD *)(v0 + 1088) + 168) & 1) != 0)
    return swift_task_switch();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 1096) = v2;
  *v2 = v0;
  v2[1] = sub_20A4A116C;
  return sub_20A4BBF60();
}

uint64_t sub_20A4A116C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A4A11BC()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t ObjCClassFromMetadata;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  unint64_t v9;

  v1 = (_OWORD *)(v0 + 896);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v3 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v4 = objc_msgSend(v3, sel_infoDictionary);

  if (!v4 || (v5 = sub_20A5B8888(), v4, !v5))
  {
    *v1 = 0u;
    *(_OWORD *)(v0 + 912) = 0u;
    goto LABEL_10;
  }
  if (!*(_QWORD *)(v5 + 16) || (v6 = sub_20A47094C(0x656C646E75424643, 0xEF6E6F6973726556), (v7 & 1) == 0))
  {
    *v1 = 0u;
    *(_OWORD *)(v0 + 912) = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_20A44FD78(*(_QWORD *)(v5 + 56) + 32 * v6, v0 + 896);
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v0 + 920))
  {
LABEL_10:
    sub_20A44CE2C(v0 + 896, &qword_253EB52E0);
    goto LABEL_11;
  }
  if (!swift_dynamicCast())
  {
LABEL_11:
    v9 = 0xE700000000000000;
    v8 = 0x6E776F6E6B6E75;
    goto LABEL_12;
  }
  v8 = *(_QWORD *)(v0 + 944);
  v9 = *(_QWORD *)(v0 + 952);
LABEL_12:
  *(_QWORD *)(v0 + 1112) = v9;
  *(_QWORD *)(v0 + 1104) = v8;
  return swift_task_switch();
}

uint64_t sub_20A4A1344()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  v1 = v0[136];
  sub_20A498124((unint64_t *)&qword_2545FA630, 255, (uint64_t (*)(uint64_t))type metadata accessor for ODIDeviceInfo, (uint64_t)&protocol conformance descriptor for ODIDeviceInfo);
  v2 = (_QWORD *)swift_task_alloc();
  v0[140] = v2;
  v2[2] = v1;
  v2[3] = 0x4E746375646F7250;
  v2[4] = 0xEB00000000656D61;
  v3 = (_QWORD *)swift_task_alloc();
  v0[141] = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB50E8);
  *v3 = v0;
  v3[1] = sub_20A4A1448;
  return sub_20A5B917C();
}

uint64_t sub_20A4A1448()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  *(_OWORD *)(v1 + 1136) = *(_OWORD *)(v1 + 928);
  return swift_task_switch();
}

uint64_t sub_20A4A14B8()
{
  _QWORD *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v1 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
  objc_msgSend(v1, sel_operatingSystemVersion);
  v2 = v33;

  v0[121] = v31;
  v32 = sub_20A5B9170();
  v34 = v3;
  sub_20A5B899C();
  v0[120] = v2;
  sub_20A5B9170();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  v0[144] = v32;
  v0[145] = v34;
  if (qword_253EB4EE0 != -1)
    swift_once();
  v4 = 0x6E776F6E6B6E75;
  v5 = v0[135];
  v6 = v0[134];
  v7 = v0[132];
  v8 = v0[131];
  v0[111] = __swift_instantiateConcreteTypeFromMangledName(&qword_253EB4F40);
  v0[108] = &type metadata for AssessmentConfig;
  sub_20A4B1690((uint64_t)(v0 + 108), 10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 108));
  sub_20A5B86D8();
  sub_20A5B86CC();
  v9 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v9(v6, v8);
  v10 = sub_20A5B86C0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v5, 1, v10);
  v13 = v0[135];
  if (v12 == 1)
  {
    sub_20A44CE2C(v0[135], (uint64_t *)&unk_253EB49A0);
    v14 = 0xE700000000000000;
    v15 = 0x6E776F6E6B6E75;
  }
  else
  {
    v15 = sub_20A5B8684();
    v14 = v16;
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v13, v10);
  }
  v0[147] = v14;
  v0[146] = v15;
  v17 = v0[133];
  v18 = v0[131];
  v19 = v0[130];
  v20 = v0[129];
  v21 = v0[128];
  v22 = v0[127];
  sub_20A5B86D8();
  sub_20A5B86FC();
  v9(v17, v18);
  sub_20A5B86E4();
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
  v23 = sub_20A5B8690();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v19, 1, v23);
  v26 = v0[130];
  if (v25 == 1)
  {
    sub_20A44CE2C(v0[130], &qword_253EB4998);
    v27 = 0xE700000000000000;
  }
  else
  {
    v4 = sub_20A5B8684();
    v27 = v28;
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v26, v23);
  }
  v0[149] = v27;
  v0[148] = v4;
  if (qword_253EB4A90 != -1)
    swift_once();
  v29 = (_QWORD *)swift_task_alloc();
  v0[150] = v29;
  *v29 = v0;
  v29[1] = sub_20A4A17E4;
  return sub_20A4E0CC4((uint64_t)(v0 + 72));
}

uint64_t sub_20A4A17E4()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A4A183C()
{
  uint64_t v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  id v8;
  int v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  unsigned __int8 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;

  v1 = *(_OWORD *)(v0 + 784);
  *(_OWORD *)(v0 + 520) = *(_OWORD *)(v0 + 768);
  *(_OWORD *)(v0 + 536) = v1;
  *(_OWORD *)(v0 + 552) = *(_OWORD *)(v0 + 800);
  *(_BYTE *)(v0 + 568) = *(_BYTE *)(v0 + 816);
  v2 = *(_OWORD *)(v0 + 720);
  *(_OWORD *)(v0 + 456) = *(_OWORD *)(v0 + 704);
  *(_OWORD *)(v0 + 472) = v2;
  v3 = *(_OWORD *)(v0 + 752);
  *(_OWORD *)(v0 + 488) = *(_OWORD *)(v0 + 736);
  *(_OWORD *)(v0 + 504) = v3;
  v4 = *(_OWORD *)(v0 + 656);
  *(_OWORD *)(v0 + 392) = *(_OWORD *)(v0 + 640);
  *(_OWORD *)(v0 + 408) = v4;
  v5 = *(_OWORD *)(v0 + 688);
  *(_OWORD *)(v0 + 424) = *(_OWORD *)(v0 + 672);
  *(_OWORD *)(v0 + 440) = v5;
  v6 = *(_OWORD *)(v0 + 592);
  *(_OWORD *)(v0 + 328) = *(_OWORD *)(v0 + 576);
  *(_OWORD *)(v0 + 344) = v6;
  v7 = *(_OWORD *)(v0 + 624);
  *(_OWORD *)(v0 + 360) = *(_OWORD *)(v0 + 608);
  *(_OWORD *)(v0 + 376) = v7;
  v8 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  *(_QWORD *)(v0 + 848) = sub_20A4A2D68();
  *(_QWORD *)(v0 + 856) = &off_24C316118;
  *(_QWORD *)(v0 + 824) = v8;
  if (qword_253EB4740 != -1)
    swift_once();
  v9 = byte_253EBC790;
  if (qword_253EB6228 != -1)
  {
    swift_once();
    if (v9)
      goto LABEL_5;
LABEL_12:
    v10 = 0;
    goto LABEL_13;
  }
  if (!byte_253EBC790)
    goto LABEL_12;
LABEL_5:
  if (qword_2546103C0
    && (qword_2546103B8 == 0x7972726163 && qword_2546103C0 == 0xE500000000000000 || (sub_20A5B91AC() & 1) != 0))
  {
    v10 = 2;
  }
  else
  {
    v10 = 1;
  }
LABEL_13:
  v11 = *(_QWORD *)(v0 + 992);
  v12 = *(_QWORD *)(v0 + 984);
  *(_QWORD *)(v0 + 16) = 45;
  *(_QWORD *)(v0 + 24) = 0xE100000000000000;
  v13 = *(_OWORD *)(v0 + 536);
  *(_OWORD *)(v0 + 224) = *(_OWORD *)(v0 + 520);
  *(_OWORD *)(v0 + 240) = v13;
  *(_OWORD *)(v0 + 256) = *(_OWORD *)(v0 + 552);
  *(_BYTE *)(v0 + 272) = *(_BYTE *)(v0 + 568);
  v14 = *(_OWORD *)(v0 + 472);
  *(_OWORD *)(v0 + 160) = *(_OWORD *)(v0 + 456);
  *(_OWORD *)(v0 + 176) = v14;
  v15 = *(_OWORD *)(v0 + 504);
  *(_OWORD *)(v0 + 192) = *(_OWORD *)(v0 + 488);
  *(_OWORD *)(v0 + 208) = v15;
  v16 = *(_OWORD *)(v0 + 408);
  *(_OWORD *)(v0 + 96) = *(_OWORD *)(v0 + 392);
  *(_OWORD *)(v0 + 112) = v16;
  v17 = *(_OWORD *)(v0 + 440);
  *(_OWORD *)(v0 + 128) = *(_OWORD *)(v0 + 424);
  *(_OWORD *)(v0 + 144) = v17;
  v18 = *(_OWORD *)(v0 + 344);
  *(_OWORD *)(v0 + 32) = *(_OWORD *)(v0 + 328);
  *(_OWORD *)(v0 + 48) = v18;
  v19 = *(_OWORD *)(v0 + 376);
  *(_OWORD *)(v0 + 64) = *(_OWORD *)(v0 + 360);
  *(_OWORD *)(v0 + 80) = v19;
  sub_20A44CFD8((__int128 *)(v0 + 824), v0 + 280);
  *(_BYTE *)(v0 + 320) = v10;
  v20 = sub_20A5143B8(v12, v11);
  sub_20A4A2DA4(v0 + 16);
  v33 = *(_QWORD *)(v0 + 1192);
  v21 = *(_QWORD *)(v0 + 1160);
  v22 = *(_QWORD *)(v0 + 1152);
  v23 = *(_QWORD *)(v0 + 1144);
  v30 = *(_OWORD *)(v0 + 1104);
  v31 = *(_OWORD *)(v0 + 1168);
  v32 = *(_QWORD *)(v0 + 1184);
  v24 = *(_QWORD *)(v0 + 992);
  v25 = *(_QWORD *)(v0 + 984);
  if (v23)
    v26 = *(_QWORD *)(v0 + 1144);
  else
    v26 = 0xE700000000000000;
  if (v23)
    v27 = *(_QWORD *)(v0 + 1136);
  else
    v27 = 0x6E776F6E6B6E75;
  v28 = *(_QWORD *)(v0 + 976);
  swift_bridgeObjectRetain();
  swift_release();
  *(_QWORD *)v28 = v25;
  *(_QWORD *)(v28 + 8) = v24;
  *(_QWORD *)(v28 + 16) = v22;
  *(_QWORD *)(v28 + 24) = v21;
  *(_QWORD *)(v28 + 32) = v27;
  *(_QWORD *)(v28 + 40) = v26;
  *(_OWORD *)(v28 + 48) = v30;
  *(_OWORD *)(v28 + 64) = v31;
  *(_QWORD *)(v28 + 80) = v32;
  *(_QWORD *)(v28 + 88) = v33;
  *(_QWORD *)(v28 + 96) = v20 + 48;
  *(_QWORD *)(v28 + 104) = 0xE100000000000000;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4A1B44()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = v0;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_20A4A1BA4;
  v2[24] = v0;
  return swift_task_switch();
}

uint64_t sub_20A4A1BA4(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  swift_task_dealloc();
  if (v2)
  {

  }
  else
  {
    *(_QWORD *)(v6 + 32) = a2;
    *(_QWORD *)(v6 + 40) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_20A4A1C2C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[2];

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  sub_20A5B8E94();
  swift_bridgeObjectRelease();
  v3[0] = 0xD000000000000001;
  v3[1] = 0x800000020A5DE620;
  swift_bridgeObjectRetain();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  CoreODILogger.debug(_:category:)(0xD000000000000026, 0x800000020A5DE620, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(_QWORD, uint64_t))(v0 + 8))(*(_QWORD *)(v0 + 40), v1);
}

uint64_t sub_20A4A1D0C()
{
  uint64_t v0;
  _QWORD v2[2];

  swift_bridgeObjectRetain();
  sub_20A5B8E94();
  swift_bridgeObjectRelease();
  v2[0] = 0xD000000000000001;
  v2[1] = 0x800000020A5DE600;
  swift_bridgeObjectRetain();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  CoreODILogger.debug(_:category:)(0xD000000000000019, 0x800000020A5DE600, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(0, 0);
}

uint64_t sub_20A4A1DE8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  unint64_t v18;
  unint64_t v19;
  _OWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = sub_20A5B8504();
  if (v5 >> 60 == 15)
  {
    LOBYTE(v20[0]) = 101;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001CLL, 0x800000020A5DE520, 0, (unsigned __int8 *)v20, 0, 0, 0xD00000000000005CLL, 0x800000020A5DE540, 0xD000000000000017, 0x800000020A5DE5A0, 127);
    return swift_willThrow();
  }
  else
  {
    v7 = v4;
    v8 = v5;
    sub_20A5B8264();
    swift_allocObject();
    sub_20A5B8258();
    sub_20A4A2D18();
    sub_20A5B824C();
    swift_release();
    if (v2)
    {
      v9 = *(_QWORD *)(v1 + 200);
      *(_QWORD *)&v20[0] = *(_QWORD *)(v1 + 192);
      *((_QWORD *)&v20[0] + 1) = v9;
      v18 = 0x20726F727201;
      v19 = 0xE600000000000000;
      swift_getErrorValue();
      swift_bridgeObjectRetain();
      sub_20A5B923C();
      sub_20A5B899C();
      swift_bridgeObjectRelease();
      CoreODILogger.error(_:category:)(0x20726F727245, 0xE600000000000000, &v18);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      LOBYTE(v20[0]) = 105;
      v10 = v2;
      ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001BLL, 0x800000020A5DE5C0, (char *)v2, (unsigned __int8 *)v20, 0, 0, 0xD00000000000005CLL, 0x800000020A5DE540, 0xD000000000000017, 0x800000020A5DE5A0, 136);

      swift_willThrow();
      return sub_20A44CFC4(v7, v8);
    }
    else
    {
      v16 = v20[1];
      v17 = v20[0];
      v11 = v22;
      v12 = v23;
      v14 = v24;
      v15 = v21;
      v13 = *(_QWORD *)(v1 + 200);
      *(_QWORD *)&v20[0] = *(_QWORD *)(v1 + 192);
      *((_QWORD *)&v20[0] + 1) = v13;
      swift_bridgeObjectRetain();
      sub_20A5B8E94();
      swift_bridgeObjectRelease();
      v18 = 0xD000000000000001;
      v19 = 0x800000020A5DE5E0;
      swift_bridgeObjectRetain();
      sub_20A5B899C();
      swift_bridgeObjectRelease();
      CoreODILogger.debug(_:category:)(0xD000000000000010, 0x800000020A5DE5E0, &v18);
      swift_bridgeObjectRelease();
      sub_20A44CFC4(v7, v8);
      result = swift_bridgeObjectRelease();
      *(_OWORD *)a1 = v17;
      *(_OWORD *)(a1 + 16) = v16;
      *(_QWORD *)(a1 + 32) = v15;
      *(_QWORD *)(a1 + 40) = v11;
      *(_QWORD *)(a1 + 48) = v12;
      *(_QWORD *)(a1 + 56) = v14;
    }
  }
  return result;
}

uint64_t sub_20A4A2118(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  v2[5] = a1;
  v2[6] = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v2[7] = v3;
  *v3 = v2;
  v3[1] = sub_20A4A2160;
  return sub_20A4A1B44();
}

uint64_t sub_20A4A2160(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  v3 = (_QWORD *)*v2;
  v3[2] = v2;
  v3[3] = a1;
  v3[4] = a2;
  v3[8] = a2;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A4A21BC()
{
  uint64_t v0;
  unsigned __int8 v2[9];

  if (*(_QWORD *)(v0 + 64))
  {
    sub_20A4A1DE8(*(_QWORD *)(v0 + 40));
    swift_bridgeObjectRelease();
  }
  else
  {
    v2[0] = 123;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000017, 0x800000020A5DE740, 0, v2, 0, 0, 0xD00000000000005CLL, 0x800000020A5DE540, 0xD000000000000015, 0x800000020A5DE760, 142);
    swift_willThrow();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4A228C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 144);
  swift_release();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for ProfileManager()
{
  return objc_opt_self();
}

uint64_t sub_20A4A22F0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 72) = v0;
  return swift_task_switch();
}

uint64_t sub_20A4A2308(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v7;
  uint64_t (*v8)(uint64_t, uint64_t);

  v3 = v2[9];
  v4 = *(_QWORD *)(v3 + 192);
  v2[10] = v4;
  if (v4)
  {
    v5 = *(_QWORD *)(v3 + 184);
    v8 = (uint64_t (*)(uint64_t, uint64_t))v2[1];
    swift_bridgeObjectRetain();
    return v8(v5, v4);
  }
  else if ((*(_BYTE *)(v3 + 168) & 1) != 0)
  {
    sub_20A498124(&qword_2545FA508, a2, (uint64_t (*)(uint64_t))type metadata accessor for ServerTimeSeedProvider, (uint64_t)&unk_20A5C0958);
    v7 = (_QWORD *)swift_task_alloc();
    v2[16] = v7;
    *v7 = v2;
    v7[1] = sub_20A4A2870;
    return sub_20A5B917C();
  }
  else
  {
    *(_BYTE *)(v3 + 168) = 1;
    swift_retain_n();
    return swift_task_switch();
  }
}

uint64_t sub_20A4A2430()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  v1 = v0[9];
  v2 = (_QWORD *)swift_task_alloc();
  v0[11] = v2;
  v2[2] = 4000000000;
  v2[3] = &unk_2545FA500;
  v2[4] = v1;
  v2[5] = &unk_2545FA4F0;
  v2[6] = 0;
  v3 = (_QWORD *)swift_task_alloc();
  v0[12] = v3;
  *v3 = v0;
  v3[1] = sub_20A4A24F8;
  return sub_20A5B9200();
}

uint64_t sub_20A4A24F8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release_n();
    swift_task_dealloc();
    v3 = v2[6];
    v2[14] = v2[5];
    v2[15] = v3;
  }
  return swift_task_switch();
}

uint64_t sub_20A4A258C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v6)(uint64_t, uint64_t);

  v1 = v0[15];
  v2 = v0[9];
  *(_QWORD *)(v2 + 184) = v0[14];
  *(_QWORD *)(v2 + 192) = v1;
  swift_bridgeObjectRelease();
  v3 = *(_QWORD *)(v2 + 184);
  v4 = *(_QWORD *)(v2 + 192);
  swift_bridgeObjectRetain();
  sub_20A4A2A7C(v2);
  v6 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  swift_bridgeObjectRetain();
  return v6(v3, v4);
}

uint64_t sub_20A4A25FC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A4A263C()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v13)(_QWORD, _QWORD);
  _QWORD v14[2];
  uint64_t v15;
  unint64_t v16;

  v1 = *(void **)(v0 + 104);
  swift_release_n();
  *(_QWORD *)(v0 + 56) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52D0);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v3 = *(_QWORD *)(v0 + 72);

    v4 = *(_QWORD *)(v3 + 208);
    v15 = *(_QWORD *)(v3 + 200);
    v16 = v4;
    LOBYTE(v14[0]) = 1;
    swift_bridgeObjectRetain();
    CoreODILogger.error(_:category:)(0xD00000000000001CLL, 0x800000020A5DE700, v14);
    swift_bridgeObjectRelease();

  }
  else
  {
    v5 = *(void **)(v0 + 104);
    v6 = *(_QWORD *)(v0 + 72);

    LOBYTE(v15) = 0;
    v7 = v5;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000012, 0x800000020A5DE6C0, (char *)v5, (unsigned __int8 *)&v15, 0, 0, 0xD00000000000005CLL, 0x800000020A5DE540, 0xD000000000000013, 0x800000020A5DE6E0, 196);
    v9 = v8;

    v10 = *(_QWORD *)(v6 + 208);
    v14[0] = *(_QWORD *)(v6 + 200);
    v14[1] = v10;
    v15 = 0x203A726F727245;
    v16 = 0xE700000000000000;
    swift_getErrorValue();
    swift_bridgeObjectRetain();
    sub_20A5B923C();
    sub_20A5B899C();
    swift_bridgeObjectRelease();
    v11 = v15;
    LOBYTE(v15) = 1;
    CoreODILogger.error(_:category:)(v11, v16, &v15);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
  }
  sub_20A4A2A7C(*(_QWORD *)(v0 + 72));
  v13 = *(uint64_t (**)(_QWORD, _QWORD))(v0 + 8);
  swift_bridgeObjectRetain();
  return v13(0, 0);
}

uint64_t sub_20A4A2870()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A4A28C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v5)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v1 + 184);
  v2 = *(_QWORD *)(v1 + 192);
  v5 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v5(v3, v2);
}

uint64_t sub_20A4A2918(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t *v9;
  unint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5178);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(a2 + 168) != 1)
    return sub_20A5B8B10();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  v9 = (unint64_t *)(a2 + 176);
  swift_beginAccess();
  v10 = *(_QWORD *)(a2 + 176);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a2 + 176) = v10;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v10 = sub_20A4701C0(0, *(_QWORD *)(v10 + 16) + 1, 1, v10);
    *v9 = v10;
  }
  v13 = *(_QWORD *)(v10 + 16);
  v12 = *(_QWORD *)(v10 + 24);
  if (v13 >= v12 >> 1)
  {
    v10 = sub_20A4701C0(v12 > 1, v13 + 1, 1, v10);
    *v9 = v10;
  }
  *(_QWORD *)(v10 + 16) = v13 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v10+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v13, v8, v4);
  return swift_endAccess();
}

uint64_t sub_20A4A2A7C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5178);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(a1 + 168) = 0;
  result = swift_beginAccess();
  v8 = *(_QWORD *)(a1 + 176);
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    v10 = v8 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v11 = *(_QWORD *)(v3 + 72);
    v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    swift_bridgeObjectRetain();
    do
    {
      v12(v6, v10, v2);
      sub_20A5B8B10();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
      v10 += v11;
      --v9;
    }
    while (v9);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_20A4A2B74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_20A4A2B8C()
{
  uint64_t v0;
  _QWORD *v1;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)(v0 + 24) + 112), *(_QWORD *)(*(_QWORD *)(v0 + 24) + 136));
  *(_BYTE *)(v0 + 64) = 1;
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  *v1 = v0;
  v1[1] = sub_20A4A2BF4;
  return sub_20A4F68D0((_BYTE *)(v0 + 64));
}

uint64_t sub_20A4A2BF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(*v3 + 40) = v2;
  swift_task_dealloc();
  if (!v2)
  {
    *(_QWORD *)(v6 + 48) = a2;
    *(_QWORD *)(v6 + 56) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_20A4A2C6C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4A2C78()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for ServerTimeSeedProvider()
{
  return objc_opt_self();
}

uint64_t sub_20A4A2CDC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_20A498124(&qword_2545FA4D8, a2, (uint64_t (*)(uint64_t))type metadata accessor for ProfileManager, (uint64_t)&unk_20A5C099C);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_20A4A2D18()
{
  unint64_t result;

  result = qword_253EB4F60;
  if (!qword_253EB4F60)
  {
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for AugmentedProfile, &type metadata for AugmentedProfile);
    atomic_store(result, (unint64_t *)&qword_253EB4F60);
  }
  return result;
}

uint64_t sub_20A4A2D5C(uint64_t a1)
{
  uint64_t *v1;

  return sub_20A44AAF0(a1, v1[2], v1[3], v1[4]);
}

unint64_t sub_20A4A2D68()
{
  unint64_t result;

  result = qword_253EB4860;
  if (!qword_253EB4860)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_253EB4860);
  }
  return result;
}

uint64_t sub_20A4A2DA4(uint64_t a1)
{
  destroy for BucketSelector(a1);
  return a1;
}

uint64_t sub_20A4A2DDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_20A45A37C;
  v5[3] = v4;
  v5[4] = v1 + 24;
  v5[2] = a1;
  return swift_task_switch();
}

uint64_t sub_20A4A2E50(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_20A4A2ED8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_20A4A2F60(uint64_t a1)
{
  return sub_20A4A30A4(a1, sub_20A5056D0);
}

uint64_t sub_20A4A2F6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_20A45A37C;
  v4[2] = a1;
  v4[3] = v1;
  return swift_task_switch();
}

uint64_t sub_20A4A2FCC(uint64_t a1)
{
  uint64_t v1;

  return sub_20A4A2918(a1, v1);
}

uint64_t objectdestroyTm_0()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_20A4A3034()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_20A4597C0;
  v3[2] = v2;
  v3[3] = v0 + 24;
  return swift_task_switch();
}

uint64_t sub_20A4A3098(uint64_t a1)
{
  return sub_20A4A30A4(a1, sub_20A5059BC);
}

uint64_t sub_20A4A30A4(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t getEnumTagSinglePayload for DIPCertUsage(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF0)
    goto LABEL_17;
  if (a2 + 16 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 16) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 16;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 16;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 16;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x11;
  v8 = v6 - 17;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DIPCertUsage(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 16 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 16) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF0)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEF)
    return ((uint64_t (*)(void))((char *)&loc_20A4A3198 + 4 * byte_20A5C09E5[v4]))();
  *a1 = a2 + 16;
  return ((uint64_t (*)(void))((char *)sub_20A4A31CC + 4 * byte_20A5C09E0[v4]))();
}

uint64_t sub_20A4A31CC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A4A31D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A4A31DCLL);
  return result;
}

uint64_t sub_20A4A31E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A4A31F0);
  *(_BYTE *)result = a2 + 16;
  return result;
}

uint64_t sub_20A4A31F4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A4A31FC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DIPCertUsage()
{
  return &type metadata for DIPCertUsage;
}

void sub_20A4A3218(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_20A4A325C()
{
  return 917760;
}

uint64_t sub_20A4A3460(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_20A4A34A0 + 4 * byte_20A5C09FB[a1]))(0x6449746E65696C63, 0xEE00797469746E65);
}

unint64_t sub_20A4A34A0()
{
  return 0xD000000000000013;
}

uint64_t sub_20A4A3630(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_20A4A3460(*a1);
  v5 = v4;
  if (v3 == sub_20A4A3460(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_20A5B91AC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_20A4A36B8()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_20A5B929C();
  sub_20A4A3460(v1);
  sub_20A5B8978();
  swift_bridgeObjectRelease();
  return sub_20A5B92CC();
}

uint64_t sub_20A4A3718()
{
  unsigned __int8 *v0;

  sub_20A4A3460(*v0);
  sub_20A5B8978();
  return swift_bridgeObjectRelease();
}

uint64_t sub_20A4A3758()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_20A5B929C();
  sub_20A4A3460(v1);
  sub_20A5B8978();
  swift_bridgeObjectRelease();
  return sub_20A5B92CC();
}

uint64_t sub_20A4A37B4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_20A4A3958();
  *a1 = result;
  return result;
}

uint64_t sub_20A4A37E0@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_20A4A3460(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_20A4A380C()
{
  unint64_t result;

  result = qword_2545FA520;
  if (!qword_2545FA520)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C0AB8, &type metadata for DIPCertUsage);
    atomic_store(result, (unint64_t *)&qword_2545FA520);
  }
  return result;
}

uint64_t sub_20A4A3850(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_20A4A3888 + 4 * byte_20A5C0A0C[a1]))(0xD000000000000019, 0x800000020A5DECF0);
}

uint64_t sub_20A4A3958()
{
  unint64_t v0;

  v0 = sub_20A5B91F4();
  swift_bridgeObjectRelease();
  if (v0 >= 0x11)
    return 17;
  else
    return v0;
}

char *sub_20A4A39A8(unint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t inited;
  unint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  unsigned __int8 v15;
  char *v16;
  _DWORD v18[8];
  char *v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  unint64_t v23;
  SecTrustRef v24[15];

  v24[14] = *(SecTrustRef *)MEMORY[0x24BDAC8D0];
  v5 = type metadata accessor for ODISignpost();
  v7 = MEMORY[0x24BDAC7A8](v5, v6);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)v18 - v9;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB5280);
  inited = swift_initStackObject();
  v21 = xmmword_20A5BA9A0;
  *(_OWORD *)(inited + 16) = xmmword_20A5BA9A0;
  *(_BYTE *)(inited + 32) = 17;
  *(_QWORD *)(inited + 64) = &type metadata for DIPCertUsage;
  *(_BYTE *)(inited + 40) = a2;
  v12 = sub_20A469DC4(inited);
  v22 = v2;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v13 = sub_20A5B8FCC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v13 >= 1)
  {
    v23 = v12;
    sub_20A4A3218(a2);
    v15 = v14;
    swift_bridgeObjectRelease();
    v16 = (char *)&loc_20A4A3AD4 + *((int *)qword_20A4A4B50 + v15);
    v18[7] = a2;
    v19 = v10;
    v20 = v5;
    __asm { BR              X10 }
  }
  LOWORD(v24[0]) = 210;
  DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000030, 0x800000020A5DE780, 0, (unsigned __int16 *)v24, 0, v12, 0xD00000000000006DLL, 0x800000020A5DE7C0, 0xD000000000000018, 0x800000020A5DE830, 266);
  swift_bridgeObjectRelease();
  swift_willThrow();
  return v10;
}

unint64_t sub_20A4A4B60()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2545F9F70;
  if (!qword_2545F9F70)
  {
    type metadata accessor for CFError(255);
    result = MEMORY[0x20BD26CEC](MEMORY[0x24BDCFD90], v1);
    atomic_store(result, (unint64_t *)&qword_2545F9F70);
  }
  return result;
}

unint64_t sub_20A4A4BA8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2545FA528;
  if (!qword_2545FA528)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253EB5130);
    result = MEMORY[0x20BD26CEC](MEMORY[0x24BDCFBF8], v1);
    atomic_store(result, (unint64_t *)&qword_2545FA528);
  }
  return result;
}

id sub_20A4A4BF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  void *v6;
  id result;
  uint64_t v8;

  v0 = sub_20A5B8708();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16F0]), sel_init);
  sub_20A5B8678();
  v6 = (void *)sub_20A5B869C();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  objc_msgSend(v5, sel_setLocale_, v6);

  result = objc_msgSend(v5, sel_setMaximumFractionDigits_, 2);
  qword_2545FA530 = (uint64_t)v5;
  return result;
}

uint64_t sub_20A4A4CE4()
{
  uint64_t v0;

  v0 = sub_20A5B8804();
  __swift_allocate_value_buffer(v0, qword_253EB4A20);
  __swift_project_value_buffer(v0, (uint64_t)qword_253EB4A20);
  return sub_20A5B87F8();
}

id sub_20A4A4D50()
{
  return sub_20A4A4DA8(&OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession__urlSession, 0xD00000000000003CLL, 0x800000020A5DEF80, &OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_nsurlSessionConfiguration);
}

id sub_20A4A4D7C()
{
  return sub_20A4A4DA8(&OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession__anonymousURLSession, 0xD000000000000045, 0x800000020A5DEF30, &OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_anonymousNSURLSessionConfiguration);
}

id sub_20A4A4DA8(uint64_t *a1, uint64_t a2, unint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  char v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *a1;
  v6 = *(void **)(v4 + *a1);
  if (v6)
  {
    v7 = *(id *)(v4 + *a1);
  }
  else
  {
    v11 = v4;
    v12 = *(_QWORD *)(v4 + OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_logger + 8);
    v18 = *(_QWORD *)(v4 + OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_logger);
    v19 = v12;
    v17 = 14;
    swift_bridgeObjectRetain();
    CoreODILogger.fault(_:category:)(a2, a3, &v17);
    swift_bridgeObjectRelease();
    v13 = objc_msgSend((id)objc_opt_self(), sel_sessionWithConfiguration_delegate_delegateQueue_, *(_QWORD *)(v4 + *a4), v4, 0);
    v14 = *(void **)(v4 + v5);
    *(_QWORD *)(v11 + v5) = v13;
    v7 = v13;

    v6 = 0;
  }
  v15 = v6;
  return v7;
}

uint64_t sub_20A4A4E9C()
{
  char *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  void *v6;
  _QWORD v8[4];

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_logger + 8];
  v8[2] = *(_QWORD *)&v0[OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_logger];
  v8[3] = v1;
  swift_bridgeObjectRetain();
  sub_20A5B8E94();
  v2 = objc_msgSend(v0, sel_debugDescription);
  v3 = sub_20A5B8900();
  v5 = v4;
  swift_bridgeObjectRelease();

  v8[0] = v3;
  v8[1] = v5;
  sub_20A5B899C();
  v6 = (void *)MEMORY[0x20BD26E90](&v0[OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_owner]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB4488);
  sub_20A5B8D2C();

  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  sub_20A5B8D2C();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  LOBYTE(v8[0]) = 14;
  CoreODILogger.debug(_:category:)(v3, v5, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_unknownObjectWeakAssign();
}

char *sub_20A4A5030(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  char *v3;
  objc_class *ObjectType;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  char *v10;
  char *v11;
  char *v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char *v20;
  void *v21;
  double v22;
  id v23;
  uint64_t v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  char *v30;
  _QWORD *v31;
  id v32;
  void *v33;
  char *v34;
  id v35;
  uint64_t v36;
  void *v37;
  id v38;
  uint64_t v39;
  void *v40;
  objc_super v42;
  _BYTE v43[16];
  uint64_t v44;
  uint64_t v45;

  v3 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v6 = &unk_2545FA000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession__urlSession] = 0;
  v7 = &unk_2545FA000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession__anonymousURLSession] = 0;
  v8 = OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_state;
  type metadata accessor for DIPHTTPSession.SessionState();
  v9 = (_QWORD *)swift_allocObject();
  v10 = v1;
  swift_defaultActor_initialize();
  v9[14] = 0;
  v9[15] = 0;
  *(_QWORD *)&v3[v8] = v9;
  v11 = &v10[OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_logger];
  *(_QWORD *)v11 = 45;
  *((_QWORD *)v11 + 1) = 0xE100000000000000;
  swift_unknownObjectWeakInit();
  v12 = &v10[OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_configuration];
  v13 = *(_OWORD *)a1;
  v14 = *(_OWORD *)(a1 + 32);
  *((_OWORD *)v12 + 1) = *(_OWORD *)(a1 + 16);
  *((_OWORD *)v12 + 2) = v14;
  *(_OWORD *)v12 = v13;
  v15 = *(_QWORD *)(a1 + 8);
  v16 = __OFADD__(v15, 1);
  v17 = v15 + 1;
  if (v16)
  {
    __break(1u);
LABEL_12:
    swift_once();
    goto LABEL_4;
  }
  v18 = *(_BYTE *)(a1 + 24);
  v19 = *(_QWORD *)(a1 + 16);
  v20 = &v10[OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_retrier];
  *(_QWORD *)v20 = v17;
  *((_QWORD *)v20 + 1) = v19;
  v20[16] = v18;
  *((_QWORD *)v20 + 3) = 0;
  v20[32] = 1;
  v21 = (void *)objc_opt_self();
  sub_20A4AC374(a1);
  v3 = (char *)objc_msgSend(v21, sel_defaultSessionConfiguration);
  v9 = objc_msgSend(v21, sel_defaultSessionConfiguration);
  v22 = *(double *)a1;
  objc_msgSend(v3, sel_setTimeoutIntervalForRequest_, *(double *)a1);
  objc_msgSend(v9, sel_setTimeoutIntervalForRequest_, v22);
  objc_msgSend(v3, sel_setURLCache_, 0);
  objc_msgSend(v9, sel_setURLCache_, 0);
  objc_msgSend(v3, sel_setRequestCachePolicy_, 1);
  objc_msgSend(v9, sel_setRequestCachePolicy_, 1);
  sub_20A459C88(a1 + 32, (uint64_t)v43, &qword_253EB50E8);
  sub_20A459C88((uint64_t)v43, (uint64_t)&v44, &qword_253EB50E8);
  v8 = v45;
  if (!v45)
  {
    sub_20A4AC39C(a1);
    if ((*(_BYTE *)(a1 + 26) & 1) == 0)
      goto LABEL_10;
    goto LABEL_7;
  }
  v2 = v44;
  sub_20A4AC374(a1);
  if (qword_253EB5040 != -1)
    goto LABEL_12;
LABEL_4:
  v23 = (id)qword_253EBC880;
  sub_20A5B8C48();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52C0);
  v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_20A5BA9A0;
  *(_QWORD *)(v24 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v24 + 64) = sub_20A450420();
  *(_QWORD *)(v24 + 32) = v2;
  *(_QWORD *)(v24 + 40) = v8;
  sub_20A4AC374(a1);
  sub_20A5B87B0();

  swift_bridgeObjectRelease();
  v25 = (void *)sub_20A5B88F4();
  objc_msgSend(v3, sel_set_sourceApplicationBundleIdentifier_, v25);

  v26 = (void *)sub_20A5B88F4();
  sub_20A4AC39C(a1);
  objc_msgSend(v9, sel_set_sourceApplicationBundleIdentifier_, v26);

  sub_20A4AC39C(a1);
  v7 = (_QWORD *)&unk_2545FA000;
  v6 = (_QWORD *)&unk_2545FA000;
  if ((*(_BYTE *)(a1 + 26) & 1) == 0)
    goto LABEL_10;
LABEL_7:
  v27 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v28 = objc_msgSend(v27, sel_bundleIdentifier);

  if (v28)
  {
    sub_20A5B8900();

    v28 = (id)sub_20A5B88F4();
    swift_bridgeObjectRelease();
  }
  v29 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE0ACD8]), sel_initWithIdentifier_, v28);

  objc_msgSend(v3, sel_set_appleIDContext_, v29);
LABEL_10:
  *(_QWORD *)&v10[OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_nsurlSessionConfiguration] = v3;
  *(_QWORD *)&v10[OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_anonymousNSURLSessionConfiguration] = v9;
  v30 = v3;
  v31 = v9;

  v42.receiver = v10;
  v42.super_class = ObjectType;
  v32 = objc_msgSendSuper2(&v42, sel_init);
  v33 = (void *)objc_opt_self();
  v34 = (char *)v32;
  v35 = objc_msgSend(v33, sel_sessionWithConfiguration_delegate_delegateQueue_, v30, v34, 0);
  v36 = v6[167];
  v37 = *(void **)&v34[v36];
  *(_QWORD *)&v34[v36] = v35;

  v38 = objc_msgSend(v33, sel_sessionWithConfiguration_delegate_delegateQueue_, v31, v34, 0);
  v39 = v7[168];
  v40 = *(void **)&v34[v39];
  *(_QWORD *)&v34[v39] = v38;

  return v34;
}

uint64_t sub_20A4A5560()
{
  void *v0;
  objc_class *ObjectType;
  id v2;
  id v3;
  id v4;
  objc_super v6;
  uint64_t v7;
  unint64_t v8;

  ObjectType = (objc_class *)swift_getObjectType();
  v7 = 0;
  v8 = 0xE000000000000000;
  sub_20A5B8E94();
  v6.receiver = v0;
  v6.super_class = ObjectType;
  v2 = objc_msgSendSuper2(&v6, sel_description);
  sub_20A5B8900();

  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  sub_20A5B9170();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  sub_20A5B8BDC();
  sub_20A5B899C();
  v3 = sub_20A4A4DA8(&OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession__urlSession, 0xD00000000000003CLL, 0x800000020A5DEF80, &OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_nsurlSessionConfiguration);
  v4 = objc_msgSend(v3, sel_sessionDescription);

  if (v4)
  {
    sub_20A5B8900();

  }
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  return v7;
}

id sub_20A4A5758(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  char v13;
  uint64_t v14;
  uint64_t v15;

  v2 = v1;
  if ((a1 & 1) != 0)
  {
    v3 = OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession__anonymousURLSession;
    v4 = *(void **)(v1 + OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession__anonymousURLSession);
    if (!v4)
    {
      v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_logger + 8);
      v14 = *(_QWORD *)(v1 + OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_logger);
      v15 = v5;
      v13 = 14;
      swift_bridgeObjectRetain();
      CoreODILogger.fault(_:category:)(0xD000000000000045, 0x800000020A5DEF30, &v13);
      swift_bridgeObjectRelease();
      v6 = objc_msgSend((id)objc_opt_self(), sel_sessionWithConfiguration_delegate_delegateQueue_, *(_QWORD *)(v1 + OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_anonymousNSURLSessionConfiguration), v1, 0);
LABEL_7:
      v9 = v6;
      v10 = *(void **)(v1 + v3);
      *(_QWORD *)(v2 + v3) = v9;
      v7 = v9;

      v4 = 0;
      goto LABEL_8;
    }
  }
  else
  {
    v3 = OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession__urlSession;
    v4 = *(void **)(v1 + OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession__urlSession);
    if (!v4)
    {
      v8 = *(_QWORD *)(v1 + OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_logger + 8);
      v14 = *(_QWORD *)(v1 + OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_logger);
      v15 = v8;
      v13 = 14;
      swift_bridgeObjectRetain();
      CoreODILogger.fault(_:category:)(0xD00000000000003CLL, 0x800000020A5DEF80, &v13);
      swift_bridgeObjectRelease();
      v6 = objc_msgSend((id)objc_opt_self(), sel_sessionWithConfiguration_delegate_delegateQueue_, *(_QWORD *)(v1 + OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_nsurlSessionConfiguration), v1, 0);
      goto LABEL_7;
    }
  }
  v7 = v4;
LABEL_8:
  v11 = v4;
  return v7;
}

uint64_t sub_20A4A58E4(uint64_t a1, uint64_t a2, char a3, char a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 + 24) = a2;
  *(_QWORD *)(v5 + 32) = v4;
  *(_BYTE *)(v5 + 57) = a4;
  *(_BYTE *)(v5 + 56) = a3;
  *(_QWORD *)(v5 + 16) = a1;
  return swift_task_switch();
}

void sub_20A4A5908()
{
  uint64_t v0;
  char v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  int64_t v12;
  void *v13;
  void *v14;
  void *v15;
  int64_t v16;
  uint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = *(_BYTE *)(v0 + 56);
  v2 = objc_allocWithZone(MEMORY[0x24BDD16B0]);
  v3 = (void *)sub_20A5B8474();
  v4 = objc_msgSend(v2, sel_initWithURL_, v3);
  *(_QWORD *)(v0 + 40) = v4;

  if ((v1 & 1) == 0)
  {
    v19 = swift_task_alloc();
    *(_QWORD *)(v0 + 48) = v19;
    *(_QWORD *)v19 = v0;
    *(_QWORD *)(v19 + 8) = sub_20A4A5BB0;
    v20 = *(_QWORD *)(v0 + 32);
    *(_BYTE *)(v19 + 192) = *(_BYTE *)(v0 + 57);
    *(_QWORD *)(v19 + 72) = v4;
    *(_QWORD *)(v19 + 80) = v20;
    swift_task_switch();
    return;
  }
  v5 = *(_QWORD *)(v0 + 24);
  objc_msgSend(*(id *)(v0 + 40), sel_setCachePolicy_, 1);
  if (!v5)
  {
LABEL_25:
    (*(void (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 40));
    return;
  }
  v6 = *(_QWORD *)(v0 + 24);
  v7 = *(_QWORD *)(v6 + 64);
  v21 = v6 + 64;
  v8 = -1;
  v9 = -1 << *(_BYTE *)(v6 + 32);
  if (-v9 < 64)
    v8 = ~(-1 << -(char)v9);
  v10 = v8 & v7;
  v11 = (unint64_t)(63 - v9) >> 6;
  swift_bridgeObjectRetain();
  v12 = 0;
  while (1)
  {
    if (v10)
    {
      v10 &= v10 - 1;
      goto LABEL_7;
    }
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v16 >= v11)
      goto LABEL_24;
    v17 = *(_QWORD *)(v21 + 8 * v16);
    ++v12;
    if (!v17)
    {
      v12 = v16 + 1;
      if (v16 + 1 >= v11)
        goto LABEL_24;
      v17 = *(_QWORD *)(v21 + 8 * v12);
      if (!v17)
      {
        v12 = v16 + 2;
        if (v16 + 2 >= v11)
          goto LABEL_24;
        v17 = *(_QWORD *)(v21 + 8 * v12);
        if (!v17)
          break;
      }
    }
LABEL_22:
    v10 = (v17 - 1) & v17;
LABEL_7:
    v13 = *(void **)(v0 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14 = (void *)sub_20A5B88F4();
    swift_bridgeObjectRelease();
    v15 = (void *)sub_20A5B88F4();
    swift_bridgeObjectRelease();
    objc_msgSend(v13, sel_setValue_forHTTPHeaderField_, v14, v15);

  }
  v18 = v16 + 3;
  if (v18 >= v11)
  {
LABEL_24:
    swift_release();
    goto LABEL_25;
  }
  v17 = *(_QWORD *)(v21 + 8 * v18);
  if (v17)
  {
    v12 = v18;
    goto LABEL_22;
  }
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v11)
      goto LABEL_24;
    v17 = *(_QWORD *)(v21 + 8 * v12);
    ++v18;
    if (v17)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
}

uint64_t sub_20A4A5BB0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

void sub_20A4A5C04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  int64_t v8;
  void *v9;
  void *v10;
  void *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 24);
  objc_msgSend(*(id *)(v0 + 40), sel_setCachePolicy_, 1);
  if (!v1)
  {
LABEL_23:
    (*(void (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 40));
    return;
  }
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v2 + 64);
  v15 = v2 + 64;
  v4 = -1;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  if (-v5 < 64)
    v4 = ~(-1 << -(char)v5);
  v6 = v4 & v3;
  v7 = (unint64_t)(63 - v5) >> 6;
  swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v6 &= v6 - 1;
      goto LABEL_6;
    }
    v12 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v12 >= v7)
      goto LABEL_22;
    v13 = *(_QWORD *)(v15 + 8 * v12);
    ++v8;
    if (!v13)
    {
      v8 = v12 + 1;
      if (v12 + 1 >= v7)
        goto LABEL_22;
      v13 = *(_QWORD *)(v15 + 8 * v8);
      if (!v13)
      {
        v8 = v12 + 2;
        if (v12 + 2 >= v7)
          goto LABEL_22;
        v13 = *(_QWORD *)(v15 + 8 * v8);
        if (!v13)
          break;
      }
    }
LABEL_21:
    v6 = (v13 - 1) & v13;
LABEL_6:
    v9 = *(void **)(v0 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10 = (void *)sub_20A5B88F4();
    swift_bridgeObjectRelease();
    v11 = (void *)sub_20A5B88F4();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_setValue_forHTTPHeaderField_, v10, v11);

  }
  v14 = v12 + 3;
  if (v14 >= v7)
  {
LABEL_22:
    swift_release();
    goto LABEL_23;
  }
  v13 = *(_QWORD *)(v15 + 8 * v14);
  if (v13)
  {
    v8 = v14;
    goto LABEL_21;
  }
  while (1)
  {
    v8 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v8 >= v7)
      goto LABEL_22;
    v13 = *(_QWORD *)(v15 + 8 * v8);
    ++v14;
    if (v13)
      goto LABEL_21;
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_20A4A5E04(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v3 + 192) = a2;
  *(_QWORD *)(v3 + 72) = a1;
  *(_QWORD *)(v3 + 80) = v2;
  return swift_task_switch();
}

uint64_t sub_20A4A5E20()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;

  if ((*(_BYTE *)(v0 + 192) & 1) != 0
    || *(_BYTE *)(*(_QWORD *)(v0 + 80) + OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_configuration + 25) != 1)
  {
    v2 = *(void **)(v0 + 72);
    v3 = objc_msgSend((id)objc_opt_self(), sel__deviceLanguage);
    v4 = (void *)sub_20A5B88F4();
    objc_msgSend(v2, sel_setValue_forHTTPHeaderField_, v3, v4);

    v5 = objc_msgSend(v2, sel_HTTPBody);
    if (v5)
    {
      v6 = v5;
      sub_20A5B8564();
      v8 = v7;

      __asm { BR              X10 }
    }
    v9 = *(void **)(v0 + 72);
    *(_QWORD *)(v0 + 64) = 0;
    sub_20A5B9170();
    sub_20A5B899C();
    swift_bridgeObjectRelease();
    v10 = (void *)sub_20A5B88F4();
    swift_bridgeObjectRelease();
    v11 = (void *)sub_20A5B88F4();
    objc_msgSend(v9, sel_setValue_forHTTPHeaderField_, v10, v11);

    if (qword_2545F9978 != -1)
      swift_once();
    *(_QWORD *)(v0 + 96) = qword_25460FF78;
  }
  else
  {
    v1 = swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v1;
    *(_QWORD *)v1 = v0;
    *(_QWORD *)(v1 + 8) = sub_20A4A60BC;
    *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 72);
  }
  return swift_task_switch();
}

uint64_t sub_20A4A60BC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A4A6110()
{
  _QWORD *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;

  v1 = (void *)v0[9];
  v2 = objc_msgSend((id)objc_opt_self(), sel__deviceLanguage);
  v3 = (void *)sub_20A5B88F4();
  objc_msgSend(v1, sel_setValue_forHTTPHeaderField_, v2, v3);

  v4 = objc_msgSend(v1, sel_HTTPBody);
  if (v4)
  {
    v5 = v4;
    sub_20A5B8564();
    v7 = v6;

    __asm { BR              X10 }
  }
  v8 = (void *)v0[9];
  v0[8] = 0;
  sub_20A5B9170();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  v9 = (void *)sub_20A5B88F4();
  swift_bridgeObjectRelease();
  v10 = (void *)sub_20A5B88F4();
  objc_msgSend(v8, sel_setValue_forHTTPHeaderField_, v9, v10);

  if (qword_2545F9978 != -1)
    swift_once();
  v0[12] = qword_25460FF78;
  return swift_task_switch();
}

uint64_t sub_20A4A634C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[12];
  v2 = *(_QWORD *)(v1 + 120);
  if (v2)
  {
    v0[16] = *(_QWORD *)(v1 + 112);
    v0[17] = v2;
    swift_bridgeObjectRetain();
  }
  else
  {
    v3 = (_QWORD *)swift_task_alloc();
    v0[13] = v3;
    *v3 = v0;
    v3[1] = sub_20A4A63C8;
  }
  return swift_task_switch();
}

uint64_t sub_20A4A63C8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 112) = a1;
  *(_QWORD *)(v3 + 120) = a2;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A4A6424()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[15];
  v2 = v0[12];
  *(_QWORD *)(v2 + 112) = v0[14];
  *(_QWORD *)(v2 + 120) = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v3 = v0[15];
  v0[16] = v0[14];
  v0[17] = v3;
  return swift_task_switch();
}

uint64_t sub_20A4A647C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;

  v1 = *(void **)(v0 + 72);
  v2 = (void *)sub_20A5B88F4();
  swift_bridgeObjectRelease();
  v3 = (void *)sub_20A5B88F4();
  objc_msgSend(v1, sel_setValue_forHTTPHeaderField_, v2, v3);

  if (qword_253EB4EB8 != -1)
    swift_once();
  *(_QWORD *)(v0 + 144) = qword_253EB4EB0;
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_20A4A6550()
{
  uint64_t v0;
  _QWORD *v2;

  if ((*(_BYTE *)(*(_QWORD *)(v0 + 144) + 168) & 1) != 0)
    return swift_task_switch();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 152) = v2;
  *v2 = v0;
  v2[1] = sub_20A4A65C0;
  return sub_20A4BBF60();
}

uint64_t sub_20A4A65C0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A4A6610()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  v1 = v0[18];
  sub_20A4AB838();
  v2 = (_QWORD *)swift_task_alloc();
  v0[20] = v2;
  v2[2] = v1;
  v2[3] = 0xD000000000000010;
  v2[4] = 0x800000020A5DF480;
  v3 = (_QWORD *)swift_task_alloc();
  v0[21] = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB50E8);
  *v3 = v0;
  v3[1] = sub_20A4A66F4;
  return sub_20A5B917C();
}

uint64_t sub_20A4A66F4()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  *(_OWORD *)(v1 + 176) = *(_OWORD *)(v1 + 16);
  return swift_task_switch();
}

uint64_t sub_20A4A6760()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_20A4A679C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;

  if (*(_QWORD *)(v0 + 184))
  {
    v1 = *(void **)(v0 + 72);
    v2 = (void *)sub_20A5B88F4();
    swift_bridgeObjectRelease();
    v3 = (void *)sub_20A5B88F4();
    objc_msgSend(v1, sel_setValue_forHTTPHeaderField_, v2, v3);

  }
  objc_msgSend(*(id *)(v0 + 72), sel_ak_addClientInfoHeader);
  v4 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v5 = (void *)sub_20A5B88F4();
  v6 = objc_msgSend(v4, sel_stringForKey_, v5);

  if (!v6)
    goto LABEL_5;
  v7 = sub_20A5B8900();
  v9 = v8;

  *(_QWORD *)(v0 + 32) = v7;
  *(_QWORD *)(v0 + 40) = v9;
  *(_QWORD *)(v0 + 48) = 1685025392;
  *(_QWORD *)(v0 + 56) = 0xE400000000000000;
  sub_20A49DBC0();
  v10 = sub_20A5B8D80();
  swift_bridgeObjectRelease();
  if (v10)
  {
LABEL_5:
    v11 = *(void **)(v0 + 72);
    v12 = (void *)sub_20A5B88F4();
    v13 = (void *)sub_20A5B88F4();
    objc_msgSend(v11, sel_setValue_forHTTPHeaderField_, v12, v13);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4A6978(uint64_t a1, char a2, char a3, _BYTE *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v5 + 50) = a3;
  *(_BYTE *)(v5 + 49) = a2;
  *(_QWORD *)(v5 + 88) = a1;
  *(_QWORD *)(v5 + 96) = v4;
  v7 = sub_20A5B8240();
  *(_QWORD *)(v5 + 104) = v7;
  *(_QWORD *)(v5 + 112) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v5 + 120) = swift_task_alloc();
  v8 = sub_20A5B84D4();
  *(_QWORD *)(v5 + 128) = v8;
  *(_QWORD *)(v5 + 136) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v5 + 144) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB4980);
  *(_QWORD *)(v5 + 152) = swift_task_alloc();
  *(_QWORD *)(v5 + 160) = swift_task_alloc();
  *(_BYTE *)(v5 + 51) = *a4;
  return swift_task_switch();
}

uint64_t sub_20A4A6A48()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char v18;
  char v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v27;
  id v28;
  uint64_t v29;
  void *v30;
  void *v31;
  void *v32;
  _BYTE *v33;
  void *v34;
  __int128 v35;
  __int128 v36;
  id v37;
  _BYTE *v38;
  id v39;
  _QWORD *v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t, uint64_t, uint64_t, uint64_t, char, uint64_t);
  uint64_t v45;
  unint64_t v46;

  v1 = *(void **)(v0 + 88);
  v45 = 0;
  v46 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_20A5B8E94();
  sub_20A5B899C();
  v2 = objc_msgSend(v1, sel_URL);
  if (v2)
  {
    v3 = v2;
    sub_20A5B848C();

    v4 = 0;
  }
  else
  {
    v4 = 1;
  }
  v5 = *(_QWORD *)(v0 + 152);
  v6 = *(_QWORD *)(v0 + 160);
  v7 = *(_QWORD *)(v0 + 128);
  v8 = *(_QWORD *)(v0 + 136);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v5, v4, 1, v7);
  sub_20A459C88(v5, v6, (uint64_t *)&unk_253EB4980);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  v10 = *(_QWORD *)(v0 + 160);
  if (v9)
  {
    sub_20A44CE2C(*(_QWORD *)(v0 + 160), (uint64_t *)&unk_253EB4980);
  }
  else
  {
    v12 = *(_QWORD *)(v0 + 136);
    v11 = *(_QWORD *)(v0 + 144);
    v13 = *(_QWORD *)(v0 + 128);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v12 + 16))(v11, *(_QWORD *)(v0 + 160), v13);
    sub_20A44CE2C(v10, (uint64_t *)&unk_253EB4980);
    sub_20A5B8444();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  v14 = *(_BYTE *)(v0 + 51);
  v15 = *(_QWORD *)(v0 + 120);
  v42 = *(_QWORD *)(v0 + 112);
  v43 = *(_QWORD *)(v0 + 104);
  v41 = *(_BYTE *)(v0 + 49);
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  v16 = v45;
  LOBYTE(v45) = v14;
  CoreODILogger.info(_:category:)(v16, v46, &v45);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_20A5B8204();
  LOBYTE(v45) = v14;
  v17 = sub_20A4A7080(v15, (unsigned __int8 *)&v45);
  v19 = v18;
  *(_QWORD *)(v0 + 168) = v17;
  (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v15, v43);
  if ((v41 & 1) != 0 || (v19 & 1) == 0)
  {
    if (v17)
    {
      v27 = qword_253EB4A50;
      v28 = v17;
      if (v27 != -1)
        swift_once();
      sub_20A4D7864(v28);
      if (v29)
      {
        v30 = *(void **)(v0 + 88);
        v31 = (void *)sub_20A5B88F4();
        swift_bridgeObjectRelease();
        v32 = (void *)sub_20A5B88F4();
        objc_msgSend(v30, sel_addValue_forHTTPHeaderField_, v31, v32);

      }
    }
  }
  else if (v17)
  {
    v20 = v17;
    v21 = objc_msgSend(v20, sel_data);
    v22 = sub_20A5B8564();
    v24 = v23;

    v25 = objc_msgSend(v20, sel_response);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t, uint64_t, id, uint64_t))(v0 + 8))(v22, v24, v25, 1);
  }
  v34 = *(void **)(v0 + 88);
  v33 = *(_BYTE **)(v0 + 96);
  v36 = *(_OWORD *)&v33[OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_retrier];
  v35 = *(_OWORD *)&v33[OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_retrier + 16];
  *(_BYTE *)(v0 + 48) = v33[OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_retrier + 32];
  v44 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char, uint64_t))((char *)&dword_2545FA458
                                                                                  + dword_2545FA458);
  *(_OWORD *)(v0 + 16) = v36;
  *(_OWORD *)(v0 + 32) = v35;
  v37 = v17;
  v38 = v33;
  v39 = v34;
  v40 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 176) = v40;
  *v40 = v0;
  v40[1] = sub_20A4A6F24;
  return v44(v0 + 56, v0 + 16, *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 88), *(_BYTE *)(v0 + 50), (uint64_t)v17);
}

uint64_t sub_20A4A6F24()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A4A6F88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v0 + 56);
  v1 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 72);
  v4 = *(unsigned __int8 *)(v0 + 80);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 8))(v2, v1, v3, v4);
}

uint64_t sub_20A4A7018()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_20A4A7080(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  void *v40;
  id v41;
  void *v42;
  unsigned __int8 v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  char v47;
  void *v48;
  void *v49;
  id v50;
  void *v51;
  void *v52;
  unsigned __int8 v53;
  id v54;
  uint64_t v55;
  id v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  int v69;
  char *v70;
  char *v71;
  char v72;
  void (*v73)(char *, uint64_t);
  uint64_t v74;
  id v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  id v81;
  uint64_t v82;
  id v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  int v108;
  char *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  __int128 v120;
  __int128 v121;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253EB4990);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v105 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_20A5B8630();
  v115 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8, v9);
  v113 = (char *)&v105 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = (char *)&v105 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB4980);
  v17 = MEMORY[0x24BDAC7A8](v15, v16);
  v19 = (char *)&v105 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v17, v20);
  v23 = MEMORY[0x24BDAC7A8](v21, v22);
  v25 = (char *)&v105 - v24;
  v27 = MEMORY[0x24BDAC7A8](v23, v26);
  v29 = MEMORY[0x24BDAC7A8](v27, v28);
  v31 = MEMORY[0x24BDAC7A8](v29, v30);
  v33 = (char *)&v105 - v32;
  MEMORY[0x24BDAC7A8](v31, v34);
  v39 = (char *)&v105 - v38;
  v114 = v2;
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_configuration + 27) != 1)
    return 0;
  v106 = v37;
  v107 = v36;
  v110 = v35;
  v112 = v8;
  v108 = *a2;
  v40 = (void *)objc_opt_self();
  v41 = objc_msgSend(v40, sel_standardUserDefaults);
  if (qword_253EB4740 != -1)
    swift_once();
  v111 = v25;
  v109 = v14;
  if (byte_253EBC790 == 1)
  {
    v42 = (void *)sub_20A5B88F4();
    v43 = objc_msgSend(v41, sel_BOOLForKey_, v42);

    if ((v43 & 1) != 0)
      return 0;
  }
  else
  {

  }
  v44 = sub_20A5B81D4();
  if (!v45)
    return 0;
  if (v44 == 5522759 && v45 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v47 = sub_20A5B91AC();
    swift_bridgeObjectRelease();
    if ((v47 & 1) == 0)
      return 0;
  }
  if (qword_253EB4A50 != -1)
    swift_once();
  v48 = (void *)qword_253EBC810;
  v49 = (void *)sub_20A5B81EC();
  v46 = objc_msgSend(v48, sel_cachedResponseForRequest_, v49);

  if (!v46)
  {
    v59 = *(_QWORD *)(v114 + OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_logger + 8);
    v118 = *(_QWORD *)(v114 + OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_logger);
    v119 = v59;
    *(_QWORD *)&v120 = 0;
    *((_QWORD *)&v120 + 1) = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_20A5B8E94();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v120 = 0xD00000000000001CLL;
    *((_QWORD *)&v120 + 1) = 0x800000020A5DF360;
    sub_20A5B821C();
    v60 = sub_20A5B84D4();
    v61 = *(_QWORD *)(v60 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v19, 1, v60) == 1)
    {
      sub_20A44CE2C((uint64_t)v19, (uint64_t *)&unk_253EB4980);
    }
    else
    {
      sub_20A5B8444();
      (*(void (**)(char *, uint64_t))(v61 + 8))(v19, v60);
    }
    sub_20A5B899C();
    swift_bridgeObjectRelease();
    v79 = v120;
    LOBYTE(v120) = 14;
    CoreODILogger.debug(_:category:)(v79, *((unint64_t *)&v120 + 1), &v120);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  v50 = objc_msgSend(v40, sel_standardUserDefaults);
  v51 = v50;
  if (byte_253EBC790 == 1)
  {
    v52 = (void *)sub_20A5B88F4();
    v53 = objc_msgSend(v51, sel_BOOLForKey_, v52);

    if ((v53 & 1) != 0)
    {
      if (qword_253EB5040 != -1)
        swift_once();
      v54 = (id)qword_253EBC880;
      sub_20A5B8C3C();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52C0);
      v55 = swift_allocObject();
      *(_OWORD *)(v55 + 16) = xmmword_20A5BA9A0;
      v56 = objc_msgSend(v46, sel_response);
      v57 = objc_msgSend(v56, sel_URL);

      if (v57)
      {
        sub_20A5B848C();

        v58 = sub_20A5B84D4();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v33, 0, 1, v58);
      }
      else
      {
        v58 = sub_20A5B84D4();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v33, 1, 1, v58);
      }
      sub_20A459C88((uint64_t)v33, (uint64_t)v39, (uint64_t *)&unk_253EB4980);
      sub_20A5B84D4();
      v95 = *(_QWORD *)(v58 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v95 + 48))(v39, 1, v58) == 1)
      {
        sub_20A44CE2C((uint64_t)v39, (uint64_t *)&unk_253EB4980);
        v96 = 0;
        v97 = 0;
      }
      else
      {
        v96 = sub_20A5B8444();
        v97 = v98;
        (*(void (**)(char *, uint64_t))(v95 + 8))(v39, v58);
      }
      *(_QWORD *)(v55 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v55 + 64) = sub_20A450420();
      v99 = 0x3E6C696E3CLL;
      if (v97)
        v99 = v96;
      v100 = 0xE500000000000000;
      if (v97)
        v100 = v97;
      *(_QWORD *)(v55 + 32) = v99;
      *(_QWORD *)(v55 + 40) = v100;
      sub_20A5B87B0();

      swift_bridgeObjectRelease();
      return v46;
    }
  }
  else
  {

  }
  v62 = objc_msgSend(v46, sel_userInfo);
  if (!v62)
  {
    v120 = 0u;
    v121 = 0u;
    v65 = v112;
    v66 = v115;
LABEL_41:
    sub_20A44CE2C((uint64_t)&v120, &qword_253EB52E0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v66 + 56))(v7, 1, 1, v65);
    goto LABEL_42;
  }
  v63 = v62;
  v64 = sub_20A5B8888();

  v116 = 0x4173657269707865;
  v117 = 0xE900000000000074;
  sub_20A5B8E34();
  v65 = v112;
  v66 = v115;
  if (*(_QWORD *)(v64 + 16) && (v67 = sub_20A470A0C((uint64_t)&v118), (v68 & 1) != 0))
  {
    sub_20A44FD78(*(_QWORD *)(v64 + 56) + 32 * v67, (uint64_t)&v120);
  }
  else
  {
    v120 = 0u;
    v121 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_20A459C54((uint64_t)&v118);
  if (!*((_QWORD *)&v121 + 1))
    goto LABEL_41;
  v69 = swift_dynamicCast();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v7, v69 ^ 1u, 1, v65);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v7, 1, v65) != 1)
  {
    v70 = v109;
    (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v109, v7, v65);
    v71 = v113;
    sub_20A5B8624();
    v72 = sub_20A5B85C4();
    v73 = *(void (**)(char *, uint64_t))(v66 + 8);
    v73(v71, v65);
    if ((v72 & 1) != 0)
    {
      v74 = *(_QWORD *)(v114 + OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_logger + 8);
      v118 = *(_QWORD *)(v114 + OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_logger);
      v119 = v74;
      *(_QWORD *)&v120 = 0;
      *((_QWORD *)&v120 + 1) = 0xE000000000000000;
      swift_bridgeObjectRetain();
      sub_20A5B8E94();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v120 = 0xD00000000000001ALL;
      *((_QWORD *)&v120 + 1) = 0x800000020A5DF3F0;
      v75 = objc_msgSend(v46, sel_response);
      v76 = objc_msgSend(v75, sel_URL);

      if (v76)
      {
        v77 = v106;
        sub_20A5B848C();

        v78 = sub_20A5B84D4();
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 56))(v77, 0, 1, v78);
      }
      else
      {
        v78 = sub_20A5B84D4();
        v77 = v106;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 56))(v106, 1, 1, v78);
      }
      v101 = v77;
      v102 = v107;
      sub_20A459C88(v101, v107, (uint64_t *)&unk_253EB4980);
      sub_20A5B84D4();
      v103 = *(_QWORD *)(v78 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v103 + 48))(v102, 1, v78) == 1)
      {
        sub_20A44CE2C(v102, (uint64_t *)&unk_253EB4980);
      }
      else
      {
        sub_20A5B8444();
        (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v102, v78);
      }
      sub_20A5B899C();
      swift_bridgeObjectRelease();
      v104 = v120;
      LOBYTE(v120) = v108;
      CoreODILogger.info(_:category:)(v104, *((unint64_t *)&v120 + 1), &v120);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v73(v109, v112);
      return v46;
    }
    v73(v70, v65);
    goto LABEL_43;
  }
LABEL_42:
  sub_20A44CE2C((uint64_t)v7, &qword_253EB4990);
LABEL_43:
  if (qword_253EB5040 != -1)
    swift_once();
  v81 = (id)qword_253EBC880;
  sub_20A5B8C3C();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52C0);
  v82 = swift_allocObject();
  *(_OWORD *)(v82 + 16) = xmmword_20A5BA9A0;
  v83 = objc_msgSend(v46, sel_response);
  v84 = objc_msgSend(v83, sel_URL);

  if (v84)
  {
    v85 = v110;
    sub_20A5B848C();

    v86 = sub_20A5B84D4();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 56))(v85, 0, 1, v86);
  }
  else
  {
    v86 = sub_20A5B84D4();
    v85 = v110;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 56))(v110, 1, 1, v86);
  }
  v87 = MEMORY[0x24BEE0D00];
  v88 = (uint64_t)v111;
  sub_20A459C88(v85, (uint64_t)v111, (uint64_t *)&unk_253EB4980);
  sub_20A5B84D4();
  v89 = *(_QWORD *)(v86 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v89 + 48))(v88, 1, v86) == 1)
  {
    sub_20A44CE2C(v88, (uint64_t *)&unk_253EB4980);
    v90 = 0;
    v91 = 0;
  }
  else
  {
    v90 = sub_20A5B8444();
    v91 = v92;
    (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v88, v86);
  }
  *(_QWORD *)(v82 + 56) = v87;
  *(_QWORD *)(v82 + 64) = sub_20A450420();
  v93 = 0x3E6C696E3CLL;
  if (v91)
    v93 = v90;
  v94 = 0xE500000000000000;
  if (v91)
    v94 = v91;
  *(_QWORD *)(v82 + 32) = v93;
  *(_QWORD *)(v82 + 40) = v94;
  sub_20A5B87B0();

  swift_bridgeObjectRelease();
  return v46;
}

uint64_t sub_20A4A7CE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v6 + 232) = a5;
  *(_QWORD *)(v6 + 96) = a4;
  *(_QWORD *)(v6 + 104) = a6;
  *(_QWORD *)(v6 + 80) = a1;
  *(_QWORD *)(v6 + 88) = a3;
  v7 = sub_20A5B8240();
  *(_QWORD *)(v6 + 112) = v7;
  *(_QWORD *)(v6 + 120) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v6 + 128) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A4A7D4C()
{
  uint64_t v0;
  _QWORD *v1;

  sub_20A5B8204();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 136) = v1;
  *v1 = v0;
  v1[1] = sub_20A4A7DAC;
  return sub_20A4A8EE4(*(_QWORD *)(v0 + 128), *(_BYTE *)(v0 + 232));
}

uint64_t sub_20A4A7DAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v5 = (_QWORD *)*v4;
  v5[18] = a1;
  v5[19] = a2;
  v5[20] = a3;
  v5[21] = v3;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v5[15] + 8))(v5[16], v5[14]);
  return swift_task_switch();
}

uint64_t sub_20A4A7E2C()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  unint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char v19;
  char v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  id v36;
  uint64_t v37;
  id v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  id v44;
  id v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD v57[2];
  char v58[9];

  v1 = *(void **)(v0 + 160);
  v2 = v1;
  v3 = (void *)sub_20A4AA374(v1, 0);

  if (!v3)
  {
    v15 = *(_QWORD *)(v0 + 144);
    v14 = *(_QWORD *)(v0 + 152);
    v16 = *(_QWORD *)(v0 + 80);
    v17 = (_QWORD *)(*(_QWORD *)(v0 + 88) + OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_logger);
    v18 = v17[1];
    v57[0] = *v17;
    v57[1] = v18;
    v58[0] = 14;
    swift_bridgeObjectRetain();
    CoreODILogger.debug(_:category:)(0xD000000000000012, 0x800000020A5DF220, v58);
    swift_bridgeObjectRelease();
    v19 = 0;
    *(_QWORD *)v16 = v15;
    *(_QWORD *)(v16 + 8) = v14;
    *(_QWORD *)(v16 + 16) = v1;
    *(_BYTE *)(v16 + 24) = 0;
LABEL_39:
    *(_BYTE *)(*(_QWORD *)(v0 + 80) + 25) = v19;
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v4 = *(_QWORD *)(v0 + 152);
  v5 = *(void **)(v0 + 160);
  v6 = *(_QWORD *)(v0 + 144);
  swift_willThrow();

  sub_20A44BD90(v6, v4);
  *(_QWORD *)(v0 + 176) = v3;
  LOBYTE(v57[0]) = 10;
  v7 = v3;
  ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000002ALL, 0x800000020A5DF000, (char *)v3, (unsigned __int8 *)v57, 0, 0, 0xD000000000000058, 0x800000020A5DF030, 0xD00000000000001ELL, 0x800000020A5DF090, 405);
  v9 = v8;

  swift_getErrorValue();
  v10 = sub_20A5B9170();
  v12 = v11;
  if (v10 == sub_20A5B8900() && v12 == v13)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v20 = sub_20A5B91AC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v20 & 1) == 0)
      goto LABEL_14;
  }
  v21 = objc_msgSend(*(id *)(v0 + 96), sel_HTTPMethod);
  v22 = sub_20A5B8900();
  v24 = v23;

  if (v22 == 5522759 && v24 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v25 = sub_20A5B91AC();
    swift_bridgeObjectRelease();
    if ((v25 & 1) == 0)
      goto LABEL_14;
  }
  swift_getErrorValue();
  v26 = sub_20A5B9248();
  if (v26 == -1009)
  {
    v27 = *(_QWORD *)(v0 + 80);
    LOBYTE(v57[0]) = 23;
    v39 = v3;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000027, 0x800000020A5DF1A0, (char *)v3, (unsigned __int8 *)v57, 0, 0, 0xD000000000000058, 0x800000020A5DF030, 0xD000000000000036, 0x800000020A5DF0D0, 326);
    goto LABEL_27;
  }
  if (v26 == -1005)
  {
    v27 = *(_QWORD *)(v0 + 80);
    LOBYTE(v57[0]) = 0;
    v28 = v3;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000049, 0x800000020A5DF1D0, (char *)v3, (unsigned __int8 *)v57, 0, 0, 0xD000000000000058, 0x800000020A5DF030, 0xD000000000000036, 0x800000020A5DF0D0, 323);
LABEL_27:
    v40 = v29;

    *(_QWORD *)(v27 + 8) = 0;
    *(_QWORD *)(v27 + 16) = 0;
    *(_QWORD *)v27 = v40;
    v19 = 1;
    *(_BYTE *)(v27 + 24) = 0;
    goto LABEL_39;
  }
LABEL_14:
  v30 = (void *)sub_20A5B8414();
  v31 = objc_msgSend(v30, sel_domain);
  v32 = sub_20A5B8900();
  v34 = v33;

  if (v32 == 0x726F72724549444FLL && v34 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v35 = sub_20A5B91AC();
    swift_bridgeObjectRelease();
    if ((v35 & 1) == 0)
    {

      goto LABEL_29;
    }
  }
  v36 = objc_msgSend(v30, sel_code);

  ODIErrorCode.init(rawValue:)((Swift::Int)v36);
  if (LOBYTE(v57[0]) - 171 > 0xD)
  {
LABEL_37:
    if (LOBYTE(v57[0]) - 10 < 2)
      goto LABEL_38;
LABEL_29:
    v41 = *(_QWORD *)(v0 + 80);
    *(_QWORD *)(v41 + 8) = 0;
    *(_QWORD *)(v41 + 16) = 0;
    *(_QWORD *)v41 = v3;
    *(_BYTE *)(v41 + 24) = 0;
    v19 = 1;
    goto LABEL_39;
  }
  if (((1 << (LOBYTE(v57[0]) + 85)) & 0x3E00) != 0)
  {
LABEL_38:
    v52 = *(_QWORD *)(v0 + 80);
    *(_QWORD *)(v52 + 8) = 0;
    *(_QWORD *)(v52 + 16) = 0;
    *(_QWORD *)v52 = v3;
    *(_BYTE *)(v52 + 24) = 0;
    v19 = 2;
    goto LABEL_39;
  }
  if (((1 << (LOBYTE(v57[0]) + 85)) & 0x184) == 0)
  {
    if (LOBYTE(v57[0]) == 171)
    {
      v42 = *(void **)(v0 + 104);
      if (v42)
      {
        v43 = qword_253EB5040;
        v44 = v42;
        if (v43 != -1)
          swift_once();
        v45 = (id)qword_253EBC880;
        sub_20A5B8C48();
        sub_20A5B87B0();

        if (qword_253EB4A50 != -1)
          swift_once();
        v46 = *(_QWORD *)(v0 + 80);
        objc_msgSend((id)qword_253EBC810, sel_storeCachedResponse_forRequest_, v44, *(_QWORD *)(v0 + 96));
        v47 = objc_msgSend(v44, sel_data);
        v48 = sub_20A5B8564();
        v50 = v49;

        v51 = objc_msgSend(v44, sel_response);
        v19 = 0;
        *(_QWORD *)v46 = v48;
        *(_QWORD *)(v46 + 8) = v50;
        *(_QWORD *)(v46 + 16) = v51;
        *(_BYTE *)(v46 + 24) = 1;
      }
      else
      {
        v53 = *(_QWORD *)(v0 + 80);
        LOBYTE(v57[0]) = 0;
        v54 = v3;
        ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000031, 0x800000020A5DF110, (char *)v3, (unsigned __int8 *)v57, 0, 0, 0xD000000000000058, 0x800000020A5DF030, 0xD000000000000036, 0x800000020A5DF0D0, 343);
        v56 = v55;

        *(_QWORD *)(v53 + 8) = 0;
        *(_QWORD *)(v53 + 16) = 0;
        *(_QWORD *)v53 = v56;
        v19 = 2;
        *(_BYTE *)(v53 + 24) = 0;
      }
      goto LABEL_39;
    }
    goto LABEL_37;
  }
  if ((*(_BYTE *)(v0 + 232) & 1) != 0)
    goto LABEL_29;
  v37 = *(_QWORD *)(v0 + 88);
  if (*(_BYTE *)(v37 + OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_configuration + 25) != 1)
    goto LABEL_29;
  if (qword_253EB4578 != -1)
  {
    swift_once();
    v37 = *(_QWORD *)(v0 + 88);
  }
  *(_QWORD *)(v0 + 184) = qword_253EB4568;
  *(_QWORD *)(v0 + 192) = *(_QWORD *)(v37 + OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_state);
  swift_retain();
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_20A4A855C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[24];
  v2 = *(_QWORD *)(v1 + 112);
  v3 = *(_QWORD *)(v1 + 120);
  v0[25] = v3;
  swift_bridgeObjectRetain();
  swift_release();
  v4 = (_QWORD *)swift_task_alloc();
  v0[26] = v4;
  *v4 = v0;
  v4[1] = sub_20A4A85D0;
  return sub_20A531FE4(v2, v3);
}

uint64_t sub_20A4A85D0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 216) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_20A4A863C()
{
  uint64_t v0;
  int8x16_t *v1;

  swift_release();
  v1 = (int8x16_t *)swift_task_alloc();
  *(_QWORD *)(v0 + 224) = v1;
  v1->i64[0] = v0;
  v1->i64[1] = (uint64_t)sub_20A4A86A8;
  v1[1] = vextq_s8(*(int8x16_t *)(v0 + 88), *(int8x16_t *)(v0 + 88), 8uLL);
  return swift_task_switch();
}

uint64_t sub_20A4A86A8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A4A86FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 80);
  *(_QWORD *)(v2 + 8) = 0;
  *(_QWORD *)(v2 + 16) = 0;
  *(_QWORD *)v2 = v1;
  *(_BYTE *)(v2 + 24) = 0;
  *(_BYTE *)(*(_QWORD *)(v0 + 80) + 25) = 2;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4A874C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v8;

  v1 = *(void **)(v0 + 216);
  v2 = *(void **)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 80);
  swift_release();
  swift_bridgeObjectRelease();
  v8 = 0;
  v4 = v1;
  ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000014, 0x800000020A5DF0B0, (char *)v1, &v8, 0, 0, 0xD000000000000058, 0x800000020A5DF030, 0xD000000000000036, 0x800000020A5DF0D0, 362);
  v6 = v5;

  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)v3 = v6;
  *(_BYTE *)(v3 + 24) = 0;
  *(_BYTE *)(*(_QWORD *)(v0 + 80) + 25) = 1;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4A8854()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  id v26;
  uint64_t v27;
  id v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  id v35;
  id v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  unsigned __int8 v48;
  unsigned __int8 v49;
  unsigned __int8 v50;
  unsigned __int8 v51;
  unsigned __int8 v52;

  v1 = *(void **)(v0 + 168);
  *(_QWORD *)(v0 + 176) = v1;
  v48 = 10;
  v2 = v1;
  ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000002ALL, 0x800000020A5DF000, (char *)v1, &v48, 0, 0, 0xD000000000000058, 0x800000020A5DF030, 0xD00000000000001ELL, 0x800000020A5DF090, 405);
  v4 = v3;

  swift_getErrorValue();
  v5 = sub_20A5B9170();
  v7 = v6;
  if (v5 == sub_20A5B8900() && v7 == v8)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v10 = sub_20A5B91AC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0)
      goto LABEL_15;
  }
  v11 = objc_msgSend(*(id *)(v0 + 96), sel_HTTPMethod);
  v12 = sub_20A5B8900();
  v14 = v13;

  if (v12 == 5522759 && v14 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = sub_20A5B91AC();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
      goto LABEL_15;
  }
  swift_getErrorValue();
  v16 = sub_20A5B9248();
  if (v16 == -1009)
  {
    v17 = *(_QWORD *)(v0 + 80);
    v51 = 23;
    v29 = v1;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000027, 0x800000020A5DF1A0, (char *)v1, &v51, 0, 0, 0xD000000000000058, 0x800000020A5DF030, 0xD000000000000036, 0x800000020A5DF0D0, 326);
    goto LABEL_28;
  }
  if (v16 == -1005)
  {
    v17 = *(_QWORD *)(v0 + 80);
    v52 = 0;
    v18 = v1;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000049, 0x800000020A5DF1D0, (char *)v1, &v52, 0, 0, 0xD000000000000058, 0x800000020A5DF030, 0xD000000000000036, 0x800000020A5DF0D0, 323);
LABEL_28:
    v30 = v19;

    *(_QWORD *)(v17 + 8) = 0;
    *(_QWORD *)(v17 + 16) = 0;
    *(_QWORD *)v17 = v30;
    v31 = 1;
    *(_BYTE *)(v17 + 24) = 0;
LABEL_40:
    *(_BYTE *)(*(_QWORD *)(v0 + 80) + 25) = v31;
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
LABEL_15:
  v20 = (void *)sub_20A5B8414();
  v21 = objc_msgSend(v20, sel_domain);
  v22 = sub_20A5B8900();
  v24 = v23;

  if (v22 == 0x726F72724549444FLL && v24 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v25 = sub_20A5B91AC();
    swift_bridgeObjectRelease();
    if ((v25 & 1) == 0)
    {

      goto LABEL_30;
    }
  }
  v26 = objc_msgSend(v20, sel_code);

  ODIErrorCode.init(rawValue:)((Swift::Int)v26);
  if (v49 - 171 > 0xD)
  {
LABEL_38:
    if (v49 - 10 < 2)
      goto LABEL_39;
LABEL_30:
    v32 = *(_QWORD *)(v0 + 80);
    *(_QWORD *)(v32 + 8) = 0;
    *(_QWORD *)(v32 + 16) = 0;
    *(_QWORD *)v32 = v1;
    *(_BYTE *)(v32 + 24) = 0;
    v31 = 1;
    goto LABEL_40;
  }
  if (((1 << (v49 + 85)) & 0x3E00) != 0)
  {
LABEL_39:
    v43 = *(_QWORD *)(v0 + 80);
    *(_QWORD *)(v43 + 8) = 0;
    *(_QWORD *)(v43 + 16) = 0;
    *(_QWORD *)v43 = v1;
    *(_BYTE *)(v43 + 24) = 0;
    v31 = 2;
    goto LABEL_40;
  }
  if (((1 << (v49 + 85)) & 0x184) == 0)
  {
    if (v49 == 171)
    {
      v33 = *(void **)(v0 + 104);
      if (v33)
      {
        v34 = qword_253EB5040;
        v35 = v33;
        if (v34 != -1)
          swift_once();
        v36 = (id)qword_253EBC880;
        sub_20A5B8C48();
        sub_20A5B87B0();

        if (qword_253EB4A50 != -1)
          swift_once();
        v37 = *(_QWORD *)(v0 + 80);
        objc_msgSend((id)qword_253EBC810, sel_storeCachedResponse_forRequest_, v35, *(_QWORD *)(v0 + 96));
        v38 = objc_msgSend(v35, sel_data);
        v39 = sub_20A5B8564();
        v41 = v40;

        v42 = objc_msgSend(v35, sel_response);
        v31 = 0;
        *(_QWORD *)v37 = v39;
        *(_QWORD *)(v37 + 8) = v41;
        *(_QWORD *)(v37 + 16) = v42;
        *(_BYTE *)(v37 + 24) = 1;
      }
      else
      {
        v44 = *(_QWORD *)(v0 + 80);
        v50 = 0;
        v45 = v1;
        ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000031, 0x800000020A5DF110, (char *)v1, &v50, 0, 0, 0xD000000000000058, 0x800000020A5DF030, 0xD000000000000036, 0x800000020A5DF0D0, 343);
        v47 = v46;

        *(_QWORD *)(v44 + 8) = 0;
        *(_QWORD *)(v44 + 16) = 0;
        *(_QWORD *)v44 = v47;
        v31 = 2;
        *(_BYTE *)(v44 + 24) = 0;
      }
      goto LABEL_40;
    }
    goto LABEL_38;
  }
  if ((*(_BYTE *)(v0 + 232) & 1) != 0)
    goto LABEL_30;
  v27 = *(_QWORD *)(v0 + 88);
  if (*(_BYTE *)(v27 + OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_configuration + 25) != 1)
    goto LABEL_30;
  if (qword_253EB4578 != -1)
  {
    swift_once();
    v27 = *(_QWORD *)(v0 + 88);
  }
  *(_QWORD *)(v0 + 184) = qword_253EB4568;
  *(_QWORD *)(v0 + 192) = *(_QWORD *)(v27 + OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_state);
  swift_retain();
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_20A4A8EE4(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v3 + 112) = a2;
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = sub_20A5B8804();
  *(_QWORD *)(v3 + 32) = v4;
  *(_QWORD *)(v3 + 40) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v3 + 48) = swift_task_alloc();
  sub_20A5B8954();
  *(_QWORD *)(v3 + 56) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A4A8F68()
{
  uint64_t v0;
  char v1;
  _QWORD *v2;

  v1 = *(_BYTE *)(v0 + 112);
  sub_20A4A9DD4(*(_QWORD *)(v0 + 16));
  *(_QWORD *)(v0 + 64) = sub_20A4A5758(v1);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v2;
  *v2 = v0;
  v2[1] = sub_20A4A8FD8;
  return sub_20A5B8C30();
}

uint64_t sub_20A4A8FD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v5 = (_QWORD *)*v4;
  v5[10] = a1;
  v5[11] = a2;
  v5[12] = a3;
  v5[13] = v3;
  swift_task_dealloc();
  return swift_task_switch();
}

id sub_20A4A9048()
{
  uint64_t v0;
  id *v1;
  uint64_t v2;
  void *v3;
  unint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id result;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  void *v18;
  uint64_t v19;
  unint64_t v20;

  v1 = (id *)(v0 + 96);
  objc_opt_self();
  v2 = swift_dynamicCastObjCClass();
  if (!v2)
  {
    v1 = (id *)(v0 + 64);
LABEL_13:

    swift_task_dealloc();
    swift_task_dealloc();
    return (id)(*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96));
  }
  v3 = (void *)v2;
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 80);
  v6 = *(id *)(v0 + 96);
  sub_20A45964C(v5, v4);
  sub_20A5B893C();
  v7 = sub_20A5B8918();
  if (v8)
    v9 = v7;
  else
    v9 = 0;
  if (v8)
    v10 = v8;
  else
    v10 = 0xE000000000000000;
  result = objc_msgSend(v3, sel_allHeaderFields);
  if (result)
  {
    v12 = result;
    if (qword_253EB4A40 != -1)
      swift_once();
    v19 = *(_QWORD *)(v0 + 80);
    v20 = *(_QWORD *)(v0 + 88);
    v18 = *(void **)(v0 + 64);
    v13 = *(_QWORD *)(v0 + 40);
    v14 = *(_QWORD *)(v0 + 48);
    v15 = *(_QWORD *)(v0 + 32);
    v16 = __swift_project_value_buffer(v15, (uint64_t)qword_253EB4A20);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v14, v16, v15);
    v17 = (_QWORD *)swift_task_alloc();
    v17[2] = v3;
    v17[3] = v12;
    v17[4] = v9;
    v17[5] = v10;
    Logger.sensitive(_:)(sub_20A4AAD20);
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v14, v15);

    swift_bridgeObjectRelease();
    sub_20A44BD90(v19, v20);
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_20A4A9214()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4A925C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_20A4A9274()
{
  _QWORD *v0;
  uint64_t v1;

  if (qword_253EB4578 != -1)
    swift_once();
  v1 = v0[3];
  v0[4] = qword_253EB4568;
  v0[5] = *(_QWORD *)(v1 + OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_state);
  swift_retain();
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_20A4A92FC()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[5];
  v0[6] = *(_QWORD *)(v1 + 112);
  v0[7] = *(_QWORD *)(v1 + 120);
  swift_bridgeObjectRetain();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_20A4A9350()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_20A532CA4(v0[6], v0[7]);
  v3 = v2;
  swift_bridgeObjectRelease();
  v0[8] = v1;
  v0[9] = v3;
  return swift_task_switch();
}

uint64_t sub_20A4A93B0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;

  v1 = *(void **)(v0 + 16);
  v2 = (void *)sub_20A5B88F4();
  swift_bridgeObjectRelease();
  swift_release();
  v3 = (void *)sub_20A5B88F4();
  objc_msgSend(v1, sel_setValue_forHTTPHeaderField_, v2, v3);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4A9450()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for DIPHTTPSession.ClientInfoHeaderProvider();
  v0 = swift_allocObject();
  result = swift_defaultActor_initialize();
  *(_QWORD *)(v0 + 112) = 0;
  *(_QWORD *)(v0 + 120) = 0;
  qword_25460FF78 = v0;
  return result;
}

uint64_t sub_20A4A948C()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t sub_20A4A97C0(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[2];
  id v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB4980);
  v6 = MEMORY[0x24BDAC7A8](v4, v5);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6, v9);
  v11 = (char *)v17 - v10;
  v20 = 0;
  v21 = 0xE000000000000000;
  sub_20A5B8E94();
  sub_20A5B899C();
  v12 = objc_msgSend(a1, sel_URL);
  if (v12)
  {
    v13 = v12;
    sub_20A5B848C();

    v14 = sub_20A5B84D4();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v8, 0, 1, v14);
  }
  else
  {
    v14 = sub_20A5B84D4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v8, 1, 1, v14);
  }
  sub_20A459C88((uint64_t)v8, (uint64_t)v11, (uint64_t *)&unk_253EB4980);
  sub_20A5B84D4();
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v11, 1, v14) == 1)
  {
    sub_20A44CE2C((uint64_t)v11, (uint64_t *)&unk_253EB4980);
  }
  else
  {
    sub_20A5B8444();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v11, v14);
  }
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  v18 = objc_msgSend(a1, sel_statusCode);
  sub_20A5B9170();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  v18 = 0;
  v19 = 0xE000000000000000;
  sub_20A5B899C();
  v17[1] = a2;
  sub_20A5B8F9C();
  sub_20A5B899C();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  sub_20A5B899C();
  sub_20A5B899C();
  return v20;
}

id sub_20A4A9AB0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for DIPHTTPSession()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for DIPHTTPSession.SessionState()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for DIPHTTPSession.ClientInfoHeaderProvider()
{
  return objc_opt_self();
}

uint64_t destroy for DIPHTTPSession.Configuration()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DIPHTTPSession.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  v3 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DIPHTTPSession.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  *(_BYTE *)(a1 + 27) = *(_BYTE *)(a2 + 27);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DIPHTTPSession.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  *(_BYTE *)(a1 + 27) = *(_BYTE *)(a2 + 27);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DIPHTTPSession.Configuration(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 40);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DIPHTTPSession.Configuration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 0;
    if (a2)
      *(_QWORD *)(result + 40) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for DIPHTTPSession.Configuration()
{
  return &type metadata for DIPHTTPSession.Configuration;
}

void sub_20A4A9DD4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  unsigned __int8 v27;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  NSObject *v31;
  int v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB4980);
  MEMORY[0x24BDAC7A8](v2, v3);
  v56 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_20A5B8240();
  v6 = *(_QWORD *)(v5 - 8);
  v8 = MEMORY[0x24BDAC7A8](v5, v7);
  v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v11);
  v13 = (char *)&v51 - v12;
  v14 = sub_20A5B8954();
  MEMORY[0x24BDAC7A8](v14, v15);
  v16 = sub_20A5B8234();
  if (v17 >> 60 != 15)
  {
    v18 = v16;
    v19 = v17;
    sub_20A5B893C();
    v20 = sub_20A5B8918();
    if (v21)
    {
      v22 = v21;
      v55 = v20;
      sub_20A44CFC4(v18, v19);
      goto LABEL_6;
    }
    sub_20A44CFC4(v18, v19);
  }
  v55 = 0;
  v22 = 0xE000000000000000;
LABEL_6:
  v23 = sub_20A5B81F8();
  if (!v23)
    v23 = sub_20A46A6EC(MEMORY[0x24BEE4AF8]);
  v24 = v23;
  v25 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v26 = (void *)sub_20A5B88F4();
  v27 = objc_msgSend(v25, sel_BOOLForKey_, v26);

  if ((v27 & 1) == 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v58 = v24;
    sub_20A4768A4(0x455443414445523CLL, 0xEA00000000003E44, 0x7A69726F68747541, 0xED00006E6F697461, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
  }
  if (qword_253EB4A40 != -1)
    swift_once();
  v29 = sub_20A5B8804();
  __swift_project_value_buffer(v29, (uint64_t)qword_253EB4A20);
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v30(v13, a1, v5);
  v30(v10, a1, v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v31 = sub_20A5B87EC();
  v32 = sub_20A5B8C48();
  if (os_log_type_enabled(v31, (os_log_type_t)v32))
  {
    v53 = v32;
    v33 = v10;
    v34 = swift_slowAlloc();
    v52 = swift_slowAlloc();
    v58 = v52;
    *(_DWORD *)v34 = 136315906;
    v35 = sub_20A5B81D4();
    if (v36)
    {
      v37 = v36;
    }
    else
    {
      v35 = 0;
      v37 = 0xE000000000000000;
    }
    v57 = sub_20A503EE0(v35, v37, &v58);
    sub_20A5B8D50();
    swift_bridgeObjectRelease();
    v38 = *(void (**)(char *, uint64_t))(v6 + 8);
    v38(v13, v5);
    *(_WORD *)(v34 + 12) = 2080;
    v39 = (uint64_t)v56;
    v54 = v33;
    sub_20A5B821C();
    v40 = sub_20A5B84D4();
    v41 = *(_QWORD *)(v40 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40) == 1)
    {
      sub_20A44CE2C(v39, (uint64_t *)&unk_253EB4980);
      v42 = 0;
      v43 = 0xE000000000000000;
    }
    else
    {
      v42 = sub_20A5B8444();
      v45 = v39;
      v43 = v46;
      (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v45, v40);
    }
    v57 = sub_20A503EE0(v42, v43, &v58);
    sub_20A5B8D50();
    swift_bridgeObjectRelease();
    v38(v54, v5);
    *(_WORD *)(v34 + 22) = 2080;
    swift_bridgeObjectRetain();
    v47 = sub_20A5B8894();
    v49 = v48;
    swift_bridgeObjectRelease();
    v57 = sub_20A503EE0(v47, v49, &v58);
    sub_20A5B8D50();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v34 + 32) = 2080;
    swift_bridgeObjectRetain();
    v57 = sub_20A503EE0(v55, v22, &v58);
    sub_20A5B8D50();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_20A443000, v31, (os_log_type_t)v53, "Performing request\n%s %s\n%s\n%s\n", (uint8_t *)v34, 0x2Au);
    v50 = v52;
    swift_arrayDestroy();
    MEMORY[0x20BD26DB8](v50, -1, -1);
    MEMORY[0x20BD26DB8](v34, -1, -1);

  }
  else
  {
    v44 = *(void (**)(char *, uint64_t))(v6 + 8);
    v44(v13, v5);
    v44(v10, v5);

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_20A4AA374(void *a1, char *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 *v22;
  uint64_t v23;
  char v24;
  uint64_t inited;
  unint64_t v26;
  uint64_t v28;
  unsigned __int8 *v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unsigned __int8 *v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned __int8 *v41;
  unsigned int v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;

  if (!a2)
  {
    if (!a1)
    {
      LOBYTE(v45) = 12;
      ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000019, 0x800000020A5DF240, 0, (unsigned __int8 *)&v45, 0, 0, 0xD000000000000058, 0x800000020A5DF030, 0xD00000000000001ELL, 0x800000020A5DF090, 408);
      return v2;
    }
    objc_opt_self();
    v5 = swift_dynamicCastObjCClass();
    if (!v5)
    {
      v45 = 12;
      v46 = 0xE000000000000000;
      v16 = a1;
      sub_20A5B8E94();
      sub_20A5B899C();
      v7 = v16;
      v17 = objc_msgSend(v7, sel_description);
      sub_20A5B8900();

      sub_20A5B899C();
      swift_bridgeObjectRelease();
      ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xE000000000000000, 0, (unsigned __int8 *)&v45, 0, 0, 0xD000000000000058, 0x800000020A5DF030, 0xD00000000000001ELL, 0x800000020A5DF090, 411);
      goto LABEL_52;
    }
    v6 = (void *)v5;
    v7 = a1;
    v8 = (uint64_t)objc_msgSend(v6, sel_statusCode);
    v9 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
    if (qword_253EB4740 != -1)
      swift_once();
    if (byte_253EBC790 == 1
      && (v10 = (void *)sub_20A5B88F4(),
          v11 = objc_msgSend(v9, sel_stringForKey_, v10),
          v10,
          v11))
    {
      v12 = sub_20A5B8900();
      v14 = v13;

      if ((v12 || v14 != 0xE000000000000000) && (sub_20A5B91AC() & 1) == 0)
      {
        v19 = HIBYTE(v14) & 0xF;
        v20 = v12 & 0xFFFFFFFFFFFFLL;
        if ((v14 & 0x2000000000000000) != 0 ? HIBYTE(v14) & 0xF : v12 & 0xFFFFFFFFFFFFLL)
        {
          if ((v14 & 0x1000000000000000) != 0)
          {
            v23 = (uint64_t)sub_20A5252A4(v12, v14, 10);
            LOBYTE(v12) = v44;
            goto LABEL_88;
          }
          if ((v14 & 0x2000000000000000) == 0)
          {
            if ((v12 & 0x1000000000000000) != 0)
              v22 = (unsigned __int8 *)((v14 & 0xFFFFFFFFFFFFFFFLL) + 32);
            else
              v22 = (unsigned __int8 *)sub_20A5B8EE8();
            v23 = (uint64_t)sub_20A525290(v22, v20, 10);
            LOBYTE(v12) = v24 & 1;
LABEL_88:
            swift_bridgeObjectRelease();
            if ((v12 & 1) == 0)
            {
              if (qword_253EB5040 != -1)
                swift_once();
              v37 = (id)qword_253EBC880;
              sub_20A5B8C3C();
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52C0);
              v38 = swift_allocObject();
              v39 = MEMORY[0x24BEE1768];
              *(_OWORD *)(v38 + 16) = xmmword_20A5BA9A0;
              v40 = MEMORY[0x24BEE17F0];
              *(_QWORD *)(v38 + 56) = v39;
              *(_QWORD *)(v38 + 64) = v40;
              *(_QWORD *)(v38 + 32) = v23;
              sub_20A5B87B0();

              swift_bridgeObjectRelease();
              v8 = v23;
            }
            goto LABEL_15;
          }
          v45 = v12;
          v46 = v14 & 0xFFFFFFFFFFFFFFLL;
          if (v12 == 43)
          {
            if (!v19)
              goto LABEL_101;
            if (v19 == 1 || (BYTE1(v12) - 48) > 9u)
              goto LABEL_75;
            v23 = (BYTE1(v12) - 48);
            if (v19 != 2)
            {
              if ((BYTE2(v12) - 48) > 9u)
                goto LABEL_75;
              v23 = 10 * (BYTE1(v12) - 48) + (BYTE2(v12) - 48);
              v28 = v19 - 3;
              if (v28)
              {
                v29 = (unsigned __int8 *)&v45 + 3;
                while (1)
                {
                  v30 = *v29 - 48;
                  if (v30 > 9)
                    goto LABEL_75;
                  v31 = 10 * v23;
                  if ((unsigned __int128)(v23 * (__int128)10) >> 64 != (10 * v23) >> 63)
                    goto LABEL_75;
                  v23 = v31 + v30;
                  if (__OFADD__(v31, v30))
                    goto LABEL_75;
                  LOBYTE(v12) = 0;
                  ++v29;
                  if (!--v28)
                    goto LABEL_88;
                }
              }
            }
          }
          else
          {
            if (v12 == 45)
            {
              if (v19)
              {
                if (v19 != 1 && (BYTE1(v12) - 48) <= 9u)
                {
                  if (v19 == 2)
                  {
                    LOBYTE(v12) = 0;
                    v23 = -(uint64_t)(BYTE1(v12) - 48);
                    goto LABEL_88;
                  }
                  if ((BYTE2(v12) - 48) <= 9u)
                  {
                    v23 = -10 * (BYTE1(v12) - 48) - (BYTE2(v12) - 48);
                    v36 = v19 - 3;
                    if (!v36)
                      goto LABEL_87;
                    v41 = (unsigned __int8 *)&v45 + 3;
                    while (1)
                    {
                      v42 = *v41 - 48;
                      if (v42 > 9)
                        break;
                      v43 = 10 * v23;
                      if ((unsigned __int128)(v23 * (__int128)10) >> 64 != (10 * v23) >> 63)
                        break;
                      v23 = v43 - v42;
                      if (__OFSUB__(v43, v42))
                        break;
                      LOBYTE(v12) = 0;
                      ++v41;
                      if (!--v36)
                        goto LABEL_88;
                    }
                  }
                }
LABEL_75:
                v23 = 0;
                LOBYTE(v12) = 1;
                goto LABEL_88;
              }
              __break(1u);
LABEL_101:
              __break(1u);
              JUMPOUT(0x20A4AAB80);
            }
            if (!v19 || (v12 - 48) > 9u)
              goto LABEL_75;
            v23 = (v12 - 48);
            if (v19 != 1)
            {
              if ((BYTE1(v12) - 48) > 9u)
                goto LABEL_75;
              v23 = 10 * (v12 - 48) + (BYTE1(v12) - 48);
              v32 = v19 - 2;
              if (v32)
              {
                v33 = (unsigned __int8 *)&v45 + 2;
                while (1)
                {
                  v34 = *v33 - 48;
                  if (v34 > 9)
                    goto LABEL_75;
                  v35 = 10 * v23;
                  if ((unsigned __int128)(v23 * (__int128)10) >> 64 != (10 * v23) >> 63)
                    goto LABEL_75;
                  v23 = v35 + v34;
                  if (__OFADD__(v35, v34))
                    goto LABEL_75;
                  LOBYTE(v12) = 0;
                  ++v33;
                  if (!--v32)
                    goto LABEL_88;
                }
              }
            }
          }
LABEL_87:
          LOBYTE(v12) = 0;
          goto LABEL_88;
        }
      }
      swift_bridgeObjectRelease();
    }
    else
    {

    }
LABEL_15:
    if (v8 <= 303)
    {
      if (v8 == 200 || v8 == 204)
      {

        return 0;
      }
      if (v8 == 301)
      {
        v15 = -86;
      }
      else
      {
LABEL_37:
        if (v8 == 504)
          v15 = -72;
        else
          v15 = -87;
      }
    }
    else
    {
      switch(v8)
      {
        case 400:
          v15 = -84;
          break;
        case 401:
          v15 = -83;
          break;
        case 402:
        case 405:
        case 406:
        case 407:
        case 408:
        case 409:
        case 410:
        case 411:
        case 412:
        case 413:
        case 414:
        case 415:
        case 416:
        case 417:
        case 418:
        case 419:
        case 420:
        case 421:
        case 422:
        case 423:
        case 424:
        case 425:
        case 426:
        case 427:
        case 430:
        case 431:
        case 432:
        case 435:
        case 436:
        case 437:
        case 438:
        case 439:
        case 440:
        case 441:
        case 442:
        case 443:
        case 444:
        case 445:
        case 446:
        case 447:
        case 448:
        case 449:
        case 450:
        case 451:
        case 452:
        case 453:
        case 454:
        case 455:
        case 456:
        case 457:
        case 458:
        case 459:
        case 460:
        case 461:
        case 462:
        case 463:
        case 464:
        case 465:
        case 466:
        case 467:
        case 468:
        case 469:
        case 470:
        case 471:
        case 472:
        case 473:
        case 474:
        case 475:
        case 476:
        case 477:
        case 478:
        case 479:
        case 480:
        case 481:
        case 482:
        case 483:
        case 484:
        case 485:
        case 486:
        case 487:
        case 488:
        case 489:
        case 490:
        case 491:
        case 492:
        case 493:
        case 494:
        case 495:
        case 496:
        case 497:
        case 498:
        case 499:
          goto LABEL_37;
        case 403:
          v15 = -82;
          break;
        case 404:
          v15 = -81;
          break;
        case 428:
          v15 = -80;
          break;
        case 429:
          v15 = -79;
          break;
        case 433:
          v15 = -78;
          break;
        case 434:
          v15 = -77;
          break;
        case 500:
          v15 = -76;
          break;
        case 501:
          v15 = -75;
          break;
        case 502:
          v15 = -74;
          break;
        case 503:
          v15 = -73;
          break;
        default:
          if (v8 != 304)
            goto LABEL_37;
          v15 = -85;
          break;
      }
    }
    LOBYTE(v45) = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5290);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_20A5BA9A0;
    *(_BYTE *)(inited + 32) = 3;
    *(_QWORD *)(inited + 64) = MEMORY[0x24BEE1768];
    *(_QWORD *)(inited + 40) = v8;
    v26 = sub_20A469DA8(inited);
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001FLL, 0x800000020A5DF2E0, 0, (unsigned __int8 *)&v45, 0, v26, 0xD000000000000058, 0x800000020A5DF030, 0xD00000000000001ELL, 0x800000020A5DF090, 458);
LABEL_52:
    v3 = v18;
    swift_bridgeObjectRelease();

    return v3;
  }
  LOBYTE(v45) = 10;
  ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000002ALL, 0x800000020A5DF000, a2, (unsigned __int8 *)&v45, 0, 0, 0xD000000000000058, 0x800000020A5DF030, 0xD00000000000001ELL, 0x800000020A5DF090, 405);
  return v2;
}

uint64_t sub_20A4AAD20()
{
  uint64_t v0;

  return sub_20A4A97C0(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_20A4AAD6C()
{
  return swift_task_switch();
}

uint64_t sub_20A4AAD80()
{
  uint64_t v0;

  if (qword_253EB4EB8 != -1)
    swift_once();
  *(_QWORD *)(v0 + 240) = qword_253EB4EB0;
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_20A4AADF0()
{
  uint64_t v0;
  _QWORD *v2;

  if ((*(_BYTE *)(*(_QWORD *)(v0 + 240) + 168) & 1) != 0)
    return swift_task_switch();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 248) = v2;
  *v2 = v0;
  v2[1] = sub_20A4AAE60;
  return sub_20A4BBF60();
}

uint64_t sub_20A4AAE60()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A4AAEB0()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  v1 = v0[30];
  v0[32] = sub_20A4AB838();
  v2 = (_QWORD *)swift_task_alloc();
  v0[33] = v2;
  v2[2] = v1;
  v2[3] = 0x54746375646F7250;
  v2[4] = 0xEB00000000657079;
  v3 = (_QWORD *)swift_task_alloc();
  v0[34] = v3;
  v0[35] = __swift_instantiateConcreteTypeFromMangledName(&qword_253EB50E8);
  *v3 = v0;
  v3[1] = sub_20A4AAFA0;
  return sub_20A5B917C();
}

uint64_t sub_20A4AAFA0()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  *(_OWORD *)(v1 + 288) = *(_OWORD *)(v1 + 160);
  return swift_task_switch();
}

uint64_t sub_20A4AB00C()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  v1 = v0[30];
  v2 = (_QWORD *)swift_task_alloc();
  v0[38] = v2;
  v2[2] = v1;
  v2[3] = 0x4E746375646F7250;
  v2[4] = 0xEB00000000656D61;
  v3 = (_QWORD *)swift_task_alloc();
  v0[39] = v3;
  *v3 = v0;
  v3[1] = sub_20A4AB0DC;
  return sub_20A5B917C();
}

uint64_t sub_20A4AB0DC()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  *(_OWORD *)(v1 + 320) = *(_OWORD *)(v1 + 192);
  return swift_task_switch();
}

uint64_t sub_20A4AB148()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[30];
  v2 = swift_task_alloc();
  v0[42] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  strcpy((char *)(v2 + 24), "ProductVersion");
  *(_BYTE *)(v2 + 39) = -18;
  v3 = (_QWORD *)swift_task_alloc();
  v0[43] = v3;
  *v3 = v0;
  v3[1] = sub_20A4AB21C;
  return sub_20A5B917C();
}

uint64_t sub_20A4AB21C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  *(_OWORD *)(v1 + 352) = *(_OWORD *)(v1 + 176);
  return swift_task_switch();
}

uint64_t sub_20A4AB288()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[30];
  v2 = swift_task_alloc();
  v0[46] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  strcpy((char *)(v2 + 24), "BuildVersion");
  *(_BYTE *)(v2 + 37) = 0;
  *(_WORD *)(v2 + 38) = -5120;
  v3 = (_QWORD *)swift_task_alloc();
  v0[47] = v3;
  *v3 = v0;
  v3[1] = sub_20A4AB358;
  return sub_20A5B917C();
}

uint64_t sub_20A4AB358()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  *(_OWORD *)(v1 + 384) = *(_OWORD *)(v1 + 144);
  return swift_task_switch();
}

id sub_20A4AB3B8()
{
  uint64_t v0;
  uint64_t ObjCClassFromMetadata;
  void *v2;
  id result;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  id v10;
  void *v11;

  type metadata accessor for DIPHTTPSession();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v2 = (void *)objc_opt_self();
  result = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  v4 = *MEMORY[0x24BDBD2A0];
  if (!*MEMORY[0x24BDBD2A0])
  {
    __break(1u);
    return result;
  }
  v5 = result;
  if (objc_msgSend(result, sel_objectForInfoDictionaryKey_, *MEMORY[0x24BDBD2A0]))
  {
    sub_20A5B8DA4();
    swift_unknownObjectRelease();
  }
  else
  {
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
  }
  sub_20A459C88(v0 + 16, v0 + 112, &qword_253EB52E0);
  if (*(_QWORD *)(v0 + 136))
    swift_dynamicCast();
  else
    sub_20A44CE2C(v0 + 112, &qword_253EB52E0);
  v6 = objc_msgSend(v5, sel_bundleIdentifier);
  if (v6)
  {
    v7 = v6;
    sub_20A5B8900();

  }
  v8 = objc_msgSend(v2, sel_mainBundle);
  if (objc_msgSend(v8, sel_objectForInfoDictionaryKey_, v4))
  {
    sub_20A5B8DA4();
    swift_unknownObjectRelease();
  }
  else
  {
    *(_OWORD *)(v0 + 48) = 0u;
    *(_OWORD *)(v0 + 64) = 0u;
  }
  sub_20A459C88(v0 + 48, v0 + 80, &qword_253EB52E0);
  if (!*(_QWORD *)(v0 + 104))
  {
    sub_20A44CE2C(v0 + 80, &qword_253EB52E0);
    goto LABEL_17;
  }
  if (!swift_dynamicCast())
  {
LABEL_17:
    v9 = 7104878;
    goto LABEL_18;
  }
  v9 = *(_QWORD *)(v0 + 208);
LABEL_18:
  v10 = objc_msgSend(v8, sel_bundleIdentifier, v9);
  if (v10)
  {
    v11 = v10;
    sub_20A5B8900();

  }
  sub_20A5B899C();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  swift_release();

  return (id)(*(uint64_t (**)(uint64_t, unint64_t))(v0 + 8))(60, 0xE100000000000000);
}

unint64_t sub_20A4AB838()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2545FA630;
  if (!qword_2545FA630)
  {
    v1 = type metadata accessor for ODIDeviceInfo();
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for ODIDeviceInfo, v1);
    atomic_store(result, (unint64_t *)&qword_2545FA630);
  }
  return result;
}

uint64_t sub_20A4AB880(__SecTrust *a1)
{
  id v2;
  void *v3;
  unsigned __int8 v4;
  id v5;
  _BOOL8 v6;
  __CFError *v7;
  CFStringRef v8;
  __CFString *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v20;
  CFErrorRef error[2];

  error[1] = *(CFErrorRef *)MEMORY[0x24BDAC8D0];
  v2 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  if (qword_253EB4740 != -1)
    swift_once();
  if (byte_253EBC790 == 1)
  {
    v3 = (void *)sub_20A5B88F4();
    v4 = objc_msgSend(v2, sel_BOOLForKey_, v3);

    if ((v4 & 1) != 0)
    {
      if (qword_253EB5040 != -1)
        swift_once();
      v5 = (id)qword_253EBC880;
      sub_20A5B8C3C();
      sub_20A5B87B0();

      return 1;
    }
  }
  else
  {

  }
  error[0] = 0;
  v6 = SecTrustEvaluateWithError(a1, error);
  if (error[0])
  {
    v7 = error[0];
    v8 = CFErrorCopyDescription(v7);
    if (v8)
    {
      v9 = (__CFString *)v8;
      v10 = sub_20A5B8900();
      v12 = v11;

    }
    else
    {
      v10 = 0;
      v12 = 0;
    }
    if (qword_253EB4A40 != -1)
      swift_once();
    v13 = sub_20A5B8804();
    __swift_project_value_buffer(v13, (uint64_t)qword_253EB4A20);
    swift_bridgeObjectRetain();
    v14 = sub_20A5B87EC();
    v15 = sub_20A5B8C54();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      v17 = swift_slowAlloc();
      v20 = v17;
      *(_DWORD *)v16 = 136315138;
      if (v12)
      {
        v18 = v12;
      }
      else
      {
        v10 = 7104878;
        v18 = 0xE300000000000000;
      }
      swift_bridgeObjectRetain();
      sub_20A503EE0(v10, v18, &v20);
      sub_20A5B8D50();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_20A443000, v14, v15, "Invalid server certificate, error: %s", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x20BD26DB8](v17, -1, -1);
      MEMORY[0x20BD26DB8](v16, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }

  return v6;
}

void sub_20A4ABBE8(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA648);
  v4 = MEMORY[0x24BDAC7A8](v2, v3);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4, v7);
  v9 = (char *)&v30 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB4980);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_253EB4A40 != -1)
    swift_once();
  v14 = sub_20A5B8804();
  __swift_project_value_buffer(v14, (uint64_t)qword_253EB4A20);
  v31 = a1;
  v15 = sub_20A5B87EC();
  v16 = sub_20A5B8C48();
  if (!os_log_type_enabled(v15, v16))
  {

    return;
  }
  v17 = (uint8_t *)swift_slowAlloc();
  v18 = swift_slowAlloc();
  v33 = v18;
  *(_DWORD *)v17 = 136315138;
  v19 = objc_msgSend(v31, sel_currentRequest);
  if (v19)
  {
    v20 = v19;
    sub_20A5B8204();

    v21 = sub_20A5B8240();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v6, 0, 1, v21);
  }
  else
  {
    v21 = sub_20A5B8240();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v6, 1, 1, v21);
  }
  sub_20A459C88((uint64_t)v6, (uint64_t)v9, &qword_2545FA648);
  sub_20A5B8240();
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v9, 1, v21) == 1)
  {
    v23 = &qword_2545FA648;
    v24 = (uint64_t)v9;
  }
  else
  {
    sub_20A5B821C();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v9, v21);
    v25 = sub_20A5B84D4();
    v26 = *(_QWORD *)(v25 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v13, 1, v25) != 1)
    {
      v27 = sub_20A5B8444();
      v28 = v29;
      (*(void (**)(char *, uint64_t))(v26 + 8))(v13, v25);
      goto LABEL_14;
    }
    v23 = (uint64_t *)&unk_253EB4980;
    v24 = (uint64_t)v13;
  }
  sub_20A44CE2C(v24, v23);
  v27 = 0;
  v28 = 0xE000000000000000;
LABEL_14:
  v32 = sub_20A503EE0(v27, v28, &v33);
  sub_20A5B8D50();

  swift_bridgeObjectRelease();
  _os_log_impl(&dword_20A443000, v15, v16, "Task for URL %s is waiting for connectivity", v17, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x20BD26DB8](v18, -1, -1);
  MEMORY[0x20BD26DB8](v17, -1, -1);

}

void sub_20A4ABF6C(void *a1)
{
  id v2;
  uint64_t v3;
  id v4;
  os_log_type_t v5;
  uint8_t *v6;
  _QWORD *v7;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  NSObject *oslog;
  uint64_t v12;

  if (a1)
  {
    v2 = a1;
    if (qword_253EB4A40 != -1)
      swift_once();
    v3 = sub_20A5B8804();
    __swift_project_value_buffer(v3, (uint64_t)qword_253EB4A20);
    v4 = a1;
    oslog = sub_20A5B87EC();
    v5 = sub_20A5B8C48();
    if (os_log_type_enabled(oslog, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      v7 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v6 = 138412290;
      v12 = sub_20A5B8414();
      sub_20A5B8D50();
      *v7 = v12;

      _os_log_impl(&dword_20A443000, oslog, v5, "URL session became invalid with error %@", v6, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA640);
      swift_arrayDestroy();
      MEMORY[0x20BD26DB8](v7, -1, -1);
      MEMORY[0x20BD26DB8](v6, -1, -1);

      return;
    }

  }
  else
  {
    if (qword_253EB4A40 != -1)
      swift_once();
    v8 = sub_20A5B8804();
    __swift_project_value_buffer(v8, (uint64_t)qword_253EB4A20);
    oslog = sub_20A5B87EC();
    v9 = sub_20A5B8C48();
    if (os_log_type_enabled(oslog, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_20A443000, oslog, v9, "URL session did become invalid, explicit invalidation", v10, 2u);
      MEMORY[0x20BD26DB8](v10, -1, -1);
    }
  }

}

void sub_20A4AC1D0(void *a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  __SecTrust *v10;
  __SecTrust *v11;
  id v12;
  id v13;

  v13 = objc_msgSend(a1, sel_protectionSpace);
  v3 = objc_msgSend(v13, sel_authenticationMethod);
  v4 = sub_20A5B8900();
  v6 = v5;

  if (sub_20A5B8900() == v4 && v7 == v6)
  {
    swift_bridgeObjectRelease_n();
LABEL_8:
    v10 = (__SecTrust *)objc_msgSend(v13, sel_serverTrust);
    if (v10)
    {
      v11 = v10;
      if ((sub_20A4AB880(v10) & 1) != 0)
      {
        v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1818]), sel_initWithTrust_, v11);
        (*(void (**)(uint64_t, _QWORD, id))(a2 + 16))(a2, 0, v12);

        v13 = v12;
        goto LABEL_13;
      }

    }
    (*(void (**)(uint64_t, uint64_t, _QWORD))(a2 + 16))(a2, 2, 0);
    goto LABEL_13;
  }
  v9 = sub_20A5B91AC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
    goto LABEL_8;
  (*(void (**)(uint64_t, uint64_t, _QWORD))(a2 + 16))(a2, 1, 0);
LABEL_13:

}

uint64_t sub_20A4AC32C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA648);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A4AC374(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_20A4AC39C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_20A4AC3C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_20A4AC3E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 16))();
}

uint64_t sub_20A4AC3F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 24))();
}

uint64_t sub_20A4AC410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(uint64_t))(a9 + 32))(a1);
}

uint64_t sub_20A4AC438(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t type metadata accessor for DIPECIESSessionECV1()
{
  return objc_opt_self();
}

uint64_t sub_20A4AC470()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_20A4AE4BC();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_20A4AC498()
{
  return sub_20A4AE610();
}

uint64_t sub_20A4AC4AC(void *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  __SecKey *v5;
  __SecKey *v6;
  void *v7;
  __CFError *v8;
  __CFError *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  CFDataRef v16;
  const __CFData *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[2];
  CFErrorRef error[3];

  v3 = v1;
  error[2] = *(CFErrorRef *)MEMORY[0x24BDAC8D0];
  if (a1)
  {
    *(_QWORD *)(v3 + 16) = a1;
    v5 = a1;
    v6 = SecKeyCopyPublicKey(v5);
    if (!v6)
    {
      LOWORD(error[0]) = 121;
      DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001BLL, 0x800000020A5DFBD0, 0, (unsigned __int16 *)error, 0, 0, 0xD00000000000006ELL, 0x800000020A5DF740, 0x293A5F2874696E69, 0xE800000000000000, 127);
      swift_willThrow();

      v7 = *(void **)(v3 + 16);
LABEL_12:

LABEL_13:
      type metadata accessor for DIPECIESSessionECV3();
      swift_deallocPartialClassInstance();
      return v3;
    }
  }
  else
  {
    sub_20A462EC8(0, 0, 0);
    if (v2)
    {
      if (qword_253EB5040 != -1)
        swift_once();
      v10 = (id)qword_253EBC880;
      sub_20A5B8C54();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52C0);
      v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_20A5BA9A0;
      swift_getErrorValue();
      v12 = sub_20A5B923C();
      v14 = v13;
      *(_QWORD *)(v11 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v11 + 64) = sub_20A450420();
      *(_QWORD *)(v11 + 32) = v12;
      *(_QWORD *)(v11 + 40) = v14;
      sub_20A5B87B0();

      swift_bridgeObjectRelease();
      LOWORD(error[0]) = 0;
      v15 = v2;
      DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000024, 0x800000020A5DFB70, v2, (unsigned __int16 *)error, 0, 0, 0xD00000000000006ELL, 0x800000020A5DF740, 0x293A5F2874696E69, 0xE800000000000000, 135);

      swift_willThrow();
      goto LABEL_13;
    }
    error[0] = v8;
    error[1] = v9;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB48A0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253EB48B8);
    swift_dynamicCast();
    v6 = (__SecKey *)v22[1];
    *(_QWORD *)(v3 + 16) = v22[0];
  }
  *(_QWORD *)(v3 + 24) = v6;
  error[0] = 0;
  v16 = SecKeyCopyExternalRepresentation(v6, error);
  if (!v16)
  {
    LOWORD(v22[0]) = 121;
    sub_20A461CCC(error[0], 0xD000000000000021, 0x800000020A5DFBA0, (__int16 *)v22);
    swift_willThrow();

    v7 = *(void **)(v3 + 24);
    goto LABEL_12;
  }
  v17 = v16;
  v18 = sub_20A5B8564();
  v20 = v19;

  *(_QWORD *)(v3 + 32) = v18;
  *(_QWORD *)(v3 + 40) = v20;
  return v3;
}

uint64_t sub_20A4AC838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v6;
  char v7;
  unsigned __int16 v9[16];
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  if (a4)
  {
    if (*(_QWORD *)(a4 + 16))
    {
      sub_20A470A88(0);
      if ((v6 & 1) != 0)
      {
        if (*(_QWORD *)(a4 + 16))
        {
          sub_20A470A88(1);
          if ((v7 & 1) != 0)
            __asm { BR              X9 }
        }
      }
    }
  }
  v9[0] = 74;
  DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000053, 0x800000020A5DF840, 0, v9, 0, 0, 0xD00000000000006ELL, 0x800000020A5DF740, 0x2874707972636E65, 0xEF293A5F3A5F3A5FLL, 178);
  return swift_willThrow();
}

uint64_t sub_20A4ACFB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, void *a5@<X4>, uint64_t *a6@<X8>)
{
  const __CFData *v11;
  uint64_t result;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t inited;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t *v29;
  _QWORD v30[2];
  int v31;

  v11 = *(const __CFData **)(a3 + 16);
  result = (uint64_t)CFDataGetBytePtr(v11);
  if (!result)
  {
    __break(1u);
    goto LABEL_11;
  }
  v29 = a6;
  result = (uint64_t)CFDataGetBytePtr(v11);
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (a1)
    v13 = a2 - a1;
  else
    v13 = 0;
  v14 = objc_retainAutorelease(a4);
  v15 = objc_msgSend(v14, sel_mutableBytes);
  v16 = objc_retainAutorelease(a5);
  v28 = objc_msgSend(v16, sel_mutableBytes);
  v17 = CCCryptorGCMOneshotEncrypt();
  if (v17)
  {
    v18 = v17;
    sub_20A5B8E94();
    swift_bridgeObjectRelease();
    v30[0] = 0xD00000000000007ALL;
    v30[1] = 0x800000020A5DFB10;
    v31 = v18;
    v19 = MEMORY[0x24BEE3F88];
    sub_20A5B9170();
    sub_20A5B899C();
    swift_bridgeObjectRelease();
    sub_20A5B899C();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB5280);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_20A5BA9A0;
    *(_BYTE *)(inited + 32) = 20;
    *(_QWORD *)(inited + 64) = v19;
    *(_DWORD *)(inited + 40) = v18;
    v21 = sub_20A469DC4(inited);
    DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000027, 0x800000020A5DFB10, 0, (unsigned __int16 *)v30, 0, v21, 0xD00000000000006ELL, 0x800000020A5DF740, 0x2874707972636E65, 0xEF293A5F3A5F3A5FLL, 208);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_willThrow();
  }
  objc_msgSend(v14, sel_appendData_, v16, v13, v15, v28, 16);
  result = (uint64_t)CFDataGetBytePtr(v11);
  if (result)
  {
    v22 = sub_20A4AE564((_BYTE *)(result + 16), 16);
    v24 = v23;
    *v29 = v22;
    v29[1] = v23;
    sub_20A45964C(v22, v23);
    v25 = sub_20A5B8564();
    v27 = v26;
    result = sub_20A44BD90(v22, v24);
    v29[2] = v25;
    v29[3] = v27;
    return result;
  }
LABEL_12:
  __break(1u);
  return result;
}

void sub_20A4AD258(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X9 }
}

void sub_20A4AD2C4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, CFErrorRef error,__int128 a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  uint64_t v36;

  if (BYTE6(v36) == 65)
    __asm { BR              X9 }
  sub_20A5B8E94();
  sub_20A5B899C();
  __asm { BR              X11 }
}

#error "20A4AD670: call analysis failed (funcsize=38)"

void sub_20A4AD5C8()
{
  sub_20A5B9170();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  JUMPOUT(0x20A4AD64CLL);
}

uint64_t sub_20A4AD768()
{
  uint64_t v0;

  sub_20A44BD90(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DIPECIESSessionECV3()
{
  return objc_opt_self();
}

uint64_t sub_20A4AD7BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_20A4AE368(a1, a2, a3, a4, a5, a6, (uint64_t (*)(void))sub_20A4AC838);
}

uint64_t sub_20A4AD7D8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 32);
  sub_20A45964C(v2, *(_QWORD *)(v1 + 40));
  return v2;
}

__SecKey *sub_20A4AD81C(char a1, SecKeyRef key)
{
  _QWORD *v2;
  _QWORD *v3;
  __SecKey *v4;
  CFDataRef v6;
  CFDataRef v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  __SecKey *v17;
  const __CFString *v18;
  __int128 v20;
  CFErrorRef error[2];

  v3 = v2;
  v4 = key;
  error[1] = *(CFErrorRef *)MEMORY[0x24BDAC8D0];
  error[0] = 0;
  v6 = SecKeyCopyExternalRepresentation(key, error);
  if (v6)
  {
    v7 = v6;
    v8 = sub_20A5B8564();
    v10 = v9;

    v11 = v3[4];
    v12 = v3[5];
    if ((a1 & 1) != 0)
      v13 = v3[4];
    else
      v13 = v8;
    if ((a1 & 1) != 0)
      v14 = v3[5];
    else
      v14 = v10;
    if ((a1 & 1) != 0)
      v15 = v8;
    else
      v15 = v3[4];
    if ((a1 & 1) != 0)
      v16 = v10;
    else
      v16 = v3[5];
    v20 = xmmword_20A5BA9C0;
    sub_20A45964C(v11, v12);
    sub_20A45964C(v8, v10);
    sub_20A5B8570();
    sub_20A5B8570();
    v17 = (__SecKey *)v3[2];
    v18 = (const __CFString *)*MEMORY[0x24BDE9290];
    sub_20A45964C(0, 0xC000000000000000);
    v4 = (__SecKey *)sub_20A462B78(v17, v4, v18, 32, 0, 0xC000000000000000);
    sub_20A44BD90(0, 0xC000000000000000);
    sub_20A44BD90(v15, v16);
    sub_20A44BD90(v13, v14);
    sub_20A44BD90(v8, v10);
    sub_20A44BD90(0, 0xC000000000000000);
  }
  else
  {
    LOWORD(v20) = 121;
    sub_20A461CCC(error[0], 0xD000000000000029, 0x800000020A5DF9E0, (__int16 *)&v20);
    swift_willThrow();
  }
  return v4;
}

uint64_t type metadata accessor for DIPECIESSessionECV3SH()
{
  return objc_opt_self();
}

uint64_t sub_20A4ADA04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  __int128 v10;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  if (a4)
  {
    if (*(_QWORD *)(a4 + 16))
    {
      v5 = sub_20A470A88(0);
      if ((v6 & 1) != 0)
      {
        if (*(_QWORD *)(a4 + 16))
        {
          v7 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 16 * v5 + 8);
          sub_20A470A88(1);
          if ((v8 & 1) != 0)
            __asm { BR              X9 }
        }
      }
    }
  }
  LOWORD(v10) = 74;
  DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000053, 0x800000020A5DF840, 0, (unsigned __int16 *)&v10, 0, 0, 0xD00000000000006ELL, 0x800000020A5DF740, 0x2874707972636E65, 0xEF293A5F3A5F3A5FLL, 357);
  return swift_willThrow();
}

uint64_t sub_20A4AE300()
{
  uint64_t v0;

  sub_20A44CFC4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DIPECIESSessionV3SecKey()
{
  return objc_opt_self();
}

uint64_t sub_20A4AE34C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_20A4AE368(a1, a2, a3, a4, a5, a6, (uint64_t (*)(void))sub_20A4ADA04);
}

uint64_t sub_20A4AE368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void))
{
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  result = a7();
  if (v7)
    return v9;
  return result;
}

uint64_t sub_20A4AE39C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v1 = sub_20A4AE6A8();
  v3 = v1;
  if (!v0)
    sub_20A45964C(v1, v2);
  return v3;
}

uint64_t sub_20A4AE3EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, void *a4@<X4>, void *a5@<X5>, uint64_t *a6@<X8>)
{
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  result = sub_20A5B833C();
  v13 = result;
  if (result)
  {
    result = sub_20A5B8360();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v13 += a1 - result;
  }
  v14 = __OFSUB__(a2, a1);
  v15 = a2 - a1;
  if (v14)
  {
    __break(1u);
    goto LABEL_13;
  }
  v16 = sub_20A5B8354();
  if (v16 >= v15)
    v17 = v15;
  else
    v17 = v16;
  v18 = v13 + v17;
  if (v13)
    v19 = v18;
  else
    v19 = 0;
  sub_20A4ACFB8(v13, v19, a3, a4, a5, a6);

  return swift_release();
}

uint64_t sub_20A4AE4BC()
{
  unsigned __int16 v1;

  v1 = 75;
  DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000003DLL, 0x800000020A5DF7D0, 0, &v1, 0, 0, 0xD00000000000006ELL, 0x800000020A5DF740, 0x2874707972636E65, 0xEF293A5F3A5F3A5FLL, 75);
  return swift_willThrow();
}

uint64_t sub_20A4AE564(_BYTE *__src, uint64_t a2)
{
  uint64_t result;

  if (!a2)
    return 0;
  if (a2 <= 14)
    return sub_20A44BB28(__src, &__src[a2]);
  sub_20A5B836C();
  swift_allocObject();
  sub_20A5B8330();
  if ((unint64_t)a2 < 0x7FFFFFFF)
    return a2 << 32;
  sub_20A5B8510();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

uint64_t sub_20A4AE610()
{
  unsigned __int16 v1;

  v1 = 75;
  DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000002FLL, 0x800000020A5DF710, 0, &v1, 0, 0, 0xD00000000000006ELL, 0x800000020A5DF740, 0xD000000000000013, 0x800000020A5DF7B0, 102);
  return swift_willThrow();
}

uint64_t sub_20A4AE6A8()
{
  uint64_t v0;
  unsigned __int16 v2;

  if (*(_QWORD *)(v0 + 24) >> 60 != 15)
    return *(_QWORD *)(v0 + 16);
  v2 = 73;
  DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000020, 0x800000020A5DF810, 0, &v2, 0, 0, 0xD00000000000006ELL, 0x800000020A5DF740, 0xD000000000000013, 0x800000020A5DF7B0, 428);
  return swift_willThrow();
}

unint64_t sub_20A4AE75C()
{
  unint64_t result;
  unint64_t v1;

  result = qword_253EB4888;
  if (!qword_253EB4888)
  {
    v1 = sub_20A462DE0();
    result = MEMORY[0x20BD26CEC](MEMORY[0x24BEE5BD8], v1);
    atomic_store(result, (unint64_t *)&qword_253EB4888);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ECIESOption(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_20A4AE7F0 + 4 * byte_20A5C0BC5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_20A4AE824 + 4 * byte_20A5C0BC0[v4]))();
}

uint64_t sub_20A4AE824(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A4AE82C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A4AE834);
  return result;
}

uint64_t sub_20A4AE840(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A4AE848);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_20A4AE84C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A4AE854(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ECIESOption()
{
  return &type metadata for ECIESOption;
}

unint64_t sub_20A4AE874()
{
  unint64_t result;

  result = qword_253EB4470;
  if (!qword_253EB4470)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C0D24, &type metadata for ECIESOption);
    atomic_store(result, (unint64_t *)&qword_253EB4470);
  }
  return result;
}

uint64_t sub_20A4AE8B8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v52)(uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v55;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v6 = a2[2];
    if (v6)
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      *(_QWORD *)(a1 + 8) = a2[1];
      *(_QWORD *)(a1 + 16) = v6;
      v7 = a2[4];
      *(_QWORD *)(a1 + 24) = a2[3];
      *(_QWORD *)(a1 + 32) = v7;
      v8 = a2[6];
      *(_QWORD *)(a1 + 40) = a2[5];
      *(_QWORD *)(a1 + 48) = v8;
      v9 = a2[8];
      *(_QWORD *)(a1 + 56) = a2[7];
      *(_QWORD *)(a1 + 64) = v9;
      v10 = a2[10];
      *(_QWORD *)(a1 + 72) = a2[9];
      *(_QWORD *)(a1 + 80) = v10;
      v11 = a2[12];
      *(_QWORD *)(a1 + 88) = a2[11];
      *(_QWORD *)(a1 + 96) = v11;
      v12 = a2[14];
      *(_QWORD *)(a1 + 104) = a2[13];
      *(_QWORD *)(a1 + 112) = v12;
      v13 = a2[16];
      *(_QWORD *)(a1 + 120) = a2[15];
      *(_QWORD *)(a1 + 128) = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v14 = a2[19];
      if (v14)
      {
LABEL_4:
        *(_BYTE *)(a1 + 136) = *((_BYTE *)a2 + 136);
        *(_QWORD *)(a1 + 144) = a2[18];
        *(_QWORD *)(a1 + 152) = v14;
        v15 = a2[21];
        *(_QWORD *)(a1 + 160) = a2[20];
        *(_QWORD *)(a1 + 168) = v15;
        v16 = a2[23];
        *(_QWORD *)(a1 + 176) = a2[22];
        *(_QWORD *)(a1 + 184) = v16;
        v17 = a2[25];
        *(_QWORD *)(a1 + 192) = a2[24];
        *(_QWORD *)(a1 + 200) = v17;
        v18 = a2[27];
        *(_QWORD *)(a1 + 208) = a2[26];
        *(_QWORD *)(a1 + 216) = v18;
        v19 = a2[29];
        *(_QWORD *)(a1 + 224) = a2[28];
        *(_QWORD *)(a1 + 232) = v19;
        v20 = a2[31];
        *(_QWORD *)(a1 + 240) = a2[30];
        *(_QWORD *)(a1 + 248) = v20;
        v21 = a2[33];
        *(_QWORD *)(a1 + 256) = a2[32];
        *(_QWORD *)(a1 + 264) = v21;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_8;
      }
    }
    else
    {
      v23 = *((_OWORD *)a2 + 7);
      *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
      *(_OWORD *)(a1 + 112) = v23;
      *(_QWORD *)(a1 + 128) = a2[16];
      v24 = *((_OWORD *)a2 + 3);
      *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 48) = v24;
      v25 = *((_OWORD *)a2 + 5);
      *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
      *(_OWORD *)(a1 + 80) = v25;
      v26 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v26;
      v14 = a2[19];
      if (v14)
        goto LABEL_4;
    }
    v27 = *(_OWORD *)(a2 + 31);
    *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 29);
    *(_OWORD *)(a1 + 248) = v27;
    *(_QWORD *)(a1 + 264) = a2[33];
    v28 = *(_OWORD *)(a2 + 23);
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 21);
    *(_OWORD *)(a1 + 184) = v28;
    v29 = *(_OWORD *)(a2 + 27);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 25);
    *(_OWORD *)(a1 + 216) = v29;
    v30 = *(_OWORD *)(a2 + 19);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 17);
    *(_OWORD *)(a1 + 152) = v30;
LABEL_8:
    v31 = a2[35];
    *(_QWORD *)(a1 + 272) = a2[34];
    *(_QWORD *)(a1 + 280) = v31;
    v32 = a2[37];
    *(_QWORD *)(a1 + 288) = a2[36];
    *(_QWORD *)(a1 + 296) = v32;
    v33 = a2[39];
    *(_QWORD *)(a1 + 304) = a2[38];
    *(_QWORD *)(a1 + 312) = v33;
    v34 = a2[44];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v34 == 1)
    {
      v35 = *((_OWORD *)a2 + 21);
      *(_OWORD *)(a1 + 320) = *((_OWORD *)a2 + 20);
      *(_OWORD *)(a1 + 336) = v35;
      *(_QWORD *)(a1 + 352) = a2[44];
      v36 = a2[46];
      if (v36)
      {
LABEL_10:
        *(_QWORD *)(a1 + 360) = a2[45];
        *(_QWORD *)(a1 + 368) = v36;
        v37 = a2[48];
        *(_QWORD *)(a1 + 376) = a2[47];
        *(_QWORD *)(a1 + 384) = v37;
        v38 = a2[50];
        *(_QWORD *)(a1 + 392) = a2[49];
        *(_QWORD *)(a1 + 400) = v38;
        v39 = a2[52];
        *(_QWORD *)(a1 + 408) = a2[51];
        *(_QWORD *)(a1 + 416) = v39;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_13:
        v43 = a2[54];
        *(_QWORD *)(a1 + 424) = a2[53];
        *(_QWORD *)(a1 + 432) = v43;
        v44 = a2[56];
        *(_QWORD *)(a1 + 440) = a2[55];
        *(_QWORD *)(a1 + 448) = v44;
        v45 = a2[58];
        *(_QWORD *)(a1 + 456) = a2[57];
        *(_QWORD *)(a1 + 464) = v45;
        v46 = a2[60];
        *(_QWORD *)(a1 + 472) = a2[59];
        *(_QWORD *)(a1 + 480) = v46;
        v47 = a2[62];
        *(_QWORD *)(a1 + 488) = a2[61];
        *(_QWORD *)(a1 + 496) = v47;
        v48 = a2[64];
        *(_QWORD *)(a1 + 504) = a2[63];
        *(_QWORD *)(a1 + 512) = v48;
        *(_BYTE *)(a1 + 520) = *((_BYTE *)a2 + 520);
        *(_QWORD *)(a1 + 528) = a2[66];
        *(_QWORD *)(a1 + 536) = a2[67];
        *(_QWORD *)(a1 + 544) = a2[68];
        *(_BYTE *)(a1 + 552) = *((_BYTE *)a2 + 552);
        *(_QWORD *)(a1 + 560) = a2[70];
        v49 = *(int *)(a3 + 52);
        v53 = a1 + v49;
        v55 = (uint64_t)a2 + v49;
        *(_BYTE *)(a1 + 568) = *((_BYTE *)a2 + 568);
        v50 = sub_20A5B8F6C();
        v52 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v52(v53, v55, v50);
        return a1;
      }
    }
    else
    {
      v40 = a2[41];
      *(_QWORD *)(a1 + 320) = a2[40];
      *(_QWORD *)(a1 + 328) = v40;
      *(_BYTE *)(a1 + 336) = *((_BYTE *)a2 + 336);
      *(_QWORD *)(a1 + 344) = a2[43];
      *(_QWORD *)(a1 + 352) = v34;
      swift_bridgeObjectRetain();
      v36 = a2[46];
      if (v36)
        goto LABEL_10;
    }
    v41 = *(_OWORD *)(a2 + 47);
    *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 45);
    *(_OWORD *)(a1 + 376) = v41;
    v42 = *(_OWORD *)(a2 + 51);
    *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 49);
    *(_OWORD *)(a1 + 408) = v42;
    goto LABEL_13;
  }
  v22 = *a2;
  *(_QWORD *)a1 = *a2;
  a1 = v22 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return a1;
}

uint64_t sub_20A4AEC6C(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  if (a1[2])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[19])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[44] != 1)
    swift_bridgeObjectRelease();
  if (a1[46])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = (char *)a1 + *(int *)(a2 + 52);
  v5 = sub_20A5B8F6C();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_20A4AEDC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v50)(uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v53;

  v5 = *(_QWORD *)(a2 + 16);
  if (v5)
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = v5;
    v6 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = v6;
    v7 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = v7;
    v8 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = v8;
    v9 = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = v9;
    v10 = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = v10;
    v11 = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = v11;
    v12 = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 128) = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13 = *(_QWORD *)(a2 + 152);
    if (v13)
    {
LABEL_3:
      *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 152) = v13;
      v14 = *(_QWORD *)(a2 + 168);
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      *(_QWORD *)(a1 + 168) = v14;
      v15 = *(_QWORD *)(a2 + 184);
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      *(_QWORD *)(a1 + 184) = v15;
      v16 = *(_QWORD *)(a2 + 200);
      *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
      *(_QWORD *)(a1 + 200) = v16;
      v17 = *(_QWORD *)(a2 + 216);
      *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
      *(_QWORD *)(a1 + 216) = v17;
      v18 = *(_QWORD *)(a2 + 232);
      *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
      *(_QWORD *)(a1 + 232) = v18;
      v19 = *(_QWORD *)(a2 + 248);
      *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
      *(_QWORD *)(a1 + 248) = v19;
      v20 = *(_QWORD *)(a2 + 264);
      *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
      *(_QWORD *)(a1 + 264) = v20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_6;
    }
  }
  else
  {
    v21 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v21;
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    v22 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v22;
    v23 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v23;
    v24 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v24;
    v13 = *(_QWORD *)(a2 + 152);
    if (v13)
      goto LABEL_3;
  }
  v25 = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = v25;
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  v26 = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = v26;
  v27 = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = v27;
  v28 = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = v28;
LABEL_6:
  v29 = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = v29;
  v30 = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 296) = v30;
  v31 = *(_QWORD *)(a2 + 312);
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 312) = v31;
  v32 = *(_QWORD *)(a2 + 352);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v32 != 1)
  {
    v38 = *(_QWORD *)(a2 + 328);
    *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
    *(_QWORD *)(a1 + 328) = v38;
    *(_BYTE *)(a1 + 336) = *(_BYTE *)(a2 + 336);
    *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
    *(_QWORD *)(a1 + 352) = v32;
    swift_bridgeObjectRetain();
    v34 = *(_QWORD *)(a2 + 368);
    if (v34)
      goto LABEL_8;
LABEL_10:
    v39 = *(_OWORD *)(a2 + 376);
    *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
    *(_OWORD *)(a1 + 376) = v39;
    v40 = *(_OWORD *)(a2 + 408);
    *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
    *(_OWORD *)(a1 + 408) = v40;
    goto LABEL_11;
  }
  v33 = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 336) = v33;
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  v34 = *(_QWORD *)(a2 + 368);
  if (!v34)
    goto LABEL_10;
LABEL_8:
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  *(_QWORD *)(a1 + 368) = v34;
  v35 = *(_QWORD *)(a2 + 384);
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  *(_QWORD *)(a1 + 384) = v35;
  v36 = *(_QWORD *)(a2 + 400);
  *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
  *(_QWORD *)(a1 + 400) = v36;
  v37 = *(_QWORD *)(a2 + 416);
  *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
  *(_QWORD *)(a1 + 416) = v37;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_11:
  v41 = *(_QWORD *)(a2 + 432);
  *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
  *(_QWORD *)(a1 + 432) = v41;
  v42 = *(_QWORD *)(a2 + 448);
  *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
  *(_QWORD *)(a1 + 448) = v42;
  v43 = *(_QWORD *)(a2 + 464);
  *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
  *(_QWORD *)(a1 + 464) = v43;
  v44 = *(_QWORD *)(a2 + 480);
  *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
  *(_QWORD *)(a1 + 480) = v44;
  v45 = *(_QWORD *)(a2 + 496);
  *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
  *(_QWORD *)(a1 + 496) = v45;
  v46 = *(_QWORD *)(a2 + 512);
  *(_QWORD *)(a1 + 504) = *(_QWORD *)(a2 + 504);
  *(_QWORD *)(a1 + 512) = v46;
  *(_BYTE *)(a1 + 520) = *(_BYTE *)(a2 + 520);
  *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
  *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
  *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
  *(_BYTE *)(a1 + 552) = *(_BYTE *)(a2 + 552);
  *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
  v47 = *(int *)(a3 + 52);
  v51 = a1 + v47;
  v53 = a2 + v47;
  *(_BYTE *)(a1 + 568) = *(_BYTE *)(a2 + 568);
  v48 = sub_20A5B8F6C();
  v50 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v50(v51, v53, v48);
  return a1;
}

uint64_t sub_20A4AF148(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 *v34;
  __int128 *v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  _OWORD *v43;
  __int128 *v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v6 = *(_QWORD *)(a2 + 16);
  if (*(_QWORD *)(a1 + 16))
  {
    if (v6)
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_20A4AF9C4(a1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v7 = *(_OWORD *)(a2 + 64);
      v9 = *(_OWORD *)(a2 + 16);
      v8 = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 64) = v7;
      *(_OWORD *)(a1 + 16) = v9;
      *(_OWORD *)(a1 + 32) = v8;
      v11 = *(_OWORD *)(a2 + 96);
      v10 = *(_OWORD *)(a2 + 112);
      v12 = *(_OWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 96) = v11;
      *(_OWORD *)(a1 + 112) = v10;
      *(_OWORD *)(a1 + 80) = v12;
    }
  }
  else if (v6)
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v13 = *(_OWORD *)(a2 + 16);
    v14 = *(_OWORD *)(a2 + 32);
    v15 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v15;
    *(_OWORD *)(a1 + 16) = v13;
    *(_OWORD *)(a1 + 32) = v14;
    v16 = *(_OWORD *)(a2 + 80);
    v17 = *(_OWORD *)(a2 + 96);
    v18 = *(_OWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 96) = v17;
    *(_OWORD *)(a1 + 112) = v18;
    *(_OWORD *)(a1 + 80) = v16;
  }
  v19 = (_OWORD *)(a1 + 136);
  v20 = (_OWORD *)(a2 + 136);
  v21 = *(_QWORD *)(a2 + 152);
  if (*(_QWORD *)(a1 + 152))
  {
    if (v21)
    {
      *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
      *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
      *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
      *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
      *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
      *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_20A4AF9C4(a1 + 136);
      *v19 = *v20;
      v22 = *(_OWORD *)(a2 + 200);
      v24 = *(_OWORD *)(a2 + 152);
      v23 = *(_OWORD *)(a2 + 168);
      *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
      *(_OWORD *)(a1 + 200) = v22;
      *(_OWORD *)(a1 + 152) = v24;
      *(_OWORD *)(a1 + 168) = v23;
      v26 = *(_OWORD *)(a2 + 232);
      v25 = *(_OWORD *)(a2 + 248);
      v27 = *(_OWORD *)(a2 + 216);
      *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
      *(_OWORD *)(a1 + 232) = v26;
      *(_OWORD *)(a1 + 248) = v25;
      *(_OWORD *)(a1 + 216) = v27;
    }
  }
  else if (v21)
  {
    *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
    *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
    *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
    *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
    *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
    *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
    *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
    *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
    *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
    *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *v19 = *v20;
    v28 = *(_OWORD *)(a2 + 152);
    v29 = *(_OWORD *)(a2 + 168);
    v30 = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 200) = v30;
    *(_OWORD *)(a1 + 152) = v28;
    *(_OWORD *)(a1 + 168) = v29;
    v31 = *(_OWORD *)(a2 + 216);
    v32 = *(_OWORD *)(a2 + 232);
    v33 = *(_OWORD *)(a2 + 248);
    *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
    *(_OWORD *)(a1 + 232) = v32;
    *(_OWORD *)(a1 + 248) = v33;
    *(_OWORD *)(a1 + 216) = v31;
  }
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v34 = (__int128 *)(a1 + 320);
  v35 = (__int128 *)(a2 + 320);
  v36 = *(_QWORD *)(a2 + 352);
  if (*(_QWORD *)(a1 + 352) == 1)
  {
    if (v36 == 1)
    {
      v37 = *v35;
      v38 = *(_OWORD *)(a2 + 336);
      *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
      *v34 = v37;
      *(_OWORD *)(a1 + 336) = v38;
    }
    else
    {
      *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
      v41 = *(_QWORD *)(a2 + 328);
      *(_BYTE *)(a1 + 336) = *(_BYTE *)(a2 + 336);
      *(_QWORD *)(a1 + 328) = v41;
      *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
      *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
      swift_bridgeObjectRetain();
    }
  }
  else if (v36 == 1)
  {
    sub_20A4647C8(a1 + 320);
    v39 = *(_QWORD *)(a2 + 352);
    v40 = *(_OWORD *)(a2 + 336);
    *v34 = *v35;
    *(_OWORD *)(a1 + 336) = v40;
    *(_QWORD *)(a1 + 352) = v39;
  }
  else
  {
    *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
    v42 = *(_QWORD *)(a2 + 328);
    *(_BYTE *)(a1 + 336) = *(_BYTE *)(a2 + 336);
    *(_QWORD *)(a1 + 328) = v42;
    *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
    *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v43 = (_OWORD *)(a1 + 360);
  v44 = (__int128 *)(a2 + 360);
  v45 = *(_QWORD *)(a2 + 368);
  if (*(_QWORD *)(a1 + 368))
  {
    if (v45)
    {
      *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
      *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
      *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
      *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
      *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_20A464794(a1 + 360);
      v46 = *(_OWORD *)(a2 + 408);
      v48 = *v44;
      v47 = *(_OWORD *)(a2 + 376);
      *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
      *(_OWORD *)(a1 + 408) = v46;
      *v43 = v48;
      *(_OWORD *)(a1 + 376) = v47;
    }
  }
  else if (v45)
  {
    *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
    *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
    *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
    *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
    *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
    *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
    *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
    *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v49 = *v44;
    v50 = *(_OWORD *)(a2 + 376);
    v51 = *(_OWORD *)(a2 + 408);
    *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
    *(_OWORD *)(a1 + 408) = v51;
    *v43 = v49;
    *(_OWORD *)(a1 + 376) = v50;
  }
  *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
  *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
  *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
  *(_QWORD *)(a1 + 464) = *(_QWORD *)(a2 + 464);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
  *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
  *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 504) = *(_QWORD *)(a2 + 504);
  swift_retain();
  swift_release();
  v52 = *(_QWORD *)(a2 + 512);
  *(_BYTE *)(a1 + 520) = *(_BYTE *)(a2 + 520);
  *(_QWORD *)(a1 + 512) = v52;
  *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
  *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 552) = *(_BYTE *)(a2 + 552);
  *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
  *(_BYTE *)(a1 + 568) = *(_BYTE *)(a2 + 568);
  v53 = *(int *)(a3 + 52);
  v54 = a1 + v53;
  v55 = a2 + v53;
  v56 = sub_20A5B8F6C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 24))(v54, v55, v56);
  return a1;
}

uint64_t sub_20A4AF9C4(uint64_t a1)
{
  destroy for ODIClientGUID();
  return a1;
}

uint64_t sub_20A4AF9F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v4;
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v7;
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  v8 = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 288) = v8;
  v9 = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 320) = v9;
  *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  v10 = *(_OWORD *)(a2 + 408);
  *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
  *(_OWORD *)(a1 + 408) = v10;
  v11 = *(_OWORD *)(a2 + 376);
  *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
  *(_OWORD *)(a1 + 376) = v11;
  *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 424);
  v12 = *(_OWORD *)(a2 + 488);
  *(_OWORD *)(a1 + 472) = *(_OWORD *)(a2 + 472);
  *(_OWORD *)(a1 + 488) = v12;
  v13 = *(_OWORD *)(a2 + 456);
  *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 440);
  *(_OWORD *)(a1 + 456) = v13;
  *(_BYTE *)(a1 + 568) = *(_BYTE *)(a2 + 568);
  v14 = *(_OWORD *)(a2 + 552);
  *(_OWORD *)(a1 + 536) = *(_OWORD *)(a2 + 536);
  *(_OWORD *)(a1 + 552) = v14;
  v15 = *(_OWORD *)(a2 + 520);
  v16 = *(int *)(a3 + 52);
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_OWORD *)(a1 + 504) = *(_OWORD *)(a2 + 504);
  *(_OWORD *)(a1 + 520) = v15;
  v19 = sub_20A5B8F6C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  return a1;
}

uint64_t sub_20A4AFB34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  if (*(_QWORD *)(a1 + 16))
  {
    v6 = *(_QWORD *)(a2 + 16);
    if (v6)
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = v6;
      swift_bridgeObjectRelease();
      v7 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = v7;
      swift_bridgeObjectRelease();
      v8 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = v8;
      swift_bridgeObjectRelease();
      v9 = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = v9;
      swift_bridgeObjectRelease();
      v10 = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = v10;
      swift_bridgeObjectRelease();
      v11 = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = v11;
      swift_bridgeObjectRelease();
      v12 = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = v12;
      swift_bridgeObjectRelease();
      v13 = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = v13;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_20A4AF9C4(a1);
  }
  v14 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v14;
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  v15 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v15;
  v16 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v16;
  v17 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v17;
LABEL_6:
  if (*(_QWORD *)(a1 + 152))
  {
    v18 = *(_QWORD *)(a2 + 152);
    if (v18)
    {
      *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 152) = v18;
      swift_bridgeObjectRelease();
      v19 = *(_QWORD *)(a2 + 168);
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      *(_QWORD *)(a1 + 168) = v19;
      swift_bridgeObjectRelease();
      v20 = *(_QWORD *)(a2 + 184);
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      *(_QWORD *)(a1 + 184) = v20;
      swift_bridgeObjectRelease();
      v21 = *(_QWORD *)(a2 + 200);
      *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
      *(_QWORD *)(a1 + 200) = v21;
      swift_bridgeObjectRelease();
      v22 = *(_QWORD *)(a2 + 216);
      *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
      *(_QWORD *)(a1 + 216) = v22;
      swift_bridgeObjectRelease();
      v23 = *(_QWORD *)(a2 + 232);
      *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
      *(_QWORD *)(a1 + 232) = v23;
      swift_bridgeObjectRelease();
      v24 = *(_QWORD *)(a2 + 248);
      *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
      *(_QWORD *)(a1 + 248) = v24;
      swift_bridgeObjectRelease();
      v25 = *(_QWORD *)(a2 + 264);
      *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
      *(_QWORD *)(a1 + 264) = v25;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_20A4AF9C4(a1 + 136);
  }
  v26 = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = v26;
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  v27 = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = v27;
  v28 = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = v28;
  v29 = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = v29;
LABEL_11:
  v30 = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = v30;
  swift_bridgeObjectRelease();
  v31 = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 296) = v31;
  swift_bridgeObjectRelease();
  v32 = *(_QWORD *)(a2 + 312);
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 312) = v32;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 352) == 1)
  {
LABEL_14:
    v34 = *(_OWORD *)(a2 + 336);
    *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
    *(_OWORD *)(a1 + 336) = v34;
    *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
    goto LABEL_16;
  }
  v33 = *(_QWORD *)(a2 + 352);
  if (v33 == 1)
  {
    sub_20A4647C8(a1 + 320);
    goto LABEL_14;
  }
  v35 = *(_QWORD *)(a2 + 328);
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 328) = v35;
  *(_BYTE *)(a1 + 336) = *(_BYTE *)(a2 + 336);
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
  *(_QWORD *)(a1 + 352) = v33;
  swift_bridgeObjectRelease();
LABEL_16:
  if (!*(_QWORD *)(a1 + 368))
  {
LABEL_20:
    v40 = *(_OWORD *)(a2 + 376);
    *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
    *(_OWORD *)(a1 + 376) = v40;
    v41 = *(_OWORD *)(a2 + 408);
    *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
    *(_OWORD *)(a1 + 408) = v41;
    goto LABEL_21;
  }
  v36 = *(_QWORD *)(a2 + 368);
  if (!v36)
  {
    sub_20A464794(a1 + 360);
    goto LABEL_20;
  }
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  *(_QWORD *)(a1 + 368) = v36;
  swift_bridgeObjectRelease();
  v37 = *(_QWORD *)(a2 + 384);
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  *(_QWORD *)(a1 + 384) = v37;
  swift_bridgeObjectRelease();
  v38 = *(_QWORD *)(a2 + 400);
  *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
  *(_QWORD *)(a1 + 400) = v38;
  swift_bridgeObjectRelease();
  v39 = *(_QWORD *)(a2 + 416);
  *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
  *(_QWORD *)(a1 + 416) = v39;
  swift_bridgeObjectRelease();
LABEL_21:
  v42 = *(_QWORD *)(a2 + 432);
  *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
  *(_QWORD *)(a1 + 432) = v42;
  swift_bridgeObjectRelease();
  v43 = *(_QWORD *)(a2 + 448);
  *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
  *(_QWORD *)(a1 + 448) = v43;
  swift_bridgeObjectRelease();
  v44 = *(_QWORD *)(a2 + 464);
  *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
  *(_QWORD *)(a1 + 464) = v44;
  swift_bridgeObjectRelease();
  v45 = *(_QWORD *)(a2 + 480);
  *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
  *(_QWORD *)(a1 + 480) = v45;
  swift_bridgeObjectRelease();
  v46 = *(_QWORD *)(a2 + 496);
  *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
  *(_QWORD *)(a1 + 496) = v46;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 504) = *(_QWORD *)(a2 + 504);
  swift_release();
  *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
  *(_BYTE *)(a1 + 520) = *(_BYTE *)(a2 + 520);
  *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
  *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 552) = *(_BYTE *)(a2 + 552);
  *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
  *(_BYTE *)(a1 + 568) = *(_BYTE *)(a2 + 568);
  v47 = *(int *)(a3 + 52);
  v48 = a1 + v47;
  v49 = a2 + v47;
  v50 = sub_20A5B8F6C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 40))(v48, v49, v50);
  return a1;
}

uint64_t sub_20A4AFEDC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20A4AFEE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 448);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_20A5B8F6C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 52), a2, v8);
  }
}

uint64_t sub_20A4AFF64()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_20A4AFF70(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 448) = (a2 - 1);
  }
  else
  {
    v7 = sub_20A5B8F6C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 52), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for ODNAssessmentResult()
{
  uint64_t result;

  result = qword_2545FA6B0;
  if (!qword_2545FA6B0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_20A4B0020()
{
  uint64_t result;
  unint64_t v1;

  result = sub_20A5B8F6C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

__n128 sub_20A4B00C4@<Q0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  int *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __n128 result;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  _OWORD v37[8];
  uint64_t v38;
  _OWORD v39[8];
  uint64_t v40;

  v35 = a2[1];
  v36 = *a2;
  v34 = a2[2];
  v11 = *((_QWORD *)a2 + 6);
  v12 = *((_QWORD *)a2 + 7);
  type metadata accessor for ODNAssessmentResult();
  sub_20A5B8F48();
  v13 = *(_OWORD *)(a3 + 112);
  v37[6] = *(_OWORD *)(a3 + 96);
  v37[7] = v13;
  v38 = *(_QWORD *)(a3 + 128);
  v14 = *(_OWORD *)(a3 + 48);
  v37[2] = *(_OWORD *)(a3 + 32);
  v37[3] = v14;
  v15 = *(_OWORD *)(a3 + 80);
  v37[4] = *(_OWORD *)(a3 + 64);
  v37[5] = v15;
  v16 = *(_OWORD *)(a3 + 16);
  v37[0] = *(_OWORD *)a3;
  v37[1] = v16;
  nullsub_1(v37);
  sub_20A44BDD4((uint64_t)v37, a6);
  v17 = *(_OWORD *)(a4 + 112);
  v39[6] = *(_OWORD *)(a4 + 96);
  v39[7] = v17;
  v40 = *(_QWORD *)(a4 + 128);
  v18 = *(_OWORD *)(a4 + 48);
  v39[2] = *(_OWORD *)(a4 + 32);
  v39[3] = v18;
  v19 = *(_OWORD *)(a4 + 80);
  v39[4] = *(_OWORD *)(a4 + 64);
  v39[5] = v19;
  v20 = *(_OWORD *)(a4 + 16);
  v39[0] = *(_OWORD *)a4;
  v39[1] = v20;
  nullsub_1(v39);
  sub_20A44BDD4((uint64_t)v39, a6 + 136);
  v21 = (int *)type metadata accessor for PregeneratedAssessment();
  v22 = (uint64_t *)(a1 + v21[12]);
  v24 = *v22;
  v23 = v22[1];
  *(_QWORD *)(a6 + 272) = v24;
  *(_QWORD *)(a6 + 280) = v23;
  v25 = (_QWORD *)(a1 + v21[6]);
  v26 = v25[1];
  *(_QWORD *)(a6 + 288) = *v25;
  *(_QWORD *)(a6 + 296) = v26;
  *(_OWORD *)(a6 + 304) = 0u;
  *(_OWORD *)(a6 + 320) = 0u;
  *(_OWORD *)(a6 + 336) = 0u;
  *(_QWORD *)(a6 + 352) = 1;
  *(_OWORD *)(a6 + 360) = v36;
  *(_OWORD *)(a6 + 376) = v35;
  *(_OWORD *)(a6 + 392) = v34;
  *(_QWORD *)(a6 + 408) = v11;
  *(_QWORD *)(a6 + 416) = v12;
  v27 = (uint64_t *)(a1 + v21[19]);
  v29 = *v27;
  v28 = v27[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_20A4B0268(a1);
  *(_QWORD *)(a6 + 424) = v29;
  *(_QWORD *)(a6 + 432) = v28;
  v30 = *(_OWORD *)(a5 + 112);
  *(_OWORD *)(a6 + 536) = *(_OWORD *)(a5 + 96);
  *(_OWORD *)(a6 + 552) = v30;
  *(_BYTE *)(a6 + 568) = *(_BYTE *)(a5 + 128);
  v31 = *(_OWORD *)(a5 + 48);
  *(_OWORD *)(a6 + 472) = *(_OWORD *)(a5 + 32);
  *(_OWORD *)(a6 + 488) = v31;
  v32 = *(_OWORD *)(a5 + 80);
  *(_OWORD *)(a6 + 504) = *(_OWORD *)(a5 + 64);
  *(_OWORD *)(a6 + 520) = v32;
  result = *(__n128 *)(a5 + 16);
  *(_OWORD *)(a6 + 440) = *(_OWORD *)a5;
  *(__n128 *)(a6 + 456) = result;
  return result;
}

uint64_t sub_20A4B0268(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PregeneratedAssessment();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void ODIAssessmentAdapter.adapt(withError:)(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_20A4B02E8()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_OWORD *, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _OWORD v14[14];
  _BYTE v15[25];
  _BYTE v16[136];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _OWORD v24[14];

  v4 = *v1;
  v3 = v1[1];
  sub_20A4912D0((uint64_t)v16);
  v20 = 0u;
  v21 = 0u;
  v18 = 0u;
  v19 = 0u;
  v17 = 0u;
  *(_OWORD *)(v2 + 88) = xmmword_20A5BCDD0;
  *(_QWORD *)&v22 = -2;
  *((_QWORD *)&v23 + 1) = v4;
  *(_QWORD *)&v24[0] = v3;
  sub_20A47E0CC((uint64_t)v16, (uint64_t)v24 + 8);
  v5 = v1[5];
  v6 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v5);
  v14[12] = v24[5];
  v14[13] = v24[6];
  *(_OWORD *)v15 = v24[7];
  *(_OWORD *)&v15[9] = *(_OWORD *)(v2 + 233);
  v14[8] = v24[1];
  v14[9] = v24[2];
  v14[10] = v24[3];
  v14[11] = v24[4];
  v14[4] = v21;
  v14[5] = v22;
  v14[6] = v23;
  v14[7] = v24[0];
  v14[0] = v17;
  v14[1] = v18;
  v14[2] = v19;
  v14[3] = v20;
  v7 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v6 + 8);
  swift_bridgeObjectRetain();
  v8 = v7(v14, v5, v6);
  v10 = v9;
  v11 = (char *)v0 + *(int *)(type metadata accessor for ODIErrorAssessment(0) + 24);
  sub_20A5B8F48();
  sub_20A4912EC(&v17);
  v12 = sub_20A5B8F6C();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 0, 1, v12);
  v0[1] = v8;
  v0[2] = v10;
  *v0 = -2;
  type metadata accessor for ODIAssessmentResult(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_20A4B0B30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(_OWORD *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  _OWORD v52[14];
  _OWORD v53[2];
  char v54;
  _QWORD v55[3];
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  char v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  _OWORD v75[7];
  _OWORD v76[3];

  v41 = *(_QWORD *)(a1 + 288);
  v47 = *(_QWORD *)(a1 + 296);
  v48 = *(_QWORD *)(a1 + 376);
  v4 = *(_QWORD *)(a1 + 392);
  v49 = *(_QWORD *)(a1 + 368);
  v50 = *(_QWORD *)(a1 + 384);
  v5 = *(_QWORD *)(a1 + 408);
  v37 = *(_QWORD *)(a1 + 416);
  v38 = *(_QWORD *)(a1 + 400);
  v6 = *(_QWORD *)(a1 + 328);
  v8 = *(_QWORD *)(a1 + 336);
  v7 = *(_QWORD *)(a1 + 344);
  v44 = v8;
  v9 = *(_QWORD *)(a1 + 360);
  v39 = *(_QWORD *)(a1 + 320);
  v40 = *(_QWORD *)(a1 + 352);
  v10 = *(_QWORD *)(a1 + 488);
  v45 = *(_QWORD *)(a1 + 480);
  v55[2] = *(_QWORD *)(a1 + 456);
  v11 = *(_BYTE *)(a1 + 520);
  v57 = v45;
  v58 = v10;
  v12 = *(_QWORD *)(a1 + 536);
  v54 = v11;
  v61 = v11;
  v13 = *(_BYTE *)(a1 + 552);
  v62 = a2;
  v63 = v12;
  v14 = *(_QWORD *)(a1 + 560);
  v65 = v13;
  v66 = v14;
  v15 = *(_QWORD *)(a1 + 440);
  v16 = *(_QWORD *)(a1 + 448);
  v17 = *(_OWORD *)(a1 + 504);
  v67 = *(_BYTE *)(a1 + 568);
  v42 = *(_QWORD *)(a1 + 496);
  v55[0] = v15;
  v55[1] = v16;
  v46 = *(_QWORD *)(a1 + 544);
  v56 = *(_OWORD *)(a1 + 464);
  v59 = v42;
  v60 = v17;
  v64 = v46;
  nullsub_1(v55);
  *(_QWORD *)&v68 = v41;
  *((_QWORD *)&v68 + 1) = v47;
  *(_QWORD *)&v69 = v9;
  *((_QWORD *)&v69 + 1) = v49;
  *(_QWORD *)&v70 = v48;
  *((_QWORD *)&v70 + 1) = v50;
  *(_QWORD *)&v71 = v4;
  *((_QWORD *)&v71 + 1) = v38;
  *(_QWORD *)&v72 = v5;
  *((_QWORD *)&v72 + 1) = v37;
  *(_QWORD *)&v73 = v39;
  *((_QWORD *)&v73 + 1) = v6;
  *(_QWORD *)&v74 = v8;
  *((_QWORD *)&v74 + 1) = v7;
  *(_QWORD *)&v75[0] = v40;
  sub_20A47E0CC((uint64_t)v55, (uint64_t)v75 + 8);
  v18 = v43[5];
  v19 = v43[6];
  __swift_project_boxed_opaque_existential_1(v43 + 2, v18);
  v52[12] = v75[5];
  v52[13] = v75[6];
  v53[0] = v76[0];
  *(_OWORD *)((char *)v53 + 9) = *(_OWORD *)((char *)v76 + 9);
  v52[8] = v75[1];
  v52[9] = v75[2];
  v52[10] = v75[3];
  v52[11] = v75[4];
  v20 = v39;
  v52[4] = v72;
  v52[5] = v73;
  v52[6] = v74;
  v52[7] = v75[0];
  v52[0] = v68;
  v52[1] = v69;
  v52[2] = v70;
  v52[3] = v71;
  v21 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v19 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_20A465800(v9, v49);
  sub_20A465850(v39, v6, v44, v7, v40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  v22 = v21(v52, v18, v19);
  v24 = v23;
  v25 = *(_QWORD *)(a1 + 280);
  if (v25)
  {
    v26 = *(_QWORD *)(a1 + 272);
    swift_bridgeObjectRetain();
    sub_20A4912EC(&v68);
    v27 = (char *)a3 + *(int *)(type metadata accessor for ODIAssessment(0) + 24);
    v28 = a1 + *(int *)(type metadata accessor for ODNAssessmentResult() + 52);
    v29 = sub_20A5B8F6C();
    v30 = *(_QWORD *)(v29 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v27, v28, v29);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
    *a3 = v26;
    a3[1] = v25;
    a3[2] = v22;
    a3[3] = v24;
  }
  else
  {
    if (v40 == 1)
    {
      *(_QWORD *)&v52[0] = 45;
      *((_QWORD *)&v52[0] + 1) = 0xE100000000000000;
      v51 = 14;
      CoreODILogger.fault(_:category:)(0xD000000000000033, 0x800000020A5DFBF0, &v51);
      sub_20A4912EC(&v68);
      v20 = -1;
    }
    else
    {
      sub_20A4912EC(&v68);
    }
    v31 = (char *)a3 + *(int *)(type metadata accessor for ODIErrorAssessment(0) + 24);
    v32 = a1 + *(int *)(type metadata accessor for ODNAssessmentResult() + 52);
    v33 = sub_20A5B8F6C();
    v34 = *(_QWORD *)(v33 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v31, v32, v33);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
    a3[1] = v22;
    a3[2] = v24;
    *a3 = v20;
  }
  type metadata accessor for ODIAssessmentResult(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t ODIAssessmentAdapter.init(providerID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  ValueMetadata *v6;
  _UNKNOWN **v7;
  uint64_t result;

  if ((sub_20A4B0FF0() & 1) != 0)
  {
    v6 = &type metadata for AMPAssessmentPayloadAdapter;
    v7 = &off_24C3157D8;
  }
  else
  {
    v6 = &type metadata for Base64AssessmentPayloadAdapter;
    v7 = &off_24C315AF0;
  }
  a3[5] = v6;
  a3[6] = v7;
  a3[2] = 45;
  a3[3] = 0xE100000000000000;
  swift_bridgeObjectRetain();
  sub_20A5B899C();
  result = swift_bridgeObjectRelease();
  *a3 = a1;
  a3[1] = a2;
  return result;
}

uint64_t sub_20A4B0FF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL8 v10;

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v0 = sub_20A5B89A8();
  if (v1)
  {
    v2 = v0;
    v3 = v1;
    do
    {
      v6 = sub_20A5B89A8();
      if (!v7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v2 == v6 && v3 == v7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        v4 = sub_20A5B91AC();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v4 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return 0;
        }
      }
      v2 = sub_20A5B89A8();
      v3 = v5;
    }
    while (v5);
  }
  swift_bridgeObjectRelease();
  sub_20A5B89A8();
  v9 = v8;
  swift_bridgeObjectRelease();
  v10 = v9 == 0;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t destroy for ODIAssessmentAdapter(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1(a1 + 16);
}

uint64_t initializeWithCopy for ODIAssessmentAdapter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = a2 + 16;
  v5 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v5;
  v6 = v5;
  v7 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
  swift_bridgeObjectRetain();
  v7(a1 + 16, v4, v6);
  return a1;
}

_QWORD *assignWithCopy for ODIAssessmentAdapter(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 2, a2 + 2);
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

uint64_t assignWithTake for ODIAssessmentAdapter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

ValueMetadata *type metadata accessor for ODIAssessmentAdapter()
{
  return &type metadata for ODIAssessmentAdapter;
}

uint64_t ODIAnalyticsManager.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t ODIAnalyticsManager.init()()
{
  uint64_t v0;

  return v0;
}

unint64_t sub_20A4B141C(uint64_t a1)
{
  uint64_t inited;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA6C0);
  if (a1 < 0)
  {
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_20A5BA9B0;
    *(_QWORD *)(inited + 32) = 0xD000000000000012;
    *(_QWORD *)(inited + 40) = 0x800000020A5DFC60;
    *(_QWORD *)(inited + 48) = sub_20A5B8BF4();
    *(_QWORD *)(inited + 56) = 0x646F43726F727265;
    *(_QWORD *)(inited + 64) = 0xE900000000000065;
    *(_QWORD *)(inited + 72) = sub_20A5B8C18();
  }
  else
  {
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_20A5BA9A0;
    *(_QWORD *)(inited + 32) = 0xD000000000000012;
    *(_QWORD *)(inited + 40) = 0x800000020A5DFC60;
    *(_QWORD *)(inited + 48) = sub_20A5B8BF4();
  }
  return sub_20A46AB30(inited);
}

uint64_t ODIAnalyticsManager.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ODIAnalyticsManager.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

void _s17CoreODIEssentials19ODIAnalyticsManagerC5track5eventyAA0C5EventO_tF_0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  _QWORD v6[6];

  v1 = *a1;
  v2 = a1[1];
  v3 = (void *)sub_20A5B88F4();
  swift_bridgeObjectRelease();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = v2;
  v6[4] = sub_20A4B1670;
  v6[5] = v4;
  v6[0] = MEMORY[0x24BDAC760];
  v6[1] = 1107296256;
  v6[2] = sub_20A4C6DC8;
  v6[3] = &block_descriptor_7;
  v5 = _Block_copy(v6);
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v5);

}

uint64_t dispatch thunk of AnalyticsManager.track(event:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t type metadata accessor for ODIAnalyticsManager()
{
  return objc_opt_self();
}

uint64_t method lookup function for ODIAnalyticsManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ODIAnalyticsManager.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t sub_20A4B1660()
{
  return swift_deallocObject();
}

unint64_t sub_20A4B1670()
{
  uint64_t v0;

  return sub_20A4B141C(*(_QWORD *)(v0 + 16));
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t sub_20A4B1690(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[6];

  v3 = v2;
  v6 = sub_20A5B881C();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v23 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_20A5B8840();
  v11 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22, v12);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A44FD78(a1, (uint64_t)aBlock);
  v15 = sub_20A5B8960();
  v17 = v16;
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v3;
  *(_QWORD *)(v18 + 24) = v15;
  *(_QWORD *)(v18 + 32) = v17;
  *(_BYTE *)(v18 + 40) = a2;
  aBlock[4] = sub_20A4B1ABC;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_20A461EFC;
  aBlock[3] = &block_descriptor_8;
  v19 = _Block_copy(aBlock);
  swift_retain();
  sub_20A5B8834();
  v24 = MEMORY[0x24BEE4AF8];
  sub_20A44D044(&qword_253EB5088, v7, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5120);
  sub_20A47DDA8((unint64_t *)&qword_253EB5128, &qword_253EB5120);
  sub_20A5B8DB0();
  MEMORY[0x20BD25D50](0, v14, v10, v19);
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v22);
  return swift_release();
}

uint64_t sub_20A4B18B0()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for CertUsageMapper();
  v0 = swift_allocObject();
  result = sub_20A4B1AE4();
  qword_253EBC818 = v0;
  return result;
}

uint64_t sub_20A4B18E8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;

  swift_beginAccess();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v10 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = 0x8000000000000000;
  sub_20A476CE8(a4, a2, a3, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(a1 + 16) = v10;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_20A4B1998@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;

  swift_beginAccess();
  v8 = *(_QWORD *)(a1 + 16);
  if (*(_QWORD *)(v8 + 16))
  {
    swift_bridgeObjectRetain();
    v9 = sub_20A47094C(a2, a3);
    if ((v10 & 1) != 0)
      v11 = *(_BYTE *)(*(_QWORD *)(v8 + 56) + v9);
    else
      v11 = 17;
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = 17;
  }
  *a4 = v11;
  return swift_endAccess();
}

uint64_t sub_20A4B1A44()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CertUsageMapper()
{
  return objc_opt_self();
}

uint64_t sub_20A4B1A90()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_20A4B1ABC()
{
  uint64_t v0;

  return sub_20A4B18E8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t sub_20A4B1AE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];

  v12[0] = sub_20A5B8C9C();
  v1 = *(_QWORD *)(v12[0] - 8);
  MEMORY[0x24BDAC7A8](v12[0], v2);
  v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_20A5B8C90();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v5, v7);
  v8 = sub_20A5B8840();
  MEMORY[0x24BDAC7A8](v8, v9);
  v10 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + 16) = sub_20A46A5B4(MEMORY[0x24BEE4AF8]);
  sub_20A4B1CB0();
  sub_20A5B8834();
  v12[1] = v10;
  sub_20A44D044((unint64_t *)&qword_253EB51A8, v6, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5150);
  sub_20A47DDA8((unint64_t *)&qword_253EB5158, &qword_253EB5150);
  sub_20A5B8DB0();
  (*(void (**)(char *, _QWORD, _QWORD))(v1 + 104))(v4, *MEMORY[0x24BEE5750], v12[0]);
  *(_QWORD *)(v0 + 24) = sub_20A5B8CC0();
  return v0;
}

unint64_t sub_20A4B1CB0()
{
  unint64_t result;

  result = qword_253EB51B0[0];
  if (!qword_253EB51B0[0])
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, qword_253EB51B0);
  }
  return result;
}

uint64_t sub_20A4B1CEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v3 = sub_20A5B82B8();
  v29 = *(_QWORD *)(v3 - 8);
  v30 = v3;
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = MEMORY[0x24BEE4AF8];
  if (!v7)
    return v8;
  v24 = v1;
  v32 = MEMORY[0x24BEE4AF8];
  sub_20A457870(0, v7, 0);
  v8 = v32;
  result = sub_20A512848(a1);
  v11 = result;
  v12 = 0;
  v13 = a1 + 64;
  v25 = a1 + 80;
  v26 = v7;
  v27 = v10;
  v28 = a1 + 64;
  while ((v11 & 0x8000000000000000) == 0 && v11 < 1 << *(_BYTE *)(a1 + 32))
  {
    v16 = (unint64_t)v11 >> 6;
    if ((*(_QWORD *)(v13 + 8 * ((unint64_t)v11 >> 6)) & (1 << v11)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v10)
      goto LABEL_24;
    v31 = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_20A5B82AC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v32 = v8;
    v18 = *(_QWORD *)(v8 + 16);
    v17 = *(_QWORD *)(v8 + 24);
    if (v18 >= v17 >> 1)
    {
      sub_20A457870(v17 > 1, v18 + 1, 1);
      v8 = v32;
    }
    *(_QWORD *)(v8 + 16) = v18 + 1;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v29 + 32))(v8+ ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80))+ *(_QWORD *)(v29 + 72) * v18, v6, v30);
    v14 = 1 << *(_BYTE *)(a1 + 32);
    if (v11 >= v14)
      goto LABEL_25;
    v13 = v28;
    v19 = *(_QWORD *)(v28 + 8 * v16);
    if ((v19 & (1 << v11)) == 0)
      goto LABEL_26;
    LODWORD(v10) = v27;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v27)
      goto LABEL_27;
    v20 = v19 & (-2 << (v11 & 0x3F));
    if (v20)
    {
      v14 = __clz(__rbit64(v20)) | v11 & 0xFFFFFFFFFFFFFFC0;
      v15 = v26;
    }
    else
    {
      v21 = v16 + 1;
      v22 = (unint64_t)(v14 + 63) >> 6;
      v15 = v26;
      if (v16 + 1 < v22)
      {
        v23 = *(_QWORD *)(v28 + 8 * v21);
        if (v23)
        {
LABEL_20:
          v14 = __clz(__rbit64(v23)) + (v21 << 6);
        }
        else
        {
          while (v22 - 2 != v16)
          {
            v23 = *(_QWORD *)(v25 + 8 * v16++);
            if (v23)
            {
              v21 = v16 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    v12 = v31 + 1;
    v11 = v14;
    if (v31 + 1 == v15)
      return v8;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t TapToRadar.trigger(error:for:file:line:timestamp:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  unint64_t v38;
  char *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51[2];
  __int128 v52;

  v8 = v7;
  v47 = a7;
  v48 = a6;
  v49 = a4;
  v50 = a5;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB5180);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB4980);
  MEMORY[0x24BDAC7A8](v14, v15);
  v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_20A5B84D4();
  v18 = *(_QWORD *)(v46 - 8);
  v20 = MEMORY[0x24BDAC7A8](v46, v19);
  v43 = (char *)&v40 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = v21;
  MEMORY[0x24BDAC7A8](v20, v22);
  v44 = (char *)&v40 - v23;
  v24 = (_QWORD *)(v7 + 56);
  v25 = *(_QWORD *)(v7 + 80);
  v26 = *(_QWORD *)(v8 + 88);
  v41 = v24;
  __swift_project_boxed_opaque_existential_1(v24, v25);
  LOBYTE(v52) = 14;
  Loggable.info(_:category:)(0xD000000000000017, 0x800000020A5DFDA0, (char *)&v52, v25, v26);
  *(_QWORD *)&v51[0] = a1;
  v27 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52D0);
  v28 = swift_dynamicCast();
  v45 = v13;
  if (v28)
    __asm { BR              X10 }
  *(_QWORD *)&v52 = 0;
  *((_QWORD *)&v52 + 1) = 0xE000000000000000;
  sub_20A5B8E94();
  swift_bridgeObjectRelease();
  strcpy((char *)&v52, "workflow ID: ");
  HIWORD(v52) = -4864;
  sub_20A5B899C();
  sub_20A5B899C();
  swift_getErrorValue();
  sub_20A5B923C();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  v29 = v18;
  v30 = v46;
  sub_20A4B2928(0, 0xE000000000000000, v52, *((uint64_t *)&v52 + 1), 0, 0, v49, (uint64_t)v17, v48, v47);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v17, 1, v30) == 1)
    return sub_20A44CE2C((uint64_t)v17, (uint64_t *)&unk_253EB4980);
  v32 = *(void (**)(char *, char *, uint64_t))(v29 + 32);
  v33 = v44;
  v32(v44, v17, v30);
  v34 = sub_20A5B8B64();
  v35 = (uint64_t)v45;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v45, 1, 1, v34);
  v36 = *(_QWORD *)(v8 + OBJC_IVAR____TtC17CoreODIEssentials10TapToRadar_ttrDelay);
  sub_20A47BD60((uint64_t)v41, (uint64_t)&v52);
  sub_20A47BD60(v8 + 16, (uint64_t)v51);
  v37 = v43;
  (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v43, v33, v30);
  v38 = (*(unsigned __int8 *)(v29 + 80) + 120) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  v39 = (char *)swift_allocObject();
  *((_QWORD *)v39 + 2) = 0;
  *((_QWORD *)v39 + 3) = 0;
  sub_20A44CFD8(&v52, (uint64_t)(v39 + 32));
  *((_QWORD *)v39 + 9) = v36;
  sub_20A44CFD8(v51, (uint64_t)(v39 + 80));
  v32(&v39[v38], v37, v30);
  sub_20A4B2644(v35, (uint64_t)&unk_2545FA6D0, (uint64_t)v39);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v33, v30);
}

uint64_t sub_20A4B2644(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_20A5B8B64();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_20A5B8B58();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(_QWORD *)(a3 + 16))
      return swift_task_create();
    goto LABEL_3;
  }
  sub_20A44CE2C(a1, (uint64_t *)&unk_253EB5180);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_20A5B8AF8();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

void sub_20A4B2778(_BYTE *a1@<X8>)
{
  *a1 = 14;
}

id sub_20A4B2784()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC17CoreODIEssentials10TapToRadar____lazy_storage___formatter;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC17CoreODIEssentials10TapToRadar____lazy_storage___formatter);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC17CoreODIEssentials10TapToRadar____lazy_storage___formatter);
  }
  else
  {
    v4 = sub_20A4B27E4();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_20A4B27E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v10;

  v0 = sub_20A5B8708();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1500]), sel_init);
  v6 = (void *)sub_20A5B8768();
  objc_msgSend(v5, sel_setTimeZone_, v6);

  sub_20A5B8678();
  v7 = (void *)sub_20A5B869C();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  objc_msgSend(v5, sel_setLocale_, v7);

  v8 = (void *)sub_20A5B88F4();
  objc_msgSend(v5, sel_setDateFormat_, v8);

  return v5;
}

uint64_t sub_20A4B2928@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  id v35;
  void *v36;
  id v37;
  uint64_t inited;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t *v43;
  void (*v44)(_QWORD *, _QWORD);
  unint64_t *v45;
  char *v46;
  unint64_t v47;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t);
  _QWORD v56[2];
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD v72[36];

  v62 = a1;
  v60 = a7;
  v67 = a6;
  v56[1] = a5;
  v64 = a3;
  v65 = a4;
  v63 = a2;
  v71 = a8;
  v61 = a10;
  v66 = a9;
  v10 = sub_20A5B82B8();
  v58 = *(_QWORD *)(v10 - 8);
  v59 = v10;
  MEMORY[0x24BDAC7A8](v10, v11);
  v57 = (char *)v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_20A5B8318();
  v69 = *(_QWORD *)(v13 - 8);
  v70 = v13;
  v15 = MEMORY[0x24BDAC7A8](v13, v14);
  v68 = (char *)v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15, v17);
  v19 = (char *)v56 - v18;
  v20 = sub_20A5B8438();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20, v22);
  v24 = (char *)v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB4980);
  MEMORY[0x24BDAC7A8](v25, v26);
  v28 = (char *)v56 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_20A5B84D4();
  v30 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29, v31);
  v33 = (char *)v56 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56))(v28, 1, 1, v29);
  (*(void (**)(char *, _QWORD, uint64_t))(v21 + 104))(v24, *MEMORY[0x24BDCD7A0], v20);
  swift_bridgeObjectRetain();
  sub_20A5B84B0();
  v34 = sub_20A5B8450();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v33, v29);
  if (*(_QWORD *)(v34 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
  }
  v35 = sub_20A4B2784();
  v36 = (void *)sub_20A5B85B8();
  v37 = objc_msgSend(v35, sel_stringFromDate_, v36);

  sub_20A5B8900();
  sub_20A5B830C();
  sub_20A5B8300();
  sub_20A5B82F4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA708);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A5BDAA0;
  *(_QWORD *)(inited + 32) = 0x656C746954;
  *(_QWORD *)(inited + 40) = 0xE500000000000000;
  strcpy((char *)v72, "[CoreODI] - ");
  BYTE5(v72[1]) = 0;
  HIWORD(v72[1]) = -5120;
  sub_20A5B899C();
  v39 = v72[1];
  *(_QWORD *)(inited + 48) = v72[0];
  *(_QWORD *)(inited + 56) = v39;
  *(_QWORD *)(inited + 64) = 0x7470697263736544;
  *(_QWORD *)(inited + 72) = 0xEB000000006E6F69;
  v72[0] = 0;
  v72[1] = 0xE000000000000000;
  sub_20A5B8E94();
  v40 = v65;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v72[0] = v64;
  v72[1] = v40;
  sub_20A5B899C();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  v72[6] = v66;
  sub_20A5B9170();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  v41 = v72[1];
  *(_QWORD *)(inited + 80) = v72[0];
  *(_QWORD *)(inited + 88) = v41;
  *(_QWORD *)(inited + 96) = 0x6E656E6F706D6F43;
  *(_QWORD *)(inited + 104) = 0xEB00000000444974;
  *(_OWORD *)(inited + 112) = xmmword_20A5C1170;
  strcpy((char *)(inited + 128), "ComponentName");
  *(_WORD *)(inited + 142) = -4864;
  *(_QWORD *)(inited + 144) = 0xD00000000000001ALL;
  *(_QWORD *)(inited + 152) = 0x800000020A5DFF30;
  *(_QWORD *)(inited + 160) = 0xD000000000000010;
  *(_QWORD *)(inited + 168) = 0x800000020A5DFF50;
  *(_OWORD *)(inited + 176) = xmmword_20A5C1180;
  strcpy((char *)(inited + 192), "Classification");
  *(_BYTE *)(inited + 207) = -18;
  *(_QWORD *)(inited + 208) = 0xD000000000000014;
  *(_QWORD *)(inited + 216) = 0x800000020A5DFF70;
  v42 = sub_20A46A070(inited);
  sub_20A4B1CEC(v42);
  swift_bridgeObjectRelease();
  sub_20A5B82D0();
  if (v67)
  {
    v44 = (void (*)(_QWORD *, _QWORD))sub_20A5B82C4();
    if (*v43)
    {
      v45 = v43;
      v46 = v57;
      sub_20A5B82AC();
      v47 = *v45;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v45 = v47;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v47 = sub_20A46FC94(0, *(_QWORD *)(v47 + 16) + 1, 1, v47);
        *v45 = v47;
      }
      v50 = *(_QWORD *)(v47 + 16);
      v49 = *(_QWORD *)(v47 + 24);
      if (v50 >= v49 >> 1)
      {
        v47 = sub_20A46FC94(v49 > 1, v50 + 1, 1, v47);
        *v45 = v47;
      }
      *(_QWORD *)(v47 + 16) = v50 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v58 + 32))(v47+ ((*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80))+ *(_QWORD *)(v58 + 72) * v50, v46, v59);
    }
    v44(v72, 0);
  }
  v52 = v68;
  v51 = v69;
  v53 = v70;
  (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v68, v19, v70);
  sub_20A5B82E8();
  v54 = *(void (**)(char *, uint64_t))(v51 + 8);
  v54(v52, v53);
  return ((uint64_t (*)(char *, uint64_t))v54)(v19, v53);
}

uint64_t sub_20A4B2FA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;

  v7[4] = a5;
  v7[5] = a7;
  v7[3] = a4;
  v8 = sub_20A5B8F84();
  v7[6] = v8;
  v7[7] = *(_QWORD *)(v8 - 8);
  v7[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A4B300C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t, char);
  _QWORD v9[2];

  v1 = (_QWORD *)v0[3];
  v2 = v0[4];
  v4 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v4);
  sub_20A5B8E94();
  swift_bridgeObjectRelease();
  strcpy((char *)v9, "Awaiting for ");
  HIWORD(v9[1]) = -4864;
  v0[2] = v2;
  sub_20A5B9170();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  v5 = v9[0];
  LOBYTE(v9[0]) = 14;
  Loggable.info(_:category:)(v5, v9[1], (char *)v9, v4, v3);
  swift_bridgeObjectRelease();
  sub_20A5B8F78();
  v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))&aO[*(int *)aO];
  v6 = (_QWORD *)swift_task_alloc();
  v0[9] = v6;
  *v6 = v0;
  v6[1] = sub_20A4B3198;
  return v8(1000000000000000000 * v2, ((v2 >> 63) & 0xF21F494C589C0000)+ (((unint64_t)v2 * (unsigned __int128)0xDE0B6B3A7640000uLL) >> 64), 0, 0, 1);
}

uint64_t sub_20A4B3198()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  return swift_task_switch();
}

id sub_20A4B3218()
{
  uint64_t v0;
  id result;
  void *v2;
  void *v3;

  result = objc_msgSend((id)objc_opt_self(), sel_defaultWorkspace);
  if (result)
  {
    v2 = result;
    v3 = (void *)sub_20A5B8474();
    objc_msgSend(v2, sel_openURL_withOptions_, v3, 0);

    swift_task_dealloc();
    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A4B32B0()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t TapToRadar.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  v1 = v0 + OBJC_IVAR____TtC17CoreODIEssentials10TapToRadar_timeZone;
  v2 = sub_20A5B8780();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  return v0;
}

uint64_t TapToRadar.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  v1 = v0 + OBJC_IVAR____TtC17CoreODIEssentials10TapToRadar_timeZone;
  v2 = sub_20A5B8780();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_20A4B33B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;

  *(_QWORD *)(v6 + 56) = v5;
  v12 = sub_20A5B8F6C();
  *(_QWORD *)(v6 + 64) = v12;
  *(_QWORD *)(v6 + 72) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v6 + 80) = swift_task_alloc();
  *(_QWORD *)(v6 + 88) = swift_task_alloc();
  *(_QWORD *)(v6 + 40) = a1;
  *(_QWORD *)(v6 + 48) = a2;
  *(_QWORD *)(v6 + 16) = a3;
  *(_QWORD *)(v6 + 24) = a4;
  *(_BYTE *)(v6 + 32) = a5 & 1;
  return swift_task_switch();
}

uint64_t sub_20A4B345C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  _QWORD *v5;

  v1 = v0[10];
  v2 = v0[8];
  v3 = v0[9];
  sub_20A5B8F84();
  sub_20A44D044(&qword_2545FA6F8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6E10], MEMORY[0x24BEE6E20]);
  sub_20A5B9224();
  sub_20A44D044(&qword_2545FA700, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6DC8], MEMORY[0x24BEE6E00]);
  sub_20A5B8F90();
  v4 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[12] = v4;
  v4(v1, v2);
  v5 = (_QWORD *)swift_task_alloc();
  v0[13] = v5;
  *v5 = v0;
  v5[1] = sub_20A4B3574;
  return sub_20A5B9230();
}

uint64_t sub_20A4B3574()
{
  uint64_t v0;
  uint64_t *v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(void (**)(uint64_t, uint64_t))(*v1 + 96);
  v3 = *(_QWORD *)(*v1 + 88);
  v4 = *(_QWORD *)(*v1 + 64);
  v5 = *v1;
  *(_QWORD *)(v5 + 112) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_20A4B3620()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4B365C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  Swift::String v15;
  Swift::Int value;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[5];
  _QWORD v21[5];
  Swift::Int_optional v22;

  v21[3] = &type metadata for CoreODILogger;
  v21[4] = &protocol witness table for CoreODILogger;
  v21[0] = a3;
  v21[1] = a4;
  v20[3] = type metadata accessor for DeepLink();
  v20[4] = &off_24C31B0E0;
  v20[0] = a2;
  *(_QWORD *)(a6 + OBJC_IVAR____TtC17CoreODIEssentials10TapToRadar____lazy_storage___formatter) = 0;
  if (qword_253EB4740 != -1)
    swift_once();
  if (byte_253EBC790 == 1
    && (v10 = (void *)sub_20A5B88F4(),
        v11 = objc_msgSend(a1, sel_BOOLForKey_, v10, v20[0]),
        v10,
        v11))
  {
    sub_20A47BD60((uint64_t)v20, a6 + 16);
    sub_20A47BD60((uint64_t)v21, a6 + 56);
    v12 = a6 + OBJC_IVAR____TtC17CoreODIEssentials10TapToRadar_timeZone;
    v13 = sub_20A5B8780();
    v14 = *(_QWORD *)(v13 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v12, a5, v13);
    v15._object = (void *)0x800000020A5DFFD0;
    v15._countAndFlagsBits = 0xD000000000000010;
    v22 = NSUserDefaults.internalInt(forKey:)(v15);
    value = v22.value;
    LOBYTE(v12) = v22.is_nil;
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a5, v13);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    v17 = 30;
    if ((v12 & 1) == 0)
      v17 = value;
    *(_QWORD *)(a6 + OBJC_IVAR____TtC17CoreODIEssentials10TapToRadar_ttrDelay) = v17;
  }
  else
  {
    v18 = sub_20A5B8780();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(a5, v18);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);

    swift_deallocPartialClassInstance();
    return 0;
  }
  return a6;
}

uint64_t _s17CoreODIEssentials10TapToRadarCACSgycfC_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  _QWORD v17[5];

  v0 = sub_20A5B8780();
  MEMORY[0x24BDAC7A8](v0, v1);
  v3 = (char *)&v17[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v5 = type metadata accessor for DeepLink();
  v6 = swift_allocObject();
  sub_20A5B8774();
  v17[3] = v5;
  v17[4] = &off_24C31B0E0;
  v17[0] = v6;
  type metadata accessor for TapToRadar();
  v7 = swift_allocObject();
  v8 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v17, v5);
  MEMORY[0x24BDAC7A8](v8, v8);
  v10 = (_QWORD *)((char *)&v17[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v11 + 16))(v10);
  v12 = *v10;
  v13 = v4;
  swift_retain();
  v14 = sub_20A4B365C(v13, v12, 45, 0xE100000000000000, (uint64_t)v3, v7);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  swift_release();
  return v14;
}

uint64_t sub_20A4B39D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_20A5B84D4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 120) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_20A4B3A54(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_20A5B84D4() - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = (uint64_t)(v1 + 4);
  v8 = v1[9];
  v9 = (uint64_t)(v1 + 10);
  v10 = (uint64_t)v1 + ((v4 + 120) & ~v4);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_20A4597C0;
  return sub_20A4B2FA8(a1, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_20A4B3B00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_20A4B3B08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_20A4B3B10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_20A4B3B18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t sub_20A4B3B3C()
{
  return type metadata accessor for TapToRadar();
}

uint64_t type metadata accessor for TapToRadar()
{
  uint64_t result;

  result = qword_2545FA6E0;
  if (!qword_2545FA6E0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_20A4B3B80()
{
  uint64_t result;
  unint64_t v1;

  result = sub_20A5B8780();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for TapToRadar()
{
  return swift_lookUpClassMethod();
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t FeedbackState.state.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedbackState.missingBindings.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t FeedbackState.currentBindings.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t FeedbackState.trainingSignalID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedbackState.errorCode.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t FeedbackState.isNominated.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 56);
}

void sub_20A4B3CBC(char *a1)
{
  sub_20A4EAA90(*a1);
}

void sub_20A4B3CC8()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_20A5B929C();
  __asm { BR              X9 }
}

uint64_t sub_20A4B3D10()
{
  sub_20A5B8978();
  swift_bridgeObjectRelease();
  return sub_20A5B92CC();
}

void sub_20A4B3DAC()
{
  __asm { BR              X10 }
}

uint64_t sub_20A4B3DE4()
{
  sub_20A5B8978();
  return swift_bridgeObjectRelease();
}

void sub_20A4B3E6C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_20A5B929C();
  __asm { BR              X9 }
}

uint64_t sub_20A4B3EB0()
{
  sub_20A5B8978();
  swift_bridgeObjectRelease();
  return sub_20A5B92CC();
}

uint64_t sub_20A4B3F4C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_20A4B4790();
  *a1 = result;
  return result;
}

uint64_t sub_20A4B3F78()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_20A4B3FA4 + 4 * byte_20A5C119F[*v0]))();
}

void sub_20A4B3FA4(_QWORD *a1@<X8>)
{
  *a1 = 0x42676E697373696DLL;
  a1[1] = 0xEF73676E69646E69;
}

void sub_20A4B3FCC(_QWORD *a1@<X8>)
{
  *a1 = 0x42746E6572727563;
  a1[1] = 0xEF73676E69646E69;
}

void sub_20A4B3FF4(_QWORD *a1@<X8>)
{
  *a1 = 0x646F43726F727265;
  a1[1] = 0xE900000000000065;
}

void sub_20A4B4014(_QWORD *a1@<X8>)
{
  *a1 = 0x616E696D6F4E7369;
  a1[1] = 0xEB00000000646574;
}

uint64_t sub_20A4B4038()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_20A4B4064 + 4 * byte_20A5C11A4[*v0]))(0x6574617473, 0xE500000000000000);
}

uint64_t sub_20A4B4064()
{
  return 0x42676E697373696DLL;
}

uint64_t sub_20A4B409C()
{
  return 0x646F43726F727265;
}

uint64_t sub_20A4B40B8()
{
  return 0x616E696D6F4E7369;
}

uint64_t sub_20A4B40D8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_20A4B4790();
  *a1 = result;
  return result;
}

uint64_t sub_20A4B40FC()
{
  sub_20A4B436C();
  return sub_20A5B9314();
}

uint64_t sub_20A4B4124()
{
  sub_20A4B436C();
  return sub_20A5B9320();
}

void __swiftcall FeedbackState.init(state:missingBindings:currentBindings:trainingSignalID:errorCode:)(CoreODIEssentials::FeedbackState *__return_ptr retstr, Swift::String state, Swift::Int missingBindings, Swift::Int currentBindings, Swift::String_optional trainingSignalID, Swift::Int errorCode)
{
  retstr->state = state;
  retstr->missingBindings = missingBindings;
  retstr->currentBindings = currentBindings;
  retstr->trainingSignalID = trainingSignalID;
  retstr->errorCode = errorCode;
  retstr->isNominated = 0;
}

void __swiftcall FeedbackState.nominated()(CoreODIEssentials::FeedbackState *__return_ptr retstr)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;

  v2 = *(void **)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 32);
  retstr->state._countAndFlagsBits = *(_QWORD *)v1;
  retstr->state._object = v2;
  *(_OWORD *)&retstr->missingBindings = *(_OWORD *)(v1 + 16);
  retstr->trainingSignalID.value._countAndFlagsBits = v3;
  *(_OWORD *)&retstr->trainingSignalID.value._object = *(_OWORD *)(v1 + 40);
  retstr->isNominated = 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
}

uint64_t FeedbackState.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _DWORD v11[4];
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA710);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + 16);
  v13 = *(_QWORD *)(v1 + 24);
  v14 = v8;
  v12 = *(_QWORD *)(v1 + 48);
  v11[3] = *(unsigned __int8 *)(v1 + 56);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4B436C();
  sub_20A5B92FC();
  v20 = 0;
  v9 = v15;
  sub_20A5B9110();
  if (!v9)
  {
    v19 = 1;
    sub_20A5B9134();
    v18 = 2;
    sub_20A5B9134();
    v17 = 3;
    sub_20A5B9134();
    v16 = 4;
    sub_20A5B911C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

unint64_t sub_20A4B436C()
{
  unint64_t result;

  result = qword_2545FA718;
  if (!qword_2545FA718)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C131C, &type metadata for FeedbackState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FA718);
  }
  return result;
}

uint64_t sub_20A4B43B0(_QWORD *a1)
{
  return FeedbackState.encode(to:)(a1);
}

uint64_t destroy for FeedbackState()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FeedbackState(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FeedbackState(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for FeedbackState(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedbackState(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 57))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedbackState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 57) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedbackState()
{
  return &type metadata for FeedbackState;
}

uint64_t storeEnumTagSinglePayload for FeedbackState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_20A4B4638 + 4 * byte_20A5C11AE[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_20A4B466C + 4 * byte_20A5C11A9[v4]))();
}

uint64_t sub_20A4B466C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A4B4674(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A4B467CLL);
  return result;
}

uint64_t sub_20A4B4688(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A4B4690);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_20A4B4694(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A4B469C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedbackState.CodingKeys()
{
  return &type metadata for FeedbackState.CodingKeys;
}

unint64_t sub_20A4B46BC()
{
  unint64_t result;

  result = qword_2545FA720;
  if (!qword_2545FA720)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C12F4, &type metadata for FeedbackState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FA720);
  }
  return result;
}

unint64_t sub_20A4B4704()
{
  unint64_t result;

  result = qword_2545FA728;
  if (!qword_2545FA728)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C122C, &type metadata for FeedbackState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FA728);
  }
  return result;
}

unint64_t sub_20A4B474C()
{
  unint64_t result;

  result = qword_2545FA730;
  if (!qword_2545FA730)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C1254, &type metadata for FeedbackState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FA730);
  }
  return result;
}

uint64_t sub_20A4B4790()
{
  unint64_t v0;

  v0 = sub_20A5B9008();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

_QWORD *PrecomputationSession.__allocating_init(workflowID:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  objc_class *v12;
  char *v13;
  char *v14;
  char *v15;
  id v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  _QWORD *v24;
  _QWORD v27[5];
  uint64_t v28;
  __int128 v29;
  int v30;
  uint64_t v31;
  uint64_t v32;

  v4 = sub_20A5B866C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v27[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_20A5B8660();
  v9 = sub_20A5B863C();
  v11 = v10;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  v28 = 0x4024000000000000;
  v29 = xmmword_20A5C1370;
  v30 = 16777217;
  v12 = (objc_class *)type metadata accessor for DIPAssessmentStaticWebService();
  v31 = 0;
  v32 = 0;
  v13 = (char *)objc_allocWithZone(v12);
  v14 = &v13[OBJC_IVAR____TtC17CoreODIEssentials29DIPAssessmentStaticWebService_GET_STS_ENDPOINT];
  *(_QWORD *)v14 = 1937011503;
  *((_QWORD *)v14 + 1) = 0xE400000000000000;
  v15 = &v13[OBJC_IVAR____TtC17CoreODIEssentials29DIPAssessmentStaticWebService_GET_PROFILE_ENDPOINT];
  *(_QWORD *)v15 = 0x656C69666F72702FLL;
  *((_QWORD *)v15 + 1) = 0xE800000000000000;
  v13[OBJC_IVAR____TtC17CoreODIEssentials29DIPAssessmentStaticWebService_serverRepo] = 5;
  v16 = sub_20A4B5010(v9, v11, (uint64_t)&v28, 0xD000000000000015, 0x800000020A5C1370, v13);
  v27[3] = v12;
  v27[4] = &off_24C31ADA0;
  v27[0] = v16;
  v17 = (_QWORD *)swift_allocObject();
  v18 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v27, (uint64_t)v12);
  MEMORY[0x24BDAC7A8](v18, v18);
  v20 = (_QWORD *)((char *)&v27[-1] - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v21 + 16))(v20);
  v22 = *v20;
  v23 = v16;
  v24 = sub_20A4B52CC(a1, a2, a1, a2, v22, v17);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);

  return v24;
}

uint64_t PrecomputationSession.fetchProfile()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 96) = a1;
  *(_QWORD *)(v2 + 104) = v1;
  return swift_task_switch();
}

uint64_t sub_20A4B49FC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = (_QWORD *)v0[13];
  v16 = v1[3];
  v2 = v1[5];
  v17 = v1[4];
  v18 = v1[2];
  sub_20A47BD60((uint64_t)(v1 + 6), (uint64_t)(v0 + 2));
  v3 = v0[5];
  v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 2), v3);
  v5 = *(_QWORD *)(v3 - 8);
  v6 = (uint64_t *)swift_task_alloc();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v5 + 16))(v6, v4, v3);
  v7 = *v6;
  v8 = type metadata accessor for DIPAssessmentStaticWebService();
  v0[10] = v8;
  v0[11] = &off_24C31ADA0;
  v0[7] = v7;
  type metadata accessor for ProfileManager();
  v9 = (_QWORD *)swift_allocObject();
  v10 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 7), v8);
  v11 = *(_QWORD *)(v8 - 8);
  v12 = (uint64_t *)swift_task_alloc();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v11 + 16))(v12, v10, v8);
  v13 = *v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v0[14] = sub_20A4B5104(v18, v16, v17, v2, v13, v9);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 7));
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  swift_task_dealloc();
  v14 = (_QWORD *)swift_task_alloc();
  v0[15] = v14;
  *v14 = v0;
  v14[1] = sub_20A4B4B9C;
  return sub_20A4A2118(v0[12]);
}

uint64_t sub_20A4B4B9C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A4B4C00()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4B4C34()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PrecomputationSession.forceCacheProfile()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 96) = v0;
  return swift_task_switch();
}

uint64_t sub_20A4B4C80()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = (_QWORD *)v0[12];
  v16 = v1[3];
  v2 = v1[5];
  v17 = v1[4];
  v18 = v1[2];
  sub_20A47BD60((uint64_t)(v1 + 6), (uint64_t)(v0 + 2));
  v3 = v0[5];
  v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 2), v3);
  v5 = *(_QWORD *)(v3 - 8);
  v6 = (uint64_t *)swift_task_alloc();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v5 + 16))(v6, v4, v3);
  v7 = *v6;
  v8 = type metadata accessor for DIPAssessmentStaticWebService();
  v0[10] = v8;
  v0[11] = &off_24C31ADA0;
  v0[7] = v7;
  type metadata accessor for ProfileManager();
  v9 = (_QWORD *)swift_allocObject();
  v10 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 7), v8);
  v11 = *(_QWORD *)(v8 - 8);
  v12 = (uint64_t *)swift_task_alloc();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v11 + 16))(v12, v10, v8);
  v13 = *v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v0[13] = sub_20A4B5104(v18, v16, v17, v2, v13, v9);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 7));
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  swift_task_dealloc();
  v14 = (_QWORD *)swift_task_alloc();
  v0[14] = v14;
  *v14 = v0;
  v14[1] = sub_20A4B4E18;
  return sub_20A4A0290();
}

uint64_t sub_20A4B4E18()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A4B4E7C()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4B4EB0()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PrecomputationSession.getServerTimeSeed()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_20A4B4EFC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v1;
  *v1 = v0;
  v1[1] = sub_20A4B4F48;
  return sub_20A4A22F0();
}

uint64_t sub_20A4B4F48(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v6;

  v6 = *v2;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
}

uint64_t PrecomputationSession.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 48);
  swift_release();
  return v0;
}

uint64_t PrecomputationSession.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 48);
  swift_release();
  return swift_deallocClassInstance();
}

id sub_20A4B5010(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char *a6)
{
  char *v8;
  id v9;
  char *v10;
  id v11;
  objc_super v13;
  _QWORD v14[5];

  v14[3] = &type metadata for CoreODILogger;
  v14[4] = &protocol witness table for CoreODILogger;
  v14[0] = a4;
  v14[1] = a5;
  v8 = &a6[OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_conversationID];
  *(_QWORD *)v8 = a1;
  *((_QWORD *)v8 + 1) = a2;
  v9 = objc_allocWithZone((Class)type metadata accessor for DIPHTTPSession());
  v10 = a6;
  *(_QWORD *)&v10[OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_httpSession] = sub_20A4A5030(a3);
  sub_20A47BD60((uint64_t)v14, (uint64_t)&v10[OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_logger]);

  v13.receiver = v10;
  v13.super_class = (Class)type metadata accessor for DIPWebService();
  v11 = objc_msgSendSuper2(&v13, sel_init);
  sub_20A4A4E9C();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  return v11;
}

_QWORD *sub_20A4B5104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  _UNKNOWN **v28;
  _QWORD v29[5];
  _BYTE v30[24];
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  _UNKNOWN **v34;

  v25 = a4;
  v11 = type metadata accessor for DIPAssessmentStaticWebService();
  v33 = v11;
  v34 = &off_24C31ADA0;
  *(_QWORD *)&v32 = a5;
  swift_defaultActor_initialize();
  a6[24] = 45;
  a6[25] = 0xE100000000000000;
  sub_20A47BD60((uint64_t)&v32, (uint64_t)v30);
  v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v30, v31);
  MEMORY[0x24BDAC7A8](v12, v12);
  v14 = (uint64_t *)((char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v15 + 16))(v14);
  v16 = *v14;
  v29[3] = v11;
  v29[4] = &off_24C31ADA0;
  v29[0] = v16;
  type metadata accessor for ServerTimeSeedProvider();
  v17 = swift_allocObject();
  v18 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v29, v11);
  MEMORY[0x24BDAC7A8](v18, v18);
  v20 = (uint64_t *)((char *)&v25 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v21 + 16))(v20);
  v22 = *v20;
  v27 = v11;
  v28 = &off_24C31ADA0;
  *(_QWORD *)&v26 = v22;
  swift_bridgeObjectRetain();
  swift_defaultActor_initialize();
  *(_BYTE *)(v17 + 168) = 0;
  *(_QWORD *)(v17 + 176) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v17 + 184) = 0;
  *(_QWORD *)(v17 + 192) = 0;
  *(_QWORD *)(v17 + 200) = 45;
  *(_QWORD *)(v17 + 208) = 0xE100000000000000;
  sub_20A44CFD8(&v26, v17 + 112);
  *(_QWORD *)(v17 + 152) = a1;
  *(_QWORD *)(v17 + 160) = a2;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  a6[23] = v17;
  sub_20A44CFD8(&v32, (uint64_t)(a6 + 18));
  a6[14] = a1;
  a6[15] = a2;
  v23 = v25;
  a6[16] = a3;
  a6[17] = v23;
  return a6;
}

_QWORD *sub_20A4B52CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v25;
  uint64_t v26;
  _UNKNOWN **v27;
  _QWORD v28[5];
  _BYTE v29[24];
  uint64_t v30;
  _QWORD v31[5];

  v12 = type metadata accessor for DIPAssessmentStaticWebService();
  v31[3] = v12;
  v31[4] = &off_24C31ADA0;
  v31[0] = a5;
  a6[2] = a1;
  a6[3] = a2;
  a6[4] = a3;
  a6[5] = a4;
  sub_20A47BD60((uint64_t)v31, (uint64_t)(a6 + 6));
  sub_20A47BD60((uint64_t)v31, (uint64_t)v29);
  v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v29, v30);
  MEMORY[0x24BDAC7A8](v13, v13);
  v15 = (uint64_t *)((char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v16 + 16))(v15);
  v17 = *v15;
  v28[3] = v12;
  v28[4] = &off_24C31ADA0;
  v28[0] = v17;
  type metadata accessor for ServerTimeSeedProvider();
  v18 = swift_allocObject();
  v19 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v28, v12);
  MEMORY[0x24BDAC7A8](v19, v19);
  v21 = (uint64_t *)((char *)&v25 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v22 + 16))(v21);
  v23 = *v21;
  v26 = v12;
  v27 = &off_24C31ADA0;
  *(_QWORD *)&v25 = v23;
  swift_bridgeObjectRetain();
  swift_defaultActor_initialize();
  *(_BYTE *)(v18 + 168) = 0;
  *(_QWORD *)(v18 + 176) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v18 + 184) = 0;
  *(_QWORD *)(v18 + 192) = 0;
  *(_QWORD *)(v18 + 200) = 45;
  *(_QWORD *)(v18 + 208) = 0xE100000000000000;
  sub_20A44CFD8(&v25, v18 + 112);
  *(_QWORD *)(v18 + 152) = a1;
  *(_QWORD *)(v18 + 160) = a2;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  a6[11] = v18;
  return a6;
}

uint64_t type metadata accessor for PrecomputationSession()
{
  return objc_opt_self();
}

uint64_t method lookup function for PrecomputationSession()
{
  return swift_lookUpClassMethod();
}

uint64_t *sub_20A4B54B0@<X0>(uint64_t *result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  v2 = *result;
  if ((unint64_t)*result >= 3)
    LOBYTE(v2) = 3;
  *a2 = v2;
  return result;
}

void sub_20A4B54C8(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

_QWORD *sub_20A4B54D4@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 1)
    v2 = 1;
  else
    v2 = 2;
  if (*result)
    v3 = v2;
  else
    v3 = 0;
  *a2 = v3;
  return result;
}

uint64_t sub_20A4B54F4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[7] = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA218);
  v1[8] = swift_task_alloc();
  v2 = type metadata accessor for ODNAssessmentResult();
  v1[9] = v2;
  v1[10] = *(_QWORD *)(v2 - 8);
  v1[11] = swift_task_alloc();
  v1[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A4B5588()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;

  v1 = *(_QWORD *)(v0 + 56);
  if (*(_QWORD *)(v1 + 136))
  {
    v2 = *(_QWORD *)(v1 + 136);
  }
  else
  {
    v2 = sub_20A469B08(MEMORY[0x24BEE4AF8]);
    v1 = *(_QWORD *)(v0 + 56);
  }
  *(_QWORD *)(v0 + 104) = v2;
  v3 = *(_QWORD *)(v1 + 120);
  *(_QWORD *)(v0 + 112) = v3;
  v4 = *(_QWORD *)(v1 + 128);
  *(_QWORD *)(v0 + 120) = v4;
  v5 = *(_BYTE *)(v1 + 144);
  *(_BYTE *)(v0 + 16) = 1;
  *(_QWORD *)(v0 + 24) = v2;
  *(_QWORD *)(v0 + 32) = v3;
  *(_QWORD *)(v0 + 40) = v4;
  *(_BYTE *)(v0 + 48) = v5;
  *(_BYTE *)(v0 + 49) = 1;
  *(_QWORD *)(v0 + 128) = *(_QWORD *)(v1 + 152);
  swift_bridgeObjectRetain();
  sub_20A459690(v3, v4);
  return swift_task_switch();
}

uint64_t sub_20A4B5638()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  __int128 v6;
  __int128 v7;
  _QWORD *v8;

  v2 = *(_QWORD *)(v0 + 120);
  v1 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v1 + 944);
  v5 = *(_QWORD *)(v1 + 952);
  v7 = *(_OWORD *)(v0 + 16);
  v6 = *(_OWORD *)(v0 + 32);
  *(_WORD *)(v1 + 960) = *(_WORD *)(v0 + 48);
  *(_OWORD *)(v1 + 928) = v7;
  *(_OWORD *)(v1 + 944) = v6;
  swift_bridgeObjectRetain();
  sub_20A459690(v3, v2);
  swift_bridgeObjectRelease();
  sub_20A44CFC4(v4, v5);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 136) = v8;
  *v8 = v0;
  v8[1] = sub_20A4B56F0;
  return sub_20A481474(*(_QWORD *)(v0 + 64), v0 + 16);
}

uint64_t sub_20A4B56F0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A4B5744()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;

  v1 = v0[8];
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(v0[10] + 48))(v1, 1, v0[9]) == 1)
  {
    sub_20A4B912C(v1);
    v2 = (_QWORD *)swift_task_alloc();
    v0[18] = v2;
    *v2 = v0;
    v2[1] = sub_20A4B580C;
    return sub_20A483124(v0[12], (uint64_t)(v0 + 2));
  }
  else
  {
    v5 = v0[11];
    v4 = v0[12];
    sub_20A4B916C(v1, v5);
    sub_20A4B916C(v5, v4);
    return swift_task_switch();
  }
}

uint64_t sub_20A4B580C()
{
  uint64_t v0;
  uint64_t **v1;
  uint64_t *v2;
  _QWORD *v3;

  v2 = *v1;
  v2[19] = v0;
  swift_task_dealloc();
  if (!v0)
    return swift_task_switch();
  v3 = (_QWORD *)swift_task_alloc();
  v2[20] = (uint64_t)v3;
  *v3 = v2;
  v3[1] = sub_20A4B5994;
  return sub_20A4865A0(v2[12], v0);
}

uint64_t sub_20A4B58A8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *(_QWORD *)(v0 + 112);
  v1 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v4 + 192);
  v6 = *(_QWORD *)(v4 + 200);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v4 + 168), v5);
  v8 = 8;
  (*(void (**)(unint64_t, unint64_t, char *, uint64_t, uint64_t))(v6 + 16))(0xD00000000000002CLL, 0x800000020A5E03E0, &v8, v5, v6);
  (*(void (**)(uint64_t))(v4 + 216))(v3);
  swift_bridgeObjectRelease();
  sub_20A44CFC4(v2, v1);
  sub_20A465AB4(v3, (uint64_t (*)(_QWORD))type metadata accessor for ODNAssessmentResult);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4B5994()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A4B59EC()
{
  uint64_t v0;

  return swift_task_switch();
}

uint64_t sub_20A4B5A28()
{
  uint64_t v0;

  sub_20A44CFC4(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128));
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 168);
  swift_release();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for ODNRequestTask()
{
  return objc_opt_self();
}

uint64_t sub_20A4B5A8C()
{
  return 1;
}

uint64_t sub_20A4B5A94()
{
  sub_20A5B929C();
  sub_20A5B92A8();
  return sub_20A5B92CC();
}

uint64_t sub_20A4B5AD4()
{
  return sub_20A5B92A8();
}

uint64_t sub_20A4B5AF8()
{
  sub_20A5B929C();
  sub_20A5B92A8();
  return sub_20A5B92CC();
}

uint64_t sub_20A4B5B34(unint64_t *a1)
{
  unint64_t v2;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *a1 = v2;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v2 & 0x8000000000000000) != 0
    || (v2 & 0x4000000000000000) != 0)
  {
    sub_20A4C08F4(v2);
  }
  v4 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v6[0] = (v2 & 0xFFFFFFFFFFFFFF8) + 32;
  v6[1] = v4;
  sub_20A4B79AC(v6);
  return sub_20A5B8ABC();
}

uint64_t sub_20A4B5BB8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = v0;
  return swift_task_switch();
}

uint64_t sub_20A4B5BD0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t result;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 40);
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 112);
  if (!(v2 >> 62))
  {
    if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_14:
    sub_20A4B90E8();
    swift_allocError();
    swift_willThrow();
    swift_endAccess();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  swift_bridgeObjectRetain();
  v7 = sub_20A5B8FCC();
  swift_bridgeObjectRelease();
  if (!v7)
    goto LABEL_14;
LABEL_3:
  v3 = *(_QWORD *)(*(_QWORD *)(v0 + 40) + 112);
  if (!(v3 >> 62))
  {
    if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_5;
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  v8 = sub_20A5B8FCC();
  swift_bridgeObjectRelease();
  if (!v8)
    goto LABEL_16;
LABEL_5:
  v3 = *(_QWORD *)(*(_QWORD *)(v0 + 40) + 112);
  if (!(v3 >> 62))
  {
    if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_7;
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
LABEL_17:
  swift_bridgeObjectRetain();
  v9 = sub_20A5B8FCC();
  swift_bridgeObjectRelease();
  if (!v9)
    goto LABEL_18;
LABEL_7:
  if ((v3 & 0xC000000000000001) != 0)
  {
LABEL_19:
    result = MEMORY[0x20BD25F48](0, v3);
    v4 = result;
    goto LABEL_10;
  }
  if (!*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_21;
  }
  v4 = *(_QWORD *)(v3 + 32);
  result = swift_retain();
LABEL_10:
  *(_QWORD *)(v0 + 48) = v4;
  v6 = *(_QWORD *)(*(_QWORD *)(v0 + 40) + 112);
  if (!(v6 >> 62))
  {
    if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_12:
      sub_20A513814(0, 1);
      swift_endAccess();
      swift_retain();
      return swift_task_switch();
    }
    goto LABEL_22;
  }
LABEL_21:
  swift_bridgeObjectRetain();
  v10 = sub_20A5B8FCC();
  result = swift_bridgeObjectRelease();
  if (v10)
    goto LABEL_12;
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_20A4B5E04()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 56) = *(_BYTE *)(*(_QWORD *)(v0 + 48) + 208);
  swift_release();
  return swift_task_switch();
}

uint64_t sub_20A4B5E48()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t result;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if ((*(_BYTE *)(v0 + 56) & 1) == 0)
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 48));
  v1 = *(_QWORD *)(v0 + 40);
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 112);
  if (!(v2 >> 62))
  {
    if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_4;
LABEL_16:
    sub_20A4B90E8();
    swift_allocError();
    swift_willThrow();
    swift_endAccess();
    swift_release();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  swift_bridgeObjectRetain();
  v7 = sub_20A5B8FCC();
  swift_bridgeObjectRelease();
  if (!v7)
    goto LABEL_16;
LABEL_4:
  v3 = *(_QWORD *)(*(_QWORD *)(v0 + 40) + 112);
  if (!(v3 >> 62))
  {
    if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_6;
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
  v8 = sub_20A5B8FCC();
  swift_bridgeObjectRelease();
  if (!v8)
    goto LABEL_18;
LABEL_6:
  v3 = *(_QWORD *)(*(_QWORD *)(v0 + 40) + 112);
  if (!(v3 >> 62))
  {
    if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_8;
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
LABEL_19:
  swift_bridgeObjectRetain();
  v9 = sub_20A5B8FCC();
  swift_bridgeObjectRelease();
  if (!v9)
    goto LABEL_20;
LABEL_8:
  if ((v3 & 0xC000000000000001) != 0)
  {
LABEL_21:
    result = MEMORY[0x20BD25F48](0, v3);
    v4 = result;
    goto LABEL_11;
  }
  if (!*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_23;
  }
  v4 = *(_QWORD *)(v3 + 32);
  result = swift_retain();
LABEL_11:
  *(_QWORD *)(v0 + 48) = v4;
  v6 = *(_QWORD *)(*(_QWORD *)(v0 + 40) + 112);
  if (!(v6 >> 62))
  {
    if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_13:
      sub_20A513814(0, 1);
      swift_endAccess();
      swift_release();
      swift_retain();
      return swift_task_switch();
    }
    goto LABEL_24;
  }
LABEL_23:
  swift_bridgeObjectRetain();
  v10 = sub_20A5B8FCC();
  result = swift_bridgeObjectRelease();
  if (v10)
    goto LABEL_13;
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_20A4B60B8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 88) = v0;
  return swift_task_switch();
}

uint64_t sub_20A4B60D0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v10;
  _QWORD v11[2];
  uint64_t v12;
  unint64_t v13;

  v1 = *(_QWORD **)(v0 + 88);
  v2 = v1[19];
  *(_QWORD *)(v0 + 96) = v2;
  v3 = v1[20];
  *(_QWORD *)(v0 + 104) = v3;
  v11[0] = v2;
  v11[1] = v3;
  v12 = 0;
  v13 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_20A5B8E94();
  sub_20A5B899C();
  swift_beginAccess();
  v4 = v1[14];
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_20A5B8FCC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v6 = *(_QWORD *)(v0 + 88);
  *(_QWORD *)(v0 + 64) = v5;
  sub_20A5B9170();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  v7 = v12;
  LOBYTE(v12) = 8;
  CoreODILogger.debug(_:category:)(v7, v13, &v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v6 + 136) || (v8 = *(_QWORD *)(v0 + 88), (*(_BYTE *)(v8 + 144) & 1) != 0))
  {
    v12 = v2;
    v13 = v3;
    LOBYTE(v11[0]) = 8;
    swift_bridgeObjectRetain();
    CoreODILogger.debug(_:category:)(0xD000000000000027, 0x800000020A5E0350, v11);
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_BYTE *)(v8 + 144) = 1;
    v10 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 112) = v10;
    *v10 = v0;
    v10[1] = sub_20A4B62F4;
    v10[5] = *(_QWORD *)(v0 + 88);
    return swift_task_switch();
  }
}

uint64_t sub_20A4B62F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 120) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 128) = a1;
  return swift_task_switch();
}

uint64_t sub_20A4B6368()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 88);
  *(_QWORD *)(v1 + 136) = *(_QWORD *)(v0 + 128);
  swift_retain();
  swift_release();
  *(_BYTE *)(v1 + 144) = 0;
  return swift_task_switch();
}

uint64_t sub_20A4B63C8()
{
  uint64_t v0;
  _QWORD *v1;

  *(_BYTE *)(*(_QWORD *)(v0 + 128) + 209) = 1;
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 136) = v1;
  *v1 = v0;
  v1[1] = sub_20A4B641C;
  return sub_20A4B54F4();
}

uint64_t sub_20A4B641C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A4B6474()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  char v4;

  v1 = *(_QWORD *)(v0 + 88);
  v4 = 8;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD00000000000002CLL, 0x800000020A5E03B0, &v4);
  swift_bridgeObjectRelease();
  swift_release();
  *(_QWORD *)(v1 + 136) = 0;
  swift_release();
  *(_BYTE *)(v1 + 144) = 0;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 144) = v2;
  *v2 = v0;
  v2[1] = sub_20A4B6544;
  v2[11] = *(_QWORD *)(v0 + 88);
  return swift_task_switch();
}

uint64_t sub_20A4B6544()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_20A4B658C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  void *v4;
  _QWORD v6[2];

  v1 = *(void **)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 88);
  *(_QWORD *)(v2 + 136) = 0;
  swift_release();
  *(_BYTE *)(v2 + 144) = 0;
  *(_QWORD *)(v0 + 72) = v1;
  v3 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52D0);
  if ((swift_dynamicCast() & 1) != 0)
  {

  }
  else
  {
    v4 = *(void **)(v0 + 120);
    swift_bridgeObjectRetain();
    sub_20A5B8E94();
    swift_bridgeObjectRelease();
    v6[0] = 0xD000000000000008;
    v6[1] = 0x800000020A5E0380;
    swift_getErrorValue();
    sub_20A5B923C();
    sub_20A5B899C();
    swift_bridgeObjectRelease();
    CoreODILogger.error(_:category:)(0xD000000000000028, 0x800000020A5E0380, v6);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4B66D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6)
{
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v7 + 56) = a4;
  *(_QWORD *)(v7 + 64) = v6;
  *(_BYTE *)(v7 + 90) = a6;
  *(_BYTE *)(v7 + 89) = a5;
  *(_QWORD *)(v7 + 40) = a2;
  *(_QWORD *)(v7 + 48) = a3;
  *(_QWORD *)(v7 + 32) = a1;
  return swift_task_switch();
}

uint64_t sub_20A4B6700()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  unsigned __int8 v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;

  v1 = *(unsigned __int8 *)(v0 + 90);
  v14 = *(_BYTE *)(v0 + 89);
  v15 = *(_BYTE *)(v0 + 90);
  v3 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  v16 = *(_QWORD *)(v0 + 48);
  v17 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v2 + 152);
  v4 = *(_QWORD *)(v2 + 160);
  v20 = v5;
  v21 = v4;
  LOBYTE(v18) = 8;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD000000000000027, 0x800000020A5E0190, &v18);
  swift_bridgeObjectRelease();
  if (v3 >> 60 == 15)
    v6 = 2;
  else
    v6 = 1;
  if (v1)
    v7 = 0;
  else
    v7 = v6;
  *(_BYTE *)(v0 + 88) = v7;
  v18 = v5;
  v19 = v4;
  v20 = 0;
  v21 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_20A5B8E94();
  swift_bridgeObjectRelease();
  v20 = 0xD00000000000002CLL;
  v21 = 0x800000020A5E01C0;
  *(_QWORD *)(v0 + 16) = v7;
  sub_20A5B9170();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  v8 = v20;
  LOBYTE(v20) = 8;
  CoreODILogger.debug(_:category:)(v8, v21, &v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v18 = v5;
  v19 = v4;
  v20 = 0;
  v21 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_20A5B8E94();
  swift_bridgeObjectRelease();
  v20 = 0xD00000000000002FLL;
  v21 = 0x800000020A5E01F0;
  *(_QWORD *)(v0 + 24) = (v14 ^ 1) & 1;
  sub_20A5B9170();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  v9 = v20;
  LOBYTE(v20) = 8;
  CoreODILogger.debug(_:category:)(v9, v21, &v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_20A498124(&qword_2545FA788, v10, (uint64_t (*)(uint64_t))type metadata accessor for ODNAtorQueueManager, (uint64_t)&unk_20A5C1674);
  v11 = swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v11;
  *(_QWORD *)(v11 + 16) = v0 + 88;
  *(_BYTE *)(v11 + 24) = (v14 ^ 1) & 1;
  *(_QWORD *)(v11 + 32) = v16;
  *(_QWORD *)(v11 + 40) = v3;
  *(_QWORD *)(v11 + 48) = v17;
  *(_BYTE *)(v11 + 56) = v15;
  *(_QWORD *)(v11 + 64) = v2;
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v12;
  type metadata accessor for ODNAssessmentResult();
  *v12 = v0;
  v12[1] = sub_20A4B69DC;
  return sub_20A5B917C();
}

uint64_t sub_20A4B69DC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A4B6A3C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4B6A44(uint64_t a1, _BYTE *a2, char a3, uint64_t a4, unint64_t a5, uint64_t a6, int a7, unint64_t *a8)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  __int128 v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  int v41;
  int v42;
  char *v43;

  v39 = a5;
  v40 = a6;
  v38 = a4;
  v41 = a3 & 1;
  v42 = a7;
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB5180);
  MEMORY[0x24BDAC7A8](v11, v12);
  v43 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA790);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  MEMORY[0x24BDAC7A8](v14, v17);
  v19 = a8[15];
  v18 = a8[16];
  v20 = a8[20];
  v36 = a8[19];
  v37 = v18;
  LOBYTE(a2) = *a2;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))((char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v14);
  v21 = (*(unsigned __int8 *)(v15 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v22 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v22 + v21, (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v14);
  type metadata accessor for ODNRequestTask();
  v23 = swift_allocObject();
  v25 = v38;
  v24 = v39;
  sub_20A459690(v38, v39);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  v26 = v40;
  swift_bridgeObjectRetain();
  *((_QWORD *)&v34 + 1) = v20;
  *(_QWORD *)&v34 = v36;
  sub_20A4B83B8((char)a2, v41, v25, v24, v26, v42, v19, v37, v34, (uint64_t)sub_20A4B796C, v22, v23);
  swift_beginAccess();
  v27 = swift_retain();
  MEMORY[0x20BD25B28](v27);
  if (*(_QWORD *)((a8[14] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((a8[14] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_20A5B8AC8();
  sub_20A5B8AE0();
  sub_20A5B8ABC();
  sub_20A4B5B34(a8 + 14);
  swift_endAccess();
  v28 = sub_20A5B8B64();
  v29 = (uint64_t)v43;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v43, 1, 1, v28);
  v31 = sub_20A498124(&qword_2545FA788, v30, (uint64_t (*)(uint64_t))type metadata accessor for ODNAtorQueueManager, (uint64_t)&unk_20A5C1674);
  v32 = (_QWORD *)swift_allocObject();
  v32[2] = a8;
  v32[3] = v31;
  v32[4] = a8;
  swift_retain_n();
  sub_20A4C69D8(v29, (uint64_t)&unk_2545FA7A0, (uint64_t)v32);
  swift_release();
  return swift_release();
}

uint64_t sub_20A4B6D04(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v7;

  v2 = type metadata accessor for ODNAssessmentResult();
  MEMORY[0x24BDAC7A8](v2, v3);
  sub_20A498734(a1, (uint64_t)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA790);
  return sub_20A5B8B10();
}

uint64_t sub_20A4B6D90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v6;
  *v6 = v4;
  v6[1] = sub_20A45A37C;
  v6[11] = a4;
  return swift_task_switch();
}

uint64_t sub_20A4B6DF0(uint64_t a1, _BYTE *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  *(_QWORD *)(v6 + 984) = v5;
  *(_QWORD *)(v6 + 976) = a5;
  *(_QWORD *)(v6 + 968) = a4;
  *(_QWORD *)(v6 + 960) = a3;
  *(_QWORD *)(v6 + 952) = a1;
  *(_QWORD *)(v6 + 992) = type metadata accessor for ODNAssessmentsFeedbackManager.ODNResultsPayload(0);
  *(_QWORD *)(v6 + 1000) = swift_task_alloc();
  v8 = type metadata accessor for ODNAssessmentsFeedbackManager.ORDResultsPayload(0);
  *(_QWORD *)(v6 + 1008) = v8;
  *(_QWORD *)(v6 + 1016) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v6 + 1024) = swift_task_alloc();
  *(_BYTE *)(v6 + 610) = *a2;
  return swift_task_switch();
}

uint64_t sub_20A4B6E90()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[2];

  v1 = (_QWORD *)v0[123];
  v2 = v1[19];
  v0[129] = v2;
  v3 = v1[20];
  v0[130] = v3;
  v0[116] = v2;
  v0[117] = v3;
  v7[0] = 0;
  v7[1] = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_20A5B8E94();
  swift_bridgeObjectRelease();
  v0[114] = 0xD000000000000027;
  v0[115] = 0x800000020A5E0410;
  swift_bridgeObjectRetain();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  v4 = v0[114];
  v5 = v0[115];
  LOBYTE(v7[0]) = 12;
  CoreODILogger.debug(_:category:)(v4, v5, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v0[131] = v1[15];
  swift_getObjectType();
  sub_20A5B8AF8();
  return swift_task_switch();
}

uint64_t sub_20A4B6FD8()
{
  uint64_t v0;

  memcpy((void *)(v0 + 16), (const void *)(*(_QWORD *)(v0 + 1048) + 368), 0x252uLL);
  sub_20A48A224((_QWORD *)(v0 + 16));
  return swift_task_switch();
}

uint64_t sub_20A4B7030()
{
  uint64_t v0;
  _QWORD *v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;

  v44 = v0 + 616;
  v42 = *(_BYTE *)(v0 + 610);
  v1 = *(_QWORD **)(v0 + 1024);
  v2 = *(int **)(v0 + 1008);
  v3 = *(_QWORD *)(v0 + 976);
  v4 = *(_QWORD *)(v0 + 968);
  v40 = *(_QWORD *)(v0 + 960);
  v5 = *(_QWORD *)(v0 + 16);
  v6 = *(_QWORD *)(v0 + 24);
  v35 = *(_QWORD *)(v0 + 32);
  v38 = *(_QWORD *)(v0 + 40);
  v46 = *(_QWORD *)(v0 + 96);
  v48 = *(_QWORD *)(v0 + 104);
  v7 = (uint64_t)v1 + v2[6];
  sub_20A498734(*(_QWORD *)(v0 + 952), v7, (uint64_t (*)(_QWORD))type metadata accessor for AssessmentTiming);
  v8 = type metadata accessor for AssessmentTiming();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 0, 1, v8);
  v36 = v5;
  *v1 = v5;
  v1[1] = v6;
  v37 = v6;
  v1[2] = v4;
  v1[3] = v3;
  *((_BYTE *)v1 + v2[7]) = v42;
  *(_QWORD *)((char *)v1 + v2[8]) = v40;
  sub_20A459C88(v0 + 112, v0 + 752, qword_253EB4498);
  v9 = 0;
  v10 = 0;
  if (sub_20A44BE1C(v0 + 752) != 1)
  {
    v9 = *(_QWORD *)(v0 + 872);
    v10 = *(_QWORD *)(v0 + 880);
    swift_bridgeObjectRetain();
  }
  sub_20A459C88(v0 + 344, v44, qword_253EB4498);
  v33 = v10;
  v34 = v9;
  if (sub_20A44BE1C(v44) == 1)
  {
    v29 = 0;
    v30 = 0;
  }
  else
  {
    v29 = *(_QWORD *)(v0 + 744);
    v30 = *(_QWORD *)(v0 + 736);
    swift_bridgeObjectRetain();
  }
  v23 = *(_QWORD *)(v0 + 1016);
  v24 = *(_QWORD *)(v0 + 1008);
  v11 = *(_QWORD *)(v0 + 1000);
  if (v48)
    v12 = v46;
  else
    v12 = 0;
  v13 = 0xE000000000000000;
  if (v48)
    v13 = v48;
  v31 = v13;
  v32 = v12;
  v15 = *(_QWORD *)(v0 + 264);
  v14 = *(_QWORD *)(v0 + 272);
  v16 = *(_QWORD *)(v0 + 280);
  v45 = *(_QWORD *)(v0 + 296);
  v47 = *(_QWORD *)(v0 + 288);
  v41 = *(_QWORD *)(v0 + 312);
  v43 = *(_QWORD *)(v0 + 304);
  v39 = *(_QWORD *)(v0 + 320);
  v26 = *(_QWORD *)(v0 + 504);
  v27 = *(_QWORD *)(v0 + 496);
  v25 = *(_QWORD *)(v0 + 512);
  v17 = *(_QWORD *)(v0 + 520);
  v18 = *(_QWORD *)(v0 + 528);
  v19 = *(_QWORD *)(v0 + 536);
  v28 = *(_QWORD *)(v0 + 544);
  v20 = v11 + *(int *)(*(_QWORD *)(v0 + 992) + 88);
  v21 = *(_QWORD *)(v0 + 552);
  sub_20A498734(*(_QWORD *)(v0 + 1024), v20, type metadata accessor for ODNAssessmentsFeedbackManager.ORDResultsPayload);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v24);
  *(_QWORD *)v11 = v35;
  *(_QWORD *)(v11 + 8) = v38;
  *(_QWORD *)(v11 + 16) = v36;
  *(_QWORD *)(v11 + 24) = v37;
  *(_QWORD *)(v11 + 32) = v34;
  *(_QWORD *)(v11 + 40) = v33;
  *(_QWORD *)(v11 + 48) = v15;
  *(_QWORD *)(v11 + 56) = v14;
  *(_QWORD *)(v11 + 64) = v16;
  *(_QWORD *)(v11 + 72) = v47;
  *(_QWORD *)(v11 + 80) = v45;
  *(_QWORD *)(v11 + 88) = v43;
  *(_QWORD *)(v11 + 96) = v41;
  *(_QWORD *)(v11 + 104) = v39;
  *(_QWORD *)(v11 + 112) = v30;
  *(_QWORD *)(v11 + 120) = v29;
  *(_QWORD *)(v11 + 128) = v27;
  *(_QWORD *)(v11 + 136) = v26;
  *(_QWORD *)(v11 + 144) = v25;
  *(_QWORD *)(v11 + 152) = v17;
  *(_QWORD *)(v11 + 160) = v18;
  *(_QWORD *)(v11 + 168) = v19;
  *(_QWORD *)(v11 + 176) = v28;
  *(_QWORD *)(v11 + 184) = v21;
  *(_OWORD *)(v11 + 272) = 0u;
  *(_OWORD *)(v11 + 288) = 0u;
  *(_OWORD *)(v11 + 240) = 0u;
  *(_OWORD *)(v11 + 256) = 0u;
  *(_OWORD *)(v11 + 208) = 0u;
  *(_OWORD *)(v11 + 224) = 0u;
  *(_OWORD *)(v11 + 192) = 0u;
  *(_QWORD *)(v11 + 304) = 0;
  *(_QWORD *)(v11 + 312) = 1;
  *(_BYTE *)(v11 + 320) = 2;
  *(_QWORD *)(v11 + 328) = 0;
  *(_QWORD *)(v11 + 336) = 0;
  *(_BYTE *)(v11 + 344) = 1;
  *(_QWORD *)(v11 + 352) = 0;
  *(_QWORD *)(v11 + 360) = 0;
  *(_BYTE *)(v11 + 368) = 1;
  *(_QWORD *)(v11 + 376) = v32;
  *(_QWORD *)(v11 + 384) = v31;
  *(_QWORD *)(v11 + 392) = 0;
  *(_BYTE *)(v11 + 400) = 1;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_20A4B91B0((uint64_t *)(v0 + 112));
  swift_bridgeObjectRetain();
  sub_20A465800(v15, v14);
  sub_20A465800(v27, v26);
  return swift_task_switch();
}

uint64_t sub_20A4B73B4()
{
  uint64_t *v0;
  _QWORD *v1;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0[131] + 192), *(_QWORD *)(v0[131] + 216));
  v1 = (_QWORD *)swift_task_alloc();
  v0[132] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_20A4B7418;
  return sub_20A4EC1FC(v0[125], 0);
}

uint64_t sub_20A4B7418()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 1064) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A4B747C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 1024);
  v2 = *(_QWORD *)(v0 + 1000);
  sub_20A489F38((uint64_t *)(v0 + 112));
  sub_20A48A4AC((_QWORD *)(v0 + 16));
  sub_20A465AB4(v2, type metadata accessor for ODNAssessmentsFeedbackManager.ODNResultsPayload);
  sub_20A465AB4(v1, type metadata accessor for ODNAssessmentsFeedbackManager.ORDResultsPayload);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4B74FC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[2];

  v1 = *(void **)(v0 + 1064);
  v2 = *(_QWORD *)(v0 + 1024);
  v3 = *(_QWORD *)(v0 + 1000);
  swift_bridgeObjectRetain();
  sub_20A5B8E94();
  swift_bridgeObjectRelease();
  v5[0] = 0xD00000000000000CLL;
  v5[1] = 0x800000020A5E0440;
  swift_getErrorValue();
  sub_20A5B923C();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  CoreODILogger.error(_:category:)(0xD00000000000001ALL, 0x800000020A5E0440, v5);
  swift_bridgeObjectRelease();

  sub_20A489F38((uint64_t *)(v0 + 112));
  sub_20A48A4AC((_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease();
  sub_20A465AB4(v3, type metadata accessor for ODNAssessmentsFeedbackManager.ODNResultsPayload);
  sub_20A465AB4(v2, type metadata accessor for ODNAssessmentsFeedbackManager.ORDResultsPayload);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4B7658()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for ODNAtorQueueManager()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for ODNRequestTaskQueue()
{
  return &type metadata for ODNRequestTaskQueue;
}

uint64_t storeEnumTagSinglePayload for ODNRequestTask.ODNatorTriggeringCase(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_20A4B7710 + 4 * byte_20A5C1405[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_20A4B7744 + 4 * byte_20A5C1400[v4]))();
}

uint64_t sub_20A4B7744(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A4B774C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A4B7754);
  return result;
}

uint64_t sub_20A4B7760(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A4B7768);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_20A4B776C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A4B7774(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ODNRequestTask.ODNatorTriggeringCase()
{
  return &type metadata for ODNRequestTask.ODNatorTriggeringCase;
}

uint64_t storeEnumTagSinglePayload for ODNRequestTask.ODNatorContentType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_20A4B77DC + 4 * byte_20A5C140F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_20A4B7810 + 4 * byte_20A5C140A[v4]))();
}

uint64_t sub_20A4B7810(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A4B7818(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A4B7820);
  return result;
}

uint64_t sub_20A4B782C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A4B7834);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_20A4B7838(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A4B7840(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ODNRequestTask.ODNatorContentType()
{
  return &type metadata for ODNRequestTask.ODNatorContentType;
}

unint64_t sub_20A4B7860()
{
  unint64_t result;

  result = qword_2545FA778;
  if (!qword_2545FA778)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C15AC, &type metadata for ODNRequestTask.ODNatorContentType);
    atomic_store(result, (unint64_t *)&qword_2545FA778);
  }
  return result;
}

unint64_t sub_20A4B78A8()
{
  unint64_t result;

  result = qword_2545FA780;
  if (!qword_2545FA780)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C164C, &type metadata for ODNRequestTask.ODNatorTriggeringCase);
    atomic_store(result, (unint64_t *)&qword_2545FA780);
  }
  return result;
}

uint64_t sub_20A4B78EC(uint64_t a1)
{
  uint64_t v1;

  return sub_20A4B6A44(a1, *(_BYTE **)(v1 + 16), *(_BYTE *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(unsigned __int8 *)(v1 + 56), *(unint64_t **)(v1 + 64));
}

uint64_t sub_20A4B7908()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA790);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_20A4B796C(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA790);
  return sub_20A4B6D04(a1);
}

uint64_t sub_20A4B79AC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  int v19;
  uint64_t v20;
  int v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  int v33;
  int v34;
  unint64_t v35;
  unint64_t v36;
  char *v37;
  char *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  BOOL v50;
  unint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  BOOL v60;
  uint64_t v61;
  char v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  BOOL v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  unint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  unint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  unint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *__dst;
  uint64_t v100;

  v2 = v1;
  v4 = a1[1];
  result = sub_20A5B9164();
  if (result >= v4)
  {
    if (v4 < 0)
      goto LABEL_137;
    if (v4)
      return sub_20A4B807C(0, v4, 1, a1);
    return result;
  }
  if (v4 >= 0)
    v6 = v4;
  else
    v6 = v4 + 1;
  if (v4 < -1)
    goto LABEL_145;
  v7 = result;
  v94 = a1;
  if (v4 < 2)
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
    v100 = MEMORY[0x24BEE4AF8];
    __dst = (char *)((MEMORY[0x24BEE4AF8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v4 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_103:
      v86 = v10;
      if (v13 >= 2)
      {
        v87 = *v94;
        do
        {
          v88 = v13 - 2;
          if (v13 < 2)
            goto LABEL_132;
          if (!v87)
            goto LABEL_144;
          v89 = v86;
          v90 = *(_QWORD *)&v86[16 * v88 + 32];
          v91 = *(_QWORD *)&v86[16 * v13 + 24];
          sub_20A4B8104((char *)(v87 + 8 * v90), (char *)(v87 + 8 * *(_QWORD *)&v86[16 * v13 + 16]), (char *)(v87 + 8 * v91), __dst);
          if (v2)
            break;
          if (v91 < v90)
            goto LABEL_133;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v89 = sub_20A4C08E0((uint64_t)v89);
          if (v88 >= *((_QWORD *)v89 + 2))
            goto LABEL_134;
          v92 = &v89[16 * v88 + 32];
          *(_QWORD *)v92 = v90;
          *((_QWORD *)v92 + 1) = v91;
          v93 = *((_QWORD *)v89 + 2);
          if (v13 > v93)
            goto LABEL_135;
          memmove(&v89[16 * v13 + 16], &v89[16 * v13 + 32], 16 * (v93 - v13));
          v86 = v89;
          *((_QWORD *)v89 + 2) = v93 - 1;
          v13 = v93 - 1;
        }
        while (v93 > 2);
      }
LABEL_100:
      swift_bridgeObjectRelease();
      *(_QWORD *)((v100 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_20A5B8ABC();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v8 = v6 >> 1;
    type metadata accessor for ODNRequestTask();
    v9 = sub_20A5B8AD4();
    *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) = v8;
    __dst = (char *)((v9 & 0xFFFFFFFFFFFFFF8) + 32);
    v100 = v9;
  }
  v11 = 0;
  v12 = *a1;
  v95 = *a1 - 8;
  v10 = (char *)MEMORY[0x24BEE4AF8];
  v96 = v7;
  v97 = v4;
  v98 = *a1;
  while (1)
  {
    v14 = v11++;
    if (v11 < v4)
    {
      v15 = *(_QWORD *)(v12 + 8 * v11);
      v16 = *(_QWORD *)(v12 + 8 * v14);
      v17 = *(unsigned __int8 *)(v15 + 113);
      v18 = *(unsigned __int8 *)(v16 + 113);
      if (v17 == v18)
        v19 = *(unsigned __int8 *)(v15 + 112) < *(unsigned __int8 *)(v16 + 112);
      else
        v19 = v18 & (v17 ^ 1);
      v11 = v14 + 2;
      if (v14 + 2 < v4)
      {
        do
        {
          v20 = *(_QWORD *)(v12 + 8 * v11);
          v21 = *(unsigned __int8 *)(v20 + 113);
          if (v21 == (v17 & 1))
          {
            if (v19 != *(unsigned __int8 *)(v20 + 112) < *(unsigned __int8 *)(v15 + 112))
              goto LABEL_26;
          }
          else if (v19 != (v17 & (v21 ^ 1)))
          {
            goto LABEL_26;
          }
          ++v11;
          v17 = *(unsigned __int8 *)(v20 + 113);
          v15 = v20;
        }
        while (v4 != v11);
        v11 = v4;
      }
LABEL_26:
      if (v19)
      {
        if (v11 < v14)
          goto LABEL_138;
        if (v14 < v11)
        {
          v22 = (uint64_t *)(v95 + 8 * v11);
          v23 = v11;
          v24 = v14;
          v25 = (uint64_t *)(v12 + 8 * v14);
          do
          {
            if (v24 != --v23)
            {
              if (!v12)
                goto LABEL_143;
              v26 = *v25;
              *v25 = *v22;
              *v22 = v26;
            }
            ++v24;
            --v22;
            ++v25;
          }
          while (v24 < v23);
        }
      }
    }
    if (v11 >= v4)
      goto LABEL_53;
    if (__OFSUB__(v11, v14))
      goto LABEL_136;
    if (v11 - v14 >= v7)
      goto LABEL_53;
    v27 = v14 + v7;
    if (__OFADD__(v14, v7))
      goto LABEL_139;
    if (v27 >= v4)
      v27 = v4;
    if (v27 < v14)
      break;
    if (v11 != v27)
    {
      v28 = (_QWORD *)(v95 + 8 * v11);
      do
      {
        v29 = *(_QWORD *)(v12 + 8 * v11);
        v30 = v14;
        v31 = v28;
        do
        {
          v32 = *v31;
          v33 = *(unsigned __int8 *)(v29 + 113);
          v34 = *(unsigned __int8 *)(*v31 + 113);
          if (v33 == v34)
          {
            if (*(unsigned __int8 *)(v29 + 112) >= *(unsigned __int8 *)(v32 + 112))
              break;
          }
          else if ((v34 & (v33 ^ 1) & 1) == 0)
          {
            break;
          }
          if (!v12)
            goto LABEL_141;
          *v31 = v29;
          v31[1] = v32;
          --v31;
          ++v30;
        }
        while (v11 != v30);
        ++v11;
        ++v28;
      }
      while (v11 != v27);
      v11 = v27;
    }
LABEL_53:
    if (v11 < v14)
      goto LABEL_131;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_20A4C073C(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
    v36 = *((_QWORD *)v10 + 2);
    v35 = *((_QWORD *)v10 + 3);
    v13 = v36 + 1;
    v12 = v98;
    if (v36 >= v35 >> 1)
    {
      v85 = sub_20A4C073C((char *)(v35 > 1), v36 + 1, 1, v10);
      v12 = v98;
      v10 = v85;
    }
    *((_QWORD *)v10 + 2) = v13;
    v37 = v10 + 32;
    v38 = &v10[16 * v36 + 32];
    *(_QWORD *)v38 = v14;
    *((_QWORD *)v38 + 1) = v11;
    if (v36)
    {
      while (1)
      {
        v39 = v13 - 1;
        if (v13 >= 4)
        {
          v44 = &v37[16 * v13];
          v45 = *((_QWORD *)v44 - 8);
          v46 = *((_QWORD *)v44 - 7);
          v50 = __OFSUB__(v46, v45);
          v47 = v46 - v45;
          if (v50)
            goto LABEL_120;
          v49 = *((_QWORD *)v44 - 6);
          v48 = *((_QWORD *)v44 - 5);
          v50 = __OFSUB__(v48, v49);
          v42 = v48 - v49;
          v43 = v50;
          if (v50)
            goto LABEL_121;
          v51 = v13 - 2;
          v52 = &v37[16 * v13 - 32];
          v54 = *(_QWORD *)v52;
          v53 = *((_QWORD *)v52 + 1);
          v50 = __OFSUB__(v53, v54);
          v55 = v53 - v54;
          if (v50)
            goto LABEL_123;
          v50 = __OFADD__(v42, v55);
          v56 = v42 + v55;
          if (v50)
            goto LABEL_126;
          if (v56 >= v47)
          {
            v74 = &v37[16 * v39];
            v76 = *(_QWORD *)v74;
            v75 = *((_QWORD *)v74 + 1);
            v50 = __OFSUB__(v75, v76);
            v77 = v75 - v76;
            if (v50)
              goto LABEL_130;
            v67 = v42 < v77;
            goto LABEL_90;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v68 = *((_QWORD *)v10 + 4);
            v69 = *((_QWORD *)v10 + 5);
            v50 = __OFSUB__(v69, v68);
            v61 = v69 - v68;
            v62 = v50;
            goto LABEL_84;
          }
          v41 = *((_QWORD *)v10 + 4);
          v40 = *((_QWORD *)v10 + 5);
          v50 = __OFSUB__(v40, v41);
          v42 = v40 - v41;
          v43 = v50;
        }
        if ((v43 & 1) != 0)
          goto LABEL_122;
        v51 = v13 - 2;
        v57 = &v37[16 * v13 - 32];
        v59 = *(_QWORD *)v57;
        v58 = *((_QWORD *)v57 + 1);
        v60 = __OFSUB__(v58, v59);
        v61 = v58 - v59;
        v62 = v60;
        if (v60)
          goto LABEL_125;
        v63 = &v37[16 * v39];
        v65 = *(_QWORD *)v63;
        v64 = *((_QWORD *)v63 + 1);
        v50 = __OFSUB__(v64, v65);
        v66 = v64 - v65;
        if (v50)
          goto LABEL_128;
        if (__OFADD__(v61, v66))
          goto LABEL_129;
        if (v61 + v66 >= v42)
        {
          v67 = v42 < v66;
LABEL_90:
          if (v67)
            v39 = v51;
          goto LABEL_92;
        }
LABEL_84:
        if ((v62 & 1) != 0)
          goto LABEL_124;
        v70 = &v37[16 * v39];
        v72 = *(_QWORD *)v70;
        v71 = *((_QWORD *)v70 + 1);
        v50 = __OFSUB__(v71, v72);
        v73 = v71 - v72;
        if (v50)
          goto LABEL_127;
        if (v73 < v61)
          goto LABEL_14;
LABEL_92:
        v78 = v39 - 1;
        if (v39 - 1 >= v13)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v12)
          goto LABEL_142;
        v79 = v10;
        v80 = &v37[16 * v78];
        v81 = *(_QWORD *)v80;
        v82 = &v37[16 * v39];
        v83 = *((_QWORD *)v82 + 1);
        sub_20A4B8104((char *)(v12 + 8 * *(_QWORD *)v80), (char *)(v12 + 8 * *(_QWORD *)v82), (char *)(v12 + 8 * v83), __dst);
        if (v1)
          goto LABEL_100;
        if (v83 < v81)
          goto LABEL_117;
        if (v39 > *((_QWORD *)v79 + 2))
          goto LABEL_118;
        *(_QWORD *)v80 = v81;
        *(_QWORD *)&v37[16 * v78 + 8] = v83;
        v84 = *((_QWORD *)v79 + 2);
        if (v39 >= v84)
          goto LABEL_119;
        v10 = v79;
        v13 = v84 - 1;
        memmove(&v37[16 * v39], v82 + 16, 16 * (v84 - 1 - v39));
        *((_QWORD *)v79 + 2) = v84 - 1;
        v12 = v98;
        if (v84 <= 2)
          goto LABEL_14;
      }
    }
    v13 = 1;
LABEL_14:
    v7 = v96;
    v4 = v97;
    if (v11 >= v97)
    {
      v2 = v1;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  result = sub_20A5B8FA8();
  __break(1u);
  return result;
}

uint64_t sub_20A4B807C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  int v10;
  int v11;

  if (a3 != a2)
  {
    v4 = *a4;
    v5 = *a4 + 8 * a3 - 8;
LABEL_5:
    v6 = *(_QWORD *)(v4 + 8 * a3);
    v7 = result;
    v8 = (_QWORD *)v5;
    while (1)
    {
      v9 = *v8;
      v10 = *(unsigned __int8 *)(v6 + 113);
      v11 = *(unsigned __int8 *)(*v8 + 113);
      if (v10 == v11)
      {
        if (*(unsigned __int8 *)(v6 + 112) >= *(unsigned __int8 *)(v9 + 112))
          goto LABEL_4;
      }
      else if ((v11 & (v10 ^ 1) & 1) == 0)
      {
        goto LABEL_4;
      }
      if (!v4)
        break;
      *v8 = v6;
      v8[1] = v9;
      --v8;
      if (a3 == ++v7)
      {
LABEL_4:
        ++a3;
        v5 += 8;
        if (a3 == a2)
          return result;
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_20A4B8104(char *__src, char *a2, char *a3, char *__dst)
{
  char *v4;
  char *v5;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  char *v19;
  char *v20;
  uint64_t result;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  int v25;
  int v26;
  char *v27;
  unsigned int v28;
  char *v29;
  char *v30;
  char *v31;

  v4 = __dst;
  v5 = a3;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 7;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 3;
  v11 = a3 - a2;
  v12 = a3 - a2 + 7;
  if (a3 - a2 >= 0)
    v12 = a3 - a2;
  v13 = v12 >> 3;
  v31 = __src;
  v30 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 < -7)
      goto LABEL_47;
    if (__dst != a2 || &a2[8 * v13] <= __dst)
      memmove(__dst, a2, 8 * v13);
    v20 = &v4[8 * v13];
    v29 = v20;
    v31 = v6;
    if (v7 >= v6 || v11 < 8)
    {
LABEL_31:
      sub_20A4C0834(&v31, &v30, &v29);
      return 1;
    }
    while (1)
    {
      v22 = *((_QWORD *)v20 - 1);
      v23 = v6 - 8;
      v24 = *((_QWORD *)v6 - 1);
      v25 = *(unsigned __int8 *)(v22 + 113);
      v26 = *(unsigned __int8 *)(v24 + 113);
      if (v25 == v26)
      {
        v28 = *(unsigned __int8 *)(v22 + 112);
        v27 = v5 - 8;
        if (v28 >= *(unsigned __int8 *)(v24 + 112))
        {
LABEL_37:
          v29 = v20 - 8;
          if (v5 < v20 || v27 >= v20 || v5 != v20)
            *(_QWORD *)v27 = *((_QWORD *)v20 - 1);
          v20 -= 8;
          if (v6 <= v7)
            goto LABEL_31;
          goto LABEL_34;
        }
      }
      else
      {
        v27 = v5 - 8;
        if ((v26 & (v25 ^ 1) & 1) == 0)
          goto LABEL_37;
      }
      if (v5 != v6 || v27 >= v6)
        *(_QWORD *)v27 = v24;
      v31 = v6 - 8;
      v6 -= 8;
      if (v23 <= v7)
        goto LABEL_31;
LABEL_34:
      v5 = v27;
      if (v20 <= v4)
        goto LABEL_31;
    }
  }
  if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v14 = &v4[8 * v10];
    v29 = v14;
    if (v6 < v5 && v8 >= 8)
    {
      while (1)
      {
        v15 = *(_QWORD *)v6;
        v16 = *(_QWORD *)v4;
        v17 = *(unsigned __int8 *)(*(_QWORD *)v6 + 113);
        v18 = *(unsigned __int8 *)(*(_QWORD *)v4 + 113);
        if (v17 == v18)
        {
          if (*(unsigned __int8 *)(v15 + 112) < *(unsigned __int8 *)(v16 + 112))
          {
LABEL_18:
            v19 = v6 + 8;
            if (v7 < v6 || v7 >= v19 || v7 != v6)
              *(_QWORD *)v7 = v15;
            goto LABEL_22;
          }
        }
        else if ((v18 & (v17 ^ 1) & 1) != 0)
        {
          goto LABEL_18;
        }
        if (v7 != v4)
          *(_QWORD *)v7 = v16;
        v4 += 8;
        v30 = v4;
        v19 = v6;
LABEL_22:
        v7 += 8;
        if (v4 < v14)
        {
          v6 = v19;
          if (v19 < v5)
            continue;
        }
        v31 = v7;
        goto LABEL_31;
      }
    }
    goto LABEL_31;
  }
LABEL_47:
  result = sub_20A5B8FFC();
  __break(1u);
  return result;
}

uint64_t sub_20A4B83B8(char a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, __int128 a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  char v18;
  __int128 v21;
  ValueMetadata *v22;
  _UNKNOWN **v23;

  v18 = a2 & 1;
  v22 = &type metadata for CoreODILogger;
  v23 = &protocol witness table for CoreODILogger;
  v21 = a9;
  swift_defaultActor_initialize();
  *(_WORD *)(a12 + 208) = 0;
  *(_BYTE *)(a12 + 112) = a1;
  *(_BYTE *)(a12 + 113) = v18;
  *(_QWORD *)(a12 + 120) = a3;
  *(_QWORD *)(a12 + 128) = a4;
  *(_QWORD *)(a12 + 136) = a5;
  *(_BYTE *)(a12 + 144) = a6;
  *(_QWORD *)(a12 + 152) = a7;
  *(_QWORD *)(a12 + 160) = a8;
  *(_QWORD *)(a12 + 216) = a10;
  *(_QWORD *)(a12 + 224) = a11;
  sub_20A44CFD8(&v21, a12 + 168);
  return a12;
}

uint64_t sub_20A4B8478()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20A4B84A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_20A4597C0;
  v4 = (_QWORD *)swift_task_alloc();
  v3[2] = v4;
  *v4 = v3;
  v4[1] = sub_20A45A37C;
  v4[11] = v2;
  return swift_task_switch();
}

uint64_t sub_20A4B8524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  objc_class *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  objc_class *v21;
  char *v22;
  char *v23;
  char *v24;
  id v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  id v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  _QWORD *v42;
  uint64_t v46;
  char v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  *(_QWORD *)(v8 + 1968) = v59;
  *(_QWORD *)(v8 + 1960) = v58;
  *(_QWORD *)(v8 + 1952) = v57;
  *(_BYTE *)(v8 + 2002) = v52;
  *(_QWORD *)(v8 + 1944) = a6;
  *(_QWORD *)(v8 + 1936) = a5;
  v10 = sub_20A5B866C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = swift_task_alloc();
  *(_QWORD *)(v8 + 1976) = v12;
  *(_QWORD *)(v8 + 1840) = type metadata accessor for ODNAssessmentsFactory();
  *(_QWORD *)(v8 + 1848) = &off_24C3140C8;
  *(_QWORD *)(v8 + 1816) = v53;
  swift_defaultActor_initialize();
  *(_BYTE *)(v59 + 320) = 0;
  *(_OWORD *)(v59 + 288) = 0u;
  *(_OWORD *)(v59 + 304) = 0u;
  *(_OWORD *)(v59 + 256) = 0u;
  *(_OWORD *)(v59 + 272) = 0u;
  *(_OWORD *)(v59 + 240) = 0u;
  *(_OWORD *)(v59 + 328) = 0u;
  *(_OWORD *)(v59 + 344) = 0u;
  *(_QWORD *)(v59 + 360) = 0;
  sub_20A47BD60(v8 + 1816, v59 + 112);
  *(_QWORD *)(v59 + 152) = v55;
  *(_QWORD *)(v59 + 160) = v56;
  *(_QWORD *)(v8 + 1728) = 0x404E000000000000;
  *(_QWORD *)(v8 + 1736) = 3;
  *(_QWORD *)(v8 + 1744) = 0x3FE0000000000000;
  *(_DWORD *)(v8 + 1752) = 65793;
  v13 = (objc_class *)type metadata accessor for DIPAssessmentWebService();
  *(_OWORD *)(v8 + 1760) = 0u;
  v14 = (char *)objc_allocWithZone(v13);
  v15 = &v14[OBJC_IVAR____TtC17CoreODIEssentials23DIPAssessmentWebService_DUA_ORD_ENDPOINT];
  *(_QWORD *)v15 = 0x726F5F646E65732FLL;
  *((_QWORD *)v15 + 1) = 0xE900000000000064;
  v16 = &v14[OBJC_IVAR____TtC17CoreODIEssentials23DIPAssessmentWebService_DUA_TRAIN_ENDPOINT];
  *(_QWORD *)v16 = 0x746F5F646E65732FLL;
  *((_QWORD *)v16 + 1) = 0xE900000000000064;
  swift_bridgeObjectRetain_n();
  *(_QWORD *)(v59 + 232) = sub_20A4B5010(a1, a2, v8 + 1728, v55, v56, v14);
  v17 = a8;
  v46 = a8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_20A5B8660();
  v18 = sub_20A5B863C();
  v20 = v19;
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v12, v10);
  *(_QWORD *)(v8 + 1680) = 0x4024000000000000;
  *(_QWORD *)(v8 + 1688) = 3;
  *(_QWORD *)(v8 + 1696) = 0x3FE0000000000000;
  *(_DWORD *)(v8 + 1704) = 16777217;
  *(_QWORD *)(v8 + 1712) = a7;
  *(_QWORD *)(v8 + 1720) = v17;
  v21 = (objc_class *)type metadata accessor for DIPAssessmentStaticWebService();
  v22 = (char *)objc_allocWithZone(v21);
  v23 = &v22[OBJC_IVAR____TtC17CoreODIEssentials29DIPAssessmentStaticWebService_GET_STS_ENDPOINT];
  *(_QWORD *)v23 = 1937011503;
  *((_QWORD *)v23 + 1) = 0xE400000000000000;
  v24 = &v22[OBJC_IVAR____TtC17CoreODIEssentials29DIPAssessmentStaticWebService_GET_PROFILE_ENDPOINT];
  *(_QWORD *)v24 = 0x656C69666F72702FLL;
  *((_QWORD *)v24 + 1) = 0xE800000000000000;
  v22[OBJC_IVAR____TtC17CoreODIEssentials29DIPAssessmentStaticWebService_serverRepo] = v54;
  v25 = sub_20A4B5010(v18, v20, v8 + 1680, v55, v56, v22);
  *(_QWORD *)(v59 + 168) = v25;
  *(_QWORD *)(v8 + 1880) = v21;
  *(_QWORD *)(v8 + 1888) = &off_24C31ADA0;
  *(_QWORD *)(v8 + 1856) = v25;
  type metadata accessor for ProfileManager();
  v26 = (_QWORD *)swift_allocObject();
  v27 = __swift_mutable_project_boxed_opaque_existential_1(v8 + 1856, (uint64_t)v21);
  v28 = *((_QWORD *)v21 - 1);
  v29 = (uint64_t *)swift_task_alloc();
  (*(void (**)(uint64_t *, uint64_t, objc_class *))(v28 + 16))(v29, v27, v21);
  v30 = *v29;
  v31 = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v32 = sub_20A4B5104(a5, a6, a3, a4, v30, v26);
  __swift_destroy_boxed_opaque_existential_1(v8 + 1856);
  swift_task_dealloc();

  v33 = sub_20A498124(&qword_2545FA7C8, 255, (uint64_t (*)(uint64_t))type metadata accessor for ProfileManager, (uint64_t)&unk_20A5C0980);
  *(_QWORD *)(v59 + 176) = v32;
  *(_QWORD *)(v59 + 184) = v33;
  sub_20A44D0C8(v8 + 1544);
  sub_20A459C88(v8 + 1544, v8 + 576, qword_253EB4498);
  *(_OWORD *)(v8 + 712) = 0u;
  *(_OWORD *)(v8 + 728) = 0u;
  *(_OWORD *)(v8 + 744) = 0u;
  *(_OWORD *)(v8 + 760) = 0u;
  *(_OWORD *)(v8 + 776) = 0u;
  *(_QWORD *)(v8 + 792) = 0;
  *(_QWORD *)(v8 + 800) = 0xF000000000000000;
  sub_20A459C88(v8 + 1544, v8 + 808, qword_253EB4498);
  *(_OWORD *)(v8 + 944) = 0u;
  *(_OWORD *)(v8 + 960) = 0u;
  *(_OWORD *)(v8 + 976) = 0u;
  *(_OWORD *)(v8 + 992) = 0u;
  *(_OWORD *)(v8 + 1008) = 0u;
  *(_QWORD *)(v8 + 1024) = 0;
  *(_QWORD *)(v8 + 1032) = 0xF000000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v34 = MEMORY[0x24BEE4AF8];
  v35 = sub_20A469B08(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)(v59 + 368) = a3;
  *(_QWORD *)(v59 + 376) = a4;
  *(_QWORD *)(v59 + 384) = a5;
  *(_QWORD *)(v59 + 392) = a6;
  *(_QWORD *)(v59 + 400) = a7;
  *(_QWORD *)(v59 + 408) = v46;
  *(_OWORD *)(v59 + 416) = 0u;
  *(_OWORD *)(v59 + 432) = 0u;
  *(_OWORD *)(v59 + 448) = 0u;
  memcpy((void *)(v59 + 464), (const void *)(v8 + 576), 0x1D0uLL);
  *(_BYTE *)(v59 + 928) = 2;
  v36 = *(_DWORD *)(v8 + 1540);
  *(_DWORD *)(v59 + 929) = *(_DWORD *)(v8 + 1537);
  *(_DWORD *)(v59 + 932) = v36;
  *(_QWORD *)(v59 + 936) = v35;
  *(_OWORD *)(v59 + 944) = xmmword_20A5BCDB0;
  *(_WORD *)(v59 + 960) = 0;
  v37 = *(void **)(v59 + 232);
  *(_QWORD *)(v8 + 1920) = &type metadata for CoreODILogger;
  *(_QWORD *)(v8 + 1928) = &protocol witness table for CoreODILogger;
  *(_QWORD *)(v8 + 1896) = v55;
  *(_QWORD *)(v8 + 1904) = v56;
  v38 = type metadata accessor for ODNAssessmentsFeedbackManager();
  v39 = swift_allocObject();
  v40 = v37;
  swift_bridgeObjectRetain();
  v41 = v40;
  swift_defaultActor_initialize();
  sub_20A4653B0((_OWORD *)(v8 + 1040));
  sub_20A4B9378(v8 + 1328);
  v42 = sub_20A46A420(v34);
  *(_WORD *)(v8 + 16) = 0;
  *(_OWORD *)(v8 + 24) = 0u;
  *(_OWORD *)(v8 + 40) = 0u;
  sub_20A459C88(v8 + 1040, v8 + 56, &qword_2545F9F88);
  sub_20A459C88(v8 + 1328, v8 + 344, &qword_2545FA7D0);
  *(_QWORD *)(v8 + 560) = v42;
  *(_QWORD *)(v8 + 568) = MEMORY[0x24BEE4B08];
  memcpy((void *)(v39 + 112), (const void *)(v8 + 16), 0x230uLL);
  sub_20A44CFD8((__int128 *)(v8 + 1896), v39 + 680);
  *(_QWORD *)(v39 + 672) = v41;
  *(_QWORD *)(v8 + 1800) = v38;
  *(_QWORD *)(v8 + 1808) = &off_24C315AA0;
  swift_bridgeObjectRelease();

  *(_QWORD *)(v8 + 1776) = v39;
  sub_20A44CFD8((__int128 *)(v8 + 1776), v59 + 192);
  return swift_task_switch();
}

uint64_t sub_20A4B8B58()
{
  uint64_t v0;
  _QWORD *v1;

  *(_BYTE *)(v0 + 2000) = *(_BYTE *)(v0 + 2002);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 1984) = v1;
  *v1 = v0;
  v1[1] = sub_20A4B8BB0;
  return sub_20A480998((_BYTE *)(v0 + 2000));
}

uint64_t sub_20A4B8BB0()
{
  char *v0;
  uint64_t **v1;
  uint64_t *v2;
  uint64_t *v3;
  _QWORD *v4;

  v2 = *v1;
  v3 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    sub_20A480E8C(5, v0);

  }
  v4 = (_QWORD *)swift_task_alloc();
  v2[249] = (uint64_t)v4;
  *v4 = v3;
  v4[1] = sub_20A4B8C4C;
  return sub_20A481044((uint64_t)v2 + 2001, v2[244], v2[245]);
}

uint64_t sub_20A4B8C4C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A4B8CA4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD **)(v0 + 1968);
  v2 = *(_QWORD *)(v0 + 1944);
  v3 = *(_QWORD *)(v0 + 1936);
  v1[52] = v3;
  v1[53] = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v1[54] = v3;
  v1[55] = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 1816);
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 1968));
}

void sub_20A4B8D34(uint64_t a1, uint64_t a2, unsigned __int8 *a3, unsigned __int8 *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  _QWORD *v27;
  char *v28;
  uint64_t v29;
  _QWORD v33[2];
  uint64_t v34;
  uint64_t v35;
  char v36;
  int v37;
  uint64_t v38;
  char v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v10 = v8;
  v9[8] = a8;
  v9[9] = v10;
  v9[7] = a2;
  v16 = sub_20A5B866C();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = swift_task_alloc();
  v9[10] = v18;
  v37 = *a3;
  v40 = *a4;
  swift_defaultActor_initialize();
  *(_QWORD *)(v10 + 112) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v10 + 136) = 0;
  *(_BYTE *)(v10 + 144) = 0;
  *(_QWORD *)(v10 + 152) = a5;
  *(_QWORD *)(v10 + 160) = a6;
  v34 = a5;
  v35 = a6;
  swift_bridgeObjectRetain();
  sub_20A5B8E94();
  swift_bridgeObjectRelease();
  v33[0] = 0xD000000000000008;
  v33[1] = 0x800000020A5E0460;
  sub_20A5B899C();
  CoreODILogger.debug(_:category:)(0xD00000000000002BLL, 0x800000020A5E0460, v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v34 = a1;
  v35 = a2;
  swift_bridgeObjectRetain();
  sub_20A5B899C();
  v9[11] = v35;
  sub_20A5B8660();
  sub_20A5B863C();
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v18, v16);
  v19 = type metadata accessor for ODNAssessmentsFactory();
  v20 = swift_allocObject();
  v9[12] = v20;
  v21 = *(_QWORD *)(v10 + 152);
  v22 = *(_QWORD *)(v10 + 160);
  v29 = v21;
  v9[5] = v19;
  v9[6] = &off_24C3140C8;
  v9[2] = v20;
  type metadata accessor for ODNAssessmentsManager();
  v23 = swift_allocObject();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v9 + 2), v19);
  v24 = *(_QWORD *)(v19 - 8);
  v25 = (uint64_t *)swift_task_alloc();
  v9[13] = v25;
  (*(void (**)(void))(v24 + 16))();
  v26 = *v25;
  v28 = (char *)&dword_2545FA7B8 + dword_2545FA7B8;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  v27 = (_QWORD *)swift_task_alloc();
  v9[14] = v27;
  *v27 = v9;
  v27[1] = sub_20A4B900C;
  v44 = a8;
  v45 = v23;
  v42 = v22;
  v43 = a7;
  v41 = v29;
  v39 = v37;
  v38 = v26;
  v36 = v40;
  __asm { BR              X8; sub_20A4B8524 }
}

uint64_t sub_20A4B900C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 72);
  v7 = *v1;
  swift_task_dealloc();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v2 + 16);
  swift_release();
  swift_task_dealloc();
  v4 = sub_20A498124(&qword_2545FA7C0, 255, (uint64_t (*)(uint64_t))type metadata accessor for ODNAssessmentsManager, (uint64_t)&unk_20A5BFAB8);
  *(_QWORD *)(v3 + 120) = a1;
  *(_QWORD *)(v3 + 128) = v4;
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v7 + 8))(*(_QWORD *)(v2 + 72));
}

unint64_t sub_20A4B90E8()
{
  unint64_t result;

  result = qword_2545FA7A8;
  if (!qword_2545FA7A8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C1754, &type metadata for ODNRequestTaskQueue.ODNRequestTaskQueueError);
    atomic_store(result, (unint64_t *)&qword_2545FA7A8);
  }
  return result;
}

uint64_t sub_20A4B912C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA218);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20A4B916C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ODNAssessmentResult();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_20A4B91B0(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  v2 = a1[19];
  v3 = a1[20];
  v6 = a1[27];
  v9 = a1[29];
  v5 = a1[28];
  v7 = a1[31];
  v8 = a1[30];
  v10 = a1[49];
  v11 = a1[48];
  v12 = a1[57];
  v13 = a1[56];
  sub_20A48990C(*a1, a1[1], a1[2]);
  swift_bridgeObjectRetain();
  sub_20A465800(v2, v3);
  sub_20A459690(v6, v5);
  sub_20A48990C(v9, v8, v7);
  swift_bridgeObjectRetain();
  sub_20A465800(v11, v10);
  sub_20A459690(v13, v12);
  return a1;
}

double sub_20A4B9378(uint64_t a1)
{
  double result;

  *(_BYTE *)(a1 + 208) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

uint64_t getEnumTagSinglePayload for ODNRequestTaskQueue.ODNRequestTaskQueueError(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for ODNRequestTaskQueue.ODNRequestTaskQueueError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_20A4B9434 + 4 * byte_20A5C1414[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_20A4B9454 + 4 * byte_20A5C1419[v4]))();
}

_BYTE *sub_20A4B9434(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_20A4B9454(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_20A4B945C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_20A4B9464(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_20A4B946C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_20A4B9474(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_20A4B9480()
{
  return 0;
}

ValueMetadata *type metadata accessor for ODNRequestTaskQueue.ODNRequestTaskQueueError()
{
  return &type metadata for ODNRequestTaskQueue.ODNRequestTaskQueueError;
}

unint64_t sub_20A4B949C()
{
  unint64_t result;

  result = qword_2545FA7D8;
  if (!qword_2545FA7D8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C172C, &type metadata for ODNRequestTaskQueue.ODNRequestTaskQueueError);
    atomic_store(result, (unint64_t *)&qword_2545FA7D8);
  }
  return result;
}

unint64_t sub_20A4B94E0(double a1)
{
  double v1;
  unint64_t result;

  if (a1 <= 0.0)
    return 0;
  if ((~*(_QWORD *)&a1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (a1 <= -1.0)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (a1 >= 1.84467441e19)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if ((unint64_t)a1 > 0x44B82FA08)
    return -1;
  v1 = a1 * 1000000000.0;
  if ((~*(_QWORD *)&v1 & 0x7FF0000000000000) == 0)
    goto LABEL_15;
  if (v1 > -1.0)
  {
    if (v1 < 1.84467441e19)
      return (unint64_t)v1;
    goto LABEL_17;
  }
LABEL_16:
  __break(1u);
LABEL_17:
  __break(1u);
  return result;
}

uint64_t DsidType.init(from:)@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v6;
  char v7;
  Swift::String v8;
  _QWORD v9[4];
  _QWORD v10[4];

  sub_20A47BD60(a1, (uint64_t)v10);
  __swift_project_boxed_opaque_existential_1(v10, v10[3]);
  sub_20A5B92E4();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
    return __swift_destroy_boxed_opaque_existential_1(a1);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v9, v9[3]);
    sub_20A5B91C4();
    DsidType.init(rawValue:)(v8);
    if (v7 == 4)
      v6 = 0;
    else
      v6 = v7;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
    result = __swift_destroy_boxed_opaque_existential_1(a1);
    *a2 = v6;
  }
  return result;
}

void sub_20A4B96A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = sub_20A5B8588();
  MEMORY[0x24BDAC7A8](v3, v4);
  __asm { BR              X10 }
}

_QWORD *sub_20A4B9720()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  size_t v6;
  uint64_t v7;

  if (BYTE6(v0))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_253EB52B8);
    v4 = (_QWORD *)swift_allocObject();
    v6 = _swift_stdlib_malloc_size(v4);
    v4[2] = BYTE6(v0);
    v4[3] = 2 * v6 - 64;
    sub_20A45964C(v2, v0);
    v7 = sub_20A5B84F8();
    sub_20A44BD90(v2, v0);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v1);
    if (v7 != BYTE6(v0))
    {
      __break(1u);
      JUMPOUT(0x20A4B97F4);
    }
  }
  return v4;
}

uint64_t sub_20A4B980C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v0 = swift_allocObject();
  v1 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA808);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_20A5C17A0;
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_20A5C17B0;
  *(_QWORD *)(v3 + 32) = 0xE400000000000000;
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = &unk_24C3146F0;
  *(_QWORD *)(v3 + 40) = v4 | 0x1000000000000000;
  *(_BYTE *)(v3 + 48) = 0;
  *(_QWORD *)(v2 + 32) = v3 | 0x7000000000000000;
  *(_BYTE *)(v2 + 40) = 0;
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_20A5C17C0;
  *(_QWORD *)(v5 + 32) = 0xE400000000000000;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = &unk_24C3143F0;
  *(_QWORD *)(v5 + 40) = v6 | 0x1000000000000000;
  *(_BYTE *)(v5 + 48) = 0;
  *(_QWORD *)(v2 + 48) = v5 | 0x7000000000000000;
  *(_BYTE *)(v2 + 56) = 0;
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_20A5C17D0;
  *(_QWORD *)(v7 + 32) = 0xE400000000000000;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = &unk_24C3144B0;
  *(_QWORD *)(v7 + 40) = v8 | 0x1000000000000000;
  *(_BYTE *)(v7 + 48) = 0;
  *(_QWORD *)(v2 + 64) = v7 | 0x7000000000000000;
  *(_BYTE *)(v2 + 72) = 0;
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_20A5C17E0;
  *(_QWORD *)(v9 + 32) = 0xE400000000000000;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = &unk_24C3144F0;
  *(_QWORD *)(v9 + 40) = v10 | 0x1000000000000000;
  *(_BYTE *)(v9 + 48) = 0;
  *(_QWORD *)(v2 + 80) = v9 | 0x7000000000000000;
  *(_BYTE *)(v2 + 88) = 0;
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_20A5C17F0;
  *(_QWORD *)(v11 + 32) = 0xE400000000000000;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = &unk_24C314530;
  *(_QWORD *)(v11 + 40) = v12 | 0x1000000000000000;
  *(_BYTE *)(v11 + 48) = 0;
  *(_QWORD *)(v2 + 96) = v11 | 0x7000000000000000;
  *(_BYTE *)(v2 + 104) = 0;
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_20A5C1800;
  *(_QWORD *)(v13 + 32) = 0xE400000000000000;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = &unk_24C314570;
  *(_QWORD *)(v13 + 40) = v14 | 0x1000000000000000;
  *(_BYTE *)(v13 + 48) = 0;
  *(_QWORD *)(v2 + 112) = v13 | 0x7000000000000000;
  *(_BYTE *)(v2 + 120) = 0;
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_20A5C1810;
  *(_QWORD *)(v15 + 32) = 0xE400000000000000;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = &unk_24C3145B0;
  *(_QWORD *)(v15 + 40) = v16 | 0x1000000000000000;
  *(_BYTE *)(v15 + 48) = 0;
  *(_QWORD *)(v2 + 128) = v15 | 0x7000000000000000;
  *(_BYTE *)(v2 + 136) = 0;
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_20A5C1820;
  *(_QWORD *)(v17 + 32) = 0xE400000000000000;
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = &unk_24C3145F0;
  *(_QWORD *)(v17 + 40) = v18 | 0x1000000000000000;
  *(_BYTE *)(v17 + 48) = 0;
  *(_QWORD *)(v2 + 144) = v17 | 0x7000000000000000;
  *(_BYTE *)(v2 + 152) = 0;
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_20A5C1830;
  *(_QWORD *)(v19 + 32) = 0xE400000000000000;
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = &unk_24C314630;
  *(_QWORD *)(v19 + 40) = v20 | 0x1000000000000000;
  *(_BYTE *)(v19 + 48) = 0;
  *(_QWORD *)(v2 + 160) = v19 | 0x7000000000000000;
  *(_BYTE *)(v2 + 168) = 0;
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_20A5C1840;
  *(_QWORD *)(v21 + 32) = 0xE400000000000000;
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = &unk_24C314670;
  *(_QWORD *)(v21 + 40) = v22 | 0x1000000000000000;
  *(_BYTE *)(v21 + 48) = 0;
  *(_QWORD *)(v2 + 176) = v21 | 0x7000000000000000;
  *(_BYTE *)(v2 + 184) = 0;
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_20A5C1850;
  *(_QWORD *)(v23 + 32) = 0xE400000000000000;
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = &unk_24C3146B0;
  *(_QWORD *)(v23 + 40) = v24 | 0x1000000000000000;
  *(_BYTE *)(v23 + 48) = 0;
  *(_QWORD *)(v2 + 192) = v23 | 0x7000000000000000;
  *(_BYTE *)(v2 + 200) = 0;
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_20A5C1860;
  *(_QWORD *)(v25 + 32) = 0xE400000000000000;
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = &unk_24C314430;
  *(_QWORD *)(v25 + 40) = v26 | 0x1000000000000000;
  *(_BYTE *)(v25 + 48) = 0;
  *(_QWORD *)(v2 + 208) = v25 | 0x7000000000000000;
  *(_BYTE *)(v2 + 216) = 0;
  v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_20A5C1870;
  *(_QWORD *)(v27 + 32) = 0xE400000000000000;
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = &unk_24C314470;
  *(_QWORD *)(v27 + 40) = v28 | 0x1000000000000000;
  *(_BYTE *)(v27 + 48) = 0;
  *(_QWORD *)(v2 + 224) = v27 | 0x7000000000000000;
  *(_BYTE *)(v2 + 232) = 0;
  *(_QWORD *)(v2 + 240) = 0x8000000000000030;
  *(_BYTE *)(v2 + 248) = 0;
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v0 + 16) = v1 | 0x3000000000000000;
  *(_BYTE *)(v0 + 24) = 0;
  return v0;
}

uint64_t sub_20A4B9D44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA808);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_20A5BA9B0;
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_20A5C1880;
  *(_QWORD *)(v2 + 32) = 0xE90000000000006ELL;
  *(_QWORD *)(v2 + 40) = 0x8000000000000008;
  *(_BYTE *)(v2 + 48) = 0;
  *(_QWORD *)(v1 + 32) = v2 | 0x6000000000000000;
  *(_BYTE *)(v1 + 40) = 0;
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_20A5C1890;
  *(_QWORD *)(v3 + 32) = 0x800000020A5E0490;
  *(_QWORD *)(v3 + 40) = 0x8000000000000000;
  *(_BYTE *)(v3 + 48) = 0;
  *(_QWORD *)(v1 + 48) = v3 | 0x6000000000000000;
  *(_BYTE *)(v1 + 56) = 1;
  *(_QWORD *)(v0 + 16) = v1;
  return v0 | 0x1000000000000000;
}

_QWORD *sub_20A4B9E40(void *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  unint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  _BYTE *v27;
  uint64_t v29;
  void *v30;
  unint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  uint64_t v43;
  unint64_t v44;
  _QWORD v45[4];
  uint64_t v46;
  unint64_t v47;
  __int128 v48;
  uint64_t v49[4];
  char v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  _QWORD v61[5];

  v61[4] = *MEMORY[0x24BDAC8D0];
  v4 = sub_20A5B8954();
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = 0;
  v8 = SecCertificateCopyExtensionValue();
  if (v8)
  {
    v9 = (void *)v8;
    v48 = xmmword_20A5BCDB0;
    v57 = xmmword_20A5BCDB0;
    sub_20A5B8558();

    v10 = *((_QWORD *)&v57 + 1);
    if (*((_QWORD *)&v57 + 1) >> 60 != 15)
    {
      v12 = v57;
      sub_20A45964C(v57, *((unint64_t *)&v57 + 1));
      sub_20A4B96A4(v12, v10);
      v14 = v13;
      sub_20A44CFC4(v12, v10);
      v15 = (2 * *(_QWORD *)(v14 + 16)) | 1;
      v49[0] = v14;
      v49[1] = v14 + 32;
      v49[2] = 0;
      v49[3] = v15;
      v2 = (_QWORD *)sub_20A4B980C();
      sub_20A4677B8(v49, (uint64_t)v2, v16 & 1, v17, (unint64_t)&v57);
      if (v1)
      {
        sub_20A44CFC4(v12, v10);
        sub_20A4BAB34((unint64_t)v2);

LABEL_20:
        swift_unknownObjectRelease();
        return v2;
      }
      sub_20A4BAB34((unint64_t)v2);
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA7E8);
      if ((swift_dynamicCast() & 1) == 0)
      {
        sub_20A4BAAF0();
        swift_allocError();
        *v27 = 2;
        swift_willThrow();

        sub_20A44CFC4(v12, v10);
        goto LABEL_20;
      }
      v45[1] = v18;
      v19 = *(_QWORD *)(v51 + 16);
      v47 = v10;
      v46 = v12;
      if (v19)
      {
        v45[3] = v7;
        v20 = v51 + 32;
        v45[2] = v51;
        swift_bridgeObjectRetain();
        v2 = (_QWORD *)MEMORY[0x24BEE4AF8];
        do
        {
          sub_20A44FD78(v20, (uint64_t)v61);
          sub_20A44FD78((uint64_t)v61, (uint64_t)&v51);
          if ((swift_dynamicCast() & 1) == 0)
          {
            v60 = 0;
            v58 = 0u;
            v59 = 0u;
            v57 = 0u;
          }
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
          if ((_QWORD)v58)
          {
            v51 = v57;
            v52 = v58;
            v53 = v59;
            v54 = v60;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v2 = sub_20A4703E0(0, v2[2] + 1, 1, v2);
            v22 = v2[2];
            v21 = v2[3];
            if (v22 >= v21 >> 1)
              v2 = sub_20A4703E0((_QWORD *)(v21 > 1), v22 + 1, 1, v2);
            v2[2] = v22 + 1;
            v23 = &v2[7 * v22];
            v24 = v51;
            v25 = v52;
            v26 = v53;
            v23[10] = v54;
            *((_OWORD *)v23 + 3) = v25;
            *((_OWORD *)v23 + 4) = v26;
            *((_OWORD *)v23 + 2) = v24;
          }
          else
          {
            sub_20A44CE2C((uint64_t)&v57, &qword_2545FA7E0);
          }
          v20 += 32;
          --v19;
        }
        while (v19);
        swift_bridgeObjectRelease_n();
        v10 = v47;
        v12 = v46;
      }
      else
      {
        swift_bridgeObjectRelease();
        v2 = (_QWORD *)MEMORY[0x24BEE4AF8];
      }
      swift_bridgeObjectRetain();
      v29 = SecCertificateCopyExtensionValue();
      if (!v29
        || (v30 = (void *)v29,
            v57 = v48,
            sub_20A5B8558(),
            v30,
            v31 = *((_QWORD *)&v57 + 1),
            *((_QWORD *)&v57 + 1) >> 60 == 15))
      {
        swift_bridgeObjectRelease();
        sub_20A4BAAF0();
        swift_allocError();
        *v32 = 1;
        swift_willThrow();

        sub_20A44CFC4(v12, v10);
LABEL_31:
        swift_bridgeObjectRelease();
        goto LABEL_20;
      }
      v33 = v57;
      sub_20A45964C(v57, *((unint64_t *)&v57 + 1));
      sub_20A4B96A4(v33, v31);
      v35 = v34;
      sub_20A44CFC4(v33, v31);
      v36 = (2 * *(_QWORD *)(v35 + 16)) | 1;
      *(_QWORD *)&v51 = v35;
      *((_QWORD *)&v51 + 1) = v35 + 32;
      *(_QWORD *)&v52 = 0;
      *((_QWORD *)&v52 + 1) = v36;
      v37 = sub_20A4B9D44();
      sub_20A4677B8((uint64_t *)&v51, v37, v38 & 1, v39, (unint64_t)&v57);
      sub_20A4BAB34(v37);
      if ((swift_dynamicCast() & 1) == 0)
      {
        swift_bridgeObjectRelease();
        sub_20A4BAAF0();
        swift_allocError();
        *v42 = 2;
        swift_willThrow();

        sub_20A44CFC4(v33, v31);
        sub_20A44CFC4(v46, v47);
        swift_unknownObjectRelease();
        goto LABEL_31;
      }
      *(_QWORD *)&v48 = v33;
      v40 = v47;
      v41 = v46;
      if (*(_QWORD *)(v61[0] + 16))
      {
        sub_20A44FD78(v61[0] + 32, (uint64_t)&v55);
      }
      else
      {
        v55 = 0u;
        v56 = 0u;
      }
      swift_bridgeObjectRelease();
      if (*((_QWORD *)&v56 + 1))
      {
        if ((swift_dynamicCast() & 1) != 0)
        {
          if ((_QWORD)v58)
          {
            sub_20A44FD78((uint64_t)&v58 + 8, (uint64_t)v61);
            sub_20A4BAB64((uint64_t)&v57);
            __swift_instantiateConcreteTypeFromMangledName(&qword_253EB4820);
            if ((swift_dynamicCast() & 1) != 0)
            {
              sub_20A5B8948();
              sub_20A4BAAA4();
              sub_20A5B8924();
              sub_20A44CFC4(v46, v47);
              sub_20A44CFC4(v48, v31);
              swift_bridgeObjectRelease();

LABEL_42:
              swift_unknownObjectRelease();
              swift_bridgeObjectRelease();
              swift_unknownObjectRelease();
              return v2;
            }
            v43 = v46;
            v44 = v47;
LABEL_41:
            sub_20A44CFC4(v43, v44);
            sub_20A44CFC4(v48, v31);

            goto LABEL_42;
          }
        }
        else
        {
          v60 = 0;
          v58 = 0u;
          v59 = 0u;
          v57 = 0u;
        }
      }
      else
      {
        sub_20A44CE2C((uint64_t)&v55, &qword_253EB52E0);
        v57 = 0u;
        v58 = 0u;
        v59 = 0u;
        v60 = 0;
      }
      sub_20A44CE2C((uint64_t)&v57, &qword_2545FA800);
      v43 = v41;
      v44 = v40;
      goto LABEL_41;
    }
  }
  sub_20A4BAAF0();
  swift_allocError();
  *v11 = 0;
  swift_willThrow();

  return v2;
}

uint64_t sub_20A4BA630(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  _BYTE v22[32];
  __int128 v23;
  __int128 v24;

  v6 = sub_20A5B8954();
  MEMORY[0x24BDAC7A8](v6, v7);
  v8 = *(_QWORD *)(a3 + 16);
  if (!v8)
  {
    swift_bridgeObjectRetain();
LABEL_15:
    v21 = 0;
    v19 = 0u;
    v20 = 0u;
    v18 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  v9 = a3 + 32;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_20A4BAA34(v9, (uint64_t)&v14);
    v10 = *((_QWORD *)&v14 + 1) == a1 && (_QWORD)v15 == a2;
    if (v10 || (sub_20A5B91AC() & 1) != 0)
      break;
    sub_20A4BAA70((uint64_t)&v14);
    v9 += 56;
    if (!--v8)
      goto LABEL_15;
  }
  v18 = v14;
  v19 = v15;
  v20 = v16;
  v21 = v17;
  swift_bridgeObjectRelease();
  if (!(_QWORD)v19)
  {
LABEL_16:
    sub_20A44CE2C((uint64_t)&v18, &qword_2545FA7E0);
    goto LABEL_17;
  }
  sub_20A44FD78((uint64_t)&v19 + 8, (uint64_t)v22);
  sub_20A4BAA70((uint64_t)&v18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA7E8);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_17:
    v23 = 0u;
    v24 = 0u;
LABEL_18:
    sub_20A44CE2C((uint64_t)&v23, &qword_253EB52E0);
    return 0;
  }
  v11 = *(_QWORD *)(v18 + 16);
  if (v11)
  {
    sub_20A44FD78(v18 + 32 * v11, (uint64_t)&v23);
  }
  else
  {
    v23 = 0u;
    v24 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v24 + 1))
    goto LABEL_18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB4820);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_20A5B8948();
    sub_20A4BAAA4();
    v12 = sub_20A5B8924();
    swift_bridgeObjectRelease();
    return v12;
  }
  return 0;
}

uint64_t sub_20A4BA870(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  _BYTE v18[32];

  v3 = *(_QWORD *)(a3 + 16);
  if (!v3)
  {
    swift_bridgeObjectRetain();
LABEL_15:
    v17 = 0;
    v15 = 0u;
    v16 = 0u;
    v14 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  v6 = a3 + 32;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_20A4BAA34(v6, (uint64_t)&v10);
    v7 = *((_QWORD *)&v10 + 1) == a1 && (_QWORD)v11 == a2;
    if (v7 || (sub_20A5B91AC() & 1) != 0)
      break;
    sub_20A4BAA70((uint64_t)&v10);
    v6 += 56;
    if (!--v3)
      goto LABEL_15;
  }
  v14 = v10;
  v15 = v11;
  v16 = v12;
  v17 = v13;
  swift_bridgeObjectRelease();
  if (!(_QWORD)v15)
  {
LABEL_16:
    sub_20A44CE2C((uint64_t)&v14, &qword_2545FA7E0);
    goto LABEL_17;
  }
  sub_20A44FD78((uint64_t)&v15 + 8, (uint64_t)v18);
  sub_20A4BAA70((uint64_t)&v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA7E8);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_17:
    v14 = 0u;
    v15 = 0u;
LABEL_18:
    sub_20A44CE2C((uint64_t)&v14, &qword_253EB52E0);
    return 0;
  }
  v8 = *(_QWORD *)(v14 + 16);
  if (v8)
  {
    sub_20A44FD78(v14 + 32 * v8, (uint64_t)&v14);
  }
  else
  {
    v14 = 0u;
    v15 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v15 + 1))
    goto LABEL_18;
  if (swift_dynamicCast())
    return v10;
  else
    return 0;
}

uint64_t sub_20A4BAA34(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for CoreODIASN1ApplicationType(a2, a1);
  return a2;
}

uint64_t sub_20A4BAA70(uint64_t a1)
{
  destroy for CoreODIASN1ApplicationType();
  return a1;
}

unint64_t sub_20A4BAAA4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2545FA7F0;
  if (!qword_2545FA7F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253EB4820);
    result = MEMORY[0x20BD26CEC](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_2545FA7F0);
  }
  return result;
}

unint64_t sub_20A4BAAF0()
{
  unint64_t result;

  result = qword_2545FA7F8;
  if (!qword_2545FA7F8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C1980, &type metadata for BAADeviceDataExtractor.BAADeviceDataExtractorError);
    atomic_store(result, (unint64_t *)&qword_2545FA7F8);
  }
  return result;
}

unint64_t sub_20A4BAB34(unint64_t result)
{
  switch(result >> 60)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
      result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20A4BAB64(uint64_t a1)
{
  destroy for CoreODIASN1ContextType(a1);
  return a1;
}

uint64_t sub_20A4BAB98()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_20A4BABBC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_20A4BAB34(*(_QWORD *)(v0 + 40));
  return swift_deallocObject();
}

uint64_t sub_20A4BABE8()
{
  uint64_t v0;

  sub_20A4BAB34(*(_QWORD *)(v0 + 16));
  return swift_deallocObject();
}

uint64_t storeEnumTagSinglePayload for BAADeviceDataExtractor.BAADeviceDataExtractorError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_20A4BAC58 + 4 * byte_20A5C18AD[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_20A4BAC8C + 4 * byte_20A5C18A8[v4]))();
}

uint64_t sub_20A4BAC8C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A4BAC94(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A4BAC9CLL);
  return result;
}

uint64_t sub_20A4BACA8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A4BACB0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_20A4BACB4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A4BACBC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BAADeviceDataExtractor.BAADeviceDataExtractorError()
{
  return &type metadata for BAADeviceDataExtractor.BAADeviceDataExtractorError;
}

unint64_t sub_20A4BACDC()
{
  unint64_t result;

  result = qword_2545FA810;
  if (!qword_2545FA810)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C1958, &type metadata for BAADeviceDataExtractor.BAADeviceDataExtractorError);
    atomic_store(result, (unint64_t *)&qword_2545FA810);
  }
  return result;
}

uint64_t static ODIDeviceInfo.shared.getter()
{
  return swift_task_switch();
}

uint64_t sub_20A4BAD34()
{
  uint64_t v0;

  if (qword_253EB4EB8 != -1)
    swift_once();
  *(_QWORD *)(v0 + 16) = qword_253EB4EB0;
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_20A4BADA4()
{
  uint64_t v0;
  _QWORD *v2;

  if ((*(_BYTE *)(*(_QWORD *)(v0 + 16) + 168) & 1) != 0)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v2;
  *v2 = v0;
  v2[1] = sub_20A4BAE20;
  v2[23] = *(_QWORD *)(v0 + 16);
  return swift_task_switch();
}

uint64_t sub_20A4BAE20()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *v0;
  v3 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v3 + 8))(*(_QWORD *)(v1 + 16));
}

BOOL static ODIDeviceInfo.isDeviceLocked()()
{
  return MKBGetDeviceLockState() - 1 < 2;
}

uint64_t sub_20A4BAE8C(uint64_t (*a1)(void **, void **))
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  char isUniquelyReferenced_nonNull_native;

  v2 = v1;
  v4 = *v1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v2 = v4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_20A4C0B30();
  sub_20A4BFB04(a1);
  return sub_20A5B8F18();
}

uint64_t sub_20A4BAF20()
{
  uint64_t result;

  type metadata accessor for ODIDeviceInfo();
  swift_allocObject();
  result = sub_20A4BB74C();
  qword_253EB4EB0 = result;
  return result;
}

uint64_t sub_20A4BAF58@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  if (*(_QWORD *)(v1 + 192))
  {
    v3 = *(_QWORD *)(v1 + 184);
    v4 = *(_QWORD *)(v1 + 192);
  }
  else
  {
    *(_OWORD *)(v1 + 184) = xmmword_20A5C19C0;
    swift_bridgeObjectRelease();
    v4 = 0xE100000000000000;
    v3 = 45;
  }
  *a1 = v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

id sub_20A4BAFD4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ODIDeviceInfo.DeviceInfoHelper();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_20A4BB018()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[17] = v0;
  v2 = sub_20A5B866C();
  v1[18] = v2;
  v1[19] = *(_QWORD *)(v2 - 8);
  v1[20] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A4BB0A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  _QWORD *v11;
  id v12;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v1 + 224);
  *(_QWORD *)(v0 + 168) = v2;
  if (v2)
  {
    swift_bridgeObjectRetain();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v2);
  }
  else
  {
    v4 = *(void **)(v1 + 128);
    *(_QWORD *)(v0 + 120) = 0;
    v5 = objc_msgSend(v4, sel_getUserDefaultVoiceSubscriptionContext_, v0 + 120);
    v6 = *(void **)(v0 + 120);
    if (v5)
    {
      v7 = v5;
      v8 = v6;
      v9 = objc_msgSend(v7, sel_uuid);

      sub_20A5B8654();
      *(_QWORD *)(v0 + 56) = v0 + 128;
      *(_QWORD *)(v0 + 16) = v0;
      *(_QWORD *)(v0 + 24) = sub_20A4BB2A8;
      v10 = swift_continuation_init();
      *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
      v11 = (_QWORD *)(v0 + 80);
      v11[1] = 0x40000000;
      v11[2] = sub_20A498E4C;
      v11[3] = &block_descriptor_18;
      v11[4] = v10;
      objc_msgSend(v4, sel_getSubscriptionInfo_, v11);
      return swift_continuation_await();
    }
    else
    {
      v12 = v6;
      sub_20A5B8420();

      swift_willThrow();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
  }
}

uint64_t sub_20A4BB2A8()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 176) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_20A4BB34C()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;
  uint64_t v15[2];
  uint64_t v16;
  uint64_t v17;
  char v18[9];
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v1 = *(void **)(v0 + 128);
  v2 = objc_msgSend(v1, sel_subscriptionsInUse);

  v3 = *(_QWORD *)(v0 + 160);
  if (v2)
  {
    sub_20A459574(0, &qword_253EB51D0);
    v4 = sub_20A5B8AA4();

    v5 = sub_20A4BB610(v4);
    swift_bridgeObjectRelease();
    *(_QWORD *)(swift_task_alloc() + 16) = v3;
    if (v5 < 0 || (v5 & 0x4000000000000000) != 0)
    {
      v14 = swift_bridgeObjectRetain();
      v6 = (uint64_t)sub_20A57BDBC(v14);
      swift_bridgeObjectRelease();
    }
    else
    {
      v6 = v5 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
    }
    v16 = v6;
    sub_20A4BAE8C(sub_20A4C0F70);
    v10 = *(_QWORD *)(v0 + 152);
    v9 = *(_QWORD *)(v0 + 160);
    v12 = *(_QWORD *)(v0 + 136);
    v11 = *(_QWORD *)(v0 + 144);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    *(_QWORD *)(v12 + 224) = v6;
    swift_retain();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 144);
    v8 = *(_QWORD *)(v0 + 152);
    sub_20A4BAF58(v15);
    v16 = v15[0];
    v17 = v15[1];
    v18[0] = 5;
    CoreODILogger.debug(_:category:)(0xD00000000000001ALL, 0x800000020A5E0860, v18);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v3, v7);
    v6 = 0;
  }
  swift_bridgeObjectRetain();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v6);
}

uint64_t sub_20A4BB580()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 152);
  v1 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 144);
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4BB610(unint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t i;
  id v5;
  void *v6;
  uint64_t v7;

  v7 = MEMORY[0x24BEE4AF8];
  if (!(a1 >> 62))
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v2)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRetain();
  result = sub_20A5B8FCC();
  v2 = result;
  if (!result)
    goto LABEL_14;
LABEL_3:
  if (v2 < 1)
  {
    __break(1u);
  }
  else
  {
    for (i = 0; i != v2; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v5 = (id)MEMORY[0x20BD25F48](i, a1);
      else
        v5 = *(id *)(a1 + 8 * i + 32);
      v6 = v5;
      if ((objc_msgSend(v5, sel_isSimHidden) & 1) != 0)
      {

      }
      else
      {
        sub_20A5B8F0C();
        sub_20A5B8F30();
        sub_20A5B8F3C();
        sub_20A5B8F18();
      }
    }
    swift_bridgeObjectRelease();
    return v7;
  }
  return result;
}

uint64_t sub_20A4BB74C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v15;

  v1 = v0;
  v2 = sub_20A5B8C9C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_20A5B8840();
  MEMORY[0x24BDAC7A8](v7, v8);
  v9 = sub_20A5B8C90();
  MEMORY[0x24BDAC7A8](v9, v10);
  swift_defaultActor_initialize();
  sub_20A459574(0, qword_253EB51B0);
  sub_20A5B8C84();
  sub_20A5B8834();
  v11 = *MEMORY[0x24BEE5750];
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
  v12(v6, v11, v2);
  *(_QWORD *)(v0 + 112) = sub_20A5B8CC0();
  sub_20A5B8C84();
  sub_20A5B8834();
  v12(v6, v11, v2);
  v13 = sub_20A5B8CC0();
  *(_QWORD *)(v1 + 120) = v13;
  *(_OWORD *)(v1 + 136) = 0u;
  *(_OWORD *)(v1 + 152) = 0u;
  *(_BYTE *)(v1 + 168) = 0;
  *(_OWORD *)(v1 + 176) = 0u;
  *(_OWORD *)(v1 + 192) = 0u;
  *(_OWORD *)(v1 + 208) = 0u;
  *(_QWORD *)(v1 + 224) = 0;
  *(_QWORD *)(v1 + 128) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDC2810]), sel_initWithQueue_, v13);
  return v1;
}

uint64_t sub_20A4BB948(void **a1, void **a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA930);
  MEMORY[0x24BDAC7A8](v4, v5);
  v29 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_20A5B866C();
  v8 = *(_QWORD *)(v7 - 8);
  v10 = MEMORY[0x24BDAC7A8](v7, v9);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10, v13);
  v15 = (char *)&v28 - v14;
  v16 = *a1;
  v17 = *a2;
  v18 = objc_msgSend(v16, sel_uuid);
  sub_20A5B8654();

  v19 = objc_msgSend(v17, sel_uuid);
  sub_20A5B8654();

  v20 = sub_20A5B8648();
  if (((v20 ^ sub_20A5B8648()) & 1) == 0)
  {
    v20 = objc_msgSend(v16, sel_slotID) == (id)1;
    if (v20 != (objc_msgSend(v17, sel_slotID) != (id)1))
    {
      v32 = sub_20A5B863C();
      v33 = v21;
      v30 = sub_20A5B863C();
      v31 = v22;
      v23 = sub_20A5B8708();
      v24 = (uint64_t)v29;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v29, 1, 1, v23);
      sub_20A49DBC0();
      v25 = sub_20A5B8D8C();
      sub_20A44CE2C(v24, &qword_2545FA930);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      LOBYTE(v20) = v25 == -1;
    }
  }
  v26 = *(void (**)(char *, uint64_t))(v8 + 8);
  v26(v12, v7);
  v26(v15, v7);
  return v20 & 1;
}

_QWORD *sub_20A4BBB9C(char a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;

  v3 = *(_QWORD *)(v1 + 200);
  if (!v3 || (v26 = *(_QWORD *)(v3 + 16)) == 0)
  {
    sub_20A4BAF58(&v30);
    v28 = v30;
    v29 = v31;
    LOBYTE(v27[0]) = 5;
    v8 = 0x800000020A5E04B0;
    v9 = 0xD00000000000001ALL;
LABEL_8:
    CoreODILogger.info(_:category:)(v9, v8, v27);
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a1 & 1) != 0)
  {
    v3 = *(_QWORD *)(v1 + 216);
    if (v3)
    {
      v4 = *(_QWORD *)(v1 + 208);
      swift_bridgeObjectRetain();
      v5 = sub_20A46FE9C(0, 1, 1, MEMORY[0x24BEE4AF8]);
      v2 = v5[2];
      v6 = v5[3];
      v1 = v2 + 1;
      if (v2 >= v6 >> 1)
        goto LABEL_49;
      goto LABEL_6;
    }
    sub_20A4BAF58(&v30);
    v28 = v30;
    v29 = v31;
    LOBYTE(v27[0]) = 5;
    v9 = 0xD000000000000022;
    v8 = 0x800000020A5E04D0;
    goto LABEL_8;
  }
  v10 = v3 + 32;
  swift_bridgeObjectRetain();
  v11 = 0;
  v5 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v4 = MEMORY[0x24BEE0D00];
  while (1)
  {
    v6 = *(_QWORD *)(v3 + 16);
    if (v11 >= v6)
    {
      __break(1u);
      goto LABEL_48;
    }
    v12 = (uint64_t *)(v10 + 16 * v11);
    v2 = v12[1];
    v30 = *v12;
    v13 = v30;
    v31 = v2;
    v27[1] = 0xE000000000000000;
    v28 = 48;
    v29 = 0xE100000000000000;
    v27[0] = 0;
    sub_20A49DBC0();
    swift_bridgeObjectRetain();
    v14 = sub_20A5B8D74();
    v1 = v15;
    if ((v30 || v2 != 0xE000000000000000) && (sub_20A5B91AC() & 1) == 0)
      break;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_11:
    if (++v11 == v26)
    {
      swift_bridgeObjectRelease();
      return v5;
    }
  }
  v16 = v5[2];
  if (!v16)
    goto LABEL_21;
  if (v5[4] == v30 && v5[5] == v2 || (sub_20A5B91AC() & 1) != 0)
    goto LABEL_32;
  if (v16 == 1)
    goto LABEL_21;
  if (v5[6] == v30 && v5[7] == v2 || (sub_20A5B91AC() & 1) != 0)
  {
LABEL_32:
    swift_bridgeObjectRelease();
LABEL_33:
    swift_bridgeObjectRelease();
    v10 = v3 + 32;
    goto LABEL_11;
  }
  if (v16 == 2)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    v17 = HIBYTE(v1) & 0xF;
    if ((v1 & 0x2000000000000000) == 0)
      v17 = v14 & 0xFFFFFFFFFFFFLL;
    if (v17)
    {
      v10 = v3 + 32;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v5 = sub_20A46FE9C(0, v5[2] + 1, 1, v5);
      v19 = v5[2];
      v18 = v5[3];
      v1 = v19 + 1;
      if (v19 >= v18 >> 1)
        v5 = sub_20A46FE9C((_QWORD *)(v18 > 1), v19 + 1, 1, v5);
      v5[2] = v1;
      v20 = &v5[2 * v19];
      v20[4] = v13;
      v20[5] = v2;
      goto LABEL_11;
    }
    goto LABEL_33;
  }
  v21 = v5 + 9;
  v6 = 2;
  while (!__OFADD__(v6, 1))
  {
    if (*(v21 - 1) == v30 && *v21 == v2)
      goto LABEL_32;
    v24 = v6 + 1;
    v25 = v6;
    if ((sub_20A5B91AC() & 1) != 0)
      goto LABEL_32;
    v21 += 2;
    v6 = v25 + 1;
    if (v24 == v16)
      goto LABEL_21;
  }
LABEL_48:
  __break(1u);
LABEL_49:
  v5 = sub_20A46FE9C((_QWORD *)(v6 > 1), v1, 1, v5);
LABEL_6:
  v5[2] = v1;
  v7 = &v5[2 * v2];
  v7[4] = v4;
  v7[5] = v3;
  return v5;
}

uint64_t sub_20A4BBF60()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 184) = v0;
  return swift_task_switch();
}

uint64_t sub_20A4BBFC4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  _QWORD *v6;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11[2];
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  v1 = *(_QWORD *)(v0 + 184);
  sub_20A4BAF58((uint64_t *)&v12);
  v14 = v12;
  v15 = v13;
  LOBYTE(v11[0]) = 5;
  CoreODILogger.debug(_:category:)(0xD000000000000013, 0x800000020A5E09B0, v11);
  swift_bridgeObjectRelease();
  v2 = *(void **)(v1 + 128);
  *(_QWORD *)(v0 + 192) = v2;
  objc_msgSend(v2, sel_setDelegate_, v1);
  *(_QWORD *)(v0 + 160) = 0;
  v3 = objc_msgSend(v2, sel_getUserDefaultVoiceSubscriptionContext_, v0 + 160);
  *(_QWORD *)(v0 + 200) = v3;
  v4 = *(void **)(v0 + 160);
  if (v3)
  {
    v5 = v4;
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 208) = v6;
    *v6 = v0;
    v6[1] = sub_20A4BC218;
    return sub_20A4BB018();
  }
  else
  {
    v8 = v4;
    v9 = (void *)sub_20A5B8420();

    swift_willThrow();
    sub_20A4BAF58(v11);
    v12 = v11[0];
    v13 = v11[1];
    v14 = 0;
    v15 = 0xE000000000000000;
    sub_20A5B8E94();
    swift_bridgeObjectRelease();
    v14 = 0xD00000000000001FLL;
    v15 = 0x800000020A5E09D0;
    swift_getErrorValue();
    sub_20A5B923C();
    sub_20A5B899C();

    swift_bridgeObjectRelease();
    v10 = v14;
    LOBYTE(v14) = 5;
    CoreODILogger.debug(_:category:)(v10, v15, &v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_BYTE *)(*(_QWORD *)(v0 + 184) + 168) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_20A4BC218(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 216) = a1;
  *(_QWORD *)(v3 + 224) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A4BC2D0()
{
  uint64_t v0;
  unint64_t v1;
  _QWORD *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15[2];
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;

  v20 = *MEMORY[0x24BDAC8D0];
  v1 = *(_QWORD *)(v0 + 216);
  v2 = *(_QWORD **)(v0 + 184);
  if (!v1)
  {
    v7 = *(void **)(v0 + 200);
    sub_20A4BAF58((uint64_t *)&v16);
    v18 = v16;
    v19 = v17;
    LOBYTE(v15[0]) = 14;
    CoreODILogger.debug(_:category:)(0xD00000000000001ALL, 0x800000020A5E0860, v15);

    goto LABEL_5;
  }
  v3 = *(void **)(v0 + 224);
  swift_retain();
  v4 = sub_20A4C0D48(v1, v2);
  if (v3)
  {
    v5 = *(void **)(v0 + 200);
    swift_release();

    swift_bridgeObjectRelease();
    sub_20A4BAF58(v15);
    v16 = v15[0];
    v17 = v15[1];
    v18 = 0;
    v19 = 0xE000000000000000;
    sub_20A5B8E94();
    swift_bridgeObjectRelease();
    v18 = 0xD00000000000001FLL;
    v19 = 0x800000020A5E09D0;
    swift_getErrorValue();
    sub_20A5B923C();
    sub_20A5B899C();

    swift_bridgeObjectRelease();
    v6 = v18;
    LOBYTE(v18) = 5;
    CoreODILogger.debug(_:category:)(v6, v19, &v18);
    swift_bridgeObjectRelease();
LABEL_5:
    swift_bridgeObjectRelease();
    *(_BYTE *)(*(_QWORD *)(v0 + 184) + 168) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v9 = v4;
  v11 = *(void **)(v0 + 192);
  v10 = *(_QWORD *)(v0 + 200);
  v12 = *(_QWORD *)(v0 + 184);
  swift_release();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 200) = v9;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 56) = v0 + 144;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_20A4BC558;
  v13 = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
  v14 = (_QWORD *)(v0 + 80);
  v14[1] = 0x40000000;
  v14[2] = sub_20A4BC95C;
  v14[3] = &block_descriptor_24;
  v14[4] = v13;
  objc_msgSend(v11, sel_getPhoneNumberWithCompletion_completion_, v10, v14);
  return swift_continuation_await();
}

uint64_t sub_20A4BC558()
{
  return swift_task_switch();
}

uint64_t sub_20A4BC5D0()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v21[2];
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  v1 = *(_QWORD **)(v0 + 184);
  v2 = *(void **)(v0 + 152);
  v3 = *(id *)(v0 + 144);
  v4 = objc_msgSend(v3, sel_number);
  v5 = sub_20A5B8900();
  v7 = v6;

  v1[26] = v5;
  v1[27] = v7;
  swift_bridgeObjectRelease();
  v9 = v1[26];
  v8 = v1[27];
  v10 = (_QWORD *)v1[25];
  if (v10 && v10[2])
  {
    v12 = v10[4];
    v11 = v10[5];
    swift_bridgeObjectRetain();
  }
  else
  {
    v12 = 0;
    v11 = 0;
  }
  if (!v8)
  {
    if (!v11)
      goto LABEL_17;
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  if (!v11)
    goto LABEL_15;
  if (v9 == v12 && v8 == v11)
    goto LABEL_16;
  v14 = sub_20A5B91AC();
  swift_bridgeObjectRelease();
  if ((v14 & 1) == 0)
  {
LABEL_15:
    sub_20A4BAF58((uint64_t *)&v22);
    v24 = v22;
    v25 = v23;
    LOBYTE(v21[0]) = 5;
    CoreODILogger.info(_:category:)(0xD000000000000033, 0x800000020A5E0A20, v21);
LABEL_16:
    swift_bridgeObjectRelease();
  }
LABEL_17:
  v15 = *(_QWORD *)(v0 + 184);
  sub_20A4BAF58(v21);
  v22 = v21[0];
  v23 = v21[1];
  v24 = 0;
  v25 = 0xE000000000000000;
  sub_20A5B8E94();
  swift_bridgeObjectRelease();
  v24 = 0xD000000000000021;
  v25 = 0x800000020A5E0A60;
  v16 = *(_QWORD *)(v15 + 200);
  if (v16)
    v17 = *(_QWORD *)(v16 + 16);
  else
    v17 = -1;
  v18 = *(void **)(v0 + 200);
  *(_QWORD *)(v0 + 176) = v17;
  sub_20A5B9170();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  v19 = v24;
  LOBYTE(v24) = 5;
  CoreODILogger.debug(_:category:)(v19, v25, &v24);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_BYTE *)(*(_QWORD *)(v0 + 184) + 168) = 1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4BC828()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v4[4];
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];

  v1 = *(void **)(v0 + 224);
  sub_20A4BAF58(v4);
  v4[2] = v4[0];
  v4[3] = v4[1];
  v5 = 0;
  v6 = 0xE000000000000000;
  sub_20A5B8E94();
  swift_bridgeObjectRelease();
  v5 = 0xD00000000000001FLL;
  v6 = 0x800000020A5E09D0;
  swift_getErrorValue();
  sub_20A5B923C();
  sub_20A5B899C();

  swift_bridgeObjectRelease();
  v2 = v5;
  LOBYTE(v5) = 5;
  CoreODILogger.debug(_:category:)(v2, v6, &v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_BYTE *)(*(_QWORD *)(v0 + 184) + 168) = 1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4BC95C(uint64_t a1, void *a2, void *a3)
{
  _QWORD *v4;
  id v5;
  id v6;

  v4 = *(_QWORD **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 64) + 40);
  *v4 = a2;
  v4[1] = a3;
  v5 = a2;
  v6 = a3;
  return swift_continuation_resume();
}

uint64_t sub_20A4BC994()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[23] = v0;
  v2 = sub_20A5B866C();
  v1[24] = v2;
  v1[25] = *(_QWORD *)(v2 - 8);
  v1[26] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A4BCA20()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  void *v31;
  uint64_t v32;
  _QWORD *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39[2];
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;

  v44 = *MEMORY[0x24BDAC8D0];
  v1 = *(void **)(*(_QWORD *)(v0 + 184) + 128);
  *(_QWORD *)(v0 + 160) = 0;
  *(_QWORD *)(v0 + 216) = v1;
  v2 = objc_msgSend(v1, sel_getUserDefaultVoiceSubscriptionContext_, v0 + 160);
  v3 = *(void **)(v0 + 160);
  if (!v2)
  {
    v16 = v3;
    v17 = (void *)sub_20A5B8420();

    swift_willThrow();
LABEL_10:
    sub_20A4BAF58(v39);
    v40 = v39[0];
    v41 = v39[1];
    v42 = 0;
    v43 = 0xE000000000000000;
    sub_20A5B8E94();
    swift_bridgeObjectRelease();
    v42 = 0xD000000000000018;
    v43 = 0x800000020A5E08A0;
    swift_getErrorValue();
    sub_20A5B923C();
    sub_20A5B899C();
    swift_bridgeObjectRelease();
    v22 = v42;
    LOBYTE(v42) = 5;
    CoreODILogger.debug(_:category:)(v22, v43, &v42);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
LABEL_11:
    v23 = 0;
LABEL_12:
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v23);
  }
  v4 = v2;
  v5 = v3;
  v6 = objc_msgSend(v4, sel_uuid);

  sub_20A5B8654();
  *(_QWORD *)(v0 + 176) = 0;
  v7 = objc_msgSend(v1, sel_getSubscriptionInfoWithError_, v0 + 176);
  v8 = *(void **)(v0 + 176);
  if (!v7)
  {
    v19 = *(_QWORD *)(v0 + 200);
    v18 = *(_QWORD *)(v0 + 208);
    v20 = *(_QWORD *)(v0 + 192);
    v21 = v8;
    v17 = (void *)sub_20A5B8420();

    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
    goto LABEL_10;
  }
  v9 = v7;
  v10 = v8;
  v11 = objc_msgSend(v9, sel_subscriptionsInUse);

  v12 = *(_QWORD *)(v0 + 208);
  if (!v11)
  {
    v25 = *(_QWORD *)(v0 + 192);
    v26 = *(_QWORD *)(v0 + 200);
    sub_20A4BAF58((uint64_t *)&v40);
    v42 = v40;
    v43 = v41;
    LOBYTE(v39[0]) = 5;
    CoreODILogger.debug(_:category:)(0xD00000000000001ALL, 0x800000020A5E0860, v39);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v12, v25);
    goto LABEL_11;
  }
  sub_20A459574(0, &qword_253EB51D0);
  v13 = sub_20A5B8AA4();

  v14 = sub_20A4BB610(v13);
  swift_bridgeObjectRelease();
  *(_QWORD *)(swift_task_alloc() + 16) = v12;
  if (v14 < 0 || (v14 & 0x4000000000000000) != 0)
  {
    v34 = swift_bridgeObjectRetain();
    v15 = (uint64_t)sub_20A57BDBC(v34);
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = v14 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  v42 = v15;
  sub_20A4BAE8C(sub_20A4C0CE4);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 224) = v15;
  swift_task_dealloc();
  if (v15 < 0 || (v15 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    v35 = sub_20A5B8FCC();
    swift_release();
    *(_QWORD *)(v0 + 232) = v35;
    if (v35)
      goto LABEL_17;
    goto LABEL_23;
  }
  v27 = *(_QWORD *)(v15 + 16);
  *(_QWORD *)(v0 + 232) = v27;
  if (!v27)
  {
LABEL_23:
    v37 = *(_QWORD *)(v0 + 200);
    v36 = *(_QWORD *)(v0 + 208);
    v38 = *(_QWORD *)(v0 + 192);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v36, v38);
    v23 = MEMORY[0x24BEE4AF8];
    goto LABEL_12;
  }
LABEL_17:
  *(_QWORD *)(v0 + 240) = MEMORY[0x24BEE4AF8];
  v28 = *(_QWORD *)(v0 + 224);
  if ((v28 & 0xC000000000000001) != 0)
    v29 = (id)MEMORY[0x20BD25F48](0);
  else
    v29 = *(id *)(v28 + 32);
  v30 = v29;
  *(_QWORD *)(v0 + 248) = v29;
  *(_QWORD *)(v0 + 256) = 1;
  v31 = *(void **)(v0 + 216);
  *(_QWORD *)(v0 + 56) = v0 + 144;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_20A4BCF14;
  v32 = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
  v33 = (_QWORD *)(v0 + 80);
  v33[1] = 0x40000000;
  v33[2] = sub_20A4BD34C;
  v33[3] = &block_descriptor_17_0;
  v33[4] = v32;
  objc_msgSend(v31, sel_copySIMIdentity_completion_, v30, v33);
  return swift_continuation_await();
}

uint64_t sub_20A4BCF14()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 264) = v1;
  if (v1)
  {
    swift_release();
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_20A4BCFDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v4;
  unint64_t v5;
  unint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v20;
  _QWORD *v21;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v4 = *(_QWORD **)(v0 + 240);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    v4 = sub_20A46FE9C(0, v4[2] + 1, 1, *(_QWORD **)(v0 + 240));
  v6 = v4[2];
  v5 = v4[3];
  if (v6 >= v5 >> 1)
    v4 = sub_20A46FE9C((_QWORD *)(v5 > 1), v6 + 1, 1, v4);
  v7 = *(void **)(v0 + 248);
  v8 = *(_QWORD *)(v0 + 256);
  v9 = *(_QWORD *)(v0 + 232);
  v4[2] = v6 + 1;
  v10 = &v4[2 * v6];
  v10[4] = v1;
  v10[5] = v2;

  if (v8 == v9)
  {
    v12 = *(_QWORD *)(v0 + 200);
    v11 = *(_QWORD *)(v0 + 208);
    v13 = *(_QWORD *)(v0 + 192);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD *))(v0 + 8))(v4);
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 256);
    *(_QWORD *)(v0 + 240) = v4;
    v16 = *(_QWORD *)(v0 + 224);
    if ((v16 & 0xC000000000000001) != 0)
      v17 = (id)MEMORY[0x20BD25F48](v15);
    else
      v17 = *(id *)(v16 + 8 * v15 + 32);
    v18 = v17;
    *(_QWORD *)(v0 + 248) = v17;
    *(_QWORD *)(v0 + 256) = v15 + 1;
    if (__OFADD__(v15, 1))
      __break(1u);
    v19 = *(void **)(v0 + 216);
    *(_QWORD *)(v0 + 56) = v0 + 144;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_20A4BCF14;
    v20 = swift_continuation_init();
    *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
    v21 = (_QWORD *)(v0 + 80);
    v21[1] = 0x40000000;
    v21[2] = sub_20A4BD34C;
    v21[3] = &block_descriptor_17_0;
    v21[4] = v20;
    objc_msgSend(v19, sel_copySIMIdentity_completion_, v18, v21);
    return swift_continuation_await();
  }
}

uint64_t sub_20A4BD1F0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v8[4];
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v1 = *(void **)(v0 + 248);
  v3 = *(_QWORD *)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 208);
  v4 = *(_QWORD *)(v0 + 192);
  swift_willThrow();

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  v5 = *(void **)(v0 + 264);
  sub_20A4BAF58(v8);
  v8[2] = v8[0];
  v8[3] = v8[1];
  v9 = 0;
  v10 = 0xE000000000000000;
  sub_20A5B8E94();
  swift_bridgeObjectRelease();
  v9 = 0xD000000000000018;
  v10 = 0x800000020A5E08A0;
  swift_getErrorValue();
  sub_20A5B923C();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  v6 = v9;
  LOBYTE(v9) = 5;
  CoreODILogger.debug(_:category:)(v6, v10, &v9);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_20A4BD34C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  _QWORD *v5;
  id v6;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52D0);
    swift_allocError();
    *v5 = a3;
    v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    v8 = sub_20A5B8900();
    v9 = *(uint64_t **)(*(_QWORD *)(v3 + 64) + 40);
    *v9 = v8;
    v9[1] = v10;
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_20A4BD3D4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 56) = v0;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 64) = v2;
  *v2 = v1;
  v2[1] = sub_20A4BD41C;
  return sub_20A4BB018();
}

uint64_t sub_20A4BD41C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 72) = a1;
  *(_QWORD *)(v3 + 80) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A4BD488()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8[14];
  char v9;

  v1 = *(_QWORD *)(v0 + 72);
  if (v1)
  {
    v2 = *(_QWORD *)(*(_QWORD *)(v0 + 56) + 128);
    v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5130);
    sub_20A498124((unint64_t *)&qword_2545FA630, v4, (uint64_t (*)(uint64_t))type metadata accessor for ODIDeviceInfo, (uint64_t)&protocol conformance descriptor for ODIDeviceInfo);
    v5 = swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v5;
    *(_QWORD *)(v5 + 16) = v1;
    *(_QWORD *)(v5 + 24) = v2;
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 96) = v6;
    *v6 = v0;
    v6[1] = sub_20A4BD5DC;
    v8[13] = v3;
    return sub_20A5B9014();
  }
  else
  {
    sub_20A4BAF58(v8);
    v8[2] = v8[0];
    v8[3] = v8[1];
    v9 = 5;
    CoreODILogger.debug(_:category:)(0xD00000000000001ALL, 0x800000020A5E0860, &v9);
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
}

uint64_t sub_20A4BD5DC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_20A4BD65C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 48));
}

uint64_t sub_20A4BD668()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v4[4];
  unint64_t v5;
  unint64_t v6;

  v1 = *(void **)(v0 + 80);
  sub_20A4BAF58(v4);
  v4[2] = v4[0];
  v4[3] = v4[1];
  v5 = 0;
  v6 = 0xE000000000000000;
  sub_20A5B8E94();
  swift_bridgeObjectRelease();
  v5 = 0xD000000000000017;
  v6 = 0x800000020A5E0840;
  swift_getErrorValue();
  sub_20A5B923C();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  v2 = v5;
  LOBYTE(v5) = 5;
  CoreODILogger.debug(_:category:)(v2, v6, &v5);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_20A4BD760()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v4[4];
  unint64_t v5;
  unint64_t v6;

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  v1 = *(void **)(v0 + 104);
  sub_20A4BAF58(v4);
  v4[2] = v4[0];
  v4[3] = v4[1];
  v5 = 0;
  v6 = 0xE000000000000000;
  sub_20A5B8E94();
  swift_bridgeObjectRelease();
  v5 = 0xD000000000000017;
  v6 = 0x800000020A5E0840;
  swift_getErrorValue();
  sub_20A5B923C();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  v2 = v5;
  LOBYTE(v5) = 5;
  CoreODILogger.debug(_:category:)(v2, v6, &v5);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_20A4BD86C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[13] = a3;
  v4[14] = a4;
  v4[11] = a1;
  v4[12] = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA900);
  v4[15] = v5;
  v4[16] = *(_QWORD *)(v5 - 8);
  v4[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB5180);
  v4[18] = swift_task_alloc();
  v4[19] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A4BD908()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;

  v1 = *(_QWORD *)(v0 + 104);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_20A5B8FCC();
    v2 = result;
    if (result)
      goto LABEL_3;
LABEL_17:
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52D0);
    sub_20A5B8BAC();
    *(_QWORD *)(v0 + 160) = sub_20A4C0C98();
    v23 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 168) = v23;
    *v23 = v0;
    v23[1] = sub_20A4BDC0C;
    return sub_20A5B8B28();
  }
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v2)
    goto LABEL_17;
LABEL_3:
  if (v2 >= 1)
  {
    v4 = 0;
    v25 = v1 & 0xC000000000000001;
    v24 = *(_QWORD *)(v0 + 104) + 32;
    v26 = v2;
    while (1)
    {
      if (v25)
        v6 = (id)MEMORY[0x20BD25F48](v4, *(_QWORD *)(v0 + 104));
      else
        v6 = *(id *)(v24 + 8 * v4);
      v7 = v6;
      v9 = *(_QWORD *)(v0 + 144);
      v8 = *(_QWORD *)(v0 + 152);
      v10 = *(void **)(v0 + 112);
      v11 = sub_20A5B8B64();
      v12 = *(_QWORD *)(v11 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v8, 1, 1, v11);
      v13 = (_QWORD *)swift_allocObject();
      v13[2] = 0;
      v14 = v13 + 2;
      v13[3] = 0;
      v13[4] = v10;
      v13[5] = v7;
      sub_20A4C0C50(v8, v9);
      LODWORD(v9) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11);
      v15 = v10;
      v16 = v7;
      v17 = *(_QWORD *)(v0 + 144);
      if ((_DWORD)v9 == 1)
      {
        sub_20A44CE2C(*(_QWORD *)(v0 + 144), (uint64_t *)&unk_253EB5180);
        if (!*v14)
          goto LABEL_13;
      }
      else
      {
        sub_20A5B8B58();
        (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v17, v11);
        if (!*v14)
        {
LABEL_13:
          v18 = 0;
          v20 = 0;
          goto LABEL_14;
        }
      }
      swift_getObjectType();
      swift_unknownObjectRetain();
      v18 = sub_20A5B8AF8();
      v20 = v19;
      swift_unknownObjectRelease();
LABEL_14:
      v21 = **(_QWORD **)(v0 + 96);
      v22 = v20 | v18;
      if (v20 | v18)
      {
        v22 = v0 + 16;
        *(_QWORD *)(v0 + 16) = 0;
        *(_QWORD *)(v0 + 24) = 0;
        *(_QWORD *)(v0 + 32) = v18;
        *(_QWORD *)(v0 + 40) = v20;
      }
      ++v4;
      v5 = *(_QWORD *)(v0 + 152);
      *(_QWORD *)(v0 + 48) = 1;
      *(_QWORD *)(v0 + 56) = v22;
      *(_QWORD *)(v0 + 64) = v21;
      swift_task_create();

      swift_release();
      sub_20A44CE2C(v5, (uint64_t *)&unk_253EB5180);
      if (v26 == v4)
        goto LABEL_17;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_20A4BDC0C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (_QWORD *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    v2[23] = v0;
    v4 = v2[16];
    v3 = v2[17];
    v5 = v2[15];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  else
  {
    v2[22] = MEMORY[0x24BEE4AF8];
  }
  return swift_task_switch();
}

uint64_t sub_20A4BDCA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v11;

  v2 = *(_QWORD *)(v0 + 72);
  v1 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 176);
  if (v1)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v5 = *(_QWORD **)(v0 + 176);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v5 = sub_20A46FE9C(0, v5[2] + 1, 1, v5);
    v7 = v5[2];
    v6 = v5[3];
    if (v7 >= v6 >> 1)
      v5 = sub_20A46FE9C((_QWORD *)(v6 > 1), v7 + 1, 1, v5);
    *(_QWORD *)(v0 + 192) = v5;
    v5[2] = v7 + 1;
    v8 = &v5[2 * v7];
    v8[4] = v2;
    v8[5] = v1;
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 200) = v9;
    *v9 = v0;
    v9[1] = sub_20A4BDE34;
    return sub_20A5B8B28();
  }
  else
  {
    v11 = *(_QWORD **)(v0 + 88);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 120));
    swift_bridgeObjectRelease();
    *v11 = v3;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_20A4BDDEC()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4BDE34()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (_QWORD *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    v2[23] = v0;
    v4 = v2[16];
    v3 = v2[17];
    v5 = v2[15];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  else
  {
    v2[22] = v2[24];
  }
  return swift_task_switch();
}

uint64_t sub_20A4BDEC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[18] = a4;
  v5[19] = a5;
  v5[17] = a1;
  return swift_task_switch();
}

uint64_t sub_20A4BDEE0()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = (void *)v0[18];
  v1 = v0[19];
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_20A4BDF80;
  v3 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v4 = v0 + 10;
  v4[1] = 0x40000000;
  v4[2] = sub_20A4BD34C;
  v4[3] = &block_descriptor_9;
  v4[4] = v3;
  objc_msgSend(v2, sel_copyMobileSubscriberIdentity_completion_, v1, v4);
  return swift_continuation_await();
}

uint64_t sub_20A4BDF80()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 160) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_20A4BDFE0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 128);
  v1 = *(_QWORD **)(v0 + 136);
  *v1 = *(_QWORD *)(v0 + 120);
  v1[1] = v2;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4BDFF8()
{
  uint64_t v0;

  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4BE034()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 128) = v0;
  return swift_task_switch();
}

uint64_t sub_20A4BE04C()
{
  _QWORD *v0;
  id v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE0ACD8]), sel_init);
  v0[17] = v1;
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_20A4BE104;
  v2 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v3 = v0 + 10;
  v3[1] = 0x40000000;
  v3[2] = sub_20A4BE2DC;
  v3[3] = &block_descriptor_21;
  v3[4] = v2;
  objc_msgSend(v1, sel_appleIDHeadersWithCompletion_, v3);
  return swift_continuation_await();
}

uint64_t sub_20A4BE104()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 144) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_20A4BE164()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v8[9];

  v1 = *(_QWORD *)(v0 + 120);

  if (v1)
  {
    if (*(_QWORD *)(v1 + 16))
    {
      v2 = sub_20A47094C(0x2D656C7070412D58, 0xEE004D2D444D2D49);
      if ((v3 & 1) != 0)
      {
        v4 = (uint64_t *)(*(_QWORD *)(v1 + 56) + 16 * v2);
        v5 = *v4;
        v6 = v4[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v5, v6);
      }
    }
    swift_bridgeObjectRelease();
  }
  v8[0] = 68;
  ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000011, 0x800000020A5E0930, 0, v8, 0, 0, 0xD00000000000005BLL, 0x800000020A5E0950, 0x292844494D746567, 0xE800000000000000, 318);
  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4BE29C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 136);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4BE2DC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  _QWORD *v5;
  id v6;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52D0);
    swift_allocError();
    *v5 = a3;
    v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    if (a2)
      v8 = sub_20A5B8888();
    else
      v8 = 0;
    v9 = v8;
    sub_20A4C0D00((uint64_t)&v9, *(_QWORD *)(*(_QWORD *)(v3 + 64) + 40));
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_20A4BE39C()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  char v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  id v17[2];

  v17[1] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = *(void **)(v0 + 128);
  v17[0] = 0;
  v2 = objc_msgSend(v1, sel_getUserDefaultVoiceSubscriptionContext_, v17);
  v3 = v17[0];
  if (!v2)
  {
    v11 = v17[0];
    v12 = sub_20A5B8420();

    swift_willThrow();
    v13 = (void *)v12;
LABEL_6:

    v10 = 0;
    return v10 & 1;
  }
  v4 = v2;
  v17[0] = 0;
  v5 = v3;
  v6 = objc_msgSend(v1, sel_getSIMStatus_error_, v4, v17);
  v7 = v17[0];
  if (!v6)
  {
    v14 = v17[0];
    v15 = sub_20A5B8420();

    swift_willThrow();
    v13 = (void *)v15;
    goto LABEL_6;
  }
  v8 = v6;
  sub_20A5B8900();
  v9 = v7;

  v10 = sub_20A4BE4EC();
  swift_bridgeObjectRelease();
  return v10 & 1;
}

uint64_t sub_20A4BE4EC()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  char v4;
  void *v5;
  id v6;
  char v7;
  void *v8;
  id v9;
  char v10;
  void *v11;
  id v12;
  char v13;
  void *v14;
  id v15;
  char v16;
  void *v17;
  id v18;
  char v19;
  void *v20;
  id v21;
  char v22;
  void *v23;
  id v24;
  char v25;
  void *v26;
  id v27;
  char v28;
  void *v29;
  id v30;
  char v31;
  void *v32;
  id v33;
  char v34;
  void *v36;
  id v37;
  id v38;
  char v39;
  void *v40;
  id v41;
  char v42;
  void *v43;
  id v44;
  char v45;
  void *v46;
  id v47;
  char v48;
  void *v49;
  id v50;
  char v51;
  void *v52;
  id v53;
  id v54;
  id v55;
  char v56;
  _QWORD v57[4];
  uint64_t v58[2];

  v0 = (void *)sub_20A5B88F4();
  v1 = (void *)*MEMORY[0x24BDC2D10];
  if (!*MEMORY[0x24BDC2D10]
    || (type metadata accessor for CFString(0),
        sub_20A498124(&qword_2545FA8E8, 255, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_20A5BA958), v2 = v0, v3 = v1, v4 = sub_20A5B878C(), v3, v2, (v4 & 1) == 0))
  {
    v5 = (void *)*MEMORY[0x24BDC2CB8];
    if (!*MEMORY[0x24BDC2CB8]
      || (type metadata accessor for CFString(0),
          sub_20A498124(&qword_2545FA8E8, 255, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_20A5BA958), v2 = v0, v6 = v5, v7 = sub_20A5B878C(), v6, v2, (v7 & 1) == 0))
    {
      v8 = (void *)*MEMORY[0x24BDC2D30];
      if (!*MEMORY[0x24BDC2D30]
        || (type metadata accessor for CFString(0),
            sub_20A498124(&qword_2545FA8E8, 255, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_20A5BA958), v2 = v0, v9 = v8, v10 = sub_20A5B878C(), v9, v2, (v10 & 1) == 0))
      {
        v11 = (void *)*MEMORY[0x24BDC2CE8];
        if (!*MEMORY[0x24BDC2CE8]
          || (type metadata accessor for CFString(0),
              sub_20A498124(&qword_2545FA8E8, 255, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_20A5BA958), v2 = v0, v12 = v11, v13 = sub_20A5B878C(), v12, v2, (v13 & 1) == 0))
        {
          v14 = (void *)*MEMORY[0x24BDC2CF0];
          if (!*MEMORY[0x24BDC2CF0]
            || (type metadata accessor for CFString(0),
                sub_20A498124(&qword_2545FA8E8, 255, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_20A5BA958), v2 = v0, v15 = v14, v16 = sub_20A5B878C(), v15, v2, (v16 & 1) == 0))
          {
            v17 = (void *)*MEMORY[0x24BDC2D18];
            if (!*MEMORY[0x24BDC2D18]
              || (type metadata accessor for CFString(0),
                  sub_20A498124(&qword_2545FA8E8, 255, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_20A5BA958), v2 = v0, v18 = v17, v19 = sub_20A5B878C(), v18, v2, (v19 & 1) == 0))
            {
              v20 = (void *)*MEMORY[0x24BDC2D08];
              if (!*MEMORY[0x24BDC2D08]
                || (type metadata accessor for CFString(0),
                    sub_20A498124(&qword_2545FA8E8, 255, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_20A5BA958), v2 = v0, v21 = v20, v22 = sub_20A5B878C(), v21, v2, (v22 & 1) == 0))
              {
                v23 = (void *)*MEMORY[0x24BDC2CB0];
                if (!*MEMORY[0x24BDC2CB0]
                  || (type metadata accessor for CFString(0),
                      sub_20A498124(&qword_2545FA8E8, 255, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_20A5BA958), v2 = v0, v24 = v23, v25 = sub_20A5B878C(), v24, v2, (v25 & 1) == 0))
                {
                  v26 = (void *)*MEMORY[0x24BDC2CC8];
                  if (!*MEMORY[0x24BDC2CC8]
                    || (type metadata accessor for CFString(0),
                        sub_20A498124(&qword_2545FA8E8, 255, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_20A5BA958), v2 = v0, v27 = v26, v28 = sub_20A5B878C(), v27, v2, (v28 & 1) == 0))
                  {
                    v29 = (void *)*MEMORY[0x24BDC2D00];
                    if (!*MEMORY[0x24BDC2D00]
                      || (type metadata accessor for CFString(0),
                          sub_20A498124(&qword_2545FA8E8, 255, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_20A5BA958), v2 = v0, v30 = v29, v31 = sub_20A5B878C(), v30, v2, (v31 & 1) == 0))
                    {
                      v32 = (void *)*MEMORY[0x24BDC2CF8];
                      if (!*MEMORY[0x24BDC2CF8]
                        || (type metadata accessor for CFString(0),
                            sub_20A498124(&qword_2545FA8E8, 255, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_20A5BA958), v2 = v0, v33 = v32, v34 = sub_20A5B878C(), v33, v2, (v34 & 1) == 0))
                      {
                        v36 = (void *)*MEMORY[0x24BDC2CE0];
                        if (*MEMORY[0x24BDC2CE0])
                        {
                          type metadata accessor for CFString(0);
                          sub_20A498124(&qword_2545FA8E8, 255, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_20A5BA958);
                          v37 = v0;
                          v38 = v36;
                          v39 = sub_20A5B878C();

                          if ((v39 & 1) != 0)
                            goto LABEL_35;
                        }
                        v40 = (void *)*MEMORY[0x24BDC2CD0];
                        if (*MEMORY[0x24BDC2CD0])
                        {
                          type metadata accessor for CFString(0);
                          sub_20A498124(&qword_2545FA8E8, 255, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_20A5BA958);
                          v37 = v0;
                          v41 = v40;
                          v42 = sub_20A5B878C();

                          if ((v42 & 1) != 0)
                            goto LABEL_35;
                        }
                        v43 = (void *)*MEMORY[0x24BDC2D28];
                        if (*MEMORY[0x24BDC2D28])
                        {
                          type metadata accessor for CFString(0);
                          sub_20A498124(&qword_2545FA8E8, 255, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_20A5BA958);
                          v37 = v0;
                          v44 = v43;
                          v45 = sub_20A5B878C();

                          if ((v45 & 1) != 0)
                            goto LABEL_35;
                        }
                        v46 = (void *)*MEMORY[0x24BDC2D38];
                        if (*MEMORY[0x24BDC2D38])
                        {
                          type metadata accessor for CFString(0);
                          sub_20A498124(&qword_2545FA8E8, 255, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_20A5BA958);
                          v37 = v0;
                          v47 = v46;
                          v48 = sub_20A5B878C();

                          if ((v48 & 1) != 0)
                            goto LABEL_35;
                        }
                        v49 = (void *)*MEMORY[0x24BDC2CC0];
                        if (*MEMORY[0x24BDC2CC0])
                        {
                          type metadata accessor for CFString(0);
                          sub_20A498124(&qword_2545FA8E8, 255, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_20A5BA958);
                          v37 = v0;
                          v50 = v49;
                          v51 = sub_20A5B878C();

                          if ((v51 & 1) != 0)
                          {
LABEL_35:

                            return 0;
                          }
                        }
                        v52 = (void *)*MEMORY[0x24BDC2D20];
                        if (*MEMORY[0x24BDC2D20])
                        {
                          type metadata accessor for CFString(0);
                          sub_20A498124(&qword_2545FA8E8, 255, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_20A5BA958);
                          v53 = v52;
                          v54 = v0;
                          v55 = v53;
                          v56 = sub_20A5B878C();

                          if ((v56 & 1) != 0)
                            return 0;
                        }
                        else
                        {

                        }
                        sub_20A4BAF58(v58);
                        v57[2] = v58[0];
                        v57[3] = v58[1];
                        sub_20A5B8E94();
                        swift_bridgeObjectRelease();
                        v57[0] = 0xD000000000000005;
                        v57[1] = 0x800000020A5E0820;
                        sub_20A5B899C();
                        CoreODILogger.info(_:category:)(0xD000000000000017, 0x800000020A5E0820, v57);
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        return 0;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }

  return 1;
}

uint64_t sub_20A4BED60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = v1;
  return swift_task_switch();
}

uint64_t sub_20A4BEDC4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v1 = *(void **)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 72);
  sub_20A4BAF58(&v19);
  v21 = v19;
  v22 = v20;
  v23 = 0;
  v24 = 0xE000000000000000;
  sub_20A5B8E94();
  sub_20A5B899C();
  *(_QWORD *)(v0 + 40) = objc_msgSend(v1, sel_slotID);
  sub_20A5B9170();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  v3 = v23;
  LOBYTE(v23) = 5;
  CoreODILogger.info(_:category:)(v3, v24, &v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = *(void **)(v2 + 128);
  *(_QWORD *)(v0 + 48) = 0;
  v5 = objc_msgSend(v4, sel_getPhoneNumber_error_, v1, v0 + 48);
  v6 = *(void **)(v0 + 48);
  if (v5)
  {
    v7 = v5;
    v8 = v6;
    v9 = objc_msgSend(v7, sel_number);

    v10 = sub_20A5B8900();
    v12 = v11;

    *(_QWORD *)(v0 + 80) = v10;
    *(_QWORD *)(v0 + 88) = v12;
    sub_20A4BAF58(&v21);
    v23 = 0;
    v24 = 0xE000000000000000;
    sub_20A5B8E94();
    swift_bridgeObjectRelease();
    v23 = 0xD000000000000016;
    v24 = 0x800000020A5E07B0;
    sub_20A5B899C();
    if (qword_253EB5070 != -1)
      swift_once();
    v13 = sub_20A5B8804();
    __swift_project_value_buffer(v13, (uint64_t)qword_253EBC8B8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_20A5044CC();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v14 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 96) = v14;
    *v14 = v0;
    v14[1] = sub_20A4BF168;
    return sub_20A4BB018();
  }
  else
  {
    v16 = v6;
    v17 = (void *)sub_20A5B8420();

    swift_willThrow();
    sub_20A4BAF58(&v19);
    v21 = v19;
    v22 = v20;
    v23 = 0;
    v24 = 0xE000000000000000;
    sub_20A5B8E94();
    sub_20A5B899C();
    swift_getErrorValue();
    sub_20A5B923C();
    sub_20A5B899C();
    swift_bridgeObjectRelease();
    v18 = v23;
    LOBYTE(v23) = 5;
    CoreODILogger.error(_:category:)(v18, v24, &v23);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_20A4BF168(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 104) = a1;
  *(_QWORD *)(v3 + 112) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A4BF220()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v13[4];
  char v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD **)(v2 + 200);
  if (!v1)
  {
    swift_bridgeObjectRetain();
LABEL_10:
    *(_QWORD *)(v0 + 120) = v3;
    swift_bridgeObjectRelease();
    sub_20A4BAF58(v13);
    v13[2] = v13[0];
    v13[3] = v13[1];
    v14 = 5;
    CoreODILogger.info(_:category:)(0xD000000000000040, 0x800000020A5E07D0, &v14);
    swift_bridgeObjectRelease();
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 128) = v11;
    *v11 = v0;
    v11[1] = sub_20A4BF3E4;
    v11[23] = *(_QWORD *)(v0 + 72);
    return swift_task_switch();
  }
  v4 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  sub_20A4BF5F0(v4, v1);
  v6 = v5;
  v8 = v7;
  swift_bridgeObjectRelease();
  if ((v8 & 1) != 0 || (v6 & 0x8000000000000000) != 0)
    goto LABEL_10;
  if (v3)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v3 = sub_20A4C095C(v3);
    if (v6 >= v3[2])
      __break(1u);
    v9 = *(_QWORD *)(v0 + 88);
    v10 = &v3[2 * v6];
    v10[4] = *(_QWORD *)(v0 + 80);
    v10[5] = v9;
  }
  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 200) = v3;
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4BF3E4()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A4BF468()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4BF4C4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v4[4];
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  swift_bridgeObjectRelease();
  v1 = *(void **)(v0 + 112);
  sub_20A4BAF58(v4);
  v4[2] = v4[0];
  v4[3] = v4[1];
  v5 = 0;
  v6 = 0xE000000000000000;
  sub_20A5B8E94();
  sub_20A5B899C();
  swift_getErrorValue();
  sub_20A5B923C();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  v2 = v5;
  LOBYTE(v5) = 5;
  CoreODILogger.error(_:category:)(v2, v6, &v5);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_20A4BF5F0(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  id v4;
  void *v5;
  char v6;
  uint64_t i;
  id v8;
  void *v9;
  char v10;
  unint64_t v11;

  if (a2 >> 62)
    goto LABEL_20;
  v3 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      if ((a2 & 0xC000000000000001) != 0)
      {
        v4 = (id)MEMORY[0x20BD25F48](0, a2);
      }
      else
      {
        if (!*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        v4 = *(id *)(a2 + 32);
      }
      v5 = v4;
      sub_20A459574(0, &qword_253EB51D0);
      v6 = sub_20A5B8D14();

      if ((v6 & 1) == 0)
      {
        for (i = 0; ; ++i)
        {
          v11 = i + 1;
          if (__OFADD__(i, 1))
            break;
          if (v11 == v3)
            return;
          if ((a2 & 0xC000000000000001) != 0)
          {
            v8 = (id)MEMORY[0x20BD25F48](i + 1, a2);
          }
          else
          {
            if ((v11 & 0x8000000000000000) != 0)
              goto LABEL_18;
            if (v11 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_19;
            v8 = *(id *)(a2 + 32 + 8 * v11);
          }
          v9 = v8;
          v10 = sub_20A5B8D14();

          if ((v10 & 1) != 0)
            return;
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        swift_bridgeObjectRetain();
        v3 = sub_20A5B8FCC();
        swift_bridgeObjectRelease();
        if (v3)
          continue;
      }
      return;
    }
  }
}

id *ODIDeviceInfo.deinit()
{
  id *v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t ODIDeviceInfo.__deallocating_deinit()
{
  ODIDeviceInfo.deinit();
  return swift_defaultActor_deallocate();
}

uint64_t ODIDeviceInfo.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_20A4BF820(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[3] = a4;
  v5[4] = a5;
  v5[2] = a1;
  return swift_task_switch();
}

uint64_t sub_20A4BF83C()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  _QWORD *v3;

  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 40) = Strong;
  if (Strong)
  {
    v2 = Strong;
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 48) = v3;
    *v3 = v0;
    v3[1] = sub_20A4BF8DC;
    v3[8] = *(_QWORD *)(v0 + 32);
    v3[9] = v2;
    return swift_task_switch();
  }
  else
  {
    **(_BYTE **)(v0 + 16) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_20A4BF8DC()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_20A4BF938()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 16) = *(_QWORD *)(v0 + 40) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for ODIDeviceInfo()
{
  return objc_opt_self();
}

uint64_t method lookup function for ODIDeviceInfo()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ODIDeviceInfo.getCTPhoneNumber(useDefaultVoiceNumber:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 432))();
}

uint64_t type metadata accessor for ODIDeviceInfo.DeviceInfoHelper()
{
  return objc_opt_self();
}

uint64_t sub_20A4BFA9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v5;

  v4 = swift_task_alloc();
  v5 = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_20A4597C0;
  *(_OWORD *)(v4 + 24) = v5;
  *(_QWORD *)(v4 + 16) = a1;
  return swift_task_switch();
}

void sub_20A4BFB04(uint64_t (*a1)(void **, void **))
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  int v17;
  int v18;
  void **v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  int v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char *v35;
  char *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  BOOL v48;
  unint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  uint64_t v59;
  char v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  unint64_t v81;
  char *v82;
  uint64_t v83;
  unint64_t v84;
  void **v85;
  void *v86;
  uint64_t v87;
  void **v88;
  void **v89;
  void *v90;
  id v91;
  id v92;
  char v93;
  char v94;
  void *v95;
  char *v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  unint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  id *v116;
  uint64_t v117;
  void *v119;
  void *v120;
  uint64_t v121;

  v3 = v1[1];
  v4 = sub_20A5B9164();
  if (v4 >= v3)
  {
    if (v3 < 0)
      goto LABEL_144;
    if (v3)
      sub_20A4C02D8(0, v3, 1, a1);
    return;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 <= -2)
    goto LABEL_153;
  v112 = v4;
  v108 = v1;
  if (v3 < 2)
  {
    v8 = (char *)MEMORY[0x24BEE4AF8];
    v121 = MEMORY[0x24BEE4AF8];
    v116 = (id *)((MEMORY[0x24BEE4AF8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      v34 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_105:
      if (v34 >= 2)
      {
        v97 = *v108;
        do
        {
          v98 = v34 - 2;
          if (v34 < 2)
            goto LABEL_139;
          if (!v97)
            goto LABEL_152;
          v99 = (uint64_t)v8;
          v100 = *(_QWORD *)&v8[16 * v98 + 32];
          v101 = *(_QWORD *)&v8[16 * v34 + 24];
          sub_20A4C03D8((id *)(v97 + 8 * v100), (id *)(v97 + 8 * *(_QWORD *)&v8[16 * v34 + 16]), v97 + 8 * v101, v116, a1);
          if (v2)
            break;
          if (v101 < v100)
            goto LABEL_140;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
            v102 = (char *)v99;
          else
            v102 = sub_20A4C08E0(v99);
          if (v98 >= *((_QWORD *)v102 + 2))
            goto LABEL_141;
          v103 = &v102[16 * v98 + 32];
          *(_QWORD *)v103 = v100;
          *((_QWORD *)v103 + 1) = v101;
          v104 = *((_QWORD *)v102 + 2);
          if (v34 > v104)
            goto LABEL_142;
          v105 = v102;
          memmove(&v102[16 * v34 + 16], &v102[16 * v34 + 32], 16 * (v104 - v34));
          v8 = v105;
          *((_QWORD *)v105 + 2) = v104 - 1;
          v34 = v104 - 1;
        }
        while (v104 > 2);
      }
LABEL_121:
      swift_bridgeObjectRelease();
      goto LABEL_122;
    }
  }
  else
  {
    v6 = v5 >> 1;
    sub_20A459574(0, &qword_253EB51D0);
    v7 = sub_20A5B8AD4();
    *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
    v116 = (id *)((v7 & 0xFFFFFFFFFFFFFF8) + 32);
    v121 = v7;
  }
  v9 = 0;
  v10 = *v1;
  v109 = *v1 + 16;
  v107 = *v1 - 8;
  v8 = (char *)MEMORY[0x24BEE4AF8];
  v113 = v3;
  v117 = *v1;
LABEL_13:
  v11 = v9++;
  if (v9 < v3)
  {
    v12 = v8;
    v13 = *(void **)(v10 + 8 * v9);
    v119 = *(void **)(v10 + 8 * v11);
    v14 = v119;
    v120 = v13;
    v15 = v13;
    v16 = v14;
    v17 = a1(&v120, &v119);
    if (v2)
    {
      swift_bridgeObjectRelease();

      goto LABEL_122;
    }
    v18 = v17;

    v9 = v11 + 2;
    if (v11 + 2 < v3)
    {
      v110 = v11;
      v19 = (void **)(v109 + 8 * v11);
      while (1)
      {
        v20 = *v19;
        v119 = *(v19 - 1);
        v21 = v119;
        v120 = v20;
        v22 = v20;
        v23 = v21;
        v24 = a1(&v120, &v119);

        if (((v18 ^ v24) & 1) != 0)
          break;
        ++v9;
        ++v19;
        v3 = v113;
        if (v113 == v9)
        {
          v9 = v113;
          goto LABEL_21;
        }
      }
      v3 = v113;
LABEL_21:
      v11 = v110;
    }
    v8 = v12;
    v10 = v117;
    if ((v18 & 1) != 0)
    {
      if (v9 < v11)
        goto LABEL_148;
      if (v11 < v9)
      {
        v25 = (uint64_t *)(v107 + 8 * v9);
        v26 = v9;
        v27 = v11;
        v28 = (uint64_t *)(v117 + 8 * v11);
        do
        {
          if (v27 != --v26)
          {
            if (!v117)
              goto LABEL_151;
            v29 = *v28;
            *v28 = *v25;
            *v25 = v29;
          }
          ++v27;
          --v25;
          ++v28;
        }
        while (v27 < v26);
      }
    }
  }
  if (v9 >= v3)
    goto LABEL_40;
  if (__OFSUB__(v9, v11))
    goto LABEL_145;
  if (v9 - v11 >= v112)
  {
LABEL_40:
    if (v9 < v11)
      goto LABEL_143;
    goto LABEL_41;
  }
  if (__OFADD__(v11, v112))
    goto LABEL_146;
  if (v11 + v112 >= v3)
    v30 = v3;
  else
    v30 = v11 + v112;
  if (v30 >= v11)
  {
    if (v9 == v30)
      goto LABEL_40;
    v106 = v8;
    v85 = (void **)(v107 + 8 * v9);
    v111 = v11;
    v115 = v30;
    while (1)
    {
      v86 = *(void **)(v10 + 8 * v9);
      v87 = v11;
      v88 = v85;
      v89 = v85;
      while (1)
      {
        v119 = *v89;
        v90 = v119;
        v120 = v86;
        v91 = v86;
        v92 = v90;
        v93 = a1(&v120, &v119);
        if (v2)
        {
          swift_bridgeObjectRelease();

LABEL_122:
          *(_QWORD *)((v121 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
          sub_20A5B8ABC();
          swift_bridgeObjectRelease();
          return;
        }
        v94 = v93;

        if ((v94 & 1) == 0)
          break;
        v10 = v117;
        if (!v117)
          goto LABEL_150;
        v95 = *v89;
        v86 = v89[1];
        *v89 = v86;
        v89[1] = v95;
        --v89;
        if (v9 == ++v87)
          goto LABEL_99;
      }
      v10 = v117;
LABEL_99:
      ++v9;
      v85 = v88 + 1;
      v11 = v111;
      if (v9 == v115)
      {
        v9 = v115;
        v8 = v106;
        if (v115 < v111)
          goto LABEL_143;
LABEL_41:
        v31 = v8;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          v8 = v31;
        else
          v8 = sub_20A4C073C(0, *((_QWORD *)v31 + 2) + 1, 1, v31);
        v33 = *((_QWORD *)v8 + 2);
        v32 = *((_QWORD *)v8 + 3);
        v34 = v33 + 1;
        v10 = v117;
        if (v33 >= v32 >> 1)
        {
          v96 = sub_20A4C073C((char *)(v32 > 1), v33 + 1, 1, v8);
          v10 = v117;
          v8 = v96;
        }
        *((_QWORD *)v8 + 2) = v34;
        v35 = v8 + 32;
        v36 = &v8[16 * v33 + 32];
        *(_QWORD *)v36 = v11;
        *((_QWORD *)v36 + 1) = v9;
        if (v33)
        {
          v114 = v9;
          while (1)
          {
            v37 = v34 - 1;
            if (v34 >= 4)
            {
              v42 = &v35[16 * v34];
              v43 = *((_QWORD *)v42 - 8);
              v44 = *((_QWORD *)v42 - 7);
              v48 = __OFSUB__(v44, v43);
              v45 = v44 - v43;
              if (v48)
                goto LABEL_128;
              v47 = *((_QWORD *)v42 - 6);
              v46 = *((_QWORD *)v42 - 5);
              v48 = __OFSUB__(v46, v47);
              v40 = v46 - v47;
              v41 = v48;
              if (v48)
                goto LABEL_129;
              v49 = v34 - 2;
              v50 = &v35[16 * v34 - 32];
              v52 = *(_QWORD *)v50;
              v51 = *((_QWORD *)v50 + 1);
              v48 = __OFSUB__(v51, v52);
              v53 = v51 - v52;
              if (v48)
                goto LABEL_131;
              v48 = __OFADD__(v40, v53);
              v54 = v40 + v53;
              if (v48)
                goto LABEL_134;
              if (v54 >= v45)
              {
                v72 = &v35[16 * v37];
                v74 = *(_QWORD *)v72;
                v73 = *((_QWORD *)v72 + 1);
                v48 = __OFSUB__(v73, v74);
                v75 = v73 - v74;
                if (v48)
                  goto LABEL_138;
                v65 = v40 < v75;
                goto LABEL_78;
              }
            }
            else
            {
              if (v34 != 3)
              {
                v66 = *((_QWORD *)v8 + 4);
                v67 = *((_QWORD *)v8 + 5);
                v48 = __OFSUB__(v67, v66);
                v59 = v67 - v66;
                v60 = v48;
                goto LABEL_72;
              }
              v39 = *((_QWORD *)v8 + 4);
              v38 = *((_QWORD *)v8 + 5);
              v48 = __OFSUB__(v38, v39);
              v40 = v38 - v39;
              v41 = v48;
            }
            if ((v41 & 1) != 0)
              goto LABEL_130;
            v49 = v34 - 2;
            v55 = &v35[16 * v34 - 32];
            v57 = *(_QWORD *)v55;
            v56 = *((_QWORD *)v55 + 1);
            v58 = __OFSUB__(v56, v57);
            v59 = v56 - v57;
            v60 = v58;
            if (v58)
              goto LABEL_133;
            v61 = &v35[16 * v37];
            v63 = *(_QWORD *)v61;
            v62 = *((_QWORD *)v61 + 1);
            v48 = __OFSUB__(v62, v63);
            v64 = v62 - v63;
            if (v48)
              goto LABEL_136;
            if (__OFADD__(v59, v64))
              goto LABEL_137;
            if (v59 + v64 >= v40)
            {
              v65 = v40 < v64;
LABEL_78:
              if (v65)
                v37 = v49;
              goto LABEL_80;
            }
LABEL_72:
            if ((v60 & 1) != 0)
              goto LABEL_132;
            v68 = &v35[16 * v37];
            v70 = *(_QWORD *)v68;
            v69 = *((_QWORD *)v68 + 1);
            v48 = __OFSUB__(v69, v70);
            v71 = v69 - v70;
            if (v48)
              goto LABEL_135;
            if (v71 < v59)
              goto LABEL_89;
LABEL_80:
            v76 = v37 - 1;
            if (v37 - 1 >= v34)
            {
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
              goto LABEL_147;
            }
            if (!v10)
              goto LABEL_149;
            v77 = v8;
            v78 = &v35[16 * v76];
            v79 = *(_QWORD *)v78;
            v80 = v35;
            v81 = v37;
            v82 = &v35[16 * v37];
            v83 = *((_QWORD *)v82 + 1);
            sub_20A4C03D8((id *)(v10 + 8 * *(_QWORD *)v78), (id *)(v10 + 8 * *(_QWORD *)v82), v10 + 8 * v83, v116, a1);
            if (v2)
              goto LABEL_121;
            if (v83 < v79)
              goto LABEL_125;
            if (v81 > *((_QWORD *)v77 + 2))
              goto LABEL_126;
            *(_QWORD *)v78 = v79;
            *(_QWORD *)&v80[16 * v76 + 8] = v83;
            v84 = *((_QWORD *)v77 + 2);
            if (v81 >= v84)
              goto LABEL_127;
            v34 = v84 - 1;
            memmove(v82, v82 + 16, 16 * (v84 - 1 - v81));
            v35 = v80;
            v8 = v77;
            *((_QWORD *)v77 + 2) = v84 - 1;
            v10 = v117;
            v9 = v114;
            if (v84 <= 2)
              goto LABEL_89;
          }
        }
        v34 = 1;
LABEL_89:
        v3 = v113;
        if (v9 >= v113)
          goto LABEL_105;
        goto LABEL_13;
      }
    }
  }
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  __break(1u);
LABEL_151:
  __break(1u);
LABEL_152:
  __break(1u);
LABEL_153:
  sub_20A5B8FA8();
  __break(1u);
}

void sub_20A4C02D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void **, void **))
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void **v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  char v14;
  void *v15;
  void **v18;
  void *v20;
  void *v21;

  if (a3 != a2)
  {
    v6 = a3;
    v7 = a1;
    v8 = *v4;
    v9 = (void **)(*v4 + 8 * a3 - 8);
LABEL_4:
    v10 = *(void **)(v8 + 8 * v6);
    v18 = v9;
    while (1)
    {
      v21 = v10;
      v20 = *v9;
      v11 = v20;
      v12 = v10;
      v13 = v11;
      v14 = a4(&v21, &v20);

      if (v5)
        break;
      if ((v14 & 1) != 0)
      {
        if (!v8)
        {
          __break(1u);
          return;
        }
        v15 = *v9;
        v10 = v9[1];
        *v9 = v10;
        v9[1] = v15;
        --v9;
        if (v6 != ++v7)
          continue;
      }
      ++v6;
      v9 = v18 + 1;
      v7 = a1;
      if (v6 != a2)
        goto LABEL_4;
      return;
    }
  }
}

uint64_t sub_20A4C03D8(id *__src, id *a2, unint64_t a3, id *a4, uint64_t (*a5)(id *, void **))
{
  uint64_t v5;
  uint64_t v6;
  id *v7;
  id *v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void **v15;
  char *v16;
  id *v17;
  void *v18;
  id v19;
  id v20;
  char v21;
  char v22;
  id *v23;
  id *v24;
  char *v25;
  id *v26;
  id *v27;
  unint64_t v28;
  char *v29;
  void *v30;
  id v31;
  id v32;
  char v33;
  char v34;
  id *v35;
  unint64_t v36;
  char *v37;
  uint64_t result;
  id *v39;
  id *v42;
  void *v44;
  id v45;
  char *v46;
  void **v47;
  id *v48;

  v6 = v5;
  v7 = a2;
  v8 = __src;
  v9 = (char *)a2 - (char *)__src;
  v10 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v10 = (char *)a2 - (char *)__src;
  v11 = v10 >> 3;
  v12 = a3 - (_QWORD)a2;
  v13 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v13 = a3 - (_QWORD)a2;
  v14 = v13 >> 3;
  v48 = __src;
  v47 = a4;
  if (v11 >= v13 >> 3)
  {
    if (v12 <= -8)
      goto LABEL_50;
    if (a4 != a2 || &a2[v14] <= a4)
      memmove(a4, a2, 8 * v14);
    v25 = (char *)&a4[v14];
    v46 = v25;
    v48 = v7;
    if (v8 >= v7 || v12 < 8)
    {
LABEL_49:
      sub_20A4C0838((void **)&v48, (const void **)&v47, &v46);
      return 1;
    }
    v26 = (id *)(a3 - 8);
    v27 = v7;
    v39 = v8;
    while (1)
    {
      v42 = v7;
      v28 = (unint64_t)v25;
      v29 = v25 - 8;
      v45 = (id)*((_QWORD *)v25 - 1);
      v30 = *--v27;
      v44 = v30;
      v31 = v45;
      v32 = v30;
      v33 = a5(&v45, &v44);
      if (v6)
      {

        goto LABEL_49;
      }
      v34 = v33;
      v35 = v26 + 1;

      if ((v34 & 1) != 0)
      {
        v25 = (char *)v28;
        if (v35 != v42 || v26 >= v42)
          *v26 = *v27;
        v48 = v27;
      }
      else
      {
        v46 = v29;
        if ((unint64_t)v35 >= v28 && (unint64_t)v26 < v28)
        {
          v36 = (unint64_t)v39;
          if (v35 != (id *)v28)
            *v26 = *(id *)v29;
          v37 = (char *)a4;
          v27 = v42;
          v25 = v29;
          v6 = 0;
          goto LABEL_44;
        }
        *v26 = *(id *)v29;
        v27 = v42;
        v25 = v29;
      }
      v6 = 0;
      v36 = (unint64_t)v39;
      v37 = (char *)a4;
LABEL_44:
      if ((unint64_t)v27 > v36)
      {
        --v26;
        v7 = v27;
        if (v25 > v37)
          continue;
      }
      goto LABEL_49;
    }
  }
  if (v9 > -8)
  {
    v15 = a4;
    if (a4 != __src || &__src[v11] <= a4)
      memmove(a4, __src, 8 * v11);
    v16 = (char *)&a4[v11];
    v46 = v16;
    if ((unint64_t)v7 < a3 && v9 >= 8)
    {
      while (1)
      {
        v17 = v8;
        v45 = *v7;
        v44 = *v15;
        v18 = v44;
        v19 = v45;
        v20 = v18;
        v21 = a5(&v45, &v44);
        if (v5)
          break;
        v22 = v21;

        if ((v22 & 1) != 0)
        {
          v23 = v7 + 1;
          v24 = v17;
          if (v17 < v7 || v17 >= v23 || v17 != v7)
            *v17 = *v7;
        }
        else
        {
          v24 = v17;
          if (v17 != v15)
            *v17 = *v15;
          v47 = ++v15;
          v23 = v7;
        }
        v8 = v24 + 1;
        v48 = v8;
        if (v15 < (void **)v16)
        {
          v7 = v23;
          if ((unint64_t)v23 < a3)
            continue;
        }
        goto LABEL_49;
      }

    }
    goto LABEL_49;
  }
LABEL_50:
  result = sub_20A5B8FFC();
  __break(1u);
  return result;
}

char *sub_20A4C073C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA928);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_20A4C0838(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 7;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -8)
  {
    result = (char *)sub_20A5B8FFC();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
      return (char *)memmove(result, v3, 8 * v7);
  }
  return result;
}

char *sub_20A4C08E0(uint64_t a1)
{
  return sub_20A4C073C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

void sub_20A4C08F4(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_20A5B8FCC();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x20BD25F54);
}

_QWORD *sub_20A4C095C(_QWORD *a1)
{
  return sub_20A46FE9C(0, a1[2], 0, a1);
}

uint64_t (*sub_20A4C0970(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_20A4C0A48(v6, a2, a3);
  return sub_20A4C09C4;
}

uint64_t (*sub_20A4C09C8(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_20A4C0ABC(v6, a2, a3);
  return sub_20A4C09C4;
}

void sub_20A4C0A1C(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

void (*sub_20A4C0A48(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x20BD25F48](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return sub_20A4C0AB4;
  }
  __break(1u);
  return result;
}

void sub_20A4C0AB4(id *a1)
{

}

uint64_t (*sub_20A4C0ABC(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = MEMORY[0x20BD25F48](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_retain();
LABEL_5:
    *v3 = v4;
    return sub_20A4C0B28;
  }
  __break(1u);
  return result;
}

uint64_t sub_20A4C0B28()
{
  return swift_release();
}

void sub_20A4C0B30()
{
  JUMPOUT(0x20BD261F4);
}

uint64_t sub_20A4C0B44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v7 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_20A45A37C;
  return sub_20A4BD86C(a1, a2, v7, v6);
}

uint64_t objectdestroyTm_1()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_20A4C0BE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v5;

  v4 = swift_task_alloc();
  v5 = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_20A4597C0;
  *(_OWORD *)(v4 + 144) = v5;
  *(_QWORD *)(v4 + 136) = a1;
  return swift_task_switch();
}

uint64_t sub_20A4C0C50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB5180);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_20A4C0C98()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2545FA920;
  if (!qword_2545FA920)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545FA900);
    result = MEMORY[0x20BD26CEC](MEMORY[0x24BEE6BD8], v1);
    atomic_store(result, (unint64_t *)&qword_2545FA920);
  }
  return result;
}

uint64_t sub_20A4C0CE4(void **a1, void **a2)
{
  return sub_20A4BB948(a1, a2) & 1;
}

uint64_t sub_20A4C0D00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253EB47B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A4C0D48(unint64_t a1, _QWORD *a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  unint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  id v20;
  unint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;

  v3 = a1;
  v25 = *MEMORY[0x24BDAC8D0];
  if (a1 >> 62)
    goto LABEL_18;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v5 = MEMORY[0x24BEE4AF8];
    if (!v4)
      break;
    v24 = MEMORY[0x24BEE4AF8];
    sub_20A457724(0, v4 & ~(v4 >> 63), 0);
    if (v4 < 0)
      __break(1u);
    v6 = 0;
    v5 = v24;
    v22 = v3 & 0xC000000000000001;
    a2 = (_QWORD *)a2[16];
    while (v4 != v6)
    {
      if (v22)
        v7 = (id)MEMORY[0x20BD25F48](v6, v3);
      else
        v7 = *(id *)(v3 + 8 * v6 + 32);
      v8 = v7;
      v23 = 0;
      v9 = objc_msgSend(a2, sel_getPhoneNumber_error_, v7, &v23);
      if (!v9)
      {
        v20 = v23;
        sub_20A5B8420();

        swift_willThrow();
        swift_release();

        return v5;
      }
      v10 = v9;
      v11 = v3;
      v12 = v23;
      v13 = objc_msgSend(v10, sel_number);

      v14 = sub_20A5B8900();
      v16 = v15;

      v24 = v5;
      v18 = *(_QWORD *)(v5 + 16);
      v17 = *(_QWORD *)(v5 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_20A457724(v17 > 1, v18 + 1, 1);
        v5 = v24;
      }
      ++v6;
      *(_QWORD *)(v5 + 16) = v18 + 1;
      v19 = v5 + 16 * v18;
      *(_QWORD *)(v19 + 32) = v14;
      *(_QWORD *)(v19 + 40) = v16;
      v3 = v11;
      if (v4 == v6)
        return v5;
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    v4 = sub_20A5B8FCC();
    swift_bridgeObjectRelease();
  }
  return v5;
}

uint64_t sub_20A4C0F70(void **a1, void **a2)
{
  return sub_20A4C0CE4(a1, a2) & 1;
}

Swift::String_optional __swiftcall ODIAssessmentResult.trainingSignalID()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  Swift::String_optional result;
  uint64_t v15;

  v1 = v0;
  v2 = type metadata accessor for ODIAssessmentResult(0);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ODIAssessment(0);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (uint64_t *)((char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20A465A2C(v1, (uint64_t)v5);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_20A465AB4((uint64_t)v5, type metadata accessor for ODIAssessmentResult);
    v10 = 0;
    v11 = 0;
  }
  else
  {
    sub_20A4C1088((uint64_t)v5, (uint64_t)v9);
    v10 = *v9;
    v11 = (void *)v9[1];
    swift_bridgeObjectRetain();
    sub_20A465AB4((uint64_t)v9, type metadata accessor for ODIAssessment);
  }
  v12 = v10;
  v13 = v11;
  result.value._object = v13;
  result.value._countAndFlagsBits = v12;
  return result;
}

uint64_t sub_20A4C1088(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ODIAssessment(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

BOOL ODIAssessmentResult.isSuccessful.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  _BOOL8 v5;
  uint64_t v7;

  v1 = type metadata accessor for ODIAssessmentResult(0);
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A465A2C(v0, (uint64_t)v4);
  v5 = swift_getEnumCaseMultiPayload() != 1;
  sub_20A465AB4((uint64_t)v4, type metadata accessor for ODIAssessmentResult);
  return v5;
}

BOOL sub_20A4C1160(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_20A4C1170()
{
  return sub_20A5B92A8();
}

uint64_t sub_20A4C1194(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
  if (v2 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x646F43726F727265 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_20A5B91AC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_20A4C1288()
{
  sub_20A5B929C();
  sub_20A5B92A8();
  return sub_20A5B92CC();
}

uint64_t sub_20A4C12CC(char a1)
{
  if ((a1 & 1) != 0)
    return 0x646F43726F727265;
  else
    return 0x65756C6176;
}

void sub_20A4C1304()
{
  type metadata accessor for ArmandDeviceDataField.CodingKeys();
}

uint64_t sub_20A4C134C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  MEMORY[0x20BD26CEC](&unk_20A5C21A8, a1);
  v4 = sub_20A5B914C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v12 - v7;
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  v9 = *(_QWORD *)(v3 - 168);
  sub_20A5B92FC();
  *(_BYTE *)(v3 - 112) = 0;
  v10 = *(_QWORD *)(v3 - 120);
  sub_20A5B9104();
  if (!v10)
  {
    *(_BYTE *)(v3 - 112) = *(_BYTE *)(v9 + *(int *)(v2 + 52));
    *(_BYTE *)(v3 - 65) = 1;
    sub_20A4C3F74();
    sub_20A5B9140();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

void sub_20A4C147C(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[14];

  v12[0] = a5;
  v9 = sub_20A5B8D38();
  v12[7] = *(_QWORD *)(v9 - 8);
  v12[8] = v9;
  MEMORY[0x24BDAC7A8](v9, v10);
  v12[2] = (char *)v12 - v11;
  v12[10] = a1;
  v12[11] = a2;
  v12[12] = a3;
  v12[13] = a4;
  type metadata accessor for ArmandDeviceDataField.CodingKeys();
}

void sub_20A4C1504(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  MEMORY[0x20BD26CEC](&unk_20A5C21A8, a1);
  v6 = sub_20A5B90BC();
  *(_QWORD *)(v5 - 160) = v6;
  *(_QWORD *)(v5 - 184) = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v7);
  *(_QWORD *)(v5 - 112) = v3;
  *(_QWORD *)(v5 - 104) = v2;
  *(_QWORD *)(v5 - 168) = v2;
  *(_QWORD *)(v5 - 96) = v1;
  *(_QWORD *)(v5 - 88) = v4;
  type metadata accessor for ArmandDeviceDataField();
}

uint64_t sub_20A4C1574(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void (*v10)(void);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;

  v7 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  v9 = (char *)&v24 - v8;
  v10 = *(void (**)(void))(*(_QWORD *)(v4 - 8) + 56);
  *(_QWORD *)(v5 - 152) = v9;
  v10();
  v11 = v3[3];
  *(_QWORD *)(v5 - 144) = v3;
  __swift_project_boxed_opaque_existential_1(v3, v11);
  v12 = v2;
  v13 = *(_QWORD *)(v5 - 120);
  sub_20A5B92F0();
  if (v13)
  {
    v19 = *(_QWORD *)(v5 - 136);
    v18 = *(_QWORD *)(v5 - 128);
    v20 = *(_QWORD *)(v5 - 152);
    __swift_destroy_boxed_opaque_existential_1(*(_QWORD *)(v5 - 144));
    return (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8))(v20, v18);
  }
  else
  {
    *(_QWORD *)(v5 - 120) = v7;
    v14 = a1;
    v15 = *(_QWORD *)(v5 - 184);
    v16 = *(_QWORD *)(v5 - 176);
    *(_BYTE *)(v5 - 112) = 0;
    v17 = v12;
    sub_20A5B9068();
    v21 = *(_QWORD *)(v5 - 152);
    (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v5 - 136) + 40))(v21, v16, *(_QWORD *)(v5 - 128));
    *(_BYTE *)(v5 - 65) = 1;
    sub_20A4C3F30();
    sub_20A5B90A4();
    (*(void (**)(uint64_t, _QWORD))(v15 + 8))(v17, *(_QWORD *)(v5 - 160));
    *(_BYTE *)(v21 + *(int *)(v14 + 52)) = *(_BYTE *)(v5 - 112);
    v22 = *(_QWORD *)(v5 - 120);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v22 + 16))(*(_QWORD *)(v5 - 192), v21, v14);
    __swift_destroy_boxed_opaque_existential_1(*(_QWORD *)(v5 - 144));
    return (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8))(v21, v14);
  }
}

BOOL sub_20A4C174C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_20A4C1160(*a1, *a2);
}

uint64_t sub_20A4C1764()
{
  return sub_20A4C1288();
}

uint64_t sub_20A4C1778()
{
  return sub_20A4C1170();
}

uint64_t sub_20A4C178C()
{
  sub_20A5B929C();
  sub_20A4C1170();
  return sub_20A5B92CC();
}

uint64_t sub_20A4C17D4()
{
  char *v0;

  return sub_20A4C12CC(*v0);
}

uint64_t sub_20A4C17E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A4C1194(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A4C1818@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_20A45DBD8();
  *a1 = result;
  return result;
}

uint64_t sub_20A4C1848(uint64_t a1)
{
  MEMORY[0x20BD26CEC](&unk_20A5C21A8, a1);
  return sub_20A5B9314();
}

uint64_t sub_20A4C187C(uint64_t a1)
{
  MEMORY[0x20BD26CEC](&unk_20A5C21A8, a1);
  return sub_20A5B9320();
}

void sub_20A4C18B0(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  sub_20A4C147C(a1[2], a1[3], a1[4], a1[5], a2);
}

void sub_20A4C18D0()
{
  sub_20A4C1304();
}

unint64_t sub_20A4C18E4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t inited;
  uint64_t v20;
  unint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25[19];
  _BYTE v26[40];

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA938);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ODIKnownBinding();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = *v2;
  v15 = *((unsigned __int8 *)v3 + 8);
  if (!v14 || !*(_QWORD *)(v14 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
    goto LABEL_8;
  }
  v25[0] = (uint64_t)v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  v16 = sub_20A47094C(a1, a2);
  if ((v17 & 1) != 0)
  {
    sub_20A4797C4(*(_QWORD *)(v14 + 56) + *(_QWORD *)(v11 + 72) * v16, (uint64_t)v9);
    v18 = 0;
  }
  else
  {
    v18 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, v18, 1, v10);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
LABEL_8:
    sub_20A4C35AC((uint64_t)v9);
    __swift_instantiateConcreteTypeFromMangledName(qword_2545FA940);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_20A5BA9A0;
    *(_QWORD *)(inited + 32) = 0x646F43726F727265;
    *(_QWORD *)(inited + 40) = 0xE900000000000065;
    if ((v15 + 47) >= 9u)
      __asm { BR              X10 }
    v20 = MEMORY[0x24BEE1778];
    *(_QWORD *)(inited + 72) = MEMORY[0x24BEE1768];
    *(_QWORD *)(inited + 80) = v20;
    *(_QWORD *)(inited + 48) = -(uint64_t)(v15 + 47);
    return sub_20A469B08(inited);
  }
  sub_20A479808((uint64_t)v9, v25[0]);
  sub_20A538CE4();
  __swift_instantiateConcreteTypeFromMangledName(qword_2545FA940);
  v23 = swift_initStackObject();
  *(_OWORD *)(v23 + 16) = xmmword_20A5BA9B0;
  *(_QWORD *)(v23 + 32) = 0x65756C6176;
  *(_QWORD *)(v23 + 40) = 0xE500000000000000;
  sub_20A47BD60((uint64_t)v26, v23 + 48);
  *(_QWORD *)(v23 + 88) = 0x646F43726F727265;
  *(_QWORD *)(v23 + 96) = 0xE900000000000065;
  if ((v15 + 47) >= 9u)
    __asm { BR              X10 }
  v24 = MEMORY[0x24BEE1778];
  *(_QWORD *)(v23 + 128) = MEMORY[0x24BEE1768];
  *(_QWORD *)(v23 + 136) = v24;
  *(_QWORD *)(v23 + 104) = -(uint64_t)(v15 + 47);
  v21 = sub_20A469B08(v23);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  sub_20A4C35EC(v25[0]);
  return v21;
}

void sub_20A4C1BB8()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C1BC0()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1BC8()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1BD0()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1BD8()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1BE0()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1BE8()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1BF0()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1BF8()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1C00()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1C08()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1C10()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1C18()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1C20()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1C28()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1C30()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1C38()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1C40()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1C48()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1C50()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1C58()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1C60()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1C68()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1C70()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1C78()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1C80()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1C88()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1C90()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1C98()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1CA0()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1CA8()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1CB0()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1CB8()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1CC0()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1CC8()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1CD0()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1CD8()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1CE0()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1CE8()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1CF0()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1CF8()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1D00()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1D08()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1D10()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1D18()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1D20()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1D28()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1D30()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1D38()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1D40()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1D48()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1D50()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1D58()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1D60()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1D68()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1D70()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1D78()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1D80()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1D88()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1D90()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1D98()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1DA4()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1DB4()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1DC4()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1DCC()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1DD4()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1DDC()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1DE4()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1DEC()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1DF4()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1DFC()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1E04()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1E0C()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1E14()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1E1C()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1E24()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1E2C()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1E34()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1E3C()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1E44()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1E4C()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1E54()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1E5C()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1E64()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1E6C()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1E74()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1E7C()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1E84()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1E8C()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1E94()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1E9C()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1EA4()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1EAC()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1EB4()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1EBC()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1EC4()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1ECC()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1ED4()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1EE0()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1EE8()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1EF0()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1EF8()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1F00()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1F08()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1F10()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1F18()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1F20()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1F28()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1F30()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1F38()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1F40()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1F48()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1F50()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1F58()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1F60()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1F68()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1F70()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1F78()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1F80()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1F88()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1F90()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1F98()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1FA0()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1FA8()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1FB0()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1FB8()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1FC0()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1FC8()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1FD0()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1FD8()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1FE0()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1FE8()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1FF0()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C1FF8()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C2000()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C2008()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C2010()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C2018()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C2020()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C2028()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C2030()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C2038()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C2040()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C2048()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C2050()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C2058()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C2060()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C2068()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C2070()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C2078()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C2080()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C2088()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C2090()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C2098()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C20A0()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C20A8()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C20B0()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C20B8()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C20C0()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C20C8()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C20D0()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C20D8()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C20E0()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C20E8()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C20F0()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C20F8()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C2100()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C2108()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C2110()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C2118()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C2120()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C2128()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C2130()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C2138()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C2140()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C2148()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C2150()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C2158()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C2160()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C2168()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C2170()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C2178()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C2180()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C2188()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C2190()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C2198()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C21A0()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C21A8()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C21B0()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C21B8()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C21C0()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C21C8()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C21D0()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C21D8()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C21E8()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C21F8()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C2208()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C2218()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C2228()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C2238()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C2248()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C2258()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C2268()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C2278()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C2288()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C2298()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C22A8()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C22B8()
{
  JUMPOUT(0x20A4C1A84);
}

void sub_20A4C22C4()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C22CC()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C22D4()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C22DC()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C22E4()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C22EC()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C22F4()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C22FC()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2304()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C230C()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2314()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C231C()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2324()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C232C()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2334()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C233C()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2344()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C234C()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2354()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C235C()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2364()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C236C()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2374()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C237C()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2384()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C238C()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2394()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C239C()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C23A4()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C23AC()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C23B4()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C23BC()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C23C4()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C23CC()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C23D4()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C23DC()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C23E4()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C23EC()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C23F4()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C23FC()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2404()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C240C()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2414()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C241C()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2424()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C242C()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2434()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C243C()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2444()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C244C()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2454()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C245C()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2464()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C246C()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2474()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C247C()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2484()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C248C()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2494()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C249C()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C24A8()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C24B8()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C24C8()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C24D0()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C24D8()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C24E0()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C24E8()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C24F0()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C24F8()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2500()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2508()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2510()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2518()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2520()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2528()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2530()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2538()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2540()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2548()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2550()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2558()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2560()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2568()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2570()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2578()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2580()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2588()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2590()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2598()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C25A0()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C25A8()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C25B0()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C25B8()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C25C0()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C25C8()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C25D0()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C25D8()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C25E4()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C25EC()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C25F4()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C25FC()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2604()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C260C()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2614()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C261C()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2624()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C262C()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2634()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C263C()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2644()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C264C()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2654()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C265C()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2664()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C266C()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2674()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C267C()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2684()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C268C()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2694()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C269C()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C26A4()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C26AC()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C26B4()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C26BC()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C26C4()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C26CC()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C26D4()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C26DC()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C26E4()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C26EC()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C26F4()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C26FC()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2704()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C270C()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2714()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C271C()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2724()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C272C()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2734()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C273C()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2744()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C274C()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2754()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C275C()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2764()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C276C()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2774()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C277C()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2784()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C278C()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2794()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C279C()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C27A4()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C27AC()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C27B4()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C27BC()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C27C4()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C27CC()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C27D4()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C27DC()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C27E4()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C27EC()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C27F4()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C27FC()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2804()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C280C()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2814()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C281C()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2824()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C282C()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2834()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C283C()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2844()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C284C()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2854()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C285C()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2864()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C286C()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2874()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C287C()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2884()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C288C()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C2894()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C289C()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C28A4()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C28AC()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C28B4()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C28BC()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C28C4()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C28CC()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C28D4()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C28DC()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C28EC()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C28FC()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C290C()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C291C()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C292C()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C293C()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C294C()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C295C()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C296C()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C297C()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C298C()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C299C()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C29AC()
{
  JUMPOUT(0x20A4C1B64);
}

void sub_20A4C29BC()
{
  JUMPOUT(0x20A4C1B64);
}

uint64_t sub_20A4C29C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  sub_20A5B8D38();
  sub_20A5B8D44();
  v4 = *(unsigned __int8 *)(v2 + *(int *)(a2 + 52));
  if ((v4 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  return sub_20A5B92A8();
}

void sub_20A4C2A58()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2A60()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2A68()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2A70()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2A78()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2A80()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2A88()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2A90()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2A98()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2AA0()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2AA8()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2AB0()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2AB8()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2AC0()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2AC8()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2AD0()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2AD8()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2AE0()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2AE8()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2AF0()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2AF8()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2B00()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2B08()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2B10()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2B18()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2B20()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2B28()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2B30()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2B38()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2B40()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2B48()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2B50()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2B58()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2B60()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2B68()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2B70()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2B78()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2B80()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2B88()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2B90()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2B98()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2BA0()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2BA8()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2BB0()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2BB8()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2BC0()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2BC8()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2BD0()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2BD8()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2BE0()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2BE8()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2BF0()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2BF8()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2C00()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2C08()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2C10()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2C18()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2C20()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2C28()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2C30()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2C38()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2C44()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2C54()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2C64()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2C6C()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2C74()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2C7C()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2C84()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2C8C()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2C94()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2C9C()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2CA4()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2CAC()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2CB4()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2CBC()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2CC4()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2CCC()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2CD4()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2CDC()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2CE4()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2CEC()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2CF4()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2CFC()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2D04()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2D0C()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2D14()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2D1C()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2D24()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2D2C()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2D34()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2D3C()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2D44()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2D4C()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2D54()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2D5C()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2D64()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2D6C()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2D74()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2D80()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2D88()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2D90()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2D98()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2DA0()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2DA8()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2DB0()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2DB8()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2DC0()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2DC8()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2DD0()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2DD8()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2DE0()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2DE8()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2DF0()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2DF8()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2E00()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2E08()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2E10()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2E18()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2E20()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2E28()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2E30()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2E38()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2E40()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2E48()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2E50()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2E58()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2E60()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2E68()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2E70()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2E78()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2E80()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2E88()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2E90()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2E98()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2EA0()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2EA8()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2EB0()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2EB8()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2EC0()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2EC8()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2ED0()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2ED8()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2EE0()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2EE8()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2EF0()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2EF8()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2F00()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2F08()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2F10()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2F18()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2F20()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2F28()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2F30()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2F38()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2F40()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2F48()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2F50()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2F58()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2F60()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2F68()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2F70()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2F78()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2F80()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2F88()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2F90()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2F98()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2FA0()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2FA8()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2FB0()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2FB8()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2FC0()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2FC8()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2FD0()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2FD8()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2FE0()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2FE8()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2FF0()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C2FF8()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C3000()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C3008()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C3010()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C3018()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C3020()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C3028()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C3030()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C3038()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C3040()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C3048()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C3050()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C3058()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C3060()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C3068()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C3070()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C3078()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C3088()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C3098()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C30A8()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C30B8()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C30C8()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C30D8()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C30E8()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C30F8()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C3108()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C3118()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C3128()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C3138()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C3148()
{
  JUMPOUT(0x20A4C2A18);
}

void sub_20A4C3158()
{
  JUMPOUT(0x20A4C2A18);
}

uint64_t sub_20A4C3164(uint64_t a1)
{
  _BYTE v3[72];

  sub_20A5B929C();
  sub_20A4C29C8((uint64_t)v3, a1);
  return sub_20A5B92CC();
}

uint64_t sub_20A4C31B0(uint64_t a1, uint64_t a2)
{
  _BYTE v4[72];

  sub_20A5B929C();
  sub_20A4C29C8((uint64_t)v4, a2);
  return sub_20A5B92CC();
}

void sub_20A4C31F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t TupleTypeMetadata2;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[14];

  v17[5] = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  v17[1] = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_20A5B8D38();
  v17[6] = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v12);
  v17[3] = (char *)v17 - v13;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v17[4] = *(_QWORD *)(TupleTypeMetadata2 - 8);
  MEMORY[0x24BDAC7A8](TupleTypeMetadata2, v15);
  v17[7] = (char *)v17 - v16;
  v17[8] = a3;
  v17[10] = a3;
  v17[11] = a4;
  v17[12] = a5;
  v17[13] = a6;
  v17[2] = a6;
  type metadata accessor for ArmandDeviceDataField();
}

uint64_t sub_20A4C3300(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  char v17;
  void (*v18)(_BYTE *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, _BYTE *, uint64_t);
  uint64_t (*v23)(uint64_t, uint64_t, _QWORD);
  uint64_t v24;
  void (*v25)(_BYTE *, uint64_t);
  char v26;
  void (*v27)(_BYTE *, uint64_t);
  uint64_t v28;
  int v29;
  uint64_t v30;
  void (*v31)(_BYTE *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  void (*v38)(uint64_t, uint64_t);
  void (*v39)(_BYTE *, uint64_t);
  _BYTE v40[96];

  v8 = *(_QWORD *)(a1 - 8);
  v9 = MEMORY[0x24BDAC7A8](a1, a2);
  v11 = &v40[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = MEMORY[0x24BDAC7A8](v9, v12);
  v15 = &v40[-v14];
  v16 = *(int *)(v13 + 52);
  *(_BYTE *)(v6 - 112) = *(_BYTE *)(v4 + v16);
  *(_BYTE *)(v6 - 113) = *(_BYTE *)(v5 + v16);
  v17 = _s17CoreODIEssentials25ArmandDeviceDataErrorCodeO2eeoiySbAC_ACtFZ_0((_BYTE *)(v6 - 112), (unsigned __int8 *)(v6 - 113));
  v18 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16);
  v18(v15, v4, a1);
  v18(v11, v5, a1);
  if ((v17 & 1) == 0)
  {
    v27 = *(void (**)(_BYTE *, uint64_t))(v8 + 8);
    v27(v11, a1);
    v27(v15, a1);
LABEL_9:
    v26 = 0;
    return v26 & 1;
  }
  v19 = v8;
  *(_QWORD *)(v6 - 192) = v2;
  v20 = *(_QWORD *)(v6 - 136);
  v21 = v20 + *(int *)(v2 + 48);
  v22 = *(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v6 - 144) + 16);
  v22(v20, v15, v3);
  v22(v21, v11, v3);
  v23 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v6 - 152) + 48);
  if (v23(v20, 1, *(_QWORD *)(v6 - 128)) != 1)
  {
    v28 = *(_QWORD *)(v6 - 168);
    v22(v28, *(_BYTE **)(v6 - 136), v3);
    v29 = v23(v21, 1, *(_QWORD *)(v6 - 128));
    v30 = *(_QWORD *)(v6 - 152);
    if (v29 != 1)
    {
      v33 = *(_QWORD *)(v6 - 184);
      v34 = v21;
      v35 = v28;
      v36 = *(_QWORD *)(v6 - 128);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 32))(v33, v34, v36);
      v37 = sub_20A5B88E8();
      *(_QWORD *)(v6 - 160) = v3;
      v26 = v37;
      v38 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
      v38(v33, v36);
      v39 = *(void (**)(_BYTE *, uint64_t))(v19 + 8);
      v39(v11, a1);
      v39(v15, a1);
      v38(v35, v36);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v6 - 144) + 8))(*(_QWORD *)(v6 - 136), *(_QWORD *)(v6 - 160));
      return v26 & 1;
    }
    v24 = *(_QWORD *)(v6 - 136);
    v31 = *(void (**)(_BYTE *, uint64_t))(v19 + 8);
    v31(v11, a1);
    v31(v15, a1);
    (*(void (**)(uint64_t, _QWORD))(v30 + 8))(v28, *(_QWORD *)(v6 - 128));
    goto LABEL_8;
  }
  v24 = *(_QWORD *)(v6 - 136);
  v25 = *(void (**)(_BYTE *, uint64_t))(v8 + 8);
  v25(v11, a1);
  v25(v15, a1);
  if (v23(v21, 1, *(_QWORD *)(v6 - 128)) != 1)
  {
LABEL_8:
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v6 - 160) + 8))(v24, *(_QWORD *)(v6 - 192));
    goto LABEL_9;
  }
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 144) + 8))(v24, v3);
  v26 = 1;
  return v26 & 1;
}

void sub_20A4C358C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_20A4C31F0(a1, a2, a3[2], a3[3], a3[4], a3[5]);
}

void sub_20A4C359C()
{
  JUMPOUT(0x20BD26CECLL);
}

uint64_t sub_20A4C35AC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA938);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20A4C35EC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ODIKnownBinding();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void type metadata accessor for ArmandDeviceDataField()
{
  JUMPOUT(0x20BD26C80);
}

uint64_t sub_20A4C3634()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_20A4C363C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_20A5B8D38();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_20A4C36B0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  uint64_t v8;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  if (*(_DWORD *)(v6 + 84))
    v7 = *(_QWORD *)(v6 + 64);
  else
    v7 = *(_QWORD *)(v6 + 64) + 1;
  v8 = *(_DWORD *)(v6 + 80);
  if (v8 > 7 || (*(_DWORD *)(v6 + 80) & 0x100000) != 0 || v7 + 1 > 0x18)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v8 + 16) & ~v8));
    swift_retain();
  }
  else
  {
    if ((*(unsigned int (**)(uint64_t *, uint64_t, _QWORD))(v6 + 48))(a2, 1, *(_QWORD *)(a3 + 16)))
    {
      memcpy(a1, a2, v7);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    }
    *((_BYTE *)a1 + v7) = *((_BYTE *)a2 + v7);
  }
  return a1;
}

uint64_t sub_20A4C3794(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, 1, v3);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return result;
}

void *sub_20A4C37F0(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  size_t v9;
  size_t v10;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    v7 = *(_DWORD *)(v6 + 84);
    v8 = *(_QWORD *)(v6 + 64);
    if (v7)
      v9 = v8;
    else
      v9 = v8 + 1;
    memcpy(a1, a2, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    v7 = *(_DWORD *)(v6 + 84);
    v8 = *(_QWORD *)(v6 + 64);
  }
  if (v7)
    v10 = v8;
  else
    v10 = v8 + 1;
  *((_BYTE *)a1 + v10) = *((_BYTE *)a2 + v10);
  return a1;
}

void *sub_20A4C38A0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void *, uint64_t, uint64_t);
  int v8;
  int v9;
  size_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a1, 1, v5);
  v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 24))(a1, a2, v5);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = *(_QWORD *)(v6 + 64) + 1;
  memcpy(a1, a2, v10);
LABEL_10:
  if (*(_DWORD *)(v6 + 84))
    v11 = *(_QWORD *)(v6 + 64);
  else
    v11 = *(_QWORD *)(v6 + 64) + 1;
  *((_BYTE *)a1 + v11) = *((_BYTE *)a2 + v11);
  return a1;
}

void *sub_20A4C3998(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  size_t v9;
  size_t v10;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    v7 = *(_DWORD *)(v6 + 84);
    v8 = *(_QWORD *)(v6 + 64);
    if (v7)
      v9 = v8;
    else
      v9 = v8 + 1;
    memcpy(a1, a2, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    v7 = *(_DWORD *)(v6 + 84);
    v8 = *(_QWORD *)(v6 + 64);
  }
  if (v7)
    v10 = v8;
  else
    v10 = v8 + 1;
  *((_BYTE *)a1 + v10) = *((_BYTE *)a2 + v10);
  return a1;
}

void *sub_20A4C3A48(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void *, uint64_t, uint64_t);
  int v8;
  int v9;
  size_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a1, 1, v5);
  v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 40))(a1, a2, v5);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = *(_QWORD *)(v6 + 64) + 1;
  memcpy(a1, a2, v10);
LABEL_10:
  if (*(_DWORD *)(v6 + 84))
    v11 = *(_QWORD *)(v6 + 64);
  else
    v11 = *(_QWORD *)(v6 + 64) + 1;
  *((_BYTE *)a1 + v11) = *((_BYTE *)a2 + v11);
  return a1;
}

uint64_t sub_20A4C3B40(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  char v11;
  int v12;
  unsigned int v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5)
    v6 = v5 - 1;
  else
    v6 = 0;
  if (v6 <= 0x26)
    v7 = 38;
  else
    v7 = v6;
  v8 = *(_QWORD *)(v4 + 64);
  if (!v5)
    ++v8;
  if (!a2)
    return 0;
  v9 = a2 - v7;
  if (a2 <= v7)
    goto LABEL_27;
  v10 = v8 + 1;
  v11 = 8 * (v8 + 1);
  if ((v8 + 1) <= 3)
  {
    v14 = ((v9 + ~(-1 << v11)) >> v11) + 1;
    if (HIWORD(v14))
    {
      v12 = *(_DWORD *)(a1 + v10);
      if (!v12)
        goto LABEL_27;
      goto LABEL_20;
    }
    if (v14 > 0xFF)
    {
      v12 = *(unsigned __int16 *)(a1 + v10);
      if (!*(_WORD *)(a1 + v10))
        goto LABEL_27;
      goto LABEL_20;
    }
    if (v14 < 2)
    {
LABEL_27:
      if (v6 < 0x26)
      {
        v17 = *(unsigned __int8 *)(v8 + a1);
        if (v17 >= 0xD1)
          v18 = v17 - 208;
        else
          v18 = 0;
        if (v18 >= 0xA)
          return v18 - 9;
        else
          return 0;
      }
      else
      {
        v16 = (*(uint64_t (**)(void))(v4 + 48))();
        if (v16 >= 2)
          return v16 - 1;
        else
          return 0;
      }
    }
  }
  v12 = *(unsigned __int8 *)(a1 + v10);
  if (!*(_BYTE *)(a1 + v10))
    goto LABEL_27;
LABEL_20:
  v15 = (v12 - 1) << v11;
  if (v10 > 3)
    v15 = 0;
  if ((_DWORD)v8 != -1)
  {
    if (v10 > 3)
      LODWORD(v10) = 4;
    __asm { BR              X12 }
  }
  return v7 + v15 + 1;
}

void sub_20A4C3CAC(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  size_t v12;
  BOOL v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;

  v6 = 0;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  if (v9 <= 0x26)
    v10 = 38;
  else
    v10 = v9;
  v11 = *(_QWORD *)(v7 + 64);
  if (!v8)
    ++v11;
  v12 = v11 + 1;
  v13 = a3 >= v10;
  v14 = a3 - v10;
  if (v14 != 0 && v13)
  {
    if (v12 > 3)
    {
      v6 = 1u;
      if (v10 < a2)
        goto LABEL_19;
      goto LABEL_26;
    }
    v15 = ((v14 + ~(-1 << (8 * v12))) >> (8 * v12)) + 1;
    if (HIWORD(v15))
    {
      v6 = 4u;
      if (v10 < a2)
      {
LABEL_19:
        v16 = ~v10 + a2;
        if (v12 < 4)
        {
          if ((_DWORD)v11 != -1)
          {
            v17 = v16 & ~(-1 << (8 * v12));
            bzero(a1, v12);
            if ((_DWORD)v12 == 3)
            {
              *a1 = v17;
              *((_BYTE *)a1 + 2) = BYTE2(v17);
            }
            else if ((_DWORD)v12 == 2)
            {
              *a1 = v17;
            }
            else
            {
              *(_BYTE *)a1 = v17;
            }
          }
        }
        else
        {
          bzero(a1, v12);
          *(_DWORD *)a1 = v16;
        }
        __asm { BR              X10 }
      }
LABEL_26:
      __asm { BR              X13 }
    }
    if (v15 >= 0x100)
      v6 = 2;
    else
      v6 = v15 > 1;
  }
  if (v10 < a2)
    goto LABEL_19;
  goto LABEL_26;
}

void sub_20A4C3ED8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_20A4C3EE0()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void sub_20A4C3F00()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_20A4C3F10()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_20A4C3F18()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

void type metadata accessor for ArmandDeviceDataField.CodingKeys()
{
  JUMPOUT(0x20BD26C80);
}

unint64_t sub_20A4C3F30()
{
  unint64_t result;

  result = qword_2545FA9C8;
  if (!qword_2545FA9C8)
  {
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for ArmandDeviceDataErrorCode, &type metadata for ArmandDeviceDataErrorCode);
    atomic_store(result, (unint64_t *)&qword_2545FA9C8);
  }
  return result;
}

unint64_t sub_20A4C3F74()
{
  unint64_t result;

  result = qword_2545FA9D0[0];
  if (!qword_2545FA9D0[0])
  {
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for ArmandDeviceDataErrorCode, &type metadata for ArmandDeviceDataErrorCode);
    atomic_store(result, qword_2545FA9D0);
  }
  return result;
}

uint64_t sub_20A4C3FB8()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_20A4C3FC0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_20A4C400C + 4 * byte_20A5C1FAD[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_20A4C4040 + 4 * byte_20A5C1FA8[v4]))();
}

uint64_t sub_20A4C4040(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A4C4048(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A4C4050);
  return result;
}

uint64_t sub_20A4C405C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A4C4064);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_20A4C4068(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A4C4070(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_20A4C407C()
{
  JUMPOUT(0x20BD26CECLL);
}

void sub_20A4C408C()
{
  JUMPOUT(0x20BD26CECLL);
}

void sub_20A4C409C()
{
  JUMPOUT(0x20BD26CECLL);
}

uint64_t type metadata accessor for DeepLink()
{
  return objc_opt_self();
}

uint64_t _s5StateVwxx_0(_QWORD *a1)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t result;
  unint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[14])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (a1[32])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v2 = a1[40];
  if (v2 >> 60 != 15)
    sub_20A44BD90(a1[39], v2);
  if (a1[43])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (a1[61])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v3 = a1[69];
  if (v3 >> 60 != 15)
    sub_20A44BD90(a1[68], v3);
  result = swift_bridgeObjectRelease();
  v5 = a1[73];
  if (v5 >> 60 != 15)
    return sub_20A44BD90(a1[72], v5);
  return result;
}

uint64_t _s5StateVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  uint64_t *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  uint64_t *v49;
  unint64_t v50;
  uint64_t v51;
  _OWORD *v52;
  unint64_t v53;
  uint64_t v54;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  v9 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v9;
  v10 = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v10)
  {
    *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = v10;
    v11 = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 128) = v11;
    v12 = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 144) = v12;
    v13 = *(_QWORD *)(a2 + 160);
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 160) = v13;
    v14 = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 176) = v14;
    v15 = *(_QWORD *)(a2 + 192);
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    *(_QWORD *)(a1 + 192) = v15;
    v16 = *(_QWORD *)(a2 + 208);
    *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
    *(_QWORD *)(a1 + 208) = v16;
    v17 = *(_QWORD *)(a2 + 224);
    *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
    *(_QWORD *)(a1 + 224) = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v18 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v18;
    *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
    v19 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v19;
    v20 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v20;
    v21 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v21;
  }
  v22 = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = v22;
  v23 = *(_QWORD *)(a2 + 256);
  swift_bridgeObjectRetain();
  if (v23)
  {
    *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
    *(_QWORD *)(a1 + 256) = v23;
    v24 = *(_QWORD *)(a2 + 272);
    *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
    *(_QWORD *)(a1 + 272) = v24;
    v25 = *(_QWORD *)(a2 + 288);
    *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
    *(_QWORD *)(a1 + 288) = v25;
    v26 = *(_QWORD *)(a2 + 304);
    *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
    *(_QWORD *)(a1 + 304) = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v27 = *(_OWORD *)(a2 + 264);
    *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
    *(_OWORD *)(a1 + 264) = v27;
    v28 = *(_OWORD *)(a2 + 296);
    *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
    *(_OWORD *)(a1 + 296) = v28;
  }
  v29 = (uint64_t *)(a2 + 312);
  v30 = *(_QWORD *)(a2 + 320);
  if (v30 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 312) = *(_OWORD *)v29;
    v31 = *(_QWORD *)(a2 + 344);
    if (v31)
    {
LABEL_9:
      *(_BYTE *)(a1 + 328) = *(_BYTE *)(a2 + 328);
      *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
      *(_QWORD *)(a1 + 344) = v31;
      v32 = *(_QWORD *)(a2 + 360);
      *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
      *(_QWORD *)(a1 + 360) = v32;
      v33 = *(_QWORD *)(a2 + 376);
      *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
      *(_QWORD *)(a1 + 376) = v33;
      v34 = *(_QWORD *)(a2 + 392);
      *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
      *(_QWORD *)(a1 + 392) = v34;
      v35 = *(_QWORD *)(a2 + 408);
      *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
      *(_QWORD *)(a1 + 408) = v35;
      v36 = *(_QWORD *)(a2 + 424);
      *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
      *(_QWORD *)(a1 + 424) = v36;
      v37 = *(_QWORD *)(a2 + 440);
      *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
      *(_QWORD *)(a1 + 440) = v37;
      v38 = *(_QWORD *)(a2 + 456);
      *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
      *(_QWORD *)(a1 + 456) = v38;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_12;
    }
  }
  else
  {
    v39 = *v29;
    sub_20A45964C(*v29, *(_QWORD *)(a2 + 320));
    *(_QWORD *)(a1 + 312) = v39;
    *(_QWORD *)(a1 + 320) = v30;
    v31 = *(_QWORD *)(a2 + 344);
    if (v31)
      goto LABEL_9;
  }
  v40 = *(_OWORD *)(a2 + 440);
  *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 424);
  *(_OWORD *)(a1 + 440) = v40;
  *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
  v41 = *(_OWORD *)(a2 + 376);
  *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
  *(_OWORD *)(a1 + 376) = v41;
  v42 = *(_OWORD *)(a2 + 408);
  *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
  *(_OWORD *)(a1 + 408) = v42;
  v43 = *(_OWORD *)(a2 + 344);
  *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
  *(_OWORD *)(a1 + 344) = v43;
LABEL_12:
  v44 = *(_QWORD *)(a2 + 472);
  *(_QWORD *)(a1 + 464) = *(_QWORD *)(a2 + 464);
  *(_QWORD *)(a1 + 472) = v44;
  v45 = *(_QWORD *)(a2 + 488);
  swift_bridgeObjectRetain();
  if (v45)
  {
    *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
    *(_QWORD *)(a1 + 488) = v45;
    v46 = *(_QWORD *)(a2 + 504);
    *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
    *(_QWORD *)(a1 + 504) = v46;
    *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
    *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
    *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
    *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v47 = *(_OWORD *)(a2 + 496);
    *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
    *(_OWORD *)(a1 + 496) = v47;
    v48 = *(_OWORD *)(a2 + 528);
    *(_OWORD *)(a1 + 512) = *(_OWORD *)(a2 + 512);
    *(_OWORD *)(a1 + 528) = v48;
  }
  v49 = (uint64_t *)(a2 + 544);
  v50 = *(_QWORD *)(a2 + 552);
  if (v50 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 544) = *(_OWORD *)v49;
  }
  else
  {
    v51 = *v49;
    sub_20A45964C(*v49, *(_QWORD *)(a2 + 552));
    *(_QWORD *)(a1 + 544) = v51;
    *(_QWORD *)(a1 + 552) = v50;
  }
  *(_BYTE *)(a1 + 560) = *(_BYTE *)(a2 + 560);
  *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
  v52 = (_OWORD *)(a2 + 576);
  v53 = *(_QWORD *)(a2 + 584);
  swift_bridgeObjectRetain();
  if (v53 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 576) = *v52;
  }
  else
  {
    v54 = *(_QWORD *)v52;
    sub_20A45964C(v54, v53);
    *(_QWORD *)(a1 + 576) = v54;
    *(_QWORD *)(a1 + 584) = v53;
  }
  *(_WORD *)(a1 + 592) = *(_WORD *)(a2 + 592);
  return a1;
}

uint64_t _s5StateVwca_0(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _OWORD *v19;
  __int128 *v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  _OWORD *v34;
  _OWORD *v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  _OWORD *v49;
  __int128 *v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  uint64_t *v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  _BYTE *v64;
  uint64_t *v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 96);
  v5 = (_OWORD *)(a2 + 96);
  v6 = *(_QWORD *)(a2 + 112);
  if (*(_QWORD *)(a1 + 112))
  {
    if (v6)
    {
      *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
      *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
      *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_20A4AF9C4(a1 + 96);
      *v4 = *v5;
      v7 = *(_OWORD *)(a2 + 160);
      v9 = *(_OWORD *)(a2 + 112);
      v8 = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 160) = v7;
      *(_OWORD *)(a1 + 112) = v9;
      *(_OWORD *)(a1 + 128) = v8;
      v11 = *(_OWORD *)(a2 + 192);
      v10 = *(_OWORD *)(a2 + 208);
      v12 = *(_OWORD *)(a2 + 176);
      *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
      *(_OWORD *)(a1 + 192) = v11;
      *(_OWORD *)(a1 + 208) = v10;
      *(_OWORD *)(a1 + 176) = v12;
    }
  }
  else if (v6)
  {
    *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
    *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
    *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
    *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
    *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *v4 = *v5;
    v13 = *(_OWORD *)(a2 + 112);
    v14 = *(_OWORD *)(a2 + 128);
    v15 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v15;
    *(_OWORD *)(a1 + 112) = v13;
    *(_OWORD *)(a1 + 128) = v14;
    v16 = *(_OWORD *)(a2 + 176);
    v17 = *(_OWORD *)(a2 + 192);
    v18 = *(_OWORD *)(a2 + 208);
    *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 192) = v17;
    *(_OWORD *)(a1 + 208) = v18;
    *(_OWORD *)(a1 + 176) = v16;
  }
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = (_OWORD *)(a1 + 248);
  v20 = (__int128 *)(a2 + 248);
  v21 = *(_QWORD *)(a2 + 256);
  if (*(_QWORD *)(a1 + 256))
  {
    if (v21)
    {
      *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
      *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
      *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
      *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
      *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_20A464794(a1 + 248);
      v22 = *(_OWORD *)(a2 + 296);
      v24 = *v20;
      v23 = *(_OWORD *)(a2 + 264);
      *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
      *(_OWORD *)(a1 + 296) = v22;
      *v19 = v24;
      *(_OWORD *)(a1 + 264) = v23;
    }
  }
  else if (v21)
  {
    *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
    *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
    *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
    *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
    *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
    *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
    *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
    *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v25 = *v20;
    v26 = *(_OWORD *)(a2 + 264);
    v27 = *(_OWORD *)(a2 + 296);
    *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
    *(_OWORD *)(a1 + 296) = v27;
    *v19 = v25;
    *(_OWORD *)(a1 + 264) = v26;
  }
  v28 = (uint64_t *)(a2 + 312);
  v29 = *(_QWORD *)(a2 + 320);
  if (*(_QWORD *)(a1 + 320) >> 60 == 15)
  {
    if (v29 >> 60 != 15)
    {
      v30 = *v28;
      sub_20A45964C(*v28, *(_QWORD *)(a2 + 320));
      *(_QWORD *)(a1 + 312) = v30;
      *(_QWORD *)(a1 + 320) = v29;
      goto LABEL_22;
    }
    goto LABEL_20;
  }
  if (v29 >> 60 == 15)
  {
    sub_20A45A1A8(a1 + 312);
LABEL_20:
    *(_OWORD *)(a1 + 312) = *(_OWORD *)v28;
    goto LABEL_22;
  }
  v31 = *v28;
  sub_20A45964C(*v28, *(_QWORD *)(a2 + 320));
  v32 = *(_QWORD *)(a1 + 312);
  v33 = *(_QWORD *)(a1 + 320);
  *(_QWORD *)(a1 + 312) = v31;
  *(_QWORD *)(a1 + 320) = v29;
  sub_20A44BD90(v32, v33);
LABEL_22:
  v34 = (_OWORD *)(a1 + 328);
  v35 = (_OWORD *)(a2 + 328);
  v36 = *(_QWORD *)(a2 + 344);
  if (*(_QWORD *)(a1 + 344))
  {
    if (v36)
    {
      *(_BYTE *)(a1 + 328) = *(_BYTE *)(a2 + 328);
      *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
      *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
      *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
      *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
      *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
      *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
      *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
      *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
      *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_20A4AF9C4(a1 + 328);
      *v34 = *v35;
      v37 = *(_OWORD *)(a2 + 392);
      v39 = *(_OWORD *)(a2 + 344);
      v38 = *(_OWORD *)(a2 + 360);
      *(_OWORD *)(a1 + 376) = *(_OWORD *)(a2 + 376);
      *(_OWORD *)(a1 + 392) = v37;
      *(_OWORD *)(a1 + 344) = v39;
      *(_OWORD *)(a1 + 360) = v38;
      v41 = *(_OWORD *)(a2 + 424);
      v40 = *(_OWORD *)(a2 + 440);
      v42 = *(_OWORD *)(a2 + 408);
      *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
      *(_OWORD *)(a1 + 424) = v41;
      *(_OWORD *)(a1 + 440) = v40;
      *(_OWORD *)(a1 + 408) = v42;
    }
  }
  else if (v36)
  {
    *(_BYTE *)(a1 + 328) = *(_BYTE *)(a2 + 328);
    *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
    *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
    *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
    *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
    *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
    *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
    *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
    *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
    *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
    *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
    *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
    *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
    *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
    *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
    *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
    *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *v34 = *v35;
    v43 = *(_OWORD *)(a2 + 344);
    v44 = *(_OWORD *)(a2 + 360);
    v45 = *(_OWORD *)(a2 + 392);
    *(_OWORD *)(a1 + 376) = *(_OWORD *)(a2 + 376);
    *(_OWORD *)(a1 + 392) = v45;
    *(_OWORD *)(a1 + 344) = v43;
    *(_OWORD *)(a1 + 360) = v44;
    v46 = *(_OWORD *)(a2 + 408);
    v47 = *(_OWORD *)(a2 + 424);
    v48 = *(_OWORD *)(a2 + 440);
    *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
    *(_OWORD *)(a1 + 424) = v47;
    *(_OWORD *)(a1 + 440) = v48;
    *(_OWORD *)(a1 + 408) = v46;
  }
  *(_QWORD *)(a1 + 464) = *(_QWORD *)(a2 + 464);
  *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v49 = (_OWORD *)(a1 + 480);
  v50 = (__int128 *)(a2 + 480);
  v51 = *(_QWORD *)(a2 + 488);
  if (*(_QWORD *)(a1 + 488))
  {
    if (v51)
    {
      *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
      *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
      *(_QWORD *)(a1 + 504) = *(_QWORD *)(a2 + 504);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
      *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
      *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_20A464794(a1 + 480);
      v52 = *(_OWORD *)(a2 + 528);
      v54 = *v50;
      v53 = *(_OWORD *)(a2 + 496);
      *(_OWORD *)(a1 + 512) = *(_OWORD *)(a2 + 512);
      *(_OWORD *)(a1 + 528) = v52;
      *v49 = v54;
      *(_OWORD *)(a1 + 496) = v53;
    }
  }
  else if (v51)
  {
    *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
    *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
    *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
    *(_QWORD *)(a1 + 504) = *(_QWORD *)(a2 + 504);
    *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
    *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
    *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
    *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v55 = *v50;
    v56 = *(_OWORD *)(a2 + 496);
    v57 = *(_OWORD *)(a2 + 528);
    *(_OWORD *)(a1 + 512) = *(_OWORD *)(a2 + 512);
    *(_OWORD *)(a1 + 528) = v57;
    *v49 = v55;
    *(_OWORD *)(a1 + 496) = v56;
  }
  v58 = (uint64_t *)(a2 + 544);
  v59 = *(_QWORD *)(a2 + 552);
  if (*(_QWORD *)(a1 + 552) >> 60 == 15)
  {
    if (v59 >> 60 != 15)
    {
      v60 = *v58;
      sub_20A45964C(*v58, *(_QWORD *)(a2 + 552));
      *(_QWORD *)(a1 + 544) = v60;
      *(_QWORD *)(a1 + 552) = v59;
      goto LABEL_43;
    }
    goto LABEL_41;
  }
  if (v59 >> 60 == 15)
  {
    sub_20A45A1A8(a1 + 544);
LABEL_41:
    *(_OWORD *)(a1 + 544) = *(_OWORD *)v58;
    goto LABEL_43;
  }
  v61 = *v58;
  sub_20A45964C(*v58, *(_QWORD *)(a2 + 552));
  v62 = *(_QWORD *)(a1 + 544);
  v63 = *(_QWORD *)(a1 + 552);
  *(_QWORD *)(a1 + 544) = v61;
  *(_QWORD *)(a1 + 552) = v59;
  sub_20A44BD90(v62, v63);
LABEL_43:
  v64 = (_BYTE *)(a2 + 592);
  *(_BYTE *)(a1 + 560) = *(_BYTE *)(a2 + 560);
  *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v65 = (uint64_t *)(a2 + 576);
  v66 = *(_QWORD *)(a2 + 584);
  if (*(_QWORD *)(a1 + 584) >> 60 != 15)
  {
    if (v66 >> 60 != 15)
    {
      v68 = *v65;
      sub_20A45964C(*v65, v66);
      v69 = *(_QWORD *)(a1 + 576);
      v70 = *(_QWORD *)(a1 + 584);
      *(_QWORD *)(a1 + 576) = v68;
      *(_QWORD *)(a1 + 584) = v66;
      sub_20A44BD90(v69, v70);
      goto LABEL_50;
    }
    sub_20A45A1A8(a1 + 576);
    goto LABEL_48;
  }
  if (v66 >> 60 == 15)
  {
LABEL_48:
    *(_OWORD *)(a1 + 576) = *(_OWORD *)v65;
    goto LABEL_50;
  }
  v67 = *v65;
  sub_20A45964C(*v65, v66);
  *(_QWORD *)(a1 + 576) = v67;
  *(_QWORD *)(a1 + 584) = v66;
LABEL_50:
  *(_BYTE *)(a1 + 592) = *v64;
  *(_BYTE *)(a1 + 593) = v64[1];
  return a1;
}

void *__swift_memcpy594_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x252uLL);
}

uint64_t _s5StateVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  _OWORD *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  _OWORD *v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 112))
  {
    v10 = *(_QWORD *)(a2 + 112);
    if (v10)
    {
      *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = v10;
      swift_bridgeObjectRelease();
      v11 = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = v11;
      swift_bridgeObjectRelease();
      v12 = *(_QWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 144) = v12;
      swift_bridgeObjectRelease();
      v13 = *(_QWORD *)(a2 + 160);
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 160) = v13;
      swift_bridgeObjectRelease();
      v14 = *(_QWORD *)(a2 + 176);
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      *(_QWORD *)(a1 + 176) = v14;
      swift_bridgeObjectRelease();
      v15 = *(_QWORD *)(a2 + 192);
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      *(_QWORD *)(a1 + 192) = v15;
      swift_bridgeObjectRelease();
      v16 = *(_QWORD *)(a2 + 208);
      *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
      *(_QWORD *)(a1 + 208) = v16;
      swift_bridgeObjectRelease();
      v17 = *(_QWORD *)(a2 + 224);
      *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
      *(_QWORD *)(a1 + 224) = v17;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_20A4AF9C4(a1 + 96);
  }
  v18 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v18;
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  v19 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v19;
  v20 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v20;
  v21 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v21;
LABEL_6:
  v22 = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = v22;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 256))
  {
    v23 = *(_QWORD *)(a2 + 256);
    if (v23)
    {
      *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
      *(_QWORD *)(a1 + 256) = v23;
      swift_bridgeObjectRelease();
      v24 = *(_QWORD *)(a2 + 272);
      *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
      *(_QWORD *)(a1 + 272) = v24;
      swift_bridgeObjectRelease();
      v25 = *(_QWORD *)(a2 + 288);
      *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
      *(_QWORD *)(a1 + 288) = v25;
      swift_bridgeObjectRelease();
      v26 = *(_QWORD *)(a2 + 304);
      *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
      *(_QWORD *)(a1 + 304) = v26;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_20A464794(a1 + 248);
  }
  v27 = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 264) = v27;
  v28 = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 296) = v28;
LABEL_11:
  v29 = (_OWORD *)(a2 + 312);
  v30 = *(_QWORD *)(a1 + 320);
  if (v30 >> 60 == 15)
  {
LABEL_14:
    *(_OWORD *)(a1 + 312) = *v29;
    goto LABEL_16;
  }
  v31 = *(_QWORD *)(a2 + 320);
  if (v31 >> 60 == 15)
  {
    sub_20A45A1A8(a1 + 312);
    goto LABEL_14;
  }
  v32 = *(_QWORD *)(a1 + 312);
  *(_QWORD *)(a1 + 312) = *(_QWORD *)v29;
  *(_QWORD *)(a1 + 320) = v31;
  sub_20A44BD90(v32, v30);
LABEL_16:
  if (*(_QWORD *)(a1 + 344))
  {
    v33 = *(_QWORD *)(a2 + 344);
    if (v33)
    {
      *(_BYTE *)(a1 + 328) = *(_BYTE *)(a2 + 328);
      *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
      *(_QWORD *)(a1 + 344) = v33;
      swift_bridgeObjectRelease();
      v34 = *(_QWORD *)(a2 + 360);
      *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
      *(_QWORD *)(a1 + 360) = v34;
      swift_bridgeObjectRelease();
      v35 = *(_QWORD *)(a2 + 376);
      *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
      *(_QWORD *)(a1 + 376) = v35;
      swift_bridgeObjectRelease();
      v36 = *(_QWORD *)(a2 + 392);
      *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
      *(_QWORD *)(a1 + 392) = v36;
      swift_bridgeObjectRelease();
      v37 = *(_QWORD *)(a2 + 408);
      *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
      *(_QWORD *)(a1 + 408) = v37;
      swift_bridgeObjectRelease();
      v38 = *(_QWORD *)(a2 + 424);
      *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
      *(_QWORD *)(a1 + 424) = v38;
      swift_bridgeObjectRelease();
      v39 = *(_QWORD *)(a2 + 440);
      *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
      *(_QWORD *)(a1 + 440) = v39;
      swift_bridgeObjectRelease();
      v40 = *(_QWORD *)(a2 + 456);
      *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
      *(_QWORD *)(a1 + 456) = v40;
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    sub_20A4AF9C4(a1 + 328);
  }
  v41 = *(_OWORD *)(a2 + 440);
  *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 424);
  *(_OWORD *)(a1 + 440) = v41;
  *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
  v42 = *(_OWORD *)(a2 + 376);
  *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
  *(_OWORD *)(a1 + 376) = v42;
  v43 = *(_OWORD *)(a2 + 408);
  *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
  *(_OWORD *)(a1 + 408) = v43;
  v44 = *(_OWORD *)(a2 + 344);
  *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
  *(_OWORD *)(a1 + 344) = v44;
LABEL_21:
  v45 = *(_QWORD *)(a2 + 472);
  *(_QWORD *)(a1 + 464) = *(_QWORD *)(a2 + 464);
  *(_QWORD *)(a1 + 472) = v45;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 488))
  {
    v46 = *(_QWORD *)(a2 + 488);
    if (v46)
    {
      *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
      *(_QWORD *)(a1 + 488) = v46;
      swift_bridgeObjectRelease();
      v47 = *(_QWORD *)(a2 + 504);
      *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
      *(_QWORD *)(a1 + 504) = v47;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
      *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
      *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
      swift_bridgeObjectRelease();
      goto LABEL_26;
    }
    sub_20A464794(a1 + 480);
  }
  v48 = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 496) = v48;
  v49 = *(_OWORD *)(a2 + 528);
  *(_OWORD *)(a1 + 512) = *(_OWORD *)(a2 + 512);
  *(_OWORD *)(a1 + 528) = v49;
LABEL_26:
  v50 = (_OWORD *)(a2 + 544);
  v51 = *(_QWORD *)(a1 + 552);
  if (v51 >> 60 == 15)
  {
LABEL_29:
    *(_OWORD *)(a1 + 544) = *v50;
    goto LABEL_31;
  }
  v52 = *(_QWORD *)(a2 + 552);
  if (v52 >> 60 == 15)
  {
    sub_20A45A1A8(a1 + 544);
    goto LABEL_29;
  }
  v53 = *(_QWORD *)(a1 + 544);
  *(_QWORD *)(a1 + 544) = *(_QWORD *)v50;
  *(_QWORD *)(a1 + 552) = v52;
  sub_20A44BD90(v53, v51);
LABEL_31:
  *(_BYTE *)(a1 + 560) = *(_BYTE *)(a2 + 560);
  *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
  swift_bridgeObjectRelease();
  v54 = (_QWORD *)(a2 + 576);
  v55 = *(_QWORD *)(a1 + 584);
  if (v55 >> 60 != 15)
  {
    v56 = *(_QWORD *)(a2 + 584);
    if (v56 >> 60 != 15)
    {
      v57 = *(_QWORD *)(a1 + 576);
      *(_QWORD *)(a1 + 576) = *v54;
      *(_QWORD *)(a1 + 584) = v56;
      sub_20A44BD90(v57, v55);
      goto LABEL_36;
    }
    sub_20A45A1A8(a1 + 576);
  }
  *(_OWORD *)(a1 + 576) = *(_OWORD *)v54;
LABEL_36:
  *(_BYTE *)(a1 + 592) = *(_BYTE *)(a2 + 592);
  *(_BYTE *)(a1 + 593) = *(_BYTE *)(a2 + 593);
  return a1;
}

uint64_t _s5StateVwet_0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 594))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s5StateVwst_0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 584) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 592) = 0;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 594) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 594) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s5StateVMa_0()
{
  return &_s5StateVN_0;
}

uint64_t _s26ODNAssessmentGUIDContainerVwxx(_QWORD *a1)
{
  unint64_t v2;
  uint64_t result;
  unint64_t v4;

  if (a1[2])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (a1[20])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v2 = a1[28];
  if (v2 >> 60 != 15)
    sub_20A44BD90(a1[27], v2);
  if (a1[31])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  result = a1[49];
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  v4 = a1[57];
  if (v4 >> 60 != 15)
    return sub_20A44BD90(a1[56], v4);
  return result;
}

uint64_t _s26ODNAssessmentGUIDContainerVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  uint64_t *v45;
  unint64_t v46;
  uint64_t v47;

  v4 = *(_QWORD *)(a2 + 16);
  if (v4)
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = v4;
    v5 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = v5;
    v6 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = v6;
    v7 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = v7;
    v8 = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = v8;
    v9 = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = v9;
    v10 = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = v10;
    v11 = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 128) = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v12 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v12;
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    v13 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v13;
    v14 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v14;
    v15 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v15;
  }
  v16 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v16;
  v17 = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRetain();
  if (v17)
  {
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 160) = v17;
    v18 = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 176) = v18;
    v19 = *(_QWORD *)(a2 + 192);
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    *(_QWORD *)(a1 + 192) = v19;
    v20 = *(_QWORD *)(a2 + 208);
    *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
    *(_QWORD *)(a1 + 208) = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v21 = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 168) = v21;
    v22 = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 200) = v22;
  }
  v23 = (uint64_t *)(a2 + 216);
  v24 = *(_QWORD *)(a2 + 224);
  if (v24 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 216) = *(_OWORD *)v23;
    v25 = *(_QWORD *)(a2 + 248);
    if (v25)
    {
LABEL_9:
      *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
      *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
      *(_QWORD *)(a1 + 248) = v25;
      v26 = *(_QWORD *)(a2 + 264);
      *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
      *(_QWORD *)(a1 + 264) = v26;
      v27 = *(_QWORD *)(a2 + 280);
      *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
      *(_QWORD *)(a1 + 280) = v27;
      v28 = *(_QWORD *)(a2 + 296);
      *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
      *(_QWORD *)(a1 + 296) = v28;
      v29 = *(_QWORD *)(a2 + 312);
      *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
      *(_QWORD *)(a1 + 312) = v29;
      v30 = *(_QWORD *)(a2 + 328);
      *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
      *(_QWORD *)(a1 + 328) = v30;
      v31 = *(_QWORD *)(a2 + 344);
      *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
      *(_QWORD *)(a1 + 344) = v31;
      v32 = *(_QWORD *)(a2 + 360);
      *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
      *(_QWORD *)(a1 + 360) = v32;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_12;
    }
  }
  else
  {
    v33 = *v23;
    sub_20A45964C(*v23, *(_QWORD *)(a2 + 224));
    *(_QWORD *)(a1 + 216) = v33;
    *(_QWORD *)(a1 + 224) = v24;
    v25 = *(_QWORD *)(a2 + 248);
    if (v25)
      goto LABEL_9;
  }
  v34 = *(_OWORD *)(a2 + 344);
  *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
  *(_OWORD *)(a1 + 344) = v34;
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  v35 = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 280) = v35;
  v36 = *(_OWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 312) = v36;
  v37 = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = v37;
LABEL_12:
  v38 = *(_QWORD *)(a2 + 376);
  *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
  *(_QWORD *)(a1 + 376) = v38;
  v39 = *(_QWORD *)(a2 + 392);
  swift_bridgeObjectRetain();
  if (v39)
  {
    *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
    *(_QWORD *)(a1 + 392) = v39;
    v40 = *(_QWORD *)(a2 + 408);
    *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
    *(_QWORD *)(a1 + 408) = v40;
    v41 = *(_QWORD *)(a2 + 424);
    *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
    *(_QWORD *)(a1 + 424) = v41;
    v42 = *(_QWORD *)(a2 + 440);
    *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
    *(_QWORD *)(a1 + 440) = v42;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v43 = *(_OWORD *)(a2 + 400);
    *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
    *(_OWORD *)(a1 + 400) = v43;
    v44 = *(_OWORD *)(a2 + 432);
    *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
    *(_OWORD *)(a1 + 432) = v44;
  }
  v45 = (uint64_t *)(a2 + 448);
  v46 = *(_QWORD *)(a2 + 456);
  if (v46 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 448) = *(_OWORD *)v45;
  }
  else
  {
    v47 = *v45;
    sub_20A45964C(*v45, v46);
    *(_QWORD *)(a1 + 448) = v47;
    *(_QWORD *)(a1 + 456) = v46;
  }
  return a1;
}

uint64_t _s26ODNAssessmentGUIDContainerVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _OWORD *v17;
  __int128 *v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  _OWORD *v32;
  _OWORD *v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  _OWORD *v47;
  __int128 *v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint64_t *v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;

  v4 = *(_QWORD *)(a2 + 16);
  if (*(_QWORD *)(a1 + 16))
  {
    if (v4)
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_20A4AF9C4(a1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v5 = *(_OWORD *)(a2 + 64);
      v7 = *(_OWORD *)(a2 + 16);
      v6 = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 64) = v5;
      *(_OWORD *)(a1 + 16) = v7;
      *(_OWORD *)(a1 + 32) = v6;
      v9 = *(_OWORD *)(a2 + 96);
      v8 = *(_OWORD *)(a2 + 112);
      v10 = *(_OWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 96) = v9;
      *(_OWORD *)(a1 + 112) = v8;
      *(_OWORD *)(a1 + 80) = v10;
    }
  }
  else if (v4)
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v11 = *(_OWORD *)(a2 + 16);
    v12 = *(_OWORD *)(a2 + 32);
    v13 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v13;
    *(_OWORD *)(a1 + 16) = v11;
    *(_OWORD *)(a1 + 32) = v12;
    v14 = *(_OWORD *)(a2 + 80);
    v15 = *(_OWORD *)(a2 + 96);
    v16 = *(_OWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 96) = v15;
    *(_OWORD *)(a1 + 112) = v16;
    *(_OWORD *)(a1 + 80) = v14;
  }
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = (_OWORD *)(a1 + 152);
  v18 = (__int128 *)(a2 + 152);
  v19 = *(_QWORD *)(a2 + 160);
  if (*(_QWORD *)(a1 + 160))
  {
    if (v19)
    {
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
      *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_20A464794(a1 + 152);
      v20 = *(_OWORD *)(a2 + 200);
      v22 = *v18;
      v21 = *(_OWORD *)(a2 + 168);
      *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
      *(_OWORD *)(a1 + 200) = v20;
      *v17 = v22;
      *(_OWORD *)(a1 + 168) = v21;
    }
  }
  else if (v19)
  {
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
    *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
    *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v23 = *v18;
    v24 = *(_OWORD *)(a2 + 168);
    v25 = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 200) = v25;
    *v17 = v23;
    *(_OWORD *)(a1 + 168) = v24;
  }
  v26 = (uint64_t *)(a2 + 216);
  v27 = *(_QWORD *)(a2 + 224);
  if (*(_QWORD *)(a1 + 224) >> 60 == 15)
  {
    if (v27 >> 60 != 15)
    {
      v28 = *v26;
      sub_20A45964C(*v26, *(_QWORD *)(a2 + 224));
      *(_QWORD *)(a1 + 216) = v28;
      *(_QWORD *)(a1 + 224) = v27;
      goto LABEL_22;
    }
    goto LABEL_20;
  }
  if (v27 >> 60 == 15)
  {
    sub_20A45A1A8(a1 + 216);
LABEL_20:
    *(_OWORD *)(a1 + 216) = *(_OWORD *)v26;
    goto LABEL_22;
  }
  v29 = *v26;
  sub_20A45964C(*v26, *(_QWORD *)(a2 + 224));
  v30 = *(_QWORD *)(a1 + 216);
  v31 = *(_QWORD *)(a1 + 224);
  *(_QWORD *)(a1 + 216) = v29;
  *(_QWORD *)(a1 + 224) = v27;
  sub_20A44BD90(v30, v31);
LABEL_22:
  v32 = (_OWORD *)(a1 + 232);
  v33 = (_OWORD *)(a2 + 232);
  v34 = *(_QWORD *)(a2 + 248);
  if (*(_QWORD *)(a1 + 248))
  {
    if (v34)
    {
      *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
      *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
      *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
      *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
      *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
      *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
      *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
      *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
      *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
      *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_20A4AF9C4(a1 + 232);
      *v32 = *v33;
      v35 = *(_OWORD *)(a2 + 296);
      v37 = *(_OWORD *)(a2 + 248);
      v36 = *(_OWORD *)(a2 + 264);
      *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
      *(_OWORD *)(a1 + 296) = v35;
      *(_OWORD *)(a1 + 248) = v37;
      *(_OWORD *)(a1 + 264) = v36;
      v39 = *(_OWORD *)(a2 + 328);
      v38 = *(_OWORD *)(a2 + 344);
      v40 = *(_OWORD *)(a2 + 312);
      *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
      *(_OWORD *)(a1 + 328) = v39;
      *(_OWORD *)(a1 + 344) = v38;
      *(_OWORD *)(a1 + 312) = v40;
    }
  }
  else if (v34)
  {
    *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
    *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
    *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
    *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
    *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
    *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
    *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
    *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
    *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
    *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
    *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
    *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
    *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
    *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
    *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
    *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
    *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *v32 = *v33;
    v41 = *(_OWORD *)(a2 + 248);
    v42 = *(_OWORD *)(a2 + 264);
    v43 = *(_OWORD *)(a2 + 296);
    *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
    *(_OWORD *)(a1 + 296) = v43;
    *(_OWORD *)(a1 + 248) = v41;
    *(_OWORD *)(a1 + 264) = v42;
    v44 = *(_OWORD *)(a2 + 312);
    v45 = *(_OWORD *)(a2 + 328);
    v46 = *(_OWORD *)(a2 + 344);
    *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
    *(_OWORD *)(a1 + 328) = v45;
    *(_OWORD *)(a1 + 344) = v46;
    *(_OWORD *)(a1 + 312) = v44;
  }
  *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v47 = (_OWORD *)(a1 + 384);
  v48 = (__int128 *)(a2 + 384);
  v49 = *(_QWORD *)(a2 + 392);
  if (*(_QWORD *)(a1 + 392))
  {
    if (v49)
    {
      *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
      *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
      *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
      *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
      *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_20A464794(a1 + 384);
      v50 = *(_OWORD *)(a2 + 432);
      v52 = *v48;
      v51 = *(_OWORD *)(a2 + 400);
      *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
      *(_OWORD *)(a1 + 432) = v50;
      *v47 = v52;
      *(_OWORD *)(a1 + 400) = v51;
    }
  }
  else if (v49)
  {
    *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
    *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
    *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
    *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
    *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
    *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
    *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
    *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v53 = *v48;
    v54 = *(_OWORD *)(a2 + 400);
    v55 = *(_OWORD *)(a2 + 432);
    *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
    *(_OWORD *)(a1 + 432) = v55;
    *v47 = v53;
    *(_OWORD *)(a1 + 400) = v54;
  }
  v56 = (uint64_t *)(a2 + 448);
  v57 = *(_QWORD *)(a2 + 456);
  if (*(_QWORD *)(a1 + 456) >> 60 != 15)
  {
    if (v57 >> 60 != 15)
    {
      v59 = *v56;
      sub_20A45964C(*v56, v57);
      v60 = *(_QWORD *)(a1 + 448);
      v61 = *(_QWORD *)(a1 + 456);
      *(_QWORD *)(a1 + 448) = v59;
      *(_QWORD *)(a1 + 456) = v57;
      sub_20A44BD90(v60, v61);
      return a1;
    }
    sub_20A45A1A8(a1 + 448);
    goto LABEL_41;
  }
  if (v57 >> 60 == 15)
  {
LABEL_41:
    *(_OWORD *)(a1 + 448) = *(_OWORD *)v56;
    return a1;
  }
  v58 = *v56;
  sub_20A45964C(*v56, v57);
  *(_QWORD *)(a1 + 448) = v58;
  *(_QWORD *)(a1 + 456) = v57;
  return a1;
}

void *__swift_memcpy464_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x1D0uLL);
}

uint64_t _s26ODNAssessmentGUIDContainerVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  _OWORD *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  _QWORD *v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;

  if (*(_QWORD *)(a1 + 16))
  {
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = v4;
      swift_bridgeObjectRelease();
      v5 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = v5;
      swift_bridgeObjectRelease();
      v6 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = v6;
      swift_bridgeObjectRelease();
      v7 = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = v7;
      swift_bridgeObjectRelease();
      v8 = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = v8;
      swift_bridgeObjectRelease();
      v9 = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = v9;
      swift_bridgeObjectRelease();
      v10 = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = v10;
      swift_bridgeObjectRelease();
      v11 = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = v11;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_20A4AF9C4(a1);
  }
  v12 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v12;
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  v13 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v13;
  v14 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v14;
  v15 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v15;
LABEL_6:
  v16 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v16;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 160))
  {
    v17 = *(_QWORD *)(a2 + 160);
    if (v17)
    {
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 160) = v17;
      swift_bridgeObjectRelease();
      v18 = *(_QWORD *)(a2 + 176);
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      *(_QWORD *)(a1 + 176) = v18;
      swift_bridgeObjectRelease();
      v19 = *(_QWORD *)(a2 + 192);
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      *(_QWORD *)(a1 + 192) = v19;
      swift_bridgeObjectRelease();
      v20 = *(_QWORD *)(a2 + 208);
      *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
      *(_QWORD *)(a1 + 208) = v20;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_20A464794(a1 + 152);
  }
  v21 = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = v21;
  v22 = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = v22;
LABEL_11:
  v23 = (_OWORD *)(a2 + 216);
  v24 = *(_QWORD *)(a1 + 224);
  if (v24 >> 60 == 15)
  {
LABEL_14:
    *(_OWORD *)(a1 + 216) = *v23;
    goto LABEL_16;
  }
  v25 = *(_QWORD *)(a2 + 224);
  if (v25 >> 60 == 15)
  {
    sub_20A45A1A8(a1 + 216);
    goto LABEL_14;
  }
  v26 = *(_QWORD *)(a1 + 216);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)v23;
  *(_QWORD *)(a1 + 224) = v25;
  sub_20A44BD90(v26, v24);
LABEL_16:
  if (*(_QWORD *)(a1 + 248))
  {
    v27 = *(_QWORD *)(a2 + 248);
    if (v27)
    {
      *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
      *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
      *(_QWORD *)(a1 + 248) = v27;
      swift_bridgeObjectRelease();
      v28 = *(_QWORD *)(a2 + 264);
      *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
      *(_QWORD *)(a1 + 264) = v28;
      swift_bridgeObjectRelease();
      v29 = *(_QWORD *)(a2 + 280);
      *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
      *(_QWORD *)(a1 + 280) = v29;
      swift_bridgeObjectRelease();
      v30 = *(_QWORD *)(a2 + 296);
      *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
      *(_QWORD *)(a1 + 296) = v30;
      swift_bridgeObjectRelease();
      v31 = *(_QWORD *)(a2 + 312);
      *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
      *(_QWORD *)(a1 + 312) = v31;
      swift_bridgeObjectRelease();
      v32 = *(_QWORD *)(a2 + 328);
      *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
      *(_QWORD *)(a1 + 328) = v32;
      swift_bridgeObjectRelease();
      v33 = *(_QWORD *)(a2 + 344);
      *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
      *(_QWORD *)(a1 + 344) = v33;
      swift_bridgeObjectRelease();
      v34 = *(_QWORD *)(a2 + 360);
      *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
      *(_QWORD *)(a1 + 360) = v34;
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    sub_20A4AF9C4(a1 + 232);
  }
  v35 = *(_OWORD *)(a2 + 344);
  *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
  *(_OWORD *)(a1 + 344) = v35;
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  v36 = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 280) = v36;
  v37 = *(_OWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 312) = v37;
  v38 = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = v38;
LABEL_21:
  v39 = *(_QWORD *)(a2 + 376);
  *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
  *(_QWORD *)(a1 + 376) = v39;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 392))
  {
    v40 = *(_QWORD *)(a2 + 392);
    if (v40)
    {
      *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
      *(_QWORD *)(a1 + 392) = v40;
      swift_bridgeObjectRelease();
      v41 = *(_QWORD *)(a2 + 408);
      *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
      *(_QWORD *)(a1 + 408) = v41;
      swift_bridgeObjectRelease();
      v42 = *(_QWORD *)(a2 + 424);
      *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
      *(_QWORD *)(a1 + 424) = v42;
      swift_bridgeObjectRelease();
      v43 = *(_QWORD *)(a2 + 440);
      *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
      *(_QWORD *)(a1 + 440) = v43;
      swift_bridgeObjectRelease();
      goto LABEL_26;
    }
    sub_20A464794(a1 + 384);
  }
  v44 = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 400) = v44;
  v45 = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 432) = v45;
LABEL_26:
  v46 = (_QWORD *)(a2 + 448);
  v47 = *(_QWORD *)(a1 + 456);
  if (v47 >> 60 != 15)
  {
    v48 = *(_QWORD *)(a2 + 456);
    if (v48 >> 60 != 15)
    {
      v49 = *(_QWORD *)(a1 + 448);
      *(_QWORD *)(a1 + 448) = *v46;
      *(_QWORD *)(a1 + 456) = v48;
      sub_20A44BD90(v49, v47);
      return a1;
    }
    sub_20A45A1A8(a1 + 448);
  }
  *(_OWORD *)(a1 + 448) = *(_OWORD *)v46;
  return a1;
}

uint64_t _s26ODNAssessmentGUIDContainerVwet(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 464))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s26ODNAssessmentGUIDContainerVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 456) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 464) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 464) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *_s26ODNAssessmentGUIDContainerVMa()
{
  return &_s26ODNAssessmentGUIDContainerVN;
}

uint64_t _s24ODNAssessmentIdentifiersVwet(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s24ODNAssessmentIdentifiersVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *_s24ODNAssessmentIdentifiersVMa()
{
  return &_s24ODNAssessmentIdentifiersVN;
}

_QWORD *_s14ODNIdentifiersVwcp_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s14ODNIdentifiersVwca_0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *_s14ODNIdentifiersVwta_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s14ODNIdentifiersVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s14ODNIdentifiersVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s14ODNIdentifiersVMa()
{
  return &_s14ODNIdentifiersVN;
}

uint64_t sub_20A4C69D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_20A5B8B64();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_20A5B8B58();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_20A44CE2C(a1, (uint64_t *)&unk_253EB5180);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_20A5B8AF8();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_20A4C6B24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_20A5B8B64();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_20A5B8B58();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_20A44CE2C(a1, (uint64_t *)&unk_253EB5180);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_20A5B8AF8();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  type metadata accessor for ODNAssessmentResult();
  return swift_task_create();
}

uint64_t sub_20A4C6C74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_20A5B8B64();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_20A5B8B58();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_20A44CE2C(a1, (uint64_t *)&unk_253EB5180);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_20A5B8AF8();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FAC88);
  return swift_task_create();
}

id sub_20A4C6DC8(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_20A459574(0, (unint64_t *)&unk_2545FA2D8);
    v4 = (void *)sub_20A5B887C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  return v4;
}

uint64_t sub_20A4C6E4C(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  _BOOL8 v5;
  BOOL v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  if (*(_DWORD *)(a2 + 32) == (_DWORD)result)
    return 1;
  if (v2 == 1)
    return 0;
  for (i = 9; ; ++i)
  {
    v4 = i - 7;
    if (__OFADD__(i - 8, 1))
      break;
    v6 = *(_DWORD *)(a2 + 4 * i) == (_DWORD)result;
    v5 = v6;
    v6 = v6 || v4 == v2;
    if (v6)
      return v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_20A4C6EB0(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  _BOOL8 v5;
  BOOL v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  if (*(_QWORD *)(a2 + 32) == result)
    return 1;
  if (v2 == 1)
    return 0;
  for (i = 5; ; ++i)
  {
    v4 = i - 3;
    if (__OFADD__(i - 4, 1))
      break;
    v6 = *(_QWORD *)(a2 + 8 * i) == result;
    v5 = v6;
    v6 = v6 || v4 == v2;
    if (v6)
      return v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_20A4C6F14()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for InUseAssertionManager(0);
  v0 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_QWORD *)(v0 + 144) = 0;
  *(_OWORD *)(v0 + 112) = 0u;
  *(_OWORD *)(v0 + 128) = 0u;
  result = sub_20A5B87F8();
  qword_2545FAA60 = v0;
  return result;
}

void sub_20A4C6F94(uint64_t a1, unint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  NSObject *oslog;
  uint64_t v23;

  v3 = v2;
  if (v2[15] || (v8 = v2[17]) != 0 && (v2[16] == a1 ? (v9 = v8 == a2) : (v9 = 0), !v9 && (sub_20A5B91AC() & 1) == 0))
  {
    oslog = sub_20A5B87EC();
    v4 = sub_20A5B8C60();
    if (os_log_type_enabled(oslog, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_20A443000, oslog, v4, "InUseAssertion requestInUse requested with mismatched bundleIdentifier", v5, 2u);
      MEMORY[0x20BD26DB8](v5, -1, -1);
    }

  }
  else
  {
    v10 = v2[14];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
    {
      __break(1u);
    }
    else
    {
      v2[14] = v12;
      if (!v2[18])
      {
        swift_bridgeObjectRetain_n();
        v13 = sub_20A5B87EC();
        v14 = sub_20A5B8C48();
        if (os_log_type_enabled(v13, v14))
        {
          v15 = (uint8_t *)swift_slowAlloc();
          v16 = swift_slowAlloc();
          v23 = v16;
          *(_DWORD *)v15 = 136315138;
          swift_bridgeObjectRetain();
          sub_20A503EE0(a1, a2, &v23);
          sub_20A5B8D50();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_20A443000, v13, v14, "Taking InUseAssertion for %s", v15, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x20BD26DB8](v16, -1, -1);
          MEMORY[0x20BD26DB8](v15, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }

        v3[16] = a1;
        v3[17] = a2;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v17 = (void *)objc_opt_self();
        v18 = (void *)sub_20A5B88F4();
        v19 = (void *)sub_20A5B88F4();
        v20 = objc_msgSend(v17, sel_newAssertionForBundleIdentifier_withReason_level_, v18, v19, 1);

        v21 = (void *)v3[18];
        v3[18] = v20;

      }
    }
  }
}

void sub_20A4C7278(id a1)
{
  _QWORD *v1;
  _QWORD *v2;
  os_log_type_t v3;
  uint8_t *v4;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  void *v30;
  id v31;
  void *v32;
  void *v33;
  id v34;
  void *v35;
  NSObject *oslog;
  uint64_t v37;

  v2 = v1;
  if (v1[17])
  {
LABEL_2:
    oslog = sub_20A5B87EC();
    v3 = sub_20A5B8C60();
    if (os_log_type_enabled(oslog, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_20A443000, oslog, v3, "InUseAssertion requestInUse requested with mismatched bundle", v4, 2u);
      MEMORY[0x20BD26DB8](v4, -1, -1);
    }

    return;
  }
  if (v1[15])
  {
    v6 = objc_msgSend(a1, sel_bundleIdentifier);
    if (v6)
    {
      v7 = v6;
      v8 = sub_20A5B8900();
      v10 = v9;

      v11 = (void *)v1[15];
      if (!v11)
        goto LABEL_14;
    }
    else
    {
      v8 = 0;
      v10 = 0;
      v11 = (void *)v1[15];
      if (!v11)
        goto LABEL_14;
    }
    v12 = objc_msgSend(v11, sel_bundleIdentifier);
    if (v12)
    {
      v13 = v12;
      v14 = sub_20A5B8900();
      v16 = v15;

      if (v10)
        goto LABEL_15;
      goto LABEL_12;
    }
LABEL_14:
    v14 = 0;
    v16 = 0;
    if (v10)
    {
LABEL_15:
      if (v16)
      {
        if (v8 == v14 && v10 == v16)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          v17 = sub_20A5B91AC();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v17 & 1) == 0)
            goto LABEL_2;
        }
        goto LABEL_21;
      }
LABEL_19:
      swift_bridgeObjectRelease();
      goto LABEL_2;
    }
LABEL_12:
    if (!v16)
      goto LABEL_21;
    goto LABEL_19;
  }
LABEL_21:
  v18 = v1[14];
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    v1[14] = v20;
    if (!v1[18])
    {
      v21 = a1;
      v22 = sub_20A5B87EC();
      v23 = sub_20A5B8C48();
      if (os_log_type_enabled(v22, v23))
      {
        v24 = (uint8_t *)swift_slowAlloc();
        v25 = swift_slowAlloc();
        v37 = v25;
        *(_DWORD *)v24 = 136315138;
        v26 = objc_msgSend(v21, sel_description);
        v27 = sub_20A5B8900();
        v29 = v28;

        sub_20A503EE0(v27, v29, &v37);
        sub_20A5B8D50();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_20A443000, v22, v23, "Taking InUseAssertion for %s", v24, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x20BD26DB8](v25, -1, -1);
        MEMORY[0x20BD26DB8](v24, -1, -1);
      }
      else
      {

      }
      v30 = (void *)v2[15];
      v2[15] = v21;
      v31 = v21;

      v32 = (void *)objc_opt_self();
      v33 = (void *)sub_20A5B88F4();
      v34 = objc_msgSend(v32, sel_newAssertionForBundle_withReason_level_, v31, v33, 1);

      v35 = (void *)v2[18];
      v2[18] = v34;

    }
  }
}

void sub_20A4C7638()
{
  _QWORD *v0;
  _QWORD *v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  void *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  void *v12;
  void *v13;

  v1 = v0;
  if (!v0[18] || (uint64_t)v0[14] <= 0)
  {
    v2 = sub_20A5B87EC();
    v3 = sub_20A5B8C60();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_20A443000, v2, v3, "InUseAssertion release requested when none held", v4, 2u);
      MEMORY[0x20BD26DB8](v4, -1, -1);
    }

  }
  v5 = v1[14];
  v6 = __OFSUB__(v5, 1);
  v7 = v5 - 1;
  if (v6)
  {
    __break(1u);
  }
  else
  {
    v1[14] = v7;
    if (v7 <= 0)
    {
      v8 = (void *)v1[18];
      if (v8)
        objc_msgSend(v8, sel_invalidate);
      v9 = sub_20A5B87EC();
      v10 = sub_20A5B8C48();
      if (os_log_type_enabled(v9, v10))
      {
        v11 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v11 = 0;
        _os_log_impl(&dword_20A443000, v9, v10, "Releasing InUseAssertion", v11, 2u);
        MEMORY[0x20BD26DB8](v11, -1, -1);
      }

      v12 = (void *)v1[18];
      v1[18] = 0;

      v1[16] = 0;
      v1[17] = 0;
      swift_bridgeObjectRelease();
      v13 = (void *)v1[15];
      v1[15] = 0;

      v1[14] = 0;
    }
  }
}

uint64_t sub_20A4C77B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC17CoreODIEssentialsP33_62B399B2DD34B45DBAE8CA5FF1D3DB2321InUseAssertionManager_sharedLogger;
  v2 = sub_20A5B8804();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

double sub_20A4C781C()
{
  double result;

  result = *MEMORY[0x24BDBFB40] * 3.0;
  *(double *)&qword_2545FAA68 = result;
  return result;
}

double sub_20A4C783C()
{
  double result;

  result = *MEMORY[0x24BDBFB40];
  qword_2545FAA70 = *MEMORY[0x24BDBFB40];
  return result;
}

uint64_t sub_20A4C7854(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  id v13;
  void *v15;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FAC70);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v8 = *(_QWORD *)(v1 + 112);
  *(_QWORD *)(v1 + 112) = MEMORY[0x24BEE4AF8];
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    v10 = v8 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v11 = *(_QWORD *)(v4 + 72);
    v12 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    do
    {
      v12(v7, v10, v3);
      v15 = a1;
      v13 = a1;
      sub_20A5B8B04();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
      v10 += v11;
      --v9;
    }
    while (v9);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_20A4C7968(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  id v13;
  void *v15;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FAC70);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v8 = *(_QWORD *)(v1 + 112);
  *(_QWORD *)(v1 + 112) = MEMORY[0x24BEE4AF8];
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    v10 = v8 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v11 = *(_QWORD *)(v4 + 72);
    v12 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    do
    {
      v12(v7, v10, v3);
      v15 = a1;
      v13 = a1;
      sub_20A5B8B10();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
      v10 += v11;
      --v9;
    }
    while (v9);
  }
  return swift_bridgeObjectRelease();
}

