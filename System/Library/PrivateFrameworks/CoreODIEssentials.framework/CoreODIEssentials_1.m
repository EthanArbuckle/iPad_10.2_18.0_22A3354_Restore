uint64_t sub_20A4C7A78()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t ODILocationHelper.__allocating_init(authBundle:authBundleIdentifier:context:analyticsManager:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;

  swift_allocObject();
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_20A494C74;
  return ODILocationHelper.init(authBundle:authBundleIdentifier:context:analyticsManager:)(a1, a2, a3, a4, a5);
}

uint64_t ODILocationHelper.init(authBundle:authBundleIdentifier:context:analyticsManager:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  char v18;
  void *v19;
  int v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  uint64_t v33;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v40;
  uint64_t v41;
  unint64_t v42;

  v7 = (_QWORD *)v5;
  v6[30] = a5;
  v6[31] = v5;
  v6[28] = a3;
  v6[29] = a4;
  v40 = v6 + 2;
  v6[26] = a1;
  v6[27] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB4990);
  v6[32] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FAA90);
  v6[33] = swift_task_alloc();
  v8 = sub_20A5B8828();
  v6[34] = v8;
  v6[35] = *(_QWORD *)(v8 - 8);
  v6[36] = swift_task_alloc();
  v9 = sub_20A5B8C9C();
  v36 = *(_QWORD *)(v9 - 8);
  v37 = v9;
  v38 = swift_task_alloc();
  v6[37] = v38;
  sub_20A5B8C90();
  v6[38] = swift_task_alloc();
  sub_20A5B8840();
  v6[39] = swift_task_alloc();
  v10 = type metadata accessor for ODISignpost();
  v6[40] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v6[41] = swift_task_alloc();
  v12 = swift_task_alloc();
  v6[42] = v12;
  v33 = swift_task_alloc();
  v6[43] = v33;
  swift_defaultActor_initialize();
  *(_OWORD *)(v5 + 112) = xmmword_20A5C2290;
  *(_BYTE *)(v5 + 128) = 0;
  *(_DWORD *)(v5 + 200) = 0;
  *(_QWORD *)(v5 + 136) = 0;
  *(_QWORD *)(v5 + 144) = 0;
  *(_BYTE *)(v5 + 204) = 1;
  type metadata accessor for ODILocationHelper.ContinuationsActor();
  v13 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_QWORD *)(v13 + 112) = MEMORY[0x24BEE4AF8];
  v7[26] = v13;
  v7[27] = 0;
  v14 = (char *)v7 + OBJC_IVAR____TtC17CoreODIEssentials17ODILocationHelper_locationRequestSignpost;
  v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v6[44] = v15;
  v15(v14, 1, 1, v10);
  if (qword_2545F99A0 != -1)
    swift_once();
  v17 = qword_25460FFA8;
  v16 = unk_25460FFB0;
  v18 = byte_25460FFB8;
  v19 = (void *)qword_25460FFC0;
  v20 = byte_25460FFC8;
  *(_QWORD *)(v12 + 32) = "enableTelemetry=YES";
  *(_QWORD *)(v12 + 40) = 19;
  *(_BYTE *)(v12 + 48) = 2;
  *(_QWORD *)v12 = v17;
  *(_QWORD *)(v12 + 8) = v16;
  *(_BYTE *)(v12 + 16) = v18;
  *(_QWORD *)(v12 + 24) = v19;
  v21 = v19;
  sub_20A5B87D4();
  sub_20A5B8CFC();
  if (v20 == 1)
    sub_20A5B87BC();
  else
    sub_20A5B87C8();

  sub_20A4595B4(v12, v33);
  sub_20A47BD60(a4 + 16, (uint64_t)(v7 + 20));
  sub_20A47BD60((uint64_t)(v7 + 20), (uint64_t)v40);
  v22 = v6[5];
  v23 = v6[6];
  __swift_project_boxed_opaque_existential_1(v40, v22);
  v41 = 0;
  v42 = 0xE000000000000000;
  sub_20A5B8E94();
  sub_20A5B899C();
  if (a1)
  {
    v24 = objc_msgSend(a1, sel_description);
    sub_20A5B8900();

  }
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  swift_bridgeObjectRetain();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  v25 = v41;
  LOBYTE(v41) = 4;
  (*(void (**)(uint64_t, unint64_t, uint64_t *, uint64_t, uint64_t))(v23 + 16))(v25, v42, &v41, v22, v23);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
  v6[45] = sub_20A459574(0, qword_253EB51B0);
  sub_20A5B8834();
  v6[23] = MEMORY[0x24BEE4AF8];
  sub_20A44D044((unint64_t *)&qword_253EB51A8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688], MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5150);
  sub_20A47DDA8((unint64_t *)&qword_253EB5158, &qword_253EB5150);
  sub_20A5B8DB0();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v36 + 104))(v38, *MEMORY[0x24BEE5750], v37);
  v26 = (void *)sub_20A5B8CC0();
  v6[46] = v26;
  v7[19] = v26;
  sub_20A47BD60(a4 + 16, (uint64_t)(v6 + 12));
  v27 = objc_allocWithZone((Class)type metadata accessor for ODILocationHelper.LocationManagerDelegate(0));
  v28 = v26;
  swift_retain();
  v29 = sub_20A4CC288((uint64_t)(v6 + 12), a5);
  swift_release();
  v7[29] = v29;
  v30 = (void *)v7[17];
  v7[17] = v29;
  v31 = v29;

  v7[28] = a5;
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_20A4C8124()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  void *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;

  if (*(_QWORD *)(v0 + 224))
  {
    v1 = *(_QWORD **)(v0 + 248);
    v2 = v1[23];
    v3 = v1[24];
    __swift_project_boxed_opaque_existential_1(v1 + 20, v2);
    sub_20A5B8E94();
    swift_bridgeObjectRelease();
    v15 = 0xD000000000000004;
    v16 = 0x800000020A5E0CB0;
    sub_20A5B899C();
    (*(void (**)(unint64_t, unint64_t, unint64_t *, uint64_t, uint64_t))(v3 + 16))(0xD000000000000030, 0x800000020A5E0CB0, &v15, v2, v3);
    swift_bridgeObjectRelease();
    if (qword_2545F9980 != -1)
      swift_once();
    *(_QWORD *)(v0 + 376) = qword_2545FAA60;
    return swift_task_switch();
  }
  v4 = *(void **)(v0 + 208);
  if (v4)
  {
    v5 = *(_QWORD **)(v0 + 248);
    v6 = v5[23];
    v7 = v5[24];
    __swift_project_boxed_opaque_existential_1(v5 + 20, v6);
    v8 = v4;
    sub_20A5B8E94();
    swift_bridgeObjectRelease();
    v15 = 0xD000000000000004;
    v16 = 0x800000020A5E0BF0;
    v9 = objc_msgSend(v8, sel_description);
    sub_20A5B8900();

    sub_20A5B899C();
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t, unint64_t, unint64_t *, uint64_t, uint64_t))(v7 + 16))(0xD000000000000025, 0x800000020A5E0BF0, &v15, v6, v7);
    swift_bridgeObjectRelease();
    if (qword_2545F9980 != -1)
      swift_once();
    *(_QWORD *)(v0 + 400) = qword_2545FAA60;
    return swift_task_switch();
  }
  v11 = *(void **)(v0 + 368);
  v12 = *(_QWORD **)(v0 + 248);
  v13 = v12[23];
  v14 = v12[24];
  __swift_project_boxed_opaque_existential_1(v12 + 20, v13);
  LOBYTE(v15) = 4;
  (*(void (**)(unint64_t, unint64_t, unint64_t *, uint64_t, uint64_t))(v14 + 32))(0xD000000000000050, 0x800000020A5E0B90, &v15, v13, v14);

  sub_20A5B8CF0();
  sub_20A5B87C8();
  swift_release();
  swift_release();
  sub_20A4595F8(*(_QWORD *)(v0 + 344));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 248));
}

uint64_t sub_20A4C8470()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;

  v1 = v0[46];
  v2 = v0[31];
  v4 = v0[27];
  v3 = v0[28];
  sub_20A4C6F94(v4, v3);
  *(_BYTE *)(v2 + 128) = 1;
  sub_20A44D044(&qword_2545FAAA0, type metadata accessor for ODILocationHelper, (uint64_t)&protocol conformance descriptor for ODILocationHelper);
  v5 = (_QWORD *)swift_task_alloc();
  v0[48] = v5;
  v5[2] = v1;
  v5[3] = v4;
  v5[4] = v3;
  v5[5] = v2;
  swift_retain();
  v6 = (_QWORD *)swift_task_alloc();
  v0[49] = v6;
  sub_20A459574(0, &qword_2545FAAA8);
  *v6 = v0;
  v6[1] = sub_20A4C8588;
  return sub_20A5B917C();
}

uint64_t sub_20A4C8588()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v12;

  v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  v2 = *(void **)(v1 + 192);
  *(_QWORD *)(v1 + 424) = v2;
  v3 = *(_QWORD *)(v1 + 248);
  v4 = *(void **)(v3 + 120);
  *(_QWORD *)(v3 + 120) = v2;
  v5 = v2;

  v6 = *(void **)(v3 + 232);
  swift_retain();
  v7 = v6;
  sub_20A4CC178(v3, v5, (uint64_t)v7);

  swift_release();
  if (objc_msgSend(v5, sel_locationServicesAvailable))
  {
    v9 = *(_QWORD *)(v1 + 280);
    v8 = *(_QWORD *)(v1 + 288);
    v10 = *(_QWORD *)(v1 + 272);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v9 + 104))(v8, *MEMORY[0x24BEE5490], v10);
    *(_QWORD *)(v1 + 432) = sub_20A5B8CCC();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    return swift_task_switch();
  }
  else
  {

    v12 = *(void **)(v1 + 208);
    sub_20A5B8CF0();
    sub_20A5B87C8();
    swift_release();
    swift_release();

    sub_20A4595F8(*(_QWORD *)(v1 + 344));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v1 + 8))(*(_QWORD *)(v1 + 248));
  }
}

uint64_t sub_20A4C87A8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  _QWORD *v4;
  _QWORD *v5;

  v1 = v0[46];
  v2 = v0[31];
  v3 = (void *)v0[26];
  sub_20A4C7278(v3);
  *(_BYTE *)(v2 + 128) = 1;
  sub_20A44D044(&qword_2545FAAA0, type metadata accessor for ODILocationHelper, (uint64_t)&protocol conformance descriptor for ODILocationHelper);
  v4 = (_QWORD *)swift_task_alloc();
  v0[51] = v4;
  v4[2] = v1;
  v4[3] = v3;
  v4[4] = v2;
  swift_retain();
  v5 = (_QWORD *)swift_task_alloc();
  v0[52] = v5;
  sub_20A459574(0, &qword_2545FAAA8);
  *v5 = v0;
  v5[1] = sub_20A4C88B8;
  return sub_20A5B917C();
}

uint64_t sub_20A4C88B8()
{
  uint64_t *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v13;

  v1 = *(void **)(*v0 + 208);
  v2 = *v0;
  swift_task_dealloc();
  swift_release();

  swift_task_dealloc();
  v3 = *(void **)(v2 + 200);
  *(_QWORD *)(v2 + 424) = v3;
  v4 = *(_QWORD *)(v2 + 248);
  v5 = *(void **)(v4 + 120);
  *(_QWORD *)(v4 + 120) = v3;
  v6 = v3;

  v7 = *(void **)(v4 + 232);
  swift_retain();
  v8 = v7;
  sub_20A4CC178(v4, v6, (uint64_t)v8);

  swift_release();
  if (objc_msgSend(v6, sel_locationServicesAvailable))
  {
    v10 = *(_QWORD *)(v2 + 280);
    v9 = *(_QWORD *)(v2 + 288);
    v11 = *(_QWORD *)(v2 + 272);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v10 + 104))(v9, *MEMORY[0x24BEE5490], v11);
    *(_QWORD *)(v2 + 432) = sub_20A5B8CCC();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    return swift_task_switch();
  }
  else
  {

    v13 = *(void **)(v2 + 208);
    sub_20A5B8CF0();
    sub_20A5B87C8();
    swift_release();
    swift_release();

    sub_20A4595F8(*(_QWORD *)(v2 + 344));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v2 + 8))(*(_QWORD *)(v2 + 248));
  }
}

uint64_t sub_20A4C8AD4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0[53];
  v1 = v0[54];
  v3 = swift_task_alloc();
  v0[55] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = (_QWORD *)swift_task_alloc();
  v0[56] = v4;
  type metadata accessor for CLAuthorizationStatus(0);
  *v4 = v0;
  v4[1] = sub_20A4C8B80;
  return sub_20A5B917C();
}

uint64_t sub_20A4C8B80()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A4C8BDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void *v9;
  int v10;
  id v11;
  void *v12;
  void (*v13)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v25;
  unint64_t v26;
  unint64_t v27;

  v1 = *(_QWORD *)(v0 + 248);

  *(_DWORD *)(v1 + 200) = *(_DWORD *)(v0 + 456);
  *(_BYTE *)(v1 + 204) = 0;
  sub_20A47BD60(v1 + 160, v0 + 56);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 88);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 56), v2);
  sub_20A5B8E94();
  swift_bridgeObjectRelease();
  v26 = 0xD00000000000002CLL;
  v27 = 0x800000020A5E0C80;
  if ((*(_BYTE *)(v1 + 204) & 1) == 0)
  {
    *(_DWORD *)(v0 + 460) = *(_DWORD *)(*(_QWORD *)(v0 + 248) + 200);
    sub_20A4CC3EC();
    sub_20A5B8D98();
  }
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  v4 = v26;
  LOBYTE(v26) = 4;
  (*(void (**)(unint64_t, unint64_t, unint64_t *, uint64_t, uint64_t))(v3 + 16))(v4, v27, &v26, v2, v3);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  if (qword_2545F9990 != -1)
    swift_once();
  objc_msgSend(*(id *)(v0 + 424), sel_setDistanceFilter_, *(double *)&qword_2545FAA70);
  if (qword_2545F9988 != -1)
    swift_once();
  objc_msgSend(*(id *)(v0 + 424), sel_setDesiredAccuracy_, *(double *)&qword_2545FAA68);
  if (qword_2545F99A8 != -1)
    swift_once();
  v5 = *(_QWORD *)(v0 + 328);
  v7 = qword_25460FFD0;
  v6 = *(_QWORD *)algn_25460FFD8;
  v8 = byte_25460FFE0;
  v9 = (void *)qword_25460FFE8;
  v10 = byte_25460FFF0;
  *(_QWORD *)(v5 + 32) = "enableTelemetry=YES";
  *(_QWORD *)(v5 + 40) = 19;
  *(_BYTE *)(v5 + 48) = 2;
  *(_QWORD *)v5 = v7;
  *(_QWORD *)(v5 + 8) = v6;
  *(_BYTE *)(v5 + 16) = v8;
  *(_QWORD *)(v5 + 24) = v9;
  v11 = v9;
  sub_20A5B87D4();
  sub_20A5B8CFC();
  if (v10 == 1)
    sub_20A5B87BC();
  else
    sub_20A5B87C8();
  v12 = *(void **)(v0 + 424);
  v25 = *(void **)(v0 + 368);
  v13 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 352);
  v15 = *(_QWORD *)(v0 + 320);
  v14 = *(_QWORD *)(v0 + 328);
  v16 = *(_QWORD *)(v0 + 256);
  v17 = *(_QWORD *)(v0 + 264);
  v18 = *(_QWORD *)(v0 + 248);

  sub_20A4595B4(v14, v17);
  v13(v17, 0, 1, v15);
  v19 = v18 + OBJC_IVAR____TtC17CoreODIEssentials17ODILocationHelper_locationRequestSignpost;
  swift_beginAccess();
  sub_20A4CC430(v17, v19, &qword_2545FAA90);
  swift_endAccess();
  objc_msgSend(v12, sel_requestLocation);
  v20 = *(id *)(v18 + 232);
  sub_20A5B8618();

  v21 = sub_20A5B8630();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v16, 0, 1, v21);
  v22 = (uint64_t)v20
      + OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_locationFetchRequestedAt;
  swift_beginAccess();
  sub_20A4CC430(v16, v22, &qword_253EB4990);
  swift_endAccess();
  v23 = *(void **)(v0 + 208);

  sub_20A5B8CF0();
  sub_20A5B87C8();
  swift_release();
  swift_release();

  sub_20A4595F8(*(_QWORD *)(v0 + 344));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 248));
}

uint64_t type metadata accessor for ODILocationHelper.ContinuationsActor()
{
  return objc_opt_self();
}

uint64_t sub_20A4C909C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD aBlock[6];

  v31 = a2;
  v32 = a5;
  v29 = a3;
  v30 = a4;
  v33 = sub_20A5B881C();
  v36 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33, v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_20A5B8840();
  v34 = *(_QWORD *)(v9 - 8);
  v35 = v9;
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545FACB0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x24BDAC7A8](v13, v16);
  v17 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, a1, v13);
  v18 = (*(unsigned __int8 *)(v14 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v19 = (v15 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = (v19 + 23) & 0xFFFFFFFFFFFFFFF8;
  v21 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v21 + v18, v17, v13);
  v22 = (_QWORD *)(v21 + v19);
  v23 = v30;
  *v22 = v29;
  v22[1] = v23;
  v24 = v31;
  *(_QWORD *)(v21 + v20) = v32;
  *(_QWORD *)(v21 + ((v20 + 15) & 0xFFFFFFFFFFFFFFF8)) = v24;
  aBlock[4] = sub_20A4CDEDC;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_20A461EFC;
  aBlock[3] = &block_descriptor_69_0;
  v25 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  v24;
  sub_20A5B8834();
  v37 = MEMORY[0x24BEE4AF8];
  sub_20A44D044(&qword_253EB5088, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5120);
  sub_20A47DDA8((unint64_t *)&qword_253EB5128, &qword_253EB5120);
  v26 = v33;
  sub_20A5B8DB0();
  MEMORY[0x20BD25D50](0, v12, v8, v25);
  _Block_release(v25);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v8, v26);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v12, v35);
  return swift_release();
}

void sub_20A4C933C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;

  v6 = *(void **)(a4 + 232);
  v7 = objc_allocWithZone(MEMORY[0x24BDBFA88]);
  v8 = v6;
  v9 = a5;
  swift_bridgeObjectRetain();
  v10 = (void *)sub_20A5B88F4();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v7, sel_initWithEffectiveBundleIdentifier_delegate_onQueue_, v10, v8, v9);

  if (v11)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545FACB0);
    sub_20A5B8B10();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_20A4C9418(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD aBlock[6];

  v28 = a2;
  v29 = a4;
  v27 = a3;
  v30 = sub_20A5B881C();
  v33 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30, v5);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_20A5B8840();
  v31 = *(_QWORD *)(v8 - 8);
  v32 = v8;
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545FACB0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x24BDAC7A8](v12, v15);
  v16 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, a1, v12);
  v17 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v18 = (v14 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF8;
  v20 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v20 + v17, v16, v12);
  v22 = v27;
  v21 = v28;
  *(_QWORD *)(v20 + v18) = v27;
  *(_QWORD *)(v20 + v19) = v29;
  *(_QWORD *)(v20 + ((v19 + 15) & 0xFFFFFFFFFFFFFFF8)) = v21;
  aBlock[4] = sub_20A4CE0DC;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_20A461EFC;
  aBlock[3] = &block_descriptor_81;
  v23 = _Block_copy(aBlock);
  v24 = v22;
  swift_retain();
  v21;
  sub_20A5B8834();
  v34 = MEMORY[0x24BEE4AF8];
  sub_20A44D044(&qword_253EB5088, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5120);
  sub_20A47DDA8((unint64_t *)&qword_253EB5128, &qword_253EB5120);
  v25 = v30;
  sub_20A5B8DB0();
  MEMORY[0x20BD25D50](0, v11, v7, v23);
  _Block_release(v23);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v7, v25);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v11, v32);
  return swift_release();
}

void sub_20A4C96B0(int a1, id a2, uint64_t a3, void *a4)
{
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;

  v6 = objc_msgSend(a2, sel_bundlePath);
  sub_20A5B8900();

  v7 = *(void **)(a3 + 232);
  v8 = objc_allocWithZone(MEMORY[0x24BDBFA88]);
  v9 = v7;
  v10 = a4;
  v11 = (void *)sub_20A5B88F4();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(v8, sel_initWithEffectiveBundlePath_delegate_onQueue_, v11, v9, v10);

  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545FACB0);
    sub_20A5B8B10();
  }
  else
  {
    __break(1u);
  }
}

Swift::Bool __swiftcall ODILocationHelper.gpsLocationEnabled()()
{
  uint64_t v0;
  uint64_t v1;
  Swift::Bool result;

  result = 0;
  if ((*(_BYTE *)(v0 + 204) & 1) == 0)
  {
    v1 = *(unsigned int *)(v0 + 200);
    if (objc_msgSend((id)objc_opt_self(), sel_locationServicesEnabled))
    {
      if ((sub_20A4C6E4C(v1, (uint64_t)&unk_24C313670) & 1) != 0)
        return 1;
    }
  }
  return result;
}

uint64_t ODILocationHelper.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  double v24;
  void (*v25)(char *, uint64_t);
  unsigned int v26;
  unint64_t v27;
  void *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_253EB4990);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&aBlock[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_20A5B8630();
  v7 = *(_QWORD *)(v6 - 8);
  v9 = MEMORY[0x24BDAC7A8](v6, v8);
  v11 = (char *)&aBlock[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9, v12);
  v14 = (char *)&aBlock[-1] - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB5180);
  MEMORY[0x24BDAC7A8](v15, v16);
  v18 = (char *)&aBlock[-1] - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v1 + 128) == 1)
  {
    v19 = sub_20A5B8B64();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 16) = 0;
    *(_QWORD *)(v20 + 24) = 0;
    sub_20A4C69D8((uint64_t)v18, (uint64_t)&unk_2545FAAC8, v20);
    swift_release();
  }
  v21 = *(_QWORD *)(v1 + 232);
  if ((*(_BYTE *)(v21
                 + OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_didCallLocationDelegate) & 1) == 0)
  {
    v22 = v21
        + OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_locationFetchRequestedAt;
    swift_beginAccess();
    sub_20A4CC480(v22, (uint64_t)v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {
      sub_20A44CE2C((uint64_t)v5, &qword_253EB4990);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v14, v5, v6);
      sub_20A5B8618();
      sub_20A5B85A0();
      v24 = v23;
      v25 = *(void (**)(char *, uint64_t))(v7 + 8);
      v25(v11, v6);
      *(float *)&v26 = v24;
      v27 = v26 | 0x8000000000000000;
      v28 = (void *)sub_20A5B88F4();
      v29 = swift_allocObject();
      *(_QWORD *)(v29 + 16) = v27;
      *(_QWORD *)(v29 + 24) = 20;
      aBlock[4] = sub_20A4B1670;
      aBlock[5] = v29;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_20A4C6DC8;
      aBlock[3] = &block_descriptor_10;
      v30 = _Block_copy(aBlock);
      swift_release();
      AnalyticsSendEventLazy();
      _Block_release(v30);

      v25(v14, v6);
    }
  }

  __swift_destroy_boxed_opaque_existential_1(v1 + 160);
  swift_release();
  swift_release();

  sub_20A44CE2C(v1 + OBJC_IVAR____TtC17CoreODIEssentials17ODILocationHelper_locationRequestSignpost, &qword_2545FAA90);
  v31 = *(_QWORD *)(v1 + 216);
  *(_QWORD *)(v1 + 216) = 0;
  if (v31)
  {
    do
    {
      if (!swift_isUniquelyReferenced_native())
        break;
      v32 = *(_QWORD *)(v31 + 216);
      swift_retain();
      swift_release();
      v31 = v32;
    }
    while (v32);
  }
  swift_release();
  swift_defaultActor_destroy();
  return v1;
}

uint64_t sub_20A4C9B7C()
{
  return swift_task_switch();
}

uint64_t sub_20A4C9B90()
{
  uint64_t v0;

  if (qword_2545F9980 != -1)
    swift_once();
  *(_QWORD *)(v0 + 16) = qword_2545FAA60;
  return swift_task_switch();
}

uint64_t sub_20A4C9BF4()
{
  uint64_t v0;

  sub_20A4C7638();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ODILocationHelper.__deallocating_deinit()
{
  ODILocationHelper.deinit();
  return swift_defaultActor_deallocate();
}

uint64_t sub_20A4C9C3C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_20A4C9C54()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  char v7;

  v1 = *(_QWORD **)(v0 + 16);
  if (!v1[15])
    return (*(uint64_t (**)(void))(v0 + 8))();
  v2 = v1[23];
  v3 = v1[24];
  __swift_project_boxed_opaque_existential_1(v1 + 20, v2);
  v7 = 4;
  (*(void (**)(unint64_t, unint64_t, char *, uint64_t, uint64_t))(v3 + 16))(0xD000000000000016, 0x800000020A5E12A0, &v7, v2, v3);
  v4 = (void *)v1[17];
  v1[17] = 0;

  v5 = (void *)v1[15];
  v1[15] = 0;

  if (qword_2545F9980 != -1)
    swift_once();
  *(_QWORD *)(v0 + 24) = qword_2545FAA60;
  return swift_task_switch();
}

uint64_t sub_20A4C9D50()
{
  sub_20A4C7638();
  return swift_task_switch();
}

uint64_t sub_20A4C9D8C()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = v0[2];
  *(_BYTE *)(v1 + 128) = 0;
  v0[4] = *(_QWORD *)(v1 + 208);
  sub_20A4CD25C();
  v0[5] = swift_allocError();
  *v2 = 0;
  return swift_task_switch();
}

uint64_t sub_20A4C9DF4()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 40);
  sub_20A4C7854(v1);

  return swift_task_switch();
}

uint64_t sub_20A4C9E48()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)(v0 + 16) + 216) = 0;
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ODILocationHelper.getLocationOrWait()()
{
  uint64_t v0;
  _QWORD *v1;

  v1[3] = v0;
  v1[4] = type metadata accessor for ODISignpost();
  v1[5] = swift_task_alloc();
  v1[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A4C9EEC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  void *v5;
  int v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  if (qword_2545F99B0 != -1)
    swift_once();
  v1 = v0[5];
  v3 = qword_25460FFF8;
  v2 = unk_254610000;
  v4 = byte_254610008;
  v5 = (void *)qword_254610010;
  v6 = byte_254610018;
  *(_QWORD *)(v1 + 32) = "enableTelemetry=YES";
  *(_QWORD *)(v1 + 40) = 19;
  *(_BYTE *)(v1 + 48) = 2;
  *(_QWORD *)v1 = v3;
  *(_QWORD *)(v1 + 8) = v2;
  *(_BYTE *)(v1 + 16) = v4;
  *(_QWORD *)(v1 + 24) = v5;
  v7 = v5;
  sub_20A5B87D4();
  sub_20A5B8CFC();
  if (v6 == 1)
    sub_20A5B87BC();
  else
    sub_20A5B87C8();
  v9 = v0[5];
  v8 = v0[6];

  sub_20A4595B4(v9, v8);
  sub_20A44D044(&qword_2545FAAA0, type metadata accessor for ODILocationHelper, (uint64_t)&protocol conformance descriptor for ODILocationHelper);
  v10 = (_QWORD *)swift_task_alloc();
  v0[7] = v10;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545FAAD8);
  *v10 = v0;
  v10[1] = sub_20A4CA0C4;
  return sub_20A5B9200();
}

uint64_t sub_20A4CA0C4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A4CA128()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 48);
  v6 = *(_QWORD *)(v0 + 16);
  sub_20A5B8CF0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52C0);
  v2 = swift_allocObject();
  v3 = MEMORY[0x24BEE1328];
  *(_OWORD *)(v2 + 16) = xmmword_20A5BA9A0;
  v4 = MEMORY[0x24BEE1360];
  *(_QWORD *)(v2 + 56) = v3;
  *(_QWORD *)(v2 + 64) = v4;
  *(_BYTE *)(v2 + 32) = v6 != 0;
  sub_20A5B87BC();
  swift_bridgeObjectRelease();
  sub_20A4595F8(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v6);
}

uint64_t sub_20A4CA24C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 48);
  sub_20A5B8CF0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52C0);
  v2 = swift_allocObject();
  v3 = MEMORY[0x24BEE1328];
  *(_OWORD *)(v2 + 16) = xmmword_20A5BA9A0;
  v4 = MEMORY[0x24BEE1360];
  *(_QWORD *)(v2 + 56) = v3;
  *(_QWORD *)(v2 + 64) = v4;
  *(_BYTE *)(v2 + 32) = 0;
  sub_20A5B87BC();
  swift_bridgeObjectRelease();
  sub_20A4595F8(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4CA35C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(unint64_t, unint64_t, unint64_t *, uint64_t, uint64_t);
  id v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  unint64_t v32;
  unint64_t v33;

  v29 = a1;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FAC70);
  v3 = *(_QWORD *)(v30 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v30, v5);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB5180);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (_QWORD *)(a2 + 160);
  v11 = *(_QWORD *)(a2 + 184);
  v12 = *(_QWORD *)(a2 + 192);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a2 + 160), v11);
  LOBYTE(v32) = 4;
  (*(void (**)(unint64_t, unint64_t, unint64_t *, uint64_t, uint64_t))(v12 + 16))(0xD000000000000022, 0x800000020A5E1340, &v32, v11, v12);
  if ((*(_BYTE *)(a2 + 204) & 1) == 0)
  {
    v13 = *(_DWORD *)(a2 + 200);
    if ((v13 - 3) >= 2)
    {
      v15 = *(_QWORD *)(a2 + 184);
      v14 = *(_QWORD *)(a2 + 192);
      __swift_project_boxed_opaque_existential_1(v10, v15);
      v32 = 0;
      v33 = 0xE000000000000000;
      sub_20A5B8E94();
      swift_bridgeObjectRelease();
      v32 = 0xD00000000000001BLL;
      v33 = 0x800000020A5E13A0;
      v31 = v13;
      sub_20A5B9170();
      sub_20A5B899C();
      swift_bridgeObjectRelease();
      sub_20A5B899C();
      v16 = v32;
      LOBYTE(v32) = 4;
      (*(void (**)(unint64_t, unint64_t, unint64_t *, uint64_t, uint64_t))(v14 + 32))(v16, v33, &v32, v15, v14);
      swift_bridgeObjectRelease();
      v32 = 0;
      return sub_20A5B8B10();
    }
  }
  v17 = *(void **)(a2 + 144);
  if (v17)
  {
    v19 = *(_QWORD *)(a2 + 184);
    v18 = *(_QWORD *)(a2 + 192);
    __swift_project_boxed_opaque_existential_1(v10, v19);
    LOBYTE(v32) = 4;
    v20 = *(void (**)(unint64_t, unint64_t, unint64_t *, uint64_t, uint64_t))(v18 + 32);
    v21 = v17;
    v20(0xD00000000000002ALL, 0x800000020A5E1370, &v32, v19, v18);
    v32 = (unint64_t)v17;
    return sub_20A5B8B10();
  }
  v23 = sub_20A5B8B64();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v9, 1, 1, v23);
  v24 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v29, v30);
  v25 = sub_20A44D044(&qword_2545FAAA0, type metadata accessor for ODILocationHelper, (uint64_t)&protocol conformance descriptor for ODILocationHelper);
  v26 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v27 = (char *)swift_allocObject();
  *((_QWORD *)v27 + 2) = a2;
  *((_QWORD *)v27 + 3) = v25;
  *((_QWORD *)v27 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(&v27[v26], (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v24);
  swift_retain_n();
  sub_20A4C69D8((uint64_t)v9, (uint64_t)&unk_2545FAC98, (uint64_t)v27);
  return swift_release();
}

uint64_t sub_20A4CA66C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[11] = a4;
  v5[12] = a5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FAC70);
  v5[13] = v6;
  v5[14] = *(_QWORD *)(v6 - 8);
  v5[15] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A4CA6D4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  _QWORD v7[2];

  v1 = *(_QWORD **)(v0 + 88);
  if (v1[15])
  {
    v1[27] = v1;
    swift_release();
    *(_QWORD *)(v0 + 128) = v1[26];
    swift_retain();
    return swift_task_switch();
  }
  else
  {
    sub_20A47BD60((uint64_t)(v1 + 20), v0 + 16);
    v3 = *(_QWORD *)(v0 + 40);
    v4 = *(_QWORD *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v3);
    v7[0] = 4;
    v7[1] = 0xE000000000000000;
    sub_20A5B8E94();
    sub_20A5B899C();
    sub_20A5B899C();
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD, unint64_t, _QWORD *, uint64_t, uint64_t))(v4 + 16))(0, 0xE000000000000000, v7, v3, v4);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    v5 = (void *)v1[18];
    *(_QWORD *)(v0 + 80) = v5;
    v6 = v5;
    sub_20A5B8B10();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_20A4CA87C()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t *v2;
  unint64_t v3;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = v0[16];
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[14] + 16))(v0[15], v0[12], v0[13]);
  v2 = (unint64_t *)(v1 + 112);
  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 112);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v1 + 112) = v3;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v3 = sub_20A470508(0, *(_QWORD *)(v3 + 16) + 1, 1, v3);
    *v2 = v3;
  }
  v6 = *(_QWORD *)(v3 + 16);
  v5 = *(_QWORD *)(v3 + 24);
  if (v6 >= v5 >> 1)
  {
    v3 = sub_20A470508(v5 > 1, v6 + 1, 1, v3);
    *v2 = v3;
  }
  v8 = v0[14];
  v7 = v0[15];
  v9 = v0[13];
  *(_QWORD *)(v3 + 16) = v6 + 1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v8 + 32))(v3+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v6, v7, v9);
  swift_endAccess();
  return swift_task_switch();
}

uint64_t sub_20A4CA994()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v1 = *(_QWORD **)(v0 + 88);
  v2 = v1[23];
  v3 = v1[24];
  __swift_project_boxed_opaque_existential_1(v1 + 20, v2);
  v5 = 4;
  (*(void (**)(unint64_t, unint64_t, char *, uint64_t, uint64_t))(v3 + 16))(0xD00000000000002ELL, 0x800000020A5E1430, &v5, v2, v3);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

CLLocation_optional __swiftcall ODILocationHelper.getLocation()()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  Swift::Bool v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(unint64_t, unint64_t, char *, uint64_t, uint64_t);
  id v11;
  objc_class *v12;
  char v13;
  char v14;
  CLLocation_optional result;

  v1 = v0;
  v2 = v0 + 20;
  v3 = v0[23];
  v4 = v0[24];
  __swift_project_boxed_opaque_existential_1(v2, v3);
  v14 = 14;
  Loggable.debug(_:category:)(0xD00000000000001ALL, 0x800000020A5E0D20, &v14, v3, v4);
  v7 = (void *)v1[18];
  if (v7)
  {
    v9 = v1[23];
    v8 = v1[24];
    __swift_project_boxed_opaque_existential_1(v2, v9);
    v13 = 4;
    v10 = *(void (**)(unint64_t, unint64_t, char *, uint64_t, uint64_t))(v8 + 32);
    v11 = v7;
    v10(0xD000000000000021, 0x800000020A5E0D40, &v13, v9, v8);
  }
  v12 = (objc_class *)v7;
  result.value._internal = v5;
  result.value.super.isa = v12;
  result.is_nil = v6;
  return result;
}

uint64_t sub_20A4CAAF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v7;
  *v7 = v5;
  v7[1] = sub_20A45A37C;
  return sub_20A4CAB48(a5);
}

uint64_t sub_20A4CAB48(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[8] = a1;
  v2[9] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FAA90);
  v2[10] = swift_task_alloc();
  v3 = type metadata accessor for ODISignpost();
  v2[11] = v3;
  v2[12] = *(_QWORD *)(v3 - 8);
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A4CABE8()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void *v10;
  int v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = (void *)v0[8];
  v1 = v0[9];
  v3 = *(void **)(v1 + 144);
  *(_QWORD *)(v1 + 144) = v2;

  v4 = qword_2545F99B8;
  v5 = v2;
  if (v4 != -1)
    swift_once();
  v6 = v0[14];
  v8 = qword_254610020;
  v7 = *(_QWORD *)algn_254610028;
  v9 = byte_254610030;
  v10 = (void *)qword_254610038;
  v11 = byte_254610040;
  *(_QWORD *)(v6 + 32) = "enableTelemetry=YES";
  *(_QWORD *)(v6 + 40) = 19;
  *(_BYTE *)(v6 + 48) = 2;
  *(_QWORD *)v6 = v8;
  *(_QWORD *)(v6 + 8) = v7;
  *(_BYTE *)(v6 + 16) = v9;
  *(_QWORD *)(v6 + 24) = v10;
  v12 = v10;
  sub_20A5B87D4();
  sub_20A5B8CFC();
  if (v11 == 1)
    sub_20A5B87BC();
  else
    sub_20A5B87C8();
  v13 = v0[14];
  v14 = v0[15];
  v15 = v0[9];

  sub_20A4595B4(v13, v14);
  v0[16] = *(_QWORD *)(v15 + 208);
  return swift_task_switch();
}

uint64_t sub_20A4CAD60()
{
  uint64_t v0;

  sub_20A4C7968(*(void **)(v0 + 64));
  return swift_task_switch();
}

uint64_t sub_20A4CADA0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v1 = v0[11];
  v2 = v0[12];
  v3 = v0[9];
  sub_20A5B8CF0();
  sub_20A5B87C8();
  v4 = v3 + OBJC_IVAR____TtC17CoreODIEssentials17ODILocationHelper_locationRequestSignpost;
  swift_beginAccess();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v4, 1, v1))
  {
    v5 = v0[13];
    sub_20A4CD2A0(v4, v5);
    sub_20A5B8CF0();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52C0);
    v6 = swift_allocObject();
    v7 = MEMORY[0x24BEE1328];
    *(_OWORD *)(v6 + 16) = xmmword_20A5BA9A0;
    v8 = MEMORY[0x24BEE1360];
    *(_QWORD *)(v6 + 56) = v7;
    *(_QWORD *)(v6 + 64) = v8;
    *(_BYTE *)(v6 + 32) = 1;
    sub_20A5B87BC();
    swift_bridgeObjectRelease();
    sub_20A4595F8(v5);
  }
  v9 = v0[10];
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v0[12] + 56))(v9, 1, 1, v0[11]);
  swift_beginAccess();
  sub_20A4CC430(v9, v4, &qword_2545FAA90);
  swift_endAccess();
  v10 = (_QWORD *)swift_task_alloc();
  v0[17] = v10;
  *v10 = v0;
  v10[1] = sub_20A4CAF9C;
  v10[2] = v0[9];
  return swift_task_switch();
}

uint64_t sub_20A4CAF9C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A4CAFF4()
{
  uint64_t v0;

  sub_20A4595F8(*(_QWORD *)(v0 + 120));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4CB058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v7;
  *v7 = v5;
  v7[1] = sub_20A45A37C;
  return sub_20A4CB0AC(a5);
}

uint64_t sub_20A4CB0AC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;

  v2[8] = a1;
  v2[9] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FAA90);
  v2[10] = swift_task_alloc();
  v3 = type metadata accessor for ODISignpost();
  v2[11] = v3;
  v2[12] = *(_QWORD *)(v3 - 8);
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  v4 = (_QWORD *)swift_task_alloc();
  v2[16] = v4;
  *v4 = v2;
  v4[1] = sub_20A4CB174;
  v4[2] = v1;
  return swift_task_switch();
}

uint64_t sub_20A4CB174()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A4CB1CC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  void *v5;
  int v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  _QWORD *v12;

  if (qword_2545F99B8 != -1)
    swift_once();
  v1 = v0[14];
  v3 = qword_254610020;
  v2 = *(_QWORD *)algn_254610028;
  v4 = byte_254610030;
  v5 = (void *)qword_254610038;
  v6 = byte_254610040;
  *(_QWORD *)(v1 + 32) = "enableTelemetry=YES";
  *(_QWORD *)(v1 + 40) = 19;
  *(_BYTE *)(v1 + 48) = 2;
  *(_QWORD *)v1 = v3;
  *(_QWORD *)(v1 + 8) = v2;
  *(_BYTE *)(v1 + 16) = v4;
  *(_QWORD *)(v1 + 24) = v5;
  v7 = v5;
  sub_20A5B87D4();
  sub_20A5B8CFC();
  if (v6 == 1)
    sub_20A5B87BC();
  else
    sub_20A5B87C8();
  v8 = v0[14];
  v9 = v0[15];
  v10 = (void *)v0[8];
  v11 = v0[9];

  sub_20A4595B4(v8, v9);
  v0[17] = *(_QWORD *)(v11 + 208);
  sub_20A4CD25C();
  v0[18] = swift_allocError();
  *v12 = v10;
  sub_20A4CD23C(v10);
  return swift_task_switch();
}

uint64_t sub_20A4CB360()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 144);
  sub_20A4C7854(v1);

  return swift_task_switch();
}

uint64_t sub_20A4CB3B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 72);
  sub_20A5B8CF0();
  sub_20A5B87C8();
  v4 = v3 + OBJC_IVAR____TtC17CoreODIEssentials17ODILocationHelper_locationRequestSignpost;
  swift_beginAccess();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v4, 1, v1);
  v6 = *(_QWORD *)(v0 + 120);
  if (v5)
  {
    sub_20A4595F8(*(_QWORD *)(v0 + 120));
    swift_endAccess();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 104);
    sub_20A4CD2A0(v4, v7);
    swift_endAccess();
    sub_20A5B8CF0();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52C0);
    v8 = swift_allocObject();
    v9 = MEMORY[0x24BEE1328];
    *(_OWORD *)(v8 + 16) = xmmword_20A5BA9A0;
    v10 = MEMORY[0x24BEE1360];
    *(_QWORD *)(v8 + 56) = v9;
    *(_QWORD *)(v8 + 64) = v10;
    *(_BYTE *)(v8 + 32) = 0;
    sub_20A5B87BC();
    swift_bridgeObjectRelease();
    sub_20A4595F8(v7);
    sub_20A4595F8(v6);
  }
  v11 = *(_QWORD *)(v0 + 80);
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 96) + 56))(v11, 1, 1, *(_QWORD *)(v0 + 88));
  swift_beginAccess();
  sub_20A4CC430(v11, v4, &qword_2545FAA90);
  swift_endAccess();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4CB5C8(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[4];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB5180);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_20A5B8B64();
  v9 = *(_QWORD *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = 0;
  *(_QWORD *)(v10 + 24) = 0;
  *(_QWORD *)(v10 + 32) = v2;
  *(_DWORD *)(v10 + 40) = a1;
  v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
  swift_retain();
  if (v11 == 1)
  {
    sub_20A44CE2C((uint64_t)v7, (uint64_t *)&unk_253EB5180);
    v12 = 0;
    v13 = 0;
  }
  else
  {
    sub_20A5B8B58();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
    if (*(_QWORD *)(v10 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v12 = sub_20A5B8AF8();
      v13 = v14;
      swift_unknownObjectRelease();
    }
    else
    {
      v12 = 0;
      v13 = 0;
    }
  }
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = &unk_2545FAC00;
  *(_QWORD *)(v15 + 24) = v10;
  if (v13 | v12)
  {
    v17[0] = 0;
    v17[1] = 0;
    v17[2] = v12;
    v17[3] = v13;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_20A4CB7A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;

  *(_DWORD *)(v5 + 24) = a5;
  *(_QWORD *)(v5 + 16) = a4;
  return swift_task_switch();
}

uint64_t sub_20A4CB7C0()
{
  uint64_t v0;

  sub_20A4CB7F4(*(_DWORD *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4CB7F4(int a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  _QWORD v6[2];

  v3 = *(_QWORD *)(v1 + 184);
  v4 = *(_QWORD *)(v1 + 192);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 160), v3);
  sub_20A5B8E94();
  swift_bridgeObjectRelease();
  v6[0] = 0xD000000000000004;
  v6[1] = 0x800000020A5E1150;
  sub_20A5B9170();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, unint64_t, _QWORD *, uint64_t, uint64_t))(v4 + 16))(0xD000000000000022, 0x800000020A5E1150, v6, v3, v4);
  result = swift_bridgeObjectRelease();
  *(_DWORD *)(v1 + 200) = a1;
  *(_BYTE *)(v1 + 204) = 0;
  return result;
}

id sub_20A4CB8E8()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  void *v3;
  void *v4;
  objc_super v6;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate__locationManager;
  v3 = *(void **)&v0[OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate__locationManager];
  if (v3)
  {
    objc_msgSend(v3, sel_stopUpdatingLocation);
    v4 = *(void **)&v0[v2];
    if (v4)
      objc_msgSend(v4, sel_setDelegate_, 0);
  }
  v6.receiver = v0;
  v6.super_class = ObjectType;
  return objc_msgSendSuper2(&v6, sel_dealloc);
}

uint64_t ODILocationHelper.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_20A4CBBBC()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = *v0;
  return swift_task_switch();
}

uint64_t sub_20A4CBBD4()
{
  uint64_t v0;
  Swift::Bool v1;

  v1 = ODILocationHelper.gpsLocationEnabled()();
  return (*(uint64_t (**)(Swift::Bool))(v0 + 8))(v1);
}

uint64_t sub_20A4CBC08()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = *v0;
  return swift_task_switch();
}

uint64_t sub_20A4CBC20()
{
  uint64_t v0;
  unint64_t v1;

  v1 = (unint64_t)ODILocationHelper.getLocation()();
  return (*(uint64_t (**)(unint64_t))(v0 + 8))(v1);
}

uint64_t sub_20A4CBC50()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_20A4990FC;
  return ODILocationHelper.getLocationOrWait()();
}

uint64_t ODILocationHelperContext.__allocating_init(logger:)(__int128 *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_20A44CFD8(a1, v2 + 16);
  return v2;
}

uint64_t ODILocationHelperContext.init(logger:)(__int128 *a1)
{
  uint64_t v1;

  sub_20A44CFD8(a1, v1 + 16);
  return v1;
}

uint64_t ODILocationHelperContext.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return v0;
}

uint64_t ODILocationHelperContext.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_20A4CBD34(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD aBlock[6];

  v26 = a2;
  v5 = sub_20A5B881C();
  v25 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_20A5B8840();
  v23 = *(_QWORD *)(v9 - 8);
  v24 = v9;
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FACC0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x24BDAC7A8](v13, v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v13);
  v17 = (*(unsigned __int8 *)(v14 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v18 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v18 + v17, (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v13);
  *(_QWORD *)(v18 + ((v15 + v17 + 7) & 0xFFFFFFFFFFFFFFF8)) = a3;
  aBlock[4] = sub_20A4CDFB4;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_20A461EFC;
  aBlock[3] = &block_descriptor_75;
  v19 = _Block_copy(aBlock);
  v20 = a3;
  sub_20A5B8834();
  v27 = MEMORY[0x24BEE4AF8];
  sub_20A44D044(&qword_253EB5088, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5120);
  sub_20A47DDA8((unint64_t *)&qword_253EB5128, &qword_253EB5120);
  sub_20A5B8DB0();
  MEMORY[0x20BD25D50](0, v12, v8, v19);
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v12, v24);
  return swift_release();
}

uint64_t type metadata accessor for ODILocationHelper.LocationManagerDelegate(uint64_t a1)
{
  return sub_20A4659F8(a1, (uint64_t *)&unk_2545FABE0);
}

uint64_t sub_20A4CBFAC(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_20A4CE1B0;
  return v6(a1);
}

uint64_t sub_20A4CC010(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_20A4CC074;
  return v6(a1);
}

uint64_t sub_20A4CC074()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_20A4CC0C0(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 16) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = v2;
  v3[1] = sub_20A4CC128;
  return v5(v2 + 32);
}

uint64_t sub_20A4CC128()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_BYTE **)(*v0 + 16);
  v4 = *v0;
  swift_task_dealloc();
  *v2 = *(_BYTE *)(v1 + 32);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

id sub_20A4CC178(uint64_t a1, void *a2, uint64_t a3)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  void *v13;
  id v14;
  char v15;

  v5 = *(void **)(a3 + OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_lock);
  objc_msgSend(v5, sel_lock);
  v6 = a3 + OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_parent;
  v7 = MEMORY[0x20BD26E90](a3 + OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_parent);
  swift_unknownObjectRelease();
  if (v7
    || (v8 = OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate__locationManager,
        *(_QWORD *)(a3
                  + OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate__locationManager)))
  {
    v9 = (_QWORD *)(a3 + OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_logger);
    v10 = *(_QWORD *)(a3 + OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_logger + 24);
    v11 = v9[4];
    __swift_project_boxed_opaque_existential_1(v9, v10);
    v15 = 4;
    (*(void (**)(unint64_t, unint64_t, char *, uint64_t, uint64_t))(v11 + 56))(0xD000000000000032, 0x800000020A5E1480, &v15, v10, v11);
  }
  else
  {
    *(_QWORD *)(v6 + 8) = &off_24C3136B8;
    swift_unknownObjectWeakAssign();
    v13 = *(void **)(a3 + v8);
    *(_QWORD *)(a3 + v8) = a2;

    v14 = a2;
  }
  return objc_msgSend(v5, sel_unlock);
}

id sub_20A4CC288(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  uint64_t v7;
  id v8;
  char *v9;
  char *v10;
  uint64_t v11;
  id v12;
  objc_super v14;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v3[OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_parent + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v3[OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate__locationManager] = 0;
  v7 = OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_lock;
  v8 = objc_allocWithZone(MEMORY[0x24BDD1648]);
  v9 = v3;
  *(_QWORD *)&v3[v7] = objc_msgSend(v8, sel_init);
  v10 = &v9[OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_locationFetchRequestedAt];
  v11 = sub_20A5B8630();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v9[OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_didCallLocationDelegate] = 0;
  v9[OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_didFireAnalyticsEvent] = 0;
  sub_20A47BD60(a1, (uint64_t)&v9[OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_logger]);
  *(_QWORD *)&v9[OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_analyticsManager] = a2;
  swift_retain();

  v14.receiver = v9;
  v14.super_class = ObjectType;
  v12 = objc_msgSendSuper2(&v14, sel_init);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v12;
}

uint64_t type metadata accessor for ODILocationHelper(uint64_t a1)
{
  return sub_20A4659F8(a1, (uint64_t *)&unk_2545FAB20);
}

uint64_t sub_20A4CC3D8(uint64_t a1)
{
  uint64_t v1;

  return sub_20A4C9418(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_20A4CC3E4(uint64_t a1)
{
  uint64_t v1;

  return sub_20A4CBD34(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

unint64_t sub_20A4CC3EC()
{
  unint64_t result;

  result = qword_2545FAAB0;
  if (!qword_2545FAAB0)
  {
    result = MEMORY[0x20BD26CEC](MEMORY[0x24BEE3FC8], MEMORY[0x24BEE3F88]);
    atomic_store(result, (unint64_t *)&qword_2545FAAB0);
  }
  return result;
}

uint64_t sub_20A4CC430(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A4CC474(uint64_t a1)
{
  uint64_t v1;

  return sub_20A4C909C(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_20A4CC480(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253EB4990);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A4CC4C8()
{
  return swift_deallocObject();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t sub_20A4CC4F0()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_20A4CC514()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_20A45A37C;
  return swift_task_switch();
}

uint64_t sub_20A4CC56C(uint64_t a1)
{
  uint64_t v1;

  return sub_20A4CA35C(a1, v1);
}

uint64_t sub_20A4CC574()
{
  return type metadata accessor for InUseAssertionManager(0);
}

uint64_t type metadata accessor for InUseAssertionManager(uint64_t a1)
{
  return sub_20A4659F8(a1, (uint64_t *)&unk_2545FAB10);
}

uint64_t sub_20A4CC590()
{
  uint64_t result;
  unint64_t v1;

  result = sub_20A5B8804();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_20A4CC62C()
{
  return type metadata accessor for ODILocationHelper(0);
}

void sub_20A4CC634()
{
  unint64_t v0;

  sub_20A4CC87C(319, (unint64_t *)&unk_2545FAB38, (void (*)(uint64_t))type metadata accessor for ODISignpost);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for ODILocationHelper()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ODILocationHelper.__allocating_init(authBundle:authBundleIdentifier:context:analyticsManager:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(v5 + 192)
                                                                            + *(_QWORD *)(v5 + 192));
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v12;
  *v12 = v6;
  v12[1] = sub_20A4CE1AC;
  return v14(a1, a2, a3, a4, a5);
}

uint64_t sub_20A4CC7B0()
{
  return type metadata accessor for ODILocationHelper.LocationManagerDelegate(0);
}

void sub_20A4CC7B8()
{
  unint64_t v0;

  sub_20A4CC87C(319, &qword_2545FABF0, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_20A4CC87C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_20A5B8D38();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t type metadata accessor for ODILocationHelperContext()
{
  return objc_opt_self();
}

uint64_t method lookup function for ODILocationHelperContext()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ODILocationHelperContext.__allocating_init(logger:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_20A4CC8FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_20A4CC904(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_20A4CC90C()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20A4CC938()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_DWORD *)(v0 + 40);
  v4 = swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = sub_20A4597C0;
  *(_DWORD *)(v4 + 24) = v3;
  *(_QWORD *)(v4 + 16) = v2;
  return swift_task_switch();
}

uint64_t sub_20A4CC9A0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20A4CC9C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_20A45A37C;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_2545FAC08 + dword_2545FAC08))(a1, v4);
}

void sub_20A4CCA34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  double v28;
  double v29;
  void (*v30)(char *, uint64_t);
  unsigned int v31;
  unint64_t v32;
  void *v33;
  uint64_t v34;
  void *v35;
  id v36;
  uint64_t inited;
  char v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  id v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  char *v56;
  char *v57;
  char *v58;
  _QWORD *v59;
  _QWORD *v60;
  unint64_t v61;
  unint64_t v62;
  id (*v63)(uint64_t);
  void *v64;
  unint64_t (*v65)();
  uint64_t v66;
  id v67;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB5180);
  MEMORY[0x24BDAC7A8](v4, v5);
  v57 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_253EB4990);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_20A5B8630();
  v12 = *(_QWORD *)(v11 - 8);
  v14 = MEMORY[0x24BDAC7A8](v11, v13);
  v56 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14, v16);
  v58 = (char *)&v56 - v17;
  *(_BYTE *)(v1
           + OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_didCallLocationDelegate) = 1;
  v19 = *(_QWORD *)(v1 + OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_logger + 24);
  v18 = *(_QWORD *)(v1 + OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_logger + 32);
  v59 = (_QWORD *)(v1 + OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_logger);
  v60 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_logger), v19);
  v61 = 0;
  v62 = 0xE000000000000000;
  sub_20A5B8E94();
  swift_bridgeObjectRelease();
  v61 = 0xD00000000000001ALL;
  v62 = 0x800000020A5E1180;
  v20 = a1;
  swift_getErrorValue();
  sub_20A5B923C();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  v21 = v61;
  LOBYTE(v61) = 4;
  (*(void (**)(unint64_t, unint64_t, unint64_t *, uint64_t, uint64_t))(v18 + 16))(v21, v62, &v61, v19, v18);
  swift_bridgeObjectRelease();
  v22 = (void *)sub_20A5B8414();
  v23 = objc_msgSend(v22, sel_code);

  v24 = v2 + OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_locationFetchRequestedAt;
  swift_beginAccess();
  sub_20A4CC480(v24, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_20A44CE2C((uint64_t)v10, &qword_253EB4990);
  }
  else
  {
    v25 = v58;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v58, v10, v11);
    v26 = OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_didFireAnalyticsEvent;
    if ((*(_BYTE *)(v2
                   + OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_didFireAnalyticsEvent) & 1) != 0)
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v25, v11);
    }
    else
    {
      v27 = v56;
      sub_20A5B8618();
      sub_20A5B85A0();
      v29 = v28;
      v30 = *(void (**)(char *, uint64_t))(v12 + 8);
      v30(v27, v11);
      *(float *)&v31 = v29;
      v32 = v31 | 0x8000000000000000;
      v33 = (void *)sub_20A5B88F4();
      v34 = swift_allocObject();
      *(_QWORD *)(v34 + 16) = v32;
      *(_QWORD *)(v34 + 24) = v23;
      v65 = sub_20A4CE1A8;
      v66 = v34;
      v61 = MEMORY[0x24BDAC760];
      v62 = 1107296256;
      v63 = sub_20A4C6DC8;
      v64 = &block_descriptor_32;
      v35 = _Block_copy(&v61);
      swift_release();
      AnalyticsSendEventLazy();
      _Block_release(v35);

      v30(v58, v11);
      *(_BYTE *)(v2 + v26) = 1;
    }
  }
  v61 = v20;
  v36 = (id)v20;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52D0);
  if (swift_dynamicCast())
  {
    sub_20A4CD178(v67);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545FAC20);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_20A5BA9B0;
    *(_OWORD *)(inited + 32) = xmmword_20A5C22A0;
    v38 = sub_20A4C6EB0((uint64_t)v23, inited);
    swift_setDeallocating();
    if ((v38 & 1) != 0)
    {
      v39 = v59[3];
      v40 = v59[4];
      __swift_project_boxed_opaque_existential_1(v59, v39);
      v61 = 0;
      v62 = 0xE000000000000000;
      sub_20A5B8E94();
      sub_20A5B899C();
      swift_getErrorValue();
      sub_20A5B923C();
      sub_20A5B899C();
      swift_bridgeObjectRelease();
      v41 = v61;
      LOBYTE(v61) = 4;
      (*(void (**)(unint64_t, unint64_t, unint64_t *, uint64_t, uint64_t))(v40 + 40))(v41, v62, &v61, v39, v40);
      swift_bridgeObjectRelease();
      return;
    }
  }
  if (v23 == (id)1)
  {
    v42 = v59[3];
    v43 = v59[4];
    __swift_project_boxed_opaque_existential_1(v59, v42);
    v61 = 0;
    v62 = 0xE000000000000000;
    sub_20A5B8E94();
    sub_20A5B899C();
    swift_getErrorValue();
    sub_20A5B923C();
    sub_20A5B899C();
    swift_bridgeObjectRelease();
    v44 = v61;
    LOBYTE(v61) = 4;
    (*(void (**)(unint64_t, unint64_t, unint64_t *, uint64_t, uint64_t))(v43 + 40))(v44, v62, &v61, v42, v43);
    swift_bridgeObjectRelease();
    v20 = 1;
  }
  else
  {
    v61 = v20;
    v45 = (id)v20;
    if (swift_dynamicCast())
    {
      v20 = (uint64_t)v67;
    }
    else
    {
      v46 = v59[3];
      v47 = v59[4];
      __swift_project_boxed_opaque_existential_1(v59, v46);
      v61 = 0;
      v62 = 0xE000000000000000;
      sub_20A5B8E94();
      sub_20A5B899C();
      swift_getErrorValue();
      sub_20A5B923C();
      sub_20A5B899C();
      swift_bridgeObjectRelease();
      v48 = v61;
      LOBYTE(v61) = 4;
      (*(void (**)(unint64_t, unint64_t, unint64_t *, uint64_t, uint64_t))(v47 + 48))(v48, v62, &v61, v46, v47);
      swift_bridgeObjectRelease();
      v49 = (id)v20;
    }
  }
  v50 = *(void **)(v2 + OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_lock);
  objc_msgSend(v50, sel_lock);
  v51 = MEMORY[0x20BD26E90](v2 + OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_parent);
  if (v51)
  {
    v52 = v51;
    v53 = sub_20A5B8B64();
    v54 = (uint64_t)v57;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v57, 1, 1, v53);
    v55 = (_QWORD *)swift_allocObject();
    v55[2] = 0;
    v55[3] = 0;
    v55[4] = v52;
    v55[5] = v20;
    swift_unknownObjectRetain();
    sub_20A4CD23C((id)v20);
    sub_20A4C69D8(v54, (uint64_t)&unk_2545FAC30, (uint64_t)v55);
    swift_release();
    swift_unknownObjectRelease();
  }
  objc_msgSend(v50, sel_unlock);
  sub_20A4CD178((id)v20);
}

void sub_20A4CD178(id a1)
{
  if ((unint64_t)a1 >= 3)

}

uint64_t sub_20A4CD188()
{
  uint64_t v0;
  void *v1;

  swift_unknownObjectRelease();
  swift_release();
  v1 = *(void **)(v0 + 40);
  if ((unint64_t)v1 >= 3)

  return swift_deallocObject();
}

uint64_t sub_20A4CD1C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 40);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_20A45A37C;
  v4 = (_QWORD *)swift_task_alloc();
  v3[2] = v4;
  *v4 = v3;
  v4[1] = sub_20A45A37C;
  return sub_20A4CB0AC(v2);
}

id sub_20A4CD23C(id result)
{
  if ((unint64_t)result >= 3)
    return result;
  return result;
}

uint64_t sub_20A4CD24C()
{
  return swift_deallocObject();
}

unint64_t sub_20A4CD25C()
{
  unint64_t result;

  result = qword_2545FAC48;
  if (!qword_2545FAC48)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D6DE0, &type metadata for LocationProviderError);
    atomic_store(result, (unint64_t *)&qword_2545FAC48);
  }
  return result;
}

uint64_t sub_20A4CD2A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ODISignpost();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_20A4CD2E4(unint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t i;
  id v26;
  void *v27;
  id v28;
  void *v29;
  unsigned int v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(_QWORD, _QWORD);
  char *v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  double v41;
  unsigned int v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, unint64_t, uint64_t *, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  void *v60;
  double v61;
  double v62;
  double v63;
  id v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  _QWORD *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  _QWORD *v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t aBlock;
  unint64_t v85;
  id (*v86)(uint64_t);
  void *v87;
  unint64_t (*v88)();
  uint64_t v89;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB5180);
  MEMORY[0x24BDAC7A8](v4, v5);
  v80 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_253EB4990);
  v9 = MEMORY[0x24BDAC7A8](v7, v8);
  v11 = (char *)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9, v12);
  v83 = (uint64_t *)((char *)&v76 - v13);
  v14 = sub_20A5B8630();
  v15 = *(_QWORD *)(v14 - 8);
  v17 = MEMORY[0x24BDAC7A8](v14, v16);
  v19 = (uint64_t)&v76 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17, v20);
  v22 = (char *)&v76 - v21;
  aBlock = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v24 = sub_20A5B8FCC();
    v23 = v24;
  }
  else
  {
    v23 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v24 = swift_bridgeObjectRetain();
  }
  v76 = v19;
  v77 = v11;
  v81 = v22;
  if (v23)
  {
    if (v23 < 1)
    {
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    v78 = v15;
    v79 = v1;
    v82 = v14;
    for (i = 0; i != v23; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v26 = (id)MEMORY[0x20BD25F48](i, a1);
      else
        v26 = *(id *)(a1 + 8 * i + 32);
      v27 = v26;
      v28 = objc_msgSend(v26, sel_sourceInformation, v76);
      if (!v28)
        goto LABEL_6;
      v29 = v28;
      v30 = objc_msgSend(v28, sel_isSimulatedBySoftware);

      if (!v30)
        goto LABEL_6;
      if (qword_253EB4740 != -1)
        swift_once();
      if (byte_253EBC790 != 1)
      {

      }
      else
      {
LABEL_6:
        sub_20A5B8F0C();
        sub_20A5B8F30();
        sub_20A5B8F3C();
        sub_20A5B8F18();
      }
    }
    swift_bridgeObjectRelease();
    v19 = aBlock;
    v15 = v78;
    v2 = v79;
    v14 = v82;
    if (aBlock < 0)
      goto LABEL_37;
  }
  else
  {
    swift_bridgeObjectRelease();
    v19 = MEMORY[0x24BEE4AF8];
    if ((MEMORY[0x24BEE4AF8] & 0x8000000000000000) != 0)
      goto LABEL_37;
  }
  if ((v19 & 0x4000000000000000) == 0)
  {
    v31 = *(_QWORD *)(v19 + 16);
    if (!v31)
      goto LABEL_38;
    goto LABEL_22;
  }
LABEL_37:
  swift_retain();
  v31 = sub_20A5B8FCC();
  swift_release();
  if (!v31)
  {
LABEL_38:
    swift_release();
    if (v23)
    {
      v72 = *(_QWORD *)((char *)v2
                      + OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_logger
                      + 24);
      v73 = *(_QWORD *)((char *)v2
                      + OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_logger
                      + 32);
      __swift_project_boxed_opaque_existential_1((_QWORD *)((char *)v2 + OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_logger), v72);
      LOBYTE(aBlock) = 4;
      (*(void (**)(unint64_t, unint64_t, uint64_t *, uint64_t, uint64_t))(v73 + 16))(0xD000000000000022, 0x800000020A5E1310, &aBlock, v72, v73);
      sub_20A4CD25C();
      v74 = (void *)swift_allocError();
      *v75 = 2;
      sub_20A4CCA34((uint64_t)v74);

    }
    return;
  }
LABEL_22:
  v32 = (_QWORD *)((char *)v2 + OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_logger);
  v33 = *(_QWORD *)((char *)v2
                  + OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_logger
                  + 24);
  v34 = *(_QWORD *)((char *)v2
                  + OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_logger
                  + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)((char *)v2 + OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_logger), v33);
  LOBYTE(aBlock) = 4;
  (*(void (**)(unint64_t, unint64_t, uint64_t *, uint64_t, uint64_t))(v34 + 16))(0xD000000000000015, 0x800000020A5E12C0, &aBlock, v33, v34);
  *((_BYTE *)v2
  + OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_didCallLocationDelegate) = 1;
  v35 = (uint64_t)v2
      + OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_locationFetchRequestedAt;
  swift_beginAccess();
  v36 = (void (*)(_QWORD, _QWORD))v83;
  sub_20A4CC480(v35, (uint64_t)v83);
  if ((*(unsigned int (**)(void (*)(_QWORD, _QWORD), uint64_t, uint64_t))(v15 + 48))(v36, 1, v14) == 1)
  {
    sub_20A44CE2C((uint64_t)v36, &qword_253EB4990);
  }
  else
  {
    v37 = v81;
    (*(void (**)(char *, void (*)(_QWORD, _QWORD), uint64_t))(v15 + 32))(v81, v36, v14);
    v38 = OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_didFireAnalyticsEvent;
    if ((*((_BYTE *)v2
          + OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_didFireAnalyticsEvent) & 1) != 0)
    {
      (*(void (**)(char *, uint64_t))(v15 + 8))(v37, v14);
    }
    else
    {
      v39 = v76;
      sub_20A5B8618();
      sub_20A5B85A0();
      v41 = v40;
      v83 = *(uint64_t **)(v15 + 8);
      ((void (*)(uint64_t, uint64_t))v83)(v39, v14);
      *(float *)&v42 = v41;
      v82 = v14;
      v43 = v42;
      v44 = (void *)sub_20A5B88F4();
      v45 = swift_allocObject();
      *(_QWORD *)(v45 + 16) = v43;
      *(_QWORD *)(v45 + 24) = 0;
      v88 = sub_20A4CE1A8;
      v89 = v45;
      aBlock = MEMORY[0x24BDAC760];
      v85 = 1107296256;
      v86 = sub_20A4C6DC8;
      v87 = &block_descriptor_45;
      v46 = _Block_copy(&aBlock);
      swift_release();
      AnalyticsSendEventLazy();
      _Block_release(v46);

      *((_BYTE *)v2 + v38) = 1;
      v47 = v2;
      v48 = v32[3];
      v49 = v32[4];
      v79 = __swift_project_boxed_opaque_existential_1(v32, v48);
      aBlock = 0;
      v85 = 0xE000000000000000;
      sub_20A5B8E94();
      sub_20A5B899C();
      sub_20A5B8BDC();
      v50 = aBlock;
      LOBYTE(aBlock) = 4;
      v51 = *(void (**)(uint64_t, unint64_t, uint64_t *, uint64_t, uint64_t))(v49 + 16);
      v52 = v49;
      v2 = v47;
      v51(v50, v85, &aBlock, v48, v52);
      swift_bridgeObjectRelease();
      v53 = v82;
      ((void (*)(char *, uint64_t))v83)(v81, v82);
      v54 = (uint64_t)v77;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v77, 1, 1, v53);
      swift_beginAccess();
      sub_20A4CC430(v54, v35, &qword_253EB4990);
      swift_endAccess();
    }
  }
  v55 = v32[3];
  v56 = v32[4];
  __swift_project_boxed_opaque_existential_1(v32, v55);
  aBlock = 0x6E6F697461636F6CLL;
  v85 = 0xEB00000000203A73;
  v57 = sub_20A459574(0, &qword_2545FAC50);
  MEMORY[0x20BD25B4C](v19, v57);
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  v58 = aBlock;
  LOBYTE(aBlock) = 4;
  (*(void (**)(uint64_t, unint64_t, uint64_t *, uint64_t, uint64_t))(v56 + 72))(v58, v85, &aBlock, v55, v56);
  swift_bridgeObjectRelease();
  v24 = v31 - 1;
  if (__OFSUB__(v31, 1))
    goto LABEL_41;
  if ((v19 & 0xC000000000000001) != 0)
  {
LABEL_42:
    v59 = (id)MEMORY[0x20BD25F48](v24, v19);
    goto LABEL_32;
  }
  if ((v24 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_44;
  }
  if (v24 >= *(_QWORD *)(v19 + 16))
  {
LABEL_44:
    __break(1u);
    return;
  }
  v59 = *(id *)(v19 + 8 * v24 + 32);
LABEL_32:
  v60 = v59;
  swift_release();
  objc_msgSend(v60, sel_coordinate);
  v62 = round(v61 * 1000.0) / 1000.0;
  objc_msgSend(v60, sel_coordinate);
  v64 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBFA80]), sel_initWithLatitude_longitude_, v62, round(v63 * 1000.0) / 1000.0);
  v65 = *(void **)((char *)v2 + OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_lock);
  objc_msgSend(v65, sel_lock);
  v66 = MEMORY[0x20BD26E90]((char *)v2 + OBJC_IVAR____TtCC17CoreODIEssentials17ODILocationHelper23LocationManagerDelegate_parent);
  if (v66)
  {
    v67 = v66;
    v68 = sub_20A5B8B64();
    v69 = (uint64_t)v80;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 56))(v80, 1, 1, v68);
    v70 = (_QWORD *)swift_allocObject();
    v70[2] = 0;
    v70[3] = 0;
    v70[4] = v67;
    v70[5] = v64;
    swift_unknownObjectRetain();
    v71 = v64;
    sub_20A4C69D8(v69, (uint64_t)&unk_2545FAC60, (uint64_t)v70);
    swift_release();
    swift_unknownObjectRelease();
  }
  objc_msgSend(v65, sel_unlock, v76);

}

uint64_t sub_20A4CDB60()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A4CDB94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 40);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_20A45A37C;
  v4 = (_QWORD *)swift_task_alloc();
  v3[2] = v4;
  *v4 = v3;
  v4[1] = sub_20A45A37C;
  return sub_20A4CAB48(v2);
}

uint64_t sub_20A4CDC0C()
{
  return swift_deallocObject();
}

uint64_t sub_20A4CDC1C(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

uint64_t sub_20A4CDC40(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_20A45A37C;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_2545FAC78 + dword_2545FAC78))(a1, v4);
}

uint64_t sub_20A4CDCB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FAC70);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_20A4CDD30(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545FAC70) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_20A45A37C;
  return sub_20A4CA66C(a1, v5, v6, v7, v8);
}

uint64_t sub_20A4CDDC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_20A45A37C;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_2545FAC08 + dword_2545FAC08))(a1, v4);
}

uint64_t sub_20A4CDE38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545FACB0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

void sub_20A4CDEDC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545FACB0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_20A4C933C(v0 + v2, *(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + v3 + 8), *(_QWORD *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8)), *(void **)(v0 + ((((v3 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_20A4CDF3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FACC0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_20A4CDFB4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545FACC0) - 8);
  objc_msgSend(*(id *)(v0+ ((*(_QWORD *)(v1 + 64)+ ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))+ 7) & 0xFFFFFFFFFFFFF8)), sel_authorizationStatus);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FACC0);
  return sub_20A5B8B10();
}

uint64_t sub_20A4CE03C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545FACB0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  swift_release();
  return swift_deallocObject();
}

void sub_20A4CE0DC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545FACB0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_20A4C96B0(v0 + v2, *(id *)(v0 + v3), *(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void **)(v0 + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_20A4CE138(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_20A4597C0;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_2545FACC8 + dword_2545FACC8))(a1, v4);
}

uint64_t sub_20A4CE1E8(char a1, uint64_t a2, SecCertificateRef certificate, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t *a12, void (*a13)(void), uint64_t a14)
{
  SecKeyRef v20;
  __SecKey *v21;
  uint64_t v22;
  _QWORD v25[6];
  uint64_t v26;

  v26 = a6;
  v20 = SecCertificateCopyKey(certificate);
  if (v20)
  {
    v21 = v20;
    sub_20A47BD60(a2, (uint64_t)v25);
    __swift_instantiateConcreteTypeFromMangledName(a12);
    swift_allocObject();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v22 = sub_20A4CE3C8(a1, v25, v21, a4, a5, v26, a7, a8, a9, a10, a11, a13, a14);
  }
  else
  {
    LOWORD(v25[0]) = 0;
    v22 = a4;
    DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000003FLL, 0x800000020A5E17A0, 0, (unsigned __int16 *)v25, 0, 0, 0xD000000000000078, 0x800000020A5E17E0, 0xD000000000000050, 0x800000020A5E1860, 129);
    swift_willThrow();
    sub_20A44BD90(v26, a7);
    sub_20A44BD90(a4, a5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  __swift_destroy_boxed_opaque_existential_1(a2);
  return v22;
}

uint64_t sub_20A4CE3C8(char a1, _QWORD *a2, SecKeyRef key, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void (*a12)(void), uint64_t a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  SecKeyRef v18;
  CFDataRef v20;
  CFDataRef v21;
  __SecKey *v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  void *v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  id v39;
  void *v40;
  unsigned __int8 v41;
  unint64_t v42;
  char v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  id v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  void *v54;
  id v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t inited;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  __int16 v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  CFErrorRef error[3];

  v15 = v13;
  v18 = key;
  error[1] = *(CFErrorRef *)MEMORY[0x24BDAC8D0];
  v105 = a8;
  v106 = a9;
  v107 = a10;
  v108 = a11;
  error[0] = 0;
  v20 = SecKeyCopyExternalRepresentation(key, error);
  if (!v20)
  {
    v104 = 198;
    sub_20A461CCC(error[0], 0xD000000000000033, 0x800000020A5E18C0, &v104);
    swift_willThrow();
    goto LABEL_23;
  }
  v21 = v20;
  v95 = a1;
  v22 = v18;
  v23 = a5;
  v100 = a4;
  v24 = sub_20A5B8564();
  v26 = v25;

  v27 = (void *)sub_20A5B8540();
  v28 = DigestSha256(v27);

  if (!v28)
  {
    v104 = 0;
    DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000030, 0x800000020A5E1900, 0, (unsigned __int16 *)&v104, 0, 0, 0xD000000000000078, 0x800000020A5E17E0, 0xD00000000000004ELL, 0x800000020A5E1940, 145);
    swift_willThrow();
    sub_20A44BD90(v24, v26);
    a4 = v100;
    a5 = v23;
    v18 = v22;
    goto LABEL_23;
  }
  v98 = v23;
  v99 = v26;
  v96 = v15;
  v29 = sub_20A5B8564();
  v31 = v30;

  v32 = sub_20A5B854C();
  v34 = v33;
  sub_20A44BD90(v29, v31);
  sub_20A5B8288();
  swift_allocObject();
  sub_20A5B827C();
  a12();
  v35 = sub_20A5B8270();
  if (v14)
  {
    sub_20A44BD90(v24, v26);
    swift_bridgeObjectRelease();
    swift_release();
    v18 = v22;
    v15 = v96;
    a5 = v98;
    a4 = v100;
LABEL_23:
    sub_20A44BD90(a6, a7);
    sub_20A44BD90(a4, a5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_deallocPartialClassInstance();
    goto LABEL_24;
  }
  v37 = v35;
  v38 = v36;
  v90 = v32;
  v92 = v34;
  swift_release();
  v39 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v91 = v24;
  if (qword_253EB4740 != -1)
    swift_once();
  v93 = v38;
  v94 = v37;
  if ((byte_253EBC790 & 1) != 0)
  {
    v40 = (void *)sub_20A5B88F4();
    v41 = objc_msgSend(v39, sel_BOOLForKey_, v40);

    v15 = v96;
    v42 = v99;
    a5 = v98;
    v18 = v22;
    v43 = v95;
    if ((v41 & 1) != 0)
    {
      if (qword_253EB5040 != -1)
        swift_once();
      v44 = (id)qword_253EBC880;
      sub_20A5B8C48();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52C0);
      v45 = swift_allocObject();
      *(_OWORD *)(v45 + 16) = xmmword_20A5BA9A0;
      v46 = sub_20A5B854C();
      v48 = v47;
      *(_QWORD *)(v45 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v45 + 64) = sub_20A450420();
      *(_QWORD *)(v45 + 32) = v46;
      *(_QWORD *)(v45 + 40) = v48;
      sub_20A5B87B0();

      swift_bridgeObjectRelease();
      a5 = v98;
      v42 = v99;
    }
  }
  else
  {

    v15 = v96;
    v42 = v99;
    a5 = v98;
    v18 = v22;
    v43 = v95;
  }
  if (!v43)
  {
    swift_bridgeObjectRelease();
    v104 = 75;
    DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000003BLL, 0x800000020A5E1A30, 0, (unsigned __int16 *)&v104, 0, 0, 0xD000000000000078, 0x800000020A5E17E0, 0xD00000000000004ELL, 0x800000020A5E1940, 156);
    swift_willThrow();
    sub_20A44BD90(v91, v42);
    v61 = v38;
    v60 = v94;
LABEL_22:
    sub_20A44BD90(v60, v61);
    a4 = v100;
    goto LABEL_23;
  }
  v49 = (void *)sub_20A5B8540();
  v50 = DigestSha256(v49);

  if (!v50)
  {
    swift_bridgeObjectRelease();
    v104 = 0;
    DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000033, 0x800000020A5E19B0, 0, (unsigned __int16 *)&v104, 0, 0, 0xD000000000000078, 0x800000020A5E17E0, 0xD00000000000004ELL, 0x800000020A5E1940, 159);
    swift_willThrow();
    sub_20A44BD90(v91, v99);
    v61 = v38;
    v60 = v94;
    goto LABEL_22;
  }
  v51 = sub_20A5B8564();
  v53 = v52;

  v54 = (void *)sub_20A5B8540();
  v55 = DigestSha256(v54);

  if (!v55)
  {
    swift_bridgeObjectRelease();
    v104 = 0;
    DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000030, 0x800000020A5E19F0, 0, (unsigned __int16 *)&v104, 0, 0, 0xD000000000000078, 0x800000020A5E17E0, 0xD00000000000004ELL, 0x800000020A5E1940, 162);
    swift_willThrow();
    sub_20A44BD90(v91, v99);
    sub_20A44BD90(v94, v93);
    v60 = v51;
    v61 = v53;
    goto LABEL_22;
  }
  v97 = v51;
  v56 = sub_20A5B8564();
  v88 = v57;
  v89 = v56;

  v86 = a2[3];
  v84 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v86);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB4928);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A5BA9B0;
  *(_BYTE *)(inited + 32) = 0;
  *(_QWORD *)(inited + 40) = v100;
  *(_QWORD *)(inited + 48) = a5;
  *(_BYTE *)(inited + 56) = 1;
  *(_QWORD *)(inited + 64) = a6;
  *(_QWORD *)(inited + 72) = a7;
  v59 = sub_20A479980(inited);
  swift_setDeallocating();
  sub_20A45964C(v100, a5);
  sub_20A45964C(a6, a7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB4478);
  swift_arrayDestroy();
  v63 = (*(uint64_t (**)(uint64_t, unint64_t, SecKeyRef, unint64_t, uint64_t))(v84 + 16))(v94, v93, v18, v59, v86);
  v65 = v64;
  v85 = v66;
  v87 = v67;
  swift_bridgeObjectRelease();
  sub_20A44BD90(v63, v65);
  v68 = a2[3];
  v69 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v68);
  v70 = (*(uint64_t (**)(uint64_t, uint64_t))(v69 + 40))(v68, v69);
  v72 = v71;
  v73 = sub_20A5B854C();
  v75 = v74;
  sub_20A44BD90(v70, v72);
  v76 = sub_20A5B854C();
  v78 = v77;
  v79 = sub_20A5B854C();
  *(_BYTE *)(v15 + 32) = v95;
  *(_QWORD *)(v15 + 40) = v73;
  *(_QWORD *)(v15 + 48) = v75;
  *(_QWORD *)(v15 + 56) = v90;
  *(_QWORD *)(v15 + 64) = v92;
  *(_QWORD *)(v15 + 72) = v76;
  *(_QWORD *)(v15 + 80) = v78;
  *(_QWORD *)(v15 + 88) = v79;
  *(_QWORD *)(v15 + 96) = v80;
  *(_QWORD *)(v15 + 112) = 0;
  *(_QWORD *)(v15 + 120) = 0;
  *(_QWORD *)(v15 + 104) = 0;
  v81 = sub_20A5B854C();
  v83 = v82;
  sub_20A44BD90(v91, v99);
  sub_20A44BD90(v94, v93);
  sub_20A44BD90(v97, v53);
  sub_20A44BD90(v85, v87);
  sub_20A44BD90(v89, v88);
  sub_20A44BD90(a6, a7);
  sub_20A44BD90(v100, v98);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  *(_QWORD *)(v15 + 16) = v81;
  *(_QWORD *)(v15 + 24) = v83;
LABEL_24:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a2);
  return v15;
}

uint64_t static ODNAssessmentGUIDManager.getECv3SHEncryptedContainers(tsidEncryptionCertString:tsid:assessmentGUID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_20A4D0620(a1, a2, a3, a4, a5, a6);
}

uint64_t getECv3SHEncryptedContainers(tsidEncryptionCertString:tsid:assessmentGUID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_20A4D0620(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_20A4CED74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _OWORD v54[8];
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  _OWORD v67[2];
  _QWORD v68[6];
  __int128 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  _OWORD v81[8];
  uint64_t v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  _OWORD v90[2];
  _OWORD v91[4];
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  uint64_t v111;
  unint64_t v112;

  v6 = type metadata accessor for PregeneratedAssessment();
  v7 = sub_20A5B8504();
  if (v8 >> 60 == 15)
    goto LABEL_4;
  v9 = v7;
  v10 = v8;
  v11 = sub_20A5B8504();
  if (v12 >> 60 == 15)
  {
    sub_20A44CFC4(v9, v10);
LABEL_4:
    LOWORD(v103) = 88;
    DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000022, 0x800000020A5E1620, 0, (unsigned __int16 *)&v103, 0, 0, 0xD000000000000074, 0x800000020A5DD500, 0x7344495547746567, 0xEF293A6D6F726628, 45);
    return swift_willThrow();
  }
  v14 = v11;
  v15 = v12;
  if (!v2[4])
  {
    LOWORD(v103) = 0;
    DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000019, 0x800000020A5E1650, 0, (unsigned __int16 *)&v103, 0, 0, 0xD000000000000074, 0x800000020A5DD500, 0x7344495547746567, 0xEF293A6D6F726628, 49);
    swift_willThrow();
    sub_20A44CFC4(v14, v15);
    return sub_20A44CFC4(v9, v10);
  }
  v44 = a2;
  v45 = a1;
  v49 = v12;
  v50 = v2[4];
  v48 = v11;
  v16 = v2[5];
  v51 = v2[6];
  v17 = v2;
  v18 = v2[7];
  v19 = v17[9];
  v20 = v17[11];
  v52 = v17[8];
  v53 = v17[10];
  v112 = v10;
  v21 = v17[13];
  v47 = v17[12];
  v46 = *((_BYTE *)v17 + 112);
  sub_20A5B8264();
  swift_allocObject();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_20A5B8258();
  sub_20A48A920();
  sub_20A5B824C();
  if (v3)
  {
    swift_release();
    sub_20A48A9EC(v50);
    sub_20A44CFC4(v48, v49);
    v22 = v9;
    return sub_20A44CFC4(v22, v112);
  }
  v43 = v9;
  sub_20A5B824C();
  v39 = v103;
  v41 = *((_QWORD *)&v104 + 1);
  v42 = *((_QWORD *)&v103 + 1);
  v37 = v105;
  v38 = v104;
  v23 = v106;
  v40 = *((_QWORD *)&v105 + 1);
  v92 = v50;
  v93 = v16;
  v94 = v51;
  v95 = v18;
  v96 = v52;
  v97 = v19;
  v98 = v53;
  v99 = v20;
  v100 = v47;
  v101 = v21;
  v102 = v46;
  v91[0] = v103;
  v91[1] = v104;
  v91[2] = v105;
  v91[3] = v106;
  sub_20A44880C(v91, (uint64_t)&v103);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v89 = v109;
  v90[0] = v110;
  *(_QWORD *)&v90[1] = v111;
  v85 = v105;
  v86 = v106;
  v87 = v107;
  v88 = v108;
  v83 = v103;
  v84 = v104;
  v70 = v50;
  v71 = v16;
  v72 = v51;
  v73 = v18;
  v74 = v52;
  v75 = v19;
  v76 = v53;
  v77 = v20;
  v78 = v47;
  v79 = v21;
  v80 = v46;
  v68[0] = v39;
  v68[1] = v42;
  v68[2] = v38;
  v68[3] = v41;
  v68[4] = v37;
  v68[5] = v40;
  v69 = v23;
  sub_20A44880C(v68, (uint64_t)v81);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v62 = v81[2];
  v63 = v81[3];
  *(_QWORD *)&v67[1] = v82;
  v66 = v81[6];
  v67[0] = v81[7];
  v64 = v81[4];
  v65 = v81[5];
  v60 = v81[0];
  v61 = v81[1];
  if (*(_OWORD *)((char *)v90 + 8) != *(_OWORD *)(v45 + *(int *)(v6 + 32)) && (sub_20A5B91AC() & 1) == 0
    || *(_OWORD *)((char *)v67 + 8) != *(_OWORD *)(v45 + *(int *)(v6 + 40)) && (sub_20A5B91AC() & 1) == 0)
  {
    sub_20A44D178((uint64_t)&v83);
    sub_20A44D178((uint64_t)&v60);
    LOWORD(v54[0]) = 109;
    DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000003FLL, 0x800000020A5E1670, 0, (unsigned __int16 *)v54, 0, 0, 0xD000000000000074, 0x800000020A5DD500, 0x7344495547746567, 0xEF293A6D6F726628, 62);
    swift_willThrow();
    swift_release();
    sub_20A48A9EC(v50);
    sub_20A44CFC4(v48, v49);
    v22 = v9;
    return sub_20A44CFC4(v22, v112);
  }
  if (qword_253EB4A80 != -1)
    swift_once();
  v24 = sub_20A5B8804();
  __swift_project_value_buffer(v24, (uint64_t)qword_253EB4950);
  v25 = sub_20A5B87EC();
  v26 = sub_20A5B8C48();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v27 = 0;
    _os_log_impl(&dword_20A443000, v25, v26, "using guids from pre-generated assessment", v27, 2u);
    MEMORY[0x20BD26DB8](v27, -1, -1);
  }

  v28 = v17[3];
  v58 = v17[2];
  v59 = v28;
  swift_bridgeObjectRetain();
  sub_20A5B8E94();
  swift_bridgeObjectRelease();
  v56 = 0xD000000000000016;
  v57 = 0x800000020A5E16B0;
  ODIClientGUID.description.getter();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  v54[6] = v66;
  v54[7] = v67[0];
  v55 = *(_QWORD *)&v67[1];
  v54[2] = v62;
  v54[3] = v63;
  v54[4] = v64;
  v54[5] = v65;
  v54[0] = v60;
  v54[1] = v61;
  ODIClientGUID.description.getter();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  LOBYTE(v54[0]) = 14;
  CoreODILogger.debug(_:category:)(0xD000000000000016, 0x800000020A5E16B0, v54);
  sub_20A44CFC4(v43, v112);
  swift_release();
  swift_bridgeObjectRelease();
  sub_20A48A9EC(v50);
  sub_20A44CFC4(v48, v49);
  result = swift_bridgeObjectRelease();
  v29 = v90[0];
  *(_OWORD *)(v44 + 96) = v89;
  *(_OWORD *)(v44 + 112) = v29;
  v30 = v86;
  *(_OWORD *)(v44 + 32) = v85;
  *(_OWORD *)(v44 + 48) = v30;
  v31 = v88;
  *(_OWORD *)(v44 + 64) = v87;
  *(_OWORD *)(v44 + 80) = v31;
  v32 = v84;
  *(_OWORD *)v44 = v83;
  *(_OWORD *)(v44 + 16) = v32;
  v33 = v64;
  *(_OWORD *)(v44 + 216) = v65;
  v34 = v67[0];
  *(_OWORD *)(v44 + 232) = v66;
  *(_OWORD *)(v44 + 248) = v34;
  v35 = v60;
  *(_OWORD *)(v44 + 152) = v61;
  v36 = v63;
  *(_OWORD *)(v44 + 168) = v62;
  *(_OWORD *)(v44 + 184) = v36;
  *(_OWORD *)(v44 + 200) = v33;
  *(_QWORD *)(v44 + 128) = *(_QWORD *)&v90[1];
  *(_QWORD *)(v44 + 264) = *(_QWORD *)&v67[1];
  *(_OWORD *)(v44 + 136) = v35;
  return result;
}

uint64_t sub_20A4CF7E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 1016) = v1;
  *(_QWORD *)(v2 + 1008) = a1;
  return swift_task_switch();
}

uint64_t sub_20A4CF804()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD *v13;
  unsigned __int8 v15[9];

  v1 = *(_QWORD *)(v0 + 1016);
  v2 = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(v0 + 1024) = v2;
  v3 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)(v0 + 1032) = v3;
  v4 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v0 + 1040) = v4;
  v5 = *(_QWORD *)(v1 + 56);
  *(_QWORD *)(v0 + 1048) = v5;
  v6 = *(_QWORD *)(v1 + 64);
  *(_QWORD *)(v0 + 1056) = v6;
  v7 = *(_QWORD *)(v1 + 72);
  *(_QWORD *)(v0 + 1064) = v7;
  v8 = *(_QWORD *)(v1 + 80);
  *(_QWORD *)(v0 + 1072) = v8;
  v9 = *(_QWORD *)(v1 + 88);
  *(_QWORD *)(v0 + 1080) = v9;
  v10 = *(_QWORD *)(v1 + 96);
  *(_QWORD *)(v0 + 1088) = v10;
  v11 = *(_QWORD *)(v1 + 104);
  *(_QWORD *)(v0 + 1096) = v11;
  v12 = *(_BYTE *)(v1 + 112);
  *(_BYTE *)(v0 + 913) = v12;
  if (v2)
  {
    *(_QWORD *)(v0 + 832) = v2;
    *(_QWORD *)(v0 + 840) = v3;
    *(_QWORD *)(v0 + 848) = v4;
    *(_QWORD *)(v0 + 856) = v5;
    *(_QWORD *)(v0 + 864) = v6;
    *(_QWORD *)(v0 + 872) = v7;
    *(_QWORD *)(v0 + 880) = v8;
    *(_QWORD *)(v0 + 888) = v9;
    *(_QWORD *)(v0 + 896) = v10;
    *(_QWORD *)(v0 + 904) = v11;
    *(_BYTE *)(v0 + 912) = v12;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 1104) = v13;
    *v13 = v0;
    v13[1] = sub_20A4CF9D0;
    return DIPClientGUIDFactory.createNewAssessmentGUID()(v0 + 16);
  }
  else
  {
    v15[0] = -118;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000018, 0x800000020A5E1500, 0, v15, 0, 0, 0xD000000000000074, 0x800000020A5DD500, 0x65746172656E6567, 0xEF29287344495547, 152);
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_20A4CF9D0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 1112) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A4CFA34()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _QWORD *v20;
  _QWORD v21[3];

  v1 = *(_QWORD *)(v0 + 1112);
  v2 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 384) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 400) = v2;
  v3 = *(_QWORD *)(v0 + 144);
  *(_QWORD *)(v0 + 416) = v3;
  v4 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 320) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 336) = v4;
  v5 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 352) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 368) = v5;
  v6 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 288) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 304) = v6;
  v7 = *(_QWORD *)(v0 + 408);
  v8 = v3;
  *(_QWORD *)(v0 + 1120) = v7;
  *(_QWORD *)(v0 + 1128) = v3;
  swift_bridgeObjectRetain();
  *(_QWORD *)(v0 + 1136) = sub_20A458B5C(v7, v8);
  *(_QWORD *)(v0 + 1144) = v9;
  if (v1)
  {
    v10 = *(_QWORD *)(v0 + 1024);
    swift_bridgeObjectRelease();
    sub_20A44D178(v0 + 288);
    v11 = v10;
LABEL_5:
    sub_20A48A9EC(v11);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  if (v9 >> 60 == 15)
  {
    v12 = *(_QWORD *)(v0 + 1024);
    sub_20A44D178(v0 + 288);
    sub_20A5B8E94();
    swift_bridgeObjectRelease();
    v21[0] = 0xD00000000000008DLL;
    v21[1] = 0x800000020A5E1520;
    sub_20A5B899C();
    swift_bridgeObjectRelease();
    sub_20A5B899C();
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000026, 0x800000020A5E1520, 0, (unsigned __int8 *)v21, 0, 0, 0xD000000000000074, 0x800000020A5DD500, 0x65746172656E6567, 0xEF29287344495547, 159);
    swift_bridgeObjectRelease();
    swift_willThrow();
    v11 = v12;
    goto LABEL_5;
  }
  v14 = *(_BYTE *)(v0 + 913);
  v15 = *(_QWORD *)(v0 + 1096);
  v16 = *(_QWORD *)(v0 + 1088);
  v17 = *(_OWORD *)(v0 + 1072);
  v18 = *(_OWORD *)(v0 + 1056);
  v19 = *(_OWORD *)(v0 + 1040);
  *(_OWORD *)(v0 + 920) = *(_OWORD *)(v0 + 1024);
  *(_OWORD *)(v0 + 936) = v19;
  *(_OWORD *)(v0 + 952) = v18;
  *(_OWORD *)(v0 + 968) = v17;
  *(_QWORD *)(v0 + 984) = v16;
  *(_QWORD *)(v0 + 992) = v15;
  *(_BYTE *)(v0 + 1000) = v14;
  v20 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 1152) = v20;
  *v20 = v0;
  v20[1] = sub_20A4CFD38;
  return DIPClientGUIDFactory.createNewTrainingGUID()(v0 + 424);
}

uint64_t sub_20A4CFD38()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 1160) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_20A44D178(v2 + 288);
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_20A4CFDB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _OWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(void);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  unint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[3];

  v1 = *(_QWORD *)(v0 + 1160);
  v2 = *(_QWORD *)(v0 + 552);
  *(_QWORD *)(v0 + 824) = v2;
  v3 = *(_OWORD *)(v0 + 536);
  *(_OWORD *)(v0 + 792) = *(_OWORD *)(v0 + 520);
  *(_OWORD *)(v0 + 808) = v3;
  v4 = *(_OWORD *)(v0 + 472);
  *(_OWORD *)(v0 + 728) = *(_OWORD *)(v0 + 456);
  *(_OWORD *)(v0 + 744) = v4;
  v5 = *(_OWORD *)(v0 + 504);
  *(_OWORD *)(v0 + 760) = *(_OWORD *)(v0 + 488);
  *(_OWORD *)(v0 + 776) = v5;
  v6 = *(_OWORD *)(v0 + 440);
  *(_OWORD *)(v0 + 696) = *(_OWORD *)(v0 + 424);
  *(_OWORD *)(v0 + 712) = v6;
  v7 = *(_QWORD *)(v0 + 816);
  v8 = v2;
  swift_bridgeObjectRetain();
  v9 = sub_20A458B5C(v7, v8);
  if (v1)
  {
    v11 = *(_QWORD *)(v0 + 1144);
    v12 = *(_QWORD *)(v0 + 1136);
    v13 = *(_QWORD *)(v0 + 1024);
    swift_bridgeObjectRelease();
    sub_20A44D178(v0 + 696);
    sub_20A44CFC4(v12, v11);
    swift_bridgeObjectRelease();
    sub_20A44D178(v0 + 288);
    v14 = v13;
  }
  else
  {
    v15 = v10;
    v16 = (_OWORD *)(v0 + 288);
    v35 = v8;
    if (v10 >> 60 != 15)
    {
      v20 = v9;
      v34 = *(_QWORD *)(v0 + 1144);
      v21 = *(_QWORD *)(v0 + 1136);
      v33 = *(_OWORD *)(v0 + 1120);
      v22 = *(_QWORD *)(v0 + 1008);
      sub_20A48A9EC(*(_QWORD *)(v0 + 1024));
      v23 = *(_OWORD *)(v0 + 400);
      *(_OWORD *)(v0 + 656) = *(_OWORD *)(v0 + 384);
      *(_OWORD *)(v0 + 672) = v23;
      *(_QWORD *)(v0 + 688) = *(_QWORD *)(v0 + 416);
      v24 = *(_OWORD *)(v0 + 336);
      *(_OWORD *)(v0 + 592) = *(_OWORD *)(v0 + 320);
      *(_OWORD *)(v0 + 608) = v24;
      v25 = *(_OWORD *)(v0 + 368);
      *(_OWORD *)(v0 + 624) = *(_OWORD *)(v0 + 352);
      *(_OWORD *)(v0 + 640) = v25;
      v26 = *(_OWORD *)(v0 + 304);
      *(_OWORD *)(v0 + 560) = *v16;
      *(_OWORD *)(v0 + 576) = v26;
      nullsub_1(v0 + 560);
      v27 = *(_OWORD *)(v0 + 760);
      *(_OWORD *)(v0 + 232) = *(_OWORD *)(v0 + 776);
      v28 = *(_OWORD *)(v0 + 808);
      *(_OWORD *)(v0 + 248) = *(_OWORD *)(v0 + 792);
      *(_OWORD *)(v0 + 264) = v28;
      v29 = *(_OWORD *)(v0 + 696);
      *(_OWORD *)(v0 + 168) = *(_OWORD *)(v0 + 712);
      v30 = *(_OWORD *)(v0 + 744);
      *(_OWORD *)(v0 + 184) = *(_OWORD *)(v0 + 728);
      *(_OWORD *)(v0 + 200) = v30;
      *(_OWORD *)(v0 + 216) = v27;
      *(_QWORD *)(v0 + 280) = *(_QWORD *)(v0 + 824);
      *(_OWORD *)(v0 + 152) = v29;
      nullsub_1(v0 + 152);
      sub_20A44BDD4(v0 + 560, v22);
      *(_OWORD *)(v22 + 136) = v33;
      *(_QWORD *)(v22 + 152) = v21;
      *(_QWORD *)(v22 + 160) = v34;
      sub_20A44BDD4(v0 + 152, v22 + 168);
      *(_QWORD *)(v22 + 304) = v7;
      *(_QWORD *)(v22 + 312) = v35;
      *(_QWORD *)(v22 + 320) = v20;
      *(_QWORD *)(v22 + 328) = v15;
      v19 = *(uint64_t (**)(void))(v0 + 8);
      return v19();
    }
    v17 = *(_QWORD *)(v0 + 1136);
    v32 = *(_QWORD *)(v0 + 1144);
    v18 = *(_QWORD *)(v0 + 1024);
    sub_20A44D178((uint64_t)v16);
    swift_bridgeObjectRelease();
    sub_20A44D178(v0 + 696);
    sub_20A5B8E94();
    swift_bridgeObjectRelease();
    v36[0] = 0xD00000000000008DLL;
    v36[1] = 0x800000020A5E1550;
    sub_20A5B899C();
    swift_bridgeObjectRelease();
    sub_20A5B899C();
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000024, 0x800000020A5E1550, 0, (unsigned __int8 *)v36, 0, 0, 0xD000000000000074, 0x800000020A5DD500, 0x65746172656E6567, 0xEF29287344495547, 166);
    swift_bridgeObjectRelease();
    swift_willThrow();
    sub_20A44CFC4(v17, v32);
    v14 = v18;
  }
  sub_20A48A9EC(v14);
  v19 = *(uint64_t (**)(void))(v0 + 8);
  return v19();
}

uint64_t sub_20A4D01A8()
{
  uint64_t v0;

  sub_20A48A9EC(*(_QWORD *)(v0 + 1024));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4D020C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 1024);
  sub_20A44CFC4(*(_QWORD *)(v0 + 1136), *(_QWORD *)(v0 + 1144));
  sub_20A48A9EC(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ODNAssessmentGUIDManager.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_20A48A9EC(*(_QWORD *)(v0 + 32));
  return v0;
}

uint64_t ODNAssessmentGUIDManager.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_20A48A9EC(*(_QWORD *)(v0 + 32));
  return swift_deallocClassInstance();
}

uint64_t sub_20A4D0354()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char v10;
  uint64_t v11;
  unint64_t v12;

  v0 = sub_20A5B8504();
  if (v1 >> 60 != 15)
  {
    v2 = v0;
    v3 = v1;
    v4 = sub_20A5B8504();
    if (v5 >> 60 != 15)
    {
      v6 = v4;
      v7 = v5;
      sub_20A5B8264();
      swift_allocObject();
      sub_20A5B8258();
      __swift_instantiateConcreteTypeFromMangledName(&qword_253EB46D0);
      sub_20A4D0AE4(&qword_2545FA350, &qword_253EB46D0);
      sub_20A5B824C();
      v8 = v11;
      __swift_instantiateConcreteTypeFromMangledName(&qword_253EB46D8);
      sub_20A4D0AE4(&qword_2545FACF0, &qword_253EB46D8);
      sub_20A5B824C();
      sub_20A44CFC4(v2, v3);
      swift_release();
      sub_20A44CFC4(v6, v7);
      return v8;
    }
    sub_20A44CFC4(v2, v3);
  }
  v11 = 45;
  v12 = 0xE100000000000000;
  v10 = 14;
  CoreODILogger.info(_:category:)(0xD000000000000035, 0x800000020A5E1580, &v10);
  return 0;
}

uint64_t sub_20A4D0620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  __SecCertificate *v11;
  id v12;
  __SecCertificate *v13;
  __SecKey *v14;
  __SecKey *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  __SecCertificate *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  SecCertificateRef certificate;
  unsigned __int8 v26[24];
  SecCertificateRef v27;
  _UNKNOWN **v28;
  uint64_t v29;

  if (a2)
  {
    swift_bridgeObjectRetain();
    v11 = sub_20A4628DC();
    if (v6)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v13 = v11;
      v14 = SecCertificateCopyKey(v11);
      if (v14 && (v15 = v14, v16 = sub_20A462A68(v14), v18 = v17, v15, v18 >> 60 != 15))
      {
        v29 = v16;
        certificate = (SecCertificateRef)type metadata accessor for DIPECIESSessionECV3SH();
        swift_allocObject();
        v27 = certificate;
        v28 = &off_24C319A20;
        *(_QWORD *)v26 = sub_20A4AC4AC(0);
        sub_20A5B836C();
        swift_allocObject();
        v24 = *(_QWORD *)v26;
        swift_retain();
        v20 = v13;
        v21 = sub_20A5B8348() | 0x4000000000000000;
        v22 = v29;
        sub_20A45964C(v29, v18);
        a3 = sub_20A4CE1E8(2, (uint64_t)v26, v20, 0x4100000000, v21, v29, v18, 49, 0xE100000000000000, a3, a4, &qword_253EB46D0, (void (*)(void))sub_20A4D0B68, (uint64_t)&type metadata for TrainingSignalId);
        v27 = certificate;
        v28 = &off_24C319A20;
        *(_QWORD *)v26 = v24;
        swift_allocObject();
        swift_retain();
        swift_bridgeObjectRetain();
        v23 = sub_20A5B8348();
        sub_20A4CE1E8(2, (uint64_t)v26, v20, 0x4100000000, v23 | 0x4000000000000000, v22, v18, 49, 0xE100000000000000, a5, a6, &qword_253EB46D8, (void (*)(void))sub_20A4D0B24, (uint64_t)&type metadata for AssessmentGUIDContainer);
        swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v26[0] = 91;
        ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000003ALL, 0x800000020A5E1710, 0, v26, 0, 0, 0xD000000000000074, 0x800000020A5DD500, 0xD00000000000004BLL, 0x800000020A5E1750, 118);
        swift_willThrow();

      }
    }
  }
  else
  {
    if (qword_253EB5040 != -1)
      swift_once();
    v12 = (id)qword_253EBC880;
    sub_20A5B8C3C();
    sub_20A5B87B0();

    return 0;
  }
  return a3;
}

uint64_t sub_20A4D09E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 16) + *(_QWORD *)(a3 + 16));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_20A4597C0;
  return v9(a1, a2, a3);
}

uint64_t sub_20A4D0A60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t sub_20A4D0A78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t sub_20A4D0A90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 40))();
}

uint64_t sub_20A4D0A98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 48))();
}

uint64_t sub_20A4D0AB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t type metadata accessor for ODNAssessmentGUIDManager()
{
  return objc_opt_self();
}

uint64_t method lookup function for ODNAssessmentGUIDManager()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_20A4D0AE4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for EncryptedDataContainer<A>, v4);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_20A4D0B24()
{
  unint64_t result;

  result = qword_253EB46F8;
  if (!qword_253EB46F8)
  {
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for AssessmentGUIDContainer, &type metadata for AssessmentGUIDContainer);
    atomic_store(result, (unint64_t *)&qword_253EB46F8);
  }
  return result;
}

unint64_t sub_20A4D0B68()
{
  unint64_t result;

  result = qword_253EB4560;
  if (!qword_253EB4560)
  {
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for TrainingSignalId, &type metadata for TrainingSignalId);
    atomic_store(result, (unint64_t *)&qword_253EB4560);
  }
  return result;
}

uint64_t sub_20A4D0BAC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[9] = v0;
  v1[10] = swift_getObjectType();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9DC0);
  v1[11] = v2;
  v1[12] = *(_QWORD *)(v2 - 8);
  v1[13] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FAE20);
  v1[14] = swift_task_alloc();
  v1[15] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A4D0C50()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  __int128 v15;
  char v16;

  v1 = v0[15];
  v2 = v0[11];
  v3 = v0[12];
  v4 = v0[9] + OBJC_IVAR____TtC17CoreODIEssentials20ODINFHardwareMonitor_continuation;
  swift_beginAccess();
  sub_20A4D4554(v4, v1);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2))
  {
    sub_20A44CE2C(v0[15], &qword_2545FAE20);
  }
  else
  {
    v5 = v0[15];
    v7 = v0[12];
    v6 = v0[13];
    v8 = v0[11];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v5, v8);
    sub_20A44CE2C(v5, &qword_2545FAE20);
    sub_20A4D449C();
    v9 = swift_allocError();
    *v10 = 2;
    v0[8] = v9;
    sub_20A5B8B04();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  }
  v11 = v0[14];
  v15 = *(_OWORD *)(v0 + 9);
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v0[12] + 56))(v11, 1, 1, v0[11]);
  swift_beginAccess();
  sub_20A4D459C(v11, v4);
  swift_endAccess();
  v16 = 0;
  CoreODILogger.debug(_:category:)(0xD000000000000031, 0x800000020A5E1C60, &v16);
  sub_20A498124(&qword_2545FAE28, 255, (uint64_t (*)(uint64_t))type metadata accessor for ODINFHardwareMonitor, (uint64_t)&unk_20A5C27E4);
  v12 = swift_task_alloc();
  v0[16] = v12;
  *(_OWORD *)(v12 + 16) = v15;
  v13 = (_QWORD *)swift_task_alloc();
  v0[17] = v13;
  *v13 = v0;
  v13[1] = sub_20A4D0EA0;
  return sub_20A5B9200();
}

uint64_t sub_20A4D0EA0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A4D0F14()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4D0F5C()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4D0FB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v21;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB5180);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FAE20);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9DC0);
  v15 = *(_QWORD *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v13, a1, v14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
  v16 = a2 + OBJC_IVAR____TtC17CoreODIEssentials20ODINFHardwareMonitor_continuation;
  swift_beginAccess();
  sub_20A4D459C((uint64_t)v13, v16);
  swift_endAccess();
  v17 = sub_20A5B8B64();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v9, 1, 1, v17);
  v18 = sub_20A498124(&qword_2545FAE28, 255, (uint64_t (*)(uint64_t))type metadata accessor for ODINFHardwareMonitor, (uint64_t)&unk_20A5C27E4);
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = a2;
  v19[3] = v18;
  v19[4] = a2;
  v19[5] = a3;
  swift_retain_n();
  sub_20A4B2644((uint64_t)v9, (uint64_t)&unk_2545FAE38, (uint64_t)v19);
  return swift_release();
}

uint64_t sub_20A4D1168(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch();
}

uint64_t sub_20A4D1180()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v1;
  *v1 = v0;
  v1[1] = sub_20A4D11D0;
  return sub_20A5B8BA0();
}

uint64_t sub_20A4D11D0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    return (*(uint64_t (**)(void))(v2 + 8))();
  else
    return swift_task_switch();
}

uint64_t sub_20A4D1238()
{
  uint64_t v0;
  char v2;

  v2 = 0;
  CoreODILogger.info(_:category:)(0xD000000000000049, 0x800000020A5E1CC0, &v2);
  sub_20A4D12C4();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4D12C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE v16[24];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9DC0);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1, v3);
  v5 = &v16[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FAE20);
  v8 = MEMORY[0x24BDAC7A8](v6, v7);
  v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v8, v11);
  v13 = &v16[-v12];
  v14 = v0 + OBJC_IVAR____TtC17CoreODIEssentials20ODINFHardwareMonitor_continuation;
  swift_beginAccess();
  sub_20A4D4554(v14, (uint64_t)v13);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v2 + 48))(v13, 1, v1))
  {
    sub_20A44CE2C((uint64_t)v13, &qword_2545FAE20);
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v2 + 16))(v5, v13, v1);
    sub_20A44CE2C((uint64_t)v13, &qword_2545FAE20);
    sub_20A5B8B10();
    (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v5, v1);
  }
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v2 + 56))(v10, 1, 1, v1);
  swift_beginAccess();
  sub_20A4D459C((uint64_t)v10, v14);
  return swift_endAccess();
}

uint64_t sub_20A4D1464()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  char v10;
  uint64_t v11;
  unint64_t v12;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB5180);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = 0x657261685369646FLL;
  v12 = 0xEF726567676F4C64;
  v10 = 0;
  CoreODILogger.info(_:category:)(0xD00000000000002FLL, 0x800000020A5E1C30, &v10);
  sub_20A5B8B40();
  v6 = sub_20A5B8B64();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 0, 1, v6);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v1;
  swift_retain();
  sub_20A4C69D8((uint64_t)v5, (uint64_t)&unk_2545FAE18, (uint64_t)v7);
  return swift_release();
}

uint64_t sub_20A4D1580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[8] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9DC0);
  v4[9] = v5;
  v4[10] = *(_QWORD *)(v5 - 8);
  v4[11] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FAE20);
  v4[12] = swift_task_alloc();
  v4[13] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A4D161C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 64) + OBJC_IVAR____TtC17CoreODIEssentials20ODINFHardwareMonitor_continuation;
  swift_beginAccess();
  sub_20A4D4554(v4, v1);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  v6 = *(_QWORD *)(v0 + 104);
  if (v5)
  {
    sub_20A44CE2C(*(_QWORD *)(v0 + 104), &qword_2545FAE20);
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 80);
    v7 = *(_QWORD *)(v0 + 88);
    v9 = *(_QWORD *)(v0 + 72);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v8 + 16))(v7, *(_QWORD *)(v0 + 104), v9);
    sub_20A44CE2C(v6, &qword_2545FAE20);
    sub_20A5B8B10();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  }
  v10 = *(_QWORD *)(v0 + 96);
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 80) + 56))(v10, 1, 1, *(_QWORD *)(v0 + 72));
  swift_beginAccess();
  sub_20A4D459C(v10, v4);
  swift_endAccess();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_20A4D1790()
{
  objc_class *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  objc_super v5;

  v1 = (char *)swift_allocObject();
  swift_defaultActor_initialize();
  v2 = &v1[OBJC_IVAR____TtC17CoreODIEssentials20ODINFHardwareMonitor_continuation];
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9DC0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  v5.receiver = v1;
  v5.super_class = v0;
  return objc_msgSendSuper2(&v5, sel_init);
}

uint64_t sub_20A4D1890()
{
  uint64_t v0;

  sub_20A44CE2C(v0 + OBJC_IVAR____TtC17CoreODIEssentials20ODINFHardwareMonitor_continuation, &qword_2545FAE20);
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

double sub_20A4D18C4()
{
  uint64_t v0;
  double result;

  type metadata accessor for DeviceInformation();
  v0 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_QWORD *)(v0 + 144) = 0;
  result = 0.0;
  *(_OWORD *)(v0 + 112) = 0u;
  *(_OWORD *)(v0 + 128) = 0u;
  qword_253EB6240 = v0;
  return result;
}

uint64_t static DeviceInformation.shared.getter()
{
  if (qword_253EB6258 != -1)
    swift_once();
  return swift_retain();
}

BOOL static DeviceInformation.DeviceInfoError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t DeviceInformation.DeviceInfoError.hash(into:)()
{
  return sub_20A5B92A8();
}

uint64_t DeviceInformation.DeviceInfoError.hashValue.getter()
{
  sub_20A5B929C();
  sub_20A5B92A8();
  return sub_20A5B92CC();
}

uint64_t sub_20A4D19C8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 240) = v0;
  return swift_task_switch();
}

uint64_t sub_20A4D19E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v5)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 240);
  v2 = *(_QWORD *)(v1 + 120);
  if (!v2)
    return swift_task_switch();
  v3 = *(_QWORD *)(v1 + 112);
  v5 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  swift_bridgeObjectRetain();
  return v5(v3, v2);
}

uint64_t sub_20A4D1A58()
{
  uint64_t v0;

  if (qword_253EB4EB8 != -1)
    swift_once();
  *(_QWORD *)(v0 + 248) = qword_253EB4EB0;
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_20A4D1AC8()
{
  uint64_t v0;
  _QWORD *v2;

  if ((*(_BYTE *)(*(_QWORD *)(v0 + 248) + 168) & 1) != 0)
    return swift_task_switch();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 256) = v2;
  *v2 = v0;
  v2[1] = sub_20A4D1B38;
  return sub_20A4BBF60();
}

uint64_t sub_20A4D1B38()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A4D1B88()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  v1 = v0[31];
  v0[33] = sub_20A498124((unint64_t *)&qword_2545FA630, 255, (uint64_t (*)(uint64_t))type metadata accessor for ODIDeviceInfo, (uint64_t)&protocol conformance descriptor for ODIDeviceInfo);
  v2 = (_QWORD *)swift_task_alloc();
  v0[34] = v2;
  v2[2] = v1;
  v2[3] = 0x54746375646F7250;
  v2[4] = 0xEB00000000657079;
  v3 = (_QWORD *)swift_task_alloc();
  v0[35] = v3;
  v0[36] = __swift_instantiateConcreteTypeFromMangledName(&qword_253EB50E8);
  *v3 = v0;
  v3[1] = sub_20A4D1C94;
  return sub_20A5B917C();
}

uint64_t sub_20A4D1C94()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  *(_OWORD *)(v1 + 296) = *(_OWORD *)(v1 + 160);
  return swift_task_switch();
}

uint64_t sub_20A4D1D04()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  v1 = v0[31];
  v2 = (_QWORD *)swift_task_alloc();
  v0[39] = v2;
  v2[2] = v1;
  v2[3] = 0x4E746375646F7250;
  v2[4] = 0xEB00000000656D61;
  v3 = (_QWORD *)swift_task_alloc();
  v0[40] = v3;
  *v3 = v0;
  v3[1] = sub_20A4D1DD4;
  return sub_20A5B917C();
}

uint64_t sub_20A4D1DD4()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  *(_OWORD *)(v1 + 328) = *(_OWORD *)(v1 + 192);
  return swift_task_switch();
}

uint64_t sub_20A4D1E44()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[31];
  v2 = swift_task_alloc();
  v0[43] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  strcpy((char *)(v2 + 24), "ProductVersion");
  *(_BYTE *)(v2 + 39) = -18;
  v3 = (_QWORD *)swift_task_alloc();
  v0[44] = v3;
  *v3 = v0;
  v3[1] = sub_20A4D1F18;
  return sub_20A5B917C();
}

uint64_t sub_20A4D1F18()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  *(_OWORD *)(v1 + 360) = *(_OWORD *)(v1 + 176);
  return swift_task_switch();
}

uint64_t sub_20A4D1F88()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[31];
  v2 = swift_task_alloc();
  v0[47] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  strcpy((char *)(v2 + 24), "BuildVersion");
  *(_BYTE *)(v2 + 37) = 0;
  *(_WORD *)(v2 + 38) = -5120;
  v3 = (_QWORD *)swift_task_alloc();
  v0[48] = v3;
  *v3 = v0;
  v3[1] = sub_20A4D2058;
  return sub_20A5B917C();
}

uint64_t sub_20A4D2058()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  *(_OWORD *)(v1 + 392) = *(_OWORD *)(v1 + 144);
  return swift_task_switch();
}

id sub_20A4D20C8()
{
  uint64_t v0;
  uint64_t ObjCClassFromMetadata;
  void *v2;
  id result;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;

  type metadata accessor for DeviceInformation();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v2 = (void *)objc_opt_self();
  result = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  v4 = *MEMORY[0x24BDBD2A0];
  if (*MEMORY[0x24BDBD2A0])
  {
    v11 = result;
    if (objc_msgSend(result, sel_objectForInfoDictionaryKey_, v4))
    {
      sub_20A5B8DA4();
      swift_unknownObjectRelease();
    }
    else
    {
      *(_OWORD *)(v0 + 16) = 0u;
      *(_OWORD *)(v0 + 32) = 0u;
    }
    sub_20A4D2580(v0 + 16, v0 + 112);
    if (*(_QWORD *)(v0 + 136))
      swift_dynamicCast();
    else
      sub_20A44CE2C(v0 + 112, &qword_253EB52E0);
    v5 = objc_msgSend(v11, sel_bundleIdentifier);
    if (v5)
    {
      v6 = v5;
      sub_20A5B8900();

    }
    v7 = objc_msgSend(v2, sel_mainBundle);
    if (objc_msgSend(v7, sel_objectForInfoDictionaryKey_, v4))
    {
      sub_20A5B8DA4();
      swift_unknownObjectRelease();
    }
    else
    {
      *(_OWORD *)(v0 + 48) = 0u;
      *(_OWORD *)(v0 + 64) = 0u;
    }
    sub_20A4D2580(v0 + 48, v0 + 80);
    if (*(_QWORD *)(v0 + 104))
      swift_dynamicCast();
    else
      sub_20A44CE2C(v0 + 80, &qword_253EB52E0);
    v8 = objc_msgSend(v7, sel_bundleIdentifier);
    if (v8)
    {
      v9 = v8;
      sub_20A5B8900();

    }
    v10 = *(_QWORD *)(v0 + 240);
    sub_20A5B899C();
    sub_20A5B899C();
    swift_bridgeObjectRelease();
    sub_20A5B899C();
    sub_20A5B899C();
    swift_bridgeObjectRelease();
    sub_20A5B899C();
    sub_20A5B899C();
    swift_bridgeObjectRelease();
    sub_20A5B899C();
    sub_20A5B899C();
    swift_bridgeObjectRelease();
    sub_20A5B899C();
    sub_20A5B899C();
    swift_bridgeObjectRelease();
    sub_20A5B899C();
    sub_20A5B899C();
    swift_bridgeObjectRelease();
    sub_20A5B899C();
    sub_20A5B899C();
    swift_bridgeObjectRelease();
    sub_20A5B899C();
    sub_20A5B899C();
    swift_bridgeObjectRelease();
    sub_20A5B899C();
    *(_QWORD *)(v10 + 112) = 60;
    *(_QWORD *)(v10 + 120) = 0xE100000000000000;
    swift_bridgeObjectRetain();
    swift_release();

    swift_bridgeObjectRelease();
    return (id)(*(uint64_t (**)(uint64_t, unint64_t))(v0 + 8))(60, 0xE100000000000000);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for DeviceInformation()
{
  return objc_opt_self();
}

uint64_t sub_20A4D2580(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253EB52E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A4D25C8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = v0;
  return swift_task_switch();
}

uint64_t sub_20A4D25E0()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  unsigned int v8;
  _QWORD *v9;
  _BYTE *v11;
  unsigned int v12;
  void *v13;
  void *v14;
  _BYTE *v15;

  v1 = objc_msgSend((id)objc_opt_self(), sel_sharedHardwareManagerWithNoUI);
  *(_QWORD *)(v0 + 40) = v1;
  if (v1)
  {
    v2 = v1;
    v3 = type metadata accessor for ODINFHardwareMonitor();
    v4 = swift_allocObject();
    swift_defaultActor_initialize();
    v5 = v4 + OBJC_IVAR____TtC17CoreODIEssentials20ODINFHardwareMonitor_continuation;
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9DC0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
    *(_QWORD *)(v0 + 16) = v4;
    *(_QWORD *)(v0 + 24) = v3;
    v7 = objc_msgSendSuper2((objc_super *)(v0 + 16), sel_init);
    *(_QWORD *)(v0 + 48) = v7;
    objc_msgSend(v2, sel_registerEventListener_, v7);
    v8 = objc_msgSend(v2, sel_getHwSupport);
    if ((v8 | 2) == 3)
    {
      v9 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 56) = v9;
      *v9 = v0;
      v9[1] = sub_20A4D27D4;
      return sub_20A4D0BAC();
    }
    v12 = v8;
    objc_msgSend(*(id *)(v0 + 40), sel_unregisterEventListener_, *(_QWORD *)(v0 + 48));
    v13 = *(void **)(v0 + 48);
    if (v12 == 2)
    {

      return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 40));
    }
    v14 = *(void **)(v0 + 40);
    sub_20A4D449C();
    swift_allocError();
    *v15 = 0;
    swift_willThrow();

  }
  else
  {
    sub_20A4D449C();
    swift_allocError();
    *v11 = 0;
    swift_willThrow();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4D27D4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A4D2838()
{
  uint64_t v0;
  unsigned int v1;
  void *v2;
  void *v4;
  _BYTE *v5;

  v1 = objc_msgSend(*(id *)(v0 + 40), sel_getHwSupport);
  objc_msgSend(*(id *)(v0 + 40), sel_unregisterEventListener_, *(_QWORD *)(v0 + 48));
  v2 = *(void **)(v0 + 48);
  if (v1 == 2)
  {

    return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 40));
  }
  else
  {
    v4 = *(void **)(v0 + 40);
    sub_20A4D449C();
    swift_allocError();
    *v5 = 0;
    swift_willThrow();

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_20A4D2900()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 48);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4D2938()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = v0;
  return swift_task_switch();
}

uint64_t sub_20A4D299C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = swift_allocObject();
  v0[8] = v1;
  *(_QWORD *)(v1 + 16) = 0;
  v2 = swift_allocObject();
  v0[9] = v2;
  *(_QWORD *)(v2 + 16) = 0;
  v3 = (_QWORD *)swift_task_alloc();
  v0[10] = v3;
  *v3 = v0;
  v3[1] = sub_20A4D2A5C;
  v3[4] = v0[7];
  return swift_task_switch();
}

uint64_t sub_20A4D2A5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 88) = a1;
  *(_QWORD *)(v3 + 96) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A4D2B14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  _QWORD *v9;
  id v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  unsigned __int8 v20[9];
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  v3 = *(_QWORD *)(v2 + 56);
  v4 = *(_QWORD *)(v3 + 144);
  if (v4)
    goto LABEL_2;
  *(_QWORD *)(v2 + 48) = 0;
  v11 = objc_msgSend(*(id *)(v2 + 88), sel_cachedEmbeddedSecureElementSerialNumber_, v2 + 48);
  v12 = *(void **)(v2 + 48);
  if (v11)
  {
    v13 = v11;
    v14 = sub_20A5B8900();
    v16 = v15;
    v17 = v12;

    *(_QWORD *)(v3 + 136) = v14;
    *(_QWORD *)(v3 + 144) = v16;
    swift_bridgeObjectRelease();
    v4 = *(_QWORD *)(v3 + 144);
    if (v4)
    {
LABEL_2:
      *(_QWORD *)(v2 + 104) = v4;
      v5 = *(_QWORD *)(v2 + 88);
      v6 = *(_QWORD *)(v3 + 136);
      sub_20A498124(&qword_2545FADF0, a2, (uint64_t (*)(uint64_t))type metadata accessor for DeviceInformation, (uint64_t)&protocol conformance descriptor for DeviceInformation);
      v7 = swift_task_alloc();
      *(_QWORD *)(v2 + 112) = v7;
      v8 = *(_OWORD *)(v2 + 64);
      *(_QWORD *)(v7 + 16) = v5;
      *(_OWORD *)(v7 + 24) = v8;
      *(_QWORD *)(v7 + 40) = v6;
      *(_QWORD *)(v7 + 48) = v4;
      swift_bridgeObjectRetain();
      v9 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v2 + 120) = v9;
      *v9 = v2;
      v9[1] = sub_20A4D2D98;
      return sub_20A5B9200();
    }
    v18 = *(void **)(v2 + 88);
    v20[0] = 76;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000014, 0x800000020A5E1B30, 0, v20, 0, 0, 0xD00000000000005FLL, 0x800000020A5E1B50, 0xD000000000000012, 0x800000020A5E1BB0, 149);
  }
  else
  {
    v18 = *(void **)(v2 + 88);
    v19 = v12;
    sub_20A5B8420();

  }
  swift_willThrow();
  swift_release();
  swift_release();

  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_20A4D2D98()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_20A4D2E60()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_20A4D2EE4()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4D2F4C()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4D2FE4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  void *v18;
  id v19;
  uint64_t v21;
  id v22;
  _QWORD aBlock[6];

  v22 = a2;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FADF8);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x24BDAC7A8](v11, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  v15 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a3;
  *(_QWORD *)(v16 + 24) = a4;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v16 + v15, (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  v17 = (_QWORD *)(v16 + ((v13 + v15 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v17 = a5;
  v17[1] = a6;
  aBlock[4] = sub_20A4D4418;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_20A4D33B4;
  aBlock[3] = &block_descriptor_11;
  v18 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  v19 = objc_msgSend(v22, sel_startSecureElementManagerSessionWithPriority_, v18);
  _Block_release(v18);
  return swift_unknownObjectRelease();
}

void sub_20A4D3174(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v10;
  void **v11;
  unsigned int v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  uint64_t v23;
  id v24;
  void *v25;
  _QWORD v26[4];
  _QWORD v27[7];

  v27[6] = *MEMORY[0x24BDAC8D0];
  if (a1 && !a2)
  {
    v10 = (_QWORD *)(a3 + 16);
    v11 = (void **)(a4 + 16);
    swift_beginAccess();
    v27[0] = *v10;
    swift_beginAccess();
    v25 = *v11;
    v24 = a1;
    v12 = objc_msgSend(v24, sel_getCryptogram_challengeResponse_, v27, &v25);
    v13 = v25;
    v14 = *v11;
    *v11 = v25;
    swift_endAccess();
    v15 = (void *)v27[0];
    v16 = (void *)*v10;
    *v10 = v27[0];
    swift_endAccess();
    v17 = v13;
    v18 = v15;

    if (v12)
    {
      swift_beginAccess();
      v19 = (void *)*v10;
      if (v19)
      {
        swift_beginAccess();
        v20 = *v11;
        if (v20)
        {
          v26[0] = v19;
          v26[1] = v20;
          v26[2] = a6;
          v26[3] = a7;
          v21 = v19;
          v22 = v20;
          swift_bridgeObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_2545FADF8);
          sub_20A5B8B10();
          objc_msgSend(v24, sel_endSession);

          return;
        }
      }
    }
    objc_msgSend(v24, sel_endSession);

  }
  LOBYTE(v26[0]) = 77;
  ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001CLL, 0x800000020A5E1C10, 0, (unsigned __int8 *)v26, 0, 0, 0xD00000000000005FLL, 0x800000020A5E1B50, 0xD000000000000012, 0x800000020A5E1BB0, 164);
  v26[0] = v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FADF8);
  sub_20A5B8B04();
}

void sub_20A4D33B4(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t sub_20A4D3428()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 112) = v0;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 120) = v2;
  *v2 = v1;
  v2[1] = sub_20A4D34B4;
  v2[4] = v0;
  return swift_task_switch();
}

uint64_t sub_20A4D34B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 128) = a1;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v3 + 8))();
  else
    return swift_task_switch();
}

uint64_t sub_20A4D3578(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = v2[16];
  v2[10] = 0;
  sub_20A498124(&qword_2545FADF0, a2, (uint64_t (*)(uint64_t))type metadata accessor for DeviceInformation, (uint64_t)&protocol conformance descriptor for DeviceInformation);
  v4 = swift_task_alloc();
  v2[17] = v4;
  *(_QWORD *)(v4 + 16) = v2 + 10;
  *(_QWORD *)(v4 + 24) = v3;
  v5 = (_QWORD *)swift_task_alloc();
  v2[18] = v5;
  sub_20A459574(0, &qword_2545FAE40);
  *v5 = v2;
  v5[1] = sub_20A4D3698;
  return sub_20A5B9200();
}

uint64_t sub_20A4D3698()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A4D3758()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id *v17;
  uint64_t v18;
  _QWORD *v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  id v28;
  void *v29;
  uint64_t (*v30)(void);
  uint64_t v32;
  void *v33;

  *(_QWORD *)(v0 + 96) = 0;
  v1 = *(void **)(v0 + 88);
  v2 = objc_msgSend(*(id *)(v0 + 128), sel_cachedEmbeddedSecureElementSerialNumber_, v0 + 96);
  v3 = *(void **)(v0 + 96);
  if (v2)
  {
    v4 = v2;
    v5 = *(void **)(v0 + 128);
    v6 = *(_QWORD *)(v0 + 112);
    v7 = sub_20A5B8900();
    v9 = v8;
    v10 = v3;

    *(_QWORD *)(v6 + 136) = v7;
    *(_QWORD *)(v6 + 144) = v9;
    swift_bridgeObjectRelease();
    v11 = objc_msgSend(v5, sel_secureElements);
    if (v11)
    {
      v12 = v11;
      v33 = v1;
      v13 = sub_20A5B8AA4();

      v14 = *(_QWORD *)(v13 + 16);
      if (v14)
      {
        v32 = v0;
        v15 = v0 + 16;
        v16 = v0 + 48;
        v17 = (id *)(v0 + 104);
        v18 = v13 + 32;
        swift_bridgeObjectRetain();
        v19 = (_QWORD *)MEMORY[0x24BEE4AF8];
        do
        {
          sub_20A44FD78(v18, v15);
          sub_20A44FD78(v15, v16);
          sub_20A459574(0, &qword_2545FAE48);
          if (swift_dynamicCast()
            && (v20 = *v17,
                v21 = objc_msgSend(*v17, sel_serialNumber),
                v20,
                v21))
          {
            v22 = sub_20A5B8900();
            v24 = v23;

            __swift_destroy_boxed_opaque_existential_1(v15);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v19 = sub_20A46FE9C(0, v19[2] + 1, 1, v19);
            v26 = v19[2];
            v25 = v19[3];
            if (v26 >= v25 >> 1)
              v19 = sub_20A46FE9C((_QWORD *)(v25 > 1), v26 + 1, 1, v19);
            v19[2] = v26 + 1;
            v27 = &v19[2 * v26];
            v27[4] = v22;
            v27[5] = v24;
          }
          else
          {
            __swift_destroy_boxed_opaque_existential_1(v15);
          }
          v18 += 32;
          --v14;
        }
        while (v14);
        swift_bridgeObjectRelease_n();
        v0 = v32;
      }
      else
      {
        swift_bridgeObjectRelease();
        v19 = (_QWORD *)MEMORY[0x24BEE4AF8];
      }
      v1 = v33;
    }
    else
    {
      v19 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    *(_QWORD *)(*(_QWORD *)(v0 + 112) + 128) = v19;

    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v0 + 80))
    {
      objc_msgSend(*(id *)(v0 + 80), sel_endSession);
      swift_unknownObjectRelease();
    }

    v30 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    v28 = v3;
    sub_20A5B8420();

    swift_willThrow();
    v29 = *(void **)(v0 + 128);
    if (*(_QWORD *)(v0 + 80))
    {
      objc_msgSend(*(id *)(v0 + 80), sel_endSession);

      swift_unknownObjectRelease();
    }
    else
    {

    }
    v30 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v30();
}

uint64_t sub_20A4D3AA8()
{
  uint64_t v0;
  void *v1;

  swift_task_dealloc();
  v1 = *(void **)(v0 + 128);
  if (*(_QWORD *)(v0 + 80))
  {
    objc_msgSend(*(id *)(v0 + 80), sel_endSession);

    swift_unknownObjectRelease();
  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4D3B44(uint64_t a1, _QWORD *a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  _QWORD aBlock[6];

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545FAE50);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  v10 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v11 + v10, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  aBlock[4] = sub_20A4D46F8;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_20A4D33B4;
  aBlock[3] = &block_descriptor_46;
  v12 = _Block_copy(aBlock);
  swift_release();
  v13 = objc_msgSend(a3, sel_startSecureElementManagerSession_, v12);
  _Block_release(v12);
  *a2 = v13;
  return swift_unknownObjectRelease();
}

uint64_t sub_20A4D3C90(void *a1, id a2)
{
  id v2;
  _BYTE *v4;
  _BYTE *v5;
  id v6;

  if (a1)
  {
    v2 = a1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545FAE50);
    return sub_20A5B8B10();
  }
  else
  {
    if (!a2)
    {
      sub_20A4D449C();
      swift_allocError();
      v5 = v4;
      a2 = 0;
      *v5 = 1;
    }
    v6 = a2;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545FAE50);
    return sub_20A5B8B04();
  }
}

uint64_t sub_20A4D3D38()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_20A4D3D50()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t (*v8)(uint64_t, uint64_t);

  v1 = (_QWORD *)v0[2];
  v2 = v1[18];
  v0[3] = v2;
  if (v2)
  {
    v3 = v1[17];
    v4 = v2;
LABEL_3:
    v8 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
    swift_bridgeObjectRetain();
    return v8(v3, v4);
  }
  v6 = (_QWORD *)v1[16];
  if (v6)
  {
    if (v6[2])
    {
      v3 = v6[4];
      v4 = v6[5];
      swift_bridgeObjectRetain();
    }
    else
    {
      v3 = 0;
      v4 = 0;
    }
    goto LABEL_3;
  }
  v7 = (_QWORD *)swift_task_alloc();
  v0[4] = v7;
  *v7 = v0;
  v7[1] = sub_20A4D3E18;
  return sub_20A4D3428();
}

uint64_t sub_20A4D3E18()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    return (*(uint64_t (**)(void))(v2 + 8))();
  else
    return swift_task_switch();
}

uint64_t sub_20A4D3E80()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v5)(uint64_t, uint64_t);

  v1 = *(_QWORD **)(*(_QWORD *)(v0 + 16) + 128);
  if (!v1)
  {
    v1 = (_QWORD *)MEMORY[0x24BEE4AF8];
    if (*(_QWORD *)(MEMORY[0x24BEE4AF8] + 16))
      goto LABEL_3;
LABEL_5:
    swift_bridgeObjectRelease();
    v2 = 0;
    v3 = 0;
    goto LABEL_6;
  }
  swift_bridgeObjectRetain();
  if (!v1[2])
    goto LABEL_5;
LABEL_3:
  v2 = v1[4];
  v3 = v1[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_6:
  v5 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  swift_bridgeObjectRetain();
  return v5(v2, v3);
}

uint64_t DeviceInformation.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t DeviceInformation.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t DeviceInformation.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

unint64_t sub_20A4D3F98()
{
  unint64_t result;

  result = qword_2545FAD18;
  if (!qword_2545FAD18)
  {
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for DeviceInformation.DeviceInfoError, &type metadata for DeviceInformation.DeviceInfoError);
    atomic_store(result, (unint64_t *)&qword_2545FAD18);
  }
  return result;
}

uint64_t sub_20A4D3FDC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *v0;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_20A4A30B8;
  v3[30] = v2;
  return swift_task_switch();
}

uint64_t dispatch thunk of DeviceInformationProvider.clientInfoHeader()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 8) + *(_QWORD *)(a2 + 8));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_20A4A30B8;
  return v7(a1, a2);
}

uint64_t sub_20A4D40A8()
{
  return type metadata accessor for ODINFHardwareMonitor();
}

uint64_t type metadata accessor for ODINFHardwareMonitor()
{
  uint64_t result;

  result = qword_2545FADA8;
  if (!qword_2545FADA8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_20A4D40EC()
{
  unint64_t v0;

  sub_20A4D4164();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_20A4D4164()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2545FADC0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545F9DC0);
    v0 = sub_20A5B8D38();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2545FADC0);
  }
}

uint64_t method lookup function for DeviceInformation()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DeviceInformation.clientInfoHeader()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 136) + *(_QWORD *)(*(_QWORD *)v0 + 136));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_20A460338;
  return v4();
}

uint64_t dispatch thunk of DeviceInformation.getSEID()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 224) + *(_QWORD *)(*(_QWORD *)v0 + 224));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_20A48AB6C;
  return v4();
}

uint64_t storeEnumTagSinglePayload for DeviceInformation.DeviceInfoError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_20A4D42C4 + 4 * byte_20A5C2615[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_20A4D42F8 + 4 * byte_20A5C2610[v4]))();
}

uint64_t sub_20A4D42F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A4D4300(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A4D4308);
  return result;
}

uint64_t sub_20A4D4314(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A4D431CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_20A4D4320(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A4D4328(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DeviceInformation.DeviceInfoError()
{
  return &type metadata for DeviceInformation.DeviceInfoError;
}

uint64_t sub_20A4D4344()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_20A4D4368(uint64_t a1)
{
  uint64_t v1;

  return sub_20A4D2FE4(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_20A4D4378()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FADF8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_20A4D4418(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;

  v5 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545FADF8) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (uint64_t *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  sub_20A4D3174(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), v2 + v6, *v7, v7[1]);
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

unint64_t sub_20A4D449C()
{
  unint64_t result;

  result = qword_2545FAE00;
  if (!qword_2545FAE00)
  {
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for DeviceInformation.DeviceInfoError, &type metadata for DeviceInformation.DeviceInfoError);
    atomic_store(result, (unint64_t *)&qword_2545FAE00);
  }
  return result;
}

uint64_t sub_20A4D44E0()
{
  return objectdestroy_26Tm();
}

uint64_t sub_20A4D44E8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_20A4597C0;
  return sub_20A4D1580(a1, v4, v5, v6);
}

uint64_t sub_20A4D4554(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FAE20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A4D459C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FAE20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A4D45E4(uint64_t a1)
{
  uint64_t v1;

  return sub_20A4D0FB4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_20A4D45EC()
{
  return objectdestroy_26Tm();
}

uint64_t objectdestroy_26Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20A4D462C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_20A4597C0;
  v3[2] = v2;
  return swift_task_switch();
}

uint64_t sub_20A4D468C(uint64_t a1)
{
  uint64_t v1;

  return sub_20A4D3B44(a1, *(_QWORD **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_20A4D4694()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545FAE50);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_20A4D46F8(void *a1, void *a2)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545FAE50);
  return sub_20A4D3C90(a1, a2);
}

uint64_t sub_20A4D4750(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  int64_t v13;
  _OWORD v14[4];
  _OWORD v15[2];
  _OWORD v16[2];
  _OWORD v17[2];
  uint64_t v18;
  _OWORD v19[2];
  uint64_t v20;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_253EB51E8);
    v2 = sub_20A5B8FF0();
  }
  else
  {
    v2 = MEMORY[0x24BEE4B00];
  }
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v13 = (unint64_t)(63 - v3) >> 6;
  swift_bridgeObjectRetain();
  swift_retain();
  if (v5)
  {
    v6 = __clz(__rbit64(v5));
    goto LABEL_24;
  }
  if (v13 > 1)
  {
    v7 = *(_QWORD *)(a1 + 72);
    v8 = 1;
    if (v7)
      goto LABEL_23;
    v8 = 2;
    if (v13 <= 2)
      goto LABEL_25;
    v7 = *(_QWORD *)(a1 + 80);
    if (v7)
      goto LABEL_23;
    v8 = 3;
    if (v13 <= 3)
      goto LABEL_25;
    v7 = *(_QWORD *)(a1 + 88);
    if (v7)
      goto LABEL_23;
    v8 = 4;
    if (v13 <= 4)
      goto LABEL_25;
    v7 = *(_QWORD *)(a1 + 96);
    if (v7)
    {
LABEL_23:
      v6 = __clz(__rbit64(v7)) + (v8 << 6);
LABEL_24:
      v10 = *(_BYTE *)(*(_QWORD *)(a1 + 48) + v6);
      sub_20A44FD78(*(_QWORD *)(a1 + 56) + 32 * v6, (uint64_t)v19 + 8);
      LOBYTE(v19[0]) = v10;
      v17[0] = v19[0];
      v17[1] = v19[1];
      v18 = v20;
      LOBYTE(v16[0]) = v10;
      sub_20A44FD68((_OWORD *)((char *)v17 + 8), v15);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2545FAE68);
      swift_dynamicCast();
      v11 = LOBYTE(v16[0]);
      sub_20A44FD68((_OWORD *)((char *)v16 + 8), v14);
      sub_20A44FD68(v14, v16);
      sub_20A44FD68(v16, v15);
      sub_20A5B929C();
      __asm { BR              X8 }
    }
    v9 = 5;
    if (v13 > 5)
    {
      v7 = *(_QWORD *)(a1 + 104);
      if (v7)
      {
        v8 = 5;
        goto LABEL_23;
      }
      while (1)
      {
        v8 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          JUMPOUT(0x20A4D4CE8);
        }
        if (v8 >= v13)
          break;
        v7 = *(_QWORD *)(a1 + 64 + 8 * v8);
        ++v9;
        if (v7)
          goto LABEL_23;
      }
    }
  }
LABEL_25:
  swift_release();
  sub_20A498A68();
  return v2;
}

uint64_t sub_20A4D4D24(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  _OWORD v29[2];
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  _QWORD v39[7];
  __int128 v40[2];
  uint64_t v41;
  __int128 v42;
  _OWORD v43[2];
  uint64_t v44;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5220);
    v2 = sub_20A5B8FF0();
  }
  else
  {
    v2 = MEMORY[0x24BEE4B00];
  }
  v28 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v27)
        goto LABEL_37;
      v14 = *(_QWORD *)(v28 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v27)
          goto LABEL_37;
        v14 = *(_QWORD *)(v28 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v27)
            goto LABEL_37;
          v14 = *(_QWORD *)(v28 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v19 = *v17;
    v18 = v17[1];
    sub_20A47BD60(*(_QWORD *)(a1 + 56) + 40 * v12, (uint64_t)v43);
    *(_QWORD *)&v42 = v19;
    *((_QWORD *)&v42 + 1) = v18;
    *(_OWORD *)&v39[5] = v42;
    v40[0] = v43[0];
    v40[1] = v43[1];
    v41 = v44;
    v30 = v19;
    v31 = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_20A44CFD8(v40, (uint64_t)v29);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253EB47D0);
    swift_dynamicCast();
    v36 = v32;
    v37 = v33;
    v38 = v34;
    sub_20A44FD68(&v35, v39);
    v32 = v36;
    v33 = v37;
    v34 = v38;
    sub_20A44FD68(v39, v29);
    sub_20A44FD68(v29, &v36);
    result = sub_20A5B8E10();
    v20 = -1 << *(_BYTE *)(v2 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v32;
    *(_OWORD *)(v10 + 16) = v33;
    *(_QWORD *)(v10 + 32) = v34;
    result = (uint64_t)sub_20A44FD68(&v36, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_20A498A68();
    return v2;
  }
  v14 = *(_QWORD *)(v28 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

unint64_t sub_20A4D5128(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t result;
  uint64_t v18;
  uint64_t *v19;
  _OWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  int64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  unint64_t v38;
  char v39;
  uint64_t *v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  int64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  int64_t i;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  uint64_t v59;
  _OWORD v60[2];

  v2 = sub_20A5B8630();
  v53 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v3);
  v52 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_253EB50E0);
  v6 = MEMORY[0x24BDAC7A8](v51, v5);
  v8 = (uint64_t *)((char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v6, v9);
  v11 = (char *)&v44 - v10;
  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5210);
    v12 = (_QWORD *)sub_20A5B8FF0();
  }
  else
  {
    v12 = (_QWORD *)MEMORY[0x24BEE4B00];
  }
  v13 = *(_QWORD *)(a1 + 64);
  v47 = a1 + 64;
  v14 = -1 << *(_BYTE *)(a1 + 32);
  if (-v14 < 64)
    v15 = ~(-1 << -(char)v14);
  else
    v15 = -1;
  v16 = v15 & v13;
  v44 = -1 << *(_BYTE *)(a1 + 32);
  v46 = (unint64_t)(63 - v14) >> 6;
  v50 = &v57;
  v49 = &v59;
  v45 = v12 + 8;
  result = swift_bridgeObjectRetain();
  i = 0;
  v48 = MEMORY[0x24BEE4AD8] + 8;
  if (v16)
    goto LABEL_10;
LABEL_11:
  v23 = i + 1;
  if (__OFADD__(i, 1))
    goto LABEL_35;
  if (v23 >= v46)
    goto LABEL_32;
  v24 = *(_QWORD *)(v47 + 8 * v23);
  v25 = i + 1;
  if (!v24)
  {
    v25 = i + 2;
    if (i + 2 >= v46)
      goto LABEL_32;
    v24 = *(_QWORD *)(v47 + 8 * v25);
    if (!v24)
    {
      v25 = i + 3;
      if (i + 3 >= v46)
        goto LABEL_32;
      v24 = *(_QWORD *)(v47 + 8 * v25);
      if (!v24)
      {
        v25 = i + 4;
        if (i + 4 >= v46)
          goto LABEL_32;
        v24 = *(_QWORD *)(v47 + 8 * v25);
        if (!v24)
        {
          v26 = i + 5;
          if (i + 5 < v46)
          {
            v24 = *(_QWORD *)(v47 + 8 * v26);
            if (v24)
            {
              v25 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v25 = v26 + 1;
              if (__OFADD__(v26, 1))
                goto LABEL_36;
              if (v25 >= v46)
                break;
              v24 = *(_QWORD *)(v47 + 8 * v25);
              ++v26;
              if (v24)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_20A498A68();
          return (unint64_t)v12;
        }
      }
    }
  }
LABEL_26:
  v16 = (v24 - 1) & v24;
  v22 = __clz(__rbit64(v24)) + (v25 << 6);
  for (i = v25; ; v22 = v21 | (i << 6))
  {
    v27 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v22);
    v29 = *v27;
    v28 = v27[1];
    v30 = v53;
    v31 = v51;
    (*(void (**)(char *, unint64_t, uint64_t))(v53 + 16))(&v11[*(int *)(v51 + 48)], *(_QWORD *)(a1 + 56) + *(_QWORD *)(v53 + 72) * v22, v2);
    *(_QWORD *)v11 = v29;
    *((_QWORD *)v11 + 1) = v28;
    sub_20A459C88((uint64_t)v11, (uint64_t)v8, &qword_253EB50E0);
    v32 = (char *)v8 + *(int *)(v31 + 48);
    v33 = v8[1];
    v55 = *v8;
    v56 = v33;
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v52, v32, v2);
    swift_bridgeObjectRetain();
    v34 = v50;
    swift_dynamicCast();
    v36 = v55;
    v35 = v56;
    v37 = v49;
    sub_20A44FD68(v34, v49);
    sub_20A44FD68(v37, v60);
    sub_20A44FD68(v60, &v58);
    result = sub_20A47094C(v36, v35);
    v38 = result;
    if ((v39 & 1) != 0)
    {
      v18 = a1;
      v19 = (uint64_t *)(v12[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v19 = v36;
      v19[1] = v35;
      a1 = v18;
      v20 = (_OWORD *)(v12[7] + 32 * v38);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
      result = (unint64_t)sub_20A44FD68(&v58, v20);
      if (!v16)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v12[2] >= v12[3])
      break;
    *(_QWORD *)((char *)v45 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v40 = (uint64_t *)(v12[6] + 16 * result);
    *v40 = v36;
    v40[1] = v35;
    result = (unint64_t)sub_20A44FD68(&v58, (_OWORD *)(v12[7] + 32 * result));
    v41 = v12[2];
    v42 = __OFADD__(v41, 1);
    v43 = v41 + 1;
    if (v42)
      goto LABEL_34;
    v12[2] = v43;
    if (!v16)
      goto LABEL_11;
LABEL_10:
    v21 = __clz(__rbit64(v16));
    v16 &= v16 - 1;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_20A4D55A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  _OWORD v32[2];
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _OWORD v36[2];
  _OWORD v37[3];
  _OWORD v38[2];
  __int128 v39;
  _OWORD v40[2];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5220);
    v2 = sub_20A5B8FF0();
  }
  else
  {
    v2 = MEMORY[0x24BEE4B00];
  }
  v28 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v27)
        goto LABEL_37;
      v14 = *(_QWORD *)(v28 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v27)
          goto LABEL_37;
        v14 = *(_QWORD *)(v28 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v27)
            goto LABEL_37;
          v14 = *(_QWORD *)(v28 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v19 = *v17;
    v18 = v17[1];
    sub_20A44FD78(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(_QWORD *)&v39 = v19;
    *((_QWORD *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(_QWORD *)&v37[0] = v19;
    *((_QWORD *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_20A44FD68(v38, v32);
    v33 = v29;
    v34 = v30;
    v35 = v31;
    sub_20A44FD68(v32, v36);
    v29 = v33;
    v30 = v34;
    v31 = v35;
    sub_20A44FD68(v36, v37);
    sub_20A44FD68(v37, &v33);
    result = sub_20A5B8E10();
    v20 = -1 << *(_BYTE *)(v2 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(_QWORD *)(v10 + 32) = v31;
    result = (uint64_t)sub_20A44FD68(&v33, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_20A498A68();
    return v2;
  }
  v14 = *(_QWORD *)(v28 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

unint64_t sub_20A4D596C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t *v17;
  unint64_t v18;
  char v19;
  uint64_t *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  int64_t i;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31[2];
  __int128 v32[3];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_253EB48D0);
    v2 = (_QWORD *)sub_20A5B8FF0();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
  }
  v25 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v24 = (unint64_t)(63 - v3) >> 6;
  result = swift_bridgeObjectRetain();
  i = 0;
  v7 = MEMORY[0x24BEE0D00];
  if (v5)
    goto LABEL_10;
LABEL_11:
  v13 = i + 1;
  if (__OFADD__(i, 1))
    goto LABEL_35;
  if (v13 >= v24)
    goto LABEL_32;
  v14 = *(_QWORD *)(v25 + 8 * v13);
  v15 = i + 1;
  if (!v14)
  {
    v15 = i + 2;
    if (i + 2 >= v24)
      goto LABEL_32;
    v14 = *(_QWORD *)(v25 + 8 * v15);
    if (!v14)
    {
      v15 = i + 3;
      if (i + 3 >= v24)
        goto LABEL_32;
      v14 = *(_QWORD *)(v25 + 8 * v15);
      if (!v14)
      {
        v15 = i + 4;
        if (i + 4 >= v24)
          goto LABEL_32;
        v14 = *(_QWORD *)(v25 + 8 * v15);
        if (!v14)
        {
          v16 = i + 5;
          if (i + 5 < v24)
          {
            v14 = *(_QWORD *)(v25 + 8 * v16);
            if (v14)
            {
              v15 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v15 = v16 + 1;
              if (__OFADD__(v16, 1))
                goto LABEL_36;
              if (v15 >= v24)
                break;
              v14 = *(_QWORD *)(v25 + 8 * v15);
              ++v16;
              if (v14)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_20A498A68();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  v5 = (v14 - 1) & v14;
  v12 = __clz(__rbit64(v14)) + (v15 << 6);
  for (i = v15; ; v12 = v11 | (i << 6))
  {
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v27 = *v17;
    v28 = v17[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_253EB47D0);
    swift_dynamicCast();
    sub_20A44CFD8(&v29, (uint64_t)v31);
    sub_20A44CFD8(v31, (uint64_t)v32);
    sub_20A44CFD8(v32, (uint64_t)&v30);
    result = sub_20A47094C(v27, v28);
    v18 = result;
    if ((v19 & 1) != 0)
    {
      v8 = v7;
      v9 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v9 = v27;
      v9[1] = v28;
      v7 = v8;
      v10 = v2[7] + 40 * v18;
      __swift_destroy_boxed_opaque_existential_1(v10);
      result = sub_20A44CFD8(&v30, v10);
      if (!v5)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v20 = (uint64_t *)(v2[6] + 16 * result);
    *v20 = v27;
    v20[1] = v28;
    result = sub_20A44CFD8(&v30, v2[7] + 40 * result);
    v21 = v2[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_34;
    v2[2] = v23;
    if (!v5)
      goto LABEL_11;
LABEL_10:
    v11 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

void *sub_20A4D5CA8()
{
  void *result;

  result = sub_20A4D5CC4();
  qword_253EBC810 = (uint64_t)result;
  return result;
}

void *sub_20A4D5CC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  unsigned __int8 v11;
  uint64_t v13;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB4980);
  MEMORY[0x24BDAC7A8](v0, v1);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DIPURLCache();
  v4 = (void *)objc_opt_self();
  v5 = objc_msgSend(v4, sel_sharedURLCache);
  objc_msgSend(v5, sel_memoryCapacity);

  v6 = objc_msgSend(v4, sel_sharedURLCache);
  objc_msgSend(v6, sel_diskCapacity);

  if (qword_253EB4458 != -1)
    swift_once();
  v7 = __swift_project_value_buffer(v0, (uint64_t)qword_253EB4438);
  sub_20A4D7C7C(v7, (uint64_t)v3);
  v8 = (void *)sub_20A5B8C24();
  v9 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  if (qword_253EB4740 != -1)
    swift_once();
  if (byte_253EBC790 == 1)
  {
    v10 = (void *)sub_20A5B88F4();
    v11 = objc_msgSend(v9, sel_BOOLForKey_, v10);

    if ((v11 & 1) != 0)
      objc_msgSend(v8, sel_removeAllCachedResponses);
  }
  else
  {

  }
  sub_20A4D645C();
  return v8;
}

uint64_t sub_20A4D5EBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  void (*v30)(char *, char *, uint64_t);
  void (*v31)(char *, uint64_t, uint64_t, uint64_t);
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  id v42;
  id v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  void (*v50)(char *, uint64_t, uint64_t);
  uint64_t v51;
  char *v52;
  void (*v53)(char *, uint64_t);
  void (*v54)(char *, uint64_t);
  uint64_t v56;
  void (*v57)(char *, uint64_t, uint64_t, uint64_t);
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  unint64_t v64;
  unint64_t v65;

  v61 = sub_20A5B8438();
  v59 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61, v0);
  v60 = (char *)&v56 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_20A5B84D4();
  v3 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x24BDAC7A8](v2, v4);
  v58 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5, v7);
  v10 = (char *)&v56 - v9;
  MEMORY[0x24BDAC7A8](v8, v11);
  v13 = (char *)&v56 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB4980);
  v16 = MEMORY[0x24BDAC7A8](v14, v15);
  v18 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v16, v19);
  v22 = (char *)&v56 - v21;
  v24 = MEMORY[0x24BDAC7A8](v20, v23);
  v63 = (char *)&v56 - v25;
  __swift_allocate_value_buffer(v24, qword_253EB4438);
  v62 = __swift_project_value_buffer(v14, (uint64_t)qword_253EB4438);
  v26 = (void *)objc_opt_self();
  v27 = objc_msgSend(v26, sel_defaultManager);
  v28 = (void *)sub_20A5B88F4();
  v29 = objc_msgSend(v27, sel_containerURLForSecurityApplicationGroupIdentifier_, v28);

  if (v29)
  {
    sub_20A5B848C();

    v30 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
    v30(v22, v10, v2);
    v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    v31(v22, 0, 1, v2);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v22, 1, v2) != 1)
    {
      v30(v13, v22, v2);
      v64 = 0xD000000000000013;
      v65 = 0x800000020A5E1DD0;
      v33 = v59;
      v32 = v60;
      v34 = v61;
      (*(void (**)(char *, _QWORD, uint64_t))(v59 + 104))(v60, *MEMORY[0x24BDCD7A0], v61);
      sub_20A49DBC0();
      v35 = (uint64_t)v63;
      sub_20A5B84BC();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v32, v34);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v13, v2);
      v36 = (char *)v35;
      v37 = 0;
LABEL_9:
      v31(v36, v37, 1, v2);
      return sub_20A459C88(v35, v62, (uint64_t *)&unk_253EB4980);
    }
  }
  else
  {
    v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    v31(v22, 1, 1, v2);
  }
  sub_20A44CE2C((uint64_t)v22, (uint64_t *)&unk_253EB4980);
  v38 = objc_msgSend(v26, sel_defaultManager);
  v39 = 1;
  v40 = objc_msgSend(v38, sel_URLsForDirectory_inDomains_, 13, 1);

  v41 = sub_20A5B8AA4();
  if (*(_QWORD *)(v41 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v18, v41 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), v2);
    v39 = 0;
  }
  v31(v18, v39, 1, v2);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v18, 1, v2) == 1)
  {
    sub_20A44CE2C((uint64_t)v18, (uint64_t *)&unk_253EB4980);
    v35 = (uint64_t)v63;
    v36 = v63;
    v37 = 1;
    goto LABEL_9;
  }
  v42 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v43 = objc_msgSend(v42, sel_bundleIdentifier);

  v57 = v31;
  if (v43)
  {
    v44 = sub_20A5B8900();
    v46 = v45;

  }
  else
  {
    v44 = 0xD000000000000014;
    v46 = 0x800000020A5E1DB0;
  }
  v64 = v44;
  v65 = v46;
  v47 = *MEMORY[0x24BDCD7A0];
  v48 = v59;
  v49 = v60;
  v50 = *(void (**)(char *, uint64_t, uint64_t))(v59 + 104);
  v51 = v61;
  v50(v60, v47, v61);
  sub_20A49DBC0();
  v52 = v58;
  sub_20A5B84C8();
  v53 = *(void (**)(char *, uint64_t))(v48 + 8);
  v53(v49, v51);
  swift_bridgeObjectRelease();
  v54 = *(void (**)(char *, uint64_t))(v3 + 8);
  v54(v18, v2);
  v64 = 7107189;
  v65 = 0xE300000000000000;
  v50(v49, v47, v51);
  v35 = (uint64_t)v63;
  sub_20A5B84BC();
  v53(v49, v51);
  swift_bridgeObjectRelease();
  v54(v52, v2);
  v57((char *)v35, 0, 1, v2);
  return sub_20A459C88(v35, v62, (uint64_t *)&unk_253EB4980);
}

uint64_t sub_20A4D645C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB4980);
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC17CoreODIEssentials11DIPURLCache_logger + 8);
  v13 = *(_QWORD *)(v0 + OBJC_IVAR____TtC17CoreODIEssentials11DIPURLCache_logger);
  v14 = v5;
  v11 = 0;
  v12 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_20A5B8E94();
  swift_bridgeObjectRelease();
  v11 = 0xD00000000000001ELL;
  v12 = 0x800000020A5E1F80;
  if (qword_253EB4458 != -1)
    swift_once();
  v6 = __swift_project_value_buffer(v1, (uint64_t)qword_253EB4438);
  sub_20A4D7C7C(v6, (uint64_t)v4);
  v7 = sub_20A5B84D4();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v4, 1, v7) == 1)
  {
    sub_20A44CE2C((uint64_t)v4, (uint64_t *)&unk_253EB4980);
  }
  else
  {
    sub_20A5B8444();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v4, v7);
  }
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  v9 = v11;
  LOBYTE(v11) = 14;
  CoreODILogger.debug(_:category:)(v9, v12, &v11);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

id sub_20A4D679C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  unsigned __int8 v13;
  id v14;
  id v15;
  id v16;
  unint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  id v23;
  id v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB4980);
  v5 = MEMORY[0x24BDAC7A8](v3, v4);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v8);
  v10 = (char *)&v41 - v9;
  v11 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  if (qword_253EB4740 != -1)
    swift_once();
  if (byte_253EBC790 == 1)
  {
    v12 = (void *)sub_20A5B88F4();
    v13 = objc_msgSend(v11, sel_BOOLForKey_, v12);

    if ((v13 & 1) != 0)
    {
      v14 = a1;
      return a1;
    }
  }
  else
  {

  }
  v16 = objc_msgSend(a1, sel_response);
  v17 = sub_20A4D6CF4(v16);

  if (v17)
  {
    v42 = v7;
    v43 = v10;
    v44 = v1;
    v18 = objc_msgSend(a1, sel_response);
    v19 = objc_msgSend(a1, sel_data);
    v20 = sub_20A5B8564();
    v22 = v21;

    sub_20A4D55A8(v17);
    v23 = objc_msgSend(a1, sel_storagePolicy);
    v24 = objc_allocWithZone(MEMORY[0x24BDD1498]);
    v25 = (void *)sub_20A5B8540();
    v26 = (void *)sub_20A5B887C();
    swift_bridgeObjectRelease();
    v15 = objc_msgSend(v24, sel_initWithResponse_data_userInfo_storagePolicy_, v18, v25, v26, v23);
    sub_20A44BD90(v20, v22);

    v27 = objc_msgSend(a1, sel_response);
    v28 = objc_msgSend(v27, sel_URL);

    if (v28)
    {
      v29 = (uint64_t)v42;
      sub_20A5B848C();

      v30 = sub_20A5B84D4();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v29, 0, 1, v30);
    }
    else
    {
      v30 = sub_20A5B84D4();
      v29 = (uint64_t)v42;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v42, 1, 1, v30);
    }
    v32 = (uint64_t)v43;
    sub_20A459C88(v29, (uint64_t)v43, (uint64_t *)&unk_253EB4980);
    sub_20A5B84D4();
    v33 = *(_QWORD *)(v30 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v32, 1, v30) == 1)
    {
      sub_20A44CE2C(v32, (uint64_t *)&unk_253EB4980);
    }
    else
    {
      sub_20A5B8444();
      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v30);
    }
    v34 = v44;
    if (*(_QWORD *)(v17 + 16) && (v35 = sub_20A47094C(0x4173657269707865, 0xE900000000000074), (v36 & 1) != 0))
    {
      sub_20A44FD78(*(_QWORD *)(v17 + 56) + 32 * v35, (uint64_t)&v47);
    }
    else
    {
      v47 = 0u;
      v48 = 0u;
    }
    swift_bridgeObjectRelease();
    if (*((_QWORD *)&v48 + 1))
    {
      sub_20A44FD68(&v47, &v49);
    }
    else
    {
      v50 = MEMORY[0x24BEE0D00];
      *(_QWORD *)&v49 = 7104878;
      *((_QWORD *)&v49 + 1) = 0xE300000000000000;
      sub_20A44CE2C((uint64_t)&v47, &qword_253EB52E0);
    }
    v37 = *(_QWORD *)(v34 + OBJC_IVAR____TtC17CoreODIEssentials11DIPURLCache_logger);
    v38 = *(_QWORD *)(v34 + OBJC_IVAR____TtC17CoreODIEssentials11DIPURLCache_logger + 8);
    *(_QWORD *)&v47 = v37;
    *((_QWORD *)&v47 + 1) = v38;
    v45 = 0;
    v46 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_20A5B8E94();
    sub_20A5B899C();
    sub_20A5B899C();
    swift_bridgeObjectRelease();
    sub_20A5B899C();
    sub_20A5B8F9C();
    v39 = v45;
    LOBYTE(v45) = 14;
    CoreODILogger.debug(_:category:)(v39, v46, &v45);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v49);
  }
  else
  {
    v31 = *(_QWORD *)(v1 + OBJC_IVAR____TtC17CoreODIEssentials11DIPURLCache_logger + 8);
    *(_QWORD *)&v49 = *(_QWORD *)(v1 + OBJC_IVAR____TtC17CoreODIEssentials11DIPURLCache_logger);
    *((_QWORD *)&v49 + 1) = v31;
    LOBYTE(v47) = 17;
    swift_bridgeObjectRetain();
    CoreODILogger.debug(_:category:)(0xD000000000000022, 0x800000020A5E1F30, &v47);
    swift_bridgeObjectRelease();
    return 0;
  }
  return v15;
}

unint64_t sub_20A4D6CF4(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  void *v13;
  id v14;
  unint64_t v15;
  unint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  void (*v26)(char *, _BYTE *, uint64_t);
  _QWORD *v27;
  char *v28;
  unint64_t v29;
  unint64_t v30;
  void (*v31)(_BYTE *, uint64_t);
  uint64_t v32;
  _BYTE v34[15];
  char v35;
  uint64_t v36;
  uint64_t v37;

  v3 = sub_20A5B8630();
  v4 = *(_QWORD *)(v3 - 8);
  v6 = MEMORY[0x24BDAC7A8](v3, v5);
  v8 = &v34[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v6, v9);
  v11 = &v34[-v10];
  objc_opt_self();
  v12 = swift_dynamicCastObjCClass();
  if (!v12)
    return 0;
  v13 = (void *)v12;
  v14 = a1;
  v15 = sub_20A4D7CC4(v13);
  if (!v16 || (sub_20A4D7FC0(v15, v16), v18 = v17, swift_bridgeObjectRelease(), (v18 & 1) != 0))
  {
    v32 = *(_QWORD *)(v1 + OBJC_IVAR____TtC17CoreODIEssentials11DIPURLCache_logger + 8);
    v36 = *(_QWORD *)(v1 + OBJC_IVAR____TtC17CoreODIEssentials11DIPURLCache_logger);
    v37 = v32;
    v35 = 17;
    swift_bridgeObjectRetain();
    CoreODILogger.debug(_:category:)(0xD000000000000049, 0x800000020A5E1DF0, &v35);
    swift_bridgeObjectRelease();

    return 0;
  }
  sub_20A5B8624();
  sub_20A5B85AC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB52A0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_253EB50F0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(_QWORD *)(v20 + 72);
  v22 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_20A5BA9B0;
  v24 = (_QWORD *)(v23 + v22);
  v25 = (char *)v24 + *(int *)(v19 + 48);
  *v24 = 0x74416465726F7473;
  v24[1] = 0xE800000000000000;
  v26 = *(void (**)(char *, _BYTE *, uint64_t))(v4 + 16);
  v26(v25, v11, v3);
  v27 = (_QWORD *)((char *)v24 + v21);
  v28 = (char *)v24 + v21 + *(int *)(v19 + 48);
  *v27 = 0x4173657269707865;
  v27[1] = 0xE900000000000074;
  v26(v28, v8, v3);
  v29 = sub_20A46AE14(v23);
  v30 = sub_20A4D5128(v29);

  swift_bridgeObjectRelease();
  v31 = *(void (**)(_BYTE *, uint64_t))(v4 + 8);
  v31(v8, v3);
  v31(v11, v3);
  return v30;
}

id sub_20A4D720C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DIPURLCache();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for DIPURLCache()
{
  return objc_opt_self();
}

uint64_t sub_20A4D7270(uint64_t a1, char a2, uint64_t (*a3)(_QWORD *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  unint64_t v48;
  _QWORD v50[4];

  v50[3] = a4;
  if (a1 < 0)
    goto LABEL_42;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = MEMORY[0x24BEE4AF8];
  v47 = swift_allocObject();
  *(_QWORD *)(v47 + 16) = 15;
  v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (v12 = HIBYTE(a6) & 0xF) : (v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0)
      v11 = a5 & 0xFFFFFFFFFFFFLL;
    v30 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0)
      v30 = 11;
    sub_20A4D770C(v30 | (v11 << 16), v47, a2 & 1, v10);
    swift_bridgeObjectRelease();
    v13 = *(_QWORD **)(v10 + 16);
    swift_bridgeObjectRetain();
    swift_release();
LABEL_39:
    swift_release();
    return (uint64_t)v13;
  }
  v42 = a1;
  v43 = v10;
  v48 = 4 * v12;
  v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v14 = 15;
  v15 = 15;
  v16 = 15;
  while (1)
  {
    v50[0] = sub_20A5B8A14();
    v50[1] = v17;
    v18 = a3(v50);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v13;
    }
    v19 = v18;
    swift_bridgeObjectRelease();
    if ((v19 & 1) != 0)
      break;
    v14 = sub_20A5B8990();
LABEL_9:
    if (v48 == v14 >> 14)
      goto LABEL_29;
  }
  if (v15 >> 14 == v14 >> 14 && (a2 & 1) != 0)
  {
    v14 = sub_20A5B8990();
    *(_QWORD *)(v47 + 16) = v14;
    v15 = v14;
    v16 = v14;
    goto LABEL_9;
  }
  if (v14 >> 14 < v15 >> 14)
    goto LABEL_41;
  v20 = sub_20A5B8A2C();
  v44 = v21;
  v45 = v20;
  v23 = v22;
  v25 = v24;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v13 = sub_20A47051C(0, v13[2] + 1, 1, v13);
  v27 = v13[2];
  v26 = v13[3];
  if (v27 >= v26 >> 1)
    v13 = sub_20A47051C((_QWORD *)(v26 > 1), v27 + 1, 1, v13);
  v13[2] = v27 + 1;
  v28 = &v13[4 * v27];
  v28[4] = v45;
  v28[5] = v23;
  v28[6] = v25;
  v28[7] = v44;
  *(_QWORD *)(v43 + 16) = v13;
  v29 = sub_20A5B8990();
  v14 = v29;
  *(_QWORD *)(v47 + 16) = v29;
  if (v13[2] != v42)
  {
    v15 = v29;
    v16 = v29;
    goto LABEL_9;
  }
  v16 = v29;
  v15 = v29;
LABEL_29:
  if (v48 == v15 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_38:
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_39;
  }
  if (v48 >= v16 >> 14)
  {
    v31 = sub_20A5B8A2C();
    v33 = v32;
    v35 = v34;
    v37 = v36;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v13 = sub_20A47051C(0, v13[2] + 1, 1, v13);
    v39 = v13[2];
    v38 = v13[3];
    if (v39 >= v38 >> 1)
      v13 = sub_20A47051C((_QWORD *)(v38 > 1), v39 + 1, 1, v13);
    v13[2] = v39 + 1;
    v40 = &v13[4 * v39];
    v40[4] = v31;
    v40[5] = v33;
    v40[6] = v35;
    v40[7] = v37;
    *(_QWORD *)(v43 + 16) = v13;
    goto LABEL_38;
  }
LABEL_41:
  sub_20A5B8FA8();
  __break(1u);
LABEL_42:
  result = sub_20A5B8FA8();
  __break(1u);
  return result;
}

uint64_t sub_20A4D770C(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t result;

  v4 = *(_QWORD *)(a2 + 16) >> 14;
  v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1)
    return v5 ^ 1u;
  if (a1 >> 14 >= v4)
  {
    v7 = sub_20A5B8A2C();
    v9 = v8;
    v11 = v10;
    v13 = v12;
    v14 = *(_QWORD **)(a4 + 16);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(a4 + 16) = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v14 = sub_20A47051C(0, v14[2] + 1, 1, v14);
      *(_QWORD *)(a4 + 16) = v14;
    }
    v17 = v14[2];
    v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      v14 = sub_20A47051C((_QWORD *)(v16 > 1), v17 + 1, 1, v14);
      *(_QWORD *)(a4 + 16) = v14;
    }
    v14[2] = v17 + 1;
    v18 = &v14[4 * v17];
    v18[4] = v7;
    v18[5] = v9;
    v18[6] = v11;
    v18[7] = v13;
    return v5 ^ 1u;
  }
  result = sub_20A5B8FA8();
  __break(1u);
  return result;
}

uint64_t sub_20A4D7864(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  int v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  _QWORD v37[3];
  _BYTE v38[40];
  __int128 v39;
  __int128 v40;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_253EB4410);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_20A5B8708();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_253EB4990);
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_20A5B8630();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15, v17);
  v19 = (char *)v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = objc_msgSend(a1, sel_userInfo);
  if (!v20)
  {
    v39 = 0u;
    v40 = 0u;
LABEL_12:
    sub_20A44CE2C((uint64_t)&v39, &qword_253EB52E0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
    goto LABEL_13;
  }
  v21 = v20;
  v37[0] = v19;
  v22 = sub_20A5B8888();

  v37[1] = 0x74416465726F7473;
  v37[2] = 0xE800000000000000;
  sub_20A5B8E34();
  if (*(_QWORD *)(v22 + 16) && (v23 = sub_20A470A0C((uint64_t)v38), (v24 & 1) != 0))
  {
    sub_20A44FD78(*(_QWORD *)(v22 + 56) + 32 * v23, (uint64_t)&v39);
  }
  else
  {
    v39 = 0u;
    v40 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_20A459C54((uint64_t)v38);
  if (!*((_QWORD *)&v40 + 1))
    goto LABEL_12;
  v25 = swift_dynamicCast();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v14, v25 ^ 1u, 1, v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
LABEL_13:
    sub_20A44CE2C((uint64_t)v14, &qword_253EB4990);
    return 0;
  }
  (*(void (**)(_QWORD, char *, uint64_t))(v16 + 32))(v37[0], v14, v15);
  v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1500]), sel_init);
  sub_20A5B8678();
  v27 = (void *)sub_20A5B869C();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  objc_msgSend(v26, sel_setLocale_, v27);

  sub_20A5B875C();
  v28 = sub_20A5B8780();
  v29 = *(_QWORD *)(v28 - 8);
  v30 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v5, 1, v28) != 1)
  {
    v30 = (void *)sub_20A5B8768();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v5, v28);
  }
  objc_msgSend(v26, sel_setTimeZone_, v30);

  v31 = (void *)sub_20A5B88F4();
  objc_msgSend(v26, sel_setDateFormat_, v31);

  v32 = v37[0];
  v33 = (void *)sub_20A5B85B8();
  v34 = objc_msgSend(v26, sel_stringFromDate_, v33);

  v35 = sub_20A5B8900();
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v32, v15);
  return v35;
}

uint64_t sub_20A4D7C7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB4980);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_20A4D7CC4(void *a1)
{
  id v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  _BYTE v15[40];
  __int128 v16;
  __int128 v17;

  v2 = objc_msgSend(a1, sel_allHeaderFields);
  v3 = sub_20A5B8888();

  sub_20A5B8E34();
  if (*(_QWORD *)(v3 + 16) && (v4 = sub_20A470A0C((uint64_t)v15), (v5 & 1) != 0))
  {
    sub_20A44FD78(*(_QWORD *)(v3 + 56) + 32 * v4, (uint64_t)&v16);
  }
  else
  {
    v16 = 0u;
    v17 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_20A459C54((uint64_t)v15);
  if (*((_QWORD *)&v17 + 1))
  {
    if ((swift_dynamicCast() & 1) != 0)
      return 0xD000000000000019;
  }
  else
  {
    sub_20A44CE2C((uint64_t)&v16, &qword_253EB52E0);
  }
  v6 = objc_msgSend(a1, sel_allHeaderFields);
  v7 = sub_20A5B8888();

  sub_20A5B8E34();
  if (*(_QWORD *)(v7 + 16) && (v8 = sub_20A470A0C((uint64_t)v15), (v9 & 1) != 0))
  {
    sub_20A44FD78(*(_QWORD *)(v7 + 56) + 32 * v8, (uint64_t)&v16);
  }
  else
  {
    v16 = 0u;
    v17 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_20A459C54((uint64_t)v15);
  if (*((_QWORD *)&v17 + 1))
  {
    if ((swift_dynamicCast() & 1) != 0)
      return 0xD000000000000019;
  }
  else
  {
    sub_20A44CE2C((uint64_t)&v16, &qword_253EB52E0);
  }
  v10 = objc_msgSend(a1, sel_allHeaderFields);
  v11 = sub_20A5B8888();

  sub_20A5B8E34();
  if (*(_QWORD *)(v11 + 16) && (v12 = sub_20A470A0C((uint64_t)v15), (v13 & 1) != 0))
  {
    sub_20A44FD78(*(_QWORD *)(v11 + 56) + 32 * v12, (uint64_t)&v16);
  }
  else
  {
    v16 = 0u;
    v17 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_20A459C54((uint64_t)v15);
  if (*((_QWORD *)&v17 + 1))
  {
    if ((swift_dynamicCast() & 1) != 0)
      return 0xD000000000000019;
  }
  else
  {
    sub_20A44CE2C((uint64_t)&v16, &qword_253EB52E0);
  }
  return 0;
}

uint64_t sub_20A4D7FC0(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _BYTE v26[16];
  __int128 *v27;
  uint64_t v28;
  unint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;

  v4 = sub_20A5B82A0();
  v5 = *(_QWORD *)(v4 - 8);
  v24 = v4;
  v25 = v5;
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v30 = 44;
  *((_QWORD *)&v30 + 1) = 0xE100000000000000;
  v27 = &v30;
  swift_bridgeObjectRetain();
  v9 = sub_20A4D7270(0x7FFFFFFFFFFFFFFFLL, 1, sub_20A4D8238, (uint64_t)v26, a1, a2);
  v10 = *(_QWORD *)(v9 + 16);
  if (v10)
  {
    v23[1] = v9;
    v11 = (uint64_t *)(v9 + 56);
    while (1)
    {
      v12 = *(v11 - 1);
      v13 = *v11;
      v30 = *(_OWORD *)(v11 - 3);
      v31 = v12;
      v32 = v13;
      swift_bridgeObjectRetain();
      sub_20A5B8294();
      sub_20A4D8250();
      v14 = sub_20A5B8D68();
      v16 = v15;
      (*(void (**)(char *, uint64_t))(v25 + 8))(v8, v24);
      v17 = swift_bridgeObjectRelease();
      *(_QWORD *)&v30 = 61;
      *((_QWORD *)&v30 + 1) = 0xE100000000000000;
      MEMORY[0x24BDAC7A8](v17, v18);
      v23[-2] = &v30;
      swift_bridgeObjectRetain();
      v19 = sub_20A4D7270(0x7FFFFFFFFFFFFFFFLL, 1, sub_20A4D8238, (uint64_t)&v23[-4], v14, v16);
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v19 + 16) == 2)
      {
        v20 = *(_QWORD *)(v19 + 48);
        v21 = *(_QWORD *)(v19 + 56);
        v30 = *(_OWORD *)(v19 + 32);
        v31 = v20;
        v32 = v21;
        v28 = 0x6567612D78616DLL;
        v29 = 0xE700000000000000;
        sub_20A49DBC0();
        if (!sub_20A5B8D80())
          break;
      }
      swift_bridgeObjectRelease();
      v11 += 4;
      if (!--v10)
        goto LABEL_8;
    }
    result = swift_bridgeObjectRelease();
    if (*(_QWORD *)(v19 + 16) < 2uLL)
    {
      __break(1u);
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return sub_20A5B8BE8();
    }
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

uint64_t sub_20A4D8238(_QWORD *a1)
{
  return sub_20A4D8294(a1) & 1;
}

unint64_t sub_20A4D8250()
{
  unint64_t result;

  result = qword_253EB50A8;
  if (!qword_253EB50A8)
  {
    result = MEMORY[0x20BD26CEC](MEMORY[0x24BEE1E38], MEMORY[0x24BEE1E08]);
    atomic_store(result, (unint64_t *)&qword_253EB50A8);
  }
  return result;
}

uint64_t sub_20A4D8294(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1])
    return 1;
  else
    return sub_20A5B91AC() & 1;
}

uint64_t sub_20A4D82E8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_20A4D830C()
{
  return swift_deallocObject();
}

void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> PregeneratedAssessment.assessmentGUIDSeedDecoded()(CoreODIEssentials::ODIClientGUIDSeeds *__return_ptr retstr)
{
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;

  type metadata accessor for PregeneratedAssessment();
  v2 = sub_20A5B8504();
  if (v3 >> 60 == 15)
  {
    v7 = 109;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000022, 0x800000020A5DD4D0, 0, &v7, 0, 0, 0xD000000000000074, 0x800000020A5DD500, 0x6F72662864656573, 0xEB00000000293A6DLL, 77);
    swift_willThrow();
  }
  else
  {
    v4 = v2;
    v5 = v3;
    sub_20A5B8264();
    swift_allocObject();
    sub_20A5B8258();
    sub_20A48A920();
    sub_20A5B824C();
    swift_release();
    if (v1)
    {
      v6 = 109;
      ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000022, 0x800000020A5DD4D0, 0, &v6, 0, 0, 0xD000000000000074, 0x800000020A5DD500, 0x6F72662864656573, 0xEB00000000293A6DLL, 82);
      swift_willThrow();

      sub_20A44CFC4(v4, v5);
    }
    else
    {
      sub_20A44CFC4(v4, v5);
    }
  }
}

uint64_t type metadata accessor for PregeneratedAssessment()
{
  uint64_t result;

  result = qword_2545FAEA8;
  if (!qword_2545FAEA8)
    return swift_getSingletonMetadata();
  return result;
}

void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> PregeneratedAssessment.trainingGUIDSeedDecoded()(CoreODIEssentials::ODIClientGUIDSeeds *__return_ptr retstr)
{
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;

  type metadata accessor for PregeneratedAssessment();
  v2 = sub_20A5B8504();
  if (v3 >> 60 == 15)
  {
    v7 = 109;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000022, 0x800000020A5DD4D0, 0, &v7, 0, 0, 0xD000000000000074, 0x800000020A5DD500, 0x6F72662864656573, 0xEB00000000293A6DLL, 77);
    swift_willThrow();
  }
  else
  {
    v4 = v2;
    v5 = v3;
    sub_20A5B8264();
    swift_allocObject();
    sub_20A5B8258();
    sub_20A48A920();
    sub_20A5B824C();
    swift_release();
    if (v1)
    {
      v6 = 109;
      ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000022, 0x800000020A5DD4D0, 0, &v6, 0, 0, 0xD000000000000074, 0x800000020A5DD500, 0x6F72662864656573, 0xEB00000000293A6DLL, 82);
      swift_willThrow();

      sub_20A44CFC4(v4, v5);
    }
    else
    {
      sub_20A44CFC4(v4, v5);
    }
  }
}

uint64_t PregeneratedAssessment.workflowID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PregeneratedAssessment.createdAt.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PregeneratedAssessment() + 20);
  v4 = sub_20A5B8630();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PregeneratedAssessment.assessment.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PregeneratedAssessment() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PregeneratedAssessment.trainingData.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PregeneratedAssessment() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PregeneratedAssessment.assessmentGUID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PregeneratedAssessment() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PregeneratedAssessment.assessmentGUIDSeeds.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PregeneratedAssessment() + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PregeneratedAssessment.trainingGUID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PregeneratedAssessment() + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PregeneratedAssessment.trainingGUIDSeeds.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PregeneratedAssessment() + 44));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PregeneratedAssessment.trainingSignalID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PregeneratedAssessment() + 48));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PregeneratedAssessment.digestIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for PregeneratedAssessment() + 52));
}

uint64_t PregeneratedAssessment.bindings.getter()
{
  type metadata accessor for PregeneratedAssessment();
  return swift_bridgeObjectRetain();
}

uint64_t PregeneratedAssessment.encryptedTSID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PregeneratedAssessment() + 60));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PregeneratedAssessment.encryptedAGUID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PregeneratedAssessment() + 64));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PregeneratedAssessment.useSendOTD.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PregeneratedAssessment() + 68));
}

uint64_t PregeneratedAssessment.otdDestinationHost.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PregeneratedAssessment() + 72));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PregeneratedAssessment.profileID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PregeneratedAssessment() + 76));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PregeneratedAssessment.init(workflowID:createdAt:assessment:trainingData:assessmentGUID:assessmentGUIDSeeds:trainingGUID:trainingGUIDSeeds:trainingSignalID:digestIndex:bindings:encryptedTSID:encryptedAGUID:useSentOTD:otdDestinationHost:profileID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  int *v32;
  char *v33;
  uint64_t v34;
  uint64_t result;
  _QWORD *v36;
  _QWORD *v37;
  _QWORD *v38;
  _QWORD *v39;
  _QWORD *v40;
  _QWORD *v41;
  _QWORD *v42;
  _QWORD *v43;
  _QWORD *v44;
  _QWORD *v45;
  _QWORD *v46;

  *a9 = a1;
  a9[1] = a2;
  v32 = (int *)type metadata accessor for PregeneratedAssessment();
  v33 = (char *)a9 + v32[5];
  v34 = sub_20A5B8630();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v33, a3, v34);
  v36 = (_QWORD *)((char *)a9 + v32[6]);
  *v36 = a4;
  v36[1] = a5;
  v37 = (_QWORD *)((char *)a9 + v32[7]);
  *v37 = a6;
  v37[1] = a7;
  v38 = (_QWORD *)((char *)a9 + v32[8]);
  *v38 = a8;
  v38[1] = a10;
  v39 = (_QWORD *)((char *)a9 + v32[9]);
  *v39 = a11;
  v39[1] = a12;
  v40 = (_QWORD *)((char *)a9 + v32[10]);
  *v40 = a13;
  v40[1] = a14;
  v41 = (_QWORD *)((char *)a9 + v32[11]);
  *v41 = a15;
  v41[1] = a16;
  v42 = (_QWORD *)((char *)a9 + v32[12]);
  *v42 = a17;
  v42[1] = a18;
  *(_QWORD *)((char *)a9 + v32[13]) = a19;
  *(_QWORD *)((char *)a9 + v32[14]) = a20;
  v43 = (_QWORD *)((char *)a9 + v32[15]);
  *v43 = a21;
  v43[1] = a22;
  v44 = (_QWORD *)((char *)a9 + v32[16]);
  *v44 = a23;
  v44[1] = a24;
  *((_BYTE *)a9 + v32[17]) = a25;
  v45 = (_QWORD *)((char *)a9 + v32[18]);
  *v45 = a26;
  v45[1] = a27;
  v46 = (_QWORD *)((char *)a9 + v32[19]);
  *v46 = a28;
  v46[1] = a29;
  return result;
}

uint64_t sub_20A4D8CBC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_20A4D8CF4 + 4 * aF[a1]))(0x776F6C666B726F77, 0xEA00000000004449);
}

uint64_t sub_20A4D8CF4()
{
  return 0x4164657461657263;
}

uint64_t sub_20A4D8D14()
{
  return 0x656D737365737361;
}

unint64_t sub_20A4D8D58()
{
  return 0xD000000000000013;
}

uint64_t sub_20A4D8D70()
{
  return 0x676E696E69617274;
}

unint64_t sub_20A4D8D90()
{
  return 0xD000000000000011;
}

unint64_t sub_20A4D8DA8()
{
  return 0xD000000000000010;
}

uint64_t sub_20A4D8DC4()
{
  return 0x6E49747365676964;
}

uint64_t sub_20A4D8E04()
{
  return 0x6574707972636E65;
}

uint64_t sub_20A4D8E3C()
{
  return 0x4F646E6553657375;
}

void sub_20A4D8E54()
{
  JUMPOUT(0x20A4D8E68);
}

uint64_t sub_20A4D8E74()
{
  return 0x49656C69666F7270;
}

uint64_t sub_20A4D8E90(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_20A4D8EC8 + 4 * byte_20A5C2840[a1]))(0x776F6C666B726F77, 0xEA00000000004449);
}

uint64_t sub_20A4D8EC8()
{
  return 0x4164657461657263;
}

uint64_t sub_20A4D8EE8()
{
  return 0x656D737365737361;
}

unint64_t sub_20A4D8F2C()
{
  return 0xD000000000000013;
}

uint64_t sub_20A4D8F44()
{
  return 0x676E696E69617274;
}

unint64_t sub_20A4D8F64()
{
  return 0xD000000000000011;
}

unint64_t sub_20A4D8F7C()
{
  return 0xD000000000000010;
}

uint64_t sub_20A4D8F98()
{
  return 0x6E49747365676964;
}

uint64_t sub_20A4D8FD8()
{
  return 0x6574707972636E65;
}

uint64_t sub_20A4D9010()
{
  return 0x4F646E6553657375;
}

void sub_20A4D9028()
{
  JUMPOUT(0x20A4D903CLL);
}

uint64_t sub_20A4D9048()
{
  return 0x49656C69666F7270;
}

uint64_t sub_20A4D9064(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_20A4D8CBC(*a1);
  v5 = v4;
  if (v3 == sub_20A4D8CBC(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_20A5B91AC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_20A4D90EC()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_20A5B929C();
  sub_20A4D8CBC(v1);
  sub_20A5B8978();
  swift_bridgeObjectRelease();
  return sub_20A5B92CC();
}

uint64_t sub_20A4D914C()
{
  unsigned __int8 *v0;

  sub_20A4D8CBC(*v0);
  sub_20A5B8978();
  return swift_bridgeObjectRelease();
}

uint64_t sub_20A4D918C()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_20A5B929C();
  sub_20A4D8CBC(v1);
  sub_20A5B8978();
  swift_bridgeObjectRelease();
  return sub_20A5B92CC();
}

uint64_t sub_20A4D91E8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_20A4DB7A0();
  *a1 = result;
  return result;
}

uint64_t sub_20A4D9214@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_20A4D8CBC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_20A4D923C()
{
  unsigned __int8 *v0;

  return sub_20A4D8E90(*v0);
}

uint64_t sub_20A4D9244@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_20A4DB7A0();
  *a1 = result;
  return result;
}

void sub_20A4D9268(_BYTE *a1@<X8>)
{
  *a1 = 16;
}

uint64_t sub_20A4D9274()
{
  sub_20A4D9C94();
  return sub_20A5B9314();
}

uint64_t sub_20A4D929C()
{
  sub_20A4D9C94();
  return sub_20A5B9320();
}

uint64_t PregeneratedAssessment.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  unint64_t v46;
  uint64_t v47;
  void *v48;
  void *v49;
  id v50;
  id v51;
  unint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t *v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t *v78;
  int *v79;
  id v80;
  _QWORD v81[5];

  v81[4] = *MEMORY[0x24BDAC8D0];
  v5 = sub_20A5B8630();
  v75 = *(_QWORD *)(v5 - 8);
  v76 = v5;
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FAE70);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = (int *)type metadata accessor for PregeneratedAssessment();
  MEMORY[0x24BDAC7A8](v79, v14);
  v77 = a1;
  v78 = (uint64_t *)((char *)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4D9C94();
  sub_20A5B92F0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v77);
  v73 = a2;
  v74 = v10;
  LOBYTE(v81[0]) = 0;
  v16 = v13;
  v17 = sub_20A5B9074();
  v19 = v78;
  *v78 = v17;
  v19[1] = v20;
  LOBYTE(v81[0]) = 1;
  sub_20A44D044(&qword_2545FAE80, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
  v21 = v76;
  sub_20A5B90A4();
  v22 = v79;
  (*(void (**)(char *, char *, uint64_t))(v75 + 32))((char *)v19 + v79[5], v8, v21);
  LOBYTE(v81[0]) = 2;
  v23 = sub_20A5B9074();
  v24 = (uint64_t *)((char *)v19 + v22[6]);
  *v24 = v23;
  v24[1] = v25;
  LOBYTE(v81[0]) = 3;
  v26 = sub_20A5B9074();
  v27 = (uint64_t *)((char *)v19 + v22[7]);
  *v27 = v26;
  v27[1] = v28;
  LOBYTE(v81[0]) = 4;
  v29 = sub_20A5B9074();
  v30 = (uint64_t *)((char *)v19 + v22[8]);
  *v30 = v29;
  v30[1] = v31;
  LOBYTE(v81[0]) = 5;
  v32 = sub_20A5B9074();
  v33 = (uint64_t *)((char *)v19 + v22[9]);
  *v33 = v32;
  v33[1] = v34;
  LOBYTE(v81[0]) = 6;
  v35 = sub_20A5B9074();
  v36 = (uint64_t *)((char *)v19 + v22[10]);
  *v36 = v35;
  v36[1] = v37;
  LOBYTE(v81[0]) = 7;
  v38 = sub_20A5B9074();
  v39 = (uint64_t *)((char *)v19 + v22[11]);
  *v39 = v38;
  v39[1] = v40;
  LOBYTE(v81[0]) = 8;
  v41 = sub_20A5B9074();
  v42 = (uint64_t *)((char *)v19 + v22[12]);
  *v42 = v41;
  v42[1] = v43;
  LOBYTE(v81[0]) = 9;
  v44 = v9;
  v45 = v16;
  *(uint64_t *)((char *)v78 + v79[13]) = sub_20A5B9098();
  LOBYTE(v80) = 10;
  sub_20A4D9CD8();
  sub_20A5B90A4();
  v47 = v81[0];
  v46 = v81[1];
  v48 = (void *)objc_opt_self();
  v49 = (void *)sub_20A5B8540();
  v80 = 0;
  v50 = objc_msgSend(v48, sel_JSONObjectWithData_options_error_, v49, 0, &v80);

  v51 = v80;
  if (v50)
  {
    sub_20A5B8DA4();
    swift_unknownObjectRelease();
    v52 = sub_20A4D9D1C((uint64_t)v81);
    *(uint64_t *)((char *)v78 + v79[14]) = v52;
    LOBYTE(v80) = 11;
    v53 = sub_20A5B9074();
    v56 = (uint64_t *)((char *)v78 + v79[15]);
    *v56 = v53;
    v56[1] = v57;
    LOBYTE(v80) = 12;
    v58 = sub_20A5B9074();
    v59 = (uint64_t *)((char *)v78 + v79[16]);
    *v59 = v58;
    v59[1] = v60;
    LOBYTE(v80) = 13;
    v61 = sub_20A5B9044();
    *((_BYTE *)v78 + v79[17]) = (v61 == 2) | v61 & 1;
    LOBYTE(v80) = 14;
    v62 = sub_20A5B9038();
    v64 = (uint64_t *)((char *)v78 + v79[18]);
    *v64 = v62;
    v64[1] = v63;
    LOBYTE(v80) = 15;
    v65 = sub_20A5B9038();
    v67 = v66;
    sub_20A44BD90(v47, v46);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v81);
    (*(void (**)(char *, uint64_t))(v74 + 8))(v45, v44);
    v68 = 0x4E574F4E4B4E55;
    if (v67)
      v68 = v65;
    v69 = 0xE700000000000000;
    if (v67)
      v69 = v67;
    v70 = (uint64_t)v78;
    v71 = (uint64_t *)((char *)v78 + v79[19]);
    *v71 = v68;
    v71[1] = v69;
    sub_20A48A964(v70, v73);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v77);
    return sub_20A4B0268(v70);
  }
  else
  {
    v54 = v51;
    sub_20A5B8420();

    swift_willThrow();
    sub_20A44BD90(v47, v46);
    (*(void (**)(char *, uint64_t))(v74 + 8))(v45, v9);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v77);
    v55 = v78;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v75 + 8))((char *)v55 + v79[5], v76);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

unint64_t sub_20A4D9C94()
{
  unint64_t result;

  result = qword_2545FAE78;
  if (!qword_2545FAE78)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C2AAC, &type metadata for PregeneratedAssessment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FAE78);
  }
  return result;
}

unint64_t sub_20A4D9CD8()
{
  unint64_t result;

  result = qword_2545FAE88;
  if (!qword_2545FAE88)
  {
    result = MEMORY[0x20BD26CEC](MEMORY[0x24BDCDE38], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_2545FAE88);
  }
  return result;
}

unint64_t sub_20A4D9D1C(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  char v19;
  unint64_t v20;
  uint64_t v21;
  _BOOL8 v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  uint64_t *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t result;
  uint64_t v33;
  int64_t v34;
  __int128 v35;
  uint64_t v36;
  _OWORD v37[2];
  __int128 v38;
  _OWORD v39[2];
  uint64_t v40;
  uint64_t v41;
  __int128 v42;

  sub_20A44FD78(a1, (uint64_t)&v40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FAED0);
  if (!swift_dynamicCast())
    return sub_20A469B08(MEMORY[0x24BEE4AF8]);
  v1 = 0;
  v2 = v38;
  v3 = *(_QWORD *)(v38 + 64);
  v33 = v38 + 64;
  v4 = 1 << *(_BYTE *)(v38 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & v3;
  v34 = (unint64_t)(v4 + 63) >> 6;
  v7 = (_QWORD *)MEMORY[0x24BEE4B00];
  if ((v5 & v3) == 0)
    goto LABEL_9;
LABEL_7:
  v8 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  v9 = v8 | (v1 << 6);
LABEL_8:
  v10 = *(_QWORD *)(v2 + 56);
  v11 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v9);
  v12 = v11[1];
  *(_QWORD *)&v38 = *v11;
  *((_QWORD *)&v38 + 1) = v12;
  sub_20A44FD78(v10 + 32 * v9, (uint64_t)v39);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_20A4DB7E8((uint64_t)&v38, (uint64_t)&v40);
    v16 = v41;
    if (!v41)
    {
      swift_release();
      return (unint64_t)v7;
    }
    v17 = v40;
    sub_20A44FD68(&v42, v37);
    sub_20A4DA688((uint64_t)v37, (uint64_t)&v35);
    if (!v36)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
      swift_bridgeObjectRelease();
      sub_20A4DB830((uint64_t)&v35);
      if (v6)
        goto LABEL_7;
      goto LABEL_9;
    }
    sub_20A44CFD8(&v35, (uint64_t)&v38);
    sub_20A47BD60((uint64_t)&v38, (uint64_t)&v35);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v20 = sub_20A47094C(v17, v16);
    v21 = v7[2];
    v22 = (v19 & 1) == 0;
    v23 = v21 + v22;
    if (__OFADD__(v21, v22))
      break;
    v24 = v19;
    if (v7[3] >= v23)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v19 & 1) == 0)
          goto LABEL_33;
      }
      else
      {
        sub_20A478CE0();
        if ((v24 & 1) == 0)
          goto LABEL_33;
      }
    }
    else
    {
      sub_20A475284(v23, isUniquelyReferenced_nonNull_native);
      v25 = sub_20A47094C(v17, v16);
      if ((v24 & 1) != (v26 & 1))
        goto LABEL_49;
      v20 = v25;
      if ((v24 & 1) == 0)
      {
LABEL_33:
        v7[(v20 >> 6) + 8] |= 1 << v20;
        v27 = (uint64_t *)(v7[6] + 16 * v20);
        *v27 = v17;
        v27[1] = v16;
        sub_20A44CFD8(&v35, v7[7] + 40 * v20);
        v28 = v7[2];
        v29 = __OFADD__(v28, 1);
        v30 = v28 + 1;
        if (v29)
          goto LABEL_47;
        v7[2] = v30;
        swift_bridgeObjectRetain();
        goto LABEL_38;
      }
    }
    v31 = v7[7] + 40 * v20;
    __swift_destroy_boxed_opaque_existential_1(v31);
    sub_20A44CFD8(&v35, v31);
LABEL_38:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
    if (v6)
      goto LABEL_7;
LABEL_9:
    v13 = v1 + 1;
    if (__OFADD__(v1, 1))
      goto LABEL_46;
    if (v13 < v34)
    {
      v14 = *(_QWORD *)(v33 + 8 * v13);
      if (v14)
        goto LABEL_12;
      v15 = v1 + 2;
      ++v1;
      if (v13 + 1 < v34)
      {
        v14 = *(_QWORD *)(v33 + 8 * v15);
        if (v14)
          goto LABEL_15;
        v1 = v13 + 1;
        if (v13 + 2 < v34)
        {
          v14 = *(_QWORD *)(v33 + 8 * (v13 + 2));
          if (v14)
          {
            v13 += 2;
            goto LABEL_12;
          }
          v15 = v13 + 3;
          v1 = v13 + 2;
          if (v13 + 3 < v34)
          {
            v14 = *(_QWORD *)(v33 + 8 * v15);
            if (!v14)
            {
              while (1)
              {
                v13 = v15 + 1;
                if (__OFADD__(v15, 1))
                  goto LABEL_48;
                if (v13 >= v34)
                {
                  v1 = v34 - 1;
                  goto LABEL_26;
                }
                v14 = *(_QWORD *)(v33 + 8 * v13);
                ++v15;
                if (v14)
                  goto LABEL_12;
              }
            }
LABEL_15:
            v13 = v15;
LABEL_12:
            v6 = (v14 - 1) & v14;
            v9 = __clz(__rbit64(v14)) + (v13 << 6);
            v1 = v13;
            goto LABEL_8;
          }
        }
      }
    }
LABEL_26:
    v6 = 0;
    memset(v39, 0, sizeof(v39));
    v38 = 0u;
  }
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  result = sub_20A5B9218();
  __break(1u);
  return result;
}

uint64_t PregeneratedAssessment.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  id v23[3];

  v23[2] = *(id *)MEMORY[0x24BDAC8D0];
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FAE90);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (void *)objc_opt_self();
  v20 = type metadata accessor for PregeneratedAssessment();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB47D0);
  v9 = (void *)sub_20A5B887C();
  v23[0] = 0;
  v10 = objc_msgSend(v8, sel_dataWithJSONObject_options_error_, v9, 0, v23);

  v11 = v23[0];
  if (v10)
  {
    v21 = v4;
    v12 = sub_20A5B8564();
    v14 = v13;

    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A4D9C94();
    sub_20A5B92FC();
    LOBYTE(v23[0]) = 0;
    sub_20A5B9110();
    if (v1)
    {
      (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v3);
      v15 = v12;
    }
    else
    {
      v19 = (void *)v12;
      LOBYTE(v23[0]) = 1;
      sub_20A5B8630();
      sub_20A44D044(&qword_2545FAE98, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
      sub_20A5B9140();
      LOBYTE(v23[0]) = 2;
      sub_20A5B9110();
      v18 = (void *)v14;
      LOBYTE(v23[0]) = 3;
      sub_20A5B9110();
      LOBYTE(v23[0]) = 4;
      sub_20A5B9110();
      LOBYTE(v23[0]) = 5;
      sub_20A5B9110();
      LOBYTE(v23[0]) = 6;
      sub_20A5B9110();
      LOBYTE(v23[0]) = 7;
      sub_20A5B9110();
      LOBYTE(v23[0]) = 8;
      sub_20A5B9110();
      LOBYTE(v23[0]) = 9;
      sub_20A5B9134();
      v23[0] = v19;
      v23[1] = v18;
      v22 = 10;
      sub_20A4DA920();
      sub_20A5B9140();
      LOBYTE(v23[0]) = 11;
      sub_20A5B9110();
      LOBYTE(v23[0]) = 12;
      sub_20A5B9110();
      LOBYTE(v23[0]) = 13;
      sub_20A5B911C();
      LOBYTE(v23[0]) = 15;
      sub_20A5B9110();
      LOBYTE(v23[0]) = 14;
      sub_20A5B90D4();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v3);
      v15 = (uint64_t)v19;
    }
    return sub_20A44BD90(v15, v14);
  }
  else
  {
    v16 = v11;
    sub_20A5B8420();

    return swift_willThrow();
  }
}

uint64_t sub_20A4DA688@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v18;
  _QWORD v19[4];
  _BYTE v20[32];

  sub_20A44FD78(a1, (uint64_t)v20);
  v4 = sub_20A4DB870();
  if (swift_dynamicCast())
  {
    v5 = v19[0];
    *(_QWORD *)(a2 + 24) = v4;
    *(_QWORD *)(a2 + 32) = sub_20A44D044(&qword_2545FAEE0, (uint64_t (*)(uint64_t))sub_20A4DB870, MEMORY[0x24BEE5BD8]);
    *(_QWORD *)a2 = v5;
  }
  else
  {
    v6 = MEMORY[0x24BEE0D00];
    if (swift_dynamicCast())
    {
      v7 = v19[0];
      v8 = v19[1];
      v9 = MEMORY[0x24BEE0D10];
      *(_QWORD *)(a2 + 24) = v6;
      *(_QWORD *)(a2 + 32) = v9;
      *(_QWORD *)a2 = v7;
      *(_QWORD *)(a2 + 8) = v8;
    }
    else
    {
      if (qword_253EB4A80 != -1)
        swift_once();
      v10 = sub_20A5B8804();
      __swift_project_value_buffer(v10, (uint64_t)qword_253EB4950);
      sub_20A44FD78(a1, (uint64_t)v19);
      v11 = sub_20A5B87EC();
      v12 = sub_20A5B8C60();
      if (os_log_type_enabled(v11, v12))
      {
        v13 = (uint8_t *)swift_slowAlloc();
        v14 = swift_slowAlloc();
        v18 = v14;
        *(_DWORD *)v13 = 136315138;
        __swift_project_boxed_opaque_existential_1(v19, v19[3]);
        swift_getDynamicType();
        v15 = sub_20A5B932C();
        sub_20A503EE0(v15, v16, &v18);
        sub_20A5B8D50();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
        _os_log_impl(&dword_20A443000, v11, v12, "ODIBindingsValue is not supporting %s type", v13, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x20BD26DB8](v14, -1, -1);
        MEMORY[0x20BD26DB8](v13, -1, -1);
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
      }

      *(_QWORD *)(a2 + 32) = 0;
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
}

uint64_t sub_20A4DA8F8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PregeneratedAssessment.init(from:)(a1, a2);
}

uint64_t sub_20A4DA90C(_QWORD *a1)
{
  return PregeneratedAssessment.encode(to:)(a1);
}

unint64_t sub_20A4DA920()
{
  unint64_t result;

  result = qword_2545FAEA0;
  if (!qword_2545FAEA0)
  {
    result = MEMORY[0x20BD26CEC](MEMORY[0x24BDCDDF8], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_2545FAEA0);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for PregeneratedAssessment(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v57 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v57 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_20A5B8630();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = a3[7];
    v15 = (_QWORD *)((char *)v4 + v13);
    v16 = (_QWORD *)((char *)a2 + v13);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    v18 = (_QWORD *)((char *)v4 + v14);
    v19 = (_QWORD *)((char *)a2 + v14);
    v60 = v19[1];
    *v18 = *v19;
    v18[1] = v60;
    v20 = a3[8];
    v21 = a3[9];
    v22 = (_QWORD *)((char *)v4 + v20);
    v23 = (_QWORD *)((char *)a2 + v20);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    v25 = (_QWORD *)((char *)v4 + v21);
    v26 = (_QWORD *)((char *)a2 + v21);
    v59 = v26[1];
    *v25 = *v26;
    v25[1] = v59;
    v27 = a3[10];
    v28 = a3[11];
    v29 = (_QWORD *)((char *)v4 + v27);
    v30 = (_QWORD *)((char *)a2 + v27);
    v31 = v30[1];
    *v29 = *v30;
    v29[1] = v31;
    v32 = (_QWORD *)((char *)v4 + v28);
    v33 = (_QWORD *)((char *)a2 + v28);
    v34 = v33[1];
    *v32 = *v33;
    v32[1] = v34;
    v35 = a3[12];
    v36 = a3[13];
    v37 = (_QWORD *)((char *)v4 + v35);
    v38 = (_QWORD *)((char *)a2 + v35);
    v39 = v38[1];
    *v37 = *v38;
    v37[1] = v39;
    *(_QWORD *)((char *)v4 + v36) = *(_QWORD *)((char *)a2 + v36);
    v40 = a3[15];
    *(_QWORD *)((char *)v4 + a3[14]) = *(_QWORD *)((char *)a2 + a3[14]);
    v41 = (_QWORD *)((char *)v4 + v40);
    v42 = (_QWORD *)((char *)a2 + v40);
    v43 = v42[1];
    *v41 = *v42;
    v41[1] = v43;
    v44 = a3[16];
    v45 = a3[17];
    v46 = (_QWORD *)((char *)v4 + v44);
    v47 = (_QWORD *)((char *)a2 + v44);
    v48 = v47[1];
    *v46 = *v47;
    v46[1] = v48;
    *((_BYTE *)v4 + v45) = *((_BYTE *)a2 + v45);
    v49 = a3[18];
    v50 = a3[19];
    v51 = (_QWORD *)((char *)v4 + v49);
    v52 = (_QWORD *)((char *)a2 + v49);
    v53 = v52[1];
    *v51 = *v52;
    v51[1] = v53;
    v54 = (_QWORD *)((char *)v4 + v50);
    v55 = (_QWORD *)((char *)a2 + v50);
    v56 = v55[1];
    *v54 = *v55;
    v54[1] = v56;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for PregeneratedAssessment(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_20A5B8630();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for PregeneratedAssessment(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v57;
  uint64_t v58;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_20A5B8630();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = a3[7];
  v14 = (_QWORD *)((char *)a1 + v12);
  v15 = (_QWORD *)((char *)a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = (_QWORD *)((char *)a1 + v13);
  v18 = (_QWORD *)((char *)a2 + v13);
  v58 = v18[1];
  *v17 = *v18;
  v17[1] = v58;
  v19 = a3[8];
  v20 = a3[9];
  v21 = (_QWORD *)((char *)a1 + v19);
  v22 = (_QWORD *)((char *)a2 + v19);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  v24 = (_QWORD *)((char *)a1 + v20);
  v25 = (_QWORD *)((char *)a2 + v20);
  v57 = v25[1];
  *v24 = *v25;
  v24[1] = v57;
  v26 = a3[10];
  v27 = a3[11];
  v28 = (_QWORD *)((char *)a1 + v26);
  v29 = (_QWORD *)((char *)a2 + v26);
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  v31 = (_QWORD *)((char *)a1 + v27);
  v32 = (_QWORD *)((char *)a2 + v27);
  v33 = v32[1];
  *v31 = *v32;
  v31[1] = v33;
  v34 = a3[12];
  v35 = a3[13];
  v36 = (_QWORD *)((char *)a1 + v34);
  v37 = (_QWORD *)((char *)a2 + v34);
  v38 = v37[1];
  *v36 = *v37;
  v36[1] = v38;
  *(_QWORD *)((char *)a1 + v35) = *(_QWORD *)((char *)a2 + v35);
  v39 = a3[15];
  *(_QWORD *)((char *)a1 + a3[14]) = *(_QWORD *)((char *)a2 + a3[14]);
  v40 = (_QWORD *)((char *)a1 + v39);
  v41 = (_QWORD *)((char *)a2 + v39);
  v42 = v41[1];
  *v40 = *v41;
  v40[1] = v42;
  v43 = a3[16];
  v44 = a3[17];
  v45 = (_QWORD *)((char *)a1 + v43);
  v46 = (_QWORD *)((char *)a2 + v43);
  v47 = v46[1];
  *v45 = *v46;
  v45[1] = v47;
  *((_BYTE *)a1 + v44) = *((_BYTE *)a2 + v44);
  v48 = a3[18];
  v49 = a3[19];
  v50 = (_QWORD *)((char *)a1 + v48);
  v51 = (_QWORD *)((char *)a2 + v48);
  v52 = v51[1];
  *v50 = *v51;
  v50[1] = v52;
  v53 = (_QWORD *)((char *)a1 + v49);
  v54 = (_QWORD *)((char *)a2 + v49);
  v55 = v54[1];
  *v53 = *v54;
  v53[1] = v55;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for PregeneratedAssessment(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_20A5B8630();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = a3[8];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  *v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = a3[9];
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  *v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = a3[10];
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)a2 + v22);
  *v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v25 = a3[11];
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (_QWORD *)((char *)a2 + v25);
  *v26 = *v27;
  v26[1] = v27[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v28 = a3[12];
  v29 = (_QWORD *)((char *)a1 + v28);
  v30 = (_QWORD *)((char *)a2 + v28);
  *v29 = *v30;
  v29[1] = v30[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[13]) = *(_QWORD *)((char *)a2 + a3[13]);
  *(_QWORD *)((char *)a1 + a3[14]) = *(_QWORD *)((char *)a2 + a3[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v31 = a3[15];
  v32 = (_QWORD *)((char *)a1 + v31);
  v33 = (_QWORD *)((char *)a2 + v31);
  *v32 = *v33;
  v32[1] = v33[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v34 = a3[16];
  v35 = (_QWORD *)((char *)a1 + v34);
  v36 = (_QWORD *)((char *)a2 + v34);
  *v35 = *v36;
  v35[1] = v36[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[17]) = *((_BYTE *)a2 + a3[17]);
  v37 = a3[18];
  v38 = (_QWORD *)((char *)a1 + v37);
  v39 = (_QWORD *)((char *)a2 + v37);
  *v38 = *v39;
  v38[1] = v39[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v40 = a3[19];
  v41 = (_QWORD *)((char *)a1 + v40);
  v42 = (_QWORD *)((char *)a2 + v40);
  *v41 = *v42;
  v41[1] = v42[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for PregeneratedAssessment(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_20A5B8630();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v10) = *(_OWORD *)((char *)a2 + v10);
  v11 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  *(_OWORD *)((char *)a1 + v11) = *(_OWORD *)((char *)a2 + v11);
  v12 = a3[11];
  *(_OWORD *)((char *)a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  *(_OWORD *)((char *)a1 + v12) = *(_OWORD *)((char *)a2 + v12);
  v13 = a3[13];
  *(_OWORD *)((char *)a1 + a3[12]) = *(_OWORD *)((char *)a2 + a3[12]);
  *(_QWORD *)((char *)a1 + v13) = *(_QWORD *)((char *)a2 + v13);
  v14 = a3[15];
  *(_QWORD *)((char *)a1 + a3[14]) = *(_QWORD *)((char *)a2 + a3[14]);
  *(_OWORD *)((char *)a1 + v14) = *(_OWORD *)((char *)a2 + v14);
  v15 = a3[17];
  *(_OWORD *)((char *)a1 + a3[16]) = *(_OWORD *)((char *)a2 + a3[16]);
  *((_BYTE *)a1 + v15) = *((_BYTE *)a2 + v15);
  v16 = a3[19];
  *(_OWORD *)((char *)a1 + a3[18]) = *(_OWORD *)((char *)a2 + a3[18]);
  *(_OWORD *)((char *)a1 + v16) = *(_OWORD *)((char *)a2 + v16);
  return a1;
}

_QWORD *assignWithTake for PregeneratedAssessment(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_20A5B8630();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  v16 = a3[7];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  v20 = *v18;
  v19 = v18[1];
  *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  v21 = a3[8];
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (_QWORD *)((char *)a2 + v21);
  v25 = *v23;
  v24 = v23[1];
  *v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  v26 = a3[9];
  v27 = (_QWORD *)((char *)a1 + v26);
  v28 = (_QWORD *)((char *)a2 + v26);
  v30 = *v28;
  v29 = v28[1];
  *v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  v31 = a3[10];
  v32 = (_QWORD *)((char *)a1 + v31);
  v33 = (_QWORD *)((char *)a2 + v31);
  v35 = *v33;
  v34 = v33[1];
  *v32 = v35;
  v32[1] = v34;
  swift_bridgeObjectRelease();
  v36 = a3[11];
  v37 = (_QWORD *)((char *)a1 + v36);
  v38 = (_QWORD *)((char *)a2 + v36);
  v40 = *v38;
  v39 = v38[1];
  *v37 = v40;
  v37[1] = v39;
  swift_bridgeObjectRelease();
  v41 = a3[12];
  v42 = (_QWORD *)((char *)a1 + v41);
  v43 = (_QWORD *)((char *)a2 + v41);
  v45 = *v43;
  v44 = v43[1];
  *v42 = v45;
  v42[1] = v44;
  swift_bridgeObjectRelease();
  v46 = a3[14];
  *(_QWORD *)((char *)a1 + a3[13]) = *(_QWORD *)((char *)a2 + a3[13]);
  *(_QWORD *)((char *)a1 + v46) = *(_QWORD *)((char *)a2 + v46);
  swift_bridgeObjectRelease();
  v47 = a3[15];
  v48 = (_QWORD *)((char *)a1 + v47);
  v49 = (_QWORD *)((char *)a2 + v47);
  v51 = *v49;
  v50 = v49[1];
  *v48 = v51;
  v48[1] = v50;
  swift_bridgeObjectRelease();
  v52 = a3[16];
  v53 = (_QWORD *)((char *)a1 + v52);
  v54 = (_QWORD *)((char *)a2 + v52);
  v56 = *v54;
  v55 = v54[1];
  *v53 = v56;
  v53[1] = v55;
  swift_bridgeObjectRelease();
  v57 = a3[18];
  *((_BYTE *)a1 + a3[17]) = *((_BYTE *)a2 + a3[17]);
  v58 = (_QWORD *)((char *)a1 + v57);
  v59 = (_QWORD *)((char *)a2 + v57);
  v61 = *v59;
  v60 = v59[1];
  *v58 = v61;
  v58[1] = v60;
  swift_bridgeObjectRelease();
  v62 = a3[19];
  v63 = (_QWORD *)((char *)a1 + v62);
  v64 = (_QWORD *)((char *)a2 + v62);
  v66 = *v64;
  v65 = v64[1];
  *v63 = v66;
  v63[1] = v65;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PregeneratedAssessment()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20A4DB3B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_20A5B8630();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for PregeneratedAssessment()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_20A4DB440(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_20A5B8630();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_20A4DB4B4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_20A5B8630();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PregeneratedAssessment.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF1)
    goto LABEL_17;
  if (a2 + 15 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 15) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 15;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 15;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 15;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x10;
  v8 = v6 - 16;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PregeneratedAssessment.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 15 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 15) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF1)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF0)
    return ((uint64_t (*)(void))((char *)&loc_20A4DB648 + 4 * byte_20A5C2855[v4]))();
  *a1 = a2 + 15;
  return ((uint64_t (*)(void))((char *)sub_20A4DB67C + 4 * byte_20A5C2850[v4]))();
}

uint64_t sub_20A4DB67C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A4DB684(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A4DB68CLL);
  return result;
}

uint64_t sub_20A4DB698(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A4DB6A0);
  *(_BYTE *)result = a2 + 15;
  return result;
}

uint64_t sub_20A4DB6A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A4DB6AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PregeneratedAssessment.CodingKeys()
{
  return &type metadata for PregeneratedAssessment.CodingKeys;
}

unint64_t sub_20A4DB6CC()
{
  unint64_t result;

  result = qword_2545FAEB8;
  if (!qword_2545FAEB8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C2A84, &type metadata for PregeneratedAssessment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FAEB8);
  }
  return result;
}

unint64_t sub_20A4DB714()
{
  unint64_t result;

  result = qword_2545FAEC0;
  if (!qword_2545FAEC0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C29BC, &type metadata for PregeneratedAssessment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FAEC0);
  }
  return result;
}

unint64_t sub_20A4DB75C()
{
  unint64_t result;

  result = qword_2545FAEC8;
  if (!qword_2545FAEC8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C29E4, &type metadata for PregeneratedAssessment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FAEC8);
  }
  return result;
}

uint64_t sub_20A4DB7A0()
{
  unint64_t v0;

  v0 = sub_20A5B9008();
  swift_bridgeObjectRelease();
  if (v0 >= 0x10)
    return 16;
  else
    return v0;
}

uint64_t sub_20A4DB7E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FAED8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A4DB830(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA208);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_20A4DB870()
{
  unint64_t result;

  result = qword_2545FA2C0;
  if (!qword_2545FA2C0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2545FA2C0);
  }
  return result;
}

uint64_t sub_20A4DB8AC(uint64_t a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA210);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA0B8);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 48))(a1, 1) == 1)
  {
    sub_20A44CE2C(a1, &qword_2545FA210);
    sub_20A4DE490(a2, (uint64_t)v9);
    sub_20A47CDDC((uint64_t)a2);
    return sub_20A44CE2C((uint64_t)v9, &qword_2545FA210);
  }
  else
  {
    sub_20A459C88(a1, (uint64_t)v13, &qword_2545FA0B8);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *v3;
    *v3 = 0x8000000000000000;
    sub_20A476BC0((uint64_t)v13, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v18;
    swift_bridgeObjectRelease();
    return sub_20A47CDDC((uint64_t)a2);
  }
}

uint64_t sub_20A4DBA08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t v20;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA938);
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ODIKnownBinding();
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v16 + 48))(a1, 1) == 1)
  {
    sub_20A44CE2C(a1, &qword_2545FA938);
    sub_20A4DE5F8(a2, a3, (uint64_t)v11);
    swift_bridgeObjectRelease();
    return sub_20A44CE2C((uint64_t)v11, &qword_2545FA938);
  }
  else
  {
    sub_20A479808(a1, (uint64_t)v15);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v20 = *v4;
    *v4 = 0x8000000000000000;
    sub_20A476E58((uint64_t)v15, a2, a3, isUniquelyReferenced_nonNull_native);
    *v4 = v20;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_20A4DBB68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v14;
  _BYTE v15[24];
  uint64_t v16;
  uint64_t v17;

  if (*(_QWORD *)(a1 + 24))
  {
    sub_20A44CFD8((__int128 *)a1, (uint64_t)v15);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v14 = *v3;
    *v3 = 0x8000000000000000;
    v7 = v16;
    v8 = v17;
    v9 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v15, v16);
    MEMORY[0x24BDAC7A8](v9, v9);
    v11 = &v15[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(_BYTE *))(v12 + 16))(v11);
    sub_20A57ED44((uint64_t)v11, a2, a3, isUniquelyReferenced_nonNull_native, &v14, v7, v8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    *v3 = v14;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_20A44CE2C(a1, &qword_2545FA208);
    sub_20A4DE720(a2, a3, (uint64_t)v15);
    swift_bridgeObjectRelease();
    return sub_20A44CE2C((uint64_t)v15, &qword_2545FA208);
  }
}

unint64_t sub_20A4DBCA8()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  char *v4;
  unint64_t v5;
  unint64_t result;
  int v7;
  unint64_t v8;
  unint64_t v9;

  swift_bridgeObjectRetain();
  v0 = sub_20A5B89A8();
  if (!v1)
  {
    v4 = (char *)MEMORY[0x24BEE4AF8];
LABEL_20:
    swift_bridgeObjectRelease();
    return (unint64_t)v4;
  }
  v2 = v0;
  v3 = v1;
  v4 = (char *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    if (v2 == 2573 && v3 == 0xE200000000000000 || (sub_20A5B91AC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      LOBYTE(v7) = 10;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        goto LABEL_14;
      goto LABEL_18;
    }
    if ((sub_20A5B88D0() & 1) != 0)
    {
      result = sub_20A4DE8AC(v2, v3);
      if ((result & 0x100000000) != 0)
        goto LABEL_22;
      if ((result & 0xFFFFFF80) == 0)
        break;
    }
    swift_bridgeObjectRelease();
LABEL_4:
    v2 = sub_20A5B89A8();
    v3 = v5;
    if (!v5)
      goto LABEL_20;
  }
  result = sub_20A4DE8AC(v2, v3);
  if ((result & 0x100000000) != 0)
    goto LABEL_23;
  v7 = result;
  result = swift_bridgeObjectRelease();
  if ((v7 & 0xFFFFFF00) == 0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
    {
LABEL_14:
      v9 = *((_QWORD *)v4 + 2);
      v8 = *((_QWORD *)v4 + 3);
      if (v9 >= v8 >> 1)
        v4 = sub_20A46FB68((char *)(v8 > 1), v9 + 1, 1, v4);
      *((_QWORD *)v4 + 2) = v9 + 1;
      v4[v9 + 32] = v7;
      goto LABEL_4;
    }
LABEL_18:
    v4 = sub_20A46FB68(0, *((_QWORD *)v4 + 2) + 1, 1, v4);
    goto LABEL_14;
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

CoreODIEssentials::BindingsKeys_optional __swiftcall BindingsKeys.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  CoreODIEssentials::BindingsKeys_optional result;
  char v5;
  char v6;

  v2 = v1;
  v3 = sub_20A5B91F4();
  result.value = swift_bridgeObjectRelease();
  v5 = 0;
  v6 = 52;
  switch(v3)
  {
    case 0:
      goto LABEL_54;
    case 1:
      v5 = 1;
      goto LABEL_54;
    case 2:
      v5 = 2;
      goto LABEL_54;
    case 3:
      v5 = 3;
      goto LABEL_54;
    case 4:
      v5 = 4;
      goto LABEL_54;
    case 5:
      v5 = 5;
      goto LABEL_54;
    case 6:
      v5 = 6;
      goto LABEL_54;
    case 7:
      v5 = 7;
      goto LABEL_54;
    case 8:
      v5 = 8;
      goto LABEL_54;
    case 9:
      v5 = 9;
      goto LABEL_54;
    case 10:
      v5 = 10;
      goto LABEL_54;
    case 11:
      v5 = 11;
      goto LABEL_54;
    case 12:
      v5 = 12;
      goto LABEL_54;
    case 13:
      v5 = 13;
      goto LABEL_54;
    case 14:
      v5 = 14;
      goto LABEL_54;
    case 15:
      v5 = 15;
      goto LABEL_54;
    case 16:
      v5 = 16;
      goto LABEL_54;
    case 17:
      v5 = 17;
      goto LABEL_54;
    case 18:
      v5 = 18;
      goto LABEL_54;
    case 19:
      v5 = 19;
      goto LABEL_54;
    case 20:
      v5 = 20;
      goto LABEL_54;
    case 21:
      v5 = 21;
      goto LABEL_54;
    case 22:
      v5 = 22;
      goto LABEL_54;
    case 23:
      v5 = 23;
      goto LABEL_54;
    case 24:
      v5 = 24;
      goto LABEL_54;
    case 25:
      v5 = 25;
      goto LABEL_54;
    case 26:
      v5 = 26;
      goto LABEL_54;
    case 27:
      v5 = 27;
      goto LABEL_54;
    case 28:
      v5 = 28;
      goto LABEL_54;
    case 29:
      v5 = 29;
      goto LABEL_54;
    case 30:
      v5 = 30;
      goto LABEL_54;
    case 31:
      v5 = 31;
      goto LABEL_54;
    case 32:
      v5 = 32;
      goto LABEL_54;
    case 33:
      v5 = 33;
      goto LABEL_54;
    case 34:
      v5 = 34;
      goto LABEL_54;
    case 35:
      v5 = 35;
      goto LABEL_54;
    case 36:
      v5 = 36;
      goto LABEL_54;
    case 37:
      v5 = 37;
      goto LABEL_54;
    case 38:
      v5 = 38;
      goto LABEL_54;
    case 39:
      v5 = 39;
      goto LABEL_54;
    case 40:
      v5 = 40;
      goto LABEL_54;
    case 41:
      v5 = 41;
      goto LABEL_54;
    case 42:
      v5 = 42;
      goto LABEL_54;
    case 43:
      v5 = 43;
      goto LABEL_54;
    case 44:
      v5 = 44;
      goto LABEL_54;
    case 45:
      v5 = 45;
      goto LABEL_54;
    case 46:
      v5 = 46;
      goto LABEL_54;
    case 47:
      v5 = 47;
      goto LABEL_54;
    case 48:
      v5 = 48;
      goto LABEL_54;
    case 49:
      v5 = 49;
      goto LABEL_54;
    case 50:
      v5 = 50;
      goto LABEL_54;
    case 51:
      v5 = 51;
LABEL_54:
      v6 = v5;
      break;
    case 52:
      break;
    case 53:
      v6 = 53;
      break;
    case 54:
      v6 = 54;
      break;
    case 55:
      v6 = 55;
      break;
    case 56:
      v6 = 56;
      break;
    case 57:
      v6 = 57;
      break;
    case 58:
      v6 = 58;
      break;
    case 59:
      v6 = 59;
      break;
    case 60:
      v6 = 60;
      break;
    case 61:
      v6 = 61;
      break;
    case 62:
      v6 = 62;
      break;
    case 63:
      v6 = 63;
      break;
    case 64:
      v6 = 64;
      break;
    case 65:
      v6 = 65;
      break;
    case 66:
      v6 = 66;
      break;
    case 67:
      v6 = 67;
      break;
    case 68:
      v6 = 68;
      break;
    case 69:
      v6 = 69;
      break;
    default:
      v6 = 70;
      break;
  }
  *v2 = v6;
  return result;
}

uint64_t BindingsKeys.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_20A4DC134 + 4 * word_20A5C2B46[*v0]))(0x6D614E7473726966, 0xE900000000000065);
}

uint64_t sub_20A4DC134()
{
  return 0x656D614E7473616CLL;
}

uint64_t sub_20A4DC14C()
{
  return 0x6C69616D65;
}

uint64_t sub_20A4DC160()
{
  return 0x6D754E656E6F6870;
}

uint64_t sub_20A4DC180()
{
  return 0x746565727473;
}

uint64_t sub_20A4DC194()
{
  return 0x31746565727473;
}

uint64_t sub_20A4DC1AC()
{
  return 0x32746565727473;
}

uint64_t sub_20A4DC1C4()
{
  return 2037672291;
}

uint64_t sub_20A4DC1D4()
{
  return 0x6574617473;
}

uint64_t sub_20A4DC1E8()
{
  return 0x6F436C6174736F70;
}

uint64_t sub_20A4DC204()
{
  return 0x7972746E756F63;
}

uint64_t sub_20A4DC21C()
{
  return 0x437972746E756F63;
}

uint64_t sub_20A4DC23C()
{
  return 0x746E756F436F7369;
}

uint64_t sub_20A4DC260()
{
  return 0x4C73736572646461;
}

uint64_t sub_20A4DC280()
{
  return 0x4C73736572646461;
}

uint64_t sub_20A4DC2A0()
{
  return 0x6E6F685072656570;
}

uint64_t sub_20A4DC2C4()
{
  return 0x7372694672656570;
}

uint64_t sub_20A4DC2E8()
{
  return 0x7473614C72656570;
}

unint64_t sub_20A4DC308()
{
  return 0xD000000000000012;
}

uint64_t sub_20A4DC7F0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_20A4EAD5C(*a1, *a2);
}

uint64_t sub_20A4DC7FC()
{
  sub_20A5B929C();
  BindingsKeys.rawValue.getter();
  sub_20A5B8978();
  swift_bridgeObjectRelease();
  return sub_20A5B92CC();
}

uint64_t sub_20A4DC860()
{
  BindingsKeys.rawValue.getter();
  sub_20A5B8978();
  return swift_bridgeObjectRelease();
}

uint64_t sub_20A4DC8B0()
{
  sub_20A5B929C();
  BindingsKeys.rawValue.getter();
  sub_20A5B8978();
  swift_bridgeObjectRelease();
  return sub_20A5B92CC();
}

CoreODIEssentials::BindingsKeys_optional sub_20A4DC910(Swift::String *a1)
{
  return BindingsKeys.init(rawValue:)(*a1);
}

uint64_t sub_20A4DC91C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = BindingsKeys.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

CoreODIEssentials::BindingsHelpers __swiftcall BindingsHelpers.init()()
{
  _QWORD *v0;
  CoreODIEssentials::BindingsHelpers result;

  *v0 = 45;
  v0[1] = 0xE100000000000000;
  return result;
}

id static BindingsHelpers.isDiagnosticsAllowed.getter()
{
  id result;
  void *v1;
  unsigned int v2;

  result = objc_msgSend((id)objc_opt_self(), sel_sharedConnection);
  if (result)
  {
    v1 = result;
    v2 = objc_msgSend(result, sel_effectiveBoolValueForSetting_, *MEMORY[0x24BE638E0]);

    return (id)(v2 == 1);
  }
  return result;
}

uint64_t static BindingsHelpers.deviceCountryCode.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v0 = sub_20A5B8708();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB49A0);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5B86D8();
  sub_20A5B86CC();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  v9 = sub_20A5B86C0();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_20A44CE2C((uint64_t)v8, (uint64_t *)&unk_253EB49A0);
  }
  else
  {
    sub_20A5B8684();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
  }
  v11 = _s17CoreODIEssentials15BindingsHelpersV25convertCountryCodeToASCII3strSiSS_tFZ_0();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t static BindingsHelpers.asciiDeviceLanguage.getter()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v0 = _s17CoreODIEssentials15BindingsHelpersV14deviceLanguageSSSgvgZ_0();
  if (v1)
  {
    v2 = v1;
  }
  else
  {
    v0 = 0;
    v2 = 0xE000000000000000;
  }
  v3 = _s17CoreODIEssentials15BindingsHelpersV26convertLanguageCodeToASCII3strSiSS_tFZ_0(v0, v2);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t BindingsHelpers.getNameComponents(firstName:lastName:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  void *v18;
  id v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253EB43E0);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_20A5B8408();
  v9 = *(_QWORD *)(v8 - 8);
  v11 = MEMORY[0x24BDAC7A8](v8, v10);
  v13 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11, v14);
  v16 = (char *)&v58 - v15;
  v60 = a2;
  v61 = MEMORY[0x24BEE4B00];
  v59 = a1;
  swift_bridgeObjectRetain();
  sub_20A5B899C();
  swift_bridgeObjectRetain();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1738]), sel_init);
  v18 = (void *)sub_20A5B88F4();
  swift_bridgeObjectRelease();
  v19 = objc_msgSend(v17, sel_personNameComponentsFromString_, v18);

  if (!v19)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    goto LABEL_6;
  }
  sub_20A5B83F0();

  v20 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v20(v7, v13, v8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
LABEL_6:
    sub_20A44CE2C((uint64_t)v7, &qword_253EB43E0);
    return v61;
  }
  v20(v16, v7, v8);
  v21 = sub_20A5B83D8();
  if (v22)
  {
    v23 = v21;
    v24 = v22;
    v25 = v61;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v59 = v25;
    sub_20A4768A4(v23, v24, 0xD000000000000010, 0x800000020A5DA620, isUniquelyReferenced_nonNull_native);
    v61 = v59;
  }
  else
  {
    sub_20A4DE3AC(0xD000000000000010, 0x800000020A5DA620);
  }
  swift_bridgeObjectRelease();
  v27 = sub_20A5B83C0();
  if (v28)
  {
    v29 = v27;
    v30 = v28;
    v31 = v61;
    v32 = swift_isUniquelyReferenced_nonNull_native();
    v59 = v31;
    sub_20A4768A4(v29, v30, 0xD000000000000010, 0x800000020A5DA5D0, v32);
    v61 = v59;
  }
  else
  {
    sub_20A4DE3AC(0xD000000000000010, 0x800000020A5DA5D0);
  }
  swift_bridgeObjectRelease();
  v33 = sub_20A5B83B4();
  if (v34)
  {
    v35 = v33;
    v36 = v34;
    v37 = v61;
    v38 = swift_isUniquelyReferenced_nonNull_native();
    v59 = v37;
    sub_20A4768A4(v35, v36, 0x6947646573726170, 0xEF656D614E6E6576, v38);
    v61 = v59;
  }
  else
  {
    sub_20A4DE3AC(0x6947646573726170, 0xEF656D614E6E6576);
  }
  swift_bridgeObjectRelease();
  v39 = sub_20A5B83CC();
  if (v40)
  {
    v41 = v39;
    v42 = v40;
    v43 = v61;
    v44 = swift_isUniquelyReferenced_nonNull_native();
    v59 = v43;
    sub_20A4768A4(v41, v42, 0xD000000000000010, 0x800000020A5DA600, v44);
    v61 = v59;
  }
  else
  {
    sub_20A4DE3AC(0xD000000000000010, 0x800000020A5DA600);
  }
  swift_bridgeObjectRelease();
  v45 = sub_20A5B83E4();
  if (v46)
  {
    v47 = v45;
    v48 = v46;
    v49 = v61;
    v50 = swift_isUniquelyReferenced_nonNull_native();
    v59 = v49;
    sub_20A4768A4(v47, v48, 0xD000000000000010, 0x800000020A5DA640, v50);
    v61 = v59;
  }
  else
  {
    sub_20A4DE3AC(0xD000000000000010, 0x800000020A5DA640);
  }
  swift_bridgeObjectRelease();
  v51 = sub_20A5B83FC();
  if (v52)
  {
    v53 = v51;
    v54 = v52;
    v55 = v61;
    v56 = swift_isUniquelyReferenced_nonNull_native();
    v59 = v55;
    sub_20A4768A4(v53, v54, 0x694E646573726170, 0xEE00656D614E6B63, v56);
    v61 = v59;
  }
  else
  {
    sub_20A4DE3AC(0x694E646573726170, 0xEE00656D614E6B63);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v16, v8);
  return v61;
}

unint64_t sub_20A4DD0D0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  unint64_t v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;

  v4 = *v1;
  v3 = v1[1];
  *(_QWORD *)&v83 = *v1;
  *((_QWORD *)&v83 + 1) = v3;
  LOBYTE(v79) = 6;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD000000000000023, 0x800000020A5E1FC0, &v79);
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_9;
  v5 = sub_20A47094C(0x6D614E7473726966, 0xE900000000000065);
  if ((v6 & 1) == 0)
    goto LABEL_9;
  sub_20A47BD60(*(_QWORD *)(a1 + 56) + 40 * v5, (uint64_t)&v83);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB47D0);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_9;
  v7 = v80;
  if (!*(_QWORD *)(a1 + 16)
    || (v8 = v79, v9 = sub_20A47094C(0x656D614E7473616CLL, 0xE800000000000000), (v10 & 1) == 0)
    || (sub_20A47BD60(*(_QWORD *)(a1 + 56) + 40 * v9, (uint64_t)&v83), (swift_dynamicCast() & 1) == 0))
  {
    swift_bridgeObjectRelease();
LABEL_9:
    *(_QWORD *)&v83 = v4;
    *((_QWORD *)&v83 + 1) = v3;
    LOBYTE(v79) = 6;
    swift_bridgeObjectRetain();
    CoreODILogger.info(_:category:)(0xD000000000000028, 0x800000020A5E1FF0, &v79);
    swift_bridgeObjectRelease();
    v12 = MEMORY[0x24BEE4B00];
    goto LABEL_10;
  }
  swift_bridgeObjectRelease();
  v11 = BindingsHelpers.getNameComponents(firstName:lastName:)(v8, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = sub_20A4D596C(v11);
  swift_bridgeObjectRelease();
LABEL_10:
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_35;
  v13 = sub_20A47094C(0xD000000000000012, 0x800000020A5DACD0);
  if ((v14 & 1) == 0)
    goto LABEL_35;
  sub_20A47BD60(*(_QWORD *)(a1 + 56) + 40 * v13, (uint64_t)&v83);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB47D0);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_35;
  v15 = v80;
  if (!*(_QWORD *)(a1 + 16)
    || (v16 = v79, v17 = sub_20A47094C(0xD000000000000011, 0x800000020A5DACF0), (v18 & 1) == 0)
    || (sub_20A47BD60(*(_QWORD *)(a1 + 56) + 40 * v17, (uint64_t)&v83),
        v19 = MEMORY[0x24BEE0D00],
        (swift_dynamicCast() & 1) == 0))
  {
    swift_bridgeObjectRelease();
LABEL_35:
    *(_QWORD *)&v83 = v4;
    *((_QWORD *)&v83 + 1) = v3;
    LOBYTE(v79) = 6;
    swift_bridgeObjectRetain();
    CoreODILogger.info(_:category:)(0xD00000000000002CLL, 0x800000020A5E2020, &v79);
    goto LABEL_36;
  }
  v20 = BindingsHelpers.getNameComponents(firstName:lastName:)(v16, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v20 + 16))
  {
    v21 = sub_20A47094C(0xD000000000000010, 0x800000020A5DA620);
    if ((v22 & 1) != 0)
    {
      v23 = (uint64_t *)(*(_QWORD *)(v20 + 56) + 16 * v21);
      v24 = *v23;
      v25 = v23[1];
      v84 = v19;
      v85 = MEMORY[0x24BEE0D10];
      *(_QWORD *)&v83 = v24;
      *((_QWORD *)&v83 + 1) = v25;
      sub_20A44CFD8(&v83, (uint64_t)&v79);
      swift_bridgeObjectRetain();
      LOBYTE(v25) = swift_isUniquelyReferenced_nonNull_native();
      v82 = v12;
      v26 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v79, v81);
      MEMORY[0x24BDAC7A8](v26, v26);
      v28 = (uint64_t *)((char *)&v78 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v29 + 16))(v28);
      sub_20A4DF044(*v28, v28[1], 0xD000000000000018, 0x800000020A5DAE60, v25, &v82);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v79);
      v12 = v82;
      swift_bridgeObjectRelease();
    }
    if (*(_QWORD *)(v20 + 16))
    {
      v30 = sub_20A47094C(0xD000000000000010, 0x800000020A5DA5D0);
      if ((v31 & 1) != 0)
      {
        v32 = (uint64_t *)(*(_QWORD *)(v20 + 56) + 16 * v30);
        v33 = *v32;
        v34 = v32[1];
        v84 = v19;
        v85 = MEMORY[0x24BEE0D10];
        *(_QWORD *)&v83 = v33;
        *((_QWORD *)&v83 + 1) = v34;
        sub_20A44CFD8(&v83, (uint64_t)&v79);
        swift_bridgeObjectRetain();
        LOBYTE(v34) = swift_isUniquelyReferenced_nonNull_native();
        v82 = v12;
        v35 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v79, v81);
        MEMORY[0x24BDAC7A8](v35, v35);
        v37 = (uint64_t *)((char *)&v78 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
        (*(void (**)(uint64_t *))(v38 + 16))(v37);
        sub_20A4DF044(*v37, v37[1], 0xD000000000000018, 0x800000020A5DAE80, v34, &v82);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v79);
        v12 = v82;
        swift_bridgeObjectRelease();
      }
      if (*(_QWORD *)(v20 + 16))
      {
        v39 = sub_20A47094C(0x6947646573726170, 0xEF656D614E6E6576);
        if ((v40 & 1) != 0)
        {
          v41 = (uint64_t *)(*(_QWORD *)(v20 + 56) + 16 * v39);
          v42 = *v41;
          v43 = v41[1];
          v84 = v19;
          v85 = MEMORY[0x24BEE0D10];
          *(_QWORD *)&v83 = v42;
          *((_QWORD *)&v83 + 1) = v43;
          sub_20A44CFD8(&v83, (uint64_t)&v79);
          swift_bridgeObjectRetain();
          LOBYTE(v43) = swift_isUniquelyReferenced_nonNull_native();
          v82 = v12;
          v44 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v79, v81);
          MEMORY[0x24BDAC7A8](v44, v44);
          v46 = (uint64_t *)((char *)&v78 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0));
          (*(void (**)(uint64_t *))(v47 + 16))(v46);
          sub_20A4DF044(*v46, v46[1], 0xD000000000000017, 0x800000020A5DAEA0, v43, &v82);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v79);
          v12 = v82;
          swift_bridgeObjectRelease();
        }
        if (*(_QWORD *)(v20 + 16))
        {
          v48 = sub_20A47094C(0xD000000000000010, 0x800000020A5DA600);
          if ((v49 & 1) != 0)
          {
            v50 = (uint64_t *)(*(_QWORD *)(v20 + 56) + 16 * v48);
            v51 = *v50;
            v52 = v50[1];
            v84 = v19;
            v85 = MEMORY[0x24BEE0D10];
            *(_QWORD *)&v83 = v51;
            *((_QWORD *)&v83 + 1) = v52;
            sub_20A44CFD8(&v83, (uint64_t)&v79);
            swift_bridgeObjectRetain();
            LOBYTE(v52) = swift_isUniquelyReferenced_nonNull_native();
            v82 = v12;
            v53 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v79, v81);
            MEMORY[0x24BDAC7A8](v53, v53);
            v55 = (uint64_t *)((char *)&v78 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0));
            (*(void (**)(uint64_t *))(v56 + 16))(v55);
            sub_20A4DF044(*v55, v55[1], 0xD000000000000018, 0x800000020A5DAEC0, v52, &v82);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v79);
            v12 = v82;
            swift_bridgeObjectRelease();
          }
          if (*(_QWORD *)(v20 + 16))
          {
            v57 = sub_20A47094C(0xD000000000000010, 0x800000020A5DA640);
            if ((v58 & 1) != 0)
            {
              v59 = (uint64_t *)(*(_QWORD *)(v20 + 56) + 16 * v57);
              v60 = *v59;
              v61 = v59[1];
              v84 = v19;
              v85 = MEMORY[0x24BEE0D10];
              *(_QWORD *)&v83 = v60;
              *((_QWORD *)&v83 + 1) = v61;
              sub_20A44CFD8(&v83, (uint64_t)&v79);
              swift_bridgeObjectRetain();
              LOBYTE(v61) = swift_isUniquelyReferenced_nonNull_native();
              v82 = v12;
              v62 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v79, v81);
              MEMORY[0x24BDAC7A8](v62, v62);
              v64 = (uint64_t *)((char *)&v78 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0));
              (*(void (**)(uint64_t *))(v65 + 16))(v64);
              sub_20A4DF044(*v64, v64[1], 0xD000000000000018, 0x800000020A5DAEE0, v61, &v82);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v79);
              v12 = v82;
              swift_bridgeObjectRelease();
            }
            if (*(_QWORD *)(v20 + 16))
            {
              v66 = sub_20A47094C(0x694E646573726170, 0xEE00656D614E6B63);
              if ((v67 & 1) != 0)
              {
                v68 = (uint64_t *)(*(_QWORD *)(v20 + 56) + 16 * v66);
                v70 = *v68;
                v69 = v68[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v84 = v19;
                v85 = MEMORY[0x24BEE0D10];
                *(_QWORD *)&v83 = v70;
                *((_QWORD *)&v83 + 1) = v69;
                sub_20A44CFD8(&v83, (uint64_t)&v79);
                isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                v82 = v12;
                v72 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v79, v81);
                MEMORY[0x24BDAC7A8](v72, v72);
                v74 = (uint64_t *)((char *)&v78 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0));
                (*(void (**)(uint64_t *))(v75 + 16))(v74);
                sub_20A4DF044(*v74, v74[1], 0xD000000000000016, 0x800000020A5DAF00, isUniquelyReferenced_nonNull_native, &v82);
                __swift_destroy_boxed_opaque_existential_1((uint64_t)&v79);
                v12 = v82;
              }
            }
          }
        }
      }
    }
  }
LABEL_36:
  swift_bridgeObjectRelease();
  *(_QWORD *)&v83 = 0x657261685369646FLL;
  *((_QWORD *)&v83 + 1) = 0xEF726567676F4C64;
  v79 = 0;
  v80 = 0xE000000000000000;
  sub_20A5B8E94();
  swift_bridgeObjectRelease();
  v79 = 0x2064657373657547;
  v80 = 0xE800000000000000;
  v82 = *(_QWORD *)(v12 + 16);
  sub_20A5B9170();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  v76 = v79;
  LOBYTE(v79) = 5;
  CoreODILogger.debug(_:category:)(v76, v80, &v79);
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t BindingsHelpers.getStaticBindings(bindings:excludeAppleID:)(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v3 + 176) = a2;
  *(_QWORD *)(v3 + 48) = a1;
  v4 = sub_20A5B86F0();
  *(_QWORD *)(v3 + 56) = v4;
  *(_QWORD *)(v3 + 64) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v3 + 72) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB4998);
  *(_QWORD *)(v3 + 80) = swift_task_alloc();
  v5 = sub_20A5B8708();
  *(_QWORD *)(v3 + 88) = v5;
  *(_QWORD *)(v3 + 96) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v3 + 104) = swift_task_alloc();
  *(_QWORD *)(v3 + 112) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB49A0);
  v6 = swift_task_alloc();
  v7 = *v2;
  v8 = v2[1];
  *(_QWORD *)(v3 + 120) = v6;
  *(_QWORD *)(v3 + 128) = v7;
  *(_QWORD *)(v3 + 136) = v8;
  return swift_task_switch();
}

uint64_t sub_20A4DDBB8()
{
  uint64_t v0;
  id v1;
  void *v2;
  unsigned int v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t *v31;
  unint64_t v32;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v34;
  void (*v36)(uint64_t, uint64_t);
  uint64_t (__cdecl *v37)();
  __int128 v38;
  __int128 v39;
  uint64_t v40;

  v1 = objc_msgSend((id)objc_opt_self(), sel_sharedConnection);
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, sel_effectiveBoolValueForSetting_, *MEMORY[0x24BE638E0]);

    v4 = v3 == 1;
  }
  else
  {
    v4 = 0;
  }
  v6 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 120);
  v7 = *(_QWORD *)(v0 + 88);
  v8 = *(_QWORD *)(v0 + 96);
  v9 = MEMORY[0x24BEE1328];
  v10 = MEMORY[0x24BEE1338];
  *((_QWORD *)&v39 + 1) = MEMORY[0x24BEE1328];
  v40 = MEMORY[0x24BEE1338];
  LOBYTE(v38) = v4;
  sub_20A4DBB68((uint64_t)&v38, 0xD000000000000014, 0x800000020A5DA730);
  v11 = MKBGetDeviceLockState();
  *((_QWORD *)&v39 + 1) = v9;
  v40 = v10;
  LOBYTE(v38) = (v11 - 1) < 2;
  sub_20A4DBB68((uint64_t)&v38, 0x6563697665447369, 0xEE0064656B636F4CLL);
  sub_20A5B86D8();
  sub_20A5B86CC();
  v36 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v36(v6, v7);
  v12 = sub_20A5B86C0();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v5, 1, v12);
  v15 = *(_QWORD *)(v0 + 120);
  if (v14 == 1)
  {
    sub_20A44CE2C(*(_QWORD *)(v0 + 120), (uint64_t *)&unk_253EB49A0);
  }
  else
  {
    sub_20A5B8684();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v15, v12);
  }
  v16 = *(_QWORD *)(v0 + 104);
  v17 = *(_QWORD *)(v0 + 80);
  v18 = *(_QWORD *)(v0 + 88);
  v20 = *(_QWORD *)(v0 + 64);
  v19 = *(_QWORD *)(v0 + 72);
  v21 = *(_QWORD *)(v0 + 56);
  v22 = _s17CoreODIEssentials15BindingsHelpersV25convertCountryCodeToASCII3strSiSS_tFZ_0();
  swift_bridgeObjectRelease();
  *((_QWORD *)&v39 + 1) = MEMORY[0x24BEE1768];
  v40 = MEMORY[0x24BEE1778];
  *(_QWORD *)&v38 = v22;
  sub_20A4DBB68((uint64_t)&v38, 0xD000000000000011, 0x800000020A5DA750);
  sub_20A5B86D8();
  sub_20A5B86FC();
  v36(v16, v18);
  sub_20A5B86E4();
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
  v23 = sub_20A5B8690();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v17, 1, v23);
  v26 = *(_QWORD *)(v0 + 80);
  if (v25 == 1)
  {
    sub_20A44CE2C(*(_QWORD *)(v0 + 80), &qword_253EB4998);
    v38 = 0u;
    v39 = 0u;
    v40 = 0;
  }
  else
  {
    v27 = sub_20A5B8684();
    *((_QWORD *)&v39 + 1) = MEMORY[0x24BEE0D00];
    v40 = MEMORY[0x24BEE0D10];
    *(_QWORD *)&v38 = v27;
    *((_QWORD *)&v38 + 1) = v28;
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v26, v23);
  }
  v29 = *(_BYTE *)(v0 + 176);
  sub_20A4DBB68((uint64_t)&v38, 0x614C656369766564, 0xEE0065676175676ELL);
  if ((v29 & 1) != 0)
  {
    v30 = *(_QWORD *)(v0 + 136);
    v31 = *(uint64_t **)(v0 + 48);
    *(_QWORD *)&v38 = *(_QWORD *)(v0 + 128);
    *((_QWORD *)&v38 + 1) = v30;
    v32 = sub_20A4DD0D0(*v31);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v38 = *v31;
    *v31 = 0x8000000000000000;
    sub_20A4DEBE0(v32, (uint64_t)sub_20A4DEBA0, 0, isUniquelyReferenced_nonNull_native, (uint64_t *)&v38);
    *v31 = v38;
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    if (qword_253EB4578 != -1)
      swift_once();
    *(_QWORD *)(v0 + 144) = qword_253EB4568;
    v37 = (uint64_t (__cdecl *)())((char *)&dword_2545FBB50 + dword_2545FBB50);
    swift_retain();
    v34 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v34;
    *v34 = v0;
    v34[1] = sub_20A4DE014;
    return v37();
  }
}

uint64_t sub_20A4DE014(void *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  id v5;

  v4 = *v2;
  *(_QWORD *)(*v2 + 160) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    *(_QWORD *)(v4 + 168) = a1;
    v5 = a1;
  }
  return swift_task_switch();
}

uint64_t sub_20A4DE08C()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  unint64_t v9;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(void **)(v0 + 168);
  if (v1)
  {
    v2 = objc_msgSend(*(id *)(v0 + 168), sel_appleID);

    swift_release();
    if (v2)
    {
      v3 = sub_20A5B8900();
      v5 = v4;

      v14 = MEMORY[0x24BEE0D00];
      v15 = MEMORY[0x24BEE0D10];
      v12 = v3;
      v13 = v5;
      sub_20A4DBB68((uint64_t)&v12, 0x6469656C707061, 0xE700000000000000);
    }
  }
  else
  {
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + 160);
  v7 = *(_QWORD *)(v0 + 136);
  v8 = *(uint64_t **)(v0 + 48);
  v12 = *(_QWORD *)(v0 + 128);
  v13 = v7;
  v9 = sub_20A4DD0D0(*v8);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v12 = *v8;
  *v8 = 0x8000000000000000;
  sub_20A4DEBE0(v9, (uint64_t)sub_20A4DEBA0, 0, isUniquelyReferenced_nonNull_native, &v12);
  *v8 = v12;
  result = swift_bridgeObjectRelease();
  if (!v6)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  return result;
}

uint64_t sub_20A4DE204()
{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t *v3;
  unint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  unint64_t v8;

  v1 = *(void **)(v0 + 160);
  swift_release();
  swift_bridgeObjectRetain();
  sub_20A5B8E94();
  swift_bridgeObjectRelease();
  v7 = 0xD000000000000006;
  v8 = 0x800000020A5E1FA0;
  swift_getErrorValue();
  sub_20A5B923C();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  CoreODILogger.error(_:category:)(0xD000000000000017, 0x800000020A5E1FA0, &v7);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(uint64_t **)(v0 + 48);
  v7 = *(_QWORD *)(v0 + 128);
  v8 = v2;
  v4 = sub_20A4DD0D0(*v3);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v3;
  *v3 = 0x8000000000000000;
  sub_20A4DEBE0(v4, (uint64_t)sub_20A4DEBA0, 0, isUniquelyReferenced_nonNull_native, &v7);
  *v3 = v7;
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4DE3AC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_20A47094C(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v3;
  v12 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_20A4782FC();
    v9 = v12;
  }
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 16 * v6);
  sub_20A57AED0(v6, v9);
  *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_20A4DE490@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  _BYTE v15[1032];
  uint64_t v16;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_20A470AE4(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v16 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_20A4786AC();
      v9 = v16;
    }
    memcpy(v15, (const void *)(*(_QWORD *)(v9 + 48) + 1032 * v6), 0x403uLL);
    sub_20A47CDDC((uint64_t)v15);
    v10 = *(_QWORD *)(v9 + 56);
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA0B8);
    v12 = *(_QWORD *)(v11 - 8);
    sub_20A459C88(v10 + *(_QWORD *)(v12 + 72) * v6, a2, &qword_2545FA0B8);
    sub_20A57B284(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(a2, 0, 1, v11);
  }
  else
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA0B8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a2, 1, 1, v14);
  }
}

uint64_t sub_20A4DE5F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_20A47094C(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v17 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_20A478AB4();
      v11 = v17;
    }
    swift_bridgeObjectRelease();
    v12 = *(_QWORD *)(v11 + 56);
    v13 = type metadata accessor for ODIKnownBinding();
    v14 = *(_QWORD *)(v13 - 8);
    sub_20A479808(v12 + *(_QWORD *)(v14 + 72) * v8, a3);
    sub_20A57B4C8(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a3, 0, 1, v13);
  }
  else
  {
    v16 = type metadata accessor for ODIKnownBinding();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a3, 1, 1, v16);
  }
}

double sub_20A4DE720@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  double result;
  uint64_t v13;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_20A47094C(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v13 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_20A478CE0();
      v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_20A44CFD8((__int128 *)(*(_QWORD *)(v11 + 56) + 40 * v8), a3);
    sub_20A57B6C4(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(a3 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

uint64_t sub_20A4DE818(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v3;
  char v4;
  unint64_t v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = v1;
  v3 = sub_20A470C6C(a1);
  if ((v4 & 1) == 0)
    return 1;
  v5 = v3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v1;
  v10 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_20A4793AC();
    v7 = v10;
  }
  v8 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v5);
  sub_20A57BA64(v5, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v8;
}

unint64_t sub_20A4DE8AC(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unsigned int v5;

  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    sub_20A4DE988(0xFuLL, a1, a2);
    if ((a2 & 0x1000000000000000) != 0)
    {
      v5 = sub_20A5B8E88();
    }
    else
    {
      if ((a2 & 0x2000000000000000) == 0 && (a1 & 0x1000000000000000) == 0)
        sub_20A5B8EE8();
      v5 = sub_20A5B8EF4();
    }
  }
  else
  {
    v5 = 0;
  }
  return v5 | ((unint64_t)(v2 == 0) << 32);
}

unint64_t sub_20A4DE988(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;

  v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0)
    LOBYTE(v5) = 1;
  if ((result & 1) == 0 || (result & 0xC) == 4 << v5)
    goto LABEL_9;
  v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v6 = a2 & 0xFFFFFFFFFFFFLL;
  if (v6 <= result >> 16)
  {
    __break(1u);
LABEL_9:
    result = sub_20A4DEA24(result, a2, a3);
    if ((result & 1) == 0)
      return result & 0xC | sub_20A4DEA90(result, a2, a3) & 0xFFFFFFFFFFFFFFF3 | 1;
  }
  return result;
}

unint64_t sub_20A4DEA24(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;

  v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0)
    LOBYTE(v5) = 1;
  if ((result & 0xC) == 4 << v5)
    result = sub_20A44B0B0(result, a2, a3);
  v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v6 = a2 & 0xFFFFFFFFFFFFLL;
  if (v6 <= result >> 16)
    __break(1u);
  return result;
}

unint64_t sub_20A4DEA90(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  _QWORD v13[4];

  if ((result & 0xC000) != 0 || result < 0x10000)
  {
    result &= 0xFFFFFFFFFFFF0000;
  }
  else
  {
    v5 = result >> 16;
    if ((a3 & 0x1000000000000000) == 0)
    {
      v13[2] = v3;
      v13[3] = v4;
      if ((a3 & 0x2000000000000000) != 0)
      {
        v13[0] = a2;
        v13[1] = a3 & 0xFFFFFFFFFFFFFFLL;
        if (v5 != (HIBYTE(a3) & 0xF) && (*((_BYTE *)v13 + v5) & 0xC0) == 0x80)
        {
          do
          {
            v7 = v5 - 1;
            v11 = *((_BYTE *)&v12 + v5-- + 7) & 0xC0;
          }
          while (v11 == 128);
          return v7 << 16;
        }
        goto LABEL_14;
      }
      if ((a2 & 0x1000000000000000) != 0)
      {
        v6 = (a3 & 0xFFFFFFFFFFFFFFFLL) + 32;
        if (v5 == (a2 & 0xFFFFFFFFFFFFLL))
          goto LABEL_14;
      }
      else
      {
        v12 = result >> 16;
        v6 = sub_20A5B8EE8();
        v5 = v12;
        if (v12 == v10)
          goto LABEL_14;
      }
      if ((*(_BYTE *)(v6 + v5) & 0xC0) == 0x80)
      {
        do
        {
          v7 = v5 - 1;
          v8 = *(_BYTE *)(v6 - 1 + v5--) & 0xC0;
        }
        while (v8 == 128);
        return v7 << 16;
      }
LABEL_14:
      v7 = v5;
      return v7 << 16;
    }
    v9 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0)
      v9 = a2 & 0xFFFFFFFFFFFFLL;
    if (v5 != v9)
      return sub_20A5B8E7C();
  }
  return result;
}

uint64_t sub_20A4DEBA0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v4 = *a1;
  v3 = a1[1];
  sub_20A47BD60((uint64_t)(a1 + 2), (uint64_t)(a2 + 2));
  *a2 = v4;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_20A4DEBE0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t result;
  _BYTE v31[40];
  __int128 v32[2];
  __int128 v33[2];
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v7 = -1 << *(_BYTE *)(a1 + 32);
  v8 = ~v7;
  v9 = *(_QWORD *)(a1 + 64);
  v10 = -v7;
  v37 = a1;
  v38 = a1 + 64;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v39 = v8;
  v40 = 0;
  v41 = v11 & v9;
  v42 = a2;
  v43 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_20A4DEE48((uint64_t)&v34);
  v12 = v35;
  if (!v35)
  {
LABEL_19:
    swift_release();
    swift_bridgeObjectRelease();
    sub_20A498A68();
    return swift_release();
  }
  while (1)
  {
    v15 = v34;
    sub_20A44CFD8(&v36, (uint64_t)v33);
    v16 = *a5;
    v18 = sub_20A47094C(v15, v12);
    v19 = *(_QWORD *)(v16 + 16);
    v20 = (v17 & 1) == 0;
    v21 = v19 + v20;
    if (__OFADD__(v19, v20))
      break;
    v22 = v17;
    if (*(_QWORD *)(v16 + 24) >= v21)
    {
      if ((a4 & 1) != 0)
      {
        if ((v17 & 1) != 0)
          goto LABEL_6;
      }
      else
      {
        sub_20A478CE0();
        if ((v22 & 1) != 0)
          goto LABEL_6;
      }
    }
    else
    {
      sub_20A475284(v21, a4 & 1);
      v23 = sub_20A47094C(v15, v12);
      if ((v22 & 1) != (v24 & 1))
        goto LABEL_22;
      v18 = v23;
      if ((v22 & 1) != 0)
      {
LABEL_6:
        v13 = 40 * v18;
        sub_20A47BD60(*(_QWORD *)(*a5 + 56) + v13, (uint64_t)v31);
        sub_20A47BD60((uint64_t)v31, (uint64_t)v32);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
        swift_bridgeObjectRelease();
        v14 = *(_QWORD *)(*a5 + 56) + v13;
        __swift_destroy_boxed_opaque_existential_1(v14);
        sub_20A44CFD8(v32, v14);
        goto LABEL_7;
      }
    }
    v25 = (_QWORD *)*a5;
    *(_QWORD *)(*a5 + 8 * (v18 >> 6) + 64) |= 1 << v18;
    v26 = (uint64_t *)(v25[6] + 16 * v18);
    *v26 = v15;
    v26[1] = v12;
    sub_20A44CFD8(v33, v25[7] + 40 * v18);
    v27 = v25[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (v28)
      goto LABEL_21;
    v25[2] = v29;
LABEL_7:
    sub_20A4DEE48((uint64_t)&v34);
    v12 = v35;
    a4 = 1;
    if (!v35)
      goto LABEL_19;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  result = sub_20A5B9218();
  __break(1u);
  return result;
}

uint64_t sub_20A4DEE48@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  int64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  void (*v19)(_OWORD *);
  uint64_t result;
  _OWORD v21[3];
  uint64_t v22;
  _OWORD v23[3];
  uint64_t v24;
  __int128 v25;
  _OWORD v26[2];
  uint64_t v27;

  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  v7 = v5;
  v8 = v1[4];
  if (v8)
  {
    v9 = (v8 - 1) & v8;
    v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_3:
    v11 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v10);
    v13 = *v11;
    v12 = v11[1];
    sub_20A47BD60(*(_QWORD *)(v3 + 56) + 40 * v10, (uint64_t)v26);
    *(_QWORD *)&v25 = v13;
    *((_QWORD *)&v25 + 1) = v12;
    swift_bridgeObjectRetain();
    goto LABEL_23;
  }
  v14 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return result;
  }
  v15 = (unint64_t)(v6 + 64) >> 6;
  if (v14 < v15)
  {
    v16 = *(_QWORD *)(v4 + 8 * v14);
    if (v16)
    {
LABEL_7:
      v9 = (v16 - 1) & v16;
      v10 = __clz(__rbit64(v16)) + (v14 << 6);
      v7 = v14;
      goto LABEL_3;
    }
    v17 = v5 + 2;
    v7 = v5 + 1;
    if (v5 + 2 < v15)
    {
      v16 = *(_QWORD *)(v4 + 8 * v17);
      if (v16)
      {
LABEL_10:
        v14 = v17;
        goto LABEL_7;
      }
      v7 = v5 + 2;
      if (v5 + 3 < v15)
      {
        v16 = *(_QWORD *)(v4 + 8 * (v5 + 3));
        if (v16)
        {
          v14 = v5 + 3;
          goto LABEL_7;
        }
        v17 = v5 + 4;
        v7 = v5 + 3;
        if (v5 + 4 < v15)
        {
          v16 = *(_QWORD *)(v4 + 8 * v17);
          if (v16)
            goto LABEL_10;
          v14 = v5 + 5;
          v7 = v5 + 4;
          if (v5 + 5 < v15)
          {
            v16 = *(_QWORD *)(v4 + 8 * v14);
            if (v16)
              goto LABEL_7;
            v7 = v15 - 1;
            v18 = v5 + 6;
            while (v15 != v18)
            {
              v16 = *(_QWORD *)(v4 + 8 * v18++);
              if (v16)
              {
                v14 = v18 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  v9 = 0;
  v27 = 0;
  memset(v26, 0, sizeof(v26));
  v25 = 0u;
LABEL_23:
  *v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  v19 = (void (*)(_OWORD *))v1[5];
  result = sub_20A459C88((uint64_t)&v25, (uint64_t)v23, &qword_253EB47E0);
  if (*((_QWORD *)&v23[0] + 1))
  {
    v21[0] = v23[0];
    v21[1] = v23[1];
    v21[2] = v23[2];
    v22 = v24;
    v19(v21);
    return sub_20A44CE2C((uint64_t)v21, &qword_253EB47D8);
  }
  else
  {
    *(_QWORD *)(a1 + 48) = 0;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
  }
  return result;
}

uint64_t sub_20A4DF044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, _QWORD *a6)
{
  uint64_t v10;
  _QWORD *v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;

  v10 = MEMORY[0x24BEE0D00];
  v30 = MEMORY[0x24BEE0D00];
  v31 = MEMORY[0x24BEE0D10];
  *(_QWORD *)&v29 = a1;
  *((_QWORD *)&v29 + 1) = a2;
  v11 = (_QWORD *)*a6;
  v13 = sub_20A47094C(a3, a4);
  v14 = v11[2];
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  v17 = v12;
  v18 = v11[3];
  if (v18 >= v16 && (a5 & 1) != 0)
  {
LABEL_7:
    v19 = (_QWORD *)*a6;
    if ((v17 & 1) != 0)
    {
LABEL_8:
      v20 = v19[7] + 40 * v13;
      __swift_destroy_boxed_opaque_existential_1(v20);
      return sub_20A44CFD8(&v29, v20);
    }
    goto LABEL_11;
  }
  if (v18 >= v16 && (a5 & 1) == 0)
  {
    sub_20A478CE0();
    goto LABEL_7;
  }
  sub_20A475284(v16, a5 & 1);
  v22 = sub_20A47094C(a3, a4);
  if ((v17 & 1) != (v23 & 1))
  {
LABEL_14:
    result = sub_20A5B9218();
    __break(1u);
    return result;
  }
  v13 = v22;
  v19 = (_QWORD *)*a6;
  if ((v17 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  v24 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v29, v10);
  MEMORY[0x24BDAC7A8](v24, v24);
  v26 = (uint64_t *)((char *)&v28 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v27 + 16))(v26);
  sub_20A4DF1E8(v13, a3, a4, *v26, v26[1], v19);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v29);
  return swift_bridgeObjectRetain();
}

uint64_t sub_20A4DF1E8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  _QWORD *v7;
  uint64_t result;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = MEMORY[0x24BEE0D00];
  v14 = MEMORY[0x24BEE0D10];
  *(_QWORD *)&v12 = a4;
  *((_QWORD *)&v12 + 1) = a5;
  a6[(a1 >> 6) + 8] |= 1 << a1;
  v7 = (_QWORD *)(a6[6] + 16 * a1);
  *v7 = a2;
  v7[1] = a3;
  result = sub_20A44CFD8(&v12, a6[7] + 40 * a1);
  v9 = a6[2];
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
    __break(1u);
  else
    a6[2] = v11;
  return result;
}

uint64_t _s17CoreODIEssentials15BindingsHelpersV25convertCountryCodeToASCII3strSiSS_tFZ_0()
{
  unint64_t v0;
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  char v19;
  uint64_t v20;
  unsigned __int8 *v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 *v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 *v29;
  unsigned int v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;

  if (sub_20A5B8984() != 2)
  {
    v35 = 0x657261685369646FLL;
    v36 = 0xEF726567676F4C64;
    v33 = 5;
    v34 = 0xE000000000000000;
    sub_20A5B8E94();
    sub_20A5B899C();
    sub_20A5B899C();
    sub_20A5B899C();
    CoreODILogger.debug(_:category:)(0, 0xE000000000000000, &v33);
    swift_bridgeObjectRelease();
    return -1;
  }
  swift_bridgeObjectRetain();
  v0 = sub_20A4DBCA8();
  swift_bridgeObjectRelease();
  v1 = *(_QWORD *)(v0 + 16);
  if (v1)
  {
    v35 = MEMORY[0x24BEE4AF8];
    sub_20A457724(0, v1, 0);
    v2 = 0;
    v3 = v35;
    do
    {
      LOBYTE(v33) = *(_BYTE *)(v0 + v2 + 32);
      v4 = sub_20A5B9170();
      v6 = v5;
      v35 = v3;
      v8 = *(_QWORD *)(v3 + 16);
      v7 = *(_QWORD *)(v3 + 24);
      if (v8 >= v7 >> 1)
      {
        sub_20A457724(v7 > 1, v8 + 1, 1);
        v3 = v35;
      }
      ++v2;
      *(_QWORD *)(v3 + 16) = v8 + 1;
      v9 = v3 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v4;
      *(_QWORD *)(v9 + 40) = v6;
    }
    while (v1 != v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v3 = MEMORY[0x24BEE4AF8];
  }
  v35 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5130);
  sub_20A4599CC();
  v11 = sub_20A5B88DC();
  v13 = v12;
  result = swift_bridgeObjectRelease();
  v15 = HIBYTE(v13) & 0xF;
  v16 = v11 & 0xFFFFFFFFFFFFLL;
  if ((v13 & 0x2000000000000000) != 0)
    v17 = HIBYTE(v13) & 0xF;
  else
    v17 = v11 & 0xFFFFFFFFFFFFLL;
  if (!v17)
  {
    swift_bridgeObjectRelease();
    v10 = -1;
LABEL_55:
    v35 = 0x657261685369646FLL;
    v36 = 0xEF726567676F4C64;
    sub_20A5B8E94();
    swift_bridgeObjectRelease();
    v33 = 0xD000000000000005;
    v34 = 0x800000020A5E2190;
    sub_20A5B899C();
    sub_20A5B899C();
    sub_20A5B9170();
    sub_20A5B899C();
    swift_bridgeObjectRelease();
    CoreODILogger.debug(_:category:)(0xD000000000000018, 0x800000020A5E2190, &v33);
    swift_bridgeObjectRelease();
    return v10;
  }
  if ((v13 & 0x1000000000000000) != 0)
  {
    v10 = (uint64_t)sub_20A5252A4(v11, v13, 10);
    LOBYTE(v11) = v32;
LABEL_53:
    swift_bridgeObjectRelease();
    if ((v11 & 1) != 0)
      v10 = -1;
    goto LABEL_55;
  }
  if ((v13 & 0x2000000000000000) == 0)
  {
    if ((v11 & 0x1000000000000000) != 0)
      v18 = (unsigned __int8 *)((v13 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v18 = (unsigned __int8 *)sub_20A5B8EE8();
    v10 = (uint64_t)sub_20A525290(v18, v16, 10);
    LOBYTE(v11) = v19 & 1;
    goto LABEL_53;
  }
  v35 = v11;
  v36 = v13 & 0xFFFFFFFFFFFFFFLL;
  if (v11 == 43)
  {
    if (!v15)
      goto LABEL_67;
    if (v15 == 1 || (BYTE1(v11) - 48) > 9u)
      goto LABEL_40;
    v10 = (BYTE1(v11) - 48);
    if (v15 != 2)
    {
      if ((BYTE2(v11) - 48) > 9u)
        goto LABEL_40;
      v10 = 10 * (BYTE1(v11) - 48) + (BYTE2(v11) - 48);
      v20 = v15 - 3;
      if (v20)
      {
        v21 = (unsigned __int8 *)&v35 + 3;
        while (1)
        {
          v22 = *v21 - 48;
          if (v22 > 9)
            goto LABEL_40;
          v23 = 10 * v10;
          if ((unsigned __int128)(v10 * (__int128)10) >> 64 != (10 * v10) >> 63)
            goto LABEL_40;
          v10 = v23 + v22;
          if (__OFADD__(v23, v22))
            goto LABEL_40;
          LOBYTE(v11) = 0;
          ++v21;
          if (!--v20)
            goto LABEL_53;
        }
      }
    }
LABEL_52:
    LOBYTE(v11) = 0;
    goto LABEL_53;
  }
  if (v11 != 45)
  {
    if (!v15 || (v11 - 48) > 9u)
      goto LABEL_40;
    v10 = (v11 - 48);
    if (v15 != 1)
    {
      if ((BYTE1(v11) - 48) > 9u)
        goto LABEL_40;
      v10 = 10 * (v11 - 48) + (BYTE1(v11) - 48);
      v24 = v15 - 2;
      if (v24)
      {
        v25 = (unsigned __int8 *)&v35 + 2;
        while (1)
        {
          v26 = *v25 - 48;
          if (v26 > 9)
            goto LABEL_40;
          v27 = 10 * v10;
          if ((unsigned __int128)(v10 * (__int128)10) >> 64 != (10 * v10) >> 63)
            goto LABEL_40;
          v10 = v27 + v26;
          if (__OFADD__(v27, v26))
            goto LABEL_40;
          LOBYTE(v11) = 0;
          ++v25;
          if (!--v24)
            goto LABEL_53;
        }
      }
    }
    goto LABEL_52;
  }
  if (v15)
  {
    if (v15 != 1 && (BYTE1(v11) - 48) <= 9u)
    {
      if (v15 == 2)
      {
        LOBYTE(v11) = 0;
        v10 = -(uint64_t)(BYTE1(v11) - 48);
        goto LABEL_53;
      }
      if ((BYTE2(v11) - 48) <= 9u)
      {
        v10 = -10 * (BYTE1(v11) - 48) - (BYTE2(v11) - 48);
        v28 = v15 - 3;
        if (!v28)
          goto LABEL_52;
        v29 = (unsigned __int8 *)&v35 + 3;
        while (1)
        {
          v30 = *v29 - 48;
          if (v30 > 9)
            break;
          v31 = 10 * v10;
          if ((unsigned __int128)(v10 * (__int128)10) >> 64 != (10 * v10) >> 63)
            break;
          v10 = v31 - v30;
          if (__OFSUB__(v31, v30))
            break;
          LOBYTE(v11) = 0;
          ++v29;
          if (!--v28)
            goto LABEL_53;
        }
      }
    }
LABEL_40:
    v10 = 0;
    LOBYTE(v11) = 1;
    goto LABEL_53;
  }
  __break(1u);
LABEL_67:
  __break(1u);
  return result;
}

uint64_t _s17CoreODIEssentials15BindingsHelpersV14deviceLanguageSSSgvgZ_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v0 = sub_20A5B86F0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_20A5B8708();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_253EB4998);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5B86D8();
  sub_20A5B86FC();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  sub_20A5B86E4();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  v14 = sub_20A5B8690();
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_20A44CE2C((uint64_t)v13, &qword_253EB4998);
    return 0;
  }
  else
  {
    v16 = sub_20A5B8684();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v13, v14);
  }
  return v16;
}

uint64_t _s17CoreODIEssentials15BindingsHelpersV26convertLanguageCodeToASCII3strSiSS_tFZ_0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t result;
  int v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 *v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = HIBYTE(a2) & 0xF;
  v20 = a1;
  v21 = a2;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  v22 = 0;
  v23 = v2;
  swift_bridgeObjectRetain();
  v3 = sub_20A5B89A8();
  if (v4)
  {
    v5 = v3;
    v6 = v4;
    v7 = (char *)MEMORY[0x24BEE4AF8];
    while ((v5 != 2573 || v6 != 0xE200000000000000) && (sub_20A5B91AC() & 1) == 0)
    {
      if ((sub_20A5B88D0() & 1) != 0)
      {
        result = sub_20A4DE8AC(v5, v6);
        if ((result & 0x100000000) != 0)
          goto LABEL_35;
        if ((result & 0xFFFFFF80) == 0)
        {
          result = sub_20A4DE8AC(v5, v6);
          if ((result & 0x100000000) != 0)
            goto LABEL_36;
          v10 = result;
          result = swift_bridgeObjectRelease();
          if ((v10 & 0xFFFFFF00) != 0)
          {
            __break(1u);
            goto LABEL_34;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
            goto LABEL_16;
LABEL_20:
          v7 = sub_20A46FB68(0, *((_QWORD *)v7 + 2) + 1, 1, v7);
LABEL_16:
          v12 = *((_QWORD *)v7 + 2);
          v11 = *((_QWORD *)v7 + 3);
          if (v12 >= v11 >> 1)
            v7 = sub_20A46FB68((char *)(v11 > 1), v12 + 1, 1, v7);
          *((_QWORD *)v7 + 2) = v12 + 1;
          v7[v12 + 32] = v10;
          goto LABEL_6;
        }
      }
      swift_bridgeObjectRelease();
LABEL_6:
      v5 = sub_20A5B89A8();
      v6 = v8;
      if (!v8)
        goto LABEL_22;
    }
    swift_bridgeObjectRelease();
    LOBYTE(v10) = 10;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      goto LABEL_20;
    goto LABEL_16;
  }
  v7 = (char *)MEMORY[0x24BEE4AF8];
LABEL_22:
  swift_bridgeObjectRelease();
  v13 = *((_QWORD *)v7 + 2);
  if (v13 > 4 || (result = sub_20A5B8984(), v13 != result))
  {
    swift_bridgeObjectRelease();
    v20 = 0x657261685369646FLL;
    v21 = 0xEF726567676F4C64;
    v18 = 5;
    v19 = 0xE000000000000000;
    sub_20A5B8E94();
    sub_20A5B899C();
    sub_20A5B899C();
    sub_20A5B899C();
    CoreODILogger.debug(_:category:)(0, 0xE000000000000000, &v18);
    swift_bridgeObjectRelease();
    return -1;
  }
  v14 = *((_QWORD *)v7 + 2);
  if (!v14)
  {
    v15 = 0;
LABEL_31:
    swift_bridgeObjectRelease();
    v20 = 0x657261685369646FLL;
    v21 = 0xEF726567676F4C64;
    sub_20A5B8E94();
    swift_bridgeObjectRelease();
    v18 = 0xD000000000000005;
    v19 = 0x800000020A5E2130;
    sub_20A5B899C();
    sub_20A5B899C();
    sub_20A5B9170();
    sub_20A5B899C();
    swift_bridgeObjectRelease();
    CoreODILogger.debug(_:category:)(0xD000000000000019, 0x800000020A5E2130, &v18);
    swift_bridgeObjectRelease();
    return v15;
  }
  v15 = 0;
  v16 = (unsigned __int8 *)(v7 + 32);
  while ((unsigned __int128)(v15 * (__int128)1000) >> 64 == (1000 * v15) >> 63)
  {
    v17 = *v16++;
    v15 = 1000 * v15 + v17;
    if (!--v14)
      goto LABEL_31;
  }
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_20A4DFD98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB49A0);
  MEMORY[0x24BDAC7A8](v0, v1);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_20A5B8708();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend((id)objc_opt_self(), sel_currentLocale);
  sub_20A5B86A8();

  sub_20A5B86CC();
  v10 = sub_20A5B86C0();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v3, 1, v10) == 1)
  {
    sub_20A44CE2C((uint64_t)v3, (uint64_t *)&unk_253EB49A0);
  }
  else
  {
    sub_20A5B8684();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v3, v10);
  }
  v12 = sub_20A5B88F4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  return v12;
}

uint64_t _s17CoreODIEssentials15BindingsHelpersV17formatPhoneNumber05phoneG016usingCountryCodeSSSgSS_So8NSStringCSgtFZ_0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t String;
  void *v11;
  uint64_t v12;
  _QWORD v14[2];
  uint64_t v15;
  unint64_t v16;

  v15 = 0;
  v16 = 0xE000000000000000;
  sub_20A5B8E94();
  sub_20A5B899C();
  sub_20A5B899C();
  sub_20A5B899C();
  if (qword_253EB5070 != -1)
    swift_once();
  v4 = sub_20A5B8804();
  __swift_project_value_buffer(v4, (uint64_t)qword_253EBC8B8);
  swift_bridgeObjectRetain();
  sub_20A5044CC();
  swift_bridgeObjectRelease_n();
  if (a3)
    v5 = a3;
  else
    v5 = (void *)sub_20A4DFD98();
  v15 = 0x657261685369646FLL;
  v16 = 0xEF726567676F4C64;
  v6 = a3;
  sub_20A5B8E94();
  swift_bridgeObjectRelease();
  strcpy((char *)v14, "Country Code: ");
  HIBYTE(v14[1]) = -18;
  sub_20A5B8900();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  v7 = v14[0];
  LOBYTE(v14[0]) = 14;
  CoreODILogger.debug(_:category:)(v7, v14[1], v14);
  swift_bridgeObjectRelease();
  v8 = (void *)sub_20A5B88F4();
  v9 = (void *)CFPhoneNumberCreate();

  String = CFPhoneNumberCreateString();
  if (String)
  {
    v11 = (void *)String;
    v12 = sub_20A5B8900();

  }
  else
  {
    v12 = 0;
  }
  v15 = 0;
  v16 = 0xE000000000000000;
  sub_20A5B8E94();
  sub_20A5B899C();
  swift_bridgeObjectRetain();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  swift_bridgeObjectRetain();
  sub_20A5044CC();

  swift_bridgeObjectRelease_n();
  return v12;
}

unint64_t sub_20A4E0244()
{
  unint64_t result;

  result = qword_2545FAEF0;
  if (!qword_2545FAEF0)
  {
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for BindingsKeys, &type metadata for BindingsKeys);
    atomic_store(result, &qword_2545FAEF0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for BindingsKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xBB)
    goto LABEL_17;
  if (a2 + 69 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 69) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 69;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 69;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 69;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x46;
  v8 = v6 - 70;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for BindingsKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 69 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 69) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xBB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xBA)
    return ((uint64_t (*)(void))((char *)&loc_20A4E0364 + 4 * byte_20A5C2BD7[v4]))();
  *a1 = a2 + 69;
  return ((uint64_t (*)(void))((char *)sub_20A4E0398 + 4 * byte_20A5C2BD2[v4]))();
}

uint64_t sub_20A4E0398(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A4E03A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A4E03A8);
  return result;
}

uint64_t sub_20A4E03B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A4E03BCLL);
  *(_BYTE *)result = a2 + 69;
  return result;
}

uint64_t sub_20A4E03C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A4E03C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BindingsKeys()
{
  return &type metadata for BindingsKeys;
}

ValueMetadata *type metadata accessor for BindingsHelpers()
{
  return &type metadata for BindingsHelpers;
}

uint64_t sub_20A4E03F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v4;
  char v5;
  __int128 v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  __int128 *v11;
  unint64_t v13;
  char v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  char v42;
  __int128 v43;
  __int128 v44;
  _OWORD v45[14];
  __int128 v46;
  char v47;

  *(_QWORD *)&v43 = 0x49444F65726F63;
  *((_QWORD *)&v43 + 1) = 0xE700000000000000;
  sub_20A5B8E34();
  if (*(_QWORD *)(a1 + 16) && (v4 = sub_20A470A0C((uint64_t)v45), (v5 & 1) != 0))
  {
    sub_20A44FD78(*(_QWORD *)(a1 + 56) + 32 * v4, (uint64_t)&v27);
  }
  else
  {
    v27 = 0u;
    v28 = 0u;
  }
  sub_20A459C54((uint64_t)v45);
  if (*((_QWORD *)&v28 + 1))
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      v6 = v43;
      sub_20A5B8264();
      swift_allocObject();
      sub_20A5B8258();
      sub_20A4E5894();
      sub_20A5B824C();
      swift_release();
      strcpy((char *)&v43, "daemonVersion");
      HIWORD(v43) = -4864;
      sub_20A5B8E34();
      if (*(_QWORD *)(a1 + 16) && (v13 = sub_20A470A0C((uint64_t)&v27), (v14 & 1) != 0))
      {
        sub_20A44FD78(*(_QWORD *)(a1 + 56) + 32 * v13, (uint64_t)&v43);
      }
      else
      {
        v43 = 0u;
        v44 = 0u;
      }
      sub_20A459C54((uint64_t)&v27);
      if (*((_QWORD *)&v44 + 1))
      {
        v15 = swift_dynamicCast();
        if (v15)
          v16 = v25;
        else
          v16 = 0;
        if (v15)
          v17 = v26;
        else
          v17 = 0;
      }
      else
      {
        sub_20A44FDFC((uint64_t)&v43);
        v16 = 0;
        v17 = 0;
      }
      swift_bridgeObjectRelease();
      *(_QWORD *)&v45[0] = v16;
      *((_QWORD *)&v45[0] + 1) = v17;
      *(_QWORD *)&v43 = 0x7365727574616566;
      *((_QWORD *)&v43 + 1) = 0xE800000000000000;
      sub_20A5B8E34();
      if (*(_QWORD *)(a1 + 16) && (v18 = sub_20A470A0C((uint64_t)&v27), (v19 & 1) != 0))
      {
        sub_20A44FD78(*(_QWORD *)(a1 + 56) + 32 * v18, (uint64_t)&v43);
      }
      else
      {
        v43 = 0u;
        v44 = 0u;
      }
      sub_20A459C54((uint64_t)&v27);
      if (*((_QWORD *)&v44 + 1))
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_253EB47C0);
        if (swift_dynamicCast())
          v20 = v25;
        else
          v20 = 0;
      }
      else
      {
        sub_20A44FDFC((uint64_t)&v43);
        v20 = 0;
      }
      swift_bridgeObjectRelease();
      *((_QWORD *)&v46 + 1) = v20;
      v47 = 0;
      if (qword_253EB4A80 != -1)
        swift_once();
      v21 = sub_20A5B8804();
      __swift_project_value_buffer(v21, (uint64_t)qword_253EB4950);
      v22 = sub_20A5B87EC();
      v23 = sub_20A5B8C48();
      if (os_log_type_enabled(v22, v23))
      {
        v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v24 = 0;
        _os_log_impl(&dword_20A443000, v22, v23, "Got config from asd.", v24, 2u);
        MEMORY[0x20BD26DB8](v24, -1, -1);
      }
      sub_20A44BD90(v6, *((unint64_t *)&v6 + 1));

      v39 = v45[12];
      v40 = v45[13];
      v41 = v46;
      v42 = v47;
      v35 = v45[8];
      v36 = v45[9];
      v37 = v45[10];
      v38 = v45[11];
      v31 = v45[4];
      v32 = v45[5];
      v33 = v45[6];
      v34 = v45[7];
      v27 = v45[0];
      v28 = v45[1];
      v29 = v45[2];
      v30 = v45[3];
      nullsub_1(&v27);
      v11 = &v27;
      return sub_20A459C88((uint64_t)v11, a2, &qword_253EB4A18);
    }
  }
  else
  {
    sub_20A44FDFC((uint64_t)&v27);
  }
  if (qword_253EB4A80 != -1)
    swift_once();
  v7 = sub_20A5B8804();
  __swift_project_value_buffer(v7, (uint64_t)qword_253EB4950);
  v8 = sub_20A5B87EC();
  v9 = sub_20A5B8C54();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v10 = 0;
    _os_log_impl(&dword_20A443000, v8, v9, "Error decoding config from asd: No Data object coreODI", v10, 2u);
    MEMORY[0x20BD26DB8](v10, -1, -1);
  }

  sub_20A4E5860((uint64_t)v45);
  v11 = v45;
  return sub_20A459C88((uint64_t)v11, a2, &qword_253EB4A18);
}

void sub_20A4E0A64(char a1)
{
  uint64_t v1;
  _BYTE v3[176];

  sub_20A459C88(v1 + 16, (uint64_t)v3, (uint64_t *)&unk_253EB6230);
  __asm { BR              X10 }
}

uint64_t sub_20A4E0AB4()
{
  uint64_t v0;
  _QWORD v2[22];
  uint64_t v3;

  sub_20A459C88((uint64_t)&v3, (uint64_t)v2, (uint64_t *)&unk_253EB6230);
  if (sub_20A459CCC((uint64_t)v2) == 1)
    return 0;
  v0 = v2[0];
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_20A4E0CC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 2256) = v1;
  *(_QWORD *)(v2 + 2248) = a1;
  return swift_task_switch();
}

uint64_t sub_20A4E0CE0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;

  v1 = *(_QWORD *)(v0 + 2256);
  if ((*(_BYTE *)(v1 + 353) & 1) != 0)
  {
    sub_20A459C88(v1 + 112, v0 + 1752, &qword_253EB4A18);
    sub_20A459C88(v0 + 1752, v0 + 1504, &qword_253EB4A18);
    if (sub_20A459CCC(v0 + 1504) != 1)
    {
      v17 = *(_QWORD *)(v0 + 2248);
      v18 = *(_OWORD *)(v0 + 1504);
      v19 = *(_OWORD *)(v0 + 1520);
      v20 = *(_OWORD *)(v0 + 1552);
      *(_OWORD *)(v17 + 32) = *(_OWORD *)(v0 + 1536);
      *(_OWORD *)(v17 + 48) = v20;
      *(_OWORD *)v17 = v18;
      *(_OWORD *)(v17 + 16) = v19;
      v21 = *(_OWORD *)(v0 + 1568);
      v22 = *(_OWORD *)(v0 + 1584);
      v23 = *(_OWORD *)(v0 + 1616);
      *(_OWORD *)(v17 + 96) = *(_OWORD *)(v0 + 1600);
      *(_OWORD *)(v17 + 112) = v23;
      *(_OWORD *)(v17 + 64) = v21;
      *(_OWORD *)(v17 + 80) = v22;
      v24 = *(_OWORD *)(v0 + 1632);
      v25 = *(_OWORD *)(v0 + 1648);
      v26 = *(_OWORD *)(v0 + 1680);
      *(_OWORD *)(v17 + 160) = *(_OWORD *)(v0 + 1664);
      *(_OWORD *)(v17 + 176) = v26;
      *(_OWORD *)(v17 + 128) = v24;
      *(_OWORD *)(v17 + 144) = v25;
      v27 = *(_OWORD *)(v0 + 1696);
      v28 = *(_OWORD *)(v0 + 1712);
      v29 = *(_OWORD *)(v0 + 1728);
      *(_BYTE *)(v17 + 240) = *(_BYTE *)(v0 + 1744);
      *(_OWORD *)(v17 + 208) = v28;
      *(_OWORD *)(v17 + 224) = v29;
      *(_OWORD *)(v17 + 192) = v27;
      sub_20A459C88(v0 + 1752, v0 + 2000, &qword_253EB4A18);
      sub_20A4E1180((_QWORD *)(v0 + 2000));
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    v1 = *(_QWORD *)(v0 + 2256);
  }
  sub_20A459C88(v1 + 360, v0 + 264, &qword_253EB4A18);
  sub_20A459C88(v0 + 264, v0 + 1256, &qword_253EB4A18);
  if (sub_20A459CCC(v0 + 1256) != 1)
  {
    v4 = *(_QWORD *)(v0 + 2248);
    v5 = *(_OWORD *)(v0 + 1256);
    v6 = *(_OWORD *)(v0 + 1272);
    v7 = *(_OWORD *)(v0 + 1304);
    *(_OWORD *)(v4 + 32) = *(_OWORD *)(v0 + 1288);
    *(_OWORD *)(v4 + 48) = v7;
    *(_OWORD *)v4 = v5;
    *(_OWORD *)(v4 + 16) = v6;
    v8 = *(_OWORD *)(v0 + 1320);
    v9 = *(_OWORD *)(v0 + 1336);
    v10 = *(_OWORD *)(v0 + 1368);
    *(_OWORD *)(v4 + 96) = *(_OWORD *)(v0 + 1352);
    *(_OWORD *)(v4 + 112) = v10;
    *(_OWORD *)(v4 + 64) = v8;
    *(_OWORD *)(v4 + 80) = v9;
    v11 = *(_OWORD *)(v0 + 1384);
    v12 = *(_OWORD *)(v0 + 1400);
    v13 = *(_OWORD *)(v0 + 1432);
    *(_OWORD *)(v4 + 160) = *(_OWORD *)(v0 + 1416);
    *(_OWORD *)(v4 + 176) = v13;
    *(_OWORD *)(v4 + 128) = v11;
    *(_OWORD *)(v4 + 144) = v12;
    v14 = *(_OWORD *)(v0 + 1448);
    v15 = *(_OWORD *)(v0 + 1464);
    v16 = *(_OWORD *)(v0 + 1480);
    *(_BYTE *)(v4 + 240) = *(_BYTE *)(v0 + 1496);
    *(_OWORD *)(v4 + 208) = v15;
    *(_OWORD *)(v4 + 224) = v16;
    *(_OWORD *)(v4 + 192) = v14;
    sub_20A4E14D8(v0 + 264, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_20A4E1554);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  if (qword_2545F9958 != -1)
    swift_once();
  *(_QWORD *)(v0 + 2264) = qword_2545F9CD8;
  sub_20A457794();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 2272) = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FAF00);
  *v2 = v0;
  v2[1] = sub_20A4E0F30;
  return sub_20A5B917C();
}

uint64_t sub_20A4E0F30()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A4E0F88()
{
  uint64_t v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v1 = *(_OWORD *)(v0 + 224);
  *(_OWORD *)(v0 + 1200) = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v0 + 1216) = v1;
  *(_OWORD *)(v0 + 1232) = *(_OWORD *)(v0 + 240);
  v2 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 1136) = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v0 + 1152) = v2;
  v3 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v0 + 1168) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v0 + 1184) = v3;
  v4 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 1072) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 1088) = v4;
  v5 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 1104) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 1120) = v5;
  v6 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 1008) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 1024) = v6;
  v7 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 1040) = *(_OWORD *)(v0 + 48);
  *(_BYTE *)(v0 + 1248) = *(_BYTE *)(v0 + 256);
  *(_OWORD *)(v0 + 1056) = v7;
  *(_BYTE *)(v0 + 258) = *(_BYTE *)(v0 + 257);
  return swift_task_switch();
}

uint64_t sub_20A4E1004()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;

  v1 = *(_QWORD *)(v0 + 2256);
  v2 = *(_QWORD *)(v0 + 2248);
  v3 = v1 + 360;
  *(_BYTE *)(v1 + 353) = *(_BYTE *)(v0 + 258);
  v4 = *(_OWORD *)(v0 + 1216);
  *(_OWORD *)(v0 + 952) = *(_OWORD *)(v0 + 1200);
  *(_OWORD *)(v0 + 968) = v4;
  *(_OWORD *)(v0 + 984) = *(_OWORD *)(v0 + 1232);
  *(_BYTE *)(v0 + 1000) = *(_BYTE *)(v0 + 1248);
  v5 = *(_OWORD *)(v0 + 1152);
  *(_OWORD *)(v0 + 888) = *(_OWORD *)(v0 + 1136);
  *(_OWORD *)(v0 + 904) = v5;
  v6 = *(_OWORD *)(v0 + 1184);
  *(_OWORD *)(v0 + 920) = *(_OWORD *)(v0 + 1168);
  *(_OWORD *)(v0 + 936) = v6;
  v7 = *(_OWORD *)(v0 + 1088);
  *(_OWORD *)(v0 + 824) = *(_OWORD *)(v0 + 1072);
  *(_OWORD *)(v0 + 840) = v7;
  v8 = *(_OWORD *)(v0 + 1120);
  *(_OWORD *)(v0 + 856) = *(_OWORD *)(v0 + 1104);
  *(_OWORD *)(v0 + 872) = v8;
  v9 = *(_OWORD *)(v0 + 1024);
  *(_OWORD *)(v0 + 760) = *(_OWORD *)(v0 + 1008);
  *(_OWORD *)(v0 + 776) = v9;
  v10 = *(_OWORD *)(v0 + 1056);
  *(_OWORD *)(v0 + 792) = *(_OWORD *)(v0 + 1040);
  *(_OWORD *)(v0 + 808) = v10;
  nullsub_1(v0 + 760);
  sub_20A459C88(v3, v0 + 512, &qword_253EB4A18);
  sub_20A459C88(v0 + 760, v3, &qword_253EB4A18);
  sub_20A4E1180((_QWORD *)(v0 + 1008));
  sub_20A4E14D8(v0 + 512, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_20A4E1370);
  v11 = *(_OWORD *)(v0 + 1056);
  v13 = *(_OWORD *)(v0 + 1008);
  v12 = *(_OWORD *)(v0 + 1024);
  *(_OWORD *)(v2 + 32) = *(_OWORD *)(v0 + 1040);
  *(_OWORD *)(v2 + 48) = v11;
  *(_OWORD *)v2 = v13;
  *(_OWORD *)(v2 + 16) = v12;
  v14 = *(_OWORD *)(v0 + 1088);
  v15 = *(_OWORD *)(v0 + 1120);
  v16 = *(_OWORD *)(v0 + 1072);
  *(_OWORD *)(v2 + 96) = *(_OWORD *)(v0 + 1104);
  *(_OWORD *)(v2 + 112) = v15;
  *(_OWORD *)(v2 + 64) = v16;
  *(_OWORD *)(v2 + 80) = v14;
  v17 = *(_OWORD *)(v0 + 1152);
  v18 = *(_OWORD *)(v0 + 1184);
  v19 = *(_OWORD *)(v0 + 1136);
  *(_OWORD *)(v2 + 160) = *(_OWORD *)(v0 + 1168);
  *(_OWORD *)(v2 + 176) = v18;
  *(_OWORD *)(v2 + 128) = v19;
  *(_OWORD *)(v2 + 144) = v17;
  v20 = *(_OWORD *)(v0 + 1216);
  v21 = *(_OWORD *)(v0 + 1232);
  v22 = *(_OWORD *)(v0 + 1200);
  *(_BYTE *)(v2 + 240) = *(_BYTE *)(v0 + 1248);
  *(_OWORD *)(v2 + 208) = v20;
  *(_OWORD *)(v2 + 224) = v21;
  *(_OWORD *)(v2 + 192) = v22;
  sub_20A4E14D8(v0 + 264, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_20A4E1554);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

_QWORD *sub_20A4E1180(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  v6 = a1[3];
  v7 = a1[2];
  v3 = a1[24];
  v2 = a1[25];
  v4 = a1[26];
  swift_bridgeObjectRetain();
  sub_20A4E129C(v7, v6);
  sub_20A4E135C(v3, v2, v4);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_20A4E129C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_20A4E135C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3 != 1)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_20A4E1370(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    sub_20A480730(a3, a4);
    sub_20A4807F0(a25, a26, a27);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_20A4E14D8(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  char v4;

  v4 = *(_BYTE *)(a1 + 240);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    *(_QWORD *)(a1 + 224),
    *(_QWORD *)(a1 + 232),
    v4);
  return a1;
}

uint64_t sub_20A4E1554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    sub_20A4E129C(a3, a4);
    sub_20A4E135C(a25, a26, a27);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_20A4E16BC()
{
  uint64_t v0;
  uint64_t result;
  _BYTE v2[248];

  type metadata accessor for ConfigManager();
  v0 = swift_allocObject();
  swift_defaultActor_initialize();
  sub_20A4E5860((uint64_t)v2);
  sub_20A459C88((uint64_t)v2, v0 + 112, &qword_253EB4A18);
  *(_BYTE *)(v0 + 353) = 2;
  result = sub_20A459C88((uint64_t)v2, v0 + 360, &qword_253EB4A18);
  qword_253EB4968 = v0;
  return result;
}

uint64_t static ConfigManager.shared.getter()
{
  if (qword_253EB4A90 != -1)
    swift_once();
  return swift_retain();
}

uint64_t sub_20A4E1780(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint8_t *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  unint64_t v16;
  char v17;
  _BYTE *v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  __int128 v23;
  __int128 v24;
  _OWORD v25[11];
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  unint64_t v29;
  uint64_t v30;
  char v31;
  _OWORD v32[15];
  char v33;
  __int128 v34;
  __int128 v35;
  _BYTE v36[248];
  _QWORD v37[31];
  uint64_t v38[33];

  v2 = v1;
  if (qword_253EB4A80 != -1)
    swift_once();
  v4 = sub_20A5B8804();
  __swift_project_value_buffer(v4, (uint64_t)qword_253EB4950);
  swift_bridgeObjectRetain_n();
  v5 = sub_20A5B87EC();
  v6 = sub_20A5B8C48();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v38[0] = v8;
    *(_DWORD *)v7 = 136315138;
    swift_bridgeObjectRetain();
    v9 = sub_20A5B8894();
    v11 = v10;
    swift_bridgeObjectRelease();
    v37[0] = sub_20A503EE0(v9, v11, v38);
    sub_20A5B8D50();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_20A443000, v5, v6, "Config being set by direct call from asd: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x20BD26DB8](v8, -1, -1);
    v12 = v7;
    v2 = v1;
    MEMORY[0x20BD26DB8](v12, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_20A4E03F4(a1, (uint64_t)v36);
  sub_20A459C88((uint64_t)v36, (uint64_t)v37, &qword_253EB4A18);
  sub_20A459C88((uint64_t)v37, (uint64_t)v38, &qword_253EB4A18);
  if (sub_20A459CCC((uint64_t)v38) == 1)
  {
    v13 = sub_20A5B87EC();
    v14 = sub_20A5B8C54();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_20A443000, v13, v14, "Couldn't set configuration directly passed in. Falling back to default", v15, 2u);
      MEMORY[0x20BD26DB8](v15, -1, -1);
    }

    strcpy((char *)v32, "daemonVersion");
    HIWORD(v32[0]) = -4864;
    sub_20A5B8E34();
    if (*(_QWORD *)(a1 + 16) && (v16 = sub_20A470A0C((uint64_t)v36), (v17 & 1) != 0))
    {
      sub_20A44FD78(*(_QWORD *)(a1 + 56) + 32 * v16, (uint64_t)&v34);
    }
    else
    {
      v34 = 0u;
      v35 = 0u;
    }
    sub_20A459C54((uint64_t)v36);
    if (*((_QWORD *)&v35 + 1))
    {
      v19 = swift_dynamicCast();
      if (v19)
        v20 = *(_QWORD *)&v32[0];
      else
        v20 = 0;
      if (v19)
        v21 = *((_QWORD *)&v32[0] + 1);
      else
        v21 = 0;
    }
    else
    {
      sub_20A44FDFC((uint64_t)&v34);
      v20 = 0;
      v21 = 0;
    }
    sub_20A459C2C(&v23);
    *(_QWORD *)&v24 = v20;
    *((_QWORD *)&v24 + 1) = v21;
    sub_20A459C88((uint64_t)&v23, (uint64_t)v25, (uint64_t *)&unk_253EB6230);
    v26 = 0;
    v27 = 0;
    v28 = xmmword_20A5BCDC0;
    LOBYTE(v29) = 0;
    v30 = 0;
    v31 = 2;
    v33 = 2;
    v32[8] = v25[7];
    v32[9] = v25[8];
    v32[10] = v25[9];
    v32[11] = v25[10];
    v32[4] = v25[3];
    v32[5] = v25[4];
    v32[6] = v25[5];
    v32[7] = v25[6];
    v32[0] = v24;
    v32[1] = v25[0];
    v32[2] = v25[1];
    v32[3] = v25[2];
    v32[12] = 0u;
    v32[13] = xmmword_20A5BCDC0;
    v32[14] = v29;
    nullsub_1(v32);
    sub_20A459C88(v2 + 112, (uint64_t)v36, &qword_253EB4A18);
    sub_20A459C88((uint64_t)v32, v2 + 112, &qword_253EB4A18);
    v18 = v36;
  }
  else
  {
    sub_20A459C88(v2 + 112, (uint64_t)v32, &qword_253EB4A18);
    sub_20A459C88((uint64_t)v37, v2 + 112, &qword_253EB4A18);
    v18 = v32;
  }
  result = sub_20A4E14D8((uint64_t)v18, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_20A4E1370);
  *(_BYTE *)(v2 + 353) = 1;
  return result;
}

uint64_t ConfigManager.deinit()
{
  uint64_t v0;
  _BYTE v2[248];
  _BYTE v3[248];

  sub_20A459C88(v0 + 112, (uint64_t)v2, &qword_253EB4A18);
  sub_20A4E14D8((uint64_t)v2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_20A4E1370);
  sub_20A459C88(v0 + 360, (uint64_t)v3, &qword_253EB4A18);
  sub_20A4E14D8((uint64_t)v3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_20A4E1370);
  swift_defaultActor_destroy();
  return v0;
}

uint64_t ConfigManager.__deallocating_deinit()
{
  uint64_t v0;
  _BYTE v2[248];
  _BYTE v3[248];

  sub_20A459C88(v0 + 112, (uint64_t)v2, &qword_253EB4A18);
  sub_20A4E14D8((uint64_t)v2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_20A4E1370);
  sub_20A459C88(v0 + 360, (uint64_t)v3, &qword_253EB4A18);
  sub_20A4E14D8((uint64_t)v3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_20A4E1370);
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t ConfigManager.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_20A4E1D4C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_20A4E1D8C + 4 * byte_20A5C2DDC[a1]))(0x42696C6F69766172, 0xEE006C7255657361);
}

unint64_t sub_20A4E1D8C()
{
  return 0xD000000000000025;
}

uint64_t sub_20A4E1E7C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FAF38);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4E55DC();
  sub_20A5B92FC();
  v9[15] = 0;
  sub_20A5B90D4();
  if (!v1)
  {
    v9[14] = 1;
    sub_20A5B90D4();
    v9[13] = 2;
    sub_20A5B90D4();
    v9[12] = 3;
    sub_20A5B90D4();
    v9[11] = 4;
    sub_20A5B90D4();
    v9[10] = 5;
    sub_20A5B90D4();
    v9[9] = 6;
    sub_20A5B90D4();
    v9[8] = 7;
    sub_20A5B90D4();
    v9[7] = 8;
    sub_20A5B90D4();
    v9[6] = 9;
    sub_20A5B90D4();
    v9[5] = 10;
    sub_20A5B90D4();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_20A4E20F8()
{
  unsigned __int8 *v0;

  return sub_20A4E1D4C(*v0);
}

uint64_t sub_20A4E2100@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A4E4278(a1, a2);
  *a3 = result;
  return result;
}

void sub_20A4E2124(_BYTE *a1@<X8>)
{
  *a1 = 11;
}

uint64_t sub_20A4E2130()
{
  sub_20A4E55DC();
  return sub_20A5B9314();
}

uint64_t sub_20A4E2158()
{
  sub_20A4E55DC();
  return sub_20A5B9320();
}

__n128 sub_20A4E2180@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD v9[11];

  sub_20A4E46A4(a1, v9);
  if (!v2)
  {
    v5 = v9[9];
    *(_OWORD *)(a2 + 128) = v9[8];
    *(_OWORD *)(a2 + 144) = v5;
    *(_OWORD *)(a2 + 160) = v9[10];
    v6 = v9[5];
    *(_OWORD *)(a2 + 64) = v9[4];
    *(_OWORD *)(a2 + 80) = v6;
    v7 = v9[7];
    *(_OWORD *)(a2 + 96) = v9[6];
    *(_OWORD *)(a2 + 112) = v7;
    v8 = v9[1];
    *(_OWORD *)a2 = v9[0];
    *(_OWORD *)(a2 + 16) = v8;
    result = (__n128)v9[3];
    *(_OWORD *)(a2 + 32) = v9[2];
    *(__n128 *)(a2 + 48) = result;
  }
  return result;
}

uint64_t sub_20A4E21E0(_QWORD *a1)
{
  return sub_20A4E1E7C(a1);
}

uint64_t sub_20A4E21F4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE v11[16];
  char v12[8];
  _BYTE v13[8];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FAF40);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = &v11[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4E5620();
  sub_20A5B92FC();
  v12[0] = 0;
  sub_20A5B90EC();
  if (!v2)
  {
    sub_20A459C88(v3 + 16, (uint64_t)v13, &qword_2545FAF48);
    sub_20A459C88((uint64_t)v13, (uint64_t)v12, &qword_2545FAF48);
    v11[15] = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_253EB50D0);
    sub_20A4E5664(&qword_2545FAF50, MEMORY[0x24BEE0D08], MEMORY[0x24BEE13D8], MEMORY[0x24BEE04C0]);
    sub_20A5B9104();
    v12[0] = 2;
    sub_20A5B90F8();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
}

unint64_t sub_20A4E239C()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD00000000000001ELL;
  if (*v0 != 1)
    v1 = 0x6B6E756843676F6CLL;
  if (*v0)
    return v1;
  else
    return 0xD000000000000018;
}

uint64_t sub_20A4E2404@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A4E5044(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A4E2428()
{
  sub_20A4E5620();
  return sub_20A5B9314();
}

uint64_t sub_20A4E2450()
{
  sub_20A4E5620();
  return sub_20A5B9320();
}

double sub_20A4E2478@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  char v7;

  sub_20A4E51A8(a1, (uint64_t)v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_BYTE *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_20A4E24BC(_QWORD *a1)
{
  return sub_20A4E21F4(a1);
}

uint64_t sub_20A4E24F4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_20A4E2530 + 4 * byte_20A5C2DE7[*v0]))(0x65566E6F6D656164, 0xED00006E6F697372);
}

uint64_t sub_20A4E2530()
{
  return 1936487029;
}

uint64_t sub_20A4E2540()
{
  return 0x72756769666E6F63;
}

uint64_t sub_20A4E2558()
{
  return 0x7365727574616566;
}

unint64_t sub_20A4E2570()
{
  return 0xD000000000000010;
}

uint64_t sub_20A4E258C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A4E53AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A4E25B0()
{
  sub_20A4E2D68();
  return sub_20A5B9314();
}

uint64_t sub_20A4E25D8()
{
  sub_20A4E2D68();
  return sub_20A5B9320();
}

uint64_t CoreODIConfig.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _DWORD v18[4];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[4];
  char v27;
  _BYTE v28[184];
  int v29;
  char v30;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FAF08);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = *v1;
  sub_20A459C88((uint64_t)(v1 + 2), (uint64_t)v28, (uint64_t *)&unk_253EB6230);
  v8 = v1[24];
  v22 = v1[25];
  v23 = v8;
  v9 = v1[26];
  v20 = v1[27];
  v21 = v9;
  v29 = *((unsigned __int8 *)v1 + 224);
  v19 = v1[29];
  v18[3] = *((unsigned __int8 *)v1 + 240);
  v10 = a1[3];
  v11 = a1;
  v12 = v7;
  __swift_project_boxed_opaque_existential_1(v11, v10);
  sub_20A4E2D68();
  sub_20A5B92FC();
  LOBYTE(v26[0]) = 0;
  v13 = v25;
  sub_20A5B90D4();
  if (!v13)
  {
    v14 = v21;
    v15 = v22;
    v16 = v23;
    sub_20A459C88((uint64_t)v28, (uint64_t)v26, (uint64_t *)&unk_253EB6230);
    v30 = 1;
    sub_20A4E2DAC();
    sub_20A5B9104();
    v26[0] = v16;
    v26[1] = v15;
    v26[2] = v14;
    v26[3] = v20;
    v27 = v29;
    v30 = 2;
    sub_20A4E2DF0();
    sub_20A5B9104();
    v26[0] = v19;
    v30 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_253EB47C0);
    sub_20A4E2F20(&qword_2545FAF20, MEMORY[0x24BEE0D08], MEMORY[0x24BEE1330], MEMORY[0x24BEE04C0]);
    sub_20A5B9104();
    LOBYTE(v26[0]) = 4;
    sub_20A5B90E0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v12, v3);
}

_QWORD *CoreODIConfig.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  _QWORD v27[2];
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  __int128 v36;
  _OWORD v37[11];
  __int128 v38;
  __int128 v39;
  __int128 v40;
  char v41;
  char v42;
  _QWORD v43[22];
  char v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  char v61;
  __int128 v62;
  _OWORD v63[11];
  __int128 v64;
  __int128 v65;
  __int128 v66;
  char v67;
  _OWORD v68[12];
  _QWORD *v69;

  v33 = a2;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5228);
  v4 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35, v5);
  v7 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = 0uLL;
  sub_20A459C2C(v68);
  sub_20A459C88((uint64_t)v68, (uint64_t)v63, (uint64_t *)&unk_253EB6230);
  v64 = 0uLL;
  v65 = xmmword_20A5BCDC0;
  LOBYTE(v66) = 0;
  *((_QWORD *)&v66 + 1) = 0;
  v67 = 2;
  v8 = a1[3];
  v69 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v8);
  sub_20A4E2D68();
  v34 = v7;
  sub_20A5B92F0();
  if (!v2)
  {
    v9 = v4;
    LOBYTE(v46) = 0;
    v10 = sub_20A5B9038();
    v12 = v11;
    *(_QWORD *)&v62 = v10;
    *((_QWORD *)&v62 + 1) = v11;
    v44 = 1;
    sub_20A4E2E34();
    swift_bridgeObjectRetain();
    sub_20A5B9068();
    sub_20A459C88((uint64_t)&v45, (uint64_t)v43, (uint64_t *)&unk_253EB6230);
    sub_20A459C88((uint64_t)v43, (uint64_t)v63, (uint64_t *)&unk_253EB6230);
    LOBYTE(v36) = 2;
    sub_20A4E2EBC(v43, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20A4E129C);
    sub_20A4E2E78();
    sub_20A5B9068();
    v13 = v46;
    v31 = *((_QWORD *)&v47 + 1);
    v14 = v47;
    v32 = *((_QWORD *)&v46 + 1);
    v15 = v48;
    v64 = v46;
    v65 = v47;
    LOBYTE(v66) = v48;
    v27[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_253EB47C0);
    v28 = v14;
    LOBYTE(v36) = 3;
    v30 = v13;
    v29 = v15;
    sub_20A4E135C(v13, v32, v14);
    sub_20A4E2F20(&qword_253EB47C8, MEMORY[0x24BEE0D38], MEMORY[0x24BEE1348], MEMORY[0x24BEE04E0]);
    sub_20A5B9068();
    v16 = v46;
    *((_QWORD *)&v66 + 1) = v46;
    v42 = 4;
    swift_bridgeObjectRetain();
    LOBYTE(v15) = sub_20A5B9044();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v34, v35);
    v67 = v15;
    *(_QWORD *)&v36 = v10;
    *((_QWORD *)&v36 + 1) = v12;
    sub_20A459C88((uint64_t)v43, (uint64_t)v37, (uint64_t *)&unk_253EB6230);
    *(_QWORD *)&v38 = v30;
    *((_QWORD *)&v38 + 1) = v32;
    v18 = v28;
    *(_QWORD *)&v39 = v28;
    *((_QWORD *)&v39 + 1) = v31;
    LOBYTE(v40) = v29;
    *((_QWORD *)&v40 + 1) = v16;
    v41 = v15;
    sub_20A4E1180(&v36);
    swift_bridgeObjectRelease();
    sub_20A4807F0(v30, v32, v18);
    sub_20A4E2EBC(v43, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20A480730);
    swift_bridgeObjectRelease();
    v19 = v39;
    v20 = v33;
    *(_OWORD *)(v33 + 192) = v38;
    *(_OWORD *)(v20 + 208) = v19;
    *(_OWORD *)(v20 + 224) = v40;
    *(_BYTE *)(v20 + 240) = v41;
    v21 = v37[8];
    *(_OWORD *)(v20 + 128) = v37[7];
    *(_OWORD *)(v20 + 144) = v21;
    v22 = v37[10];
    *(_OWORD *)(v20 + 160) = v37[9];
    *(_OWORD *)(v20 + 176) = v22;
    v23 = v37[4];
    *(_OWORD *)(v20 + 64) = v37[3];
    *(_OWORD *)(v20 + 80) = v23;
    v24 = v37[6];
    *(_OWORD *)(v20 + 96) = v37[5];
    *(_OWORD *)(v20 + 112) = v24;
    v25 = v37[0];
    *(_OWORD *)v20 = v36;
    *(_OWORD *)(v20 + 16) = v25;
    v26 = v37[2];
    *(_OWORD *)(v20 + 32) = v37[1];
    *(_OWORD *)(v20 + 48) = v26;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v69);
  v58 = v64;
  v59 = v65;
  v60 = v66;
  v61 = v67;
  v54 = v63[7];
  v55 = v63[8];
  v56 = v63[9];
  v57 = v63[10];
  v50 = v63[3];
  v51 = v63[4];
  v52 = v63[5];
  v53 = v63[6];
  v46 = v62;
  v47 = v63[0];
  v48 = v63[1];
  v49 = v63[2];
  return sub_20A480614(&v46);
}

_QWORD *sub_20A4E2D40@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return CoreODIConfig.init(from:)(a1, a2);
}

uint64_t sub_20A4E2D54(_QWORD *a1)
{
  return CoreODIConfig.encode(to:)(a1);
}

unint64_t sub_20A4E2D68()
{
  unint64_t result;

  result = qword_253EB49B8;
  if (!qword_253EB49B8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C3054, &type metadata for CoreODIConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_253EB49B8);
  }
  return result;
}

unint64_t sub_20A4E2DAC()
{
  unint64_t result;

  result = qword_2545FAF10;
  if (!qword_2545FAF10)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C302C, &type metadata for CoreODIConfig.URLs);
    atomic_store(result, (unint64_t *)&qword_2545FAF10);
  }
  return result;
}

unint64_t sub_20A4E2DF0()
{
  unint64_t result;

  result = qword_2545FAF18;
  if (!qword_2545FAF18)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C3004, &type metadata for CoreODIConfig.Configuration);
    atomic_store(result, (unint64_t *)&qword_2545FAF18);
  }
  return result;
}

unint64_t sub_20A4E2E34()
{
  unint64_t result;

  result = qword_253EB4A08;
  if (!qword_253EB4A08)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C2FDC, &type metadata for CoreODIConfig.URLs);
    atomic_store(result, (unint64_t *)&qword_253EB4A08);
  }
  return result;
}

unint64_t sub_20A4E2E78()
{
  unint64_t result;

  result = qword_253EB49E8;
  if (!qword_253EB49E8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C2FB4, &type metadata for CoreODIConfig.Configuration);
    atomic_store(result, (unint64_t *)&qword_253EB49E8);
  }
  return result;
}

_QWORD *sub_20A4E2EBC(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21]);
  return a1;
}

uint64_t sub_20A4E2F20(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253EB47C0);
    v10[0] = a2;
    v10[1] = a3;
    result = MEMORY[0x20BD26CEC](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for ConfigManager()
{
  return objc_opt_self();
}

uint64_t method lookup function for ConfigManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ConfigManager.config.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 112) + *(_QWORD *)(*(_QWORD *)v1 + 112));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_20A4597C0;
  return v6(a1);
}

uint64_t dispatch thunk of ConfigManager.setConfiguration(configDict:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t destroy for CoreODIConfig(uint64_t a1)
{
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 24) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + 208) != 1)
    swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CoreODIConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  _OWORD *v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  if (v5 == 1)
  {
    v6 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v6;
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    v7 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v7;
    v8 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v8;
    v9 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v9;
    v10 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v10;
  }
  else
  {
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v5;
    v11 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v11;
    v12 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = v12;
    v13 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = v13;
    v14 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = v14;
    v15 = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = v15;
    v16 = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = v16;
    v17 = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = v17;
    v18 = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 152) = v18;
    v19 = *(_QWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    *(_QWORD *)(a1 + 168) = v19;
    v20 = *(_QWORD *)(a2 + 184);
    *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 184) = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v21 = (_OWORD *)(a1 + 192);
  v22 = (_OWORD *)(a2 + 192);
  v23 = *(_QWORD *)(a2 + 208);
  if (v23 == 1)
  {
    v24 = *(_OWORD *)(a2 + 208);
    *v21 = *v22;
    *(_OWORD *)(a1 + 208) = v24;
    *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
  }
  else
  {
    *(_QWORD *)v21 = *(_QWORD *)v22;
    *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
    v25 = *(_QWORD *)(a2 + 216);
    *(_QWORD *)(a1 + 208) = v23;
    *(_QWORD *)(a1 + 216) = v25;
    *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
    swift_bridgeObjectRetain();
  }
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CoreODIConfig(uint64_t a1, uint64_t a2)
{
  __int128 *v4;
  __int128 *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 *v23;
  __int128 *v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  char v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (__int128 *)(a1 + 16);
  v5 = (__int128 *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  if (*(_QWORD *)(a1 + 24) == 1)
  {
    if (v6 == 1)
    {
      v7 = *v5;
      v8 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v8;
      *v4 = v7;
      v9 = *(_OWORD *)(a2 + 64);
      v10 = *(_OWORD *)(a2 + 80);
      v11 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 112) = v11;
      *(_OWORD *)(a1 + 64) = v9;
      *(_OWORD *)(a1 + 80) = v10;
      v12 = *(_OWORD *)(a2 + 128);
      v13 = *(_OWORD *)(a2 + 144);
      v14 = *(_OWORD *)(a2 + 176);
      *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
      *(_OWORD *)(a1 + 176) = v14;
      *(_OWORD *)(a1 + 128) = v12;
      *(_OWORD *)(a1 + 144) = v13;
    }
    else
    {
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v6 == 1)
  {
    sub_20A4E36C4(a1 + 16);
    v16 = *(_OWORD *)(a2 + 32);
    v15 = *(_OWORD *)(a2 + 48);
    *v4 = *v5;
    *(_OWORD *)(a1 + 32) = v16;
    *(_OWORD *)(a1 + 48) = v15;
    v17 = *(_OWORD *)(a2 + 112);
    v19 = *(_OWORD *)(a2 + 64);
    v18 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v17;
    *(_OWORD *)(a1 + 64) = v19;
    *(_OWORD *)(a1 + 80) = v18;
    v20 = *(_OWORD *)(a2 + 176);
    v22 = *(_OWORD *)(a2 + 128);
    v21 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v20;
    *(_OWORD *)(a1 + 128) = v22;
    *(_OWORD *)(a1 + 144) = v21;
  }
  else
  {
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v23 = (__int128 *)(a1 + 192);
  v24 = (__int128 *)(a2 + 192);
  v25 = *(_QWORD *)(a2 + 208);
  if (*(_QWORD *)(a1 + 208) == 1)
  {
    if (v25 == 1)
    {
      v26 = *v24;
      v27 = *(_OWORD *)(a2 + 208);
      *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
      *v23 = v26;
      *(_OWORD *)(a1 + 208) = v27;
    }
    else
    {
      v30 = *(_QWORD *)v24;
      *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
      *(_QWORD *)v23 = v30;
      *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
      v31 = *(_QWORD *)(a2 + 216);
      *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
      *(_QWORD *)(a1 + 216) = v31;
      swift_bridgeObjectRetain();
    }
  }
  else if (v25 == 1)
  {
    sub_20A4E36F0(a1 + 192);
    v28 = *(_BYTE *)(a2 + 224);
    v29 = *(_OWORD *)(a2 + 208);
    *v23 = *v24;
    *(_OWORD *)(a1 + 208) = v29;
    *(_BYTE *)(a1 + 224) = v28;
  }
  else
  {
    v32 = *(_QWORD *)v24;
    *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
    *(_QWORD *)v23 = v32;
    *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v33 = *(_QWORD *)(a2 + 216);
    *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
    *(_QWORD *)(a1 + 216) = v33;
  }
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
  return a1;
}

uint64_t sub_20A4E36C4(uint64_t a1)
{
  destroy for CoreODIConfig.URLs();
  return a1;
}

uint64_t sub_20A4E36F0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy241_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __n128 result;
  __int128 v12;
  __int128 v13;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  v5 = a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  v8 = a2[8];
  v9 = a2[9];
  v10 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  result = (__n128)a2[12];
  v12 = a2[13];
  v13 = a2[14];
  *(_BYTE *)(a1 + 240) = *((_BYTE *)a2 + 240);
  *(_OWORD *)(a1 + 208) = v12;
  *(_OWORD *)(a1 + 224) = v13;
  *(__n128 *)(a1 + 192) = result;
  return result;
}

uint64_t assignWithTake for CoreODIConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  __int128 v24;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 24) == 1)
    goto LABEL_4;
  v5 = *(_QWORD *)(a2 + 24);
  if (v5 == 1)
  {
    sub_20A4E36C4(a1 + 16);
LABEL_4:
    v6 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v6;
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    v7 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v7;
    v8 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v8;
    v9 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v9;
    v10 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v10;
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v12;
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v13;
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v14;
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v15;
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v16;
  swift_bridgeObjectRelease();
  v17 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v17;
  swift_bridgeObjectRelease();
  v18 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v18;
  swift_bridgeObjectRelease();
  v19 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v19;
  swift_bridgeObjectRelease();
  v20 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v20;
  swift_bridgeObjectRelease();
LABEL_6:
  v21 = (_QWORD *)(a1 + 192);
  v22 = (_QWORD *)(a2 + 192);
  if (*(_QWORD *)(a1 + 208) != 1)
  {
    v23 = *(_QWORD *)(a2 + 208);
    if (v23 != 1)
    {
      *v21 = *v22;
      *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
      *(_QWORD *)(a1 + 208) = v23;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
      *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
      goto LABEL_11;
    }
    sub_20A4E36F0(a1 + 192);
  }
  v24 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)v21 = *(_OWORD *)v22;
  *(_OWORD *)(a1 + 208) = v24;
  *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
LABEL_11:
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
  return a1;
}

uint64_t getEnumTagSinglePayload for CoreODIConfig(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 241))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CoreODIConfig(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 232) = 0;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 240) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 241) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 241) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for CoreODIConfig()
{
  return &type metadata for CoreODIConfig;
}

uint64_t destroy for CoreODIConfig.Configuration()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CoreODIConfig.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CoreODIConfig.Configuration(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 16) = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = a2[3];
  *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
  *(_QWORD *)(a1 + 24) = v5;
  return a1;
}

uint64_t assignWithTake for CoreODIConfig.Configuration(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for CoreODIConfig.Configuration(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CoreODIConfig.Configuration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for CoreODIConfig.Configuration()
{
  return &type metadata for CoreODIConfig.Configuration;
}

uint64_t storeEnumTagSinglePayload for CoreODIConfig.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_20A4E3C38 + 4 * byte_20A5C2DF1[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_20A4E3C6C + 4 * byte_20A5C2DEC[v4]))();
}

uint64_t sub_20A4E3C6C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A4E3C74(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A4E3C7CLL);
  return result;
}

uint64_t sub_20A4E3C88(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A4E3C90);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_20A4E3C94(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A4E3C9C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CoreODIConfig.CodingKeys()
{
  return &type metadata for CoreODIConfig.CodingKeys;
}

uint64_t destroy for CoreODIConfig.URLs()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for CoreODIConfig.URLs(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  v10 = a2[15];
  a1[14] = a2[14];
  a1[15] = v10;
  v11 = a2[17];
  a1[16] = a2[16];
  a1[17] = v11;
  v12 = a2[19];
  a1[18] = a2[18];
  a1[19] = v12;
  v13 = a2[21];
  a1[20] = a2[20];
  a1[21] = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for CoreODIConfig.URLs(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[14] = a2[14];
  a1[15] = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[16] = a2[16];
  a1[17] = a2[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[18] = a2[18];
  a1[19] = a2[19];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[20] = a2[20];
  a1[21] = a2[21];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy176_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  __int128 v8;
  __int128 v9;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  result = (__n128)a2[7];
  v8 = a2[8];
  v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(__n128 *)(a1 + 112) = result;
  *(_OWORD *)(a1 + 128) = v8;
  return result;
}

_QWORD *assignWithTake for CoreODIConfig.URLs(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_bridgeObjectRelease();
  v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  swift_bridgeObjectRelease();
  v11 = a2[15];
  a1[14] = a2[14];
  a1[15] = v11;
  swift_bridgeObjectRelease();
  v12 = a2[17];
  a1[16] = a2[16];
  a1[17] = v12;
  swift_bridgeObjectRelease();
  v13 = a2[19];
  a1[18] = a2[18];
  a1[19] = v13;
  swift_bridgeObjectRelease();
  v14 = a2[21];
  a1[20] = a2[20];
  a1[21] = v14;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CoreODIConfig.URLs(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 176))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CoreODIConfig.URLs(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 176) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 176) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for CoreODIConfig.URLs()
{
  return &type metadata for CoreODIConfig.URLs;
}

unint64_t sub_20A4E41A4()
{
  unint64_t result;

  result = qword_2545FAF30;
  if (!qword_2545FAF30)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C2F8C, &type metadata for CoreODIConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FAF30);
  }
  return result;
}

unint64_t sub_20A4E41EC()
{
  unint64_t result;

  result = qword_253EB49C8;
  if (!qword_253EB49C8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C2EFC, &type metadata for CoreODIConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_253EB49C8);
  }
  return result;
}

unint64_t sub_20A4E4234()
{
  unint64_t result;

  result = qword_253EB49C0;
  if (!qword_253EB49C0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C2F24, &type metadata for CoreODIConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_253EB49C0);
  }
  return result;
}

uint64_t sub_20A4E4278(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x42696C6F69766172 && a2 == 0xEE006C7255657361;
  if (v2 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000025 && a2 == 0x800000020A5E2260 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000020A5E2290 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000020A5E22B0 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000020A5E22D0 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000020A5E22F0 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000020A5E2310 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000020A5E2330 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000020A5E2350 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000020A5E2370 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000020A5E2390)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    v6 = sub_20A5B91AC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 10;
    else
      return 11;
  }
}

uint64_t sub_20A4E46A4@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char v117;

  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5238);
  v5 = *(_QWORD *)(v69 - 8);
  MEMORY[0x24BDAC7A8](v69, v6);
  v8 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4E55DC();
  sub_20A5B92F0();
  v72 = a1;
  if (v2)
  {
    v77 = v2;
    v74 = 0;
    v75 = 0;
    v73 = 0;
    v76 = 0;
    v70 = 0;
    v71 = 0;
    v10 = 0;
    v11 = 0;
    v78 = 0;
    v79 = 0;
    v12 = 0;
    v13 = 0;
    v80 = 0;
    v81 = 0;
    v14 = 0;
    v15 = 0;
    v82 = 0;
    v83 = 0;
    v16 = 0;
    v17 = 0;
LABEL_4:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v72);
    v95 = v17;
    v96 = v83;
    v97 = v16;
    v98 = v82;
    v99 = v15;
    v100 = v81;
    v101 = v14;
    v102 = v80;
    v103 = v13;
    v104 = v79;
    v105 = v12;
    v106 = v78;
    v107 = v11;
    v108 = v71;
    v109 = v10;
    v110 = v70;
    v111 = v76;
    v112 = v74;
    v113 = v73;
    v114 = v75;
    v116 = 0;
    v115 = 0;
    return sub_20A4E56C8((uint64_t)&v95);
  }
  LOBYTE(v95) = 0;
  v9 = sub_20A5B9038();
  v20 = v19;
  v68 = v9;
  LOBYTE(v95) = 1;
  swift_bridgeObjectRetain();
  v21 = sub_20A5B9038();
  v83 = v20;
  v67 = v21;
  LOBYTE(v95) = 2;
  v23 = v22;
  swift_bridgeObjectRetain();
  v24 = sub_20A5B9038();
  v82 = v23;
  v66 = v24;
  LOBYTE(v95) = 3;
  v26 = v25;
  swift_bridgeObjectRetain();
  v27 = sub_20A5B9038();
  v81 = v26;
  v65 = v27;
  LOBYTE(v95) = 4;
  v29 = v28;
  swift_bridgeObjectRetain();
  v30 = sub_20A5B9038();
  v80 = v29;
  v64 = v30;
  LOBYTE(v95) = 5;
  v32 = v31;
  swift_bridgeObjectRetain();
  v33 = sub_20A5B9038();
  v79 = v32;
  v63 = v33;
  LOBYTE(v95) = 6;
  v35 = v34;
  swift_bridgeObjectRetain();
  v36 = sub_20A5B9038();
  v78 = v35;
  v62 = v36;
  LOBYTE(v95) = 7;
  v38 = v37;
  swift_bridgeObjectRetain();
  v39 = sub_20A5B9038();
  v71 = v38;
  v61 = v39;
  LOBYTE(v95) = 8;
  v41 = v40;
  swift_bridgeObjectRetain();
  v76 = sub_20A5B9038();
  v77 = 0;
  v70 = v41;
  LOBYTE(v95) = 9;
  v74 = v42;
  swift_bridgeObjectRetain();
  v43 = v77;
  v73 = sub_20A5B9038();
  v75 = v44;
  v77 = v43;
  if (v43)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v69);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v75 = 0;
    v73 = 0;
LABEL_9:
    v16 = v67;
    v17 = v68;
    v14 = v65;
    v15 = v66;
    v12 = v63;
    v13 = v64;
    v10 = v61;
    v11 = v62;
    goto LABEL_4;
  }
  v117 = 10;
  swift_bridgeObjectRetain();
  v45 = v77;
  v46 = sub_20A5B9038();
  v77 = v45;
  if (v45)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v69);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  v48 = v46;
  v49 = v47;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v69);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v84 = v68;
  *((_QWORD *)&v84 + 1) = v83;
  *(_QWORD *)&v85 = v67;
  *((_QWORD *)&v85 + 1) = v82;
  *(_QWORD *)&v86 = v66;
  *((_QWORD *)&v86 + 1) = v81;
  *(_QWORD *)&v87 = v65;
  *((_QWORD *)&v87 + 1) = v80;
  *(_QWORD *)&v88 = v64;
  *((_QWORD *)&v88 + 1) = v79;
  *(_QWORD *)&v89 = v63;
  *((_QWORD *)&v89 + 1) = v78;
  *(_QWORD *)&v90 = v62;
  *((_QWORD *)&v90 + 1) = v38;
  *(_QWORD *)&v91 = v61;
  *((_QWORD *)&v91 + 1) = v41;
  v50 = v74;
  *(_QWORD *)&v92 = v76;
  *((_QWORD *)&v92 + 1) = v74;
  *(_QWORD *)&v93 = v73;
  *((_QWORD *)&v93 + 1) = v75;
  v60 = v48;
  *(_QWORD *)&v94 = v48;
  *((_QWORD *)&v94 + 1) = v49;
  sub_20A4E5794((uint64_t)&v84);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v51 = v81;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v52 = v78;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v53 = v75;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v72);
  v95 = v68;
  v96 = v83;
  v97 = v67;
  v98 = v82;
  v99 = v66;
  v100 = v51;
  v101 = v65;
  v102 = v80;
  v103 = v64;
  v104 = v79;
  v105 = v63;
  v106 = v52;
  v107 = v62;
  v108 = v38;
  v109 = v61;
  v110 = v41;
  v111 = v76;
  v112 = v50;
  v113 = v73;
  v114 = v53;
  v115 = v60;
  v116 = v49;
  result = sub_20A4E56C8((uint64_t)&v95);
  v54 = v93;
  a2[8] = v92;
  a2[9] = v54;
  a2[10] = v94;
  v55 = v89;
  a2[4] = v88;
  a2[5] = v55;
  v56 = v91;
  a2[6] = v90;
  a2[7] = v56;
  v57 = v85;
  *a2 = v84;
  a2[1] = v57;
  v58 = v87;
  a2[2] = v86;
  a2[3] = v58;
  return result;
}

uint64_t sub_20A4E5044(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000018 && a2 == 0x800000020A5E23B0 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x800000020A5E23D0 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6B6E756843676F6CLL && a2 == 0xEC000000657A6953)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_20A5B91AC();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_20A4E51A8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  char v16;
  char v17;
  uint64_t result;
  uint64_t v19;
  _QWORD v20[2];
  char v21;
  char v22;
  char v23;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5230);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4E5620();
  sub_20A5B92F0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v23 = 0;
    v10 = sub_20A5B9050();
    v12 = v11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_253EB50D0);
    v22 = 1;
    sub_20A4E5664(&qword_253EB50D8, MEMORY[0x24BEE0D38], MEMORY[0x24BEE1400], MEMORY[0x24BEE04E0]);
    sub_20A5B9068();
    v20[0] = a2;
    v13 = v20[1];
    v21 = 2;
    v14 = sub_20A5B905C();
    v15 = *(void (**)(char *, uint64_t))(v6 + 8);
    v17 = v16;
    v15(v9, v5);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    v19 = v20[0];
    *(_QWORD *)v20[0] = v10;
    *(_BYTE *)(v19 + 8) = v12 & 1;
    *(_QWORD *)(v19 + 16) = v13;
    *(_QWORD *)(v19 + 24) = v14;
    *(_BYTE *)(v19 + 32) = v17 & 1;
  }
  return result;
}

uint64_t sub_20A4E53AC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65566E6F6D656164 && a2 == 0xED00006E6F697372;
  if (v2 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1936487029 && a2 == 0xE400000000000000 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x72756769666E6F63 && a2 == 0xED00006E6F697461 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7365727574616566 && a2 == 0xE800000000000000 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000020A5E2240)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_20A5B91AC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

unint64_t sub_20A4E55DC()
{
  unint64_t result;

  result = qword_253EB49F0;
  if (!qword_253EB49F0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C3264, &type metadata for CoreODIConfig.URLs.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_253EB49F0);
  }
  return result;
}

unint64_t sub_20A4E5620()
{
  unint64_t result;

  result = qword_253EB49D0;
  if (!qword_253EB49D0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C3214, &type metadata for CoreODIConfig.Configuration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_253EB49D0);
  }
  return result;
}

uint64_t sub_20A4E5664(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253EB50D0);
    v10[0] = a2;
    v10[1] = a3;
    result = MEMORY[0x20BD26CEC](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A4E56C8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_20A4E5794(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

double sub_20A4E5860(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)a1 = xmmword_20A5BCDD0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_BYTE *)(a1 + 240) = 0;
  return result;
}

unint64_t sub_20A4E5894()
{
  unint64_t result;

  result = qword_253EB4A10;
  if (!qword_253EB4A10)
  {
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for CoreODIConfig, &type metadata for CoreODIConfig);
    atomic_store(result, (unint64_t *)&qword_253EB4A10);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CoreODIConfig.Configuration.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_20A4E5924 + 4 * byte_20A5C2DFB[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_20A4E5958 + 4 * byte_20A5C2DF6[v4]))();
}

uint64_t sub_20A4E5958(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A4E5960(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A4E5968);
  return result;
}

uint64_t sub_20A4E5974(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A4E597CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_20A4E5980(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A4E5988(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CoreODIConfig.Configuration.CodingKeys()
{
  return &type metadata for CoreODIConfig.Configuration.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ODIServerRepo(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF6)
    goto LABEL_17;
  if (a2 + 10 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 10) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 10;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 10;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 10;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xB;
  v8 = v6 - 11;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CoreODIConfig.URLs.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_20A4E5A80 + 4 * byte_20A5C2E05[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_20A4E5AB4 + 4 * byte_20A5C2E00[v4]))();
}

uint64_t sub_20A4E5AB4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A4E5ABC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A4E5AC4);
  return result;
}

uint64_t sub_20A4E5AD0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A4E5AD8);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_20A4E5ADC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A4E5AE4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CoreODIConfig.URLs.CodingKeys()
{
  return &type metadata for CoreODIConfig.URLs.CodingKeys;
}

unint64_t sub_20A4E5B04()
{
  unint64_t result;

  result = qword_2545FAF58;
  if (!qword_2545FAF58)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C3134, &type metadata for CoreODIConfig.URLs.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FAF58);
  }
  return result;
}

unint64_t sub_20A4E5B4C()
{
  unint64_t result;

  result = qword_2545FAF60;
  if (!qword_2545FAF60)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C31EC, &type metadata for CoreODIConfig.Configuration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FAF60);
  }
  return result;
}

unint64_t sub_20A4E5B94()
{
  unint64_t result;

  result = qword_253EB49E0;
  if (!qword_253EB49E0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C315C, &type metadata for CoreODIConfig.Configuration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_253EB49E0);
  }
  return result;
}

unint64_t sub_20A4E5BDC()
{
  unint64_t result;

  result = qword_253EB49D8;
  if (!qword_253EB49D8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C3184, &type metadata for CoreODIConfig.Configuration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_253EB49D8);
  }
  return result;
}

unint64_t sub_20A4E5C24()
{
  unint64_t result;

  result = qword_253EB4A00;
  if (!qword_253EB4A00)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C30A4, &type metadata for CoreODIConfig.URLs.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_253EB4A00);
  }
  return result;
}

unint64_t sub_20A4E5C6C()
{
  unint64_t result;

  result = qword_253EB49F8;
  if (!qword_253EB49F8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C30CC, &type metadata for CoreODIConfig.URLs.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_253EB49F8);
  }
  return result;
}

uint64_t sub_20A4E5CB0(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v5;

  MEMORY[0x24BDAC7A8](a1, a1);
  v2 = (char *)&v5 - v1;
  (*(void (**)(char *))(v3 + 16))((char *)&v5 - v1);
  return sub_20A4E5D88((uint64_t)v2);
}

uint64_t sub_20A4E5D24@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 112);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 16))(a1, v4);
}

uint64_t sub_20A4E5D88(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 112);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 40))(v4, a1);
  return swift_endAccess();
}

uint64_t sub_20A4E5DF4()
{
  uint64_t v0;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 136));
  swift_bridgeObjectRetain();
  sub_20A5B899C();
  return v2;
}

uint64_t sub_20A4E5E50()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 152));
}

uint64_t sub_20A4E5E60(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 152)) = result;
  return result;
}

uint64_t ODIConfigurationManager.__allocating_init(fallback:defaultsKey:maxAge:urlSession:defaults:updateRequestClosure:)(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, double a8)
{
  uint64_t v16;

  v16 = swift_allocObject();
  ODIConfigurationManager.init(fallback:defaultsKey:maxAge:urlSession:defaults:updateRequestClosure:)(a1, a2, a3, a4, a5, a6, a7, a8);
  return v16;
}

uint64_t *ODIConfigurationManager.init(fallback:defaultsKey:maxAge:urlSession:defaults:updateRequestClosure:)(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, double a8)
{
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void *v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v9 = v8;
  v44 = a6;
  v45 = a7;
  v43 = *v9;
  v16 = *(_QWORD *)(v43 + 80);
  v17 = sub_20A5B8D38();
  v41 = *(_QWORD *)(v17 - 8);
  v42 = v17;
  v19 = MEMORY[0x24BDAC7A8](v17, v18);
  v21 = (char *)&v39 - v20;
  v22 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v19, v23);
  v25 = (char *)&v39 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_defaultActor_initialize();
  *((_BYTE *)v9 + *(_QWORD *)(*v9 + 152)) = 0;
  (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v25, a1, v16);
  v46 = a2;
  v47 = a3;
  v26 = (void *)sub_20A5B88F4();
  v27 = objc_msgSend(a5, sel_dataForKey_, v26);

  if (v27)
  {
    v39 = a4;
    v40 = a5;
    v28 = sub_20A5B8564();
    v30 = v29;

    sub_20A5B8264();
    swift_allocObject();
    sub_20A5B8258();
    sub_20A5B824C();
    v31 = *(void (**)(char *, uint64_t))(v22 + 8);
    v31(a1, v16);
    swift_release();
    sub_20A44BD90(v28, v30);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v21, 0, 1, v16);
    v31(v25, v16);
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v25, v21, v16);
    a4 = v39;
    a5 = v40;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(a1, v16);
  }
  v33 = v46;
  v32 = v47;
  v35 = v44;
  v34 = v45;
  (*(void (**)(uint64_t, char *, uint64_t))(v22 + 32))((uint64_t)v9 + *(_QWORD *)(*v9 + 112), v25, v16);
  v36 = (uint64_t *)((char *)v9 + *(_QWORD *)(*v9 + 128));
  *v36 = v35;
  v36[1] = v34;
  *(double *)((char *)v9 + *(_QWORD *)(*v9 + 120)) = a8;
  v37 = (uint64_t *)((char *)v9 + *(_QWORD *)(*v9 + 136));
  *v37 = v33;
  v37[1] = v32;
  *(uint64_t *)((char *)v9 + *(_QWORD *)(*v9 + 144)) = a4;
  *(uint64_t *)((char *)v9 + *(_QWORD *)(*v9 + 160)) = (uint64_t)a5;
  return v9;
}

uint64_t sub_20A4E61D8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[2] = v0;
  v2 = sub_20A5B8630();
  v1[3] = v2;
  v1[4] = *(_QWORD *)(v2 - 8);
  v1[5] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A4E6238()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  _QWORD *v12;

  v2 = *(_QWORD *)(v0 + 32);
  v1 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = *(void **)(v3 + *(_QWORD *)(*(_QWORD *)v3 + 160));
  sub_20A4E5DF4();
  v6 = (void *)sub_20A5B88F4();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_doubleForKey_, v6);
  v8 = v7;

  v9 = v8 + *(double *)(v3 + *(_QWORD *)(*(_QWORD *)v3 + 120));
  sub_20A5B8624();
  sub_20A5B8594();
  v11 = v10;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v4);
  if (v9 >= v11)
  {
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v12 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 48) = v12;
    *v12 = v0;
    v12[1] = sub_20A4E6354;
    return sub_20A4E63A0();
  }
}

uint64_t sub_20A4E6354()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_20A4E63A0()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1[13] = v0;
  v2 = *v0;
  v1[14] = *v0;
  v3 = sub_20A5B8630();
  v1[15] = v3;
  v1[16] = *(_QWORD *)(v3 - 8);
  v1[17] = swift_task_alloc();
  v4 = *(_QWORD *)(v2 + 80);
  v1[18] = v4;
  v1[19] = *(_QWORD *)(v4 - 8);
  v1[20] = swift_task_alloc();
  v1[21] = swift_task_alloc();
  v5 = sub_20A5B8240();
  v1[22] = v5;
  v1[23] = *(_QWORD *)(v5 - 8);
  v1[24] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A4E6464()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v12;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 152);
  if ((*(_BYTE *)(v1 + v2) & 1) != 0)
  {
    if (qword_253EB5048 != -1)
      swift_once();
    v3 = sub_20A5B8804();
    __swift_project_value_buffer(v3, (uint64_t)qword_253EBC888);
    v4 = sub_20A5B87EC();
    v5 = sub_20A5B8C48();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_20A443000, v4, v5, "Config update already in progress - skipping requested update", v6, 2u);
      MEMORY[0x20BD26DB8](v6, -1, -1);
    }
    v7 = *(_QWORD *)(v0 + 144);
    v8 = *(_QWORD *)(v0 + 112);

    v9 = type metadata accessor for ODIConfigurationManager.ConfigManagerError(0, v7, *(_QWORD *)(v8 + 88), *(_QWORD *)(v8 + 96));
    MEMORY[0x20BD26CEC](&protocol conformance descriptor for ODIConfigurationManager<A>.ConfigManagerError, v9);
    swift_allocError();
    *(_QWORD *)v10 = 0;
    *(_WORD *)(v10 + 8) = -16384;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_BYTE *)(v1 + v2) = 1;
    (*(void (**)(void))(v1 + *(_QWORD *)(*(_QWORD *)v1 + 128)))();
    v12 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 200) = v12;
    *v12 = v0;
    v12[1] = sub_20A4E6650;
    return sub_20A5B8C30();
  }
}

uint64_t sub_20A4E6650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v5 = (_QWORD *)*v4;
  v5[26] = a1;
  v5[27] = a2;
  v5[28] = a3;
  v5[29] = v3;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A4E66C0()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  int v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  __int16 v26;
  unint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int16 v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  uint64_t (*v49)(void);
  unint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  BOOL v70;
  uint64_t v71;
  __int16 v72;
  uint64_t v73;
  char v74;
  char v75;

  objc_opt_self();
  if (swift_dynamicCastObjCClass())
  {
    objc_opt_self();
    v1 = swift_dynamicCastObjCClass();
    if (v1)
    {
      v2 = (void *)v1;
      v3 = (void *)v0[28];
      sub_20A45964C(v0[26], v0[27]);
      v4 = v3;
      sub_20A48B058((uint64_t)objc_msgSend(v2, sel_statusCode), (uint64_t)&v69);

      v5 = v69;
      v6 = v70;
    }
    else
    {
      sub_20A45964C(v0[26], v0[27]);
      v5 = 1;
      v6 = 1;
    }
    v71 = 0;
    v72 = 1;
    v73 = v5;
    v74 = v6;
    v75 = 0;
    if ((_s17CoreODIEssentials14HTTPStatusCodeO2eeoiySbAC_ACtFZ_0(&v73, (uint64_t)&v71) & 1) == 0)
    {
      sub_20A44BD90(v0[26], v0[27]);
      if (qword_253EB5048 != -1)
        swift_once();
      v19 = sub_20A5B8804();
      __swift_project_value_buffer(v19, (uint64_t)qword_253EBC888);
      v20 = sub_20A5B87EC();
      v21 = sub_20A5B8C54();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc();
        v23 = swift_slowAlloc();
        *(_DWORD *)v22 = 136315138;
        v73 = v23;
        v69 = v5;
        v70 = v6 != 0;
        v24 = HTTPStatusCode.description.getter();
        v0[12] = sub_20A503EE0(v24, v25, &v73);
        sub_20A5B8D50();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_20A443000, v20, v21, "Config update response not success: %s", v22, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x20BD26DB8](v23, -1, -1);
        MEMORY[0x20BD26DB8](v22, -1, -1);
      }

      v26 = v6;
      v27 = v0[27];
      v28 = (void *)v0[28];
      v29 = v0[26];
      v30 = v0[23];
      v67 = v0[24];
      v31 = v0[22];
      v32 = v0[13];
      v33 = v26 | 0x4000;
      v34 = type metadata accessor for ODIConfigurationManager.ConfigManagerError(0, v0[18], *(_QWORD *)(v0[14] + 88), *(_QWORD *)(v0[14] + 96));
      MEMORY[0x20BD26CEC](&protocol conformance descriptor for ODIConfigurationManager<A>.ConfigManagerError, v34);
      swift_allocError();
      *(_QWORD *)v35 = v5;
      *(_WORD *)(v35 + 8) = v33;
      swift_willThrow();

      sub_20A44BD90(v29, v27);
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v67, v31);
      goto LABEL_20;
    }
  }
  else
  {
    sub_20A45964C(v0[26], v0[27]);
  }
  v7 = (void *)v0[29];
  v8 = v0[14];
  sub_20A5B8264();
  swift_allocObject();
  sub_20A5B8258();
  v9 = *(_QWORD *)(v8 + 88);
  sub_20A5B824C();
  if (v7)
  {
    sub_20A44BD90(v0[26], v0[27]);
    swift_release();
    if (qword_253EB5048 != -1)
      swift_once();
    v65 = v9;
    v10 = sub_20A5B8804();
    __swift_project_value_buffer(v10, (uint64_t)qword_253EBC888);
    v11 = v7;
    v12 = v7;
    v13 = sub_20A5B87EC();
    v14 = sub_20A5B8C54();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      v69 = v16;
      *(_DWORD *)v15 = 136315138;
      swift_getErrorValue();
      v17 = sub_20A5B923C();
      v0[11] = sub_20A503EE0(v17, v18, &v69);
      sub_20A5B8D50();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_20A443000, v13, v14, "Config decode error: %s", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x20BD26DB8](v16, -1, -1);
      MEMORY[0x20BD26DB8](v15, -1, -1);
    }
    else
    {

    }
    v50 = v0[27];
    v51 = (void *)v0[28];
    v52 = v0[26];
    v54 = v0[23];
    v53 = v0[24];
    v55 = v0[22];
    v32 = v0[13];
    v56 = type metadata accessor for ODIConfigurationManager.ConfigManagerError(0, v0[18], v65, *(_QWORD *)(v0[14] + 96));
    MEMORY[0x20BD26CEC](&protocol conformance descriptor for ODIConfigurationManager<A>.ConfigManagerError, v56);
    swift_allocError();
    *(_QWORD *)v57 = v7;
    *(_WORD *)(v57 + 8) = 0x8000;
    swift_willThrow();

    sub_20A44BD90(v52, v50);
    (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v53, v55);
LABEL_20:
    *(_BYTE *)(v32 + *(_QWORD *)(*(_QWORD *)v32 + 152)) = 0;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v49 = (uint64_t (*)(void))v0[1];
    return v49();
  }
  v36 = v0[27];
  v37 = v0[26];
  v64 = v0[23];
  v38 = v0[21];
  v66 = v0[22];
  v68 = v0[24];
  v39 = v0[19];
  v40 = v0[20];
  v62 = v39;
  v63 = (void *)v0[28];
  v41 = v0[17];
  v42 = v0[18];
  v59 = v0[16];
  v60 = v0[15];
  v61 = v42;
  v43 = v0[13];
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16))(v40, v38, v42);
  sub_20A4E5D88(v40);
  v44 = *(void **)(v43 + *(_QWORD *)(*(_QWORD *)v43 + 160));
  v45 = (void *)sub_20A5B8540();
  sub_20A44BD90(v37, v36);
  v46 = (void *)sub_20A5B88F4();
  objc_msgSend(v44, sel_setObject_forKey_, v45, v46);

  sub_20A5B8624();
  sub_20A5B8594();
  (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v41, v60);
  v47 = (void *)sub_20A5B8BD0();
  sub_20A4E5DF4();
  v48 = (void *)sub_20A5B88F4();
  swift_bridgeObjectRelease();
  objc_msgSend(v44, sel_setObject_forKey_, v47, v48);

  sub_20A44BD90(v37, v36);
  (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v38, v61);
  (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v68, v66);
  *(_BYTE *)(v43 + *(_QWORD *)(*(_QWORD *)v43 + 152)) = 0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v49 = (uint64_t (*)(void))v0[1];
  return v49();
}

uint64_t sub_20A4E6E00()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void *v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  if (qword_253EB5048 != -1)
    swift_once();
  v1 = *(void **)(v0 + 232);
  v2 = sub_20A5B8804();
  __swift_project_value_buffer(v2, (uint64_t)qword_253EBC888);
  v3 = v1;
  v4 = v1;
  v5 = sub_20A5B87EC();
  v6 = sub_20A5B8C54();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 232);
  if (v7)
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v21 = v10;
    *(_DWORD *)v9 = 136315138;
    swift_getErrorValue();
    v11 = sub_20A5B923C();
    *(_QWORD *)(v0 + 64) = sub_20A503EE0(v11, v12, &v21);
    sub_20A5B8D50();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_20A443000, v5, v6, "Config update request failed: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x20BD26DB8](v10, -1, -1);
    MEMORY[0x20BD26DB8](v9, -1, -1);
  }
  else
  {

  }
  v13 = *(_QWORD *)(v0 + 232);
  v15 = *(_QWORD *)(v0 + 184);
  v14 = *(_QWORD *)(v0 + 192);
  v16 = *(_QWORD *)(v0 + 176);
  v17 = *(_QWORD *)(v0 + 104);
  v18 = type metadata accessor for ODIConfigurationManager.ConfigManagerError(0, *(_QWORD *)(v0 + 144), *(_QWORD *)(*(_QWORD *)(v0 + 112) + 88), *(_QWORD *)(*(_QWORD *)(v0 + 112) + 96));
  MEMORY[0x20BD26CEC](&protocol conformance descriptor for ODIConfigurationManager<A>.ConfigManagerError, v18);
  swift_allocError();
  *(_QWORD *)v19 = v13;
  *(_WORD *)(v19 + 8) = 0;
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  *(_BYTE *)(v17 + *(_QWORD *)(*(_QWORD *)v17 + 152)) = 0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4E7080()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_20A4E7098()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;

  v1 = *(void **)(*(_QWORD *)(v0 + 16) + *(_QWORD *)(**(_QWORD **)(v0 + 16) + 160));
  v2 = (void *)sub_20A5B88F4();
  objc_msgSend(v1, sel_removeObjectForKey_, v2);

  sub_20A4E5DF4();
  v3 = (void *)sub_20A5B88F4();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_removeObjectForKey_, v3);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ODIConfigurationManager.deinit()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 112));
  swift_release();
  swift_bridgeObjectRelease();

  swift_defaultActor_destroy();
  return v0;
}

uint64_t ODIConfigurationManager.__deallocating_deinit()
{
  ODIConfigurationManager.deinit();
  return swift_defaultActor_deallocate();
}

uint64_t ODIConfigurationManager.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_20A4E71D4()
{
  return ODIConfigurationManager.unownedExecutor.getter();
}

uint64_t sub_20A4E71EC@<X0>(uint64_t a1@<X8>)
{
  return sub_20A4E5D24(a1);
}

uint64_t sub_20A4E7210()
{
  return 24;
}

__n128 sub_20A4E721C(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_20A4E7230()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for ODIConfigurationManager(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ODIConfigurationManager);
}

uint64_t method lookup function for ODIConfigurationManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ODIConfigurationManager.config.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of ODIConfigurationManager.__allocating_init(fallback:defaultsKey:maxAge:urlSession:defaults:updateRequestClosure:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 224))();
}

uint64_t dispatch thunk of ODIConfigurationManager.updateIfNeeded()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 232) + *(_QWORD *)(*(_QWORD *)v0 + 232));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_20A4597C0;
  return v4();
}

uint64_t dispatch thunk of ODIConfigurationManager.clearStoredData()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 248) + *(_QWORD *)(*(_QWORD *)v0 + 248));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_20A4597C0;
  return v4();
}

uint64_t sub_20A4E73C8(uint64_t a1, uint64_t a2)
{
  id v3;
  unsigned __int16 v4;

  v3 = *(id *)a2;
  v4 = *(_WORD *)(a2 + 8);
  sub_20A4E740C(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_WORD *)(a1 + 8) = v4;
  return a1;
}

id sub_20A4E740C(id result, unsigned int a2)
{
  if (((a2 >> 14) & 1 | 2) == 2)
    return result;
  return result;
}

void sub_20A4E7424(uint64_t a1)
{
  sub_20A4E7434(*(id *)a1, *(unsigned __int16 *)(a1 + 8));
}

void sub_20A4E7434(id a1, unsigned int a2)
{
  if (((a2 >> 14) & 1 | 2) == 2)

}

uint64_t sub_20A4E744C(uint64_t a1, uint64_t a2)
{
  id v3;
  unsigned __int16 v4;
  void *v5;
  unsigned int v6;

  v3 = *(id *)a2;
  v4 = *(_WORD *)(a2 + 8);
  sub_20A4E740C(*(id *)a2, v4);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(unsigned __int16 *)(a1 + 8);
  *(_WORD *)(a1 + 8) = v4;
  sub_20A4E7434(v5, v6);
  return a1;
}

uint64_t sub_20A4E749C(uint64_t a1, uint64_t a2)
{
  __int16 v3;
  void *v4;
  unsigned int v5;

  v3 = *(_WORD *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(unsigned __int16 *)(a1 + 8);
  *(_WORD *)(a1 + 8) = v3;
  sub_20A4E7434(v4, v5);
  return a1;
}

uint64_t sub_20A4E74D8(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7D && *(_BYTE *)(a1 + 10))
    return (*(_DWORD *)a1 + 125);
  v3 = ((*(unsigned __int16 *)(a1 + 8) >> 7) & 0x7C | (*(unsigned __int16 *)(a1 + 8) >> 14)) ^ 0x7F;
  if (v3 >= 0x7C)
    v3 = -1;
  return v3 + 1;
}

uint64_t sub_20A4E752C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7C)
  {
    *(_WORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 125;
    if (a3 >= 0x7D)
      *(_BYTE *)(result + 10) = 1;
  }
  else
  {
    if (a3 >= 0x7D)
      *(_BYTE *)(result + 10) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_WORD *)(result + 8) = (((-a2 >> 2) & 0x1F) - 32 * (_WORD)a2) << 9;
    }
  }
  return result;
}

uint64_t sub_20A4E7580(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int16 *)(a1 + 8) >> 14;
  if (v1 == 3)
    return (*(_DWORD *)a1 + 3);
  else
    return v1;
}

uint64_t sub_20A4E759C(uint64_t result)
{
  *(_WORD *)(result + 8) &= 0x3FFFu;
  return result;
}

uint64_t sub_20A4E75AC(uint64_t result, unsigned int a2)
{
  if (a2 < 3)
  {
    *(_WORD *)(result + 8) = *(_WORD *)(result + 8) & 0x1FF | ((_WORD)a2 << 14);
  }
  else
  {
    *(_QWORD *)result = a2 - 3;
    *(_WORD *)(result + 8) = -16384;
  }
  return result;
}

uint64_t type metadata accessor for ODIConfigurationManager.ConfigManagerError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ODIConfigurationManager.ConfigManagerError);
}

uint64_t sub_20A4E75E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[4];

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB5180);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_20A5B8B64();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = a1;
  v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  swift_retain();
  if (v9 == 1)
  {
    sub_20A44CE2C((uint64_t)v5, (uint64_t *)&unk_253EB5180);
    v10 = 0;
    v11 = 0;
  }
  else
  {
    sub_20A5B8B58();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
    if (v8[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v10 = sub_20A5B8AF8();
      v11 = v12;
      swift_unknownObjectRelease();
    }
    else
    {
      v10 = 0;
      v11 = 0;
    }
  }
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = &unk_2545FB0A0;
  *(_QWORD *)(v13 + 24) = v8;
  if (v11 | v10)
  {
    v15[0] = 0;
    v15[1] = 0;
    v15[2] = v10;
    v15[3] = v11;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_20A4E77BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t *v9;
  unint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5178);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v1 + 112) == 1)
  {
    *(_BYTE *)(v1 + 112) = 0;
    return sub_20A5B8B10();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, a1, v3);
    v9 = (unint64_t *)(v1 + 120);
    swift_beginAccess();
    v10 = *(_QWORD *)(v1 + 120);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v1 + 120) = v10;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v10 = sub_20A4701C0(0, *(_QWORD *)(v10 + 16) + 1, 1, v10);
      *v9 = v10;
    }
    v13 = *(_QWORD *)(v10 + 16);
    v12 = *(_QWORD *)(v10 + 24);
    if (v13 >= v12 >> 1)
    {
      v10 = sub_20A4701C0(v12 > 1, v13 + 1, 1, v10);
      *v9 = v10;
    }
    *(_QWORD *)(v10 + 16) = v13 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v10+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v13, v7, v3);
    return swift_endAccess();
  }
}

uint64_t sub_20A4E7920()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  unint64_t v13;
  void (*v14)(_BYTE *, unint64_t, uint64_t);
  _BYTE v15[24];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB090);
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5178);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = &v15[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = v0 + 120;
  result = swift_beginAccess();
  v12 = *(_QWORD *)(v0 + 120);
  if (*(_QWORD *)(v12 + 16))
  {
    v13 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v14 = *(void (**)(_BYTE *, unint64_t, uint64_t))(v6 + 16);
    v14(v9, v12 + v13, v5);
    result = swift_beginAccess();
    if (*(_QWORD *)(*(_QWORD *)v10 + 16))
    {
      v14(v4, *(_QWORD *)v10 + v13, v5);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
      result = sub_20A44CE2C((uint64_t)v4, &qword_2545FB090);
      if (*(_QWORD *)(*(_QWORD *)v10 + 16))
      {
        sub_20A513B0C(0, 1);
        swift_endAccess();
        sub_20A5B8B10();
        return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  else
  {
    *(_BYTE *)(v0 + 112) = 1;
  }
  return result;
}

uint64_t sub_20A4E7ABC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  uint64_t v16;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5178);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4, v7);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB5180);
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_20A5B8B64();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  v13 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v14 = (char *)swift_allocObject();
  *((_QWORD *)v14 + 2) = 0;
  *((_QWORD *)v14 + 3) = 0;
  *((_QWORD *)v14 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v14[v13], (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  swift_retain();
  sub_20A4C69D8((uint64_t)v11, (uint64_t)&unk_2545FB0B0, (uint64_t)v14);
  return swift_release();
}

uint64_t sub_20A4E7C04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 16) = a4;
  *(_QWORD *)(v5 + 24) = a5;
  return swift_task_switch();
}

uint64_t sub_20A4E7C1C()
{
  uint64_t v0;

  sub_20A4E77BC(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for AsyncWorkQueue()
{
  return objc_opt_self();
}

uint64_t sub_20A4E7C6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch();
}

uint64_t sub_20A4E7C84()
{
  uint64_t v0;

  sub_20A4E7920();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4E7CB4()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20A4E7CE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_20A45A37C;
  v3[2] = v2;
  return swift_task_switch();
}

uint64_t sub_20A4E7D40()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20A4E7D64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_20A4597C0;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_2545FAC08 + dword_2545FAC08))(a1, v4);
}

uint64_t sub_20A4E7DD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5178);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_20A4E7E54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_253EB5178) - 8) + 80);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = v0 + ((v2 + 40) & ~v2);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_20A4597C0;
  v5[2] = v3;
  v5[3] = v4;
  return swift_task_switch();
}

uint64_t sub_20A4E7ED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a6 + 8)
                                                                                     + *(_QWORD *)(a6 + 8));
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_20A4597C0;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_20A4E7F74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[19] = a3;
  v4[20] = a4;
  v4[17] = a1;
  v4[18] = a2;
  return swift_task_switch();
}

uint64_t sub_20A4E7F90()
{
  _QWORD *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = v0[18];
  v2 = objc_msgSend(objc_allocWithZone((Class)ODNServices), sel_init);
  v0[21] = v2;
  v3 = sub_20A5B88F4();
  v0[22] = v3;
  sub_20A4D4D24(v1);
  v4 = sub_20A5B887C();
  v0[23] = v4;
  swift_bridgeObjectRelease();
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_20A4E80B0;
  v5 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v6 = v0 + 10;
  v6[1] = 0x40000000;
  v6[2] = sub_20A4E82D8;
  v6[3] = &block_descriptor_12;
  v6[4] = v5;
  objc_msgSend(v2, sel_ofLBc0SV56ddaijH_i7D0Lridvo8oYoNd_completion_, v3, v4, v6);
  return swift_continuation_await();
}

uint64_t sub_20A4E80B0()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 192) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_20A4E8110()
{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = *(void **)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 120);

  sub_20A5B8264();
  swift_allocObject();
  sub_20A5B8258();
  type metadata accessor for PregeneratedAssessment();
  sub_20A4E8378();
  sub_20A5B824C();
  v4 = *(void **)(v0 + 168);
  swift_release();
  sub_20A44BD90(v3, v2);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4E81F8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  unsigned __int8 v5[9];

  v1 = *(void **)(v0 + 184);
  v2 = *(void **)(v0 + 192);
  v3 = *(void **)(v0 + 176);
  swift_willThrow();

  v5[0] = -100;
  ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000024, 0x800000020A5E24B0, 0, v5, 0, 0, 0xD000000000000072, 0x800000020A5E24E0, 0xD000000000000036, 0x800000020A5E2560, 22);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4E82D8(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;
  _QWORD *v5;
  id v6;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52D0);
    swift_allocError();
    *v5 = a3;
    v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    v8 = a2;
    v9 = sub_20A5B8564();
    v11 = v10;

    v12 = *(uint64_t **)(*(_QWORD *)(v3 + 64) + 40);
    *v12 = v9;
    v12[1] = v11;
    return swift_continuation_throwingResume();
  }
}

unint64_t sub_20A4E8378()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2545FB0C8;
  if (!qword_2545FB0C8)
  {
    v1 = type metadata accessor for PregeneratedAssessment();
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for PregeneratedAssessment, v1);
    atomic_store(result, (unint64_t *)&qword_2545FB0C8);
  }
  return result;
}

ValueMetadata *type metadata accessor for AssessmentPregenerator()
{
  return &type metadata for AssessmentPregenerator;
}

void sub_20A4E83D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t v10;

  v9 = sub_20A5B8954();
  MEMORY[0x24BDAC7A8](v9, v10);
  __asm { BR              X10 }
}

uint64_t sub_20A4E8CB8()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_20A4E8CDC(unint64_t result)
{
  switch(result >> 60)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
      result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t objectdestroy_2Tm()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  return swift_deallocObject();
}

uint64_t sub_20A4E8D44(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  unint64_t v9;
  _BYTE *v10;
  uint64_t v12;
  _BYTE v13[32];
  uint64_t v14[6];

  v14[0] = a1;
  v14[1] = a2;
  v14[2] = a3;
  v14[3] = a4;
  if (a3 == a4 >> 1)
  {
    swift_unknownObjectRetain();
    v6 = MEMORY[0x24BEE4AF8];
    swift_unknownObjectRelease();
  }
  else
  {
    v8 = a5 + 32;
    swift_unknownObjectRetain();
    v6 = MEMORY[0x24BEE4AF8];
    sub_20A4677B8(v14, 0x8000000000000038, 0, v9, (unint64_t)v13);
    if (v5)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      if ((swift_dynamicCast() & 1) != 0 && *(_QWORD *)(a5 + 16))
      {
        v14[5] = v12;
        __asm { BR              X11 }
      }
      swift_bridgeObjectRelease();
      sub_20A467C20();
      swift_allocError();
      *v10 = 0;
      swift_willThrow();
      swift_unknownObjectRelease();
    }
    swift_unknownObjectRelease();
  }
  return v6;
}

_QWORD *sub_20A4E90BC(uint64_t *a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v4;
  unsigned __int8 *v7;
  _QWORD *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  unsigned __int8 v13;
  unint64_t v14;
  unint64_t v15;
  unsigned __int8 *v16;
  id v18[4];
  unsigned __int8 v19;

  v3 = v2;
  v4 = *(_QWORD *)(a2 + 16);
  if (!v4)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRetain();
  v7 = (unsigned __int8 *)(a2 + 40);
  v8 = (_QWORD *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    v9 = *((_QWORD *)v7 - 1);
    v10 = *v7;
    sub_20A4E8CDC(v9);
    sub_20A4677B8(a1, v9, v10, v11, (unint64_t)v18);
    if (!v3)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v8 = sub_20A46FFA8(0, v8[2] + 1, 1, v8);
      v15 = v8[2];
      v14 = v8[3];
      if (v15 >= v14 >> 1)
        v8 = sub_20A46FFA8((_QWORD *)(v14 > 1), v15 + 1, 1, v8);
      v8[2] = v15 + 1;
      sub_20A44FD68(v18, &v8[4 * v15 + 4]);
      sub_20A4BAB34(v9);
      goto LABEL_4;
    }
    v18[0] = v3;
    v12 = v3;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52D0);
    if (!swift_dynamicCast() || (v13 = v19, (v19 | 4) != 4))
    {
      sub_20A4BAB34(v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }

    if (!(_DWORD)v10)
      break;
    sub_20A4BAB34(v9);

    v3 = 0;
LABEL_4:
    v7 += 16;
    if (!--v4)
    {
      swift_bridgeObjectRelease();
      return v8;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_20A467C20();
  swift_allocError();
  *v16 = v13;
  swift_willThrow();
  sub_20A4BAB34(v9);
LABEL_18:

  return v8;
}

unint64_t sub_20A4E92D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2545FB0D8;
  if (!qword_2545FB0D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545FB0D0);
    result = MEMORY[0x20BD26CEC](MEMORY[0x24BEE2180], v1);
    atomic_store(result, (unint64_t *)&qword_2545FB0D8);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for CoreODIASN1Definition(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = *(_QWORD *)a2;
  sub_20A4E8CDC(*(_QWORD *)a2);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t assignWithCopy for CoreODIASN1Definition(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = *(_QWORD *)a2;
  sub_20A4E8CDC(*(_QWORD *)a2);
  v5 = *(_QWORD *)a1;
  *(_QWORD *)a1 = v4;
  sub_20A4BAB34(v5);
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for CoreODIASN1Definition(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = *(_QWORD *)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  sub_20A4BAB34(v4);
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for CoreODIASN1Definition(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for CoreODIASN1Definition(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for CoreODIASN1Definition()
{
  return &type metadata for CoreODIASN1Definition;
}

unint64_t *initializeBufferWithCopyOfBuffer for CoreODIASN1Definition.ASN1Type(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a2;
  sub_20A4E8CDC(*a2);
  *a1 = v3;
  return a1;
}

unint64_t destroy for CoreODIASN1Definition.ASN1Type(unint64_t *a1)
{
  return sub_20A4BAB34(*a1);
}

unint64_t *assignWithCopy for CoreODIASN1Definition.ASN1Type(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *a2;
  sub_20A4E8CDC(*a2);
  v4 = *a1;
  *a1 = v3;
  sub_20A4BAB34(v4);
  return a1;
}

unint64_t *assignWithTake for CoreODIASN1Definition.ASN1Type(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a1;
  *a1 = *a2;
  sub_20A4BAB34(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for CoreODIASN1Definition.ASN1Type(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x78 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 120);
  v3 = ((*(_QWORD *)a1 >> 60) & 0x8F | (16 * (*(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x77)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for CoreODIASN1Definition.ASN1Type(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x77)
  {
    *(_QWORD *)result = a2 - 120;
    if (a3 >= 0x78)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x78)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 4) & 7 | (8 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_20A4E95D0(_QWORD *a1)
{
  uint64_t v1;

  v1 = *a1 >> 60;
  if (v1 <= 7)
    return v1;
  else
    return (*a1 >> 3) + 8;
}

_QWORD *sub_20A4E95EC(_QWORD *result)
{
  *result &= 0xFFFFFFFFFFFFFFFuLL;
  return result;
}

unint64_t *sub_20A4E95FC(unint64_t *result, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  if (a2 < 8)
  {
    v2 = *result & 0xFFFFFFFFFFFFFF8;
    v3 = a2 << 60;
  }
  else
  {
    v2 = 8 * (a2 - 8);
    v3 = 0x8000000000000000;
  }
  *result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for CoreODIASN1Definition.ASN1Type()
{
  return &type metadata for CoreODIASN1Definition.ASN1Type;
}

uint64_t storeEnumTagSinglePayload for HardwareAttestationType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_20A4E9690 + 4 * byte_20A5C3545[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_20A4E96C4 + 4 * asc_20A5C3540[v4]))();
}

uint64_t sub_20A4E96C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A4E96CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A4E96D4);
  return result;
}

uint64_t sub_20A4E96E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A4E96E8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_20A4E96EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A4E96F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HardwareAttestationType()
{
  return &type metadata for HardwareAttestationType;
}

uint64_t storeEnumTagSinglePayload for JWSAlgorithm(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_20A4E975C + 4 * byte_20A5C354F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_20A4E9790 + 4 * byte_20A5C354A[v4]))();
}

uint64_t sub_20A4E9790(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A4E9798(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A4E97A0);
  return result;
}

uint64_t sub_20A4E97AC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A4E97B4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_20A4E97B8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A4E97C0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for JWSAlgorithm()
{
  return &type metadata for JWSAlgorithm;
}

uint64_t sub_20A4E97DC(uint64_t a1, uint64_t a2)
{
  return sub_20A4EAD68(a1, a2, Logger.LogCategory.rawValue.getter);
}

void sub_20A4E97E8(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_20A4E9830(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_20A4E987C + 4 * byte_20A5C3558[a2]))(0x73656E755469);
}

uint64_t sub_20A4E987C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == 0x73656E755469 && v1 == v2)
    v3 = 1;
  else
    v3 = sub_20A5B91AC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_20A4E990C(char a1, char a2)
{
  char v2;

  if (a1 == a2)
    v2 = 1;
  else
    v2 = sub_20A5B91AC();
  swift_bridgeObjectRelease_n();
  return v2 & 1;
}

uint64_t sub_20A4E996C(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xEF312E4E53412D31;
  v3 = 0x765F4343455F5645;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0x33765F4345;
    else
      v5 = 0x48535F33765F4345;
    if (v4 == 1)
      v6 = 0xE500000000000000;
    else
      v6 = 0xE800000000000000;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0x765F4343455F5645;
  v6 = 0xEF312E4E53412D31;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v3 = 0x33765F4345;
    else
      v3 = 0x48535F33765F4345;
    if (v7 == 1)
      v2 = 0xE500000000000000;
    else
      v2 = 0xE800000000000000;
  }
LABEL_15:
  if (v5 == v3 && v6 == v2)
    v8 = 1;
  else
    v8 = sub_20A5B91AC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_20A4E9A8C(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xD000000000000014;
  v3 = 0x800000020A5DA780;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0xD000000000000018;
    else
      v5 = 0xD000000000000017;
    if (v4 == 1)
      v6 = 0x800000020A5DA7A0;
    else
      v6 = 0x800000020A5DA7C0;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0xD000000000000014;
  v6 = 0x800000020A5DA780;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v2 = 0xD000000000000018;
    else
      v2 = 0xD000000000000017;
    if (v7 == 1)
      v3 = 0x800000020A5DA7A0;
    else
      v3 = 0x800000020A5DA7C0;
  }
LABEL_15:
  if (v5 == v2 && v6 == v3)
    v8 = 1;
  else
    v8 = sub_20A5B91AC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_20A4E9B88(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_20A4E9BF4(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_20A4E9C6C + 4 * byte_20A5C3560[a2]))(0xD000000000000014);
}

uint64_t sub_20A4E9C6C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0xD000000000000014 && v1 == 0x800000020A5DA730)
    v2 = 1;
  else
    v2 = sub_20A5B91AC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_20A4E9D2C(uint64_t a1, uint64_t a2)
{
  return sub_20A4EAD68(a1, a2, ODIComputableBindingsName.rawValue.getter);
}

uint64_t sub_20A4E9D38(uint64_t a1, uint64_t a2)
{
  return sub_20A4EAD68(a1, a2, ArmandDeviceDataFieldName.rawValue.getter);
}

void sub_20A4E9D44(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_20A4E9D94(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_20A4E9E10 + 4 * byte_20A5C3569[a2]))(0x64757469676E6F6CLL);
}

uint64_t sub_20A4E9E10(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x64757469676E6F6CLL && v1 == 0xE900000000000065)
    v2 = 1;
  else
    v2 = sub_20A5B91AC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_20A4E9ED4(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_20A4E9F48@<X0>(unsigned __int8 a1@<W1>, uint64_t a2@<X8>)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_20A4E9FE0 + 4 * byte_20A5C3576[a1]))(a2 - 7);
}

uint64_t sub_20A4E9FE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v3;

  if (a1 == a2 - 7 && v2 == 0x800000020A5DA4A0)
    v3 = 1;
  else
    v3 = sub_20A5B91AC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

void sub_20A4EA0B8(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_20A4EA0F8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_20A4EA138 + 4 * byte_20A5C3582[a2]))(17747);
}

uint64_t sub_20A4EA138(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 17747 && v1 == 0xE200000000000000)
    v2 = 1;
  else
    v2 = sub_20A5B91AC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_20A4EA1BC(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_20A4EA228(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_20A4EA2B4 + 4 * byte_20A5C358C[a2]))(0xD000000000000010);
}

uint64_t sub_20A4EA2B4(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0xD000000000000010 && v1 == 0x800000020A5DA7F0)
    v2 = 1;
  else
    v2 = sub_20A5B91AC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_20A4EA378(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000011;
  else
    v3 = 0x656D737365737361;
  if (v2)
    v4 = 0xEA0000000000746ELL;
  else
    v4 = 0x800000020A5DA8B0;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000011;
  else
    v5 = 0x656D737365737361;
  if ((a2 & 1) != 0)
    v6 = 0x800000020A5DA8B0;
  else
    v6 = 0xEA0000000000746ELL;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_20A5B91AC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_20A4EA424(uint64_t a1, uint64_t a2)
{
  return sub_20A4EAD68(a1, a2, ODIErrorPropertyKey.rawValue.getter);
}

uint64_t sub_20A4EA430(uint64_t a1, uint64_t a2)
{
  return sub_20A4EAD68(a1, a2, DIPErrorPropertyKey.rawValue.getter);
}

void sub_20A4EA43C(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_20A4EA488(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_20A4EA510 + 4 * byte_20A5C3597[a2]))(0x656C69666F7270);
}

uint64_t sub_20A4EA510(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x656C69666F7270 && v1 == 0xE700000000000000)
    v2 = 1;
  else
    v2 = sub_20A5B91AC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_20A4EA5E0(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_20A4EA628(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_20A4EA6A0 + 4 * byte_20A5C35A1[a2]))(0x73656E755469);
}

uint64_t sub_20A4EA6A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == 0x73656E755469 && v1 == v2)
    v3 = 1;
  else
    v3 = sub_20A5B91AC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

void sub_20A4EA764(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_20A4EA7B4(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(void))((char *)sub_20A4EA864 + 4 * byte_20A5C35AD[a2]))();
}

uint64_t sub_20A4EA864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;

  if (a1 == a3 && v3 == 0xEF64756F6C43692ELL)
    v4 = 1;
  else
    v4 = sub_20A5B91AC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_20A4EA96C(uint64_t a1, uint64_t a2)
{
  return sub_20A4EAD68(a1, a2, ArmandDataSource.rawValue.getter);
}

uint64_t sub_20A4EA978(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x45656D69746E7572;
  else
    v3 = 0x65736E6F70736572;
  if (v2)
    v4 = 0xEE00726564616548;
  else
    v4 = 0xEC000000726F7272;
  if ((a2 & 1) != 0)
    v5 = 0x45656D69746E7572;
  else
    v5 = 0x65736E6F70736572;
  if ((a2 & 1) != 0)
    v6 = 0xEC000000726F7272;
  else
    v6 = 0xEE00726564616548;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_20A5B91AC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_20A4EAA30(char a1, char a2)
{
  char v2;

  if (a1 == a2)
    v2 = 1;
  else
    v2 = sub_20A5B91AC();
  swift_bridgeObjectRelease_n();
  return v2 & 1;
}

void sub_20A4EAA90(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_20A4EAAD8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_20A4EAB68 + 4 * byte_20A5C35B9[a2]))(0x42676E697373696DLL);
}

uint64_t sub_20A4EAB68(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x42676E697373696DLL && v1 == 0xEF73676E69646E69)
    v2 = 1;
  else
    v2 = sub_20A5B91AC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_20A4EAC38(uint64_t a1, uint64_t a2)
{
  return sub_20A4EAD68(a1, a2, MilestoneTag.rawValue.getter);
}

uint64_t sub_20A4EAC44(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x7469573635325345;
    else
      v3 = 0x453635325345;
    if (v2 == 1)
      v4 = 0xEC0000004D415568;
    else
      v4 = 0xE600000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x7469573635325345;
      else
        v6 = 0x453635325345;
      if (v5 == 1)
        v7 = 0xEC0000004D415568;
      else
        v7 = 0xE600000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE500000000000000;
    v3 = 0x3635325345;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE500000000000000;
  if (v3 != 0x3635325345)
  {
LABEL_21:
    v8 = sub_20A5B91AC();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_20A4EAD5C(uint64_t a1, uint64_t a2)
{
  return sub_20A4EAD68(a1, a2, BindingsKeys.rawValue.getter);
}

uint64_t sub_20A4EAD68(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  v4 = a3();
  v6 = v5;
  if (v4 == a3() && v6 == v7)
    v9 = 1;
  else
    v9 = sub_20A5B91AC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_20A4EAE00(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_20A4EAC44(*a1, *a2);
}

uint64_t sub_20A4EAE0C()
{
  sub_20A5B929C();
  sub_20A5B8978();
  swift_bridgeObjectRelease();
  return sub_20A5B92CC();
}

uint64_t sub_20A4EAEAC()
{
  sub_20A5B8978();
  return swift_bridgeObjectRelease();
}

uint64_t sub_20A4EAF28()
{
  sub_20A5B929C();
  sub_20A5B8978();
  swift_bridgeObjectRelease();
  return sub_20A5B92CC();
}

uint64_t sub_20A4EAFC4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_20A4EB4EC();
  *a1 = result;
  return result;
}

void sub_20A4EAFF0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE500000000000000;
  v4 = 0xEC0000004D415568;
  v5 = 0x7469573635325345;
  if (v2 != 1)
  {
    v5 = 0x453635325345;
    v4 = 0xE600000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x3635325345;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

unint64_t sub_20A4EB054()
{
  unint64_t result;

  result = qword_2545FB0E0;
  if (!qword_2545FB0E0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C3690, &type metadata for JWSAlgorithm);
    atomic_store(result, (unint64_t *)&qword_2545FB0E0);
  }
  return result;
}

unint64_t sub_20A4EB09C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2545FB0E8;
  if (!qword_2545FB0E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545FB0F0);
    result = MEMORY[0x20BD26CEC](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_2545FB0E8);
  }
  return result;
}

uint64_t sub_20A4EB0E8()
{
  sub_20A4EB4A8();
  return sub_20A5B8A74();
}

uint64_t sub_20A4EB144()
{
  sub_20A4EB4A8();
  return sub_20A5B8A38();
}

void sub_20A4EB190(char *a1)
{
  sub_20A4EA0B8(*a1);
}

void sub_20A4EB19C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_20A5B929C();
  __asm { BR              X9 }
}

uint64_t sub_20A4EB1E0()
{
  sub_20A5B8978();
  swift_bridgeObjectRelease();
  return sub_20A5B92CC();
}

void sub_20A4EB22C()
{
  __asm { BR              X10 }
}

uint64_t sub_20A4EB260()
{
  sub_20A5B8978();
  return swift_bridgeObjectRelease();
}

void sub_20A4EB298()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_20A5B929C();
  __asm { BR              X9 }
}

uint64_t sub_20A4EB2D8()
{
  sub_20A5B8978();
  swift_bridgeObjectRelease();
  return sub_20A5B92CC();
}

uint64_t sub_20A4EB324@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_20A4EB534();
  *a1 = result;
  return result;
}

uint64_t sub_20A4EB350()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_20A4EB378 + 4 * byte_20A5C35CA[*v0]))();
}

void sub_20A4EB378(_QWORD *a1@<X8>)
{
  *a1 = 17747;
  a1[1] = 0xE200000000000000;
}

void sub_20A4EB388(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 5653577;
  a1[1] = v1;
}

void sub_20A4EB398(_QWORD *a1@<X8>)
{
  *a1 = 20559;
  a1[1] = 0xE200000000000000;
}

uint64_t sub_20A4EB3A8()
{
  sub_20A4EB57C();
  return sub_20A5B8A74();
}

uint64_t sub_20A4EB404()
{
  sub_20A4EB57C();
  return sub_20A5B8A38();
}

void sub_20A4EB450(_QWORD *a1@<X8>)
{
  *a1 = &unk_24C314A50;
}

unint64_t sub_20A4EB464()
{
  unint64_t result;

  result = qword_2545FB0F8;
  if (!qword_2545FB0F8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C37B8, &type metadata for HardwareAttestationType);
    atomic_store(result, (unint64_t *)&qword_2545FB0F8);
  }
  return result;
}

unint64_t sub_20A4EB4A8()
{
  unint64_t result;

  result = qword_253EB4A70;
  if (!qword_253EB4A70)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C3618, &type metadata for JWSAlgorithm);
    atomic_store(result, (unint64_t *)&qword_253EB4A70);
  }
  return result;
}

uint64_t sub_20A4EB4EC()
{
  unint64_t v0;

  v0 = sub_20A5B9008();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_20A4EB534()
{
  unint64_t v0;

  v0 = sub_20A5B9008();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

unint64_t sub_20A4EB57C()
{
  unint64_t result;

  result = qword_2545FB100[0];
  if (!qword_2545FB100[0])
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C3740, &type metadata for HardwareAttestationType);
    atomic_store(result, qword_2545FB100);
  }
  return result;
}

uint64_t sub_20A4EB5C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 8) + *(_QWORD *)(a3 + 8));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_20A45A37C;
  return v9(a1, a2, a3);
}

uint64_t sub_20A4EB63C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 16) + *(_QWORD *)(a4 + 16));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_20A4597C0;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_20A4EB6C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v17;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a8 + 24) + *(_QWORD *)(a8 + 24));
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v17;
  *v17 = v8;
  v17[1] = sub_20A4597C0;
  return v19(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_20A4EB774(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 32) + *(_QWORD *)(a3 + 32));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_20A45A37C;
  return v9(a1, a2, a3);
}

uint64_t sub_20A4EB7EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 40) + *(_QWORD *)(a3 + 40));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_20A45A37C;
  return v9(a1, a2, a3);
}

uint64_t sub_20A4EB864(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v20 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a12 + 48) + *(_QWORD *)(a12 + 48));
  v15 = a4 & 1;
  v16 = a6 & 1;
  v17 = a8 & 1;
  v18 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v12 + 16) = v18;
  *v18 = v12;
  v18[1] = sub_20A45A37C;
  return v20(a1, a2, a3, v15, a5, v16, a7, v17, a9, a10, a11, a12);
}

uint64_t sub_20A4EB924(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 56) + *(_QWORD *)(a4 + 56));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_20A45A37C;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_20A4EB9A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t result;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  double v55;
  double v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int *v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;

  v8 = (int *)type metadata accessor for PregeneratedAssessment();
  v9 = sub_20A4D0354();
  v11 = v10;
  v12 = sub_20A4894E0(*(_QWORD *)((char *)a3 + v8[7]), *(_QWORD *)((char *)a3 + v8[7] + 8));
  v69 = v14;
  v70 = v13;
  v15 = sub_20A5B8504();
  v73 = v9;
  v74 = v11;
  v72 = v12;
  v68 = a4;
  if (v16 >> 60 == 15)
  {
    LOBYTE(v75) = 109;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000022, 0x800000020A5DD4D0, 0, (unsigned __int8 *)&v75, 0, 0, 0xD000000000000074, 0x800000020A5DD500, 0x6F72662864656573, 0xEB00000000293A6DLL, 77);
    v18 = v17;
    swift_willThrow();
    v77 = 45;
    v78 = 0xE100000000000000;
    v75 = 0;
    v76 = 0xE000000000000000;
    sub_20A5B8E94();
    swift_bridgeObjectRelease();
    v75 = 0xD000000000000018;
    v76 = 0x800000020A5E2930;
    swift_getErrorValue();
    sub_20A5B923C();
    sub_20A5B899C();
    swift_bridgeObjectRelease();
    v21 = v75;
    LOBYTE(v75) = 12;
    CoreODILogger.error(_:category:)(v21, v76, &v75);
    swift_bridgeObjectRelease();

    v22 = 0;
    v64 = 0;
    v65 = 0;
    v62 = 0;
    v63 = 0;
    v60 = 0;
    v61 = 0;
    v59 = 0;
  }
  else
  {
    v19 = v15;
    v20 = v16;
    sub_20A5B8264();
    swift_allocObject();
    sub_20A5B8258();
    sub_20A48A920();
    sub_20A5B824C();
    swift_release();
    sub_20A44CFC4(v19, v20);
    v22 = v77;
    v64 = v79;
    v65 = v78;
    v62 = v81;
    v63 = v80;
    v60 = v83;
    v61 = v82;
    v59 = v84;
  }
  v23 = sub_20A5B8504();
  if (v24 >> 60 == 15)
  {
    LOBYTE(v75) = 109;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000022, 0x800000020A5DD4D0, 0, (unsigned __int8 *)&v75, 0, 0, 0xD000000000000074, 0x800000020A5DD500, 0x6F72662864656573, 0xEB00000000293A6DLL, 77);
    v26 = v25;
    swift_willThrow();
    v77 = 45;
    v78 = 0xE100000000000000;
    v75 = 0;
    v76 = 0xE000000000000000;
    sub_20A5B8E94();
    swift_bridgeObjectRelease();
    v75 = 0xD000000000000016;
    v76 = 0x800000020A5E2950;
    swift_getErrorValue();
    sub_20A5B923C();
    sub_20A5B899C();
    swift_bridgeObjectRelease();
    v29 = v75;
    LOBYTE(v75) = 12;
    CoreODILogger.error(_:category:)(v29, v76, &v75);
    swift_bridgeObjectRelease();

    v30 = 0;
    v31 = 0;
    v32 = 0;
    v33 = 0;
    v34 = 0;
    v35 = 0;
    v36 = 0;
    v37 = 0;
  }
  else
  {
    v27 = v23;
    v28 = v24;
    sub_20A5B8264();
    swift_allocObject();
    sub_20A5B8258();
    sub_20A48A920();
    sub_20A5B824C();
    swift_release();
    sub_20A44CFC4(v27, v28);
    v30 = v77;
    v31 = v78;
    v32 = v79;
    v33 = v80;
    v34 = v81;
    v35 = v82;
    v36 = v83;
    v37 = v84;
  }
  v38 = (_BYTE *)(a5 + 344);
  v39 = a3[1];
  *(_QWORD *)a5 = *a3;
  *(_QWORD *)(a5 + 8) = v39;
  *(_QWORD *)(a5 + 16) = a1;
  *(_QWORD *)(a5 + 24) = a2;
  v40 = (_QWORD *)((char *)a3 + v8[8]);
  v41 = v40[1];
  *(_QWORD *)(a5 + 32) = *v40;
  *(_QWORD *)(a5 + 40) = v41;
  *(_QWORD *)(a5 + 48) = v22;
  *(_QWORD *)(a5 + 56) = v65;
  *(_QWORD *)(a5 + 64) = v64;
  *(_QWORD *)(a5 + 72) = v63;
  *(_QWORD *)(a5 + 80) = v62;
  *(_QWORD *)(a5 + 88) = v61;
  *(_QWORD *)(a5 + 96) = v60;
  *(_QWORD *)(a5 + 104) = v59;
  v42 = (_QWORD *)((char *)a3 + v8[10]);
  v43 = *v42;
  v44 = v42[1];
  *(_QWORD *)(a5 + 112) = *v42;
  *(_QWORD *)(a5 + 120) = v44;
  *(_QWORD *)(a5 + 128) = v30;
  *(_QWORD *)(a5 + 136) = v31;
  *(_QWORD *)(a5 + 144) = v32;
  *(_QWORD *)(a5 + 152) = v33;
  *(_QWORD *)(a5 + 160) = v34;
  *(_QWORD *)(a5 + 168) = v35;
  *(_QWORD *)(a5 + 176) = v36;
  *(_QWORD *)(a5 + 184) = v37;
  v45 = (_QWORD *)((char *)a3 + v8[6]);
  v46 = v45[1];
  *(_QWORD *)(a5 + 192) = *v45;
  *(_QWORD *)(a5 + 200) = v46;
  v47 = (_QWORD *)((char *)a3 + v8[12]);
  v48 = *v47;
  v49 = v47[1];
  *(_QWORD *)(a5 + 208) = *v47;
  *(_QWORD *)(a5 + 216) = v49;
  *(_QWORD *)(a5 + 224) = v48;
  *(_QWORD *)(a5 + 232) = v49;
  *(_QWORD *)(a5 + 240) = v43;
  *(_QWORD *)(a5 + 248) = v44;
  *(_QWORD *)(a5 + 256) = v70;
  *(_QWORD *)(a5 + 264) = v69;
  v71 = v8;
  v50 = *(_QWORD *)((char *)a3 + v8[13]);
  *(_QWORD *)(a5 + 272) = v50;
  sub_20A459C88(v68, a5 + 280, &qword_2545FA3C0);
  *(_BYTE *)(a5 + 320) = v72 & 1;
  if (!v73)
  {
    *(_QWORD *)(a5 + 328) = 0;
    *(_QWORD *)(a5 + 336) = 0;
    *v38 = 1;
    *(_QWORD *)(a5 + 352) = 0;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v52 = 0;
LABEL_12:
    *(_QWORD *)(a5 + 360) = v52;
    *(_BYTE *)(a5 + 368) = v73 == 0;
    v53 = (_QWORD *)((char *)a3 + v71[19]);
    v54 = v53[1];
    *(_QWORD *)(a5 + 376) = *v53;
    *(_QWORD *)(a5 + 384) = v54;
    swift_bridgeObjectRetain();
    sub_20A5B85E8();
    v56 = v55;
    result = sub_20A4EF528(v73);
    if ((~COERCE__INT64(-v56) & 0x7FF0000000000000) != 0)
    {
      if (v56 < 9.22337204e18)
      {
        if (v56 > -9.22337204e18)
        {
          sub_20A465AB4((uint64_t)a3, (uint64_t (*)(_QWORD))type metadata accessor for PregeneratedAssessment);
          *(_QWORD *)(a5 + 392) = (uint64_t)-v56;
          *(_BYTE *)(a5 + 400) = 0;
          v57 = a5 + *(int *)(type metadata accessor for ODNAssessmentsFeedbackManager.ODNResultsPayload(0) + 88);
          v58 = type metadata accessor for ODNAssessmentsFeedbackManager.ORDResultsPayload(0);
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v57, 1, 1, v58);
        }
        goto LABEL_18;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_20A4EF554(v73);
  result = swift_release();
  *(_QWORD *)(a5 + 328) = v73;
  if (__OFADD__(v50, 1))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  *(_QWORD *)(a5 + 336) = v50 + 1;
  *v38 = 0;
  *(_QWORD *)(a5 + 352) = v74;
  v52 = v50 + 2;
  if (!__OFADD__(v50, 2))
  {
    swift_retain();
    goto LABEL_12;
  }
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_20A4EC1FC(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v3 + 1968) = v2;
  *(_BYTE *)(v3 + 1377) = a2;
  *(_QWORD *)(v3 + 1960) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB158);
  *(_QWORD *)(v3 + 1976) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB168);
  *(_QWORD *)(v3 + 1984) = swift_task_alloc();
  *(_QWORD *)(v3 + 1992) = swift_task_alloc();
  *(_QWORD *)(v3 + 2000) = swift_task_alloc();
  *(_QWORD *)(v3 + 2008) = swift_task_alloc();
  v4 = type metadata accessor for ODNAssessmentsFeedbackManager.ORDResultsPayload(0);
  *(_QWORD *)(v3 + 2016) = v4;
  *(_QWORD *)(v3 + 2024) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v3 + 2032) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A4EC2D4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t (*v105)(uint64_t, uint64_t, uint64_t);
  int v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  int *v124;
  uint64_t v125;
  _QWORD *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  _QWORD *v149;
  void *v150;
  void *v151;
  uint64_t v152;
  uint64_t v153;
  void *__dsta;
  void *__dst;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  _QWORD *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  unint64_t v164;
  uint64_t v165;
  _QWORD *v166;
  unint64_t v167;
  unint64_t v168;

  v1 = *(_QWORD *)(v0 + 1968);
  v2 = *(_QWORD **)(v0 + 1960);
  v3 = (uint64_t *)(*(_QWORD *)(v1 + 672) + OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_conversationID);
  v4 = v3[1];
  v165 = *v3;
  v5 = v2[7];
  v6 = v2[9];
  v150 = (void *)v2[8];
  v152 = v2[6];
  v7 = v2[10];
  v8 = v2[11];
  v10 = v2[12];
  v9 = v2[13];
  v149 = (_QWORD *)(v1 + 680);
  sub_20A47BD60(v1 + 680, v0 + 1864);
  v156 = *(_QWORD *)(v0 + 1896);
  v158 = *(_QWORD *)(v0 + 1888);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 1864), v158);
  swift_bridgeObjectRetain();
  v138 = v5;
  v141 = v7;
  v143 = v8;
  v145 = v10;
  v147 = v9;
  sub_20A465800(v152, v5);
  sub_20A5B8E94();
  swift_bridgeObjectRelease();
  v167 = 0xD00000000000002DLL;
  v168 = 0x800000020A5E2750;
  v166 = v2;
  if (v2[27])
    swift_bridgeObjectRetain();
  v11 = *(_QWORD *)(v0 + 1968);
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  v12 = v167;
  LOBYTE(v167) = 12;
  (*(void (**)(unint64_t, unint64_t, unint64_t *, uint64_t))(v156 + 16))(v12, v168, &v167, v158);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 1864);
  swift_beginAccess();
  v13 = *(_QWORD *)(v11 + 664);
  swift_bridgeObjectRetain();
  LOBYTE(v11) = sub_20A4ED3E8(v165, v4, v13);
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(v0 + 1968);
  if ((v11 & 1) != 0)
  {
    sub_20A4655FC(v152, v5);
    v15 = *(_QWORD *)(v14 + 704);
    v16 = *(_QWORD *)(v14 + 712);
    __swift_project_boxed_opaque_existential_1(v149, v15);
    v167 = 0;
    v168 = 0xE000000000000000;
    sub_20A5B8E94();
    sub_20A5B899C();
    sub_20A5B899C();
    swift_bridgeObjectRelease();
    sub_20A5B899C();
    v17 = v167;
    LOBYTE(v167) = 12;
    (*(void (**)(unint64_t, unint64_t, unint64_t *, uint64_t, uint64_t))(v16 + 32))(v17, v168, &v167, v15, v16);
    swift_bridgeObjectRelease();
    v18 = *(_QWORD *)(v14 + 704);
    v19 = *(_QWORD *)(v14 + 712);
    __swift_project_boxed_opaque_existential_1(v149, v18);
    LOBYTE(v167) = 12;
    (*(void (**)(unint64_t, unint64_t, unint64_t *, uint64_t, uint64_t))(v19 + 16))(0xD000000000000049, 0x800000020A5E28E0, &v167, v18, v19);
LABEL_18:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v20 = *(uint64_t **)(v0 + 1960);
  v21 = v20[24];
  v22 = v20[25];
  v23 = *v20;
  v24 = v20[1];
  v25 = v20[47];
  v26 = v20[48];
  v159 = v20[35];
  __dsta = (void *)v20[36];
  v27 = v20[38];
  v157 = v20[37];
  v28 = *((_BYTE *)v20 + 320);
  v161 = v20[39];
  v163 = v20[41];
  v29 = v20[45];
  v30 = *((_BYTE *)v20 + 368);
  v31 = v20[49];
  v32 = *((_BYTE *)v20 + 400);
  *(_QWORD *)(v0 + 1384) = v165;
  *(_QWORD *)(v0 + 1392) = v4;
  *(_QWORD *)(v0 + 1400) = v21;
  *(_QWORD *)(v0 + 1416) = v152;
  *(_QWORD *)(v0 + 1424) = v138;
  *(_QWORD *)(v0 + 1432) = v150;
  *(_QWORD *)(v0 + 1440) = v6;
  *(_QWORD *)(v0 + 1448) = v141;
  *(_QWORD *)(v0 + 1456) = v143;
  *(_QWORD *)(v0 + 1464) = v145;
  *(_QWORD *)(v0 + 1472) = v147;
  *(_QWORD *)(v0 + 1480) = v23;
  *(_QWORD *)(v0 + 1496) = v25;
  *(_BYTE *)(v0 + 1552) = v28;
  *(_QWORD *)(v0 + 1568) = v29;
  *(_BYTE *)(v0 + 1576) = v30;
  *(_QWORD *)(v0 + 1584) = v31;
  *(_QWORD *)(v0 + 1408) = v22;
  *(_QWORD *)(v0 + 1488) = v24;
  *(_QWORD *)(v0 + 1504) = v26;
  *(_QWORD *)(v0 + 1512) = v159;
  *(_QWORD *)(v0 + 1520) = __dsta;
  *(_QWORD *)(v0 + 1528) = v157;
  *(_QWORD *)(v0 + 1536) = v27;
  *(_QWORD *)(v0 + 1544) = v161;
  *(_QWORD *)(v0 + 1560) = v163;
  *(_BYTE *)(v0 + 1592) = v32;
  *(_BYTE *)(v0 + 1376) = *(_BYTE *)(v0 + 1592);
  v33 = *(_OWORD *)(v0 + 1480);
  v34 = *(_OWORD *)(v0 + 1496);
  v35 = *(_OWORD *)(v0 + 1528);
  *(_OWORD *)(v0 + 1296) = *(_OWORD *)(v0 + 1512);
  *(_OWORD *)(v0 + 1312) = v35;
  *(_OWORD *)(v0 + 1264) = v33;
  *(_OWORD *)(v0 + 1280) = v34;
  v36 = *(_OWORD *)(v0 + 1400);
  *(_OWORD *)(v0 + 1168) = *(_OWORD *)(v0 + 1384);
  *(_OWORD *)(v0 + 1184) = v36;
  v37 = *(_OWORD *)(v0 + 1416);
  v38 = *(_OWORD *)(v0 + 1432);
  v39 = *(_OWORD *)(v0 + 1464);
  *(_OWORD *)(v0 + 1232) = *(_OWORD *)(v0 + 1448);
  *(_OWORD *)(v0 + 1248) = v39;
  *(_OWORD *)(v0 + 1200) = v37;
  *(_OWORD *)(v0 + 1216) = v38;
  v40 = *(_OWORD *)(v0 + 1544);
  v41 = *(_OWORD *)(v0 + 1576);
  *(_OWORD *)(v0 + 1344) = *(_OWORD *)(v0 + 1560);
  *(_OWORD *)(v0 + 1360) = v41;
  *(_OWORD *)(v0 + 1328) = v40;
  nullsub_1(v0 + 1168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_20A465850(v159, (uint64_t)__dsta, v157, v27, v161);
  swift_retain();
  sub_20A4EEF10((_QWORD *)(v0 + 1384));
  sub_20A459C88(v14 + 440, v0 + 1600, &qword_2545FA7D0);
  sub_20A459C88(v0 + 1168, v14 + 440, &qword_2545FA7D0);
  sub_20A4EED4C(v0 + 1600, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_20A4EEDC0);
  sub_20A5B8288();
  swift_allocObject();
  sub_20A5B827C();
  v42 = v2[26];
  v43 = v2[27];
  v44 = v166[28];
  v45 = v166[29];
  v47 = v166[30];
  v46 = v166[31];
  *(_QWORD *)(v0 + 1816) = v42;
  *(_QWORD *)(v0 + 1824) = v43;
  *(_QWORD *)(v0 + 1832) = v44;
  *(_QWORD *)(v0 + 1840) = v45;
  *(_QWORD *)(v0 + 1848) = v47;
  *(_QWORD *)(v0 + 1856) = v46;
  sub_20A4EEFFC(v42, v43);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB170);
  sub_20A4EF038();
  v48 = sub_20A5B8270();
  v164 = v49;
  v162 = v48;
  sub_20A4EF09C(v42, v43);
  swift_release();
  if (!v43)
  {
    v90 = v162;
    v50 = v164;
    goto LABEL_15;
  }
  v50 = v164;
  if (v164 >> 60 == 15 || (v51 = *(uint64_t **)(v0 + 1960), (v52 = v51[33]) == 0))
  {
    v90 = v162;
LABEL_15:
    v91 = *(_QWORD *)(v0 + 1968);
    v92 = *(_QWORD *)(v91 + 704);
    v93 = *(_QWORD *)(v91 + 712);
    v89 = v149;
    __swift_project_boxed_opaque_existential_1(v149, v92);
    LOBYTE(v167) = 12;
    (*(void (**)(unint64_t, unint64_t, unint64_t *, uint64_t, uint64_t))(v93 + 16))(0xD000000000000056, 0x800000020A5E2780, &v167, v92, v93);
    goto LABEL_16;
  }
  __dst = (void *)(v0 + 16);
  v160 = (_QWORD *)(v0 + 304);
  v151 = (void *)(v0 + 592);
  v153 = v0 + 880;
  v148 = v51[32];
  swift_bridgeObjectRetain();
  sub_20A459690(v162, v164);
  v144 = sub_20A5B854C();
  v146 = v53;
  sub_20A44CFC4(v162, v164);
  v142 = v51[34];
  v54 = v51[16];
  v55 = v51[17];
  v56 = v51[18];
  v57 = v51[19];
  v58 = v51[20];
  v59 = v51[22];
  v60 = v51[23];
  v127 = *v51;
  v61 = v20[1];
  v135 = *((_BYTE *)v20 + 320);
  v62 = v51[44];
  v131 = v20[45];
  v132 = v51[21];
  v130 = *((_BYTE *)v20 + 368);
  v64 = v20[35];
  v63 = v20[36];
  v65 = v20[37];
  v66 = v20[38];
  v67 = v20[39];
  v68 = v54;
  v139 = v56;
  v140 = v55;
  v137 = v57;
  v134 = v58;
  v128 = v60;
  v129 = v59;
  sub_20A465800(v54, v55);
  v136 = v62;
  swift_retain();
  swift_bridgeObjectRetain();
  v133 = v64;
  v69 = v64;
  v70 = v63;
  sub_20A465850(v69, v63, v65, v66, v67);
  if (qword_253EB6228 != -1)
    swift_once();
  v71 = *(_QWORD *)(v0 + 1968);
  v72 = qword_2546103B8;
  v73 = qword_2546103C0;
  *(_QWORD *)(v0 + 304) = v144;
  *(_QWORD *)(v0 + 312) = v146;
  *(_QWORD *)(v0 + 320) = v142;
  *(_QWORD *)(v0 + 328) = v68;
  *(_QWORD *)(v0 + 336) = v140;
  *(_QWORD *)(v0 + 344) = v139;
  *(_QWORD *)(v0 + 352) = v137;
  *(_QWORD *)(v0 + 360) = v134;
  *(_QWORD *)(v0 + 368) = v132;
  *(_QWORD *)(v0 + 376) = v129;
  *(_QWORD *)(v0 + 384) = v128;
  *(_QWORD *)(v0 + 392) = v127;
  *(_QWORD *)(v0 + 400) = v61;
  *(_QWORD *)(v0 + 408) = v148;
  *(_QWORD *)(v0 + 416) = v52;
  *(_QWORD *)(v0 + 424) = 2;
  *(_BYTE *)(v0 + 432) = v135;
  *(_QWORD *)(v0 + 440) = v136;
  *(_QWORD *)(v0 + 448) = v131;
  *(_BYTE *)(v0 + 456) = v130;
  *(_QWORD *)(v0 + 464) = v133;
  *(_QWORD *)(v0 + 472) = v70;
  *(_QWORD *)(v0 + 480) = v65;
  *(_QWORD *)(v0 + 488) = v66;
  *(_QWORD *)(v0 + 496) = v67;
  *(_QWORD *)(v0 + 504) = 0;
  *(_BYTE *)(v0 + 512) = 1;
  *(_OWORD *)(v0 + 520) = 0u;
  *(_QWORD *)(v0 + 536) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + 544) = 0;
  *(_BYTE *)(v0 + 552) = 1;
  *(_QWORD *)(v0 + 560) = 0;
  *(_BYTE *)(v0 + 568) = 1;
  *(_QWORD *)(v0 + 576) = v72;
  *(_QWORD *)(v0 + 584) = v73;
  memcpy(__dst, v160, 0x120uLL);
  memcpy(v151, v160, 0x120uLL);
  nullsub_1(v151);
  swift_bridgeObjectRetain();
  sub_20A47B9B0(v160);
  sub_20A459C88(v71 + 152, v153, &qword_2545F9F88);
  sub_20A459C88((uint64_t)v151, v71 + 152, &qword_2545F9F88);
  sub_20A465660(v153, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20A4654E0);
  if (v166[27])
  {
    v74 = *(_QWORD *)(v0 + 1968);
    v76 = v166[28];
    v75 = v166[29];
    swift_bridgeObjectRetain();
    swift_beginAccess();
    sub_20A47B9B0(v160);
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v167 = *(_QWORD *)(v74 + 656);
    *(_QWORD *)(v74 + 656) = 0x8000000000000000;
    sub_20A476A38(__dst, v76, v75, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(v74 + 656) = v167;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_bridgeObjectRelease();
  }
  v78 = *(_QWORD **)(v0 + 1968);
  v79 = *(_QWORD *)(v78[82] + 16);
  v80 = v78[88];
  v81 = v78[89];
  __swift_project_boxed_opaque_existential_1(v149, v80);
  v167 = 0;
  v168 = 0xE000000000000000;
  swift_bridgeObjectRetain_n();
  sub_20A5B8E94();
  sub_20A5B899C();
  *(_QWORD *)(v0 + 1952) = v79;
  sub_20A5B9170();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  v82 = v167;
  LOBYTE(v167) = 12;
  (*(void (**)(unint64_t, unint64_t, unint64_t *, uint64_t, uint64_t))(v81 + 16))(v82, v168, &v167, v80, v81);
  swift_bridgeObjectRelease();
  v83 = v78[88];
  v84 = v78[89];
  __swift_project_boxed_opaque_existential_1(v149, v83);
  v167 = 0;
  v168 = 0xE000000000000000;
  sub_20A5B8E94();
  swift_bridgeObjectRelease();
  v167 = 0xD000000000000017;
  v168 = 0x800000020A5E2860;
  sub_20A5B88AC();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  v85 = v167;
  LOBYTE(v167) = 12;
  (*(void (**)(unint64_t, unint64_t, unint64_t *, uint64_t, uint64_t))(v84 + 16))(v85, v168, &v167, v83, v84);
  swift_bridgeObjectRelease();
  v86 = v78[88];
  v87 = v78[89];
  __swift_project_boxed_opaque_existential_1(v149, v86);
  v167 = 0;
  v168 = 0xE000000000000000;
  sub_20A5B8E94();
  swift_bridgeObjectRelease();
  v167 = 0xD000000000000028;
  v168 = 0x800000020A5E2880;
  sub_20A5B8894();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v88 = v167;
  LOBYTE(v167) = 12;
  (*(void (**)(unint64_t, unint64_t, unint64_t *, uint64_t, uint64_t))(v87 + 16))(v88, v168, &v167, v86, v87);
  sub_20A4EF1D8(v160);
  v89 = v149;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v90 = v162;
  v50 = v164;
LABEL_16:
  *(_QWORD *)(v0 + 2048) = v90;
  *(_QWORD *)(v0 + 2040) = v50;
  if (*(_BYTE *)(v0 + 1377) == 1)
  {
    v94 = *(_QWORD *)(v0 + 1968);
    v95 = *(_QWORD *)(v94 + 704);
    v96 = *(_QWORD *)(v94 + 712);
    __swift_project_boxed_opaque_existential_1(v89, v95);
    LOBYTE(v167) = 12;
    (*(void (**)(unint64_t, unint64_t, unint64_t *, uint64_t, uint64_t))(v96 + 16))(0xD000000000000048, 0x800000020A5E27E0, &v167, v95, v96);
    sub_20A4EF0EC((_QWORD *)(v0 + 1384));
    sub_20A44CFC4(v90, v50);
    goto LABEL_18;
  }
  v98 = *(_QWORD *)(v0 + 2024);
  v99 = *(_QWORD *)(v0 + 2016);
  v100 = *(_QWORD *)(v0 + 2008);
  v101 = *(_QWORD *)(v0 + 1960);
  v103 = *(_QWORD *)(v101 + 16);
  v102 = *(_QWORD *)(v101 + 24);
  v104 = v101 + *(int *)(type metadata accessor for ODNAssessmentsFeedbackManager.ODNResultsPayload(0) + 88);
  sub_20A47D62C(v104, v100, &qword_2545FB168);
  v105 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v98 + 48);
  v106 = v105(v100, 1, v99);
  v107 = *(_QWORD *)(v0 + 2008);
  if (v106 == 1)
  {
    swift_bridgeObjectRetain();
    sub_20A44CE2C(v107, &qword_2545FB168);
    v108 = 0;
    v109 = 0;
  }
  else
  {
    v108 = *(_QWORD *)(v107 + 16);
    v109 = *(_QWORD *)(v107 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_20A465AB4(v107, type metadata accessor for ODNAssessmentsFeedbackManager.ORDResultsPayload);
  }
  v110 = *(_QWORD *)(v0 + 2016);
  v111 = *(_QWORD *)(v0 + 2000);
  sub_20A47D62C(v104, v111, &qword_2545FB168);
  if (v105(v111, 1, v110) == 1)
  {
    v112 = *(_QWORD *)(v0 + 1976);
    sub_20A44CE2C(*(_QWORD *)(v0 + 2000), &qword_2545FB168);
    v113 = type metadata accessor for AssessmentTiming();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v113 - 8) + 56))(v112, 1, 1, v113);
  }
  else
  {
    v114 = *(_QWORD *)(v0 + 2000);
    sub_20A47D62C(v114 + *(int *)(*(_QWORD *)(v0 + 2016) + 24), *(_QWORD *)(v0 + 1976), &qword_2545FB158);
    sub_20A465AB4(v114, type metadata accessor for ODNAssessmentsFeedbackManager.ORDResultsPayload);
  }
  v115 = *(_QWORD *)(v0 + 2016);
  v116 = *(_QWORD *)(v0 + 1992);
  sub_20A47D62C(v104, v116, &qword_2545FB168);
  if (v105(v116, 1, v115) == 1)
  {
    sub_20A44CE2C(*(_QWORD *)(v0 + 1992), &qword_2545FB168);
    v117 = 2;
  }
  else
  {
    v118 = *(_QWORD *)(v0 + 1992);
    v117 = *(_BYTE *)(v118 + *(int *)(*(_QWORD *)(v0 + 2016) + 28));
    sub_20A465AB4(v118, type metadata accessor for ODNAssessmentsFeedbackManager.ORDResultsPayload);
  }
  v119 = *(_QWORD *)(v0 + 2016);
  v120 = *(_QWORD *)(v0 + 1984);
  sub_20A47D62C(v104, v120, &qword_2545FB168);
  if (v105(v120, 1, v119) == 1)
  {
    sub_20A44CE2C(*(_QWORD *)(v0 + 1984), &qword_2545FB168);
    v121 = 0;
  }
  else
  {
    v122 = *(_QWORD *)(v0 + 1984);
    v121 = *(_QWORD *)(v122 + *(int *)(*(_QWORD *)(v0 + 2016) + 32));
    swift_bridgeObjectRetain();
    sub_20A465AB4(v122, type metadata accessor for ODNAssessmentsFeedbackManager.ORDResultsPayload);
  }
  v123 = *(_QWORD **)(v0 + 2032);
  v124 = *(int **)(v0 + 2016);
  v125 = *(_QWORD *)(v0 + 1976);
  *v123 = v103;
  v123[1] = v102;
  v123[2] = v108;
  v123[3] = v109;
  sub_20A459C88(v125, (uint64_t)v123 + v124[6], &qword_2545FB158);
  *((_BYTE *)v123 + v124[7]) = v117;
  *(_QWORD *)((char *)v123 + v124[8]) = v121;
  v126 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 2056) = v126;
  *v126 = v0;
  v126[1] = sub_20A4ED224;
  return sub_20A4ED51C(*(_QWORD *)(v0 + 2032));
}

uint64_t sub_20A4ED224()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 2064) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A4ED288()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 2032);
  sub_20A44CFC4(*(_QWORD *)(v0 + 2048), *(_QWORD *)(v0 + 2040));
  sub_20A4EF0EC((_QWORD *)(v0 + 1384));
  sub_20A465AB4(v1, type metadata accessor for ODNAssessmentsFeedbackManager.ORDResultsPayload);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4ED334()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 2032);
  sub_20A44CFC4(*(_QWORD *)(v0 + 2048), *(_QWORD *)(v0 + 2040));
  sub_20A4EF0EC((_QWORD *)(v0 + 1384));
  sub_20A465AB4(v1, type metadata accessor for ODNAssessmentsFeedbackManager.ORDResultsPayload);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4ED3E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  BOOL v17;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_20A5B929C();
    sub_20A5B8978();
    v6 = sub_20A5B92CC();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_20A5B91AC() & 1) != 0)
        return 1;
      v14 = ~v7;
      v15 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
      {
        while (1)
        {
          v16 = (_QWORD *)(v10 + 16 * v15);
          v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_20A5B91AC() & 1) != 0)
            break;
          result = 0;
          v15 = (v15 + 1) & v14;
          if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_20A4ED51C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[598] = v1;
  v2[597] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB158);
  v2[599] = swift_task_alloc();
  v3 = type metadata accessor for AssessmentTiming();
  v2[600] = v3;
  v2[601] = *(_QWORD *)(v3 - 8);
  v2[602] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A4ED5A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  char v19;
  char v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  _QWORD *v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  const void *v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t (*v66)(void);
  char v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;

  v78 = v0 + 4408;
  v1 = *(_QWORD *)(v0 + 4776);
  v2 = *(_QWORD *)(v0 + 4784) + 680;
  sub_20A47BD60(v2, v0 + 4624);
  v3 = *(_QWORD *)(v0 + 4648);
  v4 = *(_QWORD *)(v0 + 4656);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 4624), v3);
  sub_20A5B8E94();
  swift_bridgeObjectRelease();
  v81 = 0xD000000000000014;
  v82 = 0x800000020A5E2600;
  v76 = (_QWORD *)v2;
  v5 = *(uint64_t **)(v0 + 4776);
  swift_bridgeObjectRetain();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  LOBYTE(v81) = 12;
  (*(void (**)(unint64_t, unint64_t, unint64_t *, uint64_t, uint64_t))(v4 + 32))(0xD000000000000014, 0x800000020A5E2600, &v81, v3, v4);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 4624);
  v72 = *v5;
  v73 = v5[1];
  v6 = *(_QWORD *)(v1 + 24);
  if (v6)
  {
    v7 = *(_QWORD *)(v1 + 16);
    v8 = *(_QWORD *)(v0 + 4808);
    v9 = *(_QWORD *)(v0 + 4800);
    v10 = *(_QWORD *)(v0 + 4792);
    v11 = *(_QWORD *)(v0 + 4776);
    v12 = type metadata accessor for ODNAssessmentsFeedbackManager.ORDResultsPayload(0);
    sub_20A47D62C(v11 + *(int *)(v12 + 24), v10, &qword_2545FB158);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 1, v9) == 1)
    {
      sub_20A44CE2C(*(_QWORD *)(v0 + 4792), &qword_2545FB158);
    }
    else
    {
      v13 = *(_QWORD *)(v0 + 4776);
      sub_20A4EEECC(*(_QWORD *)(v0 + 4792), *(_QWORD *)(v0 + 4816));
      v14 = *(unsigned __int8 *)(v13 + *(int *)(v12 + 28));
      v15 = *(_QWORD *)(v0 + 4816);
      if (v14 != 2)
      {
        v70 = AssessmentTiming.assessmentReadyBeforeFeedbackDuration.getter();
        v69 = v16 & 1;
        v68 = AssessmentTiming.updateToAssessmentDuration.getter();
        v67 = v17 & 1;
        v18 = AssessmentTiming.requestToReturnDuration.getter();
        v20 = v19 & 1;
        v21 = (v14 & 1) == 0;
        if ((v14 & 1) != 0)
          v22 = 0x74756F656D6974;
        else
          v22 = 0x6465747365676E69;
        if (v21)
          v23 = 0xE800000000000000;
        else
          v23 = 0xE700000000000000;
        swift_beginAccess();
        sub_20A464D74(v7, v6, v70, v69, v68, v67, v18, v20, v22, v23);
        swift_endAccess();
        swift_bridgeObjectRelease();
      }
      sub_20A465AB4(v15, (uint64_t (*)(_QWORD))type metadata accessor for AssessmentTiming);
    }
  }
  v24 = *(_QWORD *)(v0 + 4784);
  swift_beginAccess();
  sub_20A459C88(v24 + 440, v78, &qword_2545FA7D0);
  v25 = *(unsigned __int8 *)(v24 + 113);
  v27 = *(_QWORD *)(v24 + 120);
  v26 = *(_QWORD *)(v24 + 128);
  *(_QWORD *)(v0 + 4824) = v26;
  if (v25 != 1)
    goto LABEL_18;
  if (v26)
  {
    sub_20A459C88(v78, v0 + 3976, &qword_2545FA7D0);
    if (sub_20A4650DC(v0 + 3976) == 1)
    {
LABEL_19:
      swift_bridgeObjectRetain();
      goto LABEL_21;
    }
    if (v73)
    {
      v28 = *(_OWORD *)(v0 + 4152);
      *(_OWORD *)(v0 + 4352) = *(_OWORD *)(v0 + 4136);
      *(_OWORD *)(v0 + 4368) = v28;
      *(_OWORD *)(v0 + 4384) = *(_OWORD *)(v0 + 4168);
      v29 = *(_OWORD *)(v0 + 4088);
      *(_OWORD *)(v0 + 4288) = *(_OWORD *)(v0 + 4072);
      *(_OWORD *)(v0 + 4304) = v29;
      v30 = *(_OWORD *)(v0 + 4120);
      *(_OWORD *)(v0 + 4320) = *(_OWORD *)(v0 + 4104);
      *(_OWORD *)(v0 + 4336) = v30;
      v31 = *(_OWORD *)(v0 + 4024);
      *(_OWORD *)(v0 + 4224) = *(_OWORD *)(v0 + 4008);
      *(_OWORD *)(v0 + 4240) = v31;
      v32 = *(_OWORD *)(v0 + 4056);
      *(_OWORD *)(v0 + 4256) = *(_OWORD *)(v0 + 4040);
      *(_OWORD *)(v0 + 4272) = v32;
      v33 = *(_OWORD *)(v0 + 3992);
      *(_OWORD *)(v0 + 4192) = *(_OWORD *)(v0 + 3976);
      *(_BYTE *)(v0 + 4400) = *(_BYTE *)(v0 + 4184);
      *(_OWORD *)(v0 + 4208) = v33;
      sub_20A4EED4C(v78, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_20A4EEC10);
      swift_bridgeObjectRetain();
      v34 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 4832) = v34;
      *v34 = v0;
      v34[1] = sub_20A4EE0C0;
      return sub_20A4F6F08(v72, v73, v27, v26, v0 + 4192);
    }
LABEL_18:
    sub_20A4EED4C(v78, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_20A4EEC10);
    goto LABEL_19;
  }
  sub_20A4EED4C(v78, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_20A4EEC10);
LABEL_21:
  v36 = *(_QWORD *)(v0 + 4784);
  v37 = *(_QWORD *)(v36 + 704);
  v38 = *(_QWORD *)(v36 + 712);
  __swift_project_boxed_opaque_existential_1(v76, v37);
  LOBYTE(v81) = 12;
  (*(void (**)(unint64_t, unint64_t, unint64_t *, uint64_t, uint64_t))(v38 + 32))(0xD00000000000001ALL, 0x800000020A5E2620, &v81, v37, v38);
  if (v25)
  {
    if (v26)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v39 = *(_QWORD *)(v36 + 704);
      v40 = *(_QWORD *)(v36 + 712);
      __swift_project_boxed_opaque_existential_1(v76, v39);
      sub_20A4B2778(&v81);
      Loggable.info(_:category:)(0xD00000000000003CLL, 0x800000020A5E2710, (char *)&v81, v39, v40);
    }
    sub_20A459C88(v78, v0 + 3760, &qword_2545FA7D0);
    if (sub_20A4650DC(v0 + 3760) == 1)
    {
      sub_20A4EED08();
      swift_allocError();
      *v41 = 0x8000000000000010;
      swift_willThrow();
      goto LABEL_51;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v42 = *(_QWORD *)(v0 + 4776);
  v43 = *(_QWORD *)(v42 + 24);
  v44 = *(_QWORD *)(v0 + 4784);
  if (v43)
  {
    v45 = v0 + 3184;
    v46 = *(_QWORD *)(v44 + 656);
    if (*(_QWORD *)(v46 + 16))
    {
      v47 = *(_QWORD *)(v42 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v48 = sub_20A47094C(v47, v43);
      if ((v49 & 1) != 0)
      {
        v50 = (const void *)(*(_QWORD *)(v46 + 56) + 288 * v48);
        memcpy((void *)(v0 + 304), v50, 0x120uLL);
        memmove((void *)(v0 + 592), v50, 0x120uLL);
        nullsub_1(v0 + 592);
        sub_20A47B9B0((_QWORD *)(v0 + 304));
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v51 = v0 + 592;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_20A4653B0((_OWORD *)(v0 + 1456));
        v51 = v0 + 1456;
      }
    }
    else
    {
      sub_20A4653B0((_OWORD *)(v0 + 3472));
      v51 = v0 + 3472;
    }
    sub_20A459C88(v51, v0 + 3184, &qword_2545F9F88);
  }
  else
  {
    v45 = v0 + 1168;
    sub_20A459C88(v44 + 152, v0 + 1168, &qword_2545F9F88);
    sub_20A465660(v0 + 1168, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20A4656E4);
  }
  sub_20A459C88(v45, v0 + 880, &qword_2545F9F88);
  v52 = *(_QWORD *)(v0 + 4784);
  v53 = *(unsigned __int8 *)(v52 + 112);
  v55 = *(_QWORD *)(v52 + 120);
  v54 = *(_QWORD *)(v52 + 128);
  *(_QWORD *)(v0 + 4848) = v54;
  if (v53 == 1)
  {
    if (v54)
    {
      sub_20A459C88(v0 + 880, v0 + 2320, &qword_2545F9F88);
      if (sub_20A4650DC(v0 + 2320) != 1)
      {
        memcpy((void *)(v0 + 2608), (const void *)(v0 + 2320), 0x120uLL);
        swift_bridgeObjectRetain();
        sub_20A465660(v0 + 880, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20A4656E4);
        v61 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 4856) = v61;
        *v61 = v0;
        v61[1] = sub_20A4EE754;
        return sub_20A4F7614((void *)(v0 + 2608), v55, v54);
      }
      v75 = 1;
      v77 = v0 + 880;
      swift_bridgeObjectRetain();
      v52 = *(_QWORD *)(v0 + 4784);
    }
    else
    {
      v75 = 1;
      v77 = v0 + 880;
    }
  }
  else
  {
    v75 = v53;
    v77 = v0 + 880;
    swift_bridgeObjectRetain();
  }
  sub_20A47BD60(v52 + 680, v0 + 4664);
  v74 = *(_QWORD *)(v0 + 4688);
  v71 = *(_QWORD *)(v0 + 4696);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 4664), v74);
  v81 = 0;
  v82 = 0xE000000000000000;
  sub_20A5B8E94();
  v79 = v81;
  v80 = v82;
  sub_20A5B899C();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  sub_20A459C88(v77, v0 + 1744, &qword_2545F9F88);
  sub_20A4650DC(v0 + 1744);
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  LOBYTE(v81) = 12;
  (*(void (**)(unint64_t, unint64_t, unint64_t *, uint64_t))(v71 + 32))(v79, v80, &v81, v74);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 4664);
  if ((v75 & 1) != 0)
  {
    if (v54)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v62 = *(_QWORD **)(v0 + 4784);
      v63 = v62[88];
      v64 = v62[89];
      __swift_project_boxed_opaque_existential_1(v62 + 85, v63);
      sub_20A4B2778(&v81);
      Loggable.info(_:category:)(0xD00000000000003CLL, 0x800000020A5E26D0, (char *)&v81, v63, v64);
    }
    sub_20A459C88(v77, v0 + 2032, &qword_2545F9F88);
    if (sub_20A4650DC(v0 + 2032) != 1)
    {
      sub_20A465660(v77, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20A4654E0);
      sub_20A4EED4C(v78, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_20A4EEDC0);
      swift_task_dealloc();
      swift_task_dealloc();
      v66 = *(uint64_t (**)(void))(v0 + 8);
      return v66();
    }
    sub_20A4EED08();
    swift_allocError();
    *v65 = 0x8000000000000018;
    swift_willThrow();
    v60 = v0 + 4408;
  }
  else
  {
    v56 = *(_QWORD **)(v0 + 4784);
    swift_bridgeObjectRelease();
    v57 = v56[88];
    v58 = v56[89];
    __swift_project_boxed_opaque_existential_1(v56 + 85, v57);
    LOBYTE(v81) = 12;
    (*(void (**)(unint64_t, unint64_t, unint64_t *, uint64_t, uint64_t))(v58 + 32))(0xD00000000000001ALL, 0x800000020A5E26B0, &v81, v57, v58);
    sub_20A4EED08();
    swift_allocError();
    *v59 = 0x8000000000000008;
    swift_willThrow();
    sub_20A465660(v77, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20A4654E0);
    v60 = v0 + 4408;
  }
  sub_20A4EED4C(v60, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_20A4EEDC0);
LABEL_51:
  swift_task_dealloc();
  swift_task_dealloc();
  v66 = *(uint64_t (**)(void))(v0 + 8);
  return v66();
}

uint64_t sub_20A4EE0C0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 4840) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_20A4EE134()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t (*v27)(void);
  char v28;
  uint64_t v29;
  _QWORD v30[3];

  swift_bridgeObjectRelease();
  v1 = *(_QWORD *)(v0 + 4776);
  v2 = *(_QWORD *)(v1 + 24);
  if (v2)
  {
    v3 = v0 + 3184;
    v4 = *(_QWORD *)(*(_QWORD *)(v0 + 4784) + 656);
    if (*(_QWORD *)(v4 + 16))
    {
      v5 = *(_QWORD *)(v1 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v6 = sub_20A47094C(v5, v2);
      if ((v7 & 1) != 0)
      {
        v8 = (const void *)(*(_QWORD *)(v4 + 56) + 288 * v6);
        memcpy((void *)(v0 + 304), v8, 0x120uLL);
        memmove((void *)(v0 + 592), v8, 0x120uLL);
        nullsub_1(v0 + 592);
        sub_20A47B9B0((_QWORD *)(v0 + 304));
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v9 = v0 + 592;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_20A4653B0((_OWORD *)(v0 + 1456));
        v9 = v0 + 1456;
      }
    }
    else
    {
      sub_20A4653B0((_OWORD *)(v0 + 3472));
      v9 = v0 + 3472;
    }
    sub_20A459C88(v9, v0 + 3184, &qword_2545F9F88);
  }
  else
  {
    v3 = v0 + 1168;
    sub_20A459C88(*(_QWORD *)(v0 + 4784) + 152, v0 + 1168, &qword_2545F9F88);
    sub_20A465660(v0 + 1168, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20A4656E4);
  }
  sub_20A459C88(v3, v0 + 880, &qword_2545F9F88);
  v10 = *(_QWORD *)(v0 + 4784);
  v11 = *(unsigned __int8 *)(v10 + 112);
  v13 = *(_QWORD *)(v10 + 120);
  v12 = *(_QWORD *)(v10 + 128);
  *(_QWORD *)(v0 + 4848) = v12;
  if (v11 == 1)
  {
    if (v12)
    {
      sub_20A459C88(v0 + 880, v0 + 2320, &qword_2545F9F88);
      if (sub_20A4650DC(v0 + 2320) != 1)
      {
        memcpy((void *)(v0 + 2608), (const void *)(v0 + 2320), 0x120uLL);
        swift_bridgeObjectRetain();
        sub_20A465660(v0 + 880, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20A4656E4);
        v21 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 4856) = v21;
        *v21 = v0;
        v21[1] = sub_20A4EE754;
        return sub_20A4F7614((void *)(v0 + 2608), v13, v12);
      }
      v28 = 1;
      v14 = v0 + 880;
      swift_bridgeObjectRetain();
      v10 = *(_QWORD *)(v0 + 4784);
    }
    else
    {
      v28 = 1;
      v14 = v0 + 880;
    }
  }
  else
  {
    v28 = v11;
    v14 = v0 + 880;
    swift_bridgeObjectRetain();
  }
  sub_20A47BD60(v10 + 680, v0 + 4664);
  v29 = *(_QWORD *)(v0 + 4688);
  v15 = *(_QWORD *)(v0 + 4696);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 4664), v29);
  v30[0] = 12;
  v30[1] = 0xE000000000000000;
  sub_20A5B8E94();
  sub_20A5B899C();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  sub_20A459C88(v14, v0 + 1744, &qword_2545F9F88);
  sub_20A4650DC(v0 + 1744);
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  (*(void (**)(_QWORD, unint64_t, _QWORD *, uint64_t, uint64_t))(v15 + 32))(0, 0xE000000000000000, v30, v29, v15);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 4664);
  if ((v28 & 1) != 0)
  {
    if (v12)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v23 = *(_QWORD **)(v0 + 4784);
      v24 = v23[88];
      v25 = v23[89];
      __swift_project_boxed_opaque_existential_1(v23 + 85, v24);
      sub_20A4B2778(v30);
      Loggable.info(_:category:)(0xD00000000000003CLL, 0x800000020A5E26D0, (char *)v30, v24, v25);
    }
    sub_20A459C88(v14, v0 + 2032, &qword_2545F9F88);
    if (sub_20A4650DC(v0 + 2032) != 1)
    {
      sub_20A465660(v14, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20A4654E0);
      sub_20A4EED4C(v0 + 4408, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_20A4EEDC0);
      swift_task_dealloc();
      swift_task_dealloc();
      v27 = *(uint64_t (**)(void))(v0 + 8);
      return v27();
    }
    sub_20A4EED08();
    swift_allocError();
    *v26 = 0x8000000000000018;
    swift_willThrow();
    v20 = v0 + 4408;
  }
  else
  {
    v16 = *(_QWORD **)(v0 + 4784);
    swift_bridgeObjectRelease();
    v17 = v16[88];
    v18 = v16[89];
    __swift_project_boxed_opaque_existential_1(v16 + 85, v17);
    LOBYTE(v30[0]) = 12;
    (*(void (**)(unint64_t, unint64_t, _QWORD *, uint64_t, uint64_t))(v18 + 32))(0xD00000000000001ALL, 0x800000020A5E26B0, v30, v17, v18);
    sub_20A4EED08();
    swift_allocError();
    *v19 = 0x8000000000000008;
    swift_willThrow();
    sub_20A465660(v14, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20A4654E0);
    v20 = v0 + 4408;
  }
  sub_20A4EED4C(v20, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_20A4EEDC0);
  swift_task_dealloc();
  swift_task_dealloc();
  v27 = *(uint64_t (**)(void))(v0 + 8);
  return v27();
}

uint64_t sub_20A4EE754()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 4864) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_20A4EE7C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 4776);
  v2 = *(_QWORD *)(v1 + 24);
  if (v2)
  {
    v3 = *(_QWORD *)(v1 + 16);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_20A57C1F4(&v6, v3, v2);
    swift_endAccess();
    swift_bridgeObjectRelease();
  }
  v4 = *(_QWORD *)(v0 + 4784);
  sub_20A4653B0((_OWORD *)(v0 + 16));
  v4 += 152;
  sub_20A459C88(v4, v0 + 2896, &qword_2545F9F88);
  sub_20A459C88(v0 + 16, v4, &qword_2545F9F88);
  sub_20A465660(v0 + 2896, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20A4654E0);
  sub_20A465660(v0 + 880, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20A4654E0);
  swift_bridgeObjectRelease();
  sub_20A465660(v0 + 880, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20A4654E0);
  sub_20A4EED4C(v0 + 4408, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_20A4EEDC0);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4EE910()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + 4840);
  sub_20A4EED08();
  swift_allocError();
  *v2 = v1;
  swift_willThrow();
  sub_20A4EED4C(v0 + 4408, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_20A4EEDC0);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4EE9A0()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t *v2;
  id v3;

  v1 = *(_QWORD *)(v0 + 4864);
  sub_20A4EED08();
  swift_allocError();
  *v2 = v1 | 0x4000000000000000;
  v3 = (id)v1;
  swift_willThrow();
  sub_20A465660(v0 + 880, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20A4654E0);
  sub_20A4EED4C(v0 + 4408, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_20A4EEDC0);
  sub_20A465660(v0 + 880, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20A4654E0);

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4EEA70(char a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v7 + 136) = a6;
  *(_QWORD *)(v7 + 144) = v6;
  *(_QWORD *)(v7 + 120) = a4;
  *(_QWORD *)(v7 + 128) = a5;
  *(_QWORD *)(v7 + 112) = a3;
  *(_BYTE *)(v7 + 153) = a2;
  *(_BYTE *)(v7 + 152) = a1;
  return swift_task_switch();
}

uint64_t sub_20A4EEA98()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  char v3;
  int v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(unsigned __int8 *)(v0 + 152);
  if (v1 != 2)
  {
    v2 = *(_QWORD *)(v0 + 144);
    v3 = v1 & 1;
    swift_beginAccess();
    *(_BYTE *)(v2 + 113) = v3;
  }
  v4 = *(unsigned __int8 *)(v0 + 153);
  if (v4 != 2)
  {
    v5 = *(_QWORD *)(v0 + 144);
    v6 = v4 & 1;
    swift_beginAccess();
    *(_BYTE *)(v5 + 112) = v6;
  }
  v7 = *(_QWORD *)(v0 + 120);
  if (v7)
  {
    v8 = *(_QWORD *)(v0 + 144);
    v9 = *(_QWORD *)(v0 + 112);
    swift_beginAccess();
    *(_QWORD *)(v8 + 136) = v9;
    *(_QWORD *)(v8 + 144) = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v10 = *(_QWORD *)(v0 + 136);
  if (v10)
  {
    v11 = *(_QWORD *)(v0 + 144);
    v12 = *(_QWORD *)(v0 + 128);
    swift_beginAccess();
    *(_QWORD *)(v11 + 120) = v12;
    *(_QWORD *)(v11 + 128) = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4EEB98()
{
  uint64_t v0;
  _BYTE v2[560];

  memcpy(v2, (const void *)(v0 + 112), sizeof(v2));
  sub_20A4EF2E0((uint64_t)v2);

  __swift_destroy_boxed_opaque_existential_1(v0 + 680);
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for ODNAssessmentsFeedbackManager()
{
  return objc_opt_self();
}

uint64_t sub_20A4EEC10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_20A465800(a5, a6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_20A465850(a17, a18, a19, a20, a21);
    return swift_retain();
  }
  return result;
}

unint64_t sub_20A4EED08()
{
  unint64_t result;

  result = qword_2545FB160;
  if (!qword_2545FB160)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C3A14, &type metadata for ODNAssessmentsFeedbackManager.ODNAssessmentsFeedbackManagerError);
    atomic_store(result, (unint64_t *)&qword_2545FB160);
  }
  return result;
}

uint64_t sub_20A4EED4C(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  char v4;

  v4 = *(_BYTE *)(a1 + 208);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    v4);
  return a1;
}

uint64_t sub_20A4EEDC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_20A4655FC(a5, a6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_20A46564C(a17, a18, a19, a20, a21);
    return swift_release();
  }
  return result;
}

uint64_t type metadata accessor for ODNAssessmentsFeedbackManager.ORDResultsPayload(uint64_t a1)
{
  return sub_20A4659F8(a1, (uint64_t *)&unk_2545FB198);
}

uint64_t sub_20A4EEECC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AssessmentTiming();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_QWORD *sub_20A4EEF10(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = a1[4];
  v3 = a1[5];
  v8 = a1[17];
  v9 = a1[16];
  v6 = a1[19];
  v7 = a1[18];
  v5 = a1[20];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_20A465800(v2, v3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_20A465850(v9, v8, v7, v6, v5);
  swift_retain();
  return a1;
}

uint64_t sub_20A4EEFFC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_20A4EF038()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_2545FB178;
  if (!qword_2545FB178)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545FB170);
    v2 = sub_20A489A34();
    result = MEMORY[0x20BD26CEC](MEMORY[0x24BEE4AA8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2545FB178);
  }
  return result;
}

uint64_t sub_20A4EF09C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for ODNAssessmentsFeedbackManager.ODNResultsPayload(uint64_t a1)
{
  return sub_20A4659F8(a1, (uint64_t *)&unk_2545FB180);
}

_QWORD *sub_20A4EF0EC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = a1[4];
  v3 = a1[5];
  v8 = a1[17];
  v9 = a1[16];
  v6 = a1[19];
  v7 = a1[18];
  v5 = a1[20];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_20A4655FC(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_20A46564C(v9, v8, v7, v6, v5);
  swift_release();
  return a1;
}

_QWORD *sub_20A4EF1D8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = a1[3];
  v3 = a1[4];
  v8 = a1[21];
  v9 = a1[20];
  v6 = a1[23];
  v7 = a1[22];
  v5 = a1[24];
  swift_bridgeObjectRelease();
  sub_20A4655FC(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_20A46564C(v9, v8, v7, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_20A4EF2E0(uint64_t a1)
{
  uint64_t v2;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v33 = *(_QWORD *)(a1 + 48);
  v34 = *(_QWORD *)(a1 + 40);
  v31 = *(_QWORD *)(a1 + 64);
  v32 = *(_QWORD *)(a1 + 56);
  v29 = *(_QWORD *)(a1 + 80);
  v30 = *(_QWORD *)(a1 + 72);
  v27 = *(_QWORD *)(a1 + 96);
  v28 = *(_QWORD *)(a1 + 88);
  v19 = *(_OWORD *)(a1 + 104);
  v17 = *(_OWORD *)(a1 + 120);
  v15 = *(_OWORD *)(a1 + 136);
  v13 = *(_OWORD *)(a1 + 152);
  v11 = *(_OWORD *)(a1 + 168);
  v9 = *(_OWORD *)(a1 + 184);
  v7 = *(_OWORD *)(a1 + 200);
  v5 = *(_OWORD *)(a1 + 216);
  v4 = *(_OWORD *)(a1 + 232);
  v2 = *(_QWORD *)(a1 + 328);
  v25 = *(_QWORD *)(a1 + 344);
  v26 = *(_QWORD *)(a1 + 336);
  v23 = *(_QWORD *)(a1 + 360);
  v24 = *(_QWORD *)(a1 + 352);
  v21 = *(_QWORD *)(a1 + 376);
  v22 = *(_QWORD *)(a1 + 368);
  v20 = *(_QWORD *)(a1 + 384);
  v18 = *(_OWORD *)(a1 + 392);
  v16 = *(_OWORD *)(a1 + 408);
  v14 = *(_OWORD *)(a1 + 424);
  v12 = *(_OWORD *)(a1 + 440);
  v10 = *(_OWORD *)(a1 + 456);
  v8 = *(_OWORD *)(a1 + 472);
  v6 = *(_OWORD *)(a1 + 488);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_20A4654E0(v34, v33, v32, v31, v30, v29, v28, v27, v19, *((uint64_t *)&v19 + 1), v17, *((uint64_t *)&v17 + 1), v15, *((uint64_t *)&v15 + 1), v13, *((uint64_t *)&v13 + 1), v11, *((uint64_t *)&v11 + 1), v9,
    *((uint64_t *)&v9 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v4);
  sub_20A4EEDC0(v2, v26, v25, v24, v23, v22, v21, v20, v18, *((uint64_t *)&v18 + 1), v16, *((uint64_t *)&v16 + 1), v14, *((uint64_t *)&v14 + 1), v12, *((uint64_t *)&v12 + 1), v10, *((uint64_t *)&v10 + 1), v8,
    *((uint64_t *)&v8 + 1),
    v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_20A4EF528(uint64_t result)
{
  if (result)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_20A4EF554(uint64_t result)
{
  if (result)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_20A4EF580(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  int *v39;
  uint64_t v40;
  unsigned int (*v41)(_QWORD *, uint64_t, int *);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int (*v50)(char *, uint64_t, uint64_t);
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(char *, char *, uint64_t);
  char *v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  void (*v85)(_QWORD *, _QWORD, uint64_t, int *);
  int *v87;
  uint64_t v88;
  void (*v89)(char *, char *, uint64_t);
  _QWORD *v90;
  uint64_t v91;
  unsigned int (*v92)(char *, uint64_t, uint64_t);

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v14 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    v9 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v9;
    v10 = a2[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v10)
    {
      *(_QWORD *)(a1 + 48) = a2[6];
      *(_QWORD *)(a1 + 56) = v10;
      v11 = a2[9];
      *(_QWORD *)(a1 + 64) = a2[8];
      *(_QWORD *)(a1 + 72) = v11;
      v12 = a2[11];
      *(_QWORD *)(a1 + 80) = a2[10];
      *(_QWORD *)(a1 + 88) = v12;
      v13 = a2[13];
      *(_QWORD *)(a1 + 96) = a2[12];
      *(_QWORD *)(a1 + 104) = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v15 = *((_OWORD *)a2 + 4);
      *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
      *(_OWORD *)(a1 + 64) = v15;
      v16 = *((_OWORD *)a2 + 6);
      *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
      *(_OWORD *)(a1 + 96) = v16;
    }
    v17 = a2[15];
    *(_QWORD *)(a1 + 112) = a2[14];
    *(_QWORD *)(a1 + 120) = v17;
    v18 = a2[17];
    swift_bridgeObjectRetain();
    if (v18)
    {
      *(_QWORD *)(a1 + 128) = a2[16];
      *(_QWORD *)(a1 + 136) = v18;
      v19 = a2[19];
      *(_QWORD *)(a1 + 144) = a2[18];
      *(_QWORD *)(a1 + 152) = v19;
      v20 = a2[21];
      *(_QWORD *)(a1 + 160) = a2[20];
      *(_QWORD *)(a1 + 168) = v20;
      v21 = a2[23];
      *(_QWORD *)(a1 + 176) = a2[22];
      *(_QWORD *)(a1 + 184) = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v22 = *((_OWORD *)a2 + 9);
      *(_OWORD *)(a1 + 128) = *((_OWORD *)a2 + 8);
      *(_OWORD *)(a1 + 144) = v22;
      v23 = *((_OWORD *)a2 + 11);
      *(_OWORD *)(a1 + 160) = *((_OWORD *)a2 + 10);
      *(_OWORD *)(a1 + 176) = v23;
    }
    v24 = a2[25];
    *(_QWORD *)(a1 + 192) = a2[24];
    *(_QWORD *)(a1 + 200) = v24;
    v25 = a2[27];
    swift_bridgeObjectRetain();
    if (v25)
    {
      *(_QWORD *)(a1 + 208) = a2[26];
      *(_QWORD *)(a1 + 216) = v25;
      v26 = a2[29];
      *(_QWORD *)(a1 + 224) = a2[28];
      *(_QWORD *)(a1 + 232) = v26;
      v27 = a2[31];
      *(_QWORD *)(a1 + 240) = a2[30];
      *(_QWORD *)(a1 + 248) = v27;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v28 = *((_OWORD *)a2 + 14);
      *(_OWORD *)(a1 + 208) = *((_OWORD *)a2 + 13);
      *(_OWORD *)(a1 + 224) = v28;
      *(_OWORD *)(a1 + 240) = *((_OWORD *)a2 + 15);
    }
    v29 = a2[33];
    *(_QWORD *)(a1 + 256) = a2[32];
    *(_QWORD *)(a1 + 264) = v29;
    *(_QWORD *)(a1 + 272) = a2[34];
    v30 = a2[39];
    swift_bridgeObjectRetain();
    if (v30 == 1)
    {
      v31 = *(_OWORD *)(a2 + 37);
      *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 35);
      *(_OWORD *)(a1 + 296) = v31;
      *(_QWORD *)(a1 + 312) = a2[39];
    }
    else
    {
      v32 = a2[36];
      *(_QWORD *)(a1 + 280) = a2[35];
      *(_QWORD *)(a1 + 288) = v32;
      *(_BYTE *)(a1 + 296) = *((_BYTE *)a2 + 296);
      *(_QWORD *)(a1 + 304) = a2[38];
      *(_QWORD *)(a1 + 312) = v30;
      swift_bridgeObjectRetain();
    }
    *(_BYTE *)(a1 + 320) = *((_BYTE *)a2 + 320);
    v33 = a2[42];
    *(_QWORD *)(a1 + 328) = a2[41];
    *(_QWORD *)(a1 + 336) = v33;
    *(_BYTE *)(a1 + 344) = *((_BYTE *)a2 + 344);
    v34 = a2[45];
    *(_QWORD *)(a1 + 352) = a2[44];
    *(_QWORD *)(a1 + 360) = v34;
    *(_BYTE *)(a1 + 368) = *((_BYTE *)a2 + 368);
    v35 = a2[48];
    *(_QWORD *)(a1 + 376) = a2[47];
    *(_QWORD *)(a1 + 384) = v35;
    *(_QWORD *)(a1 + 392) = a2[49];
    LOBYTE(v34) = *((_BYTE *)a2 + 400);
    v36 = *(int *)(a3 + 88);
    v37 = (uint64_t *)((char *)a2 + v36);
    v38 = (_QWORD *)(a1 + v36);
    *(_BYTE *)(a1 + 400) = v34;
    v39 = (int *)type metadata accessor for ODNAssessmentsFeedbackManager.ORDResultsPayload(0);
    v40 = *((_QWORD *)v39 - 1);
    v41 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v40 + 48);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    if (v41(v37, 1, v39))
    {
      v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB168);
      memcpy(v38, v37, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      v90 = v38;
      v91 = v40;
      v43 = v37[1];
      *v38 = *v37;
      v38[1] = v43;
      v44 = v37[3];
      v38[2] = v37[2];
      v38[3] = v44;
      v45 = v39[6];
      v46 = (char *)v38 + v45;
      v47 = (char *)v37 + v45;
      v48 = type metadata accessor for AssessmentTiming();
      v49 = *(_QWORD *)(v48 - 8);
      v50 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v50(v47, 1, v48))
      {
        v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB158);
        memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
        v52 = v90;
        v53 = v91;
      }
      else
      {
        v88 = v49;
        v54 = sub_20A5B8F6C();
        v55 = *(_QWORD *)(v54 - 8);
        v56 = *(void (**)(char *, char *, uint64_t))(v55 + 16);
        v56(v46, v47, v54);
        v56(&v46[*(int *)(v48 + 20)], &v47[*(int *)(v48 + 20)], v54);
        v87 = (int *)v48;
        v57 = *(int *)(v48 + 24);
        v58 = v55;
        v59 = &v46[v57];
        v60 = &v47[v57];
        v92 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48);
        v89 = v56;
        if (v92(&v47[v57], 1, v54))
        {
          v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
          memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
        }
        else
        {
          v56(v59, v60, v54);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v59, 0, 1, v54);
        }
        v62 = v87[7];
        v63 = &v46[v62];
        v64 = &v47[v62];
        if (v92(&v47[v62], 1, v54))
        {
          v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
          memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
        }
        else
        {
          v56(v63, v64, v54);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v63, 0, 1, v54);
        }
        v66 = v87[8];
        v67 = &v46[v66];
        v68 = &v47[v66];
        if (v92(&v47[v66], 1, v54))
        {
          v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
          memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
        }
        else
        {
          v56(v67, v68, v54);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v67, 0, 1, v54);
        }
        v70 = v87[9];
        v71 = &v46[v70];
        v72 = &v47[v70];
        if (v92(&v47[v70], 1, v54))
        {
          v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
          memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
        }
        else
        {
          v56(v71, v72, v54);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v71, 0, 1, v54);
        }
        v74 = v87[10];
        v75 = &v46[v74];
        v76 = &v47[v74];
        if (v92(&v47[v74], 1, v54))
        {
          v77 = v58;
          v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
          memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
          v79 = v89;
        }
        else
        {
          v80 = v76;
          v79 = v56;
          v56(v75, v80, v54);
          v77 = v58;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v75, 0, 1, v54);
        }
        v81 = v87[11];
        v82 = &v46[v81];
        v83 = &v47[v81];
        if (v92(&v47[v81], 1, v54))
        {
          v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
          memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
        }
        else
        {
          v79(v82, v83, v54);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v77 + 56))(v82, 0, 1, v54);
        }
        v52 = v90;
        v53 = v91;
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v88 + 56))(v46, 0, 1, v87);
      }
      *((_BYTE *)v52 + v39[7]) = *((_BYTE *)v37 + v39[7]);
      *(_QWORD *)((char *)v52 + v39[8]) = *(_QWORD *)((char *)v37 + v39[8]);
      v85 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v53 + 56);
      swift_bridgeObjectRetain();
      v85(v52, 0, 1, v39);
    }
  }
  return a1;
}

uint64_t sub_20A4EFC50(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  uint64_t result;
  char *v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t);
  char *v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[7])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (a1[17])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (a1[27])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (a1[39] != 1)
    swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v4 = (char *)a1 + *(int *)(a2 + 88);
  v5 = type metadata accessor for ODNAssessmentsFeedbackManager.ORDResultsPayload(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7 = &v4[*(int *)(v5 + 24)];
    v8 = (int *)type metadata accessor for AssessmentTiming();
    if (!(*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v8 - 1) + 48))(v7, 1, v8))
    {
      v9 = sub_20A5B8F6C();
      v10 = *(_QWORD *)(v9 - 8);
      v11 = *(void (**)(char *, uint64_t))(v10 + 8);
      v11(v7, v9);
      v11(&v7[v8[5]], v9);
      v12 = &v7[v8[6]];
      v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
      if (!v13(v12, 1, v9))
        v11(v12, v9);
      v14 = &v7[v8[7]];
      if (!v13(v14, 1, v9))
        v11(v14, v9);
      v15 = &v7[v8[8]];
      if (!v13(v15, 1, v9))
        v11(v15, v9);
      v16 = &v7[v8[9]];
      if (!v13(v16, 1, v9))
        v11(v16, v9);
      v17 = &v7[v8[10]];
      if (!v13(v17, 1, v9))
        v11(v17, v9);
      v18 = &v7[v8[11]];
      if (!v13(v18, 1, v9))
        v11(v18, v9);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_20A4EFEF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  int *v37;
  uint64_t v38;
  unsigned int (*v39)(_QWORD *, uint64_t, int *);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int (*v48)(char *, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  void (*v81)(_QWORD *, _QWORD, uint64_t, int *);
  int *v83;
  uint64_t v84;
  void (*v85)(char *, char *, uint64_t);
  _QWORD *v86;
  uint64_t v87;
  unsigned int (*v88)(char *, uint64_t, uint64_t);

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  v9 = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v9)
  {
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = v9;
    v10 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = v10;
    v11 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = v11;
    v12 = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v13 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v13;
    v14 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v14;
  }
  v15 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v15;
  v16 = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRetain();
  if (v16)
  {
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = v16;
    v17 = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 152) = v17;
    v18 = *(_QWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    *(_QWORD *)(a1 + 168) = v18;
    v19 = *(_QWORD *)(a2 + 184);
    *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 184) = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v20 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v20;
    v21 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v21;
  }
  v22 = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = v22;
  v23 = *(_QWORD *)(a2 + 216);
  swift_bridgeObjectRetain();
  if (v23)
  {
    *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
    *(_QWORD *)(a1 + 216) = v23;
    v24 = *(_QWORD *)(a2 + 232);
    *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
    *(_QWORD *)(a1 + 232) = v24;
    v25 = *(_QWORD *)(a2 + 248);
    *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
    *(_QWORD *)(a1 + 248) = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v26 = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 224) = v26;
    *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  }
  v27 = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = v27;
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  v28 = *(_QWORD *)(a2 + 312);
  swift_bridgeObjectRetain();
  if (v28 == 1)
  {
    v29 = *(_OWORD *)(a2 + 296);
    *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
    *(_OWORD *)(a1 + 296) = v29;
    *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  }
  else
  {
    v30 = *(_QWORD *)(a2 + 288);
    *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
    *(_QWORD *)(a1 + 288) = v30;
    *(_BYTE *)(a1 + 296) = *(_BYTE *)(a2 + 296);
    *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
    *(_QWORD *)(a1 + 312) = v28;
    swift_bridgeObjectRetain();
  }
  *(_BYTE *)(a1 + 320) = *(_BYTE *)(a2 + 320);
  v31 = *(_QWORD *)(a2 + 336);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  *(_QWORD *)(a1 + 336) = v31;
  *(_BYTE *)(a1 + 344) = *(_BYTE *)(a2 + 344);
  v32 = *(_QWORD *)(a2 + 360);
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 360) = v32;
  *(_BYTE *)(a1 + 368) = *(_BYTE *)(a2 + 368);
  v33 = *(_QWORD *)(a2 + 384);
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  *(_QWORD *)(a1 + 384) = v33;
  *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
  LOBYTE(v32) = *(_BYTE *)(a2 + 400);
  v34 = *(int *)(a3 + 88);
  v35 = (_QWORD *)(a2 + v34);
  v36 = (_QWORD *)(a1 + v34);
  *(_BYTE *)(a1 + 400) = v32;
  v37 = (int *)type metadata accessor for ODNAssessmentsFeedbackManager.ORDResultsPayload(0);
  v38 = *((_QWORD *)v37 - 1);
  v39 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v38 + 48);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  if (v39(v35, 1, v37))
  {
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB168);
    memcpy(v36, v35, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    v86 = v36;
    v87 = v38;
    v41 = v35[1];
    *v36 = *v35;
    v36[1] = v41;
    v42 = v35[3];
    v36[2] = v35[2];
    v36[3] = v42;
    v43 = v37[6];
    v44 = (char *)v36 + v43;
    v45 = (char *)v35 + v43;
    v46 = type metadata accessor for AssessmentTiming();
    v47 = *(_QWORD *)(v46 - 8);
    v48 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v48(v45, 1, v46))
    {
      v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB158);
      memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
      v51 = v86;
      v50 = v87;
    }
    else
    {
      v84 = v47;
      v52 = sub_20A5B8F6C();
      v53 = *(_QWORD *)(v52 - 8);
      v54 = *(void (**)(char *, char *, uint64_t))(v53 + 16);
      v54(v44, v45, v52);
      v54(&v44[*(int *)(v46 + 20)], &v45[*(int *)(v46 + 20)], v52);
      v83 = (int *)v46;
      v55 = *(int *)(v46 + 24);
      v56 = v53;
      v57 = &v44[v55];
      v58 = &v45[v55];
      v88 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48);
      v85 = v54;
      if (v88(&v45[v55], 1, v52))
      {
        v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
        memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
      }
      else
      {
        v54(v57, v58, v52);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v57, 0, 1, v52);
      }
      v60 = v83[7];
      v61 = &v44[v60];
      v62 = &v45[v60];
      if (v88(&v45[v60], 1, v52))
      {
        v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
        memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
      }
      else
      {
        v54(v61, v62, v52);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v61, 0, 1, v52);
      }
      v64 = v83[8];
      v65 = &v44[v64];
      v66 = &v45[v64];
      if (v88(&v45[v64], 1, v52))
      {
        v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
        memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
      }
      else
      {
        v54(v65, v66, v52);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v65, 0, 1, v52);
      }
      v68 = v83[9];
      v69 = &v44[v68];
      v70 = &v45[v68];
      if (v88(&v45[v68], 1, v52))
      {
        v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
        memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
      }
      else
      {
        v54(v69, v70, v52);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v69, 0, 1, v52);
      }
      v72 = v83[10];
      v73 = &v44[v72];
      v74 = &v45[v72];
      if (v88(&v45[v72], 1, v52))
      {
        v75 = v56;
        v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
        memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
      }
      else
      {
        v54(v73, v74, v52);
        v75 = v56;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v73, 0, 1, v52);
      }
      v77 = v83[11];
      v78 = &v44[v77];
      v79 = &v45[v77];
      if (v88(&v45[v77], 1, v52))
      {
        v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
        memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
      }
      else
      {
        v85(v78, v79, v52);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v78, 0, 1, v52);
      }
      v51 = v86;
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v84 + 56))(v44, 0, 1, v83);
      v50 = v87;
    }
    *((_BYTE *)v51 + v37[7]) = *((_BYTE *)v35 + v37[7]);
    *(_QWORD *)((char *)v51 + v37[8]) = *(_QWORD *)((char *)v35 + v37[8]);
    v81 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v50 + 56);
    swift_bridgeObjectRetain();
    v81(v51, 0, 1, v37);
  }
  return a1;
}

uint64_t sub_20A4F059C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD *v6;
  __int128 *v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD *v15;
  __int128 *v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _OWORD *v24;
  _OWORD *v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 *v31;
  __int128 *v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  int *v46;
  uint64_t v47;
  uint64_t (*v48)(_QWORD *, uint64_t, int *);
  int v49;
  int v50;
  uint64_t v51;
  char *v52;
  char *v53;
  int *v54;
  uint64_t v55;
  unsigned int (*v56)(char *, uint64_t, int *);
  uint64_t v57;
  _QWORD *v58;
  int *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  int *v64;
  uint64_t v65;
  uint64_t (*v66)(uint64_t, uint64_t, int *);
  int v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  void (*v72)(uint64_t, char *, uint64_t);
  uint64_t v73;
  void *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(char *, char *, uint64_t);
  uint64_t v80;
  char *v81;
  uint64_t v82;
  size_t v83;
  void *v84;
  char *v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  void (*v106)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v107;
  uint64_t v108;
  void (*v109)(uint64_t, char *, uint64_t);
  uint64_t v110;
  char *v111;
  uint64_t (*v112)(void);
  int v113;
  size_t v114;
  void *v115;
  uint64_t v116;
  void *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  void *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  void *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  void *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  void *v133;
  char *v134;
  uint64_t v135;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  int v140;
  int v141;
  size_t v142;
  void *v143;
  uint64_t v144;
  char *v145;
  int v146;
  int v147;
  size_t v148;
  void *v149;
  uint64_t v150;
  char *v151;
  int v152;
  int v153;
  size_t v154;
  void *v155;
  uint64_t v156;
  char *v157;
  int v158;
  int v159;
  size_t v160;
  void *v161;
  uint64_t v162;
  void *v163;
  char *v164;
  int v165;
  int v166;
  char *v167;
  uint64_t v168;
  char *__dst;
  char *__dsta;
  void (*__dstb)(void *, char *, uint64_t);
  uint64_t v172;
  void (*v173)(char *, char *, uint64_t);
  void *v174;
  void *v175;
  void *v176;
  void *v177;
  void *v178;
  void (*__src)(void *, char *, uint64_t);
  int *v180;
  uint64_t v181;
  unsigned int (*v182)(char *, uint64_t, uint64_t);
  unsigned int (*v183)(char *, uint64_t, uint64_t);
  _QWORD *v184;
  _QWORD *v185;
  _QWORD *v186;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (_OWORD *)(a1 + 48);
  v7 = (__int128 *)(a2 + 48);
  v8 = *(_QWORD *)(a2 + 56);
  if (*(_QWORD *)(a1 + 56))
  {
    if (v8)
    {
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_20A464794(a1 + 48);
      v9 = *(_OWORD *)(a2 + 96);
      v11 = *v7;
      v10 = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 96) = v9;
      *v6 = v11;
      *(_OWORD *)(a1 + 64) = v10;
    }
  }
  else if (v8)
  {
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v12 = *v7;
    v13 = *(_OWORD *)(a2 + 64);
    v14 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v14;
    *v6 = v12;
    *(_OWORD *)(a1 + 64) = v13;
  }
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = (_OWORD *)(a1 + 128);
  v16 = (__int128 *)(a2 + 128);
  v17 = *(_QWORD *)(a2 + 136);
  if (*(_QWORD *)(a1 + 136))
  {
    if (v17)
    {
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_20A464794(a1 + 128);
      v18 = *(_OWORD *)(a2 + 176);
      v20 = *v16;
      v19 = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
      *(_OWORD *)(a1 + 176) = v18;
      *v15 = v20;
      *(_OWORD *)(a1 + 144) = v19;
    }
  }
  else if (v17)
  {
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v21 = *v16;
    v22 = *(_OWORD *)(a2 + 144);
    v23 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v23;
    *v15 = v21;
    *(_OWORD *)(a1 + 144) = v22;
  }
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v24 = (_OWORD *)(a1 + 208);
  v25 = (_OWORD *)(a2 + 208);
  v26 = *(_QWORD *)(a2 + 216);
  if (*(_QWORD *)(a1 + 216))
  {
    if (v26)
    {
      *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
      *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
      *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
      *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_20A4F1958(a1 + 208);
      v28 = *(_OWORD *)(a2 + 224);
      v27 = *(_OWORD *)(a2 + 240);
      *v24 = *v25;
      *(_OWORD *)(a1 + 224) = v28;
      *(_OWORD *)(a1 + 240) = v27;
    }
  }
  else if (v26)
  {
    *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
    *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
    *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
    *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
    *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
    *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v29 = *v25;
    v30 = *(_OWORD *)(a2 + 240);
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 240) = v30;
    *v24 = v29;
  }
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  v31 = (__int128 *)(a1 + 280);
  v32 = (__int128 *)(a2 + 280);
  v33 = *(_QWORD *)(a2 + 312);
  if (*(_QWORD *)(a1 + 312) == 1)
  {
    if (v33 == 1)
    {
      v34 = *v32;
      v35 = *(_OWORD *)(a2 + 296);
      *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
      *v31 = v34;
      *(_OWORD *)(a1 + 296) = v35;
    }
    else
    {
      *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
      v38 = *(_QWORD *)(a2 + 288);
      *(_BYTE *)(a1 + 296) = *(_BYTE *)(a2 + 296);
      *(_QWORD *)(a1 + 288) = v38;
      *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
      *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
      swift_bridgeObjectRetain();
    }
  }
  else if (v33 == 1)
  {
    sub_20A4647C8(a1 + 280);
    v36 = *(_QWORD *)(a2 + 312);
    v37 = *(_OWORD *)(a2 + 296);
    *v31 = *v32;
    *(_OWORD *)(a1 + 296) = v37;
    *(_QWORD *)(a1 + 312) = v36;
  }
  else
  {
    *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
    v39 = *(_QWORD *)(a2 + 288);
    *(_BYTE *)(a1 + 296) = *(_BYTE *)(a2 + 296);
    *(_QWORD *)(a1 + 288) = v39;
    *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
    *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(_BYTE *)(a1 + 320) = *(_BYTE *)(a2 + 320);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  swift_retain();
  swift_release();
  v40 = *(_QWORD *)(a2 + 336);
  *(_BYTE *)(a1 + 344) = *(_BYTE *)(a2 + 344);
  *(_QWORD *)(a1 + 336) = v40;
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  swift_retain();
  swift_release();
  v41 = *(_QWORD *)(a2 + 360);
  *(_BYTE *)(a1 + 368) = *(_BYTE *)(a2 + 368);
  *(_QWORD *)(a1 + 360) = v41;
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v42 = *(_QWORD *)(a2 + 392);
  *(_BYTE *)(a1 + 400) = *(_BYTE *)(a2 + 400);
  *(_QWORD *)(a1 + 392) = v42;
  v43 = *(int *)(a3 + 88);
  v44 = (_QWORD *)(a1 + v43);
  v45 = (_QWORD *)(a2 + v43);
  v46 = (int *)type metadata accessor for ODNAssessmentsFeedbackManager.ORDResultsPayload(0);
  v47 = *((_QWORD *)v46 - 1);
  v48 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v47 + 48);
  v49 = v48(v44, 1, v46);
  v50 = v48(v45, 1, v46);
  if (!v49)
  {
    if (v50)
    {
      sub_20A465AB4((uint64_t)v44, type metadata accessor for ODNAssessmentsFeedbackManager.ORDResultsPayload);
      goto LABEL_35;
    }
    *v44 = *v45;
    v44[1] = v45[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v44[2] = v45[2];
    v44[3] = v45[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v61 = v46[6];
    v62 = (uint64_t)v44 + v61;
    v63 = (char *)v45 + v61;
    v64 = (int *)type metadata accessor for AssessmentTiming();
    v65 = *((_QWORD *)v64 - 1);
    v66 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v65 + 48);
    v67 = v66(v62, 1, v64);
    v68 = v66((uint64_t)v63, 1, v64);
    if (v67)
    {
      if (!v68)
      {
        v172 = v65;
        v185 = v45;
        v69 = sub_20A5B8F6C();
        v70 = *(_QWORD *)(v69 - 8);
        v71 = v63;
        v72 = *(void (**)(uint64_t, char *, uint64_t))(v70 + 16);
        v72(v62, v71, v69);
        v72(v62 + v64[5], &v71[v64[5]], v69);
        v73 = v64[6];
        v74 = (void *)(v62 + v73);
        __dst = v71;
        v75 = &v71[v73];
        v182 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48);
        __src = (void (*)(void *, char *, uint64_t))v72;
        if (v182(v75, 1, v69))
        {
          v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
          memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
        }
        else
        {
          v72((uint64_t)v74, v75, v69);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v74, 0, 1, v69);
        }
        v116 = v64[7];
        v117 = (void *)(v62 + v116);
        v118 = &__dst[v116];
        if (v182(&__dst[v116], 1, v69))
        {
          v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
          memcpy(v117, v118, *(_QWORD *)(*(_QWORD *)(v119 - 8) + 64));
        }
        else
        {
          v72((uint64_t)v117, v118, v69);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v117, 0, 1, v69);
        }
        v120 = v64[8];
        v121 = (void *)(v62 + v120);
        v122 = &__dst[v120];
        if (v182(&__dst[v120], 1, v69))
        {
          v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
          memcpy(v121, v122, *(_QWORD *)(*(_QWORD *)(v123 - 8) + 64));
        }
        else
        {
          v72((uint64_t)v121, v122, v69);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v121, 0, 1, v69);
        }
        v124 = v64[9];
        v125 = (void *)(v62 + v124);
        v126 = &__dst[v124];
        if (v182(&__dst[v124], 1, v69))
        {
          v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
          memcpy(v125, v126, *(_QWORD *)(*(_QWORD *)(v127 - 8) + 64));
        }
        else
        {
          v72((uint64_t)v125, v126, v69);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v125, 0, 1, v69);
        }
        v128 = v64[10];
        v129 = (void *)(v62 + v128);
        v130 = &__dst[v128];
        if (v182(&__dst[v128], 1, v69))
        {
          v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
          memcpy(v129, v130, *(_QWORD *)(*(_QWORD *)(v131 - 8) + 64));
        }
        else
        {
          v72((uint64_t)v129, v130, v69);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v129, 0, 1, v69);
        }
        v132 = v64[11];
        v133 = (void *)(v62 + v132);
        v134 = &__dst[v132];
        v45 = v185;
        if (v182(&__dst[v132], 1, v69))
        {
          v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
          memcpy(v133, v134, *(_QWORD *)(*(_QWORD *)(v135 - 8) + 64));
        }
        else
        {
          __src(v133, v134, v69);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v133, 0, 1, v69);
        }
        (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v172 + 56))(v62, 0, 1, v64);
        goto LABEL_84;
      }
      goto LABEL_44;
    }
    if (v68)
    {
      sub_20A465AB4(v62, (uint64_t (*)(_QWORD))type metadata accessor for AssessmentTiming);
LABEL_44:
      v83 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545FB158) - 8) + 64);
      v84 = (void *)v62;
      v85 = v63;
      goto LABEL_45;
    }
    v186 = v45;
    v107 = sub_20A5B8F6C();
    v108 = *(_QWORD *)(v107 - 8);
    v109 = *(void (**)(uint64_t, char *, uint64_t))(v108 + 24);
    v109(v62, v63, v107);
    __dstb = (void (*)(void *, char *, uint64_t))v109;
    v109(v62 + v64[5], &v63[v64[5]], v107);
    v110 = v64[6];
    v111 = &v63[v110];
    v181 = v108;
    v112 = *(uint64_t (**)(void))(v108 + 48);
    v174 = (void *)(v62 + v110);
    LODWORD(v108) = v112();
    v113 = ((uint64_t (*)(char *, uint64_t, uint64_t))v112)(v111, 1, v107);
    if ((_DWORD)v108)
    {
      if (v113)
      {
        v114 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90) - 8) + 64);
        v115 = v174;
LABEL_88:
        memcpy(v115, v111, v114);
        goto LABEL_91;
      }
      (*(void (**)(void *, char *, uint64_t))(v181 + 16))(v174, v111, v107);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v181 + 56))(v174, 0, 1, v107);
    }
    else
    {
      if (v113)
      {
        (*(void (**)(void *, uint64_t))(v181 + 8))(v174, v107);
        v114 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90) - 8) + 64);
        v115 = v174;
        goto LABEL_88;
      }
      __dstb(v174, v111, v107);
    }
LABEL_91:
    v137 = v107;
    v138 = v64[7];
    v139 = &v63[v138];
    v175 = (void *)(v62 + v138);
    v140 = v112();
    v141 = ((uint64_t (*)(char *, uint64_t, uint64_t))v112)(v139, 1, v137);
    if (v140)
    {
      if (v141)
      {
        v142 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90) - 8) + 64);
        v143 = v175;
LABEL_96:
        memcpy(v143, v139, v142);
        goto LABEL_99;
      }
      (*(void (**)(void *, char *, uint64_t))(v181 + 16))(v175, v139, v137);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v181 + 56))(v175, 0, 1, v137);
    }
    else
    {
      if (v141)
      {
        (*(void (**)(void *, uint64_t))(v181 + 8))(v175, v137);
        v142 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90) - 8) + 64);
        v143 = v175;
        goto LABEL_96;
      }
      __dstb(v175, v139, v137);
    }
LABEL_99:
    v144 = v64[8];
    v145 = &v63[v144];
    v176 = (void *)(v62 + v144);
    v146 = v112();
    v147 = ((uint64_t (*)(char *, uint64_t, uint64_t))v112)(v145, 1, v137);
    if (v146)
    {
      if (v147)
      {
        v148 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90) - 8) + 64);
        v149 = v176;
LABEL_104:
        memcpy(v149, v145, v148);
        goto LABEL_107;
      }
      (*(void (**)(void *, char *, uint64_t))(v181 + 16))(v176, v145, v137);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v181 + 56))(v176, 0, 1, v137);
    }
    else
    {
      if (v147)
      {
        (*(void (**)(void *, uint64_t))(v181 + 8))(v176, v137);
        v148 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90) - 8) + 64);
        v149 = v176;
        goto LABEL_104;
      }
      __dstb(v176, v145, v137);
    }
LABEL_107:
    v150 = v64[9];
    v151 = &v63[v150];
    v177 = (void *)(v62 + v150);
    v152 = v112();
    v153 = ((uint64_t (*)(char *, uint64_t, uint64_t))v112)(v151, 1, v137);
    if (v152)
    {
      if (v153)
      {
        v154 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90) - 8) + 64);
        v155 = v177;
LABEL_112:
        memcpy(v155, v151, v154);
        goto LABEL_115;
      }
      (*(void (**)(void *, char *, uint64_t))(v181 + 16))(v177, v151, v137);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v181 + 56))(v177, 0, 1, v137);
    }
    else
    {
      if (v153)
      {
        (*(void (**)(void *, uint64_t))(v181 + 8))(v177, v137);
        v154 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90) - 8) + 64);
        v155 = v177;
        goto LABEL_112;
      }
      __dstb(v177, v151, v137);
    }
LABEL_115:
    v156 = v64[10];
    v157 = &v63[v156];
    v178 = (void *)(v62 + v156);
    v158 = v112();
    v159 = ((uint64_t (*)(char *, uint64_t, uint64_t))v112)(v157, 1, v137);
    if (v158)
    {
      if (!v159)
      {
        (*(void (**)(void *, char *, uint64_t))(v181 + 16))(v178, v157, v137);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v181 + 56))(v178, 0, 1, v137);
        goto LABEL_123;
      }
      v160 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90) - 8) + 64);
      v161 = v178;
    }
    else
    {
      if (!v159)
      {
        __dstb(v178, v157, v137);
        goto LABEL_123;
      }
      (*(void (**)(void *, uint64_t))(v181 + 8))(v178, v137);
      v160 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90) - 8) + 64);
      v161 = v178;
    }
    memcpy(v161, v157, v160);
LABEL_123:
    v45 = v186;
    v162 = v64[11];
    v163 = (void *)(v62 + v162);
    v164 = &v63[v162];
    v165 = ((uint64_t (*)(void *, uint64_t, uint64_t))v112)(v163, 1, v137);
    v166 = ((uint64_t (*)(char *, uint64_t, uint64_t))v112)(v164, 1, v137);
    if (v165)
    {
      if (!v166)
      {
        (*(void (**)(void *, char *, uint64_t))(v181 + 16))(v163, v164, v137);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v181 + 56))(v163, 0, 1, v137);
        goto LABEL_84;
      }
    }
    else
    {
      if (!v166)
      {
        __dstb(v163, v164, v137);
        goto LABEL_84;
      }
      (*(void (**)(void *, uint64_t))(v181 + 8))(v163, v137);
    }
    v83 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90) - 8) + 64);
    v84 = v163;
    v85 = v164;
LABEL_45:
    memcpy(v84, v85, v83);
LABEL_84:
    *((_BYTE *)v44 + v46[7]) = *((_BYTE *)v45 + v46[7]);
    *(_QWORD *)((char *)v44 + v46[8]) = *(_QWORD *)((char *)v45 + v46[8]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    return a1;
  }
  if (v50)
  {
LABEL_35:
    v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB168);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    return a1;
  }
  *v44 = *v45;
  v44[1] = v45[1];
  v44[2] = v45[2];
  v44[3] = v45[3];
  v180 = v46;
  v51 = v46[6];
  v52 = (char *)v44 + v51;
  v184 = v45;
  v53 = (char *)v45 + v51;
  v54 = (int *)type metadata accessor for AssessmentTiming();
  v55 = *((_QWORD *)v54 - 1);
  v56 = *(unsigned int (**)(char *, uint64_t, int *))(v55 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v56(v53, 1, v54))
  {
    v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB158);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    v58 = v184;
    v59 = v180;
  }
  else
  {
    v168 = v55;
    v77 = sub_20A5B8F6C();
    v78 = *(_QWORD *)(v77 - 8);
    v79 = *(void (**)(char *, char *, uint64_t))(v78 + 16);
    v79(v52, v53, v77);
    v79(&v52[v54[5]], &v53[v54[5]], v77);
    v80 = v54[6];
    __dsta = &v52[v80];
    v81 = &v53[v80];
    v183 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48);
    v167 = v52;
    v173 = v79;
    if (v183(&v53[v80], 1, v77))
    {
      v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
      memcpy(__dsta, v81, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
    }
    else
    {
      v79(__dsta, v81, v77);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(__dsta, 0, 1, v77);
    }
    v86 = v54[7];
    v87 = &v52[v86];
    v88 = &v53[v86];
    v59 = v180;
    if (v183(&v53[v86], 1, v77))
    {
      v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
      memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
    }
    else
    {
      v173(v87, v88, v77);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v87, 0, 1, v77);
    }
    v90 = v54[8];
    v91 = &v167[v90];
    v92 = &v53[v90];
    if (v183(&v53[v90], 1, v77))
    {
      v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
      memcpy(v91, v92, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
    }
    else
    {
      v173(v91, v92, v77);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v91, 0, 1, v77);
    }
    v94 = v54[9];
    v95 = &v167[v94];
    v96 = &v53[v94];
    if (v183(&v53[v94], 1, v77))
    {
      v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
      memcpy(v95, v96, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
    }
    else
    {
      v173(v95, v96, v77);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v95, 0, 1, v77);
    }
    v98 = v54[10];
    v99 = &v167[v98];
    v100 = &v53[v98];
    if (v183(&v53[v98], 1, v77))
    {
      v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
      memcpy(v99, v100, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
    }
    else
    {
      v173(v99, v100, v77);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v99, 0, 1, v77);
    }
    v102 = v54[11];
    v103 = &v167[v102];
    v104 = &v53[v102];
    v58 = v184;
    if (v183(v104, 1, v77))
    {
      v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
      memcpy(v103, v104, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
    }
    else
    {
      v173(v103, v104, v77);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v103, 0, 1, v77);
    }
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v168 + 56))(v167, 0, 1, v54);
  }
  *((_BYTE *)v44 + v59[7]) = *((_BYTE *)v58 + v59[7]);
  *(_QWORD *)((char *)v44 + v59[8]) = *(_QWORD *)((char *)v58 + v59[8]);
  v106 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v47 + 56);
  swift_bridgeObjectRetain();
  v106(v44, 0, 1, v59);
  return a1;
}

uint64_t sub_20A4F1958(uint64_t a1)
{
  _s14ODNIdentifiersVwxx();
  return a1;
}

uint64_t sub_20A4F198C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int *v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  int *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unsigned int (*v64)(char *, uint64_t, uint64_t);
  char *v65;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v7;
  v8 = *(_OWORD *)(a2 + 128);
  v9 = *(_OWORD *)(a2 + 144);
  v10 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  v11 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v11;
  v12 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 240) = v12;
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  v13 = *(_OWORD *)(a2 + 280);
  v14 = *(_OWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 280) = v13;
  *(_OWORD *)(a1 + 296) = v14;
  *(_BYTE *)(a1 + 320) = *(_BYTE *)(a2 + 320);
  *(_BYTE *)(a1 + 344) = *(_BYTE *)(a2 + 344);
  v15 = *(_QWORD *)(a2 + 336);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  *(_QWORD *)(a1 + 336) = v15;
  *(_BYTE *)(a1 + 368) = *(_BYTE *)(a2 + 368);
  v16 = *(_QWORD *)(a2 + 360);
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 360) = v16;
  *(_OWORD *)(a1 + 376) = *(_OWORD *)(a2 + 376);
  v17 = *(_QWORD *)(a2 + 392);
  *(_BYTE *)(a1 + 400) = *(_BYTE *)(a2 + 400);
  v18 = *(int *)(a3 + 88);
  v19 = (_OWORD *)(a1 + v18);
  v20 = (_OWORD *)(a2 + v18);
  *(_QWORD *)(a1 + 392) = v17;
  v21 = (int *)type metadata accessor for ODNAssessmentsFeedbackManager.ORDResultsPayload(0);
  v22 = *((_QWORD *)v21 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v22 + 48))(v20, 1, v21))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB168);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    v24 = v20[1];
    *v19 = *v20;
    v19[1] = v24;
    v25 = v21[6];
    v26 = (char *)v19 + v25;
    v27 = (char *)v20 + v25;
    v28 = type metadata accessor for AssessmentTiming();
    v29 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB158);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      v61 = v22;
      v62 = v29;
      v31 = sub_20A5B8F6C();
      v32 = *(_QWORD *)(v31 - 8);
      v33 = (int *)v28;
      v34 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
      v34(v26, v27, v31);
      v34(&v26[v33[5]], &v27[v33[5]], v31);
      v60 = v33;
      v35 = v33[6];
      v65 = v26;
      v36 = &v26[v35];
      v37 = &v27[v35];
      v64 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48);
      v63 = v32;
      if (v64(&v27[v35], 1, v31))
      {
        v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
        memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        v34(v36, v37, v31);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v36, 0, 1, v31);
      }
      v39 = v60[7];
      v40 = &v65[v39];
      v41 = &v27[v39];
      v22 = v61;
      if (v64(&v27[v39], 1, v31))
      {
        v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
        memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        v34(v40, v41, v31);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v40, 0, 1, v31);
      }
      v43 = v60[8];
      v44 = &v65[v43];
      v45 = &v27[v43];
      if (v64(&v27[v43], 1, v31))
      {
        v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
      }
      else
      {
        v34(v44, v45, v31);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v44, 0, 1, v31);
      }
      v47 = v60[9];
      v48 = &v65[v47];
      v49 = &v27[v47];
      if (v64(&v27[v47], 1, v31))
      {
        v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
        memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
      }
      else
      {
        v34(v48, v49, v31);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v48, 0, 1, v31);
      }
      v51 = v60[10];
      v52 = &v65[v51];
      v53 = &v27[v51];
      if (v64(&v27[v51], 1, v31))
      {
        v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
        memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
      }
      else
      {
        v34(v52, v53, v31);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v52, 0, 1, v31);
      }
      v55 = v60[11];
      v56 = &v65[v55];
      v57 = &v27[v55];
      if (v64(v57, 1, v31))
      {
        v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
        memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
      }
      else
      {
        v34(v56, v57, v31);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v56, 0, 1, v31);
      }
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v62 + 56))(v65, 0, 1, v60);
    }
    *((_BYTE *)v19 + v21[7]) = *((_BYTE *)v20 + v21[7]);
    *(_QWORD *)((char *)v19 + v21[8]) = *(_QWORD *)((char *)v20 + v21[8]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v22 + 56))(v19, 0, 1, v21);
  }
  return a1;
}

uint64_t sub_20A4F1EBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  int *v35;
  uint64_t v36;
  uint64_t (*v37)(_QWORD *, uint64_t, int *);
  int v38;
  int v39;
  __int128 v40;
  uint64_t v41;
  char *v42;
  char *v43;
  int *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  int *v53;
  uint64_t v54;
  uint64_t (*v55)(uint64_t, uint64_t, int *);
  int v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  void (*v61)(uint64_t, char *, uint64_t);
  uint64_t v62;
  void *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, char *, uint64_t);
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  size_t v73;
  void *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(uint64_t, char *, uint64_t);
  uint64_t v99;
  char *v100;
  uint64_t (*v101)(void);
  int v102;
  size_t v103;
  void *v104;
  uint64_t v105;
  void *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  void *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  void *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  void *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  void *v122;
  char *v123;
  uint64_t v124;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  int v129;
  int v130;
  size_t v131;
  void *v132;
  uint64_t v133;
  char *v134;
  int v135;
  int v136;
  size_t v137;
  void *v138;
  uint64_t v139;
  char *v140;
  int v141;
  int v142;
  size_t v143;
  void *v144;
  uint64_t v145;
  char *v146;
  int v147;
  int v148;
  size_t v149;
  void *v150;
  uint64_t v151;
  void *v152;
  char *v153;
  int v154;
  int v155;
  int *v156;
  char *v157;
  char *v158;
  void (*v159)(void *, char *, uint64_t);
  uint64_t v160;
  uint64_t v161;
  void *v162;
  void *v163;
  void *v164;
  void *v165;
  void *v166;
  void (*__src)(void *, char *, uint64_t);
  void (*__srca)(char *, char *, uint64_t);
  uint64_t v169;
  _QWORD *v170;
  _QWORD *v171;
  _QWORD *v172;
  unsigned int (*v173)(char *, uint64_t, uint64_t);
  unsigned int (*v174)(char *, uint64_t, uint64_t);

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 56))
  {
    v9 = *(_QWORD *)(a2 + 56);
    if (v9)
    {
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = v9;
      swift_bridgeObjectRelease();
      v10 = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = v10;
      swift_bridgeObjectRelease();
      v11 = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = v11;
      swift_bridgeObjectRelease();
      v12 = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = v12;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_20A464794(a1 + 48);
  }
  v13 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v13;
  v14 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v14;
LABEL_6:
  v15 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v15;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 136))
  {
    v16 = *(_QWORD *)(a2 + 136);
    if (v16)
    {
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 136) = v16;
      swift_bridgeObjectRelease();
      v17 = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 152) = v17;
      swift_bridgeObjectRelease();
      v18 = *(_QWORD *)(a2 + 168);
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      *(_QWORD *)(a1 + 168) = v18;
      swift_bridgeObjectRelease();
      v19 = *(_QWORD *)(a2 + 184);
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      *(_QWORD *)(a1 + 184) = v19;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_20A464794(a1 + 128);
  }
  v20 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v20;
  v21 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v21;
LABEL_11:
  v22 = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = v22;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 216))
  {
    v23 = *(_QWORD *)(a2 + 216);
    if (v23)
    {
      *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
      *(_QWORD *)(a1 + 216) = v23;
      swift_bridgeObjectRelease();
      v24 = *(_QWORD *)(a2 + 232);
      *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
      *(_QWORD *)(a1 + 232) = v24;
      swift_bridgeObjectRelease();
      v25 = *(_QWORD *)(a2 + 248);
      *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
      *(_QWORD *)(a1 + 248) = v25;
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    sub_20A4F1958(a1 + 208);
  }
  v26 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 224) = v26;
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
LABEL_16:
  v27 = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = v27;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  if (*(_QWORD *)(a1 + 312) == 1)
  {
LABEL_19:
    v29 = *(_OWORD *)(a2 + 296);
    *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
    *(_OWORD *)(a1 + 296) = v29;
    *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
    goto LABEL_21;
  }
  v28 = *(_QWORD *)(a2 + 312);
  if (v28 == 1)
  {
    sub_20A4647C8(a1 + 280);
    goto LABEL_19;
  }
  v30 = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 288) = v30;
  *(_BYTE *)(a1 + 296) = *(_BYTE *)(a2 + 296);
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 312) = v28;
  swift_bridgeObjectRelease();
LABEL_21:
  *(_BYTE *)(a1 + 320) = *(_BYTE *)(a2 + 320);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  swift_release();
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  *(_BYTE *)(a1 + 344) = *(_BYTE *)(a2 + 344);
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  swift_release();
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  *(_BYTE *)(a1 + 368) = *(_BYTE *)(a2 + 368);
  v31 = *(_QWORD *)(a2 + 384);
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  *(_QWORD *)(a1 + 384) = v31;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
  *(_BYTE *)(a1 + 400) = *(_BYTE *)(a2 + 400);
  v32 = *(int *)(a3 + 88);
  v33 = (_QWORD *)(a1 + v32);
  v34 = (_QWORD *)(a2 + v32);
  v35 = (int *)type metadata accessor for ODNAssessmentsFeedbackManager.ORDResultsPayload(0);
  v36 = *((_QWORD *)v35 - 1);
  v37 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v36 + 48);
  v38 = v37(v33, 1, v35);
  v39 = v37(v34, 1, v35);
  if (!v38)
  {
    if (v39)
    {
      sub_20A465AB4((uint64_t)v33, type metadata accessor for ODNAssessmentsFeedbackManager.ORDResultsPayload);
      goto LABEL_27;
    }
    v48 = v34[1];
    *v33 = *v34;
    v33[1] = v48;
    swift_bridgeObjectRelease();
    v49 = v34[3];
    v33[2] = v34[2];
    v33[3] = v49;
    swift_bridgeObjectRelease();
    v50 = v35[6];
    v51 = (uint64_t)v33 + v50;
    v52 = (char *)v34 + v50;
    v53 = (int *)type metadata accessor for AssessmentTiming();
    v54 = *((_QWORD *)v53 - 1);
    v55 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v54 + 48);
    v56 = v55(v51, 1, v53);
    v57 = v55((uint64_t)v52, 1, v53);
    if (v56)
    {
      if (!v57)
      {
        v160 = v54;
        v170 = v34;
        v58 = sub_20A5B8F6C();
        v59 = *(_QWORD *)(v58 - 8);
        v60 = v52;
        v61 = *(void (**)(uint64_t, char *, uint64_t))(v59 + 32);
        v61(v51, v60, v58);
        v61(v51 + v53[5], &v60[v53[5]], v58);
        v62 = v53[6];
        v63 = (void *)(v51 + v62);
        v157 = v60;
        v64 = &v60[v62];
        v173 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48);
        __src = (void (*)(void *, char *, uint64_t))v61;
        if (v173(v64, 1, v58))
        {
          v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
          memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
        }
        else
        {
          v61((uint64_t)v63, v64, v58);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v63, 0, 1, v58);
        }
        v105 = v53[7];
        v106 = (void *)(v51 + v105);
        v107 = &v157[v105];
        if (v173(&v157[v105], 1, v58))
        {
          v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
          memcpy(v106, v107, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
        }
        else
        {
          v61((uint64_t)v106, v107, v58);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v106, 0, 1, v58);
        }
        v109 = v53[8];
        v110 = (void *)(v51 + v109);
        v111 = &v157[v109];
        if (v173(&v157[v109], 1, v58))
        {
          v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
          memcpy(v110, v111, *(_QWORD *)(*(_QWORD *)(v112 - 8) + 64));
        }
        else
        {
          v61((uint64_t)v110, v111, v58);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v110, 0, 1, v58);
        }
        v113 = v53[9];
        v114 = (void *)(v51 + v113);
        v115 = &v157[v113];
        if (v173(&v157[v113], 1, v58))
        {
          v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
          memcpy(v114, v115, *(_QWORD *)(*(_QWORD *)(v116 - 8) + 64));
        }
        else
        {
          v61((uint64_t)v114, v115, v58);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v114, 0, 1, v58);
        }
        v117 = v53[10];
        v118 = (void *)(v51 + v117);
        v119 = &v157[v117];
        if (v173(&v157[v117], 1, v58))
        {
          v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
          memcpy(v118, v119, *(_QWORD *)(*(_QWORD *)(v120 - 8) + 64));
        }
        else
        {
          v61((uint64_t)v118, v119, v58);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v118, 0, 1, v58);
        }
        v121 = v53[11];
        v122 = (void *)(v51 + v121);
        v123 = &v157[v121];
        v34 = v170;
        if (v173(&v157[v121], 1, v58))
        {
          v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
          memcpy(v122, v123, *(_QWORD *)(*(_QWORD *)(v124 - 8) + 64));
        }
        else
        {
          __src(v122, v123, v58);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v122, 0, 1, v58);
        }
        (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v160 + 56))(v51, 0, 1, v53);
        goto LABEL_76;
      }
      goto LABEL_36;
    }
    if (v57)
    {
      sub_20A465AB4(v51, (uint64_t (*)(_QWORD))type metadata accessor for AssessmentTiming);
LABEL_36:
      v73 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545FB158) - 8) + 64);
      v74 = (void *)v51;
      v75 = v52;
      goto LABEL_37;
    }
    v172 = v34;
    v96 = sub_20A5B8F6C();
    v97 = *(_QWORD *)(v96 - 8);
    v98 = *(void (**)(uint64_t, char *, uint64_t))(v97 + 40);
    v98(v51, v52, v96);
    v159 = (void (*)(void *, char *, uint64_t))v98;
    v98(v51 + v53[5], &v52[v53[5]], v96);
    v99 = v53[6];
    v100 = &v52[v99];
    v169 = v97;
    v101 = *(uint64_t (**)(void))(v97 + 48);
    v162 = (void *)(v51 + v99);
    LODWORD(v97) = v101();
    v102 = ((uint64_t (*)(char *, uint64_t, uint64_t))v101)(v100, 1, v96);
    if ((_DWORD)v97)
    {
      if (v102)
      {
        v103 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90) - 8) + 64);
        v104 = v162;
LABEL_80:
        memcpy(v104, v100, v103);
        goto LABEL_83;
      }
      (*(void (**)(void *, char *, uint64_t))(v169 + 32))(v162, v100, v96);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v169 + 56))(v162, 0, 1, v96);
    }
    else
    {
      if (v102)
      {
        (*(void (**)(void *, uint64_t))(v169 + 8))(v162, v96);
        v103 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90) - 8) + 64);
        v104 = v162;
        goto LABEL_80;
      }
      v159(v162, v100, v96);
    }
LABEL_83:
    v126 = v96;
    v127 = v53[7];
    v128 = &v52[v127];
    v163 = (void *)(v51 + v127);
    v129 = v101();
    v130 = ((uint64_t (*)(char *, uint64_t, uint64_t))v101)(v128, 1, v126);
    if (v129)
    {
      if (v130)
      {
        v131 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90) - 8) + 64);
        v132 = v163;
LABEL_88:
        memcpy(v132, v128, v131);
        goto LABEL_91;
      }
      (*(void (**)(void *, char *, uint64_t))(v169 + 32))(v163, v128, v126);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v169 + 56))(v163, 0, 1, v126);
    }
    else
    {
      if (v130)
      {
        (*(void (**)(void *, uint64_t))(v169 + 8))(v163, v126);
        v131 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90) - 8) + 64);
        v132 = v163;
        goto LABEL_88;
      }
      v159(v163, v128, v126);
    }
LABEL_91:
    v133 = v53[8];
    v134 = &v52[v133];
    v164 = (void *)(v51 + v133);
    v135 = v101();
    v136 = ((uint64_t (*)(char *, uint64_t, uint64_t))v101)(v134, 1, v126);
    if (v135)
    {
      if (v136)
      {
        v137 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90) - 8) + 64);
        v138 = v164;
LABEL_96:
        memcpy(v138, v134, v137);
        goto LABEL_99;
      }
      (*(void (**)(void *, char *, uint64_t))(v169 + 32))(v164, v134, v126);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v169 + 56))(v164, 0, 1, v126);
    }
    else
    {
      if (v136)
      {
        (*(void (**)(void *, uint64_t))(v169 + 8))(v164, v126);
        v137 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90) - 8) + 64);
        v138 = v164;
        goto LABEL_96;
      }
      v159(v164, v134, v126);
    }
LABEL_99:
    v139 = v53[9];
    v140 = &v52[v139];
    v165 = (void *)(v51 + v139);
    v141 = v101();
    v142 = ((uint64_t (*)(char *, uint64_t, uint64_t))v101)(v140, 1, v126);
    if (v141)
    {
      if (v142)
      {
        v143 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90) - 8) + 64);
        v144 = v165;
LABEL_104:
        memcpy(v144, v140, v143);
        goto LABEL_107;
      }
      (*(void (**)(void *, char *, uint64_t))(v169 + 32))(v165, v140, v126);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v169 + 56))(v165, 0, 1, v126);
    }
    else
    {
      if (v142)
      {
        (*(void (**)(void *, uint64_t))(v169 + 8))(v165, v126);
        v143 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90) - 8) + 64);
        v144 = v165;
        goto LABEL_104;
      }
      v159(v165, v140, v126);
    }
LABEL_107:
    v145 = v53[10];
    v146 = &v52[v145];
    v166 = (void *)(v51 + v145);
    v147 = v101();
    v148 = ((uint64_t (*)(char *, uint64_t, uint64_t))v101)(v146, 1, v126);
    if (v147)
    {
      if (!v148)
      {
        (*(void (**)(void *, char *, uint64_t))(v169 + 32))(v166, v146, v126);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v169 + 56))(v166, 0, 1, v126);
        goto LABEL_115;
      }
      v149 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90) - 8) + 64);
      v150 = v166;
    }
    else
    {
      if (!v148)
      {
        v159(v166, v146, v126);
        goto LABEL_115;
      }
      (*(void (**)(void *, uint64_t))(v169 + 8))(v166, v126);
      v149 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90) - 8) + 64);
      v150 = v166;
    }
    memcpy(v150, v146, v149);
LABEL_115:
    v34 = v172;
    v151 = v53[11];
    v152 = (void *)(v51 + v151);
    v153 = &v52[v151];
    v154 = ((uint64_t (*)(void *, uint64_t, uint64_t))v101)(v152, 1, v126);
    v155 = ((uint64_t (*)(char *, uint64_t, uint64_t))v101)(v153, 1, v126);
    if (v154)
    {
      if (!v155)
      {
        (*(void (**)(void *, char *, uint64_t))(v169 + 32))(v152, v153, v126);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v169 + 56))(v152, 0, 1, v126);
        goto LABEL_76;
      }
    }
    else
    {
      if (!v155)
      {
        v159(v152, v153, v126);
        goto LABEL_76;
      }
      (*(void (**)(void *, uint64_t))(v169 + 8))(v152, v126);
    }
    v73 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90) - 8) + 64);
    v74 = v152;
    v75 = v153;
LABEL_37:
    memcpy(v74, v75, v73);
LABEL_76:
    *((_BYTE *)v33 + v35[7]) = *((_BYTE *)v34 + v35[7]);
    *(_QWORD *)((char *)v33 + v35[8]) = *(_QWORD *)((char *)v34 + v35[8]);
    swift_bridgeObjectRelease();
    return a1;
  }
  if (v39)
  {
LABEL_27:
    v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB168);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    return a1;
  }
  v40 = *((_OWORD *)v34 + 1);
  *(_OWORD *)v33 = *(_OWORD *)v34;
  *((_OWORD *)v33 + 1) = v40;
  v41 = v35[6];
  v42 = (char *)v33 + v41;
  v43 = (char *)v34 + v41;
  v44 = (int *)type metadata accessor for AssessmentTiming();
  v45 = *((_QWORD *)v44 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v45 + 48))(v43, 1, v44))
  {
    v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB158);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
  }
  else
  {
    v156 = v35;
    v161 = v45;
    v171 = v34;
    v66 = sub_20A5B8F6C();
    v67 = *(_QWORD *)(v66 - 8);
    v68 = *(void (**)(char *, char *, uint64_t))(v67 + 32);
    v68(v42, v43, v66);
    v68(&v42[v44[5]], &v43[v44[5]], v66);
    v69 = v44[6];
    v158 = v42;
    v70 = &v42[v69];
    v71 = &v43[v69];
    v174 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48);
    __srca = v68;
    if (v174(&v43[v69], 1, v66))
    {
      v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
      memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
    }
    else
    {
      v68(v70, v71, v66);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v70, 0, 1, v66);
    }
    v76 = v44[7];
    v77 = &v158[v76];
    v78 = &v43[v76];
    v35 = v156;
    if (v174(&v43[v76], 1, v66))
    {
      v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
      memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
    }
    else
    {
      __srca(v77, v78, v66);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v77, 0, 1, v66);
    }
    v80 = v44[8];
    v81 = &v158[v80];
    v82 = &v43[v80];
    if (v174(&v43[v80], 1, v66))
    {
      v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
      memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
    }
    else
    {
      __srca(v81, v82, v66);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v81, 0, 1, v66);
    }
    v84 = v44[9];
    v85 = &v158[v84];
    v86 = &v43[v84];
    if (v174(&v43[v84], 1, v66))
    {
      v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
      memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
    }
    else
    {
      __srca(v85, v86, v66);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v85, 0, 1, v66);
    }
    v88 = v44[10];
    v89 = &v158[v88];
    v90 = &v43[v88];
    if (v174(&v43[v88], 1, v66))
    {
      v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
      memcpy(v89, v90, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
    }
    else
    {
      __srca(v89, v90, v66);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v89, 0, 1, v66);
    }
    v92 = v44[11];
    v93 = &v158[v92];
    v94 = &v43[v92];
    v34 = v171;
    if (v174(v94, 1, v66))
    {
      v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
      memcpy(v93, v94, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
    }
    else
    {
      __srca(v93, v94, v66);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v93, 0, 1, v66);
    }
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v161 + 56))(v158, 0, 1, v44);
  }
  *((_BYTE *)v33 + v35[7]) = *((_BYTE *)v34 + v35[7]);
  *(_QWORD *)((char *)v33 + v35[8]) = *(_QWORD *)((char *)v34 + v35[8]);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v36 + 56))(v33, 0, 1, v35);
  return a1;
}

uint64_t sub_20A4F2F34()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20A4F2F40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 384);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB168);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 88), a2, v8);
  }
}

uint64_t sub_20A4F2FC0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_20A4F2FCC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 384) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB168);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 88), a2, a2, v7);
  }
  return result;
}

void sub_20A4F3044()
{
  unint64_t v0;

  sub_20A4CC87C(319, &qword_2545FB190, (void (*)(uint64_t))type metadata accessor for ODNAssessmentsFeedbackManager.ORDResultsPayload);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

_QWORD *sub_20A4F312C(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  int *v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, int *);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  unsigned int (*v52)(char *, uint64_t, uint64_t);

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a3[6];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = (int *)type metadata accessor for AssessmentTiming();
    v13 = *((_QWORD *)v12 - 1);
    v14 = *(unsigned int (**)(char *, uint64_t, int *))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB158);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      v49 = v13;
      v17 = sub_20A5B8F6C();
      v18 = *(_QWORD *)(v17 - 8);
      v19 = v10;
      v20 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
      v20(v19, v11, v17);
      v20(&v19[v12[5]], &v11[v12[5]], v17);
      v21 = v12[6];
      v50 = v19;
      v22 = &v19[v21];
      v23 = &v11[v21];
      v52 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
      v51 = v18;
      if (v52(&v11[v21], 1, v17))
      {
        v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        v20(v22, v23, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v22, 0, 1, v17);
      }
      v25 = v12[7];
      v26 = &v50[v25];
      v27 = &v11[v25];
      if (v52(&v11[v25], 1, v17))
      {
        v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        v29 = v20;
      }
      else
      {
        v29 = v20;
        v20(v26, v27, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v26, 0, 1, v17);
      }
      v30 = v12[8];
      v31 = &v50[v30];
      v32 = &v11[v30];
      if (v52(&v11[v30], 1, v17))
      {
        v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        v29(v31, v32, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v31, 0, 1, v17);
      }
      v34 = v12[9];
      v35 = &v50[v34];
      v36 = &v11[v34];
      if (v52(&v11[v34], 1, v17))
      {
        v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
        memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        v29(v35, v36, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v35, 0, 1, v17);
      }
      v38 = v12[10];
      v39 = &v50[v38];
      v40 = &v11[v38];
      if (v52(&v11[v38], 1, v17))
      {
        v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
        v42 = v51;
      }
      else
      {
        v29(v39, v40, v17);
        v42 = v51;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v39, 0, 1, v17);
      }
      v43 = v12[11];
      v44 = &v50[v43];
      v45 = &v11[v43];
      if (v52(v45, 1, v17))
      {
        v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
      }
      else
      {
        v29(v44, v45, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v44, 0, 1, v17);
      }
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v49 + 56))(v50, 0, 1, v12);
    }
    v47 = a3[8];
    *((_BYTE *)v4 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    *(_QWORD *)((char *)v4 + v47) = *(_QWORD *)((char *)a2 + v47);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_20A4F3564(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = (int *)type metadata accessor for AssessmentTiming();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v5 - 1) + 48))(v4, 1, v5))
  {
    v6 = sub_20A5B8F6C();
    v7 = *(_QWORD *)(v6 - 8);
    v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v8(v4, v6);
    v8(v4 + v5[5], v6);
    v9 = v4 + v5[6];
    v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    if (!v10(v9, 1, v6))
      v8(v9, v6);
    v11 = v4 + v5[7];
    if (!v10(v11, 1, v6))
      v8(v11, v6);
    v12 = v4 + v5[8];
    if (!v10(v12, 1, v6))
      v8(v12, v6);
    v13 = v4 + v5[9];
    if (!v10(v13, 1, v6))
      v8(v13, v6);
    v14 = v4 + v5[10];
    if (!v10(v14, 1, v6))
      v8(v14, v6);
    v15 = v4 + v5[11];
    if (!v10(v15, 1, v6))
      v8(v15, v6);
  }
  return swift_bridgeObjectRelease();
}

_QWORD *sub_20A4F3708(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  int *v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, int *);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  unsigned int (*v50)(char *, uint64_t, uint64_t);

  v3 = a3;
  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = (int *)type metadata accessor for AssessmentTiming();
  v12 = *((_QWORD *)v11 - 1);
  v13 = *(unsigned int (**)(char *, uint64_t, int *))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB158);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v46 = v3;
    v48 = v12;
    v15 = sub_20A5B8F6C();
    v16 = *(_QWORD *)(v15 - 8);
    v17 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
    v17(v9, v10, v15);
    v17(&v9[v11[5]], &v10[v11[5]], v15);
    v18 = v11[6];
    v19 = &v9[v18];
    v20 = &v10[v18];
    v50 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
    v49 = v16;
    v47 = v17;
    if (v50(&v10[v18], 1, v15))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      v17(v19, v20, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v19, 0, 1, v15);
    }
    v22 = v11[7];
    v23 = &v9[v22];
    v24 = &v10[v22];
    v3 = v46;
    if (v50(&v10[v22], 1, v15))
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      v26 = v47;
    }
    else
    {
      v26 = v47;
      v47(v23, v24, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v23, 0, 1, v15);
    }
    v27 = v11[8];
    v28 = &v9[v27];
    v29 = &v10[v27];
    if (v50(&v10[v27], 1, v15))
    {
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      v26(v28, v29, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v28, 0, 1, v15);
    }
    v31 = v11[9];
    v32 = &v9[v31];
    v33 = &v10[v31];
    if (v50(&v10[v31], 1, v15))
    {
      v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      v26(v32, v33, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v32, 0, 1, v15);
    }
    v35 = v11[10];
    v36 = &v9[v35];
    v37 = &v10[v35];
    if (v50(&v10[v35], 1, v15))
    {
      v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      v39 = v49;
    }
    else
    {
      v26(v36, v37, v15);
      v39 = v49;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v36, 0, 1, v15);
    }
    v40 = v11[11];
    v41 = &v9[v40];
    v42 = &v10[v40];
    if (v50(v42, 1, v15))
    {
      v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
      memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    }
    else
    {
      v26(v41, v42, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v41, 0, 1, v15);
    }
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v48 + 56))(v9, 0, 1, v11);
  }
  v44 = *(int *)(v3 + 32);
  *((_BYTE *)a1 + *(int *)(v3 + 28)) = *((_BYTE *)a2 + *(int *)(v3 + 28));
  *(_QWORD *)((char *)a1 + v44) = *(_QWORD *)((char *)a2 + v44);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_20A4F3B10(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, int *);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, char *, uint64_t);
  uint64_t v17;
  void *v18;
  char *v19;
  uint64_t v20;
  size_t v21;
  void *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, char *, uint64_t);
  uint64_t v27;
  void *v28;
  char *v29;
  uint64_t (*v30)(uint64_t, uint64_t, uint64_t);
  int v31;
  uint64_t v32;
  void *v33;
  char *v34;
  uint64_t v35;
  void (*v36)(void *, char *, uint64_t);
  uint64_t v37;
  void *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  char *v52;
  uint64_t v53;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  char *v58;
  int v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  char *v64;
  int v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  char *v70;
  int v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  char *v76;
  int v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  char *v82;
  int v83;
  int v84;
  unsigned int (*v85)(char *, uint64_t, uint64_t);
  uint64_t v86;
  void (*v87)(void *, char *, uint64_t);
  uint64_t v88;
  int *v89;
  int *v90;
  uint64_t v91;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = (uint64_t)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = (int *)type metadata accessor for AssessmentTiming();
  v10 = *((_QWORD *)v9 - 1);
  v11 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11((uint64_t)v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_20A465AB4(v7, (uint64_t (*)(_QWORD))type metadata accessor for AssessmentTiming);
      goto LABEL_7;
    }
    v90 = a3;
    v24 = sub_20A5B8F6C();
    v25 = *(_QWORD *)(v24 - 8);
    v26 = *(void (**)(uint64_t, char *, uint64_t))(v25 + 24);
    v26(v7, v8, v24);
    v87 = (void (*)(void *, char *, uint64_t))v26;
    v26(v7 + v9[5], &v8[v9[5]], v24);
    v27 = v9[6];
    v28 = (void *)(v7 + v27);
    v29 = &v8[v27];
    v88 = v25;
    v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
    LODWORD(v25) = v30(v7 + v27, 1, v24);
    v31 = v30((uint64_t)v29, 1, v24);
    if ((_DWORD)v25)
    {
      if (!v31)
      {
        (*(void (**)(void *, char *, uint64_t))(v88 + 16))(v28, v29, v24);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v28, 0, 1, v24);
        goto LABEL_33;
      }
    }
    else
    {
      if (!v31)
      {
        v87(v28, v29, v24);
LABEL_33:
        v56 = v9[7];
        v57 = (void *)(v7 + v56);
        v58 = &v8[v56];
        v59 = v30(v7 + v56, 1, v24);
        v60 = v30((uint64_t)v58, 1, v24);
        if (v59)
        {
          if (!v60)
          {
            (*(void (**)(void *, char *, uint64_t))(v88 + 16))(v57, v58, v24);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v57, 0, 1, v24);
            goto LABEL_39;
          }
        }
        else
        {
          if (!v60)
          {
            v87(v57, v58, v24);
LABEL_39:
            v62 = v9[8];
            v63 = (void *)(v7 + v62);
            v64 = &v8[v62];
            v65 = v30(v7 + v62, 1, v24);
            v66 = v30((uint64_t)v64, 1, v24);
            if (v65)
            {
              if (!v66)
              {
                (*(void (**)(void *, char *, uint64_t))(v88 + 16))(v63, v64, v24);
                (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v63, 0, 1, v24);
                goto LABEL_45;
              }
            }
            else
            {
              if (!v66)
              {
                v87(v63, v64, v24);
LABEL_45:
                v68 = v9[9];
                v69 = (void *)(v7 + v68);
                v70 = &v8[v68];
                v71 = v30(v7 + v68, 1, v24);
                v72 = v30((uint64_t)v70, 1, v24);
                if (v71)
                {
                  if (!v72)
                  {
                    (*(void (**)(void *, char *, uint64_t))(v88 + 16))(v69, v70, v24);
                    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v69, 0, 1, v24);
                    goto LABEL_51;
                  }
                }
                else
                {
                  if (!v72)
                  {
                    v87(v69, v70, v24);
LABEL_51:
                    v74 = v9[10];
                    v75 = (void *)(v7 + v74);
                    v76 = &v8[v74];
                    v77 = v30(v7 + v74, 1, v24);
                    v78 = v30((uint64_t)v76, 1, v24);
                    if (v77)
                    {
                      if (!v78)
                      {
                        (*(void (**)(void *, char *, uint64_t))(v88 + 16))(v75, v76, v24);
                        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v75, 0, 1, v24);
LABEL_57:
                        v80 = v9[11];
                        v81 = (void *)(v7 + v80);
                        v82 = &v8[v80];
                        v83 = v30((uint64_t)v81, 1, v24);
                        v84 = v30((uint64_t)v82, 1, v24);
                        a3 = v90;
                        if (v83)
                        {
                          if (!v84)
                          {
                            (*(void (**)(void *, char *, uint64_t))(v88 + 16))(v81, v82, v24);
                            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v81, 0, 1, v24);
                            goto LABEL_29;
                          }
                        }
                        else
                        {
                          if (!v84)
                          {
                            v87(v81, v82, v24);
                            goto LABEL_29;
                          }
                          (*(void (**)(void *, uint64_t))(v88 + 8))(v81, v24);
                        }
                        v21 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90)
                                                    - 8)
                                        + 64);
                        v22 = v81;
                        v23 = v82;
                        goto LABEL_8;
                      }
                    }
                    else
                    {
                      if (!v78)
                      {
                        v87(v75, v76, v24);
                        goto LABEL_57;
                      }
                      (*(void (**)(void *, uint64_t))(v88 + 8))(v75, v24);
                    }
                    v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
                    memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
                    goto LABEL_57;
                  }
                  (*(void (**)(void *, uint64_t))(v88 + 8))(v69, v24);
                }
                v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
                memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
                goto LABEL_51;
              }
              (*(void (**)(void *, uint64_t))(v88 + 8))(v63, v24);
            }
            v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
            memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
            goto LABEL_45;
          }
          (*(void (**)(void *, uint64_t))(v88 + 8))(v57, v24);
        }
        v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
        memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
        goto LABEL_39;
      }
      (*(void (**)(void *, uint64_t))(v88 + 8))(v28, v24);
    }
    v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    goto LABEL_33;
  }
  if (v13)
  {
LABEL_7:
    v21 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545FB158) - 8) + 64);
    v22 = (void *)v7;
    v23 = v8;
LABEL_8:
    memcpy(v22, v23, v21);
    goto LABEL_29;
  }
  v86 = v10;
  v89 = a3;
  v14 = sub_20A5B8F6C();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(void (**)(uint64_t, char *, uint64_t))(v15 + 16);
  v16(v7, v8, v14);
  v16(v7 + v9[5], &v8[v9[5]], v14);
  v17 = v9[6];
  v18 = (void *)(v7 + v17);
  v19 = &v8[v17];
  v85 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  v91 = v15;
  if (v85(&v8[v17], 1, v14))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v16((uint64_t)v18, v19, v14);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  }
  v32 = v9[7];
  v33 = (void *)(v7 + v32);
  v34 = &v8[v32];
  if (v85(&v8[v32], 1, v14))
  {
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    v36 = (void (*)(void *, char *, uint64_t))v16;
  }
  else
  {
    v36 = (void (*)(void *, char *, uint64_t))v16;
    v16((uint64_t)v33, v34, v14);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v33, 0, 1, v14);
  }
  v37 = v9[8];
  v38 = (void *)(v7 + v37);
  v39 = &v8[v37];
  if (v85(&v8[v37], 1, v14))
  {
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    v36(v38, v39, v14);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v38, 0, 1, v14);
  }
  v41 = v9[9];
  v42 = (void *)(v7 + v41);
  v43 = &v8[v41];
  if (v85(&v8[v41], 1, v14))
  {
    v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    v36(v42, v43, v14);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v42, 0, 1, v14);
  }
  v45 = v9[10];
  v46 = (void *)(v7 + v45);
  v47 = &v8[v45];
  if (v85(&v8[v45], 1, v14))
  {
    v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    v49 = v91;
  }
  else
  {
    v36(v46, v47, v14);
    v49 = v91;
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v46, 0, 1, v14);
  }
  v50 = v9[11];
  v51 = (void *)(v7 + v50);
  v52 = &v8[v50];
  if (v85(v52, 1, v14))
  {
    v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
  }
  else
  {
    v16((uint64_t)v51, v52, v14);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v51, 0, 1, v14);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v86 + 56))(v7, 0, 1, v9);
  a3 = v89;
LABEL_29:
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_20A4F4434(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v3;
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  unsigned int (*v48)(char *, uint64_t, uint64_t);

  v3 = a3;
  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = (int *)type metadata accessor for AssessmentTiming();
  v11 = *((_QWORD *)v10 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB158);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v44 = v3;
    v46 = v11;
    v13 = sub_20A5B8F6C();
    v14 = *(_QWORD *)(v13 - 8);
    v15 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    v15(v8, v9, v13);
    v15(&v8[v10[5]], &v9[v10[5]], v13);
    v16 = v10[6];
    v17 = &v8[v16];
    v18 = &v9[v16];
    v48 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    v47 = v14;
    v45 = v15;
    if (v48(&v9[v16], 1, v13))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      v15(v17, v18, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v17, 0, 1, v13);
    }
    v20 = v10[7];
    v21 = &v8[v20];
    v22 = &v9[v20];
    v3 = v44;
    if (v48(&v9[v20], 1, v13))
    {
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      v24 = v45;
    }
    else
    {
      v24 = v45;
      v45(v21, v22, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v21, 0, 1, v13);
    }
    v25 = v10[8];
    v26 = &v8[v25];
    v27 = &v9[v25];
    if (v48(&v9[v25], 1, v13))
    {
      v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      v24(v26, v27, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v26, 0, 1, v13);
    }
    v29 = v10[9];
    v30 = &v8[v29];
    v31 = &v9[v29];
    if (v48(&v9[v29], 1, v13))
    {
      v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      v24(v30, v31, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v30, 0, 1, v13);
    }
    v33 = v10[10];
    v34 = &v8[v33];
    v35 = &v9[v33];
    if (v48(&v9[v33], 1, v13))
    {
      v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      v37 = v47;
    }
    else
    {
      v24(v34, v35, v13);
      v37 = v47;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v34, 0, 1, v13);
    }
    v38 = v10[11];
    v39 = &v8[v38];
    v40 = &v9[v38];
    if (v48(v40, 1, v13))
    {
      v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      v24(v39, v40, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v39, 0, 1, v13);
    }
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v46 + 56))(v8, 0, 1, v10);
  }
  v42 = *(int *)(v3 + 32);
  *((_BYTE *)a1 + *(int *)(v3 + 28)) = *((_BYTE *)a2 + *(int *)(v3 + 28));
  *(_QWORD *)((char *)a1 + v42) = *(_QWORD *)((char *)a2 + v42);
  return a1;
}

_QWORD *sub_20A4F4820(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, int *);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, char *, uint64_t);
  uint64_t v19;
  void *v20;
  char *v21;
  uint64_t v22;
  size_t v23;
  void *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, char *, uint64_t);
  uint64_t v29;
  void *v30;
  char *v31;
  uint64_t (*v32)(uint64_t, uint64_t, uint64_t);
  int v33;
  uint64_t v34;
  void *v35;
  char *v36;
  uint64_t v37;
  void (*v38)(void *, char *, uint64_t);
  uint64_t v39;
  void *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  char *v61;
  int v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  char *v67;
  int v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  char *v73;
  int v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  char *v79;
  int v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  char *v85;
  int v86;
  int v87;
  unsigned int (*v88)(char *, uint64_t, uint64_t);
  uint64_t v89;
  void (*v90)(void *, char *, uint64_t);
  uint64_t v91;
  int *v92;
  int *v93;
  uint64_t v94;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a3[6];
  v9 = (uint64_t)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = (int *)type metadata accessor for AssessmentTiming();
  v12 = *((_QWORD *)v11 - 1);
  v13 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13((uint64_t)v10, 1, v11);
  if (!v14)
  {
    if (v15)
    {
      sub_20A465AB4(v9, (uint64_t (*)(_QWORD))type metadata accessor for AssessmentTiming);
      goto LABEL_7;
    }
    v93 = a3;
    v26 = sub_20A5B8F6C();
    v27 = *(_QWORD *)(v26 - 8);
    v28 = *(void (**)(uint64_t, char *, uint64_t))(v27 + 40);
    v28(v9, v10, v26);
    v90 = (void (*)(void *, char *, uint64_t))v28;
    v28(v9 + v11[5], &v10[v11[5]], v26);
    v29 = v11[6];
    v30 = (void *)(v9 + v29);
    v31 = &v10[v29];
    v91 = v27;
    v32 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 48);
    LODWORD(v27) = v32(v9 + v29, 1, v26);
    v33 = v32((uint64_t)v31, 1, v26);
    if ((_DWORD)v27)
    {
      if (!v33)
      {
        (*(void (**)(void *, char *, uint64_t))(v91 + 32))(v30, v31, v26);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v30, 0, 1, v26);
        goto LABEL_33;
      }
    }
    else
    {
      if (!v33)
      {
        v90(v30, v31, v26);
LABEL_33:
        v59 = v11[7];
        v60 = (void *)(v9 + v59);
        v61 = &v10[v59];
        v62 = v32(v9 + v59, 1, v26);
        v63 = v32((uint64_t)v61, 1, v26);
        if (v62)
        {
          if (!v63)
          {
            (*(void (**)(void *, char *, uint64_t))(v91 + 32))(v60, v61, v26);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v60, 0, 1, v26);
            goto LABEL_39;
          }
        }
        else
        {
          if (!v63)
          {
            v90(v60, v61, v26);
LABEL_39:
            v65 = v11[8];
            v66 = (void *)(v9 + v65);
            v67 = &v10[v65];
            v68 = v32(v9 + v65, 1, v26);
            v69 = v32((uint64_t)v67, 1, v26);
            if (v68)
            {
              if (!v69)
              {
                (*(void (**)(void *, char *, uint64_t))(v91 + 32))(v66, v67, v26);
                (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v66, 0, 1, v26);
                goto LABEL_45;
              }
            }
            else
            {
              if (!v69)
              {
                v90(v66, v67, v26);
LABEL_45:
                v71 = v11[9];
                v72 = (void *)(v9 + v71);
                v73 = &v10[v71];
                v74 = v32(v9 + v71, 1, v26);
                v75 = v32((uint64_t)v73, 1, v26);
                if (v74)
                {
                  if (!v75)
                  {
                    (*(void (**)(void *, char *, uint64_t))(v91 + 32))(v72, v73, v26);
                    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v72, 0, 1, v26);
                    goto LABEL_51;
                  }
                }
                else
                {
                  if (!v75)
                  {
                    v90(v72, v73, v26);
LABEL_51:
                    v77 = v11[10];
                    v78 = (void *)(v9 + v77);
                    v79 = &v10[v77];
                    v80 = v32(v9 + v77, 1, v26);
                    v81 = v32((uint64_t)v79, 1, v26);
                    if (v80)
                    {
                      if (!v81)
                      {
                        (*(void (**)(void *, char *, uint64_t))(v91 + 32))(v78, v79, v26);
                        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v78, 0, 1, v26);
LABEL_57:
                        v83 = v11[11];
                        v84 = (void *)(v9 + v83);
                        v85 = &v10[v83];
                        v86 = v32((uint64_t)v84, 1, v26);
                        v87 = v32((uint64_t)v85, 1, v26);
                        a3 = v93;
                        if (v86)
                        {
                          if (!v87)
                          {
                            (*(void (**)(void *, char *, uint64_t))(v91 + 32))(v84, v85, v26);
                            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v84, 0, 1, v26);
                            goto LABEL_29;
                          }
                        }
                        else
                        {
                          if (!v87)
                          {
                            v90(v84, v85, v26);
                            goto LABEL_29;
                          }
                          (*(void (**)(void *, uint64_t))(v91 + 8))(v84, v26);
                        }
                        v23 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90)
                                                    - 8)
                                        + 64);
                        v24 = v84;
                        v25 = v85;
                        goto LABEL_8;
                      }
                    }
                    else
                    {
                      if (!v81)
                      {
                        v90(v78, v79, v26);
                        goto LABEL_57;
                      }
                      (*(void (**)(void *, uint64_t))(v91 + 8))(v78, v26);
                    }
                    v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
                    memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
                    goto LABEL_57;
                  }
                  (*(void (**)(void *, uint64_t))(v91 + 8))(v72, v26);
                }
                v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
                memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
                goto LABEL_51;
              }
              (*(void (**)(void *, uint64_t))(v91 + 8))(v66, v26);
            }
            v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
            memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
            goto LABEL_45;
          }
          (*(void (**)(void *, uint64_t))(v91 + 8))(v60, v26);
        }
        v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
        memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
        goto LABEL_39;
      }
      (*(void (**)(void *, uint64_t))(v91 + 8))(v30, v26);
    }
    v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    goto LABEL_33;
  }
  if (v15)
  {
LABEL_7:
    v23 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545FB158) - 8) + 64);
    v24 = (void *)v9;
    v25 = v10;
LABEL_8:
    memcpy(v24, v25, v23);
    goto LABEL_29;
  }
  v89 = v12;
  v92 = a3;
  v16 = sub_20A5B8F6C();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(void (**)(uint64_t, char *, uint64_t))(v17 + 32);
  v18(v9, v10, v16);
  v18(v9 + v11[5], &v10[v11[5]], v16);
  v19 = v11[6];
  v20 = (void *)(v9 + v19);
  v21 = &v10[v19];
  v88 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  v94 = v17;
  if (v88(&v10[v19], 1, v16))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v18((uint64_t)v20, v21, v16);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v16);
  }
  v34 = v11[7];
  v35 = (void *)(v9 + v34);
  v36 = &v10[v34];
  if (v88(&v10[v34], 1, v16))
  {
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    v38 = (void (*)(void *, char *, uint64_t))v18;
  }
  else
  {
    v38 = (void (*)(void *, char *, uint64_t))v18;
    v18((uint64_t)v35, v36, v16);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v35, 0, 1, v16);
  }
  v39 = v11[8];
  v40 = (void *)(v9 + v39);
  v41 = &v10[v39];
  if (v88(&v10[v39], 1, v16))
  {
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
  }
  else
  {
    v38(v40, v41, v16);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v40, 0, 1, v16);
  }
  v43 = v11[9];
  v44 = (void *)(v9 + v43);
  v45 = &v10[v43];
  if (v88(&v10[v43], 1, v16))
  {
    v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
  }
  else
  {
    v38(v44, v45, v16);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v44, 0, 1, v16);
  }
  v47 = v11[10];
  v48 = (void *)(v9 + v47);
  v49 = &v10[v47];
  if (v88(&v10[v47], 1, v16))
  {
    v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    v51 = v94;
  }
  else
  {
    v38(v48, v49, v16);
    v51 = v94;
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v48, 0, 1, v16);
  }
  v52 = v11[11];
  v53 = (void *)(v9 + v52);
  v54 = &v10[v52];
  if (v88(v54, 1, v16))
  {
    v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9F90);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
  }
  else
  {
    v18((uint64_t)v53, v54, v16);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v53, 0, 1, v16);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v89 + 56))(v9, 0, 1, v11);
  a3 = v92;
LABEL_29:
  v56 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *(_QWORD *)((char *)a1 + v56) = *(_QWORD *)((char *)a2 + v56);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_20A4F5118()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20A4F5124(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB158);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v9);
  }
}

uint64_t sub_20A4F51B0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_20A4F51BC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB158);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

void sub_20A4F5234()
{
  unint64_t v0;

  sub_20A4CC87C(319, &qword_2545FB1A8, (void (*)(uint64_t))type metadata accessor for AssessmentTiming);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

unint64_t *initializeBufferWithCopyOfBuffer for ODNAssessmentsFeedbackManager.ODNAssessmentsFeedbackManagerError(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a2;
  sub_20A4F52FC(*a2);
  *a1 = v3;
  return a1;
}

unint64_t sub_20A4F52FC(unint64_t result)
{
  if (result >> 62)
  {
    if (result >> 62 != 1)
      return result;
    result &= 0x3FFFFFFFFFFFFFFFuLL;
  }
  return (unint64_t)(id)result;
}

void destroy for ODNAssessmentsFeedbackManager.ODNAssessmentsFeedbackManagerError(unint64_t *a1)
{
  sub_20A48A7B0(*a1);
}

unint64_t *assignWithCopy for ODNAssessmentsFeedbackManager.ODNAssessmentsFeedbackManagerError(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *a2;
  sub_20A4F52FC(*a2);
  v4 = *a1;
  *a1 = v3;
  sub_20A48A7B0(v4);
  return a1;
}

unint64_t *assignWithTake for ODNAssessmentsFeedbackManager.ODNAssessmentsFeedbackManagerError(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a1;
  *a1 = *a2;
  sub_20A48A7B0(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for ODNAssessmentsFeedbackManager.ODNAssessmentsFeedbackManagerError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7E && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 126);
  v3 = (((*(_QWORD *)a1 >> 57) >> 5) | (4 * ((*(_QWORD *)a1 >> 57) & 0x18 | *(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7D)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for ODNAssessmentsFeedbackManager.ODNAssessmentsFeedbackManagerError(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7D)
  {
    *(_QWORD *)result = a2 - 126;
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_20A4F5434(_QWORD *a1)
{
  uint64_t v1;

  v1 = *a1 >> 62;
  if (v1 <= 1)
    return v1;
  else
    return (*a1 >> 3) + 2;
}

_QWORD *sub_20A4F5450(_QWORD *result)
{
  *result &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

unint64_t *sub_20A4F5460(unint64_t *result, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  if (a2 < 2)
  {
    v2 = *result & 0xFFFFFFFFFFFFFF8;
    v3 = a2 << 62;
  }
  else
  {
    v2 = 8 * (a2 - 2);
    v3 = 0x8000000000000000;
  }
  *result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for ODNAssessmentsFeedbackManager.ODNAssessmentsFeedbackManagerError()
{
  return &type metadata for ODNAssessmentsFeedbackManager.ODNAssessmentsFeedbackManagerError;
}

uint64_t sub_20A4F54A0()
{
  uint64_t result;

  sub_20A4F5E70();
  result = sub_20A5B8D20();
  qword_25460FFA0 = result;
  return result;
}

uint64_t sub_20A4F54F4()
{
  uint64_t result;

  sub_20A4F5E70();
  result = sub_20A5B8D20();
  qword_253EBC878 = result;
  return result;
}

uint64_t sub_20A4F5550()
{
  uint64_t result;

  sub_20A4F5E70();
  result = sub_20A5B8D20();
  qword_253EBC870 = result;
  return result;
}

id sub_20A4F55AC()
{
  if (qword_253EB4FC8 != -1)
    swift_once();
  qword_25460FFA8 = (uint64_t)"LocationHelperInit";
  unk_25460FFB0 = 18;
  byte_25460FFB8 = 2;
  qword_25460FFC0 = qword_253EBC870;
  byte_25460FFC8 = 0;
  return (id)qword_253EBC870;
}

id sub_20A4F5614()
{
  if (qword_253EB4FC8 != -1)
    swift_once();
  qword_25460FFD0 = (uint64_t)"LocationHelperRequest";
  *(_QWORD *)algn_25460FFD8 = 21;
  byte_25460FFE0 = 2;
  qword_25460FFE8 = qword_253EBC870;
  byte_25460FFF0 = 1;
  return (id)qword_253EBC870;
}

id sub_20A4F5680()
{
  if (qword_253EB4FC8 != -1)
    swift_once();
  qword_25460FFF8 = (uint64_t)"LocationHelpergetLocationOrWait";
  unk_254610000 = 31;
  byte_254610008 = 2;
  qword_254610010 = qword_253EBC870;
  byte_254610018 = 0;
  return (id)qword_253EBC870;
}

id sub_20A4F56E8()
{
  if (qword_253EB4FC8 != -1)
    swift_once();
  qword_254610020 = (uint64_t)"LocationHelperUpdateWaitingContinuations";
  *(_QWORD *)algn_254610028 = 40;
  byte_254610030 = 2;
  qword_254610038 = qword_253EBC870;
  byte_254610040 = 0;
  return (id)qword_253EBC870;
}

id sub_20A4F5750()
{
  if (qword_253EB4FC8 != -1)
    swift_once();
  qword_254610048 = (uint64_t)"GeocoderFCMU";
  unk_254610050 = 12;
  byte_254610058 = 2;
  qword_254610060 = qword_253EBC870;
  byte_254610068 = 0;
  return (id)qword_253EBC870;
}

id sub_20A4F57B8()
{
  if (qword_253EB4FC8 != -1)
    swift_once();
  qword_254610070 = (uint64_t)"GeocoderFCMUMemCache";
  *(_QWORD *)algn_254610078 = 20;
  byte_254610080 = 2;
  qword_254610088 = qword_253EBC870;
  byte_254610090 = 0;
  return (id)qword_253EBC870;
}

id sub_20A4F5820()
{
  if (qword_253EB4FC8 != -1)
    swift_once();
  qword_254610098 = (uint64_t)"GeocoderFCMUPersistentCache";
  unk_2546100A0 = 27;
  byte_2546100A8 = 2;
  qword_2546100B0 = qword_253EBC870;
  byte_2546100B8 = 0;
  return (id)qword_253EBC870;
}

id sub_20A4F5888()
{
  if (qword_253EB4FC8 != -1)
    swift_once();
  qword_2546100C0 = (uint64_t)"GeocoderFCMUTaskGroupTotal";
  *(_QWORD *)algn_2546100C8 = 26;
  byte_2546100D0 = 2;
  qword_2546100D8 = qword_253EBC870;
  byte_2546100E0 = 0;
  return (id)qword_253EBC870;
}

id sub_20A4F58F0()
{
  if (qword_253EB4FC8 != -1)
    swift_once();
  qword_2546100E8 = (uint64_t)"GeocoderFCMUGeocodeOp";
  unk_2546100F0 = 21;
  byte_2546100F8 = 2;
  qword_254610100 = qword_253EBC870;
  byte_254610108 = 0;
  return (id)qword_253EBC870;
}

id sub_20A4F5958()
{
  if (qword_253EB4FC8 != -1)
    swift_once();
  qword_254610110 = (uint64_t)"GeocoderGetFromMemCache";
  *(_QWORD *)algn_254610118 = 23;
  byte_254610120 = 2;
  qword_254610128 = qword_253EBC870;
  byte_254610130 = 0;
  return (id)qword_253EBC870;
}

id sub_20A4F59C0()
{
  if (qword_253EB4FC8 != -1)
    swift_once();
  qword_254610138 = (uint64_t)"GeocoderGeocodeAddresses";
  unk_254610140 = 24;
  byte_254610148 = 2;
  qword_254610150 = qword_253EBC870;
  byte_254610158 = 0;
  return (id)qword_253EBC870;
}

id sub_20A4F5A28()
{
  if (qword_2545F9998 != -1)
    swift_once();
  *(_QWORD *)&xmmword_2545FB1B0 = "odiSessionInternalInit";
  *((_QWORD *)&xmmword_2545FB1B0 + 1) = 22;
  byte_2545FB1C0 = 2;
  qword_2545FB1C8 = qword_25460FFA0;
  byte_2545FB1D0 = 1;
  return (id)qword_25460FFA0;
}

id static FrameworkSignposts.odiSessionInternalInit.getter@<X0>(uint64_t a1@<X8>)
{
  char v2;
  void *v3;
  char v4;

  if (qword_2545F99F8 != -1)
    swift_once();
  v2 = byte_2545FB1C0;
  v3 = (void *)qword_2545FB1C8;
  v4 = byte_2545FB1D0;
  *(_OWORD *)a1 = xmmword_2545FB1B0;
  *(_BYTE *)(a1 + 16) = v2;
  *(_QWORD *)(a1 + 24) = v3;
  *(_BYTE *)(a1 + 32) = v4;
  return v3;
}

id sub_20A4F5B00()
{
  if (qword_2545F9998 != -1)
    swift_once();
  *(_QWORD *)&xmmword_2545FB1D8 = "odiSessionInternalUpdate";
  *((_QWORD *)&xmmword_2545FB1D8 + 1) = 24;
  byte_2545FB1E8 = 2;
  qword_2545FB1F0 = qword_25460FFA0;
  byte_2545FB1F8 = 1;
  return (id)qword_25460FFA0;
}

id static FrameworkSignposts.odiSessionInternalUpdate.getter@<X0>(uint64_t a1@<X8>)
{
  char v2;
  void *v3;
  char v4;

  if (qword_2545F9A00 != -1)
    swift_once();
  v2 = byte_2545FB1E8;
  v3 = (void *)qword_2545FB1F0;
  v4 = byte_2545FB1F8;
  *(_OWORD *)a1 = xmmword_2545FB1D8;
  *(_BYTE *)(a1 + 16) = v2;
  *(_QWORD *)(a1 + 24) = v3;
  *(_BYTE *)(a1 + 32) = v4;
  return v3;
}

id sub_20A4F5BD8()
{
  if (qword_2545F9998 != -1)
    swift_once();
  *(_QWORD *)&xmmword_2545FB200 = "odiSessionInternalGetAssessment";
  *((_QWORD *)&xmmword_2545FB200 + 1) = 31;
  byte_2545FB210 = 2;
  qword_2545FB218 = qword_25460FFA0;
  byte_2545FB220 = 1;
  return (id)qword_25460FFA0;
}

id static FrameworkSignposts.odiSessionInternalGetAssessment.getter@<X0>(uint64_t a1@<X8>)
{
  char v2;
  void *v3;
  char v4;

  if (qword_2545F9A08 != -1)
    swift_once();
  v2 = byte_2545FB210;
  v3 = (void *)qword_2545FB218;
  v4 = byte_2545FB220;
  *(_OWORD *)a1 = xmmword_2545FB200;
  *(_BYTE *)(a1 + 16) = v2;
  *(_QWORD *)(a1 + 24) = v3;
  *(_BYTE *)(a1 + 32) = v4;
  return v3;
}

id sub_20A4F5CB0()
{
  if (qword_2545F9998 != -1)
    swift_once();
  *(_QWORD *)&xmmword_2545FB228 = "odiSessionInternalGetDeviceData";
  *((_QWORD *)&xmmword_2545FB228 + 1) = 31;
  byte_2545FB238 = 2;
  qword_2545FB240 = qword_25460FFA0;
  byte_2545FB248 = 1;
  return (id)qword_25460FFA0;
}

id static FrameworkSignposts.odiSessionInternalGetArmandDeviceData.getter@<X0>(uint64_t a1@<X8>)
{
  char v2;
  void *v3;
  char v4;

  if (qword_2545F9A10 != -1)
    swift_once();
  v2 = byte_2545FB238;
  v3 = (void *)qword_2545FB240;
  v4 = byte_2545FB248;
  *(_OWORD *)a1 = xmmword_2545FB228;
  *(_BYTE *)(a1 + 16) = v2;
  *(_QWORD *)(a1 + 24) = v3;
  *(_BYTE *)(a1 + 32) = v4;
  return v3;
}

id sub_20A4F5D88()
{
  if (qword_2545F9998 != -1)
    swift_once();
  *(_QWORD *)&xmmword_2545FB250 = "odiSessionInternalGetBindingsData";
  *((_QWORD *)&xmmword_2545FB250 + 1) = 33;
  byte_2545FB260 = 2;
  qword_2545FB268 = qword_25460FFA0;
  byte_2545FB270 = 1;
  return (id)qword_25460FFA0;
}

id static FrameworkSignposts.odiSessionInternalGetBindingsData.getter@<X0>(uint64_t a1@<X8>)
{
  char v2;
  void *v3;
  char v4;

  if (qword_2545F9A18 != -1)
    swift_once();
  v2 = byte_2545FB260;
  v3 = (void *)qword_2545FB268;
  v4 = byte_2545FB270;
  *(_OWORD *)a1 = xmmword_2545FB250;
  *(_BYTE *)(a1 + 16) = v2;
  *(_QWORD *)(a1 + 24) = v3;
  *(_BYTE *)(a1 + 32) = v4;
  return v3;
}

ValueMetadata *type metadata accessor for FrameworkSignposts()
{
  return &type metadata for FrameworkSignposts;
}

unint64_t sub_20A4F5E70()
{
  unint64_t result;

  result = qword_253EB51D8;
  if (!qword_253EB51D8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_253EB51D8);
  }
  return result;
}

id sub_20A4F5EAC()
{
  if (qword_253EB4FC8 != -1)
    swift_once();
  qword_254610160 = (uint64_t)"odiSessionInternalDDBAA";
  *(_QWORD *)algn_254610168 = 23;
  byte_254610170 = 2;
  qword_254610178 = qword_253EBC870;
  byte_254610180 = 0;
  return (id)qword_253EBC870;
}

id sub_20A4F5F14()
{
  if (qword_253EB4FC8 != -1)
    swift_once();
  qword_254610188 = (uint64_t)"odiSessionInternalDDPac";
  unk_254610190 = 23;
  byte_254610198 = 2;
  qword_2546101A0 = qword_253EBC870;
  byte_2546101A8 = 0;
  return (id)qword_253EBC870;
}

id sub_20A4F5F7C()
{
  if (qword_253EB4FC8 != -1)
    swift_once();
  qword_2546101B0 = (uint64_t)"odiSessionInternalDDOdiDeviceInfo";
  *(_QWORD *)algn_2546101B8 = 33;
  byte_2546101C0 = 2;
  qword_2546101C8 = qword_253EBC870;
  byte_2546101D0 = 0;
  return (id)qword_253EBC870;
}

id sub_20A4F5FE4()
{
  if (qword_253EB4FC8 != -1)
    swift_once();
  qword_2546101D8 = (uint64_t)"odiSessionInternalDDStatus";
  unk_2546101E0 = 26;
  byte_2546101E8 = 2;
  qword_2546101F0 = qword_253EBC870;
  byte_2546101F8 = 0;
  return (id)qword_253EBC870;
}

id sub_20A4F604C()
{
  if (qword_253EB4FC8 != -1)
    swift_once();
  qword_254610200 = (uint64_t)"odiSessionInternalDDDeviceInfo";
  *(_QWORD *)algn_254610208 = 30;
  byte_254610210 = 2;
  qword_254610218 = qword_253EBC870;
  byte_254610220 = 0;
  return (id)qword_253EBC870;
}

id sub_20A4F60B4()
{
  if (qword_253EB4FC8 != -1)
    swift_once();
  qword_254610228 = (uint64_t)"odiSessionInternalDDLocation";
  unk_254610230 = 28;
  byte_254610238 = 2;
  qword_254610240 = qword_253EBC870;
  byte_254610248 = 0;
  return (id)qword_253EBC870;
}

id sub_20A4F611C()
{
  if (qword_253EB4FC8 != -1)
    swift_once();
  qword_254610250 = (uint64_t)"odiSessionInternalDDsid";
  *(_QWORD *)algn_254610258 = 23;
  byte_254610260 = 2;
  qword_254610268 = qword_253EBC870;
  byte_254610270 = 0;
  return (id)qword_253EBC870;
}

id sub_20A4F6184()
{
  if (qword_253EB4FC8 != -1)
    swift_once();
  qword_254610278 = (uint64_t)"odiSessionInternalBindings";
  unk_254610280 = 26;
  byte_254610288 = 2;
  qword_254610290 = qword_253EBC870;
  byte_254610298 = 0;
  return (id)qword_253EBC870;
}

id sub_20A4F61EC()
{
  if (qword_253EB4FC8 != -1)
    swift_once();
  qword_2546102A0 = (uint64_t)"odiSessionInternalParsedBindings";
  *(_QWORD *)algn_2546102A8 = 32;
  byte_2546102B0 = 2;
  qword_2546102B8 = qword_253EBC870;
  byte_2546102C0 = 0;
  return (id)qword_253EBC870;
}

id sub_20A4F6254()
{
  if (qword_253EB4FC8 != -1)
    swift_once();
  qword_2546102C8 = (uint64_t)"odiSessionInternalFormattedBindings";
  unk_2546102D0 = 35;
  byte_2546102D8 = 2;
  qword_2546102E0 = qword_253EBC870;
  byte_2546102E8 = 0;
  return (id)qword_253EBC870;
}

id sub_20A4F62BC()
{
  if (qword_253EB4FC8 != -1)
    swift_once();
  qword_2546102F0 = (uint64_t)"odiSessionInternalGeocodedBindings";
  *(_QWORD *)algn_2546102F8 = 34;
  byte_254610300 = 2;
  qword_254610308 = qword_253EBC870;
  byte_254610310 = 0;
  return (id)qword_253EBC870;
}

id sub_20A4F6324()
{
  if (qword_253EB4FC8 != -1)
    swift_once();
  qword_254610318 = (uint64_t)"odiSessionInternalDeviceSettings";
  unk_254610320 = 32;
  byte_254610328 = 2;
  qword_254610330 = qword_253EBC870;
  byte_254610338 = 0;
  return (id)qword_253EBC870;
}

id sub_20A4F638C()
{
  if (qword_253EB4FD0 != -1)
    swift_once();
  qword_253EBC848 = (uint64_t)"getProfileRequest";
  unk_253EBC850 = 17;
  byte_253EBC858 = 2;
  qword_253EBC860 = qword_253EBC878;
  byte_253EBC868 = 0;
  return (id)qword_253EBC878;
}

id sub_20A4F63F4()
{
  if (qword_253EB4FD0 != -1)
    swift_once();
  qword_253EBC8E8 = (uint64_t)"getSTSRequest";
  unk_253EBC8F0 = 13;
  byte_253EBC8F8 = 2;
  qword_253EBC900 = qword_253EBC878;
  byte_253EBC908 = 0;
  return (id)qword_253EBC878;
}

id sub_20A4F645C()
{
  if (qword_253EB4FC8 != -1)
    swift_once();
  qword_254610340 = (uint64_t)"fetchAssessment";
  *(_QWORD *)algn_254610348 = 15;
  byte_254610350 = 2;
  qword_254610358 = qword_253EBC870;
  byte_254610360 = 1;
  return (id)qword_253EBC870;
}

id sub_20A4F64C8()
{
  if (qword_253EB4FC8 != -1)
    swift_once();
  qword_254610368 = (uint64_t)"odnMypg";
  unk_254610370 = 7;
  byte_254610378 = 2;
  qword_254610380 = qword_253EBC870;
  byte_254610388 = 1;
  return (id)qword_253EBC870;
}

id sub_20A4F6534()
{
  if (qword_253EB4FC8 != -1)
    swift_once();
  qword_253EBC820 = (uint64_t)"checkTrust";
  *(_QWORD *)algn_253EBC828 = 10;
  byte_253EBC830 = 2;
  qword_253EBC838 = qword_253EBC870;
  byte_253EBC840 = 0;
  return (id)qword_253EBC870;
}

id sub_20A4F659C()
{
  if (qword_253EB4FC8 != -1)
    swift_once();
  qword_254610390 = (uint64_t)"odnProxyInit";
  *(_QWORD *)algn_254610398 = 12;
  byte_2546103A0 = 2;
  qword_2546103A8 = qword_253EBC870;
  byte_2546103B0 = 0;
  return (id)qword_253EBC870;
}

uint64_t sub_20A4F6604(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  *(_QWORD *)(v2 + 48) = v1;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 56) = v4;
  *v4 = v2;
  v4[1] = sub_20A4F6658;
  return sub_20A4F884C(a1, 1);
}

uint64_t sub_20A4F6658()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_20A4F66C8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 48) + OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_logger);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v5 = 1;
  (*(void (**)(unint64_t, unint64_t, char *, uint64_t, uint64_t))(v3 + 32))(0xD000000000000023, 0x800000020A5E3310, &v5, v2, v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4F6754()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  unint64_t v10;

  v1 = *(void **)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 48);
  LOBYTE(v9) = 0;
  v3 = v1;
  ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001ELL, 0x800000020A5E32C0, (char *)v1, (unsigned __int8 *)&v9, 0, 0, 0xD000000000000061, 0x800000020A5E2F00, 0xD000000000000022, 0x800000020A5E32E0, 345);

  v4 = (_QWORD *)(v2 + OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_logger);
  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_logger + 24);
  v6 = v4[4];
  __swift_project_boxed_opaque_existential_1(v4, v5);
  v9 = 0x203A726F727245;
  v10 = 0xE700000000000000;
  swift_getErrorValue();
  sub_20A5B923C();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  v7 = v9;
  LOBYTE(v9) = 1;
  (*(void (**)(uint64_t, unint64_t, uint64_t *, uint64_t, uint64_t))(v6 + 40))(v7, v10, &v9, v5, v6);
  swift_bridgeObjectRelease();
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4F68D0(_BYTE *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = type metadata accessor for ODISignpost();
  *(_QWORD *)(v2 + 32) = swift_task_alloc();
  *(_QWORD *)(v2 + 40) = swift_task_alloc();
  *(_BYTE *)(v2 + 81) = *a1;
  return swift_task_switch();
}

uint64_t sub_20A4F6948()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  void *v5;
  int v6;
  id v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  if (qword_253EB52E8 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 32);
  v3 = qword_253EBC8E8;
  v2 = unk_253EBC8F0;
  v4 = byte_253EBC8F8;
  v5 = (void *)qword_253EBC900;
  v6 = byte_253EBC908;
  *(_QWORD *)(v1 + 32) = "enableTelemetry=YES";
  *(_QWORD *)(v1 + 40) = 19;
  *(_BYTE *)(v1 + 48) = 2;
  *(_QWORD *)v1 = v3;
  *(_QWORD *)(v1 + 8) = v2;
  *(_BYTE *)(v1 + 16) = v4;
  *(_QWORD *)(v1 + 24) = v5;
  v7 = v5;
  sub_20A5B87D4();
  sub_20A5B8CFC();
  if (v6 == 1)
    sub_20A5B87BC();
  else
    sub_20A5B87C8();
  v8 = *(_BYTE *)(v0 + 81);
  v9 = *(_QWORD *)(v0 + 32);
  v10 = *(_QWORD *)(v0 + 40);

  sub_20A4595B4(v9, v10);
  *(_BYTE *)(v0 + 80) = v8;
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v11;
  *v11 = v0;
  v11[1] = sub_20A4F6AC8;
  return sub_20A4F9F5C(0, (_BYTE *)(v0 + 80));
}

uint64_t sub_20A4F6AC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(*v3 + 56) = v2;
  swift_task_dealloc();
  if (!v2)
  {
    *(_QWORD *)(v6 + 64) = a2;
    *(_QWORD *)(v6 + 72) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_20A4F6B40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 40);
  sub_20A5B8CF0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52C0);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_20A5BA9A0;
  v3 = MEMORY[0x24BEE1360];
  *(_QWORD *)(v2 + 56) = MEMORY[0x24BEE1328];
  *(_QWORD *)(v2 + 64) = v3;
  *(_BYTE *)(v2 + 32) = 1;
  sub_20A5B87BC();
  swift_bridgeObjectRelease();
  sub_20A4595F8(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 64));
}

uint64_t sub_20A4F6C58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 40);
  sub_20A5B8CF0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52C0);
  v2 = swift_allocObject();
  v3 = MEMORY[0x24BEE1328];
  *(_OWORD *)(v2 + 16) = xmmword_20A5BA9A0;
  v4 = MEMORY[0x24BEE1360];
  *(_QWORD *)(v2 + 56) = v3;
  *(_QWORD *)(v2 + 64) = v4;
  *(_BYTE *)(v2 + 32) = 0;
  sub_20A5B87BC();
  swift_bridgeObjectRelease();
  swift_willThrow();
  sub_20A4595F8(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

BOOL static ODIServerRepo.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ODIServerRepo.hash(into:)()
{
  return sub_20A5B92A8();
}

uint64_t ODIServerRepo.hashValue.getter()
{
  sub_20A5B929C();
  sub_20A5B92A8();
  return sub_20A5B92CC();
}

unint64_t sub_20A4F6DF8()
{
  unint64_t result;

  result = qword_2545FB278;
  if (!qword_2545FB278)
  {
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for ODIServerRepo, &type metadata for ODIServerRepo);
    atomic_store(result, (unint64_t *)&qword_2545FB278);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ODIServerRepo(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_20A4F6E88 + 4 * byte_20A5C3AA5[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_20A4F6EBC + 4 * asc_20A5C3AA0[v4]))();
}

uint64_t sub_20A4F6EBC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A4F6EC4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A4F6ECCLL);
  return result;
}

uint64_t sub_20A4F6ED8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A4F6EE0);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_20A4F6EE4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A4F6EEC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ODIServerRepo()
{
  return &type metadata for ODIServerRepo;
}

uint64_t sub_20A4F6F08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  *(_QWORD *)(v6 + 464) = a4;
  *(_QWORD *)(v6 + 472) = v5;
  *(_QWORD *)(v6 + 448) = a2;
  *(_QWORD *)(v6 + 456) = a3;
  *(_QWORD *)(v6 + 440) = a1;
  v7 = *(_OWORD *)(a5 + 176);
  *(_OWORD *)(v6 + 176) = *(_OWORD *)(a5 + 160);
  *(_OWORD *)(v6 + 192) = v7;
  *(_OWORD *)(v6 + 208) = *(_OWORD *)(a5 + 192);
  *(_BYTE *)(v6 + 224) = *(_BYTE *)(a5 + 208);
  v8 = *(_OWORD *)(a5 + 112);
  *(_OWORD *)(v6 + 112) = *(_OWORD *)(a5 + 96);
  *(_OWORD *)(v6 + 128) = v8;
  v9 = *(_OWORD *)(a5 + 144);
  *(_OWORD *)(v6 + 144) = *(_OWORD *)(a5 + 128);
  *(_OWORD *)(v6 + 160) = v9;
  v10 = *(_OWORD *)(a5 + 48);
  *(_OWORD *)(v6 + 48) = *(_OWORD *)(a5 + 32);
  *(_OWORD *)(v6 + 64) = v10;
  v11 = *(_OWORD *)(a5 + 80);
  *(_OWORD *)(v6 + 80) = *(_OWORD *)(a5 + 64);
  *(_OWORD *)(v6 + 96) = v11;
  v12 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)(v6 + 16) = *(_OWORD *)a5;
  *(_OWORD *)(v6 + 32) = v12;
  return swift_task_switch();
}

uint64_t sub_20A4F6F68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  unint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _QWORD *v15;
  uint64_t v17;
  char *v18;
  char *v19;
  _QWORD v20[3];

  v1 = *(_QWORD *)(v0 + 464);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 448);
    v3 = *(_QWORD *)(v0 + 456);
    v4 = *(_QWORD *)(v0 + 440);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253EB6288);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_20A5BA9A0;
    *(_QWORD *)(inited + 32) = 0x692D656C646E7562;
    *(_QWORD *)(inited + 40) = 0xE900000000000064;
    *(_QWORD *)(inited + 48) = v4;
    *(_QWORD *)(inited + 56) = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v6 = sub_20A46A6EC(inited);
    *(_QWORD *)(v0 + 480) = v6;
    *(_QWORD *)(v0 + 432) = &type metadata for ORDRequest;
    v7 = swift_allocObject();
    *(_QWORD *)(v0 + 408) = v7;
    v8 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v7 + 80) = *(_OWORD *)(v0 + 80);
    *(_OWORD *)(v7 + 96) = v8;
    v9 = *(_OWORD *)(v0 + 64);
    *(_OWORD *)(v7 + 48) = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v7 + 64) = v9;
    v10 = *(_OWORD *)(v0 + 160);
    *(_OWORD *)(v7 + 144) = *(_OWORD *)(v0 + 144);
    *(_OWORD *)(v7 + 160) = v10;
    v11 = *(_OWORD *)(v0 + 128);
    *(_OWORD *)(v7 + 112) = *(_OWORD *)(v0 + 112);
    *(_OWORD *)(v7 + 128) = v11;
    *(_BYTE *)(v7 + 224) = *(_BYTE *)(v0 + 224);
    v12 = *(_OWORD *)(v0 + 208);
    v13 = *(_OWORD *)(v0 + 176);
    *(_OWORD *)(v7 + 192) = *(_OWORD *)(v0 + 192);
    *(_OWORD *)(v7 + 208) = v12;
    *(_OWORD *)(v7 + 176) = v13;
    v14 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v7 + 16) = *(_OWORD *)(v0 + 16);
    *(_OWORD *)(v7 + 32) = v14;
    v20[0] = v3;
    v20[1] = v1;
    swift_bridgeObjectRetain();
    sub_20A5B899C();
    *(_QWORD *)(v0 + 488) = v1;
    sub_20A4EEF10((_QWORD *)(v0 + 16));
    v15 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 496) = v15;
    *v15 = v0;
    v15[1] = sub_20A4F71B4;
    return sub_20A4F7C80(v0 + 408, v3, v1, v6);
  }
  else
  {
    v17 = *(_QWORD *)(v0 + 472);
    LOBYTE(v20[0]) = 78;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000037, 0x800000020A5E2FF0, 0, (unsigned __int8 *)v20, 0, 0, 0xD000000000000061, 0x800000020A5E2F00, 0xD00000000000002DLL, 0x800000020A5E30C0, 83);
    v19 = v18;
    sub_20A4F7508(v18, v17);

    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_20A4F71B4(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v8;

  v8 = *v4;
  *(_QWORD *)(*v4 + 504) = v3;
  swift_task_dealloc();
  if (!v3)
  {
    sub_20A44BD90(a1, a2);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v8 + 408);
  }
  return swift_task_switch();
}

uint64_t sub_20A4F7278()
{
  uint64_t v0;
  Swift::String v1;
  char v3;
  unint64_t v4;
  unint64_t v5;

  sub_20A47BD60(*(_QWORD *)(v0 + 472) + OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_logger, v0 + 368);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 368), *(_QWORD *)(v0 + 392));
  v3 = 6;
  sub_20A5B8E94();
  swift_bridgeObjectRelease();
  v4 = 0xD000000000000019;
  v5 = 0x800000020A5E30F0;
  swift_bridgeObjectRetain();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  v1._countAndFlagsBits = 0xD000000000000019;
  v1._object = (void *)0x800000020A5E30F0;
  Loggable.milestone(tag:description:value:isSensitive:)((CoreODIEssentials::MilestoneTag)&v3, v1, (Swift::String_optional)0, 0);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 368);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4F73B4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  id v6;
  unint64_t v7;
  char *v8;
  char *v9;
  unsigned __int8 v11[9];

  v1 = *(void **)(v0 + 504);
  v3 = *(_QWORD *)(v0 + 464);
  v2 = *(_QWORD *)(v0 + 472);
  v4 = *(_QWORD *)(v0 + 456);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 408);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5290);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A5BA9A0;
  *(_BYTE *)(inited + 32) = 2;
  *(_QWORD *)(inited + 64) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 40) = v4;
  *(_QWORD *)(inited + 48) = v3;
  v6 = v1;
  v7 = sub_20A469DA8(inited);
  v11[0] = 0;
  ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xE000000000000000, (char *)v1, v11, 0, v7, 0xD000000000000061, 0x800000020A5E2F00, 0xD00000000000002DLL, 0x800000020A5E30C0, 89);
  v9 = v8;
  swift_bridgeObjectRelease();

  sub_20A4F7508(v9, v2);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4F7508(char *a1, uint64_t a2)
{
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v11;

  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5290);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A5BA9A0;
  *(_BYTE *)(inited + 32) = 6;
  v6 = *(_QWORD *)(a2 + OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_conversationID);
  v5 = *(_QWORD *)(a2 + OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_conversationID + 8);
  *(_QWORD *)(inited + 64) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 40) = v6;
  *(_QWORD *)(inited + 48) = v5;
  swift_bridgeObjectRetain();
  v7 = sub_20A469DA8(inited);
  v11 = 0;
  ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000017, 0x800000020A5E3110, a1, &v11, 0, v7, 0xD000000000000061, 0x800000020A5E2F00, 0xD00000000000002DLL, 0x800000020A5E30C0, 78);
  v9 = v8;
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_20A4F7614(void *__src, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[58] = a3;
  v4[59] = v3;
  v4[56] = __src;
  v4[57] = a2;
  memcpy(v4 + 2, __src, 0x120uLL);
  return swift_task_switch();
}

uint64_t sub_20A4F7664()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  char *v8;
  char *v9;
  _QWORD v10[3];

  v1 = *(_QWORD *)(v0 + 464);
  if (v1)
  {
    v2 = *(const void **)(v0 + 448);
    v3 = *(_QWORD *)(v0 + 456);
    *(_QWORD *)(v0 + 440) = &type metadata for OTDRequest;
    v4 = swift_allocObject();
    *(_QWORD *)(v0 + 416) = v4;
    memcpy((void *)(v4 + 16), v2, 0x120uLL);
    v10[0] = v3;
    v10[1] = v1;
    swift_bridgeObjectRetain();
    sub_20A5B899C();
    *(_QWORD *)(v0 + 480) = v1;
    swift_bridgeObjectRetain();
    sub_20A47B9B0((_QWORD *)(v0 + 16));
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 488) = v5;
    *v5 = v0;
    v5[1] = sub_20A4F7814;
    return sub_20A4F7C80(v0 + 416, v3, v1, 0);
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 472);
    LOBYTE(v10[0]) = 11;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000037, 0x800000020A5E2FF0, 0, (unsigned __int8 *)v10, 0, 0, 0xD000000000000061, 0x800000020A5E2F00, 0xD00000000000001ELL, 0x800000020A5E3030, 108);
    v9 = v8;
    sub_20A4F7B74(v8, v7);

    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_20A4F7814(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v8;

  v8 = *v4;
  *(_QWORD *)(*v4 + 496) = v3;
  swift_task_dealloc();
  if (!v3)
  {
    sub_20A44BD90(a1, a2);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v8 + 416);
  }
  return swift_task_switch();
}

uint64_t sub_20A4F78C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v4;
  uint64_t v5;
  unint64_t v6;

  sub_20A47BD60(*(_QWORD *)(v0 + 472) + OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_logger, v0 + 376);
  v1 = *(_QWORD *)(v0 + 400);
  v2 = *(_QWORD *)(v0 + 408);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 376), v1);
  v4 = 7;
  v5 = 0;
  v6 = 0xE000000000000000;
  sub_20A5B8E94();
  sub_20A5B899C();
  swift_bridgeObjectRetain();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  (*(void (**)(char *, _QWORD, unint64_t, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v2 + 80))(&v4, 0, 0xE000000000000000, *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), 0, v1, v2);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 376);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4F7A2C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  id v6;
  unint64_t v7;
  char *v8;
  char *v9;
  unsigned __int8 v11[9];

  v1 = *(void **)(v0 + 496);
  v2 = *(_QWORD *)(v0 + 472);
  v4 = *(_QWORD *)(v0 + 456);
  v3 = *(_QWORD *)(v0 + 464);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 416);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5290);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A5BA9A0;
  *(_BYTE *)(inited + 32) = 2;
  *(_QWORD *)(inited + 64) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 40) = v4;
  *(_QWORD *)(inited + 48) = v3;
  v6 = v1;
  v7 = sub_20A469DA8(inited);
  v11[0] = 0;
  ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xE000000000000000, (char *)v1, v11, 0, v7, 0xD000000000000061, 0x800000020A5E2F00, 0xD00000000000001ELL, 0x800000020A5E3030, 114);
  v9 = v8;
  swift_bridgeObjectRelease();

  sub_20A4F7B74(v9, v2);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4F7B74(char *a1, uint64_t a2)
{
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v11;

  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5290);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A5BA9A0;
  *(_BYTE *)(inited + 32) = 6;
  v6 = *(_QWORD *)(a2 + OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_conversationID);
  v5 = *(_QWORD *)(a2 + OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_conversationID + 8);
  *(_QWORD *)(inited + 64) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 40) = v6;
  *(_QWORD *)(inited + 48) = v5;
  swift_bridgeObjectRetain();
  v7 = sub_20A469DA8(inited);
  v11 = 0;
  ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001BLL, 0x800000020A5E30A0, a1, &v11, 0, v7, 0xD000000000000061, 0x800000020A5E2F00, 0xD00000000000001ELL, 0x800000020A5E3030, 102);
  v9 = v8;
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_20A4F7C80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v5[200] = v4;
  v5[199] = a4;
  v5[198] = a3;
  v5[197] = a2;
  v5[196] = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB4980);
  v5[201] = swift_task_alloc();
  v6 = sub_20A5B84D4();
  v5[202] = v6;
  v5[203] = *(_QWORD *)(v6 - 8);
  v5[204] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A4F7D14()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  void *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  unint64_t v42;
  uint64_t v44;
  _QWORD *v45;
  unint64_t v46;
  unint64_t v47;

  v1 = *(_QWORD **)(v0 + 1568);
  v2 = (_QWORD *)(*(_QWORD *)(v0 + 1600) + OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_logger);
  v3 = v2[3];
  v4 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v3);
  sub_20A5B8E94();
  swift_bridgeObjectRelease();
  v46 = 0xD000000000000021;
  v47 = 0x800000020A5E2EB0;
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  *(_QWORD *)(v0 + 1560) = swift_getDynamicType();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB2C0);
  sub_20A5B8960();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  v5 = v46;
  LOBYTE(v46) = 17;
  (*(void (**)(unint64_t, unint64_t, unint64_t *, uint64_t, uint64_t))(v4 + 32))(v5, v47, &v46, v3, v4);
  swift_bridgeObjectRelease();
  sub_20A44FD78((uint64_t)v1, v0 + 1528);
  if (swift_dynamicCast())
  {
    v6 = *(_OWORD *)(v0 + 1056);
    *(_OWORD *)(v0 + 1472) = *(_OWORD *)(v0 + 1040);
    *(_OWORD *)(v0 + 1488) = v6;
    *(_OWORD *)(v0 + 1504) = *(_OWORD *)(v0 + 1072);
    v7 = *(_OWORD *)(v0 + 992);
    *(_OWORD *)(v0 + 1408) = *(_OWORD *)(v0 + 976);
    *(_OWORD *)(v0 + 1424) = v7;
    v8 = *(_OWORD *)(v0 + 1024);
    *(_OWORD *)(v0 + 1440) = *(_OWORD *)(v0 + 1008);
    *(_OWORD *)(v0 + 1456) = v8;
    v9 = *(_OWORD *)(v0 + 928);
    *(_OWORD *)(v0 + 1344) = *(_OWORD *)(v0 + 912);
    *(_OWORD *)(v0 + 1360) = v9;
    v10 = *(_OWORD *)(v0 + 960);
    *(_OWORD *)(v0 + 1376) = *(_OWORD *)(v0 + 944);
    *(_OWORD *)(v0 + 1392) = v10;
    v11 = *(_OWORD *)(v0 + 896);
    *(_OWORD *)(v0 + 1312) = *(_OWORD *)(v0 + 880);
    *(_BYTE *)(v0 + 1520) = *(_BYTE *)(v0 + 1088);
    *(_OWORD *)(v0 + 1328) = v11;
    sub_20A5B8288();
    swift_allocObject();
    sub_20A5B827C();
    v12 = *(_OWORD *)(v0 + 1488);
    *(_OWORD *)(v0 + 1256) = *(_OWORD *)(v0 + 1472);
    *(_OWORD *)(v0 + 1272) = v12;
    *(_OWORD *)(v0 + 1288) = *(_OWORD *)(v0 + 1504);
    *(_BYTE *)(v0 + 1304) = *(_BYTE *)(v0 + 1520);
    v13 = *(_OWORD *)(v0 + 1424);
    *(_OWORD *)(v0 + 1192) = *(_OWORD *)(v0 + 1408);
    *(_OWORD *)(v0 + 1208) = v13;
    v14 = *(_OWORD *)(v0 + 1456);
    *(_OWORD *)(v0 + 1224) = *(_OWORD *)(v0 + 1440);
    *(_OWORD *)(v0 + 1240) = v14;
    v15 = *(_OWORD *)(v0 + 1360);
    *(_OWORD *)(v0 + 1128) = *(_OWORD *)(v0 + 1344);
    *(_OWORD *)(v0 + 1144) = v15;
    v16 = *(_OWORD *)(v0 + 1392);
    *(_OWORD *)(v0 + 1160) = *(_OWORD *)(v0 + 1376);
    *(_OWORD *)(v0 + 1176) = v16;
    v17 = *(_OWORD *)(v0 + 1328);
    *(_OWORD *)(v0 + 1096) = *(_OWORD *)(v0 + 1312);
    *(_OWORD *)(v0 + 1112) = v17;
    sub_20A4FAC90();
    v18 = sub_20A5B8270();
    v20 = v19;
    swift_release();
    sub_20A4EF0EC((_QWORD *)(v0 + 1312));
  }
  else
  {
    if (!swift_dynamicCast())
    {
      v29 = *(_QWORD *)(v0 + 1584);
      v30 = *(_QWORD *)(v0 + 1576);
      v31 = *(_QWORD **)(v0 + 1568);
      v46 = 0;
      v47 = 0xE000000000000000;
      sub_20A5B8E94();
      swift_bridgeObjectRelease();
      v46 = 0xD000000000000015;
      v47 = 0x800000020A5E2EE0;
      __swift_project_boxed_opaque_existential_1(v31, v1[3]);
      swift_getDynamicType();
      sub_20A5B932C();
      sub_20A5B899C();
      swift_bridgeObjectRelease();
      v33 = v46;
      v32 = v47;
      LOBYTE(v46) = 79;
      __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5290);
      v34 = swift_allocObject();
      *(_OWORD *)(v34 + 16) = xmmword_20A5BA9A0;
      *(_BYTE *)(v34 + 32) = 2;
      *(_QWORD *)(v34 + 64) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v34 + 40) = v30;
      *(_QWORD *)(v34 + 48) = v29;
      swift_bridgeObjectRetain();
      v35 = sub_20A469DA8(v34);
      ODIError(_:fromError:code:forceCode:properties:file:function:line:)(v33, v32, 0, (unsigned __int8 *)&v46, 0, v35, 0xD000000000000061, 0x800000020A5E2F00, 0xD00000000000001CLL, 0x800000020A5E2F70, 133);
      v37 = v36;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_willThrow();
      v38 = *(_QWORD *)(v0 + 1584);
      v39 = *(_QWORD *)(v0 + 1576);
      __swift_destroy_boxed_opaque_existential_1(v0 + 1528);
      __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5290);
      v40 = swift_allocObject();
      *(_OWORD *)(v40 + 16) = xmmword_20A5BA9A0;
      *(_BYTE *)(v40 + 32) = 2;
      *(_QWORD *)(v40 + 64) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v40 + 40) = v39;
      *(_QWORD *)(v40 + 48) = v38;
      swift_bridgeObjectRetain();
      v41 = v37;
      v42 = sub_20A469DA8(v40);
      LOBYTE(v46) = 0;
      ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001BLL, 0x800000020A5E2F90, (char *)v37, (unsigned __int8 *)&v46, 0, v42, 0xD000000000000061, 0x800000020A5E2F00, 0xD00000000000001CLL, 0x800000020A5E2F70, 136);
      swift_bridgeObjectRelease();

      swift_willThrow();
      goto LABEL_8;
    }
    memcpy((void *)(v0 + 16), (const void *)(v0 + 592), 0x120uLL);
    sub_20A5B8288();
    swift_allocObject();
    sub_20A5B827C();
    memcpy((void *)(v0 + 304), (const void *)(v0 + 16), 0x120uLL);
    sub_20A4FAC4C();
    v18 = sub_20A5B8270();
    v20 = v21;
    swift_release();
    sub_20A4EF1D8((_QWORD *)(v0 + 16));
  }
  v22 = *(_QWORD *)(v0 + 1624);
  v23 = *(_QWORD *)(v0 + 1616);
  v24 = *(_QWORD *)(v0 + 1608);
  *(_QWORD *)(v0 + 1640) = v20;
  *(_QWORD *)(v0 + 1648) = v18;
  __swift_destroy_boxed_opaque_existential_1(v0 + 1528);
  sub_20A5B84A4();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v24, 1, v23) == 1)
  {
    v25 = *(_QWORD *)(v0 + 1584);
    v26 = *(_QWORD *)(v0 + 1576);
    sub_20A44CE2C(*(_QWORD *)(v0 + 1608), (uint64_t *)&unk_253EB4980);
    LOBYTE(v46) = 79;
    __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5290);
    v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_20A5BA9A0;
    *(_BYTE *)(v27 + 32) = 2;
    *(_QWORD *)(v27 + 64) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v27 + 40) = v26;
    *(_QWORD *)(v27 + 48) = v25;
    swift_bridgeObjectRetain();
    v28 = sub_20A469DA8(v27);
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000013, 0x800000020A5E2FB0, 0, (unsigned __int8 *)&v46, 0, v28, 0xD000000000000061, 0x800000020A5E2F00, 0xD00000000000001CLL, 0x800000020A5E2F70, 140);
    swift_bridgeObjectRelease();
    swift_willThrow();
    sub_20A44BD90(v18, v20);
LABEL_8:
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v44 = *(_QWORD *)(v0 + 1600);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 1624) + 32))(*(_QWORD *)(v0 + 1632), *(_QWORD *)(v0 + 1608), *(_QWORD *)(v0 + 1616));
  *(_QWORD *)(v0 + 1656) = *(_QWORD *)(v44 + OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_httpSession);
  sub_20A45964C(v18, v20);
  v45 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 1664) = v45;
  *v45 = v0;
  v45[1] = sub_20A4F8454;
  return sub_20A4A58E4(*(_QWORD *)(v0 + 1632), *(_QWORD *)(v0 + 1592), 0, 0);
}

uint64_t sub_20A4F8454(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 1672) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A4F84B0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  _QWORD *v8;

  v1 = *(void **)(v0 + 1672);
  v2 = *(_QWORD *)(v0 + 1648);
  v3 = *(_QWORD *)(v0 + 1640);
  v4 = (void *)sub_20A5B88F4();
  objc_msgSend(v1, sel_setHTTPMethod_, v4);

  v5 = (void *)sub_20A5B88F4();
  v6 = (void *)sub_20A5B88F4();
  objc_msgSend(v1, sel_setValue_forHTTPHeaderField_, v5, v6);

  sub_20A45964C(v2, v3);
  v7 = (void *)sub_20A5B8540();
  objc_msgSend(v1, sel_setHTTPBody_, v7);

  sub_20A44BD90(v2, v3);
  sub_20A44BD90(v2, v3);
  *(_BYTE *)(v0 + 1089) = 14;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 1680) = v8;
  *v8 = v0;
  v8[1] = sub_20A4F8618;
  return sub_20A4A6978(*(_QWORD *)(v0 + 1672), 0, 0, (_BYTE *)(v0 + 1089));
}

uint64_t sub_20A4F8618(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v10;

  v10 = *v5;
  *(_QWORD *)(*v5 + 1688) = v4;
  swift_task_dealloc();
  if (!v4)
  {
    *(_BYTE *)(v10 + 1090) = a4 & 1;
    *(_QWORD *)(v10 + 1696) = a3;
    *(_QWORD *)(v10 + 1704) = a2;
    *(_QWORD *)(v10 + 1712) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_20A4F86B0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 1648);
  v2 = *(_QWORD *)(v0 + 1640);
  v3 = *(_QWORD *)(v0 + 1632);
  v4 = *(_QWORD *)(v0 + 1624);
  v5 = *(_QWORD *)(v0 + 1616);

  sub_20A44BD90(v1, v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 1712), *(_QWORD *)(v0 + 1704), *(_QWORD *)(v0 + 1696), *(unsigned __int8 *)(v0 + 1090));
}

uint64_t sub_20A4F8748()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 1648);
  v2 = *(_QWORD *)(v0 + 1640);
  v3 = *(_QWORD *)(v0 + 1632);
  v4 = *(_QWORD *)(v0 + 1624);
  v5 = *(_QWORD *)(v0 + 1616);

  sub_20A44BD90(v1, v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4F87D4()
{
  return sub_20A4FABA4();
}

id sub_20A4F87E8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DIPAssessmentWebService();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for DIPAssessmentWebService()
{
  return objc_opt_self();
}

uint64_t sub_20A4F884C(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v3 + 402) = a2;
  *(_QWORD *)(v3 + 216) = a1;
  *(_QWORD *)(v3 + 224) = v2;
  *(_QWORD *)(v3 + 232) = swift_getObjectType();
  v4 = sub_20A5B8240();
  *(_QWORD *)(v3 + 240) = v4;
  *(_QWORD *)(v3 + 248) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v3 + 256) = swift_task_alloc();
  *(_QWORD *)(v3 + 264) = type metadata accessor for ODISignpost();
  *(_QWORD *)(v3 + 272) = swift_task_alloc();
  *(_QWORD *)(v3 + 280) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB4980);
  *(_QWORD *)(v3 + 288) = swift_task_alloc();
  v5 = sub_20A5B84D4();
  *(_QWORD *)(v3 + 296) = v5;
  *(_QWORD *)(v3 + 304) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v3 + 312) = swift_task_alloc();
  *(_QWORD *)(v3 + 320) = swift_task_alloc();
  *(_QWORD *)(v3 + 328) = swift_task_alloc();
  return swift_task_switch();
}

void sub_20A4F8958()
{
  uint64_t v0;
  _QWORD *v1;

  *(_BYTE *)(v0 + 400) = *(_BYTE *)(*(_QWORD *)(v0 + 224)
                                  + OBJC_IVAR____TtC17CoreODIEssentials29DIPAssessmentStaticWebService_serverRepo);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 336) = v1;
  *v1 = v0;
  v1[1] = sub_20A4F89C0;
  sub_20A4F9820(*(_QWORD *)(v0 + 320), v0 + 400);
}

uint64_t sub_20A4F89C0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A4F8A14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  void *v17;
  int v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  void *v25;
  _QWORD *v26;
  unsigned __int8 v27[9];

  v1 = *(_QWORD *)(v0 + 320);
  v2 = *(_QWORD *)(v0 + 296);
  v3 = *(_QWORD *)(v0 + 304);
  v4 = *(_QWORD *)(v0 + 288);
  sub_20A5B8480();
  v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  *(_QWORD *)(v0 + 344) = v5;
  v5(v1, v2);
  sub_20A4F9C90(v4);
  v6 = *(_QWORD *)(v0 + 296);
  v7 = *(_QWORD *)(v0 + 304);
  v8 = *(_QWORD *)(v0 + 288);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(v8, 0, 1, v6);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v8, 1, v6) == 1)
  {
    v9 = *(_QWORD *)(v0 + 224);
    sub_20A44CE2C(*(_QWORD *)(v0 + 288), (uint64_t *)&unk_253EB4980);
    v27[0] = 79;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000002ALL, 0x800000020A5E3130, 0, v27, 0, 0, 0xD000000000000061, 0x800000020A5E2F00, 0xD00000000000002BLL, 0x800000020A5E3160, 199);
    v11 = v10;
    sub_20A4F9714(v10, v9);

    swift_willThrow();
    (*(void (**)(_QWORD, _QWORD))(v0 + 344))(*(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 296));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 304) + 32))(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 296));
    if (qword_253EB4F80 != -1)
      swift_once();
    v13 = *(_QWORD *)(v0 + 272);
    v15 = qword_253EBC848;
    v14 = unk_253EBC850;
    v16 = byte_253EBC858;
    v17 = (void *)qword_253EBC860;
    v18 = byte_253EBC868;
    *(_QWORD *)(v13 + 32) = "enableTelemetry=YES";
    *(_QWORD *)(v13 + 40) = 19;
    *(_BYTE *)(v13 + 48) = 2;
    *(_QWORD *)v13 = v15;
    *(_QWORD *)(v13 + 8) = v14;
    *(_BYTE *)(v13 + 16) = v16;
    *(_QWORD *)(v13 + 24) = v17;
    v19 = v17;
    sub_20A5B87D4();
    sub_20A5B8CFC();
    if (v18 == 1)
      sub_20A5B87BC();
    else
      sub_20A5B87C8();
    v21 = *(_QWORD *)(v0 + 272);
    v20 = *(_QWORD *)(v0 + 280);

    sub_20A4595B4(v21, v20);
    v22 = objc_allocWithZone(MEMORY[0x24BDD16B0]);
    v23 = (void *)sub_20A5B8474();
    v24 = objc_msgSend(v22, sel_initWithURL_, v23);
    *(_QWORD *)(v0 + 352) = v24;

    objc_msgSend(v24, sel_setCachePolicy_, 1);
    v25 = (void *)sub_20A5B88F4();
    objc_msgSend(v24, sel_setHTTPMethod_, v25);

    *(_BYTE *)(v0 + 401) = 1;
    v26 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 360) = v26;
    *v26 = v0;
    v26[1] = sub_20A4F8E18;
    return sub_20A4A6978((uint64_t)v24, *(_BYTE *)(v0 + 402), 0, (_BYTE *)(v0 + 401));
  }
}

uint64_t sub_20A4F8E18(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;

  v6 = *v5;
  *(_QWORD *)(v6 + 368) = a1;
  *(_QWORD *)(v6 + 376) = a2;
  *(_BYTE *)(v6 + 403) = a4;
  *(_QWORD *)(v6 + 384) = a3;
  *(_QWORD *)(v6 + 392) = v4;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A4F8E8C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  unint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t inited;
  uint64_t *boxed_opaque_existential_0;
  id v17;
  unint64_t v18;
  char *v19;
  char *v20;
  void *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  unint64_t v42;
  void *v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  uint64_t v46;
  void *v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t);
  uint64_t v52;
  char v53;
  _QWORD v54[4];

  v1 = *(void **)(v0 + 384);
  v2 = *(void **)(v0 + 392);
  v4 = *(_QWORD *)(v0 + 368);
  v3 = *(_QWORD *)(v0 + 376);
  sub_20A5B8264();
  swift_allocObject();
  sub_20A45964C(v4, v3);
  v5 = v1;
  sub_20A5B8258();
  sub_20A4FAE10();
  sub_20A5B824C();
  v6 = v2;
  v7 = *(unsigned __int8 *)(v0 + 403);
  if (v6)
  {

    swift_release();
    if (v7)
    {
      if (qword_253EB4A50 != -1)
        swift_once();
      objc_msgSend((id)qword_253EBC810, sel_removeCachedResponseForRequest_, *(_QWORD *)(v0 + 352));
    }
    v8 = *(_QWORD *)(v0 + 376);
    v9 = *(_QWORD *)(v0 + 368);
    v47 = *(void **)(v0 + 384);
    v48 = *(void **)(v0 + 352);
    v10 = *(_QWORD *)(v0 + 328);
    v11 = *(_QWORD *)(v0 + 304);
    v49 = *(_QWORD *)(v0 + 312);
    v51 = *(void (**)(uint64_t, uint64_t))(v0 + 344);
    v12 = *(_QWORD *)(v0 + 296);
    v13 = *(_QWORD *)(v0 + 280);
    v14 = *(_QWORD *)(v0 + 224);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5290);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_20A5BA9A0;
    *(_BYTE *)(inited + 32) = 2;
    *(_QWORD *)(inited + 64) = v12;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 40));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v11 + 16))(boxed_opaque_existential_0, v10, v12);
    v17 = v6;
    v18 = sub_20A469DA8(inited);
    LOBYTE(v54[0]) = 0;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xE000000000000000, (char *)v6, (unsigned __int8 *)v54, 0, v18, 0xD000000000000061, 0x800000020A5E2F00, 0xD00000000000002BLL, 0x800000020A5E3160, 233);
    v20 = v19;
    swift_bridgeObjectRelease();

    sub_20A4F9714(v20, v14);
    swift_willThrow();

    sub_20A44BD90(v9, v8);
    sub_20A44BD90(v9, v8);
    sub_20A5B8CF0();
    sub_20A5B87C8();
    sub_20A4595F8(v13);
    v51(v49, v12);
    (*(void (**)(_QWORD, _QWORD))(v0 + 344))(*(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 296));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    swift_release();
    v50 = *(_QWORD *)(v0 + 208);
    v52 = *(_QWORD *)(v0 + 200);
    if ((v7 & 1) != 0)
    {

    }
    else
    {
      if (qword_253EB4A50 != -1)
        swift_once();
      v23 = *(_QWORD *)(v0 + 376);
      v22 = *(void **)(v0 + 384);
      v24 = *(_QWORD *)(v0 + 368);
      v26 = *(_QWORD *)(v0 + 248);
      v25 = *(_QWORD *)(v0 + 256);
      v27 = *(_QWORD *)(v0 + 240);
      v28 = (void *)qword_253EBC810;
      sub_20A5B8204();
      v29 = objc_allocWithZone(MEMORY[0x24BDD1498]);
      sub_20A45964C(v24, v23);
      v30 = v22;
      v31 = (void *)sub_20A5B8540();
      v32 = objc_msgSend(v29, sel_initWithResponse_data_, v30, v31);
      sub_20A44BD90(v24, v23);

      v33 = (void *)sub_20A5B81EC();
      objc_msgSend(v28, sel_storeCachedResponse_forRequest_, v32, v33);

      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
    }
    v40 = *(void **)(v0 + 384);
    v41 = *(_QWORD *)(v0 + 368);
    v42 = *(_QWORD *)(v0 + 376);
    v43 = *(void **)(v0 + 352);
    v45 = *(void (**)(uint64_t, uint64_t))(v0 + 344);
    v46 = *(_QWORD *)(v0 + 328);
    v34 = *(_QWORD *)(v0 + 312);
    v35 = *(_QWORD *)(v0 + 280);
    v44 = *(_QWORD *)(v0 + 296);
    sub_20A47BD60(*(_QWORD *)(v0 + 224) + OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_logger, v0 + 160);
    v36 = *(_QWORD *)(v0 + 184);
    v37 = *(_QWORD *)(v0 + 192);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 160), v36);
    v53 = 9;
    sub_20A5B8E94();
    swift_bridgeObjectRelease();
    v54[0] = 0xD00000000000001FLL;
    v54[1] = 0x800000020A5E3190;
    swift_bridgeObjectRetain();
    sub_20A5B899C();
    swift_bridgeObjectRelease();
    sub_20A5B899C();
    sub_20A5B899C();
    swift_bridgeObjectRelease();
    sub_20A5B899C();
    v38 = sub_20A5B842C();
    (*(void (**)(char *, unint64_t, unint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 80))(&v53, 0xD00000000000001FLL, 0x800000020A5E3190, v38, v39, 0, v36, v37);

    sub_20A44BD90(v41, v42);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_20A44BD90(v41, v42);
    __swift_destroy_boxed_opaque_existential_1(v0 + 160);
    sub_20A5B8CF0();
    sub_20A5B87C8();
    sub_20A4595F8(v35);
    v45(v34, v44);
    v45(v46, v44);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v52, v50);
  }
}

uint64_t sub_20A4F951C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t *boxed_opaque_existential_0;
  id v10;
  unint64_t v11;
  char *v12;
  char *v13;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  unsigned __int8 v17[9];

  v1 = *(void **)(v0 + 392);
  v2 = *(void **)(v0 + 352);
  v3 = *(_QWORD *)(v0 + 328);
  v4 = *(_QWORD *)(v0 + 304);
  v15 = *(_QWORD *)(v0 + 312);
  v16 = *(void (**)(uint64_t, uint64_t))(v0 + 344);
  v5 = *(_QWORD *)(v0 + 296);
  v6 = *(_QWORD *)(v0 + 280);
  v7 = *(_QWORD *)(v0 + 224);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5290);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A5BA9A0;
  *(_BYTE *)(inited + 32) = 2;
  *(_QWORD *)(inited + 64) = v5;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 40));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v4 + 16))(boxed_opaque_existential_0, v3, v5);
  v10 = v1;
  v11 = sub_20A469DA8(inited);
  v17[0] = 0;
  ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xE000000000000000, (char *)v1, v17, 0, v11, 0xD000000000000061, 0x800000020A5E2F00, 0xD00000000000002BLL, 0x800000020A5E3160, 212);
  v13 = v12;
  swift_bridgeObjectRelease();

  sub_20A4F9714(v13, v7);
  swift_willThrow();

  sub_20A5B8CF0();
  sub_20A5B87C8();
  sub_20A4595F8(v6);
  v16(v15, v5);
  (*(void (**)(_QWORD, _QWORD))(v0 + 344))(*(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 296));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4F9714(char *a1, uint64_t a2)
{
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v11;

  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5290);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A5BA9A0;
  *(_BYTE *)(inited + 32) = 6;
  v6 = *(_QWORD *)(a2 + OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_conversationID);
  v5 = *(_QWORD *)(a2 + OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_conversationID + 8);
  *(_QWORD *)(inited + 64) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 40) = v6;
  *(_QWORD *)(inited + 48) = v5;
  swift_bridgeObjectRetain();
  v7 = sub_20A469DA8(inited);
  v11 = 0;
  ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000012, 0x800000020A5E3230, a1, &v11, 0, v7, 0xD000000000000061, 0x800000020A5E2F00, 0xD00000000000002BLL, 0x800000020A5E3160, 193);
  v9 = v8;
  swift_bridgeObjectRelease();
  return v9;
}

void sub_20A4F9820(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_20A4F9854()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_20A4597C0;
  return sub_20A47FE54(v0, 4, 0xD00000000000001BLL, 0x800000020A5E3210);
}

uint64_t sub_20A4F9B28()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_20A4F9B70()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_20A4F9BB8()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_20A4F9C00()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_20A4F9C48()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_20A4F9C90@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  unsigned __int8 v20;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB4980);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB4970);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_20A5B8318();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5B82DC();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_20A44CE2C((uint64_t)v9, (uint64_t *)&unk_253EB4970);
    v20 = 79;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000020, 0x800000020A5E31B0, 0, &v20, 0, 0, 0xD000000000000061, 0x800000020A5E2F00, 0xD000000000000023, 0x800000020A5E31E0, 331);
    return swift_willThrow();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v9, v10);
    sub_20A519678();
    sub_20A5B82D0();
    sub_20A5B82E8();
    v16 = sub_20A5B84D4();
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v5, 1, v16) == 1)
    {
      sub_20A44CE2C((uint64_t)v5, (uint64_t *)&unk_253EB4980);
      v19 = 79;
      ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000002ALL, 0x800000020A5E3130, 0, &v19, 0, 0, 0xD000000000000061, 0x800000020A5E2F00, 0xD000000000000023, 0x800000020A5E31E0, 335);
      swift_willThrow();
      return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v17 + 32))(a1, v5, v16);
    }
  }
}

uint64_t sub_20A4F9F5C(char a1, _BYTE *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v3 + 288) = v2;
  *(_BYTE *)(v3 + 426) = a1;
  *(_QWORD *)(v3 + 296) = swift_getObjectType();
  v5 = sub_20A5B8240();
  *(_QWORD *)(v3 + 304) = v5;
  *(_QWORD *)(v3 + 312) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v3 + 320) = swift_task_alloc();
  v6 = sub_20A5B84D4();
  *(_QWORD *)(v3 + 328) = v6;
  *(_QWORD *)(v3 + 336) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v3 + 344) = swift_task_alloc();
  *(_QWORD *)(v3 + 352) = swift_task_alloc();
  *(_BYTE *)(v3 + 427) = *a2;
  return swift_task_switch();
}

void sub_20A4FA010()
{
  uint64_t v0;
  _QWORD *v1;

  *(_BYTE *)(v0 + 425) = *(_BYTE *)(*(_QWORD *)(v0 + 288)
                                  + OBJC_IVAR____TtC17CoreODIEssentials29DIPAssessmentStaticWebService_serverRepo);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 360) = v1;
  *v1 = v0;
  v1[1] = sub_20A4FA078;
  sub_20A4F9820(*(_QWORD *)(v0 + 344), v0 + 425);
}

uint64_t sub_20A4FA078()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A4FA0CC()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  id v6;
  void *v7;
  id v8;
  void *v9;
  _QWORD *v10;

  v1 = *(_BYTE *)(v0 + 427);
  v2 = *(_QWORD *)(v0 + 344);
  v3 = *(_QWORD *)(v0 + 328);
  v4 = *(_QWORD *)(v0 + 336);
  sub_20A5B8480();
  v5 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  *(_QWORD *)(v0 + 368) = v5;
  v5(v2, v3);
  v6 = objc_allocWithZone(MEMORY[0x24BDD16B0]);
  v7 = (void *)sub_20A5B8474();
  v8 = objc_msgSend(v6, sel_initWithURL_, v7);
  *(_QWORD *)(v0 + 376) = v8;

  objc_msgSend(v8, sel_setCachePolicy_, 1);
  v9 = (void *)sub_20A5B88F4();
  objc_msgSend(v8, sel_setHTTPMethod_, v9);

  *(_BYTE *)(v0 + 424) = v1;
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 384) = v10;
  *v10 = v0;
  v10[1] = sub_20A4FA208;
  return sub_20A4A6978((uint64_t)v8, *(_BYTE *)(v0 + 426), 0, (_BYTE *)(v0 + 424));
}

uint64_t sub_20A4FA208(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;

  v6 = *v5;
  *(_QWORD *)(v6 + 392) = a1;
  *(_QWORD *)(v6 + 400) = a2;
  *(_BYTE *)(v6 + 428) = a4;
  *(_QWORD *)(v6 + 408) = a3;
  *(_QWORD *)(v6 + 416) = v4;
  swift_task_dealloc();
  return swift_task_switch();
}

void sub_20A4FA27C()
{
  __asm { BR              X10 }
}

uint64_t sub_20A4FA2CC()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  int v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  id v18;
  unint64_t v19;
  char *v20;
  char *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t inited;
  uint64_t *boxed_opaque_existential_0;
  unint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  void *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  id v43;
  void *v44;
  id v45;
  void *v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  void *v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t);
  uint64_t v54;
  void *v55;
  uint64_t v56;

  if ((v0 & 0xFF000000000000) == 0)
  {
    sub_20A44BD90(*(_QWORD *)(v1 + 392), v0);
    v4 = *(_QWORD *)(v1 + 392);
    v3 = *(_QWORD *)(v1 + 400);
    v22 = *(void **)(v1 + 408);
    v23 = *(void **)(v1 + 376);
    v24 = *(_QWORD *)(v1 + 352);
    v25 = *(_QWORD *)(v1 + 328);
    v26 = *(_QWORD *)(v1 + 336);
    v27 = *(_QWORD *)(v1 + 288);
    *(_BYTE *)(v2 - 96) = 12;
    __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5290);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_20A5BA9A0;
    *(_BYTE *)(inited + 32) = 2;
    *(_QWORD *)(inited + 64) = v25;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 40));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v26 + 16))(boxed_opaque_existential_0, v24, v25);
    v30 = sub_20A469DA8(inited);
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001BLL, 0x800000020A5E32A0, 0, (unsigned __int8 *)(v2 - 96), 0, v30, 0xD000000000000061, 0x800000020A5E2F00, 0xD00000000000002BLL, 0x800000020A5E3250, 270);
    v32 = v31;
    swift_bridgeObjectRelease();
    sub_20A4FAA80(v32, v27);
    swift_willThrow();

    v33 = v4;
LABEL_9:
    sub_20A44BD90(v33, v3);
    (*(void (**)(_QWORD, _QWORD))(v1 + 368))(*(_QWORD *)(v1 + 352), *(_QWORD *)(v1 + 328));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
  v6 = *(void **)(v1 + 408);
  v5 = *(void **)(v1 + 416);
  sub_20A5B8264();
  swift_allocObject();
  v7 = v6;
  sub_20A5B8258();
  sub_20A4FAE54();
  sub_20A5B824C();
  v8 = *(unsigned __int8 *)(v1 + 428);
  if (v5)
  {
    v9 = v5;

    swift_release();
    if (v8)
    {
      if (qword_253EB4A50 != -1)
        swift_once();
      objc_msgSend((id)qword_253EBC810, sel_removeCachedResponseForRequest_, *(_QWORD *)(v1 + 376));
    }
    v3 = *(_QWORD *)(v1 + 400);
    v55 = *(void **)(v1 + 408);
    v10 = *(_QWORD *)(v1 + 392);
    v11 = *(void **)(v1 + 376);
    v12 = *(_QWORD *)(v1 + 352);
    v13 = *(_QWORD *)(v1 + 328);
    v14 = *(_QWORD *)(v1 + 336);
    v15 = *(_QWORD *)(v1 + 288);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5290);
    v16 = swift_initStackObject();
    *(_OWORD *)(v16 + 16) = xmmword_20A5BA9A0;
    *(_BYTE *)(v16 + 32) = 2;
    *(_QWORD *)(v16 + 64) = v13;
    v17 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v16 + 40));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v14 + 16))(v17, v12, v13);
    v18 = v9;
    v19 = sub_20A469DA8(v16);
    *(_BYTE *)(v2 - 96) = 0;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xE000000000000000, (char *)v9, (unsigned __int8 *)(v2 - 96), 0, v19, 0xD000000000000061, 0x800000020A5E2F00, 0xD00000000000002BLL, 0x800000020A5E3250, 288);
    v21 = v20;
    swift_bridgeObjectRelease();

    sub_20A4FAA80(v21, v15);
    swift_willThrow();

    sub_20A44BD90(v10, v3);
    v33 = v10;
    goto LABEL_9;
  }
  swift_release();
  v54 = *(_QWORD *)(v1 + 280);
  v56 = *(_QWORD *)(v1 + 272);
  if ((v8 & 1) != 0)
  {

  }
  else
  {
    if (qword_253EB4A50 != -1)
      swift_once();
    v36 = *(_QWORD *)(v1 + 400);
    v35 = *(void **)(v1 + 408);
    v37 = *(_QWORD *)(v1 + 392);
    v39 = *(_QWORD *)(v1 + 312);
    v38 = *(_QWORD *)(v1 + 320);
    v40 = *(_QWORD *)(v1 + 304);
    v41 = (void *)qword_253EBC810;
    sub_20A5B8204();
    v42 = objc_allocWithZone(MEMORY[0x24BDD1498]);
    sub_20A45964C(v37, v36);
    v43 = v35;
    v44 = (void *)sub_20A5B8540();
    v45 = objc_msgSend(v42, sel_initWithResponse_data_, v43, v44);
    sub_20A44BD90(v37, v36);

    v46 = (void *)sub_20A5B81EC();
    objc_msgSend(v41, sel_storeCachedResponse_forRequest_, v45, v46);

    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v40);
  }
  v47 = *(_QWORD *)(v1 + 400);
  v48 = *(_QWORD *)(v1 + 392);
  v50 = *(void **)(v1 + 376);
  v51 = *(void **)(v1 + 408);
  v49 = *(_QWORD *)(v1 + 352);
  v53 = *(void (**)(uint64_t, uint64_t))(v1 + 368);
  v52 = *(_QWORD *)(v1 + 328);
  sub_20A47BD60(*(_QWORD *)(v1 + 288) + OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_logger, v1 + 232);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 232), *(_QWORD *)(v1 + 256));
  *(_BYTE *)(v2 - 97) = 10;
  *(_QWORD *)(v2 - 96) = 0;
  *(_QWORD *)(v2 - 88) = 0xE000000000000000;
  sub_20A5B8E94();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 - 96) = 0xD000000000000011;
  *(_QWORD *)(v2 - 88) = 0x800000020A5E3280;
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  Loggable.milestone(tag:description:value:isSensitive:)((CoreODIEssentials::MilestoneTag)(v2 - 97), *(Swift::String *)(v2 - 96), (Swift::String_optional)0, 0);
  swift_bridgeObjectRelease();

  sub_20A44BD90(v48, v47);
  sub_20A44BD90(v48, v47);
  v53(v49, v52);
  __swift_destroy_boxed_opaque_existential_1(v1 + 232);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v56, v54);
}

uint64_t sub_20A4FA904()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t inited;
  uint64_t *boxed_opaque_existential_0;
  id v9;
  unint64_t v10;
  char *v11;
  char *v12;
  unsigned __int8 v14[9];

  v1 = *(void **)(v0 + 416);
  v2 = *(void **)(v0 + 376);
  v3 = *(_QWORD *)(v0 + 352);
  v4 = *(_QWORD *)(v0 + 328);
  v5 = *(_QWORD *)(v0 + 336);
  v6 = *(_QWORD *)(v0 + 288);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5290);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A5BA9A0;
  *(_BYTE *)(inited + 32) = 2;
  *(_QWORD *)(inited + 64) = v4;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 40));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v5 + 16))(boxed_opaque_existential_0, v3, v4);
  v9 = v1;
  v10 = sub_20A469DA8(inited);
  v14[0] = 0;
  ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xE000000000000000, (char *)v1, v14, 0, v10, 0xD000000000000061, 0x800000020A5E2F00, 0xD00000000000002BLL, 0x800000020A5E3250, 266);
  v12 = v11;
  swift_bridgeObjectRelease();

  sub_20A4FAA80(v12, v6);
  swift_willThrow();

  (*(void (**)(_QWORD, _QWORD))(v0 + 368))(*(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 328));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A4FAA80(char *a1, uint64_t a2)
{
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v11;

  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5290);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A5BA9A0;
  *(_BYTE *)(inited + 32) = 6;
  v6 = *(_QWORD *)(a2 + OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_conversationID);
  v5 = *(_QWORD *)(a2 + OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_conversationID + 8);
  *(_QWORD *)(inited + 64) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 40) = v6;
  *(_QWORD *)(inited + 48) = v5;
  swift_bridgeObjectRetain();
  v7 = sub_20A469DA8(inited);
  v11 = 0;
  ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0x2073747320746567, 0xEE0064656C696166, a1, &v11, 0, v7, 0xD000000000000061, 0x800000020A5E2F00, 0xD00000000000002BLL, 0x800000020A5E3250, 254);
  v9 = v8;
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_20A4FAB90()
{
  return sub_20A4FABA4();
}

uint64_t sub_20A4FABA4()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_20A4FABF0()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for DIPAssessmentStaticWebService()
{
  return objc_opt_self();
}

unint64_t sub_20A4FAC4C()
{
  unint64_t result;

  result = qword_2545FB2C8;
  if (!qword_2545FB2C8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C6A94, &type metadata for OTDRequest);
    atomic_store(result, (unint64_t *)&qword_2545FB2C8);
  }
  return result;
}

unint64_t sub_20A4FAC90()
{
  unint64_t result;

  result = qword_2545FB2D0;
  if (!qword_2545FB2D0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C6ABC, &type metadata for ORDRequest);
    atomic_store(result, &qword_2545FB2D0);
  }
  return result;
}

uint64_t sub_20A4FACD4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 48))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (*(_QWORD *)(v0 + 208) != 1)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_20A4FAD5C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 56))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 176) != 1)
    swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t *__swift_allocate_boxed_opaque_existential_0(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

unint64_t sub_20A4FAE10()
{
  unint64_t result;

  result = qword_253EB4FA0;
  if (!qword_253EB4FA0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C7944, &type metadata for GetProfileResponse);
    atomic_store(result, (unint64_t *)&qword_253EB4FA0);
  }
  return result;
}

unint64_t sub_20A4FAE54()
{
  unint64_t result;

  result = qword_253EB4ED8;
  if (!qword_253EB4ED8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C791C, &type metadata for GetSTSResponse);
    atomic_store(result, (unint64_t *)&qword_253EB4ED8);
  }
  return result;
}

void ODISignpost.init(_:)(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  void *v5;
  int v6;
  id v7;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_BYTE *)a1 + 16);
  v5 = (void *)a1[3];
  v6 = *((unsigned __int8 *)a1 + 32);
  *(_QWORD *)(a2 + 32) = "enableTelemetry=YES";
  *(_QWORD *)(a2 + 40) = 19;
  *(_BYTE *)(a2 + 48) = 2;
  *(_QWORD *)a2 = v2;
  *(_QWORD *)(a2 + 8) = v3;
  *(_BYTE *)(a2 + 16) = v4;
  *(_QWORD *)(a2 + 24) = v5;
  type metadata accessor for ODISignpost();
  v7 = v5;
  sub_20A5B87D4();
  sub_20A5B8CFC();
  if (v6 == 1)
    sub_20A5B87BC();
  else
    sub_20A5B87C8();

}

uint64_t type metadata accessor for ODISignpost()
{
  uint64_t result;

  result = qword_253EB4A58;
  if (!qword_253EB4A58)
    return swift_getSingletonMetadata();
  return result;
}

Swift::Void __swiftcall ODISignpost.end(workflowID:isBackground:)(Swift::String_optional workflowID, Swift::Bool_optional isBackground)
{
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v4;
  Swift::Bool value;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (workflowID.value._object)
  {
    object = workflowID.value._object;
    countAndFlagsBits = workflowID.value._countAndFlagsBits;
    if (isBackground.value == 2)
    {
      swift_bridgeObjectRetain();
      sub_20A5B8CF0();
      type metadata accessor for ODISignpost();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52C0);
      v4 = swift_allocObject();
      *(_OWORD *)(v4 + 16) = xmmword_20A5BA9A0;
      *(_QWORD *)(v4 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v4 + 64) = sub_20A450420();
      *(_QWORD *)(v4 + 32) = countAndFlagsBits;
      *(_QWORD *)(v4 + 40) = object;
    }
    else
    {
      value = isBackground.value;
      swift_bridgeObjectRetain();
      sub_20A5B8CF0();
      type metadata accessor for ODISignpost();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52C0);
      v6 = swift_allocObject();
      *(_OWORD *)(v6 + 16) = xmmword_20A5BA9B0;
      *(_QWORD *)(v6 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v6 + 64) = sub_20A450420();
      v7 = MEMORY[0x24BEE1328];
      *(_QWORD *)(v6 + 32) = countAndFlagsBits;
      *(_QWORD *)(v6 + 40) = object;
      v8 = MEMORY[0x24BEE1360];
      *(_QWORD *)(v6 + 96) = v7;
      *(_QWORD *)(v6 + 104) = v8;
      *(_BYTE *)(v6 + 72) = value;
    }
    sub_20A5B87BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_20A5B8CF0();
    type metadata accessor for ODISignpost();
    sub_20A5B87C8();
  }
}

Swift::Void __swiftcall ODISignpost.end(success:customResultString:)(Swift::Bool success, Swift::String_optional customResultString)
{
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (customResultString.value._object)
  {
    object = customResultString.value._object;
    countAndFlagsBits = customResultString.value._countAndFlagsBits;
    swift_bridgeObjectRetain();
    sub_20A5B8CF0();
    type metadata accessor for ODISignpost();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52C0);
    v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_20A5BA9B0;
    v6 = MEMORY[0x24BEE1360];
    *(_QWORD *)(v5 + 56) = MEMORY[0x24BEE1328];
    *(_QWORD *)(v5 + 64) = v6;
    *(_BYTE *)(v5 + 32) = success;
    *(_QWORD *)(v5 + 96) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v5 + 104) = sub_20A450420();
    *(_QWORD *)(v5 + 72) = countAndFlagsBits;
    *(_QWORD *)(v5 + 80) = object;
  }
  else
  {
    sub_20A5B8CF0();
    type metadata accessor for ODISignpost();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52C0);
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_20A5BA9A0;
    v8 = MEMORY[0x24BEE1360];
    *(_QWORD *)(v7 + 56) = MEMORY[0x24BEE1328];
    *(_QWORD *)(v7 + 64) = v8;
    *(_BYTE *)(v7 + 32) = success;
  }
  sub_20A5B87BC();
  swift_bridgeObjectRelease();
}

uint64_t ODISignpost.Config.init(name:log:sendTelemetry:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  *(_QWORD *)a6 = result;
  *(_QWORD *)(a6 + 8) = a2;
  *(_BYTE *)(a6 + 16) = a3;
  *(_QWORD *)(a6 + 24) = a4;
  *(_BYTE *)(a6 + 32) = a5;
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for ODISignpost(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  id v11;
  uint64_t v12;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v5 = (void *)a2[3];
    *(_QWORD *)(a1 + 24) = v5;
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    v6 = *(int *)(a3 + 28);
    v7 = a1 + v6;
    v8 = (uint64_t)a2 + v6;
    *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
    v9 = sub_20A5B87E0();
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    v11 = v5;
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for ODISignpost(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_20A5B87E0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for ODISignpost(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  id v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v5 = *(int *)(a3 + 28);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_20A5B87E0();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  v10 = v4;
  v9(v6, v7, v8);
  return a1;
}

uint64_t assignWithCopy for ODISignpost(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(void **)(a2 + 24);
  v7 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  v8 = v6;

  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v9 = *(int *)(a3 + 28);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_20A5B87E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

uint64_t initializeWithTake for ODISignpost(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v4 = *(int *)(a3 + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_20A5B87E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for ODISignpost(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v7 = *(int *)(a3 + 28);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_20A5B87E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for ODISignpost()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20A4FB70C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_20A5B87E0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for ODISignpost()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_20A4FB794(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = sub_20A5B87E0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

uint64_t sub_20A4FB808()
{
  uint64_t result;
  unint64_t v1;

  result = sub_20A5B87E0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void destroy for ODISignpost.Config(uint64_t a1)
{

}

uint64_t initializeWithCopy for ODISignpost.Config(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v3 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v3;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v4 = v3;
  return a1;
}

uint64_t assignWithCopy for ODISignpost.Config(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(void **)(a2 + 24);
  v5 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v4;
  v6 = v4;

  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for ODISignpost.Config(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for ODISignpost.Config(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 33))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ODISignpost.Config(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ODISignpost.Config()
{
  return &type metadata for ODISignpost.Config;
}

uint64_t sub_20A4FBA20(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  const __CFData *v9;
  SecCertificateRef v10;
  __SecCertificate *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  const __CFAllocator *allocator;
  _QWORD v16[2];
  uint64_t v17;

  result = MEMORY[0x24BEE4AF8];
  v17 = MEMORY[0x24BEE4AF8];
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    allocator = (const __CFAllocator *)*MEMORY[0x24BDBD240];
    swift_bridgeObjectRetain();
    sub_20A49DBC0();
    v4 = (uint64_t *)(a1 + 40);
    while (1)
    {
      v5 = *v4;
      v16[0] = *(v4 - 1);
      v16[1] = v5;
      swift_bridgeObjectRetain();
      sub_20A5B8D74();
      v6 = sub_20A5B8504();
      v8 = v7;
      swift_bridgeObjectRelease();
      if (v8 >> 60 == 15)
      {
        LOWORD(v16[0]) = 88;
        DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000022, 0x800000020A5E33D0, 0, (unsigned __int16 *)v16, 0, 0, 0xD00000000000006CLL, 0x800000020A5E3400, 0xD000000000000021, 0x800000020A5E3470, 132);
        swift_willThrow();
        goto LABEL_11;
      }
      v9 = (const __CFData *)sub_20A5B8540();
      v10 = SecCertificateCreateWithData(allocator, v9);

      if (!v10)
        break;
      sub_20A44CFC4(v6, v8);
      swift_bridgeObjectRelease();
      v11 = v10;
      MEMORY[0x20BD25B28](v11, v12, v13, v14);
      if (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_20A5B8AC8();
      v4 += 2;
      sub_20A5B8AE0();
      sub_20A5B8ABC();

      if (!--v3)
      {
        swift_bridgeObjectRelease();
        return v17;
      }
    }
    LOWORD(v16[0]) = 121;
    DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000002ALL, 0x800000020A5E34A0, 0, (unsigned __int16 *)v16, 0, 0, 0xD00000000000006CLL, 0x800000020A5E3400, 0xD000000000000021, 0x800000020A5E3470, 135);
    swift_willThrow();
    sub_20A44CFC4(v6, v8);
LABEL_11:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_20A4FBCF4()
{
  uint64_t v0;
  const __CFData *v1;
  UInt8 *BytePtr;
  rsize_t Length;

  v1 = *(const __CFData **)(v0 + 16);
  BytePtr = (UInt8 *)CFDataGetBytePtr(v1);
  Length = CFDataGetLength(v1);
  memset_s(BytePtr, Length, 0, Length);
  munlock(BytePtr, Length);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DIPSecureData()
{
  return objc_opt_self();
}

uint64_t *JWSSignedJSON.__allocating_init(payload:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v4;

  v2 = v1;
  swift_allocObject();
  v4 = sub_20A500D50(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v2 + 80) - 8) + 8))(a1);
  return v4;
}

Swift::Void __swiftcall JWSSignedJSON.setNonce(_:)(Swift::String a1)
{
  _QWORD *v1;
  void *object;
  uint64_t countAndFlagsBits;
  _QWORD *v4;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;

  object = a1._object;
  countAndFlagsBits = a1._countAndFlagsBits;
  swift_beginAccess();
  v1[13] = countAndFlagsBits;
  v1[14] = object;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (!v1[12])
  {
    v1[12] = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  v4 = (_QWORD *)v1[12];
  if (v4)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v1[12] = v4;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v4 = sub_20A46FE9C(0, v4[2] + 1, 1, v4);
      v1[12] = v4;
    }
    v7 = v4[2];
    v6 = v4[3];
    if (v7 >= v6 >> 1)
    {
      v4 = sub_20A46FE9C((_QWORD *)(v6 > 1), v7 + 1, 1, v4);
      v1[12] = v4;
    }
    v4[2] = v7 + 1;
    v8 = &v4[2 * v7];
    v8[4] = 0x65636E6F6ELL;
    v8[5] = 0xE500000000000000;
  }
  swift_endAccess();
}

uint64_t sub_20A4FBF0C()
{
  unint64_t v0;

  v0 = sub_20A5B9008();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t sub_20A4FBF58(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_20A4FBF88 + 4 * byte_20A5C3C30[a1]))(0x726564616568, 0xE600000000000000);
}

uint64_t sub_20A4FBF88()
{
  return 0x65746365746F7270;
}

uint64_t sub_20A4FBFA4()
{
  return 0x64616F6C796170;
}

uint64_t sub_20A4FBFBC()
{
  return 0x727574616E676973;
}

uint64_t sub_20A4FBFDC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_20A4FC00C + 4 * byte_20A5C3C34[a1]))(0x726564616568, 0xE600000000000000);
}

uint64_t sub_20A4FC00C()
{
  return 0x65746365746F7270;
}

uint64_t sub_20A4FC028()
{
  return 0x64616F6C796170;
}

uint64_t sub_20A4FC040()
{
  return 0x727574616E676973;
}

uint64_t sub_20A4FC060(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x20BD26CEC](&unk_20A5C4478, a3);
  return sub_20A5B91E8();
}

uint64_t sub_20A4FC0B4(uint64_t a1)
{
  MEMORY[0x20BD26CEC](&unk_20A5C4478, a1);
  return sub_20A5B8A50();
}

uint64_t sub_20A4FC100()
{
  MEMORY[0x20BD26CEC](&unk_20A5C4478);
  return sub_20A5B8A68();
}

uint64_t sub_20A4FC150()
{
  MEMORY[0x20BD26CEC](&unk_20A5C4478);
  return sub_20A5B8A5C();
}

uint64_t sub_20A4FC1A0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X1>, _BYTE *a3@<X8>)
{
  return sub_20A4FDA0C(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20A4FBF0C, a3);
}

uint64_t sub_20A4FC1AC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_20A4FCD24(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_20A4FBF58, a2);
}

uint64_t sub_20A4FC1B8()
{
  unsigned __int8 *v0;

  return sub_20A4FBFDC(*v0);
}

uint64_t sub_20A4FC1C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, _BYTE *a4@<X8>)
{
  uint64_t result;

  result = sub_20A4FBF54(a1, a2, a3[2], a3[3], a3[4]);
  *a4 = result;
  return result;
}

uint64_t sub_20A4FC1F8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_20A500EA0();
  *a1 = result;
  return result;
}

uint64_t sub_20A4FC228(uint64_t a1)
{
  MEMORY[0x20BD26CEC](&unk_20A5C4518, a1);
  return sub_20A5B9314();
}

uint64_t sub_20A4FC25C(uint64_t a1)
{
  MEMORY[0x20BD26CEC](&unk_20A5C4518, a1);
  return sub_20A5B9320();
}

uint64_t JWSSignedJSON.JWSType.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  return sub_20A4FC4E8(a1);
}

uint64_t JWSSignedJSON.JWSType.rawValue.getter()
{
  return 0x4F534A2B45534F4ALL;
}

uint64_t sub_20A4FC2B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x20BD26CEC](&protocol conformance descriptor for JWSSignedJSON<A>.JWSType, a3);
  return sub_20A5B91E8();
}

uint64_t sub_20A4FC30C(uint64_t a1)
{
  MEMORY[0x20BD26CEC](&protocol conformance descriptor for JWSSignedJSON<A>.JWSType, a1);
  return sub_20A5B8A50();
}

uint64_t sub_20A4FC358()
{
  MEMORY[0x20BD26CEC](&protocol conformance descriptor for JWSSignedJSON<A>.JWSType);
  return sub_20A5B8A68();
}

uint64_t sub_20A4FC3A8()
{
  MEMORY[0x20BD26CEC](&protocol conformance descriptor for JWSSignedJSON<A>.JWSType);
  return sub_20A5B8A5C();
}

uint64_t sub_20A4FC3F8@<X0>(BOOL *a1@<X8>)
{
  return JWSSignedJSON.JWSType.init(rawValue:)(a1);
}

void sub_20A4FC404(_QWORD *a1@<X8>)
{
  *a1 = 0x4F534A2B45534F4ALL;
  a1[1] = 0xE90000000000004ELL;
}

uint64_t sub_20A4FC424()
{
  MEMORY[0x20BD26CEC](&protocol conformance descriptor for JWSSignedJSON<A>.JWSType);
  return sub_20A5B8A74();
}

uint64_t sub_20A4FC488()
{
  MEMORY[0x20BD26CEC](&protocol conformance descriptor for JWSSignedJSON<A>.JWSType);
  return sub_20A5B8A38();
}

uint64_t JWSSignedJSON.JWSContentType.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  return sub_20A4FC4E8(a1);
}

uint64_t sub_20A4FC4E8@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_20A5B9008();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

unint64_t JWSSignedJSON.JWSContentType.rawValue.getter()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_20A4FC554(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x20BD26CEC](&protocol conformance descriptor for JWSSignedJSON<A>.JWSContentType, a3);
  return sub_20A5B91E8();
}

uint64_t sub_20A4FC5A8(uint64_t a1)
{
  MEMORY[0x20BD26CEC](&protocol conformance descriptor for JWSSignedJSON<A>.JWSContentType, a1);
  return sub_20A5B8A50();
}

uint64_t sub_20A4FC5F4()
{
  MEMORY[0x20BD26CEC](&protocol conformance descriptor for JWSSignedJSON<A>.JWSContentType);
  return sub_20A5B8A68();
}

uint64_t sub_20A4FC644()
{
  MEMORY[0x20BD26CEC](&protocol conformance descriptor for JWSSignedJSON<A>.JWSContentType);
  return sub_20A5B8A5C();
}

uint64_t sub_20A4FC694@<X0>(BOOL *a1@<X8>)
{
  return JWSSignedJSON.JWSContentType.init(rawValue:)(a1);
}

void sub_20A4FC6A0(_QWORD *a1@<X8>)
{
  *a1 = 0xD00000000000001FLL;
  a1[1] = 0x800000020A5DB170;
}

uint64_t sub_20A4FC6C0()
{
  MEMORY[0x20BD26CEC](&protocol conformance descriptor for JWSSignedJSON<A>.JWSContentType);
  return sub_20A5B8A74();
}

uint64_t sub_20A4FC724()
{
  MEMORY[0x20BD26CEC](&protocol conformance descriptor for JWSSignedJSON<A>.JWSContentType);
  return sub_20A5B8A38();
}

uint64_t JWSSignedJSON.JWSCritical.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_20A5B9008();
  result = swift_bridgeObjectRelease();
  v4 = 3;
  if (v2 < 3)
    v4 = v2;
  *a1 = v4;
  return result;
}

uint64_t JWSSignedJSON.JWSCritical.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x64657461657263;
  if (*v0 != 1)
    v1 = 1953259891;
  if (*v0)
    return v1;
  else
    return 0x65636E6F6ELL;
}

uint64_t sub_20A4FC820(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x20BD26CEC](&protocol conformance descriptor for JWSSignedJSON<A>.JWSCritical, a3);
  return sub_20A5B91E8();
}

uint64_t sub_20A4FC874(uint64_t a1)
{
  MEMORY[0x20BD26CEC](&protocol conformance descriptor for JWSSignedJSON<A>.JWSCritical, a1);
  return sub_20A5B8A50();
}

uint64_t sub_20A4FC8C0()
{
  MEMORY[0x20BD26CEC](&protocol conformance descriptor for JWSSignedJSON<A>.JWSCritical);
  return sub_20A5B8A68();
}

uint64_t sub_20A4FC910()
{
  MEMORY[0x20BD26CEC](&protocol conformance descriptor for JWSSignedJSON<A>.JWSCritical);
  return sub_20A5B8A5C();
}

uint64_t sub_20A4FC960@<X0>(char *a1@<X8>)
{
  return JWSSignedJSON.JWSCritical.init(rawValue:)(a1);
}

uint64_t sub_20A4FC96C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = JWSSignedJSON.JWSCritical.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_20A4FC990()
{
  MEMORY[0x20BD26CEC](&protocol conformance descriptor for JWSSignedJSON<A>.JWSCritical);
  return sub_20A5B8A74();
}

uint64_t sub_20A4FC9F4()
{
  MEMORY[0x20BD26CEC](&protocol conformance descriptor for JWSSignedJSON<A>.JWSCritical);
  return sub_20A5B8A38();
}

uint64_t sub_20A4FCA48()
{
  unint64_t v0;

  v0 = sub_20A5B9008();
  swift_bridgeObjectRelease();
  if (v0 >= 8)
    return 8;
  else
    return v0;
}

uint64_t sub_20A4FCA94(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_20A4FCAC0 + 4 * byte_20A5C3C38[a1]))(6777953, 0xE300000000000000);
}

uint64_t sub_20A4FCAC0()
{
  return 6580587;
}

uint64_t sub_20A4FCACC()
{
  return 7371124;
}

uint64_t sub_20A4FCAD8()
{
  return 7959651;
}

uint64_t sub_20A4FCAE4()
{
  return 1953067619;
}

uint64_t sub_20A4FCAF4()
{
  return 0x65636E6F6ELL;
}

uint64_t sub_20A4FCB08()
{
  return 0x64657461657263;
}

uint64_t sub_20A4FCB20()
{
  return 1953259891;
}

uint64_t sub_20A4FCB30(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_20A4FCB5C + 4 * byte_20A5C3C40[a1]))(6777953, 0xE300000000000000);
}

uint64_t sub_20A4FCB5C()
{
  return 6580587;
}

uint64_t sub_20A4FCB68()
{
  return 7371124;
}

uint64_t sub_20A4FCB74()
{
  return 7959651;
}

uint64_t sub_20A4FCB80()
{
  return 1953067619;
}

uint64_t sub_20A4FCB90()
{
  return 0x65636E6F6ELL;
}

uint64_t sub_20A4FCBA4()
{
  return 0x64657461657263;
}

uint64_t sub_20A4FCBBC()
{
  return 1953259891;
}

uint64_t sub_20A4FCBCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x20BD26CEC](&unk_20A5C4298, a3);
  return sub_20A5B91E8();
}

uint64_t sub_20A4FCC20(uint64_t a1)
{
  MEMORY[0x20BD26CEC](&unk_20A5C4298, a1);
  return sub_20A5B8A50();
}

uint64_t sub_20A4FCC6C()
{
  MEMORY[0x20BD26CEC](&unk_20A5C4298);
  return sub_20A5B8A68();
}

uint64_t sub_20A4FCCBC()
{
  MEMORY[0x20BD26CEC](&unk_20A5C4298);
  return sub_20A5B8A5C();
}

uint64_t sub_20A4FCD0C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X1>, _BYTE *a3@<X8>)
{
  return sub_20A4FDA0C(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20A4FCA48, a3);
}

uint64_t sub_20A4FCD18@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_20A4FCD24(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_20A4FCA94, a2);
}

uint64_t sub_20A4FCD24@<X0>(_QWORD *a1@<X0>, uint64_t (*a2)(_QWORD, _QWORD, _QWORD, _QWORD)@<X2>, uint64_t *a3@<X8>)
{
  unsigned __int8 *v3;
  uint64_t result;
  uint64_t v6;

  result = a2(*v3, a1[2], a1[3], a1[4]);
  *a3 = result;
  a3[1] = v6;
  return result;
}

uint64_t sub_20A4FCD58()
{
  unsigned __int8 *v0;

  return sub_20A4FCB30(*v0);
}

uint64_t sub_20A4FCD68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, _BYTE *a4@<X8>)
{
  uint64_t result;

  result = sub_20A4FCA90(a1, a2, a3[2], a3[3], a3[4]);
  *a4 = result;
  return result;
}

uint64_t sub_20A4FCD98@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_20A500EA8();
  *a1 = result;
  return result;
}

uint64_t sub_20A4FCDC8(uint64_t a1)
{
  MEMORY[0x20BD26CEC](&unk_20A5C45B8, a1);
  return sub_20A5B9314();
}

uint64_t sub_20A4FCDFC(uint64_t a1)
{
  MEMORY[0x20BD26CEC](&unk_20A5C45B8, a1);
  return sub_20A5B9320();
}

void sub_20A4FCE30()
{
  char v0;

  swift_bridgeObjectRetain();
  JWSSignedJSON.JWSCritical.init(rawValue:)(&v0);
  __asm { BR              X10 }
}

uint64_t sub_20A4FCE9C()
{
  uint64_t v0;

  swift_bridgeObjectRetain();
  return v0;
}

double sub_20A4FCEDC@<D0>(char a1@<W0>, uint64_t a2@<X8>)
{
  double result;

  *(_BYTE *)a2 = a1;
  result = 0.0;
  *(_OWORD *)(a2 + 8) = 0u;
  *(_OWORD *)(a2 + 24) = 0u;
  *(_OWORD *)(a2 + 40) = 0u;
  *(_OWORD *)(a2 + 56) = 0u;
  *(_QWORD *)(a2 + 72) = 0;
  return result;
}

uint64_t JWSSignedJSON.DIPJWSProtectedHeader.encode(to:)(_QWORD *a1, _QWORD *a2)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[7];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;

  v4 = a2[2];
  v5 = a2[4];
  v29 = a2[3];
  v30 = v4;
  v28 = v5;
  v6 = type metadata accessor for JWSSignedJSON.DIPJWSProtectedHeader.CodingKeys(255, v4, v29, v5);
  MEMORY[0x20BD26CEC](&unk_20A5C45B8, v6);
  v7 = sub_20A5B914C();
  v31 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)v24 - v9;
  v11 = *v2;
  v12 = *((_QWORD *)v2 + 1);
  v26 = *((_QWORD *)v2 + 2);
  v27 = v12;
  v13 = *((_QWORD *)v2 + 3);
  v14 = *((_QWORD *)v2 + 4);
  v24[6] = *((_QWORD *)v2 + 5);
  v25 = v13;
  v15 = *((_QWORD *)v2 + 6);
  v24[4] = *((_QWORD *)v2 + 7);
  v24[5] = v14;
  v24[2] = *((_QWORD *)v2 + 8);
  v24[3] = v15;
  v24[1] = *((_QWORD *)v2 + 9);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A5B92FC();
  LOBYTE(v33) = v11;
  v34 = 0;
  sub_20A500E00();
  v16 = v32;
  sub_20A5B9140();
  if (v16)
    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v10, v7);
  v19 = v28;
  v18 = v29;
  v21 = v30;
  v20 = v31;
  LOBYTE(v33) = 1;
  sub_20A5B90D4();
  LOBYTE(v33) = 2;
  v22 = type metadata accessor for JWSSignedJSON.JWSType(0, v21, v18, v19);
  MEMORY[0x20BD26CEC](&protocol conformance descriptor for JWSSignedJSON<A>.JWSType, v22);
  sub_20A5B9140();
  LOBYTE(v33) = 3;
  v23 = type metadata accessor for JWSSignedJSON.JWSContentType(0, v21, v18, v19);
  MEMORY[0x20BD26CEC](&protocol conformance descriptor for JWSSignedJSON<A>.JWSContentType, v23);
  sub_20A5B9140();
  v33 = v25;
  v34 = 4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5130);
  sub_20A45E53C((unint64_t *)&unk_253EB47F8, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
  sub_20A5B9104();
  LOBYTE(v33) = 5;
  sub_20A5B90D4();
  LOBYTE(v33) = 6;
  sub_20A5B90D4();
  LOBYTE(v33) = 7;
  sub_20A5B90D4();
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v10, v7);
}

uint64_t JWSSignedJSON.DIPJWSProtectedHeader.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _BYTE *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  char v50;

  v43 = a5;
  v44 = a4;
  v8 = type metadata accessor for JWSSignedJSON.DIPJWSProtectedHeader.CodingKeys(255, a2, a3, a4);
  MEMORY[0x20BD26CEC](&unk_20A5C45B8, v8);
  v45 = sub_20A5B90BC();
  v9 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45, v10);
  v12 = (char *)&v42 - v11;
  v13 = a1[3];
  v48 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v46 = v12;
  v14 = v47;
  sub_20A5B92F0();
  if (!v14)
  {
    v15 = a2;
    v16 = a3;
    v17 = v44;
    v18 = v9;
    v50 = 0;
    sub_20A500E5C();
    sub_20A5B90A4();
    v19 = v49;
    LOBYTE(v49) = 1;
    v20 = sub_20A5B9038();
    v23 = v22;
    v42 = v20;
    LODWORD(v47) = v19;
    v24 = v15;
    v25 = type metadata accessor for JWSSignedJSON.JWSType(0, v15, v16, v17);
    LOBYTE(v49) = 2;
    swift_bridgeObjectRetain();
    MEMORY[0x20BD26CEC](&protocol conformance descriptor for JWSSignedJSON<A>.JWSType, v25);
    sub_20A5B90A4();
    v26 = type metadata accessor for JWSSignedJSON.JWSContentType(0, v24, v16, v17);
    LOBYTE(v49) = 3;
    MEMORY[0x20BD26CEC](&protocol conformance descriptor for JWSSignedJSON<A>.JWSContentType, v26);
    sub_20A5B90A4();
    __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5130);
    v50 = 4;
    sub_20A45E53C(&qword_253EB5138, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
    sub_20A5B9068();
    LOBYTE(v25) = v47;
    v27 = v49;
    LOBYTE(v49) = 5;
    swift_bridgeObjectRetain();
    v28 = sub_20A5B9038();
    v30 = v29;
    LOBYTE(v49) = 6;
    swift_bridgeObjectRetain();
    v31 = sub_20A5B9038();
    v33 = v32;
    v44 = v31;
    LOBYTE(v49) = 7;
    swift_bridgeObjectRetain();
    v34 = sub_20A5B9038();
    v36 = v35;
    v37 = *(void (**)(char *, uint64_t))(v18 + 8);
    v38 = v34;
    v37(v46, v45);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v39 = v42;
    v40 = v43;
    *v43 = v25;
    v40[1] = v39;
    v40[2] = v23;
    v40[3] = v27;
    v40[4] = v28;
    v41 = v44;
    v40[5] = v30;
    v40[6] = v41;
    v40[7] = v33;
    v40[8] = v38;
    v40[9] = v36;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_20A4FD6C8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, _BYTE *a3@<X8>)
{
  return JWSSignedJSON.DIPJWSProtectedHeader.init(from:)(a1, a2[2], a2[3], a2[4], a3);
}

uint64_t sub_20A4FD6E8(_QWORD *a1, _QWORD *a2)
{
  return JWSSignedJSON.DIPJWSProtectedHeader.encode(to:)(a1, a2);
}

uint64_t sub_20A4FD6FC()
{
  sub_20A500EB0();
  return swift_bridgeObjectRetain();
}

uint64_t sub_20A4FD710(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_20A4FD754())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_20A4FD790()
{
  uint64_t v0;

  v0 = sub_20A500EE0();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_20A4FD7C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_20A4FD814())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_20A4FD850()
{
  uint64_t v0;
  unsigned int v1;

  v0 = sub_20A5B9008();
  swift_bridgeObjectRelease();
  if (v0 == 1)
    v1 = 1;
  else
    v1 = 2;
  if (v0)
    return v1;
  else
    return 0;
}

uint64_t sub_20A4FD8A0(char a1)
{
  if ((a1 & 1) != 0)
    return 7168373;
  else
    return 6501752;
}

uint64_t sub_20A4FD8C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x20BD26CEC](&unk_20A5C4388, a3);
  return sub_20A5B91E8();
}

uint64_t sub_20A4FD914(uint64_t a1)
{
  MEMORY[0x20BD26CEC](&unk_20A5C4388, a1);
  return sub_20A5B8A50();
}

uint64_t sub_20A4FD960()
{
  MEMORY[0x20BD26CEC](&unk_20A5C4388);
  return sub_20A5B8A68();
}

uint64_t sub_20A4FD9B0()
{
  MEMORY[0x20BD26CEC](&unk_20A5C4388);
  return sub_20A5B8A5C();
}

uint64_t sub_20A4FDA00@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X1>, _BYTE *a3@<X8>)
{
  return sub_20A4FDA0C(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20A4FD850, a3);
}

uint64_t sub_20A4FDA0C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X1>, uint64_t (*a3)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD)@<X3>, _BYTE *a4@<X8>)
{
  uint64_t result;

  result = a3(*a1, a1[1], a2[2], a2[3], a2[4]);
  *a4 = result;
  return result;
}

uint64_t sub_20A4FDA48@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_20A4FD8A0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_20A4FDA7C()
{
  char *v0;

  return sub_20A4FD8A0(*v0);
}

uint64_t sub_20A4FDA90@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_20A4FD850();
  *a1 = result;
  return result;
}

uint64_t sub_20A4FDAC0(uint64_t a1)
{
  MEMORY[0x20BD26CEC](&unk_20A5C4568, a1);
  return sub_20A5B9314();
}

uint64_t sub_20A4FDAF4(uint64_t a1)
{
  MEMORY[0x20BD26CEC](&unk_20A5C4568, a1);
  return sub_20A5B9320();
}

_QWORD *JWSSignedJSON.DIPJWSUnprotectedHeader.__allocating_init()()
{
  _QWORD *result;

  result = (_QWORD *)swift_allocObject();
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

_QWORD *JWSSignedJSON.DIPJWSUnprotectedHeader.init()()
{
  _QWORD *v0;
  _QWORD *result;

  result = v0;
  v0[2] = 0;
  v0[3] = 0;
  v0[4] = 0;
  return result;
}

uint64_t JWSSignedJSON.DIPJWSUnprotectedHeader.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t JWSSignedJSON.DIPJWSUnprotectedHeader.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_20A4FDBB0(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD v12[8];
  char v13;

  v2 = v1;
  v4 = type metadata accessor for JWSSignedJSON.DIPJWSUnprotectedHeader.CodingKeys(255, *(_QWORD *)(*v2 + 80), *(_QWORD *)(*v2 + 88), *(_QWORD *)(*v2 + 96));
  MEMORY[0x20BD26CEC](&unk_20A5C4568, v4);
  v5 = sub_20A5B914C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A5B92FC();
  swift_beginAccess();
  v12[5] = v2[2];
  v13 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5130);
  sub_20A45E53C((unint64_t *)&unk_253EB47F8, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
  v10 = v12[1];
  sub_20A5B9104();
  if (v10)
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  swift_beginAccess();
  v13 = 1;
  swift_bridgeObjectRetain();
  sub_20A5B90D4();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  return swift_bridgeObjectRelease();
}

uint64_t JWSSignedJSON.DIPJWSUnprotectedHeader.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  JWSSignedJSON.DIPJWSUnprotectedHeader.init(from:)(a1);
  return v2;
}

_QWORD *JWSSignedJSON.DIPJWSUnprotectedHeader.init(from:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  char v23;
  _QWORD *v24;

  v3 = type metadata accessor for JWSSignedJSON.DIPJWSUnprotectedHeader.CodingKeys(255, *(_QWORD *)(*v1 + 80), *(_QWORD *)(*v1 + 88), *(_QWORD *)(*v1 + 96));
  MEMORY[0x20BD26CEC](&unk_20A5C4568, v3);
  v4 = sub_20A5B90BC();
  v19 = *(_QWORD *)(v4 - 8);
  v20 = v4;
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v18 - v6;
  v1[2] = 0;
  v1[3] = 0;
  v1[4] = 0;
  v8 = a1[3];
  v21 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v8);
  v9 = v24;
  sub_20A5B92F0();
  if (v9)
  {
    swift_release();
    v10 = v1;
  }
  else
  {
    v24 = v1 + 3;
    v11 = v19;
    v10 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5130);
    v23 = 0;
    sub_20A45E53C(&qword_253EB5138, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
    v12 = v20;
    sub_20A5B9068();
    v13 = v22;
    swift_beginAccess();
    v1[2] = v13;
    swift_bridgeObjectRelease();
    LOBYTE(v22) = 1;
    v15 = sub_20A5B9038();
    v17 = v16;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v7, v12);
    swift_beginAccess();
    v1[3] = v15;
    v1[4] = v17;
    swift_bridgeObjectRelease();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  return v10;
}

uint64_t sub_20A4FE004@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = JWSSignedJSON.DIPJWSUnprotectedHeader.__allocating_init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_20A4FE02C(_QWORD *a1)
{
  return sub_20A4FDBB0(a1);
}

uint64_t JWSSignedJSON.unprotectedHeader.getter()
{
  swift_beginAccess();
  return swift_retain();
}

uint64_t JWSSignedJSON.unprotectedHeader.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 64) = a1;
  return swift_release();
}

uint64_t (*JWSSignedJSON.unprotectedHeader.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t JWSSignedJSON.protectedHeader.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 80);
  v4 = *(_QWORD *)(v1 + 88);
  v5 = *(_QWORD *)(v1 + 144);
  *(_BYTE *)a1 = *(_BYTE *)(v1 + 72);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  v6 = *(_OWORD *)(v1 + 112);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 96);
  *(_OWORD *)(a1 + 40) = v6;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(v1 + 128);
  *(_QWORD *)(a1 + 72) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t JWSSignedJSON.protectedHeader.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v9;
  __int128 v10;

  v2 = *a1;
  v3 = *((_QWORD *)a1 + 1);
  v4 = *((_QWORD *)a1 + 2);
  v5 = *((_QWORD *)a1 + 5);
  v9 = *((_OWORD *)a1 + 3);
  v10 = *(_OWORD *)(a1 + 24);
  v7 = *((_QWORD *)a1 + 8);
  v6 = *((_QWORD *)a1 + 9);
  swift_beginAccess();
  *(_BYTE *)(v1 + 72) = v2;
  *(_QWORD *)(v1 + 80) = v3;
  *(_QWORD *)(v1 + 88) = v4;
  *(_OWORD *)(v1 + 96) = v10;
  *(_QWORD *)(v1 + 112) = v5;
  *(_OWORD *)(v1 + 120) = v9;
  *(_QWORD *)(v1 + 136) = v7;
  *(_QWORD *)(v1 + 144) = v6;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t (*JWSSignedJSON.protectedHeader.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t JWSSignedJSON.payload.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 80) - 8) + 16))(a1, v1 + *(_QWORD *)(*(_QWORD *)v1 + 144));
}

uint64_t *JWSSignedJSON.init(payload:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = sub_20A500D50(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 8))(a1);
  return v4;
}

uint64_t JWSSignedJSON.__allocating_init(_:)(uint64_t a1)
{
  uint64_t v2;

  swift_allocObject();
  v2 = sub_20A500F1C(a1);
  swift_release();
  return v2;
}

uint64_t JWSSignedJSON.init(_:)(uint64_t a1)
{
  uint64_t v1;

  v1 = sub_20A500F1C(a1);
  swift_release();
  return v1;
}

uint64_t JWSSignedJSON.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  JWSSignedJSON.init(from:)(a1);
  return v2;
}

uint64_t JWSSignedJSON.init(from:)(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  _QWORD *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  _QWORD *v32;
  uint64_t v33;
  id v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  _QWORD v91[3];
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  _QWORD *v102;
  _QWORD *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  id v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;

  v3 = (_QWORD *)*v1;
  v101 = sub_20A5B8ED0();
  v99 = *(_QWORD *)(v101 - 8);
  v5 = MEMORY[0x24BDAC7A8](v101, v4);
  v98 = (char *)v91 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5, v7);
  v100 = (char *)v91 - v9;
  v10 = v3[10];
  v94 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v8, v11);
  v13 = (char *)v91 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = v3[11];
  v15 = v3[12];
  v102 = v3;
  v97 = v14;
  v96 = v15;
  v16 = type metadata accessor for JWSSignedJSON.CodingKeys(255, v10, v14, v15);
  MEMORY[0x20BD26CEC](&unk_20A5C4518, v16);
  v95 = sub_20A5B90BC();
  v17 = *(_QWORD *)(v95 - 8);
  MEMORY[0x24BDAC7A8](v95, v18);
  v20 = (char *)v91 - v19;
  v21 = a1[3];
  v103 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v21);
  v22 = v104;
  sub_20A5B92F0();
  if (v22)
  {
    v109 = v22;
    v27 = v22;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52D0);
    v28 = v100;
    v29 = v101;
    if (swift_dynamicCast())
    {

      v30 = v99;
      v31 = v98;
      (*(void (**)(char *, char *, uint64_t))(v99 + 32))(v98, v28, v29);
      v32 = (_QWORD *)swift_allocError();
      (*(void (**)(uint64_t, char *, uint64_t))(v30 + 16))(v33, v31, v29);
      LOWORD(v105) = 86;
      DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000011, 0x800000020A5E3560, v32, (unsigned __int16 *)&v105, 0, 0, 0xD00000000000006DLL, 0x800000020A5E34F0, 0x6F72662874696E69, 0xEB00000000293A6DLL, 130);

      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v29);
      v34 = v109;
    }
    else
    {

      LOWORD(v109) = 0;
      v35 = v22;
      DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001BLL, 0x800000020A5E34D0, v22, (unsigned __int16 *)&v109, 0, 0, 0xD00000000000006DLL, 0x800000020A5E34F0, 0x6F72662874696E69, 0xEB00000000293A6DLL, 132);

      swift_willThrow();
      v34 = v22;
    }

    v36 = v119;
    goto LABEL_7;
  }
  v23 = v17;
  v104 = v13;
  v24 = type metadata accessor for JWSSignedJSON.DIPJWSUnprotectedHeader(0, v10, v97, v96);
  LOBYTE(v105) = 0;
  MEMORY[0x20BD26CEC](&protocol conformance descriptor for JWSSignedJSON<A>.DIPJWSUnprotectedHeader, v24);
  v25 = v95;
  v26 = v20;
  sub_20A5B90A4();
  v40 = v10;
  v36 = v119;
  *(_QWORD *)(v119 + 64) = v109;
  LOBYTE(v109) = 1;
  *(_QWORD *)(v36 + 16) = sub_20A5B9074();
  *(_QWORD *)(v36 + 24) = v41;
  LOBYTE(v109) = 2;
  *(_QWORD *)(v36 + 32) = sub_20A5B9074();
  *(_QWORD *)(v36 + 40) = v42;
  LOBYTE(v109) = 3;
  v43 = sub_20A5B9074();
  v45 = v44;
  (*(void (**)(char *, uint64_t))(v23 + 8))(v26, v25);
  *(_QWORD *)(v36 + 48) = v43;
  *(_QWORD *)(v36 + 56) = v45;
  v46 = *(_QWORD *)(v36 + 24);
  v105 = *(_QWORD *)(v36 + 16);
  v106 = v46;
  v117 = 45;
  v118 = 0xE100000000000000;
  v115 = 43;
  v116 = 0xE100000000000000;
  v47 = sub_20A49DBC0();
  v105 = sub_20A5B8D74();
  v106 = v48;
  v117 = 95;
  v118 = 0xE100000000000000;
  v115 = 47;
  v116 = 0xE100000000000000;
  v49 = (void *)sub_20A5B8D74();
  v51 = v50;
  swift_bridgeObjectRelease();
  v109 = v49;
  *(_QWORD *)&v110 = v51;
  swift_bridgeObjectRetain();
  if ((sub_20A5B8984() & 3) != 0)
  {
    if ((sub_20A5B8984() & 3) != 0)
    {
      v52 = sub_20A5B8984();
      swift_bridgeObjectRelease();
      v53 = v52 & 3;
      if (v52 <= 0)
        v53 = -(-v52 & 3);
      MEMORY[0x20BD25AA4](61, 0xE100000000000000, 4 - v53);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    sub_20A5B899C();
  }
  swift_bridgeObjectRelease();
  v54 = sub_20A5B8504();
  v56 = v55;
  sub_20A459690(v54, v55);
  swift_bridgeObjectRelease();
  if (v56 >> 60 == 15)
  {
    v109 = 0;
    *(_QWORD *)&v110 = 0xE000000000000000;
    sub_20A5B8E94();
    sub_20A5B899C();
    swift_bridgeObjectRetain();
    sub_20A5B899C();
    swift_bridgeObjectRelease();
    v57 = (uint64_t)v109;
    LOWORD(v109) = 86;
    DIPError(_:fromError:code:forceCode:properties:file:function:line:)(v57, v110, 0, (unsigned __int16 *)&v109, 0, 0, 0xD00000000000006DLL, 0x800000020A5E34F0, 0x6F72662874696E69, 0xEB00000000293A6DLL, 137);
    swift_bridgeObjectRelease();
    swift_willThrow();
    v60 = 0;
    goto LABEL_19;
  }
  v95 = v47;
  sub_20A44CFC4(v54, v56);
  v58 = sub_20A5B8264();
  swift_allocObject();
  sub_20A5B8258();
  v59 = type metadata accessor for JWSSignedJSON.DIPJWSProtectedHeader(0, v40, v97, v96);
  MEMORY[0x20BD26CEC](&protocol conformance descriptor for JWSSignedJSON<A>.DIPJWSProtectedHeader, v59);
  sub_20A5B824C();
  v99 = v59;
  v91[2] = v58;
  v96 = v56;
  v92 = v40;
  swift_release();
  v61 = v114;
  *(_BYTE *)(v36 + 72) = (_BYTE)v109;
  *(_OWORD *)(v36 + 80) = v110;
  v62 = v111;
  v63 = v112;
  *(_OWORD *)(v36 + 96) = v111;
  *(_OWORD *)(v36 + 112) = v63;
  *(_OWORD *)(v36 + 128) = v113;
  *(_QWORD *)(v36 + 144) = v61;
  v64 = v62;
  v93 = v54;
  if (v62)
  {
    v65 = *(char **)(v62 + 16);
    if (v65)
    {
      swift_bridgeObjectRetain();
      swift_beginAccess();
      v91[1] = v64;
      v66 = v64 + 40;
      while (1)
      {
        v100 = v65;
        v67 = *(char **)(v66 - 8);
        v68 = *(_QWORD *)(v36 + 80);
        v69 = *(_QWORD *)(v36 + 88);
        v70 = *(_QWORD *)(v36 + 144);
        LOBYTE(v109) = *(_BYTE *)(v36 + 72);
        *(_QWORD *)&v110 = v68;
        *((_QWORD *)&v110 + 1) = v69;
        v71 = *(_OWORD *)(v36 + 112);
        v111 = *(_OWORD *)(v36 + 96);
        v112 = v71;
        v113 = *(_OWORD *)(v36 + 128);
        v101 = v111;
        v114 = v70;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v98 = v67;
        sub_20A4FCE30();
        v73 = v72;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!v73)
          break;
        v66 += 16;
        swift_bridgeObjectRelease();
        v65 = v100 - 1;
        v36 = v119;
        if (v100 == (char *)1)
        {
          swift_bridgeObjectRelease();
          goto LABEL_27;
        }
      }
      swift_bridgeObjectRelease();
      v109 = 0;
      *(_QWORD *)&v110 = 0xE000000000000000;
      sub_20A5B8E94();
      sub_20A5B899C();
      sub_20A5B899C();
      swift_bridgeObjectRelease();
      v84 = (uint64_t)v109;
      LOWORD(v109) = 86;
      DIPError(_:fromError:code:forceCode:properties:file:function:line:)(v84, v110, 0, (unsigned __int16 *)&v109, 0, 0, 0xD00000000000006DLL, 0x800000020A5E34F0, 0x6F72662874696E69, 0xEB00000000293A6DLL, 145);
      swift_bridgeObjectRelease();
      swift_willThrow();
      sub_20A44CFC4(v93, v96);
      v60 = 1;
      v36 = v119;
      goto LABEL_19;
    }
  }
LABEL_27:
  v74 = *(_QWORD *)(v36 + 40);
  v117 = *(_QWORD *)(v36 + 32);
  v118 = v74;
  v115 = 45;
  v116 = 0xE100000000000000;
  v107 = 43;
  v108 = 0xE100000000000000;
  v117 = sub_20A5B8D74();
  v118 = v75;
  v115 = 95;
  v116 = 0xE100000000000000;
  v107 = 47;
  v108 = 0xE100000000000000;
  v76 = (void *)sub_20A5B8D74();
  v78 = v77;
  swift_bridgeObjectRelease();
  v109 = v76;
  *(_QWORD *)&v110 = v78;
  swift_bridgeObjectRetain();
  if ((sub_20A5B8984() & 3) != 0)
  {
    v79 = sub_20A5B8984();
    v80 = v94;
    if ((v79 & 3) != 0)
    {
      v81 = sub_20A5B8984();
      swift_bridgeObjectRelease();
      v82 = v81 & 3;
      if (v81 <= 0)
        v82 = -(-v81 & 3);
      MEMORY[0x20BD25AA4](61, 0xE100000000000000, 4 - v82);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v83 = v92;
    sub_20A5B899C();
  }
  else
  {
    v83 = v92;
    v80 = v94;
  }
  swift_bridgeObjectRelease();
  v85 = sub_20A5B8504();
  v87 = v86;
  sub_20A459690(v85, v86);
  swift_bridgeObjectRelease();
  if (v87 >> 60 == 15)
  {
    v109 = 0;
    *(_QWORD *)&v110 = 0xE000000000000000;
    sub_20A5B8E94();
    sub_20A5B899C();
    swift_bridgeObjectRetain();
    sub_20A5B899C();
    swift_bridgeObjectRelease();
    v88 = (uint64_t)v109;
    LOWORD(v109) = 86;
    DIPError(_:fromError:code:forceCode:properties:file:function:line:)(v88, v110, 0, (unsigned __int16 *)&v109, 0, 0, 0xD00000000000006DLL, 0x800000020A5E34F0, 0x6F72662874696E69, 0xEB00000000293A6DLL, 152);
    swift_bridgeObjectRelease();
    swift_willThrow();
    sub_20A44CFC4(v93, v96);
    v60 = 1;
LABEL_19:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    if ((v60 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
LABEL_7:
    v37 = (uint64_t)v103;
    swift_deallocPartialClassInstance();
    v38 = v37;
    goto LABEL_8;
  }
  sub_20A44CFC4(v85, v87);
  swift_allocObject();
  sub_20A5B8258();
  v89 = v104;
  sub_20A5B824C();
  swift_release();
  (*(void (**)(uint64_t, char *, uint64_t))(v80 + 32))(v36 + *(_QWORD *)(*(_QWORD *)v36 + 144), v89, v83);
  JWSSignedJSON.verify()();
  if (v90)
    swift_release();
  sub_20A44CFC4(v85, v87);
  sub_20A44CFC4(v93, v96);
  v38 = (uint64_t)v103;
LABEL_8:
  __swift_destroy_boxed_opaque_existential_1(v38);
  return v36;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> JWSSignedJSON.verify()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  unint64_t v15;
  _QWORD *v16;
  char *v17;
  __SecKey *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  char *v39;
  char *v40;
  void *v41;
  id v42;
  uint64_t v43;
  uint64_t *v44;
  void *v45;
  id v46;
  char *v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  void *v51;
  id v52;
  uint64_t *v53;
  id v54;
  void *v55;
  unsigned __int8 v56;
  __SecKey *v57;
  void *v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  __SecKey *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;

  v2 = v0;
  v3 = sub_20A5B8954();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t *)(v0 + 64);
  swift_beginAccess();
  v9 = *(_QWORD *)(v0 + 64);
  swift_beginAccess();
  v10 = *(_QWORD *)(v9 + 16);
  if (!v10 || !*(_QWORD *)(v10 + 16))
  {
    LOWORD(v72) = 73;
    DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000002DLL, 0x800000020A5E3660, 0, (unsigned __int16 *)&v72, 0, 0, 0xD00000000000006DLL, 0x800000020A5E34F0, 0x2928796669726576, 0xE800000000000000, 249);
    swift_willThrow();
    return;
  }
  v74 = v8;
  swift_bridgeObjectRetain();
  v11 = sub_20A46A9EC(MEMORY[0x24BEE4AF8]);
  v13 = sub_20A5008CC(v11, v12);
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    LOWORD(v72) = 0;
    v16 = v1;
    DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000022, 0x800000020A5E3690, v1, (unsigned __int16 *)&v72, 0, 0, 0xD00000000000006DLL, 0x800000020A5E34F0, 0x2928796669726576, 0xE800000000000000, 257);

    swift_willThrow();
    return;
  }
  v14 = v13;
  v15 = sub_20A4FBA20(v10);
  v17 = sub_20A4A39A8(v15, v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v18 = SecTrustCopyKey((SecTrustRef)v17);
  if (!v18)
  {
    LOWORD(v72) = 0;
    DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000003BLL, 0x800000020A5E36C0, 0, (unsigned __int16 *)&v72, 0, 0, 0xD00000000000006DLL, 0x800000020A5E34F0, 0x2928796669726576, 0xE800000000000000, 262);
    swift_willThrow();

    return;
  }
  v64 = v18;
  v65 = v17;
  v19 = *(_QWORD *)(v2 + 24);
  v72 = *(_QWORD *)(v2 + 16);
  v73 = v19;
  swift_bridgeObjectRetain();
  sub_20A5B899C();
  swift_bridgeObjectRetain();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B893C();
  v20 = sub_20A5B890C();
  v22 = v21;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  if (v22 >> 60 == 15)
    goto LABEL_19;
  v23 = *(_QWORD *)(v2 + 56);
  v66 = *(_QWORD *)(v2 + 48);
  v67 = v23;
  v70 = 45;
  v71 = 0xE100000000000000;
  v68 = 43;
  v69 = 0xE100000000000000;
  v24 = v20;
  sub_20A459690(v20, v22);
  sub_20A49DBC0();
  v66 = sub_20A5B8D74();
  v67 = v25;
  v70 = 95;
  v71 = 0xE100000000000000;
  v68 = 47;
  v69 = 0xE100000000000000;
  v26 = sub_20A5B8D74();
  v28 = v27;
  swift_bridgeObjectRelease();
  v72 = v26;
  v73 = v28;
  swift_bridgeObjectRetain();
  if ((sub_20A5B8984() & 3) != 0)
  {
    if ((sub_20A5B8984() & 3) != 0)
    {
      v29 = sub_20A5B8984();
      swift_bridgeObjectRelease();
      v30 = v29 & 3;
      if (v29 <= 0)
        v30 = -(-v29 & 3);
      MEMORY[0x20BD25AA4](61, 0xE100000000000000, 4 - v30);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    sub_20A5B899C();
  }
  swift_bridgeObjectRelease();
  v31 = sub_20A5B8504();
  v33 = v32;
  sub_20A459690(v31, v32);
  swift_bridgeObjectRelease();
  if (v33 >> 60 == 15)
  {
    sub_20A44CFC4(v24, v22);
    sub_20A44CFC4(v24, v22);
LABEL_19:
    LOWORD(v72) = 0;
    DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000044, 0x800000020A5E3700, 0, (unsigned __int16 *)&v72, 0, 0, 0xD00000000000006DLL, 0x800000020A5E34F0, 0x2928796669726576, 0xE800000000000000, 267);
    swift_willThrow();
LABEL_20:

    return;
  }
  sub_20A44CFC4(v31, v33);
  swift_beginAccess();
  v34 = v24;
  if (*(_BYTE *)(v2 + 72))
  {
    if (*(_BYTE *)(v2 + 72) != 1)
    {
      sub_20A45964C(v31, v33);
      v45 = (void *)sub_20A5B8540();
      sub_20A44CFC4(v24, v22);
      v46 = DigestSha256(v45);

      v47 = v65;
      if (!v46)
      {
        sub_20A44CFC4(v31, v33);
        LOWORD(v72) = 0;
        DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000041, 0x800000020A5E3750, 0, (unsigned __int16 *)&v72, 0, 0, 0xD00000000000006DLL, 0x800000020A5E34F0, 0x2928796669726576, 0xE800000000000000, 288);
        swift_willThrow();
        sub_20A44CFC4(v31, v33);
        sub_20A44CFC4(v34, v22);

        return;
      }
      v48 = sub_20A5B8564();
      v50 = v49;

      sub_20A44CFC4(v34, v22);
      sub_20A45964C(v48, v50);
      v51 = (void *)sub_20A5B8540();
      sub_20A44CFC4(v31, v33);
      v52 = ECDSASHA256RawToDER(v51);

      if (!v52)
      {
        LOWORD(v72) = 0;
        DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000003FLL, 0x800000020A5E37A0, 0, (unsigned __int16 *)&v72, 0, 0, 0xD00000000000006DLL, 0x800000020A5E34F0, 0x2928796669726576, 0xE800000000000000, 292);
        swift_willThrow();
        sub_20A44BD90(v48, v50);
        sub_20A44CFC4(v31, v33);
        sub_20A44BD90(v48, v50);
        goto LABEL_20;
      }
      v43 = sub_20A5B8564();
      v74 = v53;

      sub_20A44CFC4(v31, v33);
      sub_20A44BD90(v48, v50);
      v24 = v48;
      v22 = v50;
      v40 = v65;
      goto LABEL_32;
    }
    v35 = *v74;
    swift_beginAccess();
    if (!*(_QWORD *)(v35 + 32))
    {
      sub_20A44CFC4(v24, v22);
      v39 = v65;
      goto LABEL_41;
    }
    sub_20A459690(v31, v33);
    swift_bridgeObjectRetain();
    v36 = sub_20A5B8504();
    v38 = v37;
    swift_bridgeObjectRelease();
    v39 = v65;
    if (v38 >> 60 == 15)
    {
      sub_20A44CFC4(v31, v33);
      sub_20A44CFC4(v24, v22);
LABEL_41:
      LOWORD(v70) = 0;
      DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000036, 0x800000020A5E3850, 0, (unsigned __int16 *)&v70, 0, 0, 0xD00000000000006DLL, 0x800000020A5E34F0, 0x2928796669726576, 0xE800000000000000, 273);
      swift_willThrow();
      sub_20A44CFC4(v31, v33);
      sub_20A44CFC4(v24, v22);

      return;
    }
    v70 = v36;
    v71 = v38;
    v58 = (void *)sub_20A5B8540();
    sub_20A44CFC4(v24, v22);
    v59 = DigestSha256(v58);

    if (!v59)
    {
      sub_20A44CFC4(v31, v33);
      LOWORD(v68) = 0;
      DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000041, 0x800000020A5E3750, 0, (unsigned __int16 *)&v68, 0, 0, 0xD00000000000006DLL, 0x800000020A5E34F0, 0x2928796669726576, 0xE800000000000000, 276);
      swift_willThrow();
      sub_20A44CFC4(v24, v22);
      sub_20A44CFC4(v31, v33);

      sub_20A44CFC4(v36, v38);
      return;
    }
    v60 = sub_20A5B8564();
    v61 = v24;
    v63 = v62;

    sub_20A5B8570();
    sub_20A44CFC4(v61, v22);
    sub_20A44BD90(v60, v63);
    v24 = v70;
    v22 = v71;
  }
  else
  {
    sub_20A459690(v31, v33);
    sub_20A44CFC4(v24, v22);
  }
  v40 = v65;
  v41 = (void *)sub_20A5B8540();
  sub_20A44CFC4(v31, v33);
  v42 = ECDSASHA256RawToDER(v41);

  if (!v42)
  {
    LOWORD(v70) = 0;
    DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000003FLL, 0x800000020A5E37A0, 0, (unsigned __int16 *)&v70, 0, 0, 0xD00000000000006DLL, 0x800000020A5E34F0, 0x2928796669726576, 0xE800000000000000, 283);
    swift_willThrow();
    sub_20A44BD90(v24, v22);
    sub_20A44CFC4(v31, v33);

    return;
  }
  v43 = sub_20A5B8564();
  v74 = v44;

  sub_20A44CFC4(v31, v33);
LABEL_32:
  v54 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  if (qword_253EB4740 != -1)
    swift_once();
  if (byte_253EBC790 == 1)
  {
    v55 = (void *)sub_20A5B88F4();
    v56 = objc_msgSend(v54, sel_BOOLForKey_, v55);

    if ((v56 & 1) != 0)
    {
      sub_20A44BD90(v43, (unint64_t)v74);
      sub_20A44BD90(v24, v22);

      return;
    }
  }
  else
  {

  }
  v57 = v64;
  sub_20A463540(v43, (uint64_t)v74, v24, v22, v64, (const __CFString *)*MEMORY[0x24BDE92D0]);
  sub_20A44BD90(v43, (unint64_t)v74);

  sub_20A44BD90(v24, v22);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> JWSSignedJSON.setCertificateChain(_:)(Swift::OpaquePointer a1)
{
  uint64_t v1;
  Swift::OpaquePointer *v3;
  unsigned __int16 v4[12];

  if (*((_QWORD *)a1._rawValue + 2))
  {
    swift_beginAccess();
    v3 = *(Swift::OpaquePointer **)(v1 + 64);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_beginAccess();
    v3[2]._rawValue = a1._rawValue;
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4[0] = 74;
    DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000026, 0x800000020A5E3890, 0, v4, 0, 0, 0xD00000000000006DLL, 0x800000020A5E34F0, 0xD000000000000017, 0x800000020A5E38C0, 163);
    swift_willThrow();
  }
}

Swift::Void __swiftcall JWSSignedJSON.setSalt(_:)(Swift::String a1)
{
  _QWORD *v1;
  void *object;
  uint64_t countAndFlagsBits;
  _QWORD *v4;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;

  object = a1._object;
  countAndFlagsBits = a1._countAndFlagsBits;
  swift_beginAccess();
  v1[17] = countAndFlagsBits;
  v1[18] = object;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (!v1[12])
  {
    v1[12] = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  v4 = (_QWORD *)v1[12];
  if (v4)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v1[12] = v4;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v4 = sub_20A46FE9C(0, v4[2] + 1, 1, v4);
      v1[12] = v4;
    }
    v7 = v4[2];
    v6 = v4[3];
    if (v7 >= v6 >> 1)
    {
      v4 = sub_20A46FE9C((_QWORD *)(v6 > 1), v7 + 1, 1, v4);
      v1[12] = v4;
    }
    v4[2] = v7 + 1;
    v8 = &v4[2 * v7];
    v8[4] = 1953259891;
    v8[5] = 0xE400000000000000;
  }
  swift_endAccess();
}

void JWSSignedJSON.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  _QWORD *v34;
  char *v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  _QWORD *v45;
  uint64_t v46;
  unsigned __int16 v47;
  unsigned __int16 v48[12];
  id v49;

  v2 = v1;
  v4 = (_QWORD *)*v2;
  v5 = sub_20A5B8EDC();
  v6 = *(_QWORD *)(v5 - 8);
  v8 = MEMORY[0x24BDAC7A8](v5, v7);
  v43 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v10);
  v44 = (char *)&v39 - v11;
  v13 = v4[10];
  v12 = v4[11];
  v14 = v4[12];
  v15 = type metadata accessor for JWSSignedJSON.CodingKeys(255, v13, v12, v14);
  MEMORY[0x20BD26CEC](&unk_20A5C4518, v15);
  v46 = sub_20A5B914C();
  MEMORY[0x24BDAC7A8](v46, v16);
  v19 = (char *)&v39 - v18;
  v20 = v2[5];
  v21 = v2[4] & 0xFFFFFFFFFFFFLL;
  if ((v20 & 0x2000000000000000) != 0)
    v21 = HIBYTE(v20) & 0xF;
  if (!v21)
    goto LABEL_12;
  v22 = v2[3];
  v23 = v2[2] & 0xFFFFFFFFFFFFLL;
  if ((v22 & 0x2000000000000000) != 0)
    v23 = HIBYTE(v22) & 0xF;
  if (!v23)
    goto LABEL_12;
  v24 = v2[7];
  v25 = v2[6] & 0xFFFFFFFFFFFFLL;
  if ((v24 & 0x2000000000000000) != 0)
    v25 = HIBYTE(v24) & 0xF;
  if (v25)
  {
    v39 = v17;
    v40 = v6;
    v41 = v5;
    v26 = a1[3];
    v42 = a1[4];
    v27 = v19;
    __swift_project_boxed_opaque_existential_1(a1, v26);
    sub_20A5B92FC();
    swift_beginAccess();
    v49 = (id)v2[8];
    LOBYTE(v47) = 0;
    v28 = type metadata accessor for JWSSignedJSON.DIPJWSUnprotectedHeader(0, v13, v12, v14);
    MEMORY[0x20BD26CEC](&protocol conformance descriptor for JWSSignedJSON<A>.DIPJWSUnprotectedHeader, v28);
    v29 = v45;
    v30 = v46;
    sub_20A5B9140();
    if (v29)
    {
      (*(void (**)(char *, uint64_t))(v39 + 8))(v27, v30);
      v32 = v40;
      v31 = v41;
      v33 = v44;
      v49 = v29;
      v34 = v29;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52D0);
      if (swift_dynamicCast())
      {

        v35 = v43;
        (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v43, v33, v31);
        v36 = (_QWORD *)swift_allocError();
        (*(void (**)(uint64_t, char *, uint64_t))(v32 + 16))(v37, v35, v31);
        v47 = 87;
        DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000012, 0x800000020A5E3920, v36, &v47, 0, 0, 0xD00000000000006DLL, 0x800000020A5E34F0, 0x742865646F636E65, 0xEB00000000293A6FLL, 239);

        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v32 + 8))(v35, v31);

      }
      else
      {

        LOWORD(v49) = 0;
        v38 = v29;
        DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000037, 0x800000020A5E38E0, v29, (unsigned __int16 *)&v49, 0, 0, 0xD00000000000006DLL, 0x800000020A5E34F0, 0x742865646F636E65, 0xEB00000000293A6FLL, 241);

        swift_willThrow();
      }
    }
    else
    {
      LOBYTE(v49) = 1;
      swift_bridgeObjectRetain();
      sub_20A5B9110();
      swift_bridgeObjectRelease();
      LOBYTE(v49) = 2;
      swift_bridgeObjectRetain();
      sub_20A5B9110();
      swift_bridgeObjectRelease();
      LOBYTE(v49) = 3;
      swift_bridgeObjectRetain();
      sub_20A5B9110();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v27, v30);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
LABEL_12:
    v48[0] = 74;
    DIPError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000002DLL, 0x800000020A5E3940, 0, v48, 0, 0, 0xD00000000000006DLL, 0x800000020A5E34F0, 0x742865646F636E65, 0xEB00000000293A6FLL, 230);
    swift_willThrow();
  }
}

uint64_t sub_20A5008CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _DWORD v21[3];
  unsigned int v22;
  char v23[32];
  uint64_t v24;
  uint64_t v25;
  uint64_t MetatypeMetadata;
  uint64_t v27;

  v3 = v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 80);
  v27 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_253EB4EE0 != -1)
    swift_once();
  MetatypeMetadata = swift_getMetatypeMetadata();
  v24 = v4;
  sub_20A44FD78((uint64_t)&v24, (uint64_t)v23);
  v7 = sub_20A5B8960();
  MEMORY[0x24BDAC7A8](v7, v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB4A68);
  sub_20A5B8CA8();
  swift_bridgeObjectRelease();
  v9 = v23[0];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v24);
  if ((_DWORD)v9 == 17)
  {
    v22 = 17;
    if (qword_253EB5040 != -1)
      swift_once();
    v10 = (id)qword_253EBC880;
    v21[2] = sub_20A5B8C48();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52C0);
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_20A5BA9A0;
    v12 = v3 + *(_QWORD *)(*(_QWORD *)v3 + 144);
    v13 = v27;
    v14 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
    v14(v6, v12, v4);
    swift_getDynamicType();
    v15 = *(void (**)(char *, uint64_t))(v13 + 8);
    v15(v6, v4);
    v16 = sub_20A5B932C();
    v18 = v17;
    *(_QWORD *)(v11 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v11 + 64) = sub_20A450420();
    *(_QWORD *)(v11 + 32) = v16;
    *(_QWORD *)(v11 + 40) = v18;
    sub_20A5B87B0();

    swift_bridgeObjectRelease();
    v24 = 0;
    v25 = 0xE000000000000000;
    sub_20A5B8E94();
    sub_20A5B899C();
    v14(v6, v12, v4);
    swift_getDynamicType();
    v15(v6, v4);
    sub_20A5B932C();
    sub_20A5B899C();
    swift_bridgeObjectRelease();
    v19 = v24;
    LOWORD(v24) = 74;
    DIPError(_:fromError:code:forceCode:properties:file:function:line:)(v19, v25, 0, (unsigned __int16 *)&v24, 0, 0, 0xD00000000000006DLL, 0x800000020A5E34F0, 0xD000000000000015, 0x800000020A5E3A50, 310);
    swift_bridgeObjectRelease();
    swift_willThrow();
    return v22;
  }
  return v9;
}

uint64_t *JWSSignedJSON.deinit()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 144));
  return v0;
}

uint64_t JWSSignedJSON.__deallocating_deinit()
{
  JWSSignedJSON.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_20A500D08@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = JWSSignedJSON.__allocating_init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

void sub_20A500D30(_QWORD *a1)
{
  JWSSignedJSON.encode(to:)(a1);
}

uint64_t *sub_20A500D50(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 80);
  type metadata accessor for JWSSignedJSON.DIPJWSUnprotectedHeader(0, v4, *(_QWORD *)(*v1 + 88), *(_QWORD *)(*v1 + 96));
  v5 = (_QWORD *)swift_allocObject();
  v5[3] = 0;
  v5[4] = 0;
  v5[2] = 0;
  v1[8] = (uint64_t)v5;
  *((_BYTE *)v1 + 72) = 0;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  v1[18] = 0;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))((uint64_t)v1 + *(_QWORD *)(v3 + 144), a1, v4);
  v1[2] = 0;
  v1[3] = 0xE000000000000000;
  v1[4] = 0;
  v1[5] = 0xE000000000000000;
  v1[6] = 0;
  v1[7] = 0xE000000000000000;
  return v1;
}

uint64_t type metadata accessor for JWSSignedJSON.JWSCritical(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for JWSSignedJSON.JWSCritical);
}

uint64_t type metadata accessor for JWSSignedJSON.DIPJWSProtectedHeader.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for JWSSignedJSON.DIPJWSProtectedHeader.CodingKeys);
}

unint64_t sub_20A500E00()
{
  unint64_t result;

  result = qword_2545FB300[0];
  if (!qword_2545FB300[0])
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C3808, &type metadata for JWSAlgorithm);
    atomic_store(result, qword_2545FB300);
  }
  return result;
}

uint64_t type metadata accessor for JWSSignedJSON.JWSType(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for JWSSignedJSON.JWSType);
}

uint64_t type metadata accessor for JWSSignedJSON.JWSContentType(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for JWSSignedJSON.JWSContentType);
}

unint64_t sub_20A500E5C()
{
  unint64_t result;

  result = qword_253EB4A78;
  if (!qword_253EB4A78)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C37E0, &type metadata for JWSAlgorithm);
    atomic_store(result, (unint64_t *)&qword_253EB4A78);
  }
  return result;
}

uint64_t sub_20A500EA0()
{
  return 4;
}

uint64_t sub_20A500EA8()
{
  return 8;
}

uint64_t sub_20A500EB0()
{
  uint64_t v0;

  swift_beginAccess();
  return *(_QWORD *)(v0 + 16);
}

uint64_t sub_20A500EE0()
{
  uint64_t v0;

  swift_beginAccess();
  return *(_QWORD *)(v0 + 24);
}

uint64_t type metadata accessor for JWSSignedJSON.DIPJWSUnprotectedHeader.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for JWSSignedJSON.DIPJWSUnprotectedHeader.CodingKeys);
}

uint64_t sub_20A500F1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 80) - 8) + 16))(v1 + *(_QWORD *)(*(_QWORD *)v1 + 144), a1 + *(_QWORD *)(*(_QWORD *)a1 + 144));
  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(v1 + 16) = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(v1 + 24) = v3;
  v4 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(v1 + 32) = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(v1 + 40) = v4;
  v5 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(v1 + 48) = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(v1 + 56) = v5;
  swift_beginAccess();
  *(_QWORD *)(v1 + 64) = *(_QWORD *)(a1 + 64);
  swift_beginAccess();
  v6 = *(_QWORD *)(a1 + 80);
  v7 = *(_QWORD *)(a1 + 88);
  v8 = *(_QWORD *)(a1 + 144);
  v9 = *(_OWORD *)(a1 + 96);
  v10 = *(_OWORD *)(a1 + 112);
  v11 = *(_OWORD *)(a1 + 128);
  *(_BYTE *)(v1 + 72) = *(_BYTE *)(a1 + 72);
  *(_QWORD *)(v1 + 80) = v6;
  *(_QWORD *)(v1 + 88) = v7;
  *(_OWORD *)(v1 + 96) = v9;
  *(_OWORD *)(v1 + 112) = v10;
  *(_OWORD *)(v1 + 128) = v11;
  *(_QWORD *)(v1 + 144) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for JWSSignedJSON.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for JWSSignedJSON.CodingKeys);
}

uint64_t type metadata accessor for JWSSignedJSON.DIPJWSUnprotectedHeader(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for JWSSignedJSON.DIPJWSUnprotectedHeader);
}

uint64_t type metadata accessor for JWSSignedJSON.DIPJWSProtectedHeader(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for JWSSignedJSON.DIPJWSProtectedHeader);
}

void sub_20A501070()
{
  JUMPOUT(0x20BD26CECLL);
}

void sub_20A501080()
{
  JUMPOUT(0x20BD26CECLL);
}

void sub_20A501090()
{
  JUMPOUT(0x20BD26CECLL);
}

uint64_t sub_20A5010A0@<X0>(uint64_t *a1@<X8>)
{
  *a1 = sub_20A500EB0();
  return swift_bridgeObjectRetain();
}

uint64_t sub_20A5010C8()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return sub_20A4FD710(v0);
}

uint64_t sub_20A5010F0()
{
  return 24;
}

__n128 sub_20A5010FC(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_20A501110@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = sub_20A500EE0();
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_20A50113C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return sub_20A4FD7C4(v1, v2);
}

uint64_t sub_20A501178()
{
  return 24;
}

__n128 sub_20A501184(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_20A501198()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for JWSSignedJSON(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for JWSSignedJSON);
}

uint64_t method lookup function for JWSSignedJSON()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of JWSSignedJSON.__allocating_init(payload:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of JWSSignedJSON.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of JWSSignedJSON.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t sub_20A501278(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_20A5012B8 + 4 * byte_20A5C3C4C[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_20A5012D8 + 4 * byte_20A5C3C51[v4]))();
}

_BYTE *sub_20A5012B8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_20A5012D8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_20A5012E0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_20A5012E8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_20A5012F0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_20A5012F8(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_20A501304(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_20A501350 + 4 * byte_20A5C3C5B[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_20A501384 + 4 * byte_20A5C3C56[v4]))();
}

uint64_t sub_20A501384(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A50138C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A501394);
  return result;
}

uint64_t sub_20A5013A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A5013A8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_20A5013AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A5013B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A5013C0()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_20A5013C8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_20A501408(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_20A50148C(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t sub_20A501574(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_20A5015F0(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 80))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t sub_20A50164C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 80) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

uint64_t sub_20A5016B4()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for JWSSignedJSON.DIPJWSUnprotectedHeader()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of JWSSignedJSON.DIPJWSUnprotectedHeader.x5c.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of JWSSignedJSON.DIPJWSUnprotectedHeader.x5c.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of JWSSignedJSON.DIPJWSUnprotectedHeader.x5c.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of JWSSignedJSON.DIPJWSUnprotectedHeader.uam.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of JWSSignedJSON.DIPJWSUnprotectedHeader.uam.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of JWSSignedJSON.DIPJWSUnprotectedHeader.uam.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of JWSSignedJSON.DIPJWSUnprotectedHeader.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of JWSSignedJSON.DIPJWSUnprotectedHeader.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of JWSSignedJSON.DIPJWSUnprotectedHeader.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t sub_20A50178C(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_20A5017D8 + 4 * byte_20A5C3C65[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_20A50180C + 4 * byte_20A5C3C60[v4]))();
}

uint64_t sub_20A50180C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A501814(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A50181CLL);
  return result;
}

uint64_t sub_20A501828(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A501830);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_20A501834(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A50183C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A501848(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_20A501894 + 4 * byte_20A5C3C6F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_20A5018C8 + 4 * byte_20A5C3C6A[v4]))();
}

uint64_t sub_20A5018C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A5018D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A5018D8);
  return result;
}

uint64_t sub_20A5018E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A5018ECLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_20A5018F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A5018F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTagSinglePayload for ODIGeocoderBindingsName(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t sub_20A501994(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_20A5019E0 + 4 * byte_20A5C3C79[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_20A501A14 + 4 * byte_20A5C3C74[v4]))();
}

uint64_t sub_20A501A14(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A501A1C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A501A24);
  return result;
}

uint64_t sub_20A501A30(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A501A38);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_20A501A3C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A501A44(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_20A501A50()
{
  JUMPOUT(0x20BD26CECLL);
}

void sub_20A501A60()
{
  JUMPOUT(0x20BD26CECLL);
}

void sub_20A501A70()
{
  JUMPOUT(0x20BD26CECLL);
}

void sub_20A501A80()
{
  JUMPOUT(0x20BD26CECLL);
}

void sub_20A501A90()
{
  JUMPOUT(0x20BD26CECLL);
}

void sub_20A501AA0()
{
  JUMPOUT(0x20BD26CECLL);
}

void sub_20A501AB0()
{
  JUMPOUT(0x20BD26CECLL);
}

void sub_20A501AC0()
{
  JUMPOUT(0x20BD26CECLL);
}

void sub_20A501AD0()
{
  JUMPOUT(0x20BD26CECLL);
}

uint64_t sub_20A501AE0@<X0>(char *a1@<X8>)
{
  uint64_t *v1;

  return sub_20A4B1998(v1[2], v1[3], v1[4], a1);
}

CoreODIEssentials::CoreODILogger __swiftcall CoreODILogger.init()()
{
  _QWORD *v0;
  CoreODIEssentials::CoreODILogger result;

  *v0 = 45;
  v0[1] = 0xE100000000000000;
  return result;
}

uint64_t CoreODILogger.info(_:category:)(uint64_t a1, unint64_t a2, _BYTE *a3)
{
  return sub_20A503234(a1, a2, a3, MEMORY[0x24BEE78F0]);
}

Swift::Void __swiftcall CoreODILogger.milestone(tag:description:value:isSensitive:)(CoreODIEssentials::MilestoneTag tag, Swift::String description, Swift::String_optional value, Swift::Bool isSensitive)
{
  uint64_t *v4;
  void *object;
  uint64_t countAndFlagsBits;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  object = value.value._object;
  countAndFlagsBits = value.value._countAndFlagsBits;
  v7 = description._object;
  v8 = description._countAndFlagsBits;
  v10 = *v4;
  v9 = v4[1];
  if (!isSensitive
    || (v11 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults),
        v12 = (void *)sub_20A5B88F4(),
        v13 = objc_msgSend(v11, sel_BOOLForKey_, v12),
        v11,
        v12,
        v13))
  {
    if (object)
    {
      v28 = v8;
      v14 = qword_253EB5078;
      swift_bridgeObjectRetain();
      if (v14 != -1)
        swift_once();
      v15 = sub_20A5B8804();
      __swift_project_value_buffer(v15, (uint64_t)qword_253EBC8D0);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      v16 = sub_20A5B87EC();
      v17 = sub_20A5B8C48();
      if (os_log_type_enabled(v16, v17))
      {
        v27 = countAndFlagsBits;
        v18 = swift_slowAlloc();
        v19 = swift_slowAlloc();
        v29 = v19;
        *(_DWORD *)v18 = 136315906;
        swift_bridgeObjectRetain();
        sub_20A503EE0(v10, v9, &v29);
        sub_20A5B8D50();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v18 + 12) = 2080;
        v20 = MilestoneTag.rawValue.getter();
        sub_20A503EE0(v20, 0xE800000000000000, &v29);
        sub_20A5B8D50();
        swift_bridgeObjectRelease();
        *(_WORD *)(v18 + 22) = 2080;
        swift_bridgeObjectRetain();
        sub_20A503EE0(v28, (unint64_t)v7, &v29);
        sub_20A5B8D50();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v18 + 32) = 2080;
        swift_bridgeObjectRetain();
        sub_20A503EE0(v27, (unint64_t)object, &v29);
        sub_20A5B8D50();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_20A443000, v16, v17, "[%s] (%s) %s ::: %s", (uint8_t *)v18, 0x2Au);
        swift_arrayDestroy();
        MEMORY[0x20BD26DB8](v19, -1, -1);
        MEMORY[0x20BD26DB8](v18, -1, -1);

        return;
      }

      swift_bridgeObjectRelease_n();
    }
    else
    {
      if (qword_253EB5078 != -1)
        swift_once();
      v21 = sub_20A5B8804();
      __swift_project_value_buffer(v21, (uint64_t)qword_253EBC8D0);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v22 = sub_20A5B87EC();
      v23 = sub_20A5B8C48();
      if (os_log_type_enabled(v22, v23))
      {
        v24 = swift_slowAlloc();
        v25 = swift_slowAlloc();
        v29 = v25;
        *(_DWORD *)v24 = 136315650;
        swift_bridgeObjectRetain();
        sub_20A503EE0(v10, v9, &v29);
        sub_20A5B8D50();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v24 + 12) = 2080;
        v26 = MilestoneTag.rawValue.getter();
        sub_20A503EE0(v26, 0xE800000000000000, &v29);
        sub_20A5B8D50();
        swift_bridgeObjectRelease();
        *(_WORD *)(v24 + 22) = 2080;
        swift_bridgeObjectRetain();
        sub_20A503EE0(v8, (unint64_t)v7, &v29);
        sub_20A5B8D50();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_20A443000, v22, v23, "[%s] (%s) %s", (uint8_t *)v24, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x20BD26DB8](v25, -1, -1);
        MEMORY[0x20BD26DB8](v24, -1, -1);

        return;
      }

    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
}

uint64_t CoreODILogger.warning(_:category:)(uint64_t a1, unint64_t a2, _BYTE *a3)
{
  return sub_20A503234(a1, a2, a3, MEMORY[0x24BEE7910]);
}

id defaultLog()()
{
  if (qword_253EB5040 != -1)
    swift_once();
  return (id)qword_253EBC880;
}

uint64_t CoreODILogger.error(_:category:)(uint64_t a1, unint64_t a2, _BYTE *a3)
{
  return sub_20A503234(a1, a2, a3, MEMORY[0x24BEE7910]);
}

uint64_t CoreODILogger.debug(_:category:)(uint64_t a1, unint64_t a2, _BYTE *a3)
{
  return sub_20A503234(a1, a2, a3, MEMORY[0x24BEE7908]);
}

uint64_t CoreODILogger.fault(_:category:)(uint64_t a1, unint64_t a2, _BYTE *a3)
{
  return sub_20A503234(a1, a2, a3, MEMORY[0x24BEE7920]);
}

Swift::Void __swiftcall CoreODILogger.milestone(tag:description:dictionary:isSensitive:)(CoreODIEssentials::MilestoneTag tag, Swift::String description, Swift::OpaquePointer dictionary, Swift::Bool isSensitive)
{
  uint64_t v4;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  id v12;
  void *v13;
  unsigned int v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  id v37;
  unint64_t v38;
  uint64_t v39;

  object = description._object;
  countAndFlagsBits = description._countAndFlagsBits;
  v39 = *MEMORY[0x24BDAC8D0];
  v8 = sub_20A5B8954();
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = *(void **)v4;
  v10 = *(_QWORD *)(v4 + 8);
  if (!isSensitive
    || (v12 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults),
        v13 = (void *)sub_20A5B88F4(),
        v14 = objc_msgSend(v12, sel_BOOLForKey_, v13),
        v12,
        v13,
        v14))
  {
    v15 = (void *)objc_opt_self();
    v16 = (void *)sub_20A5B887C();
    v37 = 0;
    v17 = objc_msgSend(v15, sel_dataWithJSONObject_options_error_, v16, 0, &v37);

    v18 = v37;
    if (v17)
    {
      v34 = countAndFlagsBits;
      v19 = sub_20A5B8564();
      v21 = v20;

      sub_20A5B893C();
      v22 = sub_20A5B8918();
      if (v23)
      {
        v24 = v23;
        v33 = v22;
        if (qword_253EB5078 != -1)
          swift_once();
        v25 = sub_20A5B8804();
        __swift_project_value_buffer(v25, (uint64_t)qword_253EBC8D0);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        v26 = sub_20A5B87EC();
        v27 = sub_20A5B8C48();
        if (os_log_type_enabled(v26, v27))
        {
          v28 = swift_slowAlloc();
          v32 = (void *)swift_slowAlloc();
          v37 = v32;
          *(_DWORD *)v28 = 136315906;
          swift_bridgeObjectRetain();
          sub_20A503EE0((uint64_t)v11, v10, (uint64_t *)&v37);
          sub_20A5B8D50();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v28 + 12) = 2080;
          v29 = MilestoneTag.rawValue.getter();
          sub_20A503EE0(v29, 0xE800000000000000, (uint64_t *)&v37);
          sub_20A5B8D50();
          swift_bridgeObjectRelease();
          *(_WORD *)(v28 + 22) = 2080;
          swift_bridgeObjectRetain();
          sub_20A503EE0(v34, (unint64_t)object, (uint64_t *)&v37);
          sub_20A5B8D50();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v28 + 32) = 2080;
          swift_bridgeObjectRetain();
          v35 = sub_20A503EE0(v33, v24, (uint64_t *)&v37);
          sub_20A5B8D50();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_20A443000, v26, v27, "[%s] (%s) %s ::: %s", (uint8_t *)v28, 0x2Au);
          swift_arrayDestroy();
          MEMORY[0x20BD26DB8](v32, -1, -1);
          MEMORY[0x20BD26DB8](v28, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
        }
        sub_20A44BD90(v19, v21);

      }
      else
      {
        v37 = v11;
        v38 = v10;
        v35 = 14;
        v36 = 0xE000000000000000;
        sub_20A5B8E94();
        sub_20A5B899C();
        MilestoneTag.rawValue.getter();
        sub_20A5B899C();
        swift_bridgeObjectRelease();
        CoreODILogger.error(_:category:)(0, 0xE000000000000000, &v35);
        sub_20A44BD90(v19, v21);
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      v30 = v18;
      v31 = (void *)sub_20A5B8420();

      swift_willThrow();
      v37 = v11;
      v38 = v10;
      v35 = 14;
      v36 = 0xE000000000000000;
      sub_20A5B8E94();
      sub_20A5B899C();
      MilestoneTag.rawValue.getter();
      sub_20A5B899C();
      swift_bridgeObjectRelease();
      sub_20A5B899C();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52D0);
      sub_20A5B8F9C();
      CoreODILogger.error(_:category:)(0, 0xE000000000000000, &v35);
      swift_bridgeObjectRelease();

    }
  }
}

id static Logger.coreODISensitiveLoggingEnabled.getter()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v1 = (void *)sub_20A5B88F4();
  v2 = objc_msgSend(v0, sel_BOOLForKey_, v1);

  return v2;
}

uint64_t CoreODILogger.sensitive(_:category:)(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  char v11;

  v4 = sub_20A5B8804();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a3;
  sub_20A502D5C((uint64_t)&v11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_20A5044CC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

CoreODIEssentials::CoreODILogger __swiftcall CoreODILogger.init(sessionIdentifier:)(CoreODIEssentials::CoreODILogger sessionIdentifier)
{
  CoreODIEssentials::CoreODILogger *v1;

  *v1 = sessionIdentifier;
  return sessionIdentifier;
}

void Logger.sensitive(_:)(uint64_t (*a1)(void))
{
  id v2;
  void *v3;
  unsigned int v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  NSObject *oslog;
  uint64_t v12;

  v2 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v3 = (void *)sub_20A5B88F4();
  v4 = objc_msgSend(v2, sel_BOOLForKey_, v3);

  if (v4)
  {
    v5 = a1();
    v7 = v6;
    swift_bridgeObjectRetain();
    oslog = sub_20A5B87EC();
    v8 = sub_20A5B8C48();
    if (os_log_type_enabled(oslog, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      v10 = swift_slowAlloc();
      v12 = v10;
      *(_DWORD *)v9 = 136315138;
      swift_bridgeObjectRetain();
      sub_20A503EE0(v5, v7, &v12);
      sub_20A5B8D50();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_20A443000, oslog, v8, "%s", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x20BD26DB8](v10, -1, -1);
      MEMORY[0x20BD26DB8](v9, -1, -1);

    }
    else
    {
      swift_bridgeObjectRelease_n();

    }
  }
}

uint64_t sub_20A5029E4()
{
  uint64_t result;

  sub_20A4F5E70();
  result = sub_20A5B8D20();
  qword_253EBC880 = result;
  return result;
}

uint64_t sub_20A502A3C(uint64_t a1)
{
  return sub_20A502A58(a1, qword_253EBC888);
}

uint64_t sub_20A502A4C(uint64_t a1)
{
  return sub_20A502A58(a1, qword_253EB4950);
}

uint64_t sub_20A502A58(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_20A5B8804();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_20A5B87F8();
}

uint64_t _s17CoreODIEssentials13defaultLogger2os0D0VyF_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_253EB4A80 != -1)
    swift_once();
  v2 = sub_20A5B8804();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_253EB4950);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

Swift::Void __swiftcall setProcessName(_:)(Swift::String a1)
{
  xmmword_2545FB388 = (__int128)a1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
}

Swift::String_optional __swiftcall processName()()
{
  unsigned __int128 v0;
  uint64_t v1;
  void *v2;
  Swift::String_optional result;

  v0 = xmmword_2545FB388;
  swift_bridgeObjectRetain();
  v2 = (void *)(v0 >> 64);
  v1 = v0;
  result.value._object = v2;
  result.value._countAndFlagsBits = v1;
  return result;
}

CoreODIEssentials::MilestoneTag_optional __swiftcall MilestoneTag.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  CoreODIEssentials::MilestoneTag_optional result;
  char v5;

  v2 = v1;
  v3 = sub_20A5B9008();
  result.value = swift_bridgeObjectRelease();
  v5 = 15;
  if (v3 < 0xF)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t MilestoneTag.rawValue.getter()
{
  char *v0;

  return *(_QWORD *)&a20ac50d6780d07[8 * *v0];
}

uint64_t sub_20A502C14(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_20A4EAC38(*a1, *a2);
}

uint64_t sub_20A502C20()
{
  sub_20A5B929C();
  MilestoneTag.rawValue.getter();
  sub_20A5B8978();
  swift_bridgeObjectRelease();
  return sub_20A5B92CC();
}

uint64_t sub_20A502C7C()
{
  MilestoneTag.rawValue.getter();
  sub_20A5B8978();
  return swift_bridgeObjectRelease();
}

uint64_t sub_20A502CC4()
{
  sub_20A5B929C();
  MilestoneTag.rawValue.getter();
  sub_20A5B8978();
  swift_bridgeObjectRelease();
  return sub_20A5B92CC();
}

CoreODIEssentials::MilestoneTag_optional sub_20A502D1C(Swift::String *a1)
{
  return MilestoneTag.init(rawValue:)(*a1);
}

uint64_t sub_20A502D28@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = MilestoneTag.rawValue.getter();
  *a1 = result;
  a1[1] = 0xE800000000000000;
  return result;
}

uint64_t CoreODILogger.notice(_:category:)(uint64_t a1, unint64_t a2, _BYTE *a3)
{
  return sub_20A503234(a1, a2, a3, MEMORY[0x24BEE7928]);
}

void sub_20A502D5C(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_20A502D88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (qword_253EB4798 != -1)
    swift_once();
  v1 = sub_20A5B8804();
  v2 = __swift_project_value_buffer(v1, (uint64_t)qword_253EBC7E0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 16))(v0, v2, v1);
}

uint64_t CoreODILogger.critical(_:category:)(uint64_t a1, unint64_t a2, _BYTE *a3)
{
  return sub_20A503234(a1, a2, a3, MEMORY[0x24BEE7920]);
}

uint64_t sub_20A503234(uint64_t a1, unint64_t a2, _BYTE *a3, uint64_t (*a4)(void))
{
  uint64_t *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27[2];

  v9 = sub_20A5B8804();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v12) = *a3;
  v15 = *v4;
  v14 = v4[1];
  LOBYTE(v26) = v12;
  sub_20A502D5C((uint64_t)&v26);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v16 = sub_20A5B87EC();
  v17 = a4();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc();
    v19 = swift_slowAlloc();
    v25 = v10;
    v20 = a1;
    v21 = v19;
    v27[0] = v19;
    *(_DWORD *)v18 = 136315394;
    v24 = v9;
    swift_bridgeObjectRetain();
    v26 = sub_20A503EE0(v15, v14, v27);
    sub_20A5B8D50();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v18 + 12) = 2080;
    swift_bridgeObjectRetain();
    v26 = sub_20A503EE0(v20, a2, v27);
    sub_20A5B8D50();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_20A443000, v16, v17, "[%s] %s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x20BD26DB8](v21, -1, -1);
    MEMORY[0x20BD26DB8](v18, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v13, v24);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  }
}

uint64_t CoreODILogger.fault(_:isPublic:category:)(uint64_t a1, unint64_t a2, char a3, char *a4)
{
  uint64_t *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char v18;
  unint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38[2];

  v9 = sub_20A5B8804();
  v10 = *(_QWORD *)(v9 - 8);
  v12 = MEMORY[0x24BDAC7A8](v9, v11);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12, v15);
  v17 = (char *)&v34 - v16;
  v18 = *a4;
  v20 = *v4;
  v19 = v4[1];
  if ((a3 & 1) != 0)
  {
    LOBYTE(v37) = v18;
    sub_20A502D5C((uint64_t)&v37);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v21 = sub_20A5B87EC();
    v22 = sub_20A5B8C60();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = swift_slowAlloc();
      v24 = swift_slowAlloc();
      v35 = a1;
      v25 = v24;
      v38[0] = v24;
      *(_DWORD *)v23 = 136315394;
      v36 = v9;
      swift_bridgeObjectRetain();
      v37 = sub_20A503EE0(v20, v19, v38);
      sub_20A5B8D50();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v23 + 12) = 2082;
      swift_bridgeObjectRetain();
      v37 = sub_20A503EE0(v35, a2, v38);
      sub_20A5B8D50();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_20A443000, v21, v22, "[%s] %{public}s", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x20BD26DB8](v25, -1, -1);
      MEMORY[0x20BD26DB8](v23, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v17, v36);
    }

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v32 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
    v33 = v17;
  }
  else
  {
    LOBYTE(v37) = v18;
    sub_20A502D5C((uint64_t)&v37);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v27 = sub_20A5B87EC();
    v28 = sub_20A5B8C60();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = swift_slowAlloc();
      v30 = swift_slowAlloc();
      v35 = a1;
      v31 = v30;
      v38[0] = v30;
      *(_DWORD *)v29 = 136315395;
      v36 = v9;
      swift_bridgeObjectRetain();
      v37 = sub_20A503EE0(v20, v19, v38);
      sub_20A5B8D50();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v29 + 12) = 2081;
      swift_bridgeObjectRetain();
      v37 = sub_20A503EE0(v35, a2, v38);
      sub_20A5B8D50();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_20A443000, v27, v28, "[%s] %{private}s", (uint8_t *)v29, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x20BD26DB8](v31, -1, -1);
      MEMORY[0x20BD26DB8](v29, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v14, v36);
    }

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v32 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
    v33 = v14;
  }
  return v32(v33, v9);
}

void CoreODILogger.milestone<A>(tag:description:encodableValue:isSensitive:)(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, char a5)
{
  uint64_t *v5;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  unsigned int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v28[2];
  uint64_t v29[3];

  v8 = sub_20A5B8954();
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = *v5;
  v10 = v5[1];
  if ((a5 & 1) == 0
    || (v12 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults),
        v13 = (void *)sub_20A5B88F4(),
        v14 = objc_msgSend(v12, sel_BOOLForKey_, v13),
        v12,
        v13,
        v14))
  {
    sub_20A5B8288();
    swift_allocObject();
    sub_20A5B827C();
    v15 = sub_20A5B8270();
    v17 = v16;
    swift_release();
    sub_20A5B893C();
    v18 = sub_20A5B8918();
    v20 = v19;
    sub_20A44BD90(v15, v17);
    if (v20)
    {
      if (qword_253EB5078 != -1)
        swift_once();
      v21 = sub_20A5B8804();
      __swift_project_value_buffer(v21, (uint64_t)qword_253EBC8D0);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      v22 = sub_20A5B87EC();
      v23 = sub_20A5B8C48();
      if (os_log_type_enabled(v22, v23))
      {
        v24 = swift_slowAlloc();
        v25 = swift_slowAlloc();
        v29[0] = v25;
        *(_DWORD *)v24 = 136315906;
        swift_bridgeObjectRetain();
        sub_20A503EE0(v11, v10, v29);
        sub_20A5B8D50();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v24 + 12) = 2080;
        v26 = MilestoneTag.rawValue.getter();
        sub_20A503EE0(v26, 0xE800000000000000, v29);
        sub_20A5B8D50();
        swift_bridgeObjectRelease();
        *(_WORD *)(v24 + 22) = 2080;
        swift_bridgeObjectRetain();
        sub_20A503EE0(a2, a3, v29);
        sub_20A5B8D50();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v24 + 32) = 2080;
        swift_bridgeObjectRetain();
        v28[0] = sub_20A503EE0(v18, v20, v29);
        sub_20A5B8D50();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_20A443000, v22, v23, "[%s] (%s) %s ::: %s", (uint8_t *)v24, 0x2Au);
        swift_arrayDestroy();
        MEMORY[0x20BD26DB8](v25, -1, -1);
        MEMORY[0x20BD26DB8](v24, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
    }
    else
    {
      v29[0] = v11;
      v29[1] = v10;
      sub_20A5B8E94();
      swift_bridgeObjectRelease();
      v28[0] = 0xD00000000000000ELL;
      v28[1] = 0x800000020A5E3AE0;
      MilestoneTag.rawValue.getter();
      sub_20A5B899C();
      swift_bridgeObjectRelease();
      CoreODILogger.error(_:category:)(0xD000000000000025, 0x800000020A5E3AE0, v28);
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_20A503D24(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  char v11;

  v4 = sub_20A5B8804();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a3;
  sub_20A502D5C((uint64_t)&v11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_20A5044CC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_20A503E0C(uint64_t result, _BYTE **a2)
{
  _BYTE *v2;

  v2 = *a2;
  *v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_20A503E1C(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_20A503E50(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_20A503E70(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;

  v6 = a4();
  sub_20A503EE0(v6, v7, a3);
  v8 = *a1 + 8;
  sub_20A5B8D50();
  result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_20A503EE0(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_20A503FB0(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_20A44FD78((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_20A44FD78((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_20A503FB0(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_20A5B8D5C();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_20A504168(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_20A5B8EE8();
  if (!v8)
  {
    sub_20A5B8FA8();
    __break(1u);
LABEL_17:
    result = sub_20A5B8FFC();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_20A504168(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_20A5041FC(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_20A504370(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_20A504370(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_20A5041FC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_20A52522C(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_20A5B8EA0();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_20A5B8FA8();
      __break(1u);
LABEL_10:
      v2 = sub_20A5B89B4();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_20A5B8FFC();
    __break(1u);
LABEL_14:
    result = sub_20A5B8FA8();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

uint64_t sub_20A504370(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_253EB52B8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_20A5B8FFC();
  __break(1u);
  return result;
}

_BYTE **sub_20A5044BC(_BYTE **result, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE *v4;

  v4 = *result;
  *v4 = a4;
  *result = v4 + 1;
  return result;
}

void sub_20A5044CC()
{
  id v0;
  void *v1;
  unsigned int v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  NSObject *oslog;
  uint64_t v7[2];

  v0 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v1 = (void *)sub_20A5B88F4();
  v2 = objc_msgSend(v0, sel_BOOLForKey_, v1);

  if (v2)
  {
    v7[1] = 0xE000000000000000;
    sub_20A5B899C();
    sub_20A5B899C();
    sub_20A5B899C();
    sub_20A5B899C();
    sub_20A5B899C();
    swift_bridgeObjectRetain();
    oslog = sub_20A5B87EC();
    v3 = sub_20A5B8C48();
    if (os_log_type_enabled(oslog, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc();
      v5 = swift_slowAlloc();
      v7[0] = v5;
      *(_DWORD *)v4 = 136315138;
      swift_bridgeObjectRetain();
      sub_20A503EE0(0, 0xE000000000000000, v7);
      sub_20A5B8D50();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_20A443000, oslog, v3, "%s", v4, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x20BD26DB8](v5, -1, -1);
      MEMORY[0x20BD26DB8](v4, -1, -1);

    }
    else
    {
      swift_bridgeObjectRelease_n();

    }
  }
}

unint64_t sub_20A504718()
{
  unint64_t result;

  result = qword_2545FB398;
  if (!qword_2545FB398)
  {
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for MilestoneTag, &type metadata for MilestoneTag);
    atomic_store(result, (unint64_t *)&qword_2545FB398);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for MilestoneTag(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 14 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 14) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF2)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF1)
    return ((uint64_t (*)(void))((char *)&loc_20A5047A8 + 4 * byte_20A5C4637[v4]))();
  *a1 = a2 + 14;
  return ((uint64_t (*)(void))((char *)sub_20A5047DC + 4 * byte_20A5C4632[v4]))();
}

uint64_t sub_20A5047DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A5047E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A5047ECLL);
  return result;
}

uint64_t sub_20A5047F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A504800);
  *(_BYTE *)result = a2 + 14;
  return result;
}

uint64_t sub_20A504804(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A50480C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MilestoneTag()
{
  return &type metadata for MilestoneTag;
}

ValueMetadata *type metadata accessor for CoreODILogger()
{
  return &type metadata for CoreODILogger;
}

void sub_20A504838()
{
  id v0;
  void *v1;
  unsigned int v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  NSObject *oslog;
  uint64_t v7[2];

  v0 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v1 = (void *)sub_20A5B88F4();
  v2 = objc_msgSend(v0, sel_BOOLForKey_, v1);

  if (v2)
  {
    v7[1] = 0xE000000000000000;
    sub_20A5B8E94();
    sub_20A5B899C();
    sub_20A5B899C();
    sub_20A5B899C();
    swift_bridgeObjectRetain();
    oslog = sub_20A5B87EC();
    v3 = sub_20A5B8C48();
    if (os_log_type_enabled(oslog, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc();
      v5 = swift_slowAlloc();
      v7[0] = v5;
      *(_DWORD *)v4 = 136315138;
      swift_bridgeObjectRetain();
      sub_20A503EE0(0, 0xE000000000000000, v7);
      sub_20A5B8D50();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_20A443000, oslog, v3, "%s", v4, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x20BD26DB8](v5, -1, -1);
      MEMORY[0x20BD26DB8](v4, -1, -1);

    }
    else
    {
      swift_bridgeObjectRelease_n();

    }
  }
}

void sub_20A504A7C(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  unsigned int v5;
  id v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  NSObject *oslog;
  uint64_t v11[2];

  v3 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v4 = (void *)sub_20A5B88F4();
  v5 = objc_msgSend(v3, sel_BOOLForKey_, v4);

  if (v5)
  {
    v11[1] = 0xE000000000000000;
    sub_20A5B899C();
    v6 = objc_msgSend(a2, sel_description);
    sub_20A5B8900();

    sub_20A5B899C();
    swift_bridgeObjectRelease();
    sub_20A5B899C();
    swift_bridgeObjectRetain();
    oslog = sub_20A5B87EC();
    v7 = sub_20A5B8C48();
    if (os_log_type_enabled(oslog, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      v9 = swift_slowAlloc();
      v11[0] = v9;
      *(_DWORD *)v8 = 136315138;
      swift_bridgeObjectRetain();
      sub_20A503EE0(0, 0xE000000000000000, v11);
      sub_20A5B8D50();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_20A443000, oslog, v7, "%s", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x20BD26DB8](v9, -1, -1);
      MEMORY[0x20BD26DB8](v8, -1, -1);

    }
    else
    {
      swift_bridgeObjectRelease_n();

    }
  }
}

id sub_20A504CDC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  id v13;
  objc_super v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;

  v1 = v0;
  v2 = OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_httpSession;
  v3 = MEMORY[0x20BD26E90](*(_QWORD *)&v0[OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_httpSession]+ OBJC_IVAR____TtC17CoreODIEssentials14DIPHTTPSession_owner);
  if (!v3)
    goto LABEL_5;
  v4 = (void *)v3;
  if ((char *)v3 == v0)
  {

LABEL_5:
    sub_20A47BD60((uint64_t)&v0[OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_logger], (uint64_t)v18);
    v8 = v19;
    v9 = v20;
    __swift_project_boxed_opaque_existential_1(v18, v19);
    v16 = 0;
    v17 = 0xE000000000000000;
    sub_20A5B8E94();
    sub_20A5B899C();
    v10 = objc_msgSend(v0, sel_description);
    sub_20A5B8900();

    sub_20A5B899C();
    swift_bridgeObjectRelease();
    sub_20A5B899C();
    sub_20A4B2778(&v16);
    Loggable.debug(_:category:)(0, 0xE000000000000000, (char *)&v16, v8, v9);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
    v11 = *(id *)&v1[v2];
    v12 = sub_20A4A4D50();
    objc_msgSend(v12, sel_invalidateAndCancel);

    v13 = sub_20A4A4D7C();
    objc_msgSend(v13, sel_invalidateAndCancel);

    goto LABEL_6;
  }
  sub_20A47BD60((uint64_t)&v0[OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_logger], (uint64_t)v18);
  v5 = v19;
  v6 = v20;
  __swift_project_boxed_opaque_existential_1(v18, v19);
  sub_20A5B8E94();
  swift_bridgeObjectRelease();
  v16 = 0xD00000000000001BLL;
  v17 = 0x800000020A5E3DC0;
  v7 = objc_msgSend(v4, sel_description);
  sub_20A5B8900();

  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  sub_20A4B2778(&v16);
  Loggable.debug(_:category:)(0xD00000000000001BLL, 0x800000020A5E3DC0, (char *)&v16, v5, v6);
  swift_bridgeObjectRelease();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
LABEL_6:
  v15.receiver = v1;
  v15.super_class = (Class)type metadata accessor for DIPWebService();
  return objc_msgSendSuper2(&v15, sel_dealloc);
}

uint64_t type metadata accessor for DIPWebService()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for DIPConversation()
{
  return &type metadata for DIPConversation;
}

id sub_20A50507C(void *a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  objc_class *v16;
  id v17;
  objc_super v19;

  v5 = sub_20A5B866C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v2[OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_httpSession] = a1;
  v10 = v2;
  v11 = a1;
  sub_20A5B8660();
  v12 = sub_20A5B863C();
  v14 = v13;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  v15 = (uint64_t *)&v10[OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_conversationID];
  *v15 = v12;
  v15[1] = v14;
  sub_20A47BD60(a2, (uint64_t)&v10[OBJC_IVAR____TtC17CoreODIEssentials13DIPWebService_logger]);

  v16 = (objc_class *)type metadata accessor for DIPWebService();
  v19.receiver = v10;
  v19.super_class = v16;
  v17 = objc_msgSendSuper2(&v19, sel_init);
  sub_20A4A4E9C();

  __swift_destroy_boxed_opaque_existential_1(a2);
  return v17;
}

uint64_t sub_20A5051A0(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  int64_t v23;
  int v24;
  uint64_t v25;
  char v26;
  uint64_t v27;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (!v1)
    return v2;
  v3 = a1;
  v27 = MEMORY[0x24BEE4AF8];
  sub_20A45788C(0, v1, 0);
  v2 = v27;
  result = sub_20A51284C(v3);
  v6 = result;
  v7 = 0;
  v8 = v3 + 64;
  v22 = v3 + 80;
  v23 = v1;
  v24 = v5;
  v25 = v3 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(v3 + 32))
  {
    v11 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(v3 + 36) != v5)
      goto LABEL_24;
    v26 = *(_BYTE *)(*(_QWORD *)(v3 + 48) + v6);
    result = (uint64_t)sub_20A5094BC();
    v12 = result;
    v13 = v3;
    v15 = *(_QWORD *)(v27 + 16);
    v14 = *(_QWORD *)(v27 + 24);
    if (v15 >= v14 >> 1)
      result = sub_20A45788C(v14 > 1, v15 + 1, 1);
    *(_QWORD *)(v27 + 16) = v15 + 1;
    v16 = v27 + 16 * v15;
    *(_BYTE *)(v16 + 32) = v26;
    *(_QWORD *)(v16 + 40) = v12;
    v9 = 1 << *(_BYTE *)(v13 + 32);
    if (v6 >= v9)
      goto LABEL_25;
    v8 = v25;
    v17 = *(_QWORD *)(v25 + 8 * v11);
    if ((v17 & (1 << v6)) == 0)
      goto LABEL_26;
    v3 = v13;
    v5 = v24;
    if (*(_DWORD *)(v13 + 36) != v24)
      goto LABEL_27;
    v18 = v17 & (-2 << (v6 & 0x3F));
    if (v18)
    {
      v9 = __clz(__rbit64(v18)) | v6 & 0xFFFFFFFFFFFFFFC0;
      v10 = v23;
    }
    else
    {
      v19 = v11 + 1;
      v20 = (unint64_t)(v9 + 63) >> 6;
      v10 = v23;
      if (v11 + 1 < v20)
      {
        v21 = *(_QWORD *)(v25 + 8 * v19);
        if (v21)
        {
LABEL_20:
          v9 = __clz(__rbit64(v21)) + (v19 << 6);
        }
        else
        {
          while (v20 - 2 != v11)
          {
            v21 = *(_QWORD *)(v22 + 8 * v11++);
            if (v21)
            {
              v19 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v7;
    v6 = v9;
    if (v7 == v10)
      return v2;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_20A5053E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v36 = a3;
  v37 = a5;
  v35 = a2;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB5180);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB4F8);
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB500);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17, v19);
  v21 = (char *)&v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v21, a1, v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB508);
  v22 = swift_allocObject();
  swift_defaultActor_initialize();
  v23 = v22 + *(_QWORD *)(*(_QWORD *)v22 + 96);
  v24 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
  v24(v23, 1, 1, v17);
  v25 = (_QWORD *)(v22 + *(_QWORD *)(*(_QWORD *)v22 + 104));
  *v25 = 0;
  v25[1] = 0;
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v16, v21, v17);
  v24((uint64_t)v16, 0, 1, v17);
  swift_beginAccess();
  sub_20A4CC430((uint64_t)v16, v23, &qword_2545FB4F8);
  swift_endAccess();
  v26 = sub_20A5B8B64();
  v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56);
  v27(v12, 1, 1, v26);
  v28 = (_QWORD *)swift_allocObject();
  v28[2] = 0;
  v28[3] = 0;
  v28[4] = v35;
  v28[5] = v22;
  swift_retain();
  v29 = sub_20A4B2644((uint64_t)v12, (uint64_t)&unk_2545FB518, (uint64_t)v28);
  v27(v12, 1, 1, v26);
  v30 = (_QWORD *)swift_allocObject();
  v30[2] = 0;
  v30[3] = 0;
  v30[4] = v36;
  v30[5] = a4;
  v31 = v37;
  v30[6] = v22;
  v30[7] = v31;
  v30[8] = a6;
  swift_retain();
  swift_retain();
  swift_retain();
  v32 = sub_20A4C69D8((uint64_t)v12, (uint64_t)&unk_2545FB528, (uint64_t)v30);
  v27(v12, 1, 1, v26);
  v33 = (_QWORD *)swift_allocObject();
  v33[2] = 0;
  v33[3] = 0;
  v33[4] = v22;
  v33[5] = v29;
  v33[6] = v32;
  sub_20A4C69D8((uint64_t)v12, (uint64_t)&unk_2545FB538, (uint64_t)v33);
  return swift_release();
}

uint64_t sub_20A5056D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v36 = a3;
  v37 = a5;
  v35 = a2;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB5180);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5170);
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5168);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17, v19);
  v21 = (char *)&v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v21, a1, v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB4520);
  v22 = swift_allocObject();
  swift_defaultActor_initialize();
  v23 = v22 + *(_QWORD *)(*(_QWORD *)v22 + 96);
  v24 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
  v24(v23, 1, 1, v17);
  v25 = (_QWORD *)(v22 + *(_QWORD *)(*(_QWORD *)v22 + 104));
  *v25 = 0;
  v25[1] = 0;
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v16, v21, v17);
  v24((uint64_t)v16, 0, 1, v17);
  swift_beginAccess();
  sub_20A4CC430((uint64_t)v16, v23, &qword_253EB5170);
  swift_endAccess();
  v26 = sub_20A5B8B64();
  v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56);
  v27(v12, 1, 1, v26);
  v28 = (_QWORD *)swift_allocObject();
  v28[2] = 0;
  v28[3] = 0;
  v28[4] = v35;
  v28[5] = v22;
  swift_retain();
  v29 = sub_20A4B2644((uint64_t)v12, (uint64_t)&unk_2545FB4D0, (uint64_t)v28);
  v27(v12, 1, 1, v26);
  v30 = (_QWORD *)swift_allocObject();
  v30[2] = 0;
  v30[3] = 0;
  v30[4] = v36;
  v30[5] = a4;
  v31 = v37;
  v30[6] = v22;
  v30[7] = v31;
  v30[8] = a6;
  swift_retain();
  swift_retain();
  swift_retain();
  v32 = sub_20A4C69D8((uint64_t)v12, (uint64_t)&unk_2545FB4E0, (uint64_t)v30);
  v27(v12, 1, 1, v26);
  v33 = (_QWORD *)swift_allocObject();
  v33[2] = 0;
  v33[3] = 0;
  v33[4] = v22;
  v33[5] = v29;
  v33[6] = v32;
  sub_20A4C69D8((uint64_t)v12, (uint64_t)&unk_2545FB4F0, (uint64_t)v33);
  return swift_release();
}

uint64_t sub_20A5059BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v36 = a3;
  v37 = a5;
  v35 = a2;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB5180);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FAE20);
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9DC0);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17, v19);
  v21 = (char *)&v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v21, a1, v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB548);
  v22 = swift_allocObject();
  swift_defaultActor_initialize();
  v23 = v22 + *(_QWORD *)(*(_QWORD *)v22 + 96);
  v24 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
  v24(v23, 1, 1, v17);
  v25 = (_QWORD *)(v22 + *(_QWORD *)(*(_QWORD *)v22 + 104));
  *v25 = 0;
  v25[1] = 0;
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v16, v21, v17);
  v24((uint64_t)v16, 0, 1, v17);
  swift_beginAccess();
  sub_20A4CC430((uint64_t)v16, v23, &qword_2545FAE20);
  swift_endAccess();
  v26 = sub_20A5B8B64();
  v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56);
  v27(v12, 1, 1, v26);
  v28 = (_QWORD *)swift_allocObject();
  v28[2] = 0;
  v28[3] = 0;
  v28[4] = v35;
  v28[5] = v22;
  swift_retain();
  v29 = sub_20A4B2644((uint64_t)v12, (uint64_t)&unk_2545FB558, (uint64_t)v28);
  v27(v12, 1, 1, v26);
  v30 = (_QWORD *)swift_allocObject();
  v30[2] = 0;
  v30[3] = 0;
  v30[4] = v36;
  v30[5] = a4;
  v31 = v37;
  v30[6] = v22;
  v30[7] = v31;
  v30[8] = a6;
  swift_retain();
  swift_retain();
  swift_retain();
  v32 = sub_20A4C69D8((uint64_t)v12, (uint64_t)&unk_2545FB568, (uint64_t)v30);
  v27(v12, 1, 1, v26);
  v33 = (_QWORD *)swift_allocObject();
  v33[2] = 0;
  v33[3] = 0;
  v33[4] = v22;
  v33[5] = v29;
  v33[6] = v32;
  sub_20A4C69D8((uint64_t)v12, (uint64_t)&unk_2545FB578, (uint64_t)v33);
  return swift_release();
}

uint64_t sub_20A505CA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v36 = a3;
  v37 = a5;
  v35 = a2;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB5180);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB440);
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB448);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17, v19);
  v21 = (char *)&v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v21, a1, v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB450);
  v22 = swift_allocObject();
  swift_defaultActor_initialize();
  v23 = v22 + *(_QWORD *)(*(_QWORD *)v22 + 96);
  v24 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
  v24(v23, 1, 1, v17);
  v25 = (_QWORD *)(v22 + *(_QWORD *)(*(_QWORD *)v22 + 104));
  *v25 = 0;
  v25[1] = 0;
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v16, v21, v17);
  v24((uint64_t)v16, 0, 1, v17);
  swift_beginAccess();
  sub_20A4CC430((uint64_t)v16, v23, &qword_2545FB440);
  swift_endAccess();
  v26 = sub_20A5B8B64();
  v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56);
  v27(v12, 1, 1, v26);
  v28 = (_QWORD *)swift_allocObject();
  v28[2] = 0;
  v28[3] = 0;
  v28[4] = v35;
  v28[5] = v22;
  swift_retain();
  v29 = sub_20A4B2644((uint64_t)v12, (uint64_t)&unk_2545FB460, (uint64_t)v28);
  v27(v12, 1, 1, v26);
  v30 = (_QWORD *)swift_allocObject();
  v30[2] = 0;
  v30[3] = 0;
  v30[4] = v36;
  v30[5] = a4;
  v31 = v37;
  v30[6] = v22;
  v30[7] = v31;
  v30[8] = a6;
  swift_retain();
  swift_retain();
  swift_retain();
  v32 = sub_20A4C69D8((uint64_t)v12, (uint64_t)&unk_2545FB470, (uint64_t)v30);
  v27(v12, 1, 1, v26);
  v33 = (_QWORD *)swift_allocObject();
  v33[2] = 0;
  v33[3] = 0;
  v33[4] = v22;
  v33[5] = v29;
  v33[6] = v32;
  sub_20A4C69D8((uint64_t)v12, (uint64_t)&unk_2545FB480, (uint64_t)v33);
  return swift_release();
}

uint64_t sub_20A505F94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v36 = a3;
  v37 = a5;
  v35 = a2;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB5180);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB580);
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9DD0);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17, v19);
  v21 = (char *)&v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v21, a1, v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB588);
  v22 = swift_allocObject();
  swift_defaultActor_initialize();
  v23 = v22 + *(_QWORD *)(*(_QWORD *)v22 + 96);
  v24 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
  v24(v23, 1, 1, v17);
  v25 = (_QWORD *)(v22 + *(_QWORD *)(*(_QWORD *)v22 + 104));
  *v25 = 0;
  v25[1] = 0;
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v16, v21, v17);
  v24((uint64_t)v16, 0, 1, v17);
  swift_beginAccess();
  sub_20A4CC430((uint64_t)v16, v23, &qword_2545FB580);
  swift_endAccess();
  v26 = sub_20A5B8B64();
  v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56);
  v27(v12, 1, 1, v26);
  v28 = (_QWORD *)swift_allocObject();
  v28[2] = 0;
  v28[3] = 0;
  v28[4] = v35;
  v28[5] = v22;
  swift_retain();
  v29 = sub_20A4B2644((uint64_t)v12, (uint64_t)&unk_2545FB598, (uint64_t)v28);
  v27(v12, 1, 1, v26);
  v30 = (_QWORD *)swift_allocObject();
  v30[2] = 0;
  v30[3] = 0;
  v30[4] = v36;
  v30[5] = a4;
  v31 = v37;
  v30[6] = v22;
  v30[7] = v31;
  v30[8] = a6;
  swift_retain();
  swift_retain();
  swift_retain();
  v32 = sub_20A4C69D8((uint64_t)v12, (uint64_t)&unk_2545FB5A8, (uint64_t)v30);
  v27(v12, 1, 1, v26);
  v33 = (_QWORD *)swift_allocObject();
  v33[2] = 0;
  v33[3] = 0;
  v33[4] = v22;
  v33[5] = v29;
  v33[6] = v32;
  sub_20A4C69D8((uint64_t)v12, (uint64_t)&unk_2545FB5B8, (uint64_t)v33);
  return swift_release();
}

uint64_t sub_20A506280(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;

  v5[9] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB4F8);
  v5[10] = swift_task_alloc();
  v5[11] = swift_task_alloc();
  v6 = (_QWORD *)swift_task_alloc();
  v5[12] = v6;
  *v6 = v5;
  v6[1] = sub_20A506308;
  return sub_20A5B8BA0();
}

uint64_t sub_20A506308()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 104) = v0;
  swift_task_dealloc();
  if (!v0)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_20A506384()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;

  v2 = v0[10];
  v1 = v0[11];
  v3 = v0[9];
  v4 = v3 + *(_QWORD *)(*(_QWORD *)v3 + 96);
  swift_beginAccess();
  sub_20A47D62C(v4, v1, &qword_2545FB4F8);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB500);
  v0[14] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v0[15] = v6;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v2, 1, 1, v5);
  swift_beginAccess();
  sub_20A4CC430(v2, v4, &qword_2545FB4F8);
  swift_endAccess();
  v7 = *(void (**)(uint64_t))(v3 + *(_QWORD *)(*(_QWORD *)v3 + 104));
  if (v7)
  {
    v8 = swift_retain();
    v7(v8);
    sub_20A459818((uint64_t)v7);
  }
  return swift_task_switch();
}

uint64_t sub_20A506498()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 88);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_20A44CE2C(v3, &qword_2545FB4F8);
  }
  else
  {
    sub_20A461B10();
    *(_QWORD *)(v0 + 64) = swift_allocError();
    sub_20A5B8B04();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v1);
  }
  sub_20A5B8B94();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A506568(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;

  v5[9] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5170);
  v5[10] = swift_task_alloc();
  v5[11] = swift_task_alloc();
  v6 = (_QWORD *)swift_task_alloc();
  v5[12] = v6;
  *v6 = v5;
  v6[1] = sub_20A5065F0;
  return sub_20A5B8BA0();
}

uint64_t sub_20A5065F0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 104) = v0;
  swift_task_dealloc();
  if (!v0)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_20A50666C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;

  v2 = v0[10];
  v1 = v0[11];
  v3 = v0[9];
  v4 = v3 + *(_QWORD *)(*(_QWORD *)v3 + 96);
  swift_beginAccess();
  sub_20A47D62C(v4, v1, &qword_253EB5170);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5168);
  v0[14] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v0[15] = v6;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v2, 1, 1, v5);
  swift_beginAccess();
  sub_20A4CC430(v2, v4, &qword_253EB5170);
  swift_endAccess();
  v7 = *(void (**)(uint64_t))(v3 + *(_QWORD *)(*(_QWORD *)v3 + 104));
  if (v7)
  {
    v8 = swift_retain();
    v7(v8);
    sub_20A459818((uint64_t)v7);
  }
  return swift_task_switch();
}

uint64_t sub_20A506780()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 88);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_20A44CE2C(v3, &qword_253EB5170);
  }
  else
  {
    sub_20A461B10();
    *(_QWORD *)(v0 + 64) = swift_allocError();
    sub_20A5B8B04();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v1);
  }
  sub_20A5B8B94();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A506850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;

  v5[9] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FAE20);
  v5[10] = swift_task_alloc();
  v5[11] = swift_task_alloc();
  v6 = (_QWORD *)swift_task_alloc();
  v5[12] = v6;
  *v6 = v5;
  v6[1] = sub_20A5068D8;
  return sub_20A5B8BA0();
}

uint64_t sub_20A5068D8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 104) = v0;
  swift_task_dealloc();
  if (!v0)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_20A506954()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;

  v2 = v0[10];
  v1 = v0[11];
  v3 = v0[9];
  v4 = v3 + *(_QWORD *)(*(_QWORD *)v3 + 96);
  swift_beginAccess();
  sub_20A47D62C(v4, v1, &qword_2545FAE20);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9DC0);
  v0[14] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v0[15] = v6;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v2, 1, 1, v5);
  swift_beginAccess();
  sub_20A4CC430(v2, v4, &qword_2545FAE20);
  swift_endAccess();
  v7 = *(void (**)(uint64_t))(v3 + *(_QWORD *)(*(_QWORD *)v3 + 104));
  if (v7)
  {
    v8 = swift_retain();
    v7(v8);
    sub_20A459818((uint64_t)v7);
  }
  return swift_task_switch();
}

uint64_t sub_20A506A68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 88);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_20A44CE2C(v3, &qword_2545FAE20);
  }
  else
  {
    sub_20A461B10();
    *(_QWORD *)(v0 + 64) = swift_allocError();
    sub_20A5B8B04();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v1);
  }
  sub_20A5B8B94();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A506B38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;

  v5[9] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB440);
  v5[10] = swift_task_alloc();
  v5[11] = swift_task_alloc();
  v6 = (_QWORD *)swift_task_alloc();
  v5[12] = v6;
  *v6 = v5;
  v6[1] = sub_20A506BC0;
  return sub_20A5B8BA0();
}

uint64_t sub_20A506BC0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 104) = v0;
  swift_task_dealloc();
  if (!v0)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_20A506C3C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;

  v2 = v0[10];
  v1 = v0[11];
  v3 = v0[9];
  v4 = v3 + *(_QWORD *)(*(_QWORD *)v3 + 96);
  swift_beginAccess();
  sub_20A47D62C(v4, v1, &qword_2545FB440);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB448);
  v0[14] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v0[15] = v6;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v2, 1, 1, v5);
  swift_beginAccess();
  sub_20A4CC430(v2, v4, &qword_2545FB440);
  swift_endAccess();
  v7 = *(void (**)(uint64_t))(v3 + *(_QWORD *)(*(_QWORD *)v3 + 104));
  if (v7)
  {
    v8 = swift_retain();
    v7(v8);
    sub_20A459818((uint64_t)v7);
  }
  return swift_task_switch();
}

uint64_t sub_20A506D50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 88);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_20A44CE2C(v3, &qword_2545FB440);
  }
  else
  {
    sub_20A461B10();
    *(_QWORD *)(v0 + 64) = swift_allocError();
    sub_20A5B8B04();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v1);
  }
  sub_20A5B8B94();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A506E20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;

  v5[9] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB580);
  v5[10] = swift_task_alloc();
  v5[11] = swift_task_alloc();
  v6 = (_QWORD *)swift_task_alloc();
  v5[12] = v6;
  *v6 = v5;
  v6[1] = sub_20A506EA8;
  return sub_20A5B8BA0();
}

uint64_t sub_20A506EA8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 104) = v0;
  swift_task_dealloc();
  if (!v0)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_20A506F24()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;

  v2 = v0[10];
  v1 = v0[11];
  v3 = v0[9];
  v4 = v3 + *(_QWORD *)(*(_QWORD *)v3 + 96);
  swift_beginAccess();
  sub_20A47D62C(v4, v1, &qword_2545FB580);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9DD0);
  v0[14] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v0[15] = v6;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v2, 1, 1, v5);
  swift_beginAccess();
  sub_20A4CC430(v2, v4, &qword_2545FB580);
  swift_endAccess();
  v7 = *(void (**)(uint64_t))(v3 + *(_QWORD *)(*(_QWORD *)v3 + 104));
  if (v7)
  {
    v8 = swift_retain();
    v7(v8);
    sub_20A459818((uint64_t)v7);
  }
  return swift_task_switch();
}

uint64_t sub_20A507038()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 88);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_20A44CE2C(v3, &qword_2545FB580);
  }
  else
  {
    sub_20A461B10();
    *(_QWORD *)(v0 + 64) = swift_allocError();
    sub_20A5B8B04();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v1);
  }
  sub_20A5B8B94();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A507108(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;
  _QWORD *v11;
  uint64_t (*v13)(_QWORD *);

  v8[34] = a7;
  v8[35] = a8;
  v8[33] = a6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB4F8);
  v8[36] = swift_task_alloc();
  v8[37] = swift_task_alloc();
  v8[38] = swift_task_alloc();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB500);
  v8[39] = v10;
  v8[40] = *(_QWORD *)(v10 - 8);
  v8[41] = swift_task_alloc();
  v13 = (uint64_t (*)(_QWORD *))((char *)a4 + *a4);
  v11 = (_QWORD *)swift_task_alloc();
  v8[42] = v11;
  *v11 = v8;
  v11[1] = sub_20A5071EC;
  return v13(v8 + 2);
}

uint64_t sub_20A5071EC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 344) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A507254()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;

  v1 = v0[39];
  v2 = v0[40];
  v4 = v0[37];
  v3 = v0[38];
  v5 = v0[33];
  v6 = v5 + *(_QWORD *)(*(_QWORD *)v5 + 96);
  swift_beginAccess();
  sub_20A47D62C(v6, v3, &qword_2545FB4F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v4, 1, 1, v1);
  swift_beginAccess();
  sub_20A4CC430(v4, v6, &qword_2545FB4F8);
  swift_endAccess();
  v7 = *(void (**)(uint64_t))(v5 + *(_QWORD *)(*(_QWORD *)v5 + 104));
  if (v7)
  {
    v8 = swift_retain();
    v7(v8);
    sub_20A459818((uint64_t)v7);
  }
  return swift_task_switch();
}

uint64_t sub_20A50735C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t (*v21)(uint64_t);

  v1 = *(_QWORD *)(v0 + 312);
  v2 = *(_QWORD *)(v0 + 320);
  v3 = *(_QWORD *)(v0 + 304);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v4 = *(int **)(v0 + 272);
    sub_20A44CE2C(v3, &qword_2545FB4F8);
    v21 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 352) = v5;
    *v5 = v0;
    v5[1] = sub_20A507700;
    return v21(v0 + 16);
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 328);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v7, v3, v1);
    v8 = *(_QWORD *)(v0 + 16);
    v9 = *(_QWORD *)(v0 + 24);
    v10 = *(_QWORD *)(v0 + 32);
    v11 = *(_QWORD *)(v0 + 40);
    v12 = *(_QWORD *)(v0 + 48);
    v13 = *(_QWORD *)(v0 + 56);
    v14 = *(_DWORD *)(v0 + 64);
    v15 = *(_QWORD *)(v0 + 72);
    v16 = *(_BYTE *)(v0 + 80);
    *(_QWORD *)(v0 + 88) = v8;
    *(_QWORD *)(v0 + 96) = v9;
    *(_QWORD *)(v0 + 104) = v10;
    *(_QWORD *)(v0 + 112) = v11;
    *(_QWORD *)(v0 + 120) = v12;
    *(_QWORD *)(v0 + 128) = v13;
    *(_DWORD *)(v0 + 136) = v14;
    *(_QWORD *)(v0 + 144) = v15;
    *(_BYTE *)(v0 + 152) = v16;
    sub_20A459690(v8, v9);
    sub_20A45964C(v10, v11);
    sub_20A459690(v12, v13);
    sub_20A5B8B10();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v7, v1);
    v18 = *(_QWORD *)(v0 + 32);
    v17 = *(_QWORD *)(v0 + 40);
    v19 = *(_QWORD *)(v0 + 48);
    v20 = *(_QWORD *)(v0 + 56);
    sub_20A44CFC4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
    sub_20A44BD90(v18, v17);
    sub_20A44CFC4(v19, v20);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_20A50750C()
{
  return swift_task_switch();
}

uint64_t sub_20A507520()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;

  v1 = v0[39];
  v2 = v0[40];
  v4 = v0[36];
  v3 = v0[37];
  v5 = v0[33];
  v6 = v5 + *(_QWORD *)(*(_QWORD *)v5 + 96);
  swift_beginAccess();
  sub_20A47D62C(v6, v4, &qword_2545FB4F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v3, 1, 1, v1);
  swift_beginAccess();
  sub_20A4CC430(v3, v6, &qword_2545FB4F8);
  swift_endAccess();
  v7 = *(void (**)(uint64_t))(v5 + *(_QWORD *)(*(_QWORD *)v5 + 104));
  if (v7)
  {
    v8 = swift_retain();
    v7(v8);
    sub_20A459818((uint64_t)v7);
  }
  return swift_task_switch();
}

uint64_t sub_20A507628()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;

  v1 = *(_QWORD *)(v0 + 312);
  v2 = *(_QWORD *)(v0 + 320);
  v3 = *(_QWORD *)(v0 + 288);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {

    sub_20A44CE2C(v3, &qword_2545FB4F8);
  }
  else
  {
    v4 = *(void **)(v0 + 344);
    *(_QWORD *)(v0 + 256) = v4;
    v5 = v4;
    sub_20A5B8B04();

    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v1);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A507700()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A507754()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = *(_QWORD *)(v0 + 32);
  v1 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 56);
  sub_20A44CFC4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  sub_20A44BD90(v2, v1);
  sub_20A44CFC4(v3, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A5077D4(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;
  _QWORD *v11;
  uint64_t (*v13)(_QWORD *);

  v8[20] = a7;
  v8[21] = a8;
  v8[19] = a6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5170);
  v8[22] = swift_task_alloc();
  v8[23] = swift_task_alloc();
  v8[24] = swift_task_alloc();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5168);
  v8[25] = v10;
  v8[26] = *(_QWORD *)(v10 - 8);
  v8[27] = swift_task_alloc();
  v13 = (uint64_t (*)(_QWORD *))((char *)a4 + *a4);
  v11 = (_QWORD *)swift_task_alloc();
  v8[28] = v11;
  *v11 = v8;
  v11[1] = sub_20A5078B8;
  return v13(v8 + 16);
}

uint64_t sub_20A5078B8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 232) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A507920()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;

  v1 = v0[25];
  v2 = v0[26];
  v4 = v0[23];
  v3 = v0[24];
  v5 = v0[19];
  v6 = v5 + *(_QWORD *)(*(_QWORD *)v5 + 96);
  swift_beginAccess();
  sub_20A47D62C(v6, v3, &qword_253EB5170);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v4, 1, 1, v1);
  swift_beginAccess();
  sub_20A4CC430(v4, v6, &qword_253EB5170);
  swift_endAccess();
  v7 = *(void (**)(uint64_t))(v5 + *(_QWORD *)(*(_QWORD *)v5 + 104));
  if (v7)
  {
    v8 = swift_retain();
    v7(v8);
    sub_20A459818((uint64_t)v7);
  }
  return swift_task_switch();
}

uint64_t sub_20A507A28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);

  v1 = *(_QWORD *)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 192);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v4 = *(int **)(v0 + 160);
    sub_20A44CE2C(v3, &qword_253EB5170);
    v9 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 240) = v5;
    *v5 = v0;
    v5[1] = sub_20A507D54;
    return v9(v0 + 128);
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 216);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v7, v3, v1);
    v8 = *(_QWORD *)(v0 + 136);
    *(_QWORD *)(v0 + 112) = *(_QWORD *)(v0 + 128);
    *(_QWORD *)(v0 + 120) = v8;
    swift_bridgeObjectRetain();
    sub_20A5B8B10();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v7, v1);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_20A507B60()
{
  return swift_task_switch();
}

uint64_t sub_20A507B74()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;

  v1 = v0[25];
  v2 = v0[26];
  v4 = v0[22];
  v3 = v0[23];
  v5 = v0[19];
  v6 = v5 + *(_QWORD *)(*(_QWORD *)v5 + 96);
  swift_beginAccess();
  sub_20A47D62C(v6, v4, &qword_253EB5170);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v3, 1, 1, v1);
  swift_beginAccess();
  sub_20A4CC430(v3, v6, &qword_253EB5170);
  swift_endAccess();
  v7 = *(void (**)(uint64_t))(v5 + *(_QWORD *)(*(_QWORD *)v5 + 104));
  if (v7)
  {
    v8 = swift_retain();
    v7(v8);
    sub_20A459818((uint64_t)v7);
  }
  return swift_task_switch();
}

uint64_t sub_20A507C7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;

  v1 = *(_QWORD *)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 176);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {

    sub_20A44CE2C(v3, &qword_253EB5170);
  }
  else
  {
    v4 = *(void **)(v0 + 232);
    *(_QWORD *)(v0 + 144) = v4;
    v5 = v4;
    sub_20A5B8B04();

    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v1);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A507D54()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A507DA8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A507E08(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;
  _QWORD *v11;
  uint64_t (*v13)(void);

  v8[16] = a7;
  v8[17] = a8;
  v8[15] = a6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FAE20);
  v8[18] = swift_task_alloc();
  v8[19] = swift_task_alloc();
  v8[20] = swift_task_alloc();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9DC0);
  v8[21] = v10;
  v8[22] = *(_QWORD *)(v10 - 8);
  v8[23] = swift_task_alloc();
  v13 = (uint64_t (*)(void))((char *)a4 + *a4);
  v11 = (_QWORD *)swift_task_alloc();
  v8[24] = v11;
  *v11 = v8;
  v11[1] = sub_20A507EDC;
  return v13();
}

uint64_t sub_20A507EDC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 200) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A507F44()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;

  v1 = v0[21];
  v2 = v0[22];
  v4 = v0[19];
  v3 = v0[20];
  v5 = v0[15];
  v6 = v5 + *(_QWORD *)(*(_QWORD *)v5 + 96);
  swift_beginAccess();
  sub_20A47D62C(v6, v3, &qword_2545FAE20);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v4, 1, 1, v1);
  swift_beginAccess();
  sub_20A4CC430(v4, v6, &qword_2545FAE20);
  swift_endAccess();
  v7 = *(void (**)(uint64_t))(v5 + *(_QWORD *)(*(_QWORD *)v5 + 104));
  if (v7)
  {
    v8 = swift_retain();
    v7(v8);
    sub_20A459818((uint64_t)v7);
  }
  return swift_task_switch();
}

uint64_t sub_20A50804C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t (*v8)(void);

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 160);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v4 = *(int **)(v0 + 128);
    sub_20A44CE2C(v3, &qword_2545FAE20);
    v8 = (uint64_t (*)(void))((char *)v4 + *v4);
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 208) = v5;
    *v5 = v0;
    v5[1] = sub_20A508350;
    return v8();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 184);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v7, v3, v1);
    sub_20A5B8B10();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v7, v1);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_20A50815C()
{
  return swift_task_switch();
}

uint64_t sub_20A508170()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;

  v1 = v0[21];
  v2 = v0[22];
  v4 = v0[18];
  v3 = v0[19];
  v5 = v0[15];
  v6 = v5 + *(_QWORD *)(*(_QWORD *)v5 + 96);
  swift_beginAccess();
  sub_20A47D62C(v6, v4, &qword_2545FAE20);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v3, 1, 1, v1);
  swift_beginAccess();
  sub_20A4CC430(v3, v6, &qword_2545FAE20);
  swift_endAccess();
  v7 = *(void (**)(uint64_t))(v5 + *(_QWORD *)(*(_QWORD *)v5 + 104));
  if (v7)
  {
    v8 = swift_retain();
    v7(v8);
    sub_20A459818((uint64_t)v7);
  }
  return swift_task_switch();
}

uint64_t sub_20A508278()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 144);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {

    sub_20A44CE2C(v3, &qword_2545FAE20);
  }
  else
  {
    v4 = *(void **)(v0 + 200);
    *(_QWORD *)(v0 + 112) = v4;
    v5 = v4;
    sub_20A5B8B04();

    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v1);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A508350()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A5083A4()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A5083FC(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;
  _QWORD *v11;
  uint64_t (*v13)(_QWORD *);

  v8[18] = a7;
  v8[19] = a8;
  v8[17] = a6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB440);
  v8[20] = swift_task_alloc();
  v8[21] = swift_task_alloc();
  v8[22] = swift_task_alloc();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB448);
  v8[23] = v10;
  v8[24] = *(_QWORD *)(v10 - 8);
  v8[25] = swift_task_alloc();
  v13 = (uint64_t (*)(_QWORD *))((char *)a4 + *a4);
  v11 = (_QWORD *)swift_task_alloc();
  v8[26] = v11;
  *v11 = v8;
  v11[1] = sub_20A5084E0;
  return v13(v8 + 15);
}

uint64_t sub_20A5084E0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 216) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A508548()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;

  v1 = v0[23];
  v2 = v0[24];
  v4 = v0[21];
  v3 = v0[22];
  v5 = v0[17];
  v6 = v5 + *(_QWORD *)(*(_QWORD *)v5 + 96);
  swift_beginAccess();
  sub_20A47D62C(v6, v3, &qword_2545FB440);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v4, 1, 1, v1);
  swift_beginAccess();
  sub_20A4CC430(v4, v6, &qword_2545FB440);
  swift_endAccess();
  v7 = *(void (**)(uint64_t))(v5 + *(_QWORD *)(*(_QWORD *)v5 + 104));
  if (v7)
  {
    v8 = swift_retain();
    v7(v8);
    sub_20A459818((uint64_t)v7);
  }
  return swift_task_switch();
}

uint64_t sub_20A508650()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);

  v1 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 176);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v4 = *(int **)(v0 + 144);
    sub_20A44CE2C(v3, &qword_2545FB440);
    v8 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 224) = v5;
    *v5 = v0;
    v5[1] = sub_20A508978;
    return v8(v0 + 120);
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 200);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v7, v3, v1);
    *(_QWORD *)(v0 + 128) = *(_QWORD *)(v0 + 120);
    swift_bridgeObjectRetain();
    sub_20A5B8B10();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v7, v1);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_20A508784()
{
  return swift_task_switch();
}

uint64_t sub_20A508798()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;

  v1 = v0[23];
  v2 = v0[24];
  v4 = v0[20];
  v3 = v0[21];
  v5 = v0[17];
  v6 = v5 + *(_QWORD *)(*(_QWORD *)v5 + 96);
  swift_beginAccess();
  sub_20A47D62C(v6, v4, &qword_2545FB440);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v3, 1, 1, v1);
  swift_beginAccess();
  sub_20A4CC430(v3, v6, &qword_2545FB440);
  swift_endAccess();
  v7 = *(void (**)(uint64_t))(v5 + *(_QWORD *)(*(_QWORD *)v5 + 104));
  if (v7)
  {
    v8 = swift_retain();
    v7(v8);
    sub_20A459818((uint64_t)v7);
  }
  return swift_task_switch();
}

uint64_t sub_20A5088A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;

  v1 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 160);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {

    sub_20A44CE2C(v3, &qword_2545FB440);
  }
  else
  {
    v4 = *(void **)(v0 + 216);
    *(_QWORD *)(v0 + 112) = v4;
    v5 = v4;
    sub_20A5B8B04();

    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v1);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A508978()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A5089CC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A508A2C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;
  _QWORD *v11;
  uint64_t (*v13)(_QWORD *);

  v8[20] = a7;
  v8[21] = a8;
  v8[19] = a6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB580);
  v8[22] = swift_task_alloc();
  v8[23] = swift_task_alloc();
  v8[24] = swift_task_alloc();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9DD0);
  v8[25] = v10;
  v8[26] = *(_QWORD *)(v10 - 8);
  v8[27] = swift_task_alloc();
  v13 = (uint64_t (*)(_QWORD *))((char *)a4 + *a4);
  v11 = (_QWORD *)swift_task_alloc();
  v8[28] = v11;
  *v11 = v8;
  v11[1] = sub_20A508B10;
  return v13(v8 + 16);
}

uint64_t sub_20A508B10()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 232) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A508B78()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;

  v1 = v0[25];
  v2 = v0[26];
  v4 = v0[23];
  v3 = v0[24];
  v5 = v0[19];
  v6 = v5 + *(_QWORD *)(*(_QWORD *)v5 + 96);
  swift_beginAccess();
  sub_20A47D62C(v6, v3, &qword_2545FB580);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v4, 1, 1, v1);
  swift_beginAccess();
  sub_20A4CC430(v4, v6, &qword_2545FB580);
  swift_endAccess();
  v7 = *(void (**)(uint64_t))(v5 + *(_QWORD *)(*(_QWORD *)v5 + 104));
  if (v7)
  {
    v8 = swift_retain();
    v7(v8);
    sub_20A459818((uint64_t)v7);
  }
  return swift_task_switch();
}

uint64_t sub_20A508C80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t (*v10)(uint64_t);

  v1 = *(_QWORD *)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 192);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v4 = *(int **)(v0 + 160);
    sub_20A44CE2C(v3, &qword_2545FB580);
    v10 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 240) = v5;
    *v5 = v0;
    v5[1] = sub_20A508FAC;
    return v10(v0 + 128);
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 216);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v7, v3, v1);
    v8 = *(_QWORD *)(v0 + 128);
    v9 = *(_QWORD *)(v0 + 136);
    *(_QWORD *)(v0 + 112) = v8;
    *(_QWORD *)(v0 + 120) = v9;
    sub_20A45964C(v8, v9);
    sub_20A5B8B10();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v7, v1);
    sub_20A44BD90(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_20A508DB8()
{
  return swift_task_switch();
}

uint64_t sub_20A508DCC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;

  v1 = v0[25];
  v2 = v0[26];
  v4 = v0[22];
  v3 = v0[23];
  v5 = v0[19];
  v6 = v5 + *(_QWORD *)(*(_QWORD *)v5 + 96);
  swift_beginAccess();
  sub_20A47D62C(v6, v4, &qword_2545FB580);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v3, 1, 1, v1);
  swift_beginAccess();
  sub_20A4CC430(v3, v6, &qword_2545FB580);
  swift_endAccess();
  v7 = *(void (**)(uint64_t))(v5 + *(_QWORD *)(*(_QWORD *)v5 + 104));
  if (v7)
  {
    v8 = swift_retain();
    v7(v8);
    sub_20A459818((uint64_t)v7);
  }
  return swift_task_switch();
}

uint64_t sub_20A508ED4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;

  v1 = *(_QWORD *)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 176);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {

    sub_20A44CE2C(v3, &qword_2545FB580);
  }
  else
  {
    v4 = *(void **)(v0 + 232);
    *(_QWORD *)(v0 + 144) = v4;
    v5 = v4;
    sub_20A5B8B04();

    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v1);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A508FAC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A509000()
{
  uint64_t v0;

  sub_20A44BD90(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A509060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  return swift_task_switch();
}

uint64_t sub_20A50907C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[3];
  v2 = v0[4];
  v3 = swift_allocObject();
  v0[5] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  swift_retain();
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_20A5090EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = (uint64_t *)(*(_QWORD *)(v0 + 16) + *(_QWORD *)(**(_QWORD **)(v0 + 16) + 104));
  v3 = *v2;
  *v2 = (uint64_t)sub_20A514398;
  v2[1] = v1;
  sub_20A459818(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A50913C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  return swift_task_switch();
}

uint64_t sub_20A509158()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[3];
  v2 = v0[4];
  v3 = swift_allocObject();
  v0[5] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  swift_retain();
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_20A5091C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  return swift_task_switch();
}

uint64_t sub_20A5091E4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[3];
  v2 = v0[4];
  v3 = swift_allocObject();
  v0[5] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  swift_retain();
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_20A509254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  return swift_task_switch();
}

uint64_t sub_20A509270()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[3];
  v2 = v0[4];
  v3 = swift_allocObject();
  v0[5] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  swift_retain();
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_20A5092E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = (uint64_t *)(*(_QWORD *)(v0 + 16) + *(_QWORD *)(**(_QWORD **)(v0 + 16) + 104));
  v3 = *v2;
  *v2 = (uint64_t)sub_20A461B08;
  v2[1] = v1;
  sub_20A459818(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A509330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  return swift_task_switch();
}

uint64_t sub_20A50934C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[3];
  v2 = v0[4];
  v3 = swift_allocObject();
  v0[5] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  swift_retain();
  swift_retain();
  return swift_task_switch();
}

uint64_t GeoCoderStats.addressesRequested.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t GeoCoderStats.addressesRequested.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*GeoCoderStats.addressesRequested.modify())()
{
  return nullsub_1;
}

uint64_t GeoCoderStats.resultFoundInMemoryCache.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t GeoCoderStats.resultFoundInMemoryCache.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*GeoCoderStats.resultFoundInMemoryCache.modify())()
{
  return nullsub_1;
}

uint64_t GeoCoderStats.addressFoundInPersistentCache.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t GeoCoderStats.addressFoundInPersistentCache.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t (*GeoCoderStats.addressFoundInPersistentCache.modify())()
{
  return nullsub_1;
}

uint64_t GeoCoderStats.addressAddedToPersistentCache.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t GeoCoderStats.addressAddedToPersistentCache.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = result;
  return result;
}

uint64_t (*GeoCoderStats.addressAddedToPersistentCache.modify())()
{
  return nullsub_1;
}

uint64_t GeoCoderStats.coreLocationAPICalls.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t GeoCoderStats.coreLocationAPICalls.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = result;
  return result;
}

uint64_t (*GeoCoderStats.coreLocationAPICalls.modify())()
{
  return nullsub_1;
}

uint64_t GeoCoderStats.addressNotFoundResultFoundInPersistentCache.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t GeoCoderStats.addressNotFoundResultFoundInPersistentCache.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = result;
  return result;
}

uint64_t (*GeoCoderStats.addressNotFoundResultFoundInPersistentCache.modify())()
{
  return nullsub_1;
}

uint64_t GeoCoderStats.addressNotFoundResultAddedToPersistentCache.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t GeoCoderStats.addressNotFoundResultAddedToPersistentCache.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 48) = result;
  return result;
}

uint64_t (*GeoCoderStats.addressNotFoundResultAddedToPersistentCache.modify())()
{
  return nullsub_1;
}

uint64_t GeoCoderStats.otherErrorResult.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 56);
}

uint64_t GeoCoderStats.otherErrorResult.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = result;
  return result;
}

uint64_t (*GeoCoderStats.otherErrorResult.modify())()
{
  return nullsub_1;
}

id sub_20A5094BC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  v4 = v0[3];
  v6 = v0[4];
  v5 = v0[5];
  v7 = v0[7];
  v8 = v0[9];
  v25 = v0[6];
  v26 = v0[8];
  v27 = v0[10];
  v28 = v0[12];
  v29 = v0[11];
  v30 = v0[13];
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBAD78]), sel_init);
  if (v2)
  {
    sub_20A50970C(v1, v2);
    if (v10)
    {
      v11 = (void *)sub_20A5B88F4();
      swift_bridgeObjectRelease();
      objc_msgSend(v9, sel_setStreet_, v11, v25, v26, v27, v28);

    }
  }
  if (v4)
  {
    sub_20A50970C(v3, v4);
    if (v12)
    {
      v13 = (void *)sub_20A5B88F4();
      swift_bridgeObjectRelease();
      objc_msgSend(v9, sel_setSubLocality_, v13);

    }
  }
  if (v5)
  {
    sub_20A50970C(v6, v5);
    if (v14)
    {
      v15 = (void *)sub_20A5B88F4();
      swift_bridgeObjectRelease();
      objc_msgSend(v9, sel_setCity_, v15);

    }
  }
  if (v7)
  {
    sub_20A50970C(v25, v7);
    if (v16)
    {
      v17 = (void *)sub_20A5B88F4();
      swift_bridgeObjectRelease();
      objc_msgSend(v9, sel_setState_, v17);

    }
  }
  if (v8)
  {
    sub_20A50970C(v26, v8);
    if (v18)
    {
      v19 = (void *)sub_20A5B88F4();
      swift_bridgeObjectRelease();
      objc_msgSend(v9, sel_setPostalCode_, v19);

    }
  }
  if (v29)
  {
    sub_20A50970C(v27, v29);
    if (v20)
    {
      v21 = (void *)sub_20A5B88F4();
      swift_bridgeObjectRelease();
      objc_msgSend(v9, sel_setCountry_, v21);

    }
  }
  if (v30)
  {
    sub_20A50970C(v28, v30);
    if (v22)
    {
      v23 = (void *)sub_20A5B88F4();
      swift_bridgeObjectRelease();
      objc_msgSend(v9, sel_setISOCountryCode_, v23);

    }
  }
  return v9;
}

uint64_t sub_20A50970C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD v14[2];

  v4 = sub_20A5B82A0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[0] = a1;
  v14[1] = a2;
  sub_20A5B8294();
  sub_20A49DBC0();
  v9 = sub_20A5B8D68();
  v11 = v10;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  v12 = HIBYTE(v11) & 0xF;
  if ((v11 & 0x2000000000000000) == 0)
    v12 = v9 & 0xFFFFFFFFFFFFLL;
  if (!v12)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v9;
}

uint64_t GeoCoderAddress.hash(into:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0[3];
  v2 = v0[5];
  v3 = v0[7];
  v4 = v0[9];
  v5 = v0[11];
  v6 = v0[13];
  if (v0[1])
  {
    sub_20A5B92B4();
    swift_bridgeObjectRetain();
    sub_20A5B8978();
    swift_bridgeObjectRelease();
    if (v1)
      goto LABEL_3;
  }
  else
  {
    sub_20A5B92B4();
    if (v1)
    {
LABEL_3:
      sub_20A5B92B4();
      swift_bridgeObjectRetain();
      sub_20A5B8978();
      swift_bridgeObjectRelease();
      if (v2)
        goto LABEL_4;
      goto LABEL_11;
    }
  }
  sub_20A5B92B4();
  if (v2)
  {
LABEL_4:
    sub_20A5B92B4();
    swift_bridgeObjectRetain();
    sub_20A5B8978();
    swift_bridgeObjectRelease();
    if (v3)
      goto LABEL_5;
    goto LABEL_12;
  }
LABEL_11:
  sub_20A5B92B4();
  if (v3)
  {
LABEL_5:
    sub_20A5B92B4();
    swift_bridgeObjectRetain();
    sub_20A5B8978();
    swift_bridgeObjectRelease();
    if (v4)
      goto LABEL_6;
    goto LABEL_13;
  }
LABEL_12:
  sub_20A5B92B4();
  if (v4)
  {
LABEL_6:
    sub_20A5B92B4();
    swift_bridgeObjectRetain();
    sub_20A5B8978();
    swift_bridgeObjectRelease();
    if (v5)
      goto LABEL_7;
LABEL_14:
    sub_20A5B92B4();
    if (v6)
      goto LABEL_8;
    return sub_20A5B92B4();
  }
LABEL_13:
  sub_20A5B92B4();
  if (!v5)
    goto LABEL_14;
LABEL_7:
  sub_20A5B92B4();
  swift_bridgeObjectRetain();
  sub_20A5B8978();
  swift_bridgeObjectRelease();
  if (v6)
  {
LABEL_8:
    sub_20A5B92B4();
    swift_bridgeObjectRetain();
    sub_20A5B8978();
    return swift_bridgeObjectRelease();
  }
  return sub_20A5B92B4();
}

uint64_t GeoCoderAddress.hashValue.getter()
{
  sub_20A5B929C();
  GeoCoderAddress.hash(into:)();
  return sub_20A5B92CC();
}

uint64_t sub_20A509A64()
{
  sub_20A5B929C();
  GeoCoderAddress.hash(into:)();
  return sub_20A5B92CC();
}

uint64_t sub_20A509ACC()
{
  sub_20A5B929C();
  GeoCoderAddress.hash(into:)();
  return sub_20A5B92CC();
}

uint64_t sub_20A509B30()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for GeoCoder.SharedCoordinateMap();
  v0 = swift_allocObject();
  result = swift_defaultActor_initialize();
  *(_QWORD *)(v0 + 112) = MEMORY[0x24BEE4B00];
  qword_2545FB3B8 = v0;
  return result;
}

__n128 sub_20A509B78@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __int128 v4;
  __n128 result;
  __int128 v6;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_OWORD *)(v3 + 184);
  *(_OWORD *)a2 = *(_OWORD *)(v3 + 168);
  *(_OWORD *)(a2 + 16) = v4;
  result = *(__n128 *)(v3 + 200);
  v6 = *(_OWORD *)(v3 + 216);
  *(__n128 *)(a2 + 32) = result;
  *(_OWORD *)(a2 + 48) = v6;
  return result;
}

__n128 sub_20A509BCC(__int128 *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 result;
  __n128 v6;
  __int128 v7;
  __int128 v8;

  v7 = a1[1];
  v8 = *a1;
  v6 = (__n128)a1[2];
  v2 = *((_QWORD *)a1 + 6);
  v3 = *((_QWORD *)a1 + 7);
  v4 = *a2;
  swift_beginAccess();
  *(_OWORD *)(v4 + 168) = v8;
  *(_OWORD *)(v4 + 184) = v7;
  result = v6;
  *(__n128 *)(v4 + 200) = v6;
  *(_QWORD *)(v4 + 216) = v2;
  *(_QWORD *)(v4 + 224) = v3;
  return result;
}

__n128 sub_20A509C40@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v3;
  __n128 result;
  __int128 v5;

  swift_beginAccess();
  v3 = *(_OWORD *)(v1 + 184);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 168);
  *(_OWORD *)(a1 + 16) = v3;
  result = *(__n128 *)(v1 + 200);
  v5 = *(_OWORD *)(v1 + 216);
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v5;
  return result;
}

uint64_t GeoCoder.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_BYTE *)(v0 + 152) = 0;
  *(_QWORD *)(v0 + 160) = MEMORY[0x24BEE4AF8];
  *(_OWORD *)(v0 + 168) = 0u;
  *(_OWORD *)(v0 + 184) = 0u;
  *(_OWORD *)(v0 + 200) = 0u;
  *(_OWORD *)(v0 + 216) = 0u;
  if (qword_2545F9958 != -1)
    swift_once();
  v1 = qword_2545F9CD8;
  *(_QWORD *)(v0 + 136) = type metadata accessor for DIPODNHelper();
  *(_QWORD *)(v0 + 144) = &off_24C317378;
  *(_QWORD *)(v0 + 112) = v1;
  swift_retain();
  return v0;
}

uint64_t GeoCoder.init()()
{
  uint64_t v0;
  uint64_t v1;

  swift_defaultActor_initialize();
  *(_BYTE *)(v0 + 152) = 0;
  *(_QWORD *)(v0 + 160) = MEMORY[0x24BEE4AF8];
  *(_OWORD *)(v0 + 168) = 0u;
  *(_OWORD *)(v0 + 184) = 0u;
  *(_OWORD *)(v0 + 200) = 0u;
  *(_OWORD *)(v0 + 216) = 0u;
  if (qword_2545F9958 != -1)
    swift_once();
  v1 = qword_2545F9CD8;
  *(_QWORD *)(v0 + 136) = type metadata accessor for DIPODNHelper();
  *(_QWORD *)(v0 + 144) = &off_24C317378;
  *(_QWORD *)(v0 + 112) = v1;
  swift_retain();
  return v0;
}

uint64_t sub_20A509DD0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[9] = a1;
  v2[10] = v1;
  v2[11] = type metadata accessor for ODISignpost();
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A509E3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  void *v5;
  int v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if (qword_2545F99F0 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 96);
  v2 = qword_254610138;
  v3 = unk_254610140;
  v4 = byte_254610148;
  v5 = (void *)qword_254610150;
  v6 = byte_254610158;
  *(_QWORD *)(v1 + 32) = "enableTelemetry=YES";
  *(_QWORD *)(v1 + 40) = 19;
  *(_BYTE *)(v1 + 48) = 2;
  *(_QWORD *)v1 = v2;
  *(_QWORD *)(v1 + 8) = v3;
  *(_BYTE *)(v1 + 16) = v4;
  *(_QWORD *)(v1 + 24) = v5;
  v7 = v5;
  sub_20A5B87D4();
  sub_20A5B8CFC();
  if (v6 == 1)
    sub_20A5B87BC();
  else
    sub_20A5B87C8();
  v9 = *(_QWORD *)(v0 + 96);
  v8 = *(_QWORD *)(v0 + 104);
  v10 = *(_QWORD *)(v0 + 72);

  sub_20A4595B4(v9, v8);
  if (*(_QWORD *)(sub_20A5051A0(v10) + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA038);
    v11 = sub_20A5B8FF0();
  }
  else
  {
    v11 = MEMORY[0x24BEE4B00];
  }
  v20 = v11;
  v12 = swift_bridgeObjectRetain();
  sub_20A511670(v12, 1, &v20);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 112) = v20;
  v13 = swift_retain();
  sub_20A5411D4(v13);
  v15 = v14;
  *(_QWORD *)(v0 + 120) = v14;
  if ((v14 & 0xC000000000000001) != 0)
  {
    if (sub_20A5B8DE0())
    {
LABEL_11:
      v16 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 128) = v16;
      *v16 = v0;
      v16[1] = sub_20A50A128;
      return sub_20A50A74C(v15);
    }
  }
  else if (*(_QWORD *)(v14 + 16))
  {
    goto LABEL_11;
  }
  swift_bridgeObjectRelease();
  swift_release();
  v18 = sub_20A479A80(MEMORY[0x24BEE4AF8]);
  v19 = *(_QWORD *)(v0 + 104);
  sub_20A5B8CF0();
  sub_20A5B87C8();
  sub_20A4595F8(v19);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(unint64_t))(v0 + 8))(v18);
}

uint64_t sub_20A50A128()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_20A50A188()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  _QWORD *v12;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_BYTE *)(v1 + 32);
  *(_BYTE *)(v0 + 176) = v2;
  v3 = -1;
  v4 = -1 << v2;
  v5 = *(_QWORD *)(v1 + 64);
  if (-v4 < 64)
    v3 = ~(-1 << -(char)v4);
  *(_QWORD *)(v0 + 136) = MEMORY[0x24BEE4B00];
  v6 = v3 & v5;
  if (v6)
  {
    v7 = 0;
    v8 = __clz(__rbit64(v6));
    v9 = (v6 - 1) & v6;
LABEL_5:
    *(_QWORD *)(v0 + 144) = v7;
    *(_QWORD *)(v0 + 152) = v9;
    *(_BYTE *)(v0 + 177) = *(_BYTE *)(*(_QWORD *)(v1 + 48) + v8);
    v10 = *(void **)(*(_QWORD *)(v1 + 56) + 8 * v8);
    *(_QWORD *)(v0 + 160) = v10;
    v11 = v10;
    v12 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 168) = v12;
    *v12 = v0;
    v12[1] = sub_20A50A370;
    return sub_20A50F7E0((uint64_t)v11);
  }
  v14 = 63 - v4;
  if (v14 > 0x7F)
  {
    v15 = *(_QWORD *)(v1 + 72);
    if (v15)
    {
      v7 = 1;
LABEL_9:
      v9 = (v15 - 1) & v15;
      v8 = __clz(__rbit64(v15)) + (v7 << 6);
      goto LABEL_5;
    }
    if (v14 >= 0xC0)
    {
      v15 = *(_QWORD *)(v1 + 80);
      if (v15)
      {
        v7 = 2;
        goto LABEL_9;
      }
      if (v14 >= 0x100)
      {
        v15 = *(_QWORD *)(v1 + 88);
        if (v15)
        {
          v7 = 3;
          goto LABEL_9;
        }
        if (v14 >= 0x140)
        {
          v15 = *(_QWORD *)(v1 + 96);
          if (v15)
          {
            v7 = 4;
            goto LABEL_9;
          }
          v16 = 0;
          v17 = v14 >> 6;
          if (v17 <= 5)
            v17 = 5;
          v18 = v17 - 5;
          while (v18 != v16)
          {
            v15 = *(_QWORD *)(v1 + 104 + 8 * v16++);
            if (v15)
            {
              v7 = v16 + 4;
              goto LABEL_9;
            }
          }
        }
      }
    }
  }
  swift_release();
  v19 = *(_QWORD *)(v0 + 136);
  v20 = *(_QWORD *)(v0 + 104);
  sub_20A5B8CF0();
  sub_20A5B87C8();
  sub_20A4595F8(v20);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v19);
}

uint64_t sub_20A50A370(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v4;

  v4 = *v3;
  *(_BYTE *)(v4 + 40) = a3;
  *(_QWORD *)(v4 + 24) = a1;
  *(_QWORD *)(v4 + 32) = a2;
  *(_QWORD *)(v4 + 16) = v3;
  *(_BYTE *)(v4 + 178) = a3;
  swift_task_dealloc();
  return swift_task_switch();
}

unint64_t sub_20A50A3D4()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char isUniquelyReferenced_nonNull_native;
  unint64_t result;
  unint64_t v7;
  uint64_t v8;
  _BOOL8 v9;
  BOOL v10;
  uint64_t v11;
  uint64_t **v12;
  unsigned __int8 v13;
  char v14;
  uint64_t *v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  void *v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  int64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  _QWORD *v40;

  if ((*(_BYTE *)(v1 + 178) & 1) == 0)
  {
    v3 = *(_QWORD *)(v1 + 24);
    v2 = *(_QWORD *)(v1 + 32);
    v4 = *(uint64_t **)(v1 + 136);
    v0 = *(unsigned __int8 *)(v1 + 177);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v1 + 64) = v4;
    result = sub_20A470C14(v0);
    v8 = v4[2];
    v9 = (v7 & 1) == 0;
    v10 = __OFADD__(v8, v9);
    v11 = v8 + v9;
    if (v10)
    {
      __break(1u);
      goto LABEL_29;
    }
    v0 = v7;
    v12 = (uint64_t **)(v1 + 64);
    if (*(_QWORD *)(*(_QWORD *)(v1 + 136) + 24) >= v11)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v33 = result;
        sub_20A479080();
        result = v33;
        v4 = *v12;
        if ((v0 & 1) != 0)
          goto LABEL_16;
        goto LABEL_32;
      }
    }
    else
    {
      v13 = *(_BYTE *)(v1 + 177);
      sub_20A475898(v11, isUniquelyReferenced_nonNull_native);
      result = sub_20A470C14(v13);
      if ((v0 & 1) != (v14 & 1))
        return sub_20A5B9218();
    }
    v4 = *v12;
    if ((v0 & 1) != 0)
    {
LABEL_16:
      v29 = (_QWORD *)(v4[7] + 16 * result);
      *v29 = v3;
      v29[1] = v2;
      goto LABEL_34;
    }
LABEL_32:
    v34 = *(_BYTE *)(v1 + 177);
    v4[(result >> 6) + 8] |= 1 << result;
    *(_BYTE *)(v4[6] + result) = v34;
    v35 = (_QWORD *)(v4[7] + 16 * result);
    *v35 = v3;
    v35[1] = v2;
    v36 = v4[2];
    v10 = __OFADD__(v36, 1);
    v37 = v36 + 1;
    if (v10)
    {
      __break(1u);
LABEL_39:
      __break(1u);
      return result;
    }
    v4[2] = v37;
LABEL_34:
    v20 = *(void **)(v1 + 160);
    while (1)
    {

      swift_bridgeObjectRelease();
      v21 = *(_QWORD *)(v1 + 144);
      v22 = *(_QWORD *)(v1 + 152);
      *(_QWORD *)(v1 + 136) = v4;
      if (v22)
        goto LABEL_36;
LABEL_10:
      v23 = v21 + 1;
      if (!__OFADD__(v21, 1))
        break;
LABEL_29:
      __break(1u);
LABEL_30:
      sub_20A479080();
      v15 = v4;
LABEL_8:
      v4 = (uint64_t *)*v15;
      v20 = *(void **)(v1 + 160);
      sub_20A57B8AC(v0, *v15);
    }
    v24 = (unint64_t)((1 << *(_BYTE *)(v1 + 176)) + 63) >> 6;
    result = *(_QWORD *)(v1 + 112);
    if (v23 >= v24)
      goto LABEL_27;
    v25 = result + 64;
    v26 = *(_QWORD *)(result + 64 + 8 * v23);
    ++v21;
    if (v26)
    {
LABEL_13:
      v27 = (v26 - 1) & v26;
      v28 = __clz(__rbit64(v26)) + (v21 << 6);
      goto LABEL_37;
    }
    v21 = v23 + 1;
    if (v23 + 1 >= v24)
      goto LABEL_27;
    v26 = *(_QWORD *)(v25 + 8 * v21);
    if (v26)
      goto LABEL_13;
    v21 = v23 + 2;
    if (v23 + 2 >= v24)
      goto LABEL_27;
    v26 = *(_QWORD *)(v25 + 8 * v21);
    if (v26)
      goto LABEL_13;
    v30 = v23 + 3;
    if (v30 >= v24)
    {
LABEL_27:
      swift_release();
      v31 = *(_QWORD *)(v1 + 136);
      v32 = *(_QWORD *)(v1 + 104);
      sub_20A5B8CF0();
      sub_20A5B87C8();
      sub_20A4595F8(v32);
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(uint64_t))(v1 + 8))(v31);
    }
    v26 = *(_QWORD *)(v25 + 8 * v30);
    if (v26)
    {
      v21 = v30;
      goto LABEL_13;
    }
    while (1)
    {
      v21 = v30 + 1;
      if (__OFADD__(v30, 1))
        goto LABEL_39;
      if (v21 >= v24)
        goto LABEL_27;
      v26 = *(_QWORD *)(v25 + 8 * v21);
      ++v30;
      if (v26)
        goto LABEL_13;
    }
  }
  v15 = (uint64_t *)(v1 + 136);
  v4 = *(uint64_t **)(v1 + 136);
  v16 = sub_20A470C14(*(_BYTE *)(v1 + 177));
  if ((v17 & 1) != 0)
  {
    v0 = v16;
    v4 = (uint64_t *)(v1 + 56);
    v18 = *v15;
    v19 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v1 + 56) = v18;
    if ((v19 & 1) == 0)
      goto LABEL_30;
    goto LABEL_8;
  }

  v21 = *(_QWORD *)(v1 + 144);
  v22 = *(_QWORD *)(v1 + 152);
  if (!v22)
    goto LABEL_10;
LABEL_36:
  v27 = (v22 - 1) & v22;
  v28 = __clz(__rbit64(v22)) | (v21 << 6);
  result = *(_QWORD *)(v1 + 112);
LABEL_37:
  *(_QWORD *)(v1 + 144) = v21;
  *(_QWORD *)(v1 + 152) = v27;
  *(_BYTE *)(v1 + 177) = *(_BYTE *)(*(_QWORD *)(result + 48) + v28);
  v38 = *(void **)(*(_QWORD *)(result + 56) + 8 * v28);
  *(_QWORD *)(v1 + 160) = v38;
  v39 = v38;
  v40 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 168) = v40;
  *v40 = v1;
  v40[1] = sub_20A50A370;
  return sub_20A50F7E0((uint64_t)v39);
}

uint64_t sub_20A50A74C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[8] = a1;
  v2[9] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5178);
  v2[10] = v3;
  v2[11] = *(_QWORD *)(v3 - 8);
  v2[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A50A7B0()
{
  uint64_t v0;
  _QWORD *v1;

  sub_20A513380();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v1;
  *v1 = v0;
  v1[1] = sub_20A50A83C;
  return sub_20A5B917C();
}

uint64_t sub_20A50A83C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A50A894()
{
  uint64_t *v0;
  _QWORD *v1;

  *(_BYTE *)(v0[9] + 152) = 1;
  v1 = (_QWORD *)swift_task_alloc();
  v0[14] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_20A50A8EC;
  return sub_20A50AB94(v0[8]);
}

uint64_t sub_20A50A8EC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A50A944()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 72);
  *(_BYTE *)(v1 + 152) = 0;
  v2 = v1 + 160;
  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)(v1 + 160) + 16))
    goto LABEL_4;
  result = swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v2 + 16))
  {
    v5 = *(_QWORD *)(v0 + 88);
    v4 = *(_QWORD *)(v0 + 96);
    v6 = *(_QWORD *)(v0 + 80);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v5 + 16))(v4, *(_QWORD *)v2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), v6);
    sub_20A513B0C(0, 1);
    swift_endAccess();
    sub_20A5B8B10();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
LABEL_4:
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  __break(1u);
  return result;
}

uint64_t sub_20A50AA30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t *v9;
  unint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5178);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(a2 + 152) != 1)
    return sub_20A5B8B10();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  v9 = (unint64_t *)(a2 + 160);
  swift_beginAccess();
  v10 = *(_QWORD *)(a2 + 160);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a2 + 160) = v10;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v10 = sub_20A4701C0(0, *(_QWORD *)(v10 + 16) + 1, 1, v10);
    *v9 = v10;
  }
  v13 = *(_QWORD *)(v10 + 16);
  v12 = *(_QWORD *)(v10 + 24);
  if (v13 >= v12 >> 1)
  {
    v10 = sub_20A4701C0(v12 > 1, v13 + 1, 1, v10);
    *v9 = v10;
  }
  *(_QWORD *)(v10 + 16) = v13 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v10+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v13, v8, v4);
  return swift_endAccess();
}

uint64_t sub_20A50AB94(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[54] = a1;
  v2[55] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9D38);
  v2[56] = v3;
  v2[57] = *(_QWORD *)(v3 - 8);
  v2[58] = swift_task_alloc();
  v4 = sub_20A5B8630();
  v2[59] = v4;
  v2[60] = *(_QWORD *)(v4 - 8);
  v2[61] = swift_task_alloc();
  v2[62] = swift_task_alloc();
  v2[63] = swift_task_alloc();
  v2[64] = swift_task_alloc();
  v2[65] = swift_task_alloc();
  v2[66] = type metadata accessor for ODISignpost();
  v2[67] = swift_task_alloc();
  v2[68] = swift_task_alloc();
  v2[69] = swift_task_alloc();
  v2[70] = swift_task_alloc();
  v2[71] = swift_task_alloc();
  v2[72] = swift_task_alloc();
  v2[73] = swift_task_alloc();
  v2[74] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A50ACD0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  void *v5;
  int v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  void *v20;
  int v21;
  id v22;
  uint64_t v23;
  uint64_t v24;

  if (qword_2545F99C0 != -1)
    swift_once();
  v1 = v0[73];
  v2 = qword_254610048;
  v3 = unk_254610050;
  v4 = byte_254610058;
  v5 = (void *)qword_254610060;
  v6 = byte_254610068;
  *(_QWORD *)(v1 + 32) = "enableTelemetry=YES";
  *(_QWORD *)(v1 + 40) = 19;
  *(_BYTE *)(v1 + 48) = 2;
  *(_QWORD *)v1 = v2;
  *(_QWORD *)(v1 + 8) = v3;
  *(_BYTE *)(v1 + 16) = v4;
  *(_QWORD *)(v1 + 24) = v5;
  v7 = v5;
  sub_20A5B87D4();
  sub_20A5B8CFC();
  if (v6 == 1)
    sub_20A5B87BC();
  else
    sub_20A5B87C8();
  v8 = v0[74];
  v9 = v0[73];
  v10 = v0[54];

  sub_20A4595B4(v9, v8);
  if ((v10 & 0xC000000000000001) != 0)
    v11 = sub_20A5B8DE0();
  else
    v11 = *(_QWORD *)(v0[54] + 16);
  v12 = v0[55];
  swift_beginAccess();
  v13 = *(_QWORD *)(v12 + 168);
  v14 = __OFADD__(v13, v11);
  v15 = v13 + v11;
  if (v14)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v12 + 168) = v15;
    if (qword_2545F99C8 == -1)
      goto LABEL_11;
  }
  swift_once();
LABEL_11:
  v16 = v0[71];
  v18 = qword_254610070;
  v17 = *(_QWORD *)algn_254610078;
  v19 = byte_254610080;
  v20 = (void *)qword_254610088;
  v21 = byte_254610090;
  *(_QWORD *)(v16 + 40) = 19;
  *(_BYTE *)(v16 + 48) = 2;
  *(_QWORD *)v16 = v18;
  *(_QWORD *)(v16 + 8) = v17;
  *(_BYTE *)(v16 + 16) = v19;
  *(_QWORD *)(v16 + 24) = v20;
  *(_QWORD *)(v16 + 32) = "enableTelemetry=YES";
  v22 = v20;
  sub_20A5B87D4();
  sub_20A5B8CFC();
  if (v21 == 1)
    sub_20A5B87BC();
  else
    sub_20A5B87C8();
  v23 = v0[72];
  v24 = v0[71];

  sub_20A4595B4(v24, v23);
  if (qword_2545F9AA8 != -1)
    swift_once();
  v0[75] = qword_2545FB3B8;
  return swift_task_switch();
}

uint64_t sub_20A50AFD8()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0[75];
  v2 = v0[54] & 0xC000000000000001;
  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 112);
  v4 = v0[54];
  if (v2)
  {
    if (v4 < 0)
      v5 = v0[54];
    else
      v5 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v6 = sub_20A5B8DE0();
    v4 = sub_20A5106D0(v5, v6);
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v0[76] = sub_20A5119D0(v3, v4);
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_20A50B0A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  _BOOL4 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  void *v27;
  int v28;
  id v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  if (qword_253EB5048 != -1)
    swift_once();
  v1 = v0 + 432;
  v2 = sub_20A5B8804();
  *(_QWORD *)(v0 + 616) = __swift_project_value_buffer(v2, (uint64_t)qword_253EBC888);
  swift_bridgeObjectRetain();
  swift_retain();
  v3 = sub_20A5B87EC();
  v4 = sub_20A5B8C48();
  v5 = os_log_type_enabled(v3, v4);
  v6 = *(_QWORD *)(v0 + 608);
  if (v5)
  {
    v7 = swift_slowAlloc();
    *(_DWORD *)v7 = 134349312;
    if ((v6 & 0xC000000000000001) != 0)
      v8 = sub_20A5B8DE0();
    else
      v8 = *(_QWORD *)(*(_QWORD *)(v0 + 608) + 16);
    v9 = *(_QWORD *)v1 & 0xC000000000000001;
    *(_QWORD *)(v0 + 416) = v8;
    sub_20A5B8D50();
    swift_release();
    *(_WORD *)(v7 + 12) = 2050;
    if (v9)
      v10 = sub_20A5B8DE0();
    else
      v10 = *(_QWORD *)(*(_QWORD *)v1 + 16);
    *(_QWORD *)(v0 + 424) = v10;
    sub_20A5B8D50();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_20A443000, v3, v4, "fillCoordinateMap - %{public}ld of %{public}ld addresses need looking up", (uint8_t *)v7, 0x16u);
    MEMORY[0x20BD26DB8](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
  }

  v11 = *(_QWORD *)(v0 + 432) & 0xC000000000000001;
  sub_20A5B8CF0();
  sub_20A5B87C8();
  if (v11)
    v12 = sub_20A5B8DE0();
  else
    v12 = *(_QWORD *)(*(_QWORD *)(v0 + 432) + 16);
  v13 = *(_QWORD *)(v0 + 608);
  v14 = v13 & 0xC000000000000001;
  if ((v13 & 0xC000000000000001) != 0)
  {
    v15 = sub_20A5B8DE0();
    v16 = v12 - v15;
    if (!__OFSUB__(v12, v15))
      goto LABEL_17;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v22 = *(_QWORD *)(v13 + 16);
  v16 = v12 - v22;
  if (__OFSUB__(v12, v22))
    goto LABEL_23;
LABEL_17:
  v17 = *(_QWORD *)(v0 + 440);
  v18 = *(_QWORD *)(v17 + 176);
  v19 = __OFADD__(v18, v16);
  v20 = v18 + v16;
  if (v19)
  {
    __break(1u);
    goto LABEL_32;
  }
  *(_QWORD *)(v17 + 176) = v20;
  v12 = *(_QWORD *)(v0 + 608);
  if (v14)
  {
    if (sub_20A5B8DE0())
    {
      v21 = sub_20A5B8DE0();
      goto LABEL_25;
    }
LABEL_28:
    sub_20A4595F8(*(_QWORD *)(v0 + 576));
    swift_release();
    v30 = *(_QWORD *)(v0 + 592);
    sub_20A5B8CF0();
    sub_20A5B87C8();
    sub_20A4595F8(v30);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
LABEL_24:
  v21 = *(_QWORD *)(v12 + 16);
  if (!v21)
    goto LABEL_28;
LABEL_25:
  *(_QWORD *)(v0 + 624) = v21;
  *(_QWORD *)(v0 + 632) = clock_gettime_nsec_np(_CLOCK_MONOTONIC_RAW);
  if (qword_2545F99D0 != -1)
LABEL_32:
    swift_once();
  v23 = *(_QWORD *)(v0 + 552);
  v25 = qword_254610098;
  v24 = unk_2546100A0;
  v26 = byte_2546100A8;
  v27 = (void *)qword_2546100B0;
  v28 = byte_2546100B8;
  *(_QWORD *)(v23 + 32) = "enableTelemetry=YES";
  *(_QWORD *)(v23 + 40) = 19;
  *(_BYTE *)(v23 + 48) = 2;
  *(_QWORD *)v23 = v25;
  *(_QWORD *)(v23 + 8) = v24;
  *(_BYTE *)(v23 + 16) = v26;
  *(_QWORD *)(v23 + 24) = v27;
  v29 = v27;
  sub_20A5B87D4();
  sub_20A5B8CFC();
  if (v28 == 1)
    sub_20A5B87BC();
  else
    sub_20A5B87C8();
  v32 = *(_QWORD *)(v0 + 608);
  v33 = *(_QWORD *)(v0 + 560);
  v34 = *(_QWORD *)(v0 + 552);
  v35 = *(_QWORD *)(v0 + 440);

  sub_20A4595B4(v34, v33);
  sub_20A47BD60(v35 + 112, v0 + 144);
  sub_20A47BD60(v0 + 144, v0 + 184);
  v36 = swift_allocObject();
  *(_QWORD *)(v0 + 640) = v36;
  sub_20A44CFD8((__int128 *)(v0 + 184), v36 + 16);
  *(_QWORD *)(v36 + 56) = v32;
  swift_retain_n();
  return swift_task_switch();
}

uint64_t sub_20A50B5E4()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  v1 = v0[80];
  v2 = (_QWORD *)swift_task_alloc();
  v0[81] = v2;
  v2[2] = 100000000;
  v2[3] = &unk_2545FB410;
  v2[4] = v1;
  v2[5] = &unk_2545FB418;
  v2[6] = 0;
  v3 = (_QWORD *)swift_task_alloc();
  v0[82] = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB438);
  *v3 = v0;
  v3[1] = sub_20A50B6B4;
  return sub_20A5B9200();
}

uint64_t sub_20A50B6B4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 664) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_release();
    swift_task_dealloc();
    *(_QWORD *)(v2 + 672) = *(_QWORD *)(v2 + 360);
  }
  return swift_task_switch();
}

uint64_t sub_20A50B750()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  _QWORD *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  void *v37;
  int v38;
  id v39;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;

  swift_bridgeObjectRetain();
  v1 = sub_20A5B87EC();
  v2 = sub_20A5B8C48();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = *(_QWORD *)(v0 + 672);
    v4 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v4 = 134349056;
    *(_QWORD *)(v0 + 408) = *(_QWORD *)(v3 + 16);
    sub_20A5B8D50();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_20A443000, v1, v2, "%{public}ld results from asd cache", v4, 0xCu);
    MEMORY[0x20BD26DB8](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  v5 = *(_QWORD *)(v0 + 672);
  *(_QWORD *)(v0 + 680) = v5;
  v6 = *(_QWORD *)(v0 + 608);
  v7 = *(_QWORD *)(v0 + 512);
  v8 = *(_QWORD *)(v0 + 472);
  v9 = *(_QWORD *)(v0 + 480);
  *(_QWORD *)(v0 + 688) = clock_gettime_nsec_np(_CLOCK_MONOTONIC_RAW);
  *(_QWORD *)(v0 + 368) = v6;
  sub_20A5B8618();
  sub_20A5B85DC();
  v10 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  *(_QWORD *)(v0 + 696) = v10;
  v10(v7, v8);
  sub_20A5B8618();
  sub_20A5B85DC();
  v10(v7, v8);
  swift_bridgeObjectRetain();
  v11 = sub_20A5B87EC();
  v12 = sub_20A5B8C48();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = *(_QWORD *)(v0 + 624);
    v14 = swift_slowAlloc();
    *(_DWORD *)v14 = 134349312;
    *(_QWORD *)(v0 + 392) = *(_QWORD *)(v5 + 16);
    sub_20A5B8D50();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2050;
    *(_QWORD *)(v0 + 400) = v13;
    sub_20A5B8D50();
    _os_log_impl(&dword_20A443000, v11, v12, "fillCoordinateMap - %{public}ld of %{public}ld found in asd cache", (uint8_t *)v14, 0x16u);
    MEMORY[0x20BD26DB8](v14, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  v15 = *(_QWORD *)(v5 + 16);
  *(_QWORD *)(v0 + 704) = v15;
  if (v15)
  {
    v16 = *(_QWORD *)(v0 + 472);
    v17 = *(_QWORD *)(v0 + 480);
    v18 = *(_QWORD *)(v0 + 456);
    v19 = *(int *)(*(_QWORD *)(v0 + 448) + 64);
    *(_DWORD *)(v0 + 824) = v19;
    v20 = *(_DWORD *)(v18 + 80);
    *(_DWORD *)(v0 + 828) = v20;
    *(_QWORD *)(v0 + 712) = *(_QWORD *)(v18 + 72);
    *(_OWORD *)(v0 + 720) = 0u;
    *(_OWORD *)(v0 + 736) = 0u;
    v21 = *(_QWORD *)(v0 + 496);
    v22 = *(_QWORD **)(v0 + 464);
    v23 = (char *)v22 + v19;
    sub_20A47D62C(*(_QWORD *)(v0 + 680) + ((v20 + 32) & ~(unint64_t)v20), (uint64_t)v22, &qword_2545F9D38);
    *(_QWORD *)(v0 + 752) = *v22;
    v24 = (void *)v22[1];
    *(_QWORD *)(v0 + 760) = v24;
    (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v21, v23, v16);
    *(_QWORD *)(v0 + 768) = qword_2545FB3B8;
    if (v24)
    {
      objc_msgSend(v24, sel_coordinate);
    }
    else
    {
      v25 = 0;
      v26 = 0;
    }
    *(_QWORD *)(v0 + 784) = v26;
    *(_QWORD *)(v0 + 776) = v25;
    return swift_task_switch();
  }
  else
  {
    swift_bridgeObjectRelease();
    v27 = *(_QWORD *)(v0 + 688);
    v28 = *(_QWORD *)(v0 + 632);
    v29 = *(_QWORD *)(v0 + 624);
    v30 = (void *)sub_20A5B88F4();
    v31 = (_QWORD *)swift_allocObject();
    v31[2] = 0;
    v31[3] = v29;
    v31[4] = 0;
    v31[5] = 0;
    v31[6] = v27;
    v31[7] = v28;
    *(_QWORD *)(v0 + 48) = sub_20A513358;
    *(_QWORD *)(v0 + 56) = v31;
    *(_QWORD *)(v0 + 16) = MEMORY[0x24BDAC760];
    *(_QWORD *)(v0 + 24) = 1107296256;
    *(_QWORD *)(v0 + 32) = sub_20A4C6DC8;
    *(_QWORD *)(v0 + 40) = &block_descriptor_13;
    v32 = _Block_copy((const void *)(v0 + 16));
    swift_release();
    AnalyticsSendEventLazy();
    _Block_release(v32);

    sub_20A5B8CF0();
    sub_20A5B87C8();
    if (qword_2545F99D8 != -1)
      swift_once();
    v61 = v0 + 368;
    v33 = *(_QWORD *)(v0 + 536);
    v34 = qword_2546100C0;
    v35 = *(_QWORD *)algn_2546100C8;
    v36 = byte_2546100D0;
    v37 = (void *)qword_2546100D8;
    v38 = byte_2546100E0;
    *(_QWORD *)(v33 + 32) = "enableTelemetry=YES";
    *(_QWORD *)(v33 + 40) = 19;
    *(_BYTE *)(v33 + 48) = 2;
    *(_QWORD *)v33 = v34;
    *(_QWORD *)(v33 + 8) = v35;
    *(_BYTE *)(v33 + 16) = v36;
    *(_QWORD *)(v33 + 24) = v37;
    v39 = v37;
    sub_20A5B87D4();
    sub_20A5B8CFC();
    if (v38 == 1)
      sub_20A5B87BC();
    else
      sub_20A5B87C8();
    v41 = *(_QWORD *)(v0 + 544);
    v42 = *(_QWORD *)(v0 + 536);

    sub_20A4595B4(v42, v41);
    v43 = sub_20A5B87EC();
    v44 = sub_20A5B8C48();
    if (os_log_type_enabled(v43, v44))
    {
      v45 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v45 = 134349056;
      swift_beginAccess();
      if ((*(_QWORD *)v61 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        v46 = sub_20A5B8DE0();
        swift_bridgeObjectRelease();
      }
      else
      {
        v46 = *(_QWORD *)(*(_QWORD *)v61 + 16);
      }
      *(_QWORD *)(v0 + 384) = v46;
      sub_20A5B8D50();
      _os_log_impl(&dword_20A443000, v43, v44, "fillCoordinateMap - Attempting to geocode %{public}ld addresses", v45, 0xCu);
      MEMORY[0x20BD26DB8](v45, -1, -1);
    }
    v60 = *(_QWORD *)(v0 + 440);

    sub_20A47BD60(v0 + 144, v0 + 64);
    v47 = *(_QWORD *)(v0 + 88);
    v48 = __swift_mutable_project_boxed_opaque_existential_1(v0 + 64, v47);
    v49 = *(_QWORD *)(v47 - 8);
    v50 = (uint64_t *)swift_task_alloc();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v49 + 16))(v50, v48, v47);
    v51 = *v50;
    v52 = type metadata accessor for DIPODNHelper();
    *(_QWORD *)(v0 + 248) = v52;
    *(_QWORD *)(v0 + 256) = &off_24C317378;
    *(_QWORD *)(v0 + 224) = v51;
    type metadata accessor for GeoCoder.GeocodeCompletionState();
    v53 = swift_allocObject();
    *(_QWORD *)(v0 + 792) = v53;
    v54 = __swift_mutable_project_boxed_opaque_existential_1(v0 + 224, v52);
    v55 = *(_QWORD *)(v52 - 8);
    v56 = (uint64_t *)swift_task_alloc();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v55 + 16))(v56, v54, v52);
    v57 = *v56;
    *(_QWORD *)(v0 + 128) = v52;
    *(_QWORD *)(v0 + 136) = &off_24C317378;
    *(_QWORD *)(v0 + 104) = v57;
    swift_defaultActor_initialize();
    *(_QWORD *)(v53 + 112) = MEMORY[0x24BEE4AF8];
    *(_BYTE *)(v53 + 120) = 0;
    sub_20A44CFD8((__int128 *)(v0 + 104), v53 + 128);
    __swift_destroy_boxed_opaque_existential_1(v0 + 224);
    swift_task_dealloc();
    __swift_destroy_boxed_opaque_existential_1(v0 + 64);
    swift_task_dealloc();
    sub_20A513380();
    v58 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 800) = v58;
    v58[2] = v61;
    v58[3] = v60;
    v58[4] = v53;
    v59 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 808) = v59;
    *v59 = v0;
    v59[1] = sub_20A50D0B4;
    return sub_20A5B8F00();
  }
}

uint64_t sub_20A50BF2C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A50BF6C()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  _QWORD *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  void *v37;
  int v38;
  id v39;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;

  swift_release();
  swift_release();
  v1 = sub_20A5B87EC();
  v2 = sub_20A5B8C54();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_20A443000, v1, v2, "Gecode cache fetch timeout", v3, 2u);
    MEMORY[0x20BD26DB8](v3, -1, -1);
  }
  v4 = *(void **)(v0 + 664);

  v5 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + 680) = MEMORY[0x24BEE4AF8];
  v6 = *(_QWORD *)(v0 + 608);
  v7 = *(_QWORD *)(v0 + 512);
  v8 = *(_QWORD *)(v0 + 472);
  v9 = *(_QWORD *)(v0 + 480);
  *(_QWORD *)(v0 + 688) = clock_gettime_nsec_np(_CLOCK_MONOTONIC_RAW);
  *(_QWORD *)(v0 + 368) = v6;
  sub_20A5B8618();
  sub_20A5B85DC();
  v10 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  *(_QWORD *)(v0 + 696) = v10;
  v10(v7, v8);
  sub_20A5B8618();
  sub_20A5B85DC();
  v10(v7, v8);
  swift_bridgeObjectRetain();
  v11 = sub_20A5B87EC();
  v12 = sub_20A5B8C48();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = *(_QWORD *)(v0 + 624);
    v14 = swift_slowAlloc();
    *(_DWORD *)v14 = 134349312;
    *(_QWORD *)(v0 + 392) = *(_QWORD *)(v5 + 16);
    sub_20A5B8D50();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2050;
    *(_QWORD *)(v0 + 400) = v13;
    sub_20A5B8D50();
    _os_log_impl(&dword_20A443000, v11, v12, "fillCoordinateMap - %{public}ld of %{public}ld found in asd cache", (uint8_t *)v14, 0x16u);
    MEMORY[0x20BD26DB8](v14, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  v15 = *(_QWORD *)(v5 + 16);
  *(_QWORD *)(v0 + 704) = v15;
  if (v15)
  {
    v16 = *(_QWORD *)(v0 + 472);
    v17 = *(_QWORD *)(v0 + 480);
    v18 = *(_QWORD *)(v0 + 456);
    v19 = *(int *)(*(_QWORD *)(v0 + 448) + 64);
    *(_DWORD *)(v0 + 824) = v19;
    v20 = *(_DWORD *)(v18 + 80);
    *(_DWORD *)(v0 + 828) = v20;
    *(_QWORD *)(v0 + 712) = *(_QWORD *)(v18 + 72);
    *(_OWORD *)(v0 + 720) = 0u;
    *(_OWORD *)(v0 + 736) = 0u;
    v21 = *(_QWORD *)(v0 + 496);
    v22 = *(_QWORD **)(v0 + 464);
    v23 = (char *)v22 + v19;
    sub_20A47D62C(*(_QWORD *)(v0 + 680) + ((v20 + 32) & ~(unint64_t)v20), (uint64_t)v22, &qword_2545F9D38);
    *(_QWORD *)(v0 + 752) = *v22;
    v24 = (void *)v22[1];
    *(_QWORD *)(v0 + 760) = v24;
    (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v21, v23, v16);
    *(_QWORD *)(v0 + 768) = qword_2545FB3B8;
    if (v24)
    {
      objc_msgSend(v24, sel_coordinate);
    }
    else
    {
      v25 = 0;
      v26 = 0;
    }
    *(_QWORD *)(v0 + 784) = v26;
    *(_QWORD *)(v0 + 776) = v25;
    return swift_task_switch();
  }
  else
  {
    swift_bridgeObjectRelease();
    v27 = *(_QWORD *)(v0 + 688);
    v28 = *(_QWORD *)(v0 + 632);
    v29 = *(_QWORD *)(v0 + 624);
    v30 = (void *)sub_20A5B88F4();
    v31 = (_QWORD *)swift_allocObject();
    v31[2] = 0;
    v31[3] = v29;
    v31[4] = 0;
    v31[5] = 0;
    v31[6] = v27;
    v31[7] = v28;
    *(_QWORD *)(v0 + 48) = sub_20A513358;
    *(_QWORD *)(v0 + 56) = v31;
    *(_QWORD *)(v0 + 16) = MEMORY[0x24BDAC760];
    *(_QWORD *)(v0 + 24) = 1107296256;
    *(_QWORD *)(v0 + 32) = sub_20A4C6DC8;
    *(_QWORD *)(v0 + 40) = &block_descriptor_13;
    v32 = _Block_copy((const void *)(v0 + 16));
    swift_release();
    AnalyticsSendEventLazy();
    _Block_release(v32);

    sub_20A5B8CF0();
    sub_20A5B87C8();
    if (qword_2545F99D8 != -1)
      swift_once();
    v61 = v0 + 368;
    v33 = *(_QWORD *)(v0 + 536);
    v34 = qword_2546100C0;
    v35 = *(_QWORD *)algn_2546100C8;
    v36 = byte_2546100D0;
    v37 = (void *)qword_2546100D8;
    v38 = byte_2546100E0;
    *(_QWORD *)(v33 + 32) = "enableTelemetry=YES";
    *(_QWORD *)(v33 + 40) = 19;
    *(_BYTE *)(v33 + 48) = 2;
    *(_QWORD *)v33 = v34;
    *(_QWORD *)(v33 + 8) = v35;
    *(_BYTE *)(v33 + 16) = v36;
    *(_QWORD *)(v33 + 24) = v37;
    v39 = v37;
    sub_20A5B87D4();
    sub_20A5B8CFC();
    if (v38 == 1)
      sub_20A5B87BC();
    else
      sub_20A5B87C8();
    v41 = *(_QWORD *)(v0 + 544);
    v42 = *(_QWORD *)(v0 + 536);

    sub_20A4595B4(v42, v41);
    v43 = sub_20A5B87EC();
    v44 = sub_20A5B8C48();
    if (os_log_type_enabled(v43, v44))
    {
      v45 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v45 = 134349056;
      swift_beginAccess();
      if ((*(_QWORD *)v61 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        v46 = sub_20A5B8DE0();
        swift_bridgeObjectRelease();
      }
      else
      {
        v46 = *(_QWORD *)(*(_QWORD *)v61 + 16);
      }
      *(_QWORD *)(v0 + 384) = v46;
      sub_20A5B8D50();
      _os_log_impl(&dword_20A443000, v43, v44, "fillCoordinateMap - Attempting to geocode %{public}ld addresses", v45, 0xCu);
      MEMORY[0x20BD26DB8](v45, -1, -1);
    }
    v60 = *(_QWORD *)(v0 + 440);

    sub_20A47BD60(v0 + 144, v0 + 64);
    v47 = *(_QWORD *)(v0 + 88);
    v48 = __swift_mutable_project_boxed_opaque_existential_1(v0 + 64, v47);
    v49 = *(_QWORD *)(v47 - 8);
    v50 = (uint64_t *)swift_task_alloc();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v49 + 16))(v50, v48, v47);
    v51 = *v50;
    v52 = type metadata accessor for DIPODNHelper();
    *(_QWORD *)(v0 + 248) = v52;
    *(_QWORD *)(v0 + 256) = &off_24C317378;
    *(_QWORD *)(v0 + 224) = v51;
    type metadata accessor for GeoCoder.GeocodeCompletionState();
    v53 = swift_allocObject();
    *(_QWORD *)(v0 + 792) = v53;
    v54 = __swift_mutable_project_boxed_opaque_existential_1(v0 + 224, v52);
    v55 = *(_QWORD *)(v52 - 8);
    v56 = (uint64_t *)swift_task_alloc();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v55 + 16))(v56, v54, v52);
    v57 = *v56;
    *(_QWORD *)(v0 + 128) = v52;
    *(_QWORD *)(v0 + 136) = &off_24C317378;
    *(_QWORD *)(v0 + 104) = v57;
    swift_defaultActor_initialize();
    *(_QWORD *)(v53 + 112) = MEMORY[0x24BEE4AF8];
    *(_BYTE *)(v53 + 120) = 0;
    sub_20A44CFD8((__int128 *)(v0 + 104), v53 + 128);
    __swift_destroy_boxed_opaque_existential_1(v0 + 224);
    swift_task_dealloc();
    __swift_destroy_boxed_opaque_existential_1(v0 + 64);
    swift_task_dealloc();
    sub_20A513380();
    v58 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 800) = v58;
    v58[2] = v61;
    v58[3] = v60;
    v58[4] = v53;
    v59 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 808) = v59;
    *v59 = v0;
    v59[1] = sub_20A50D0B4;
    return sub_20A5B8F00();
  }
}

int64_t sub_20A50C728()
{
  _QWORD *v0;
  void *v1;
  uint64_t *v2;
  id v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v5;
  char v6;
  unint64_t v7;
  uint64_t v8;
  _BOOL8 v9;
  int64_t result;
  char v11;
  uint64_t v12;
  char v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  void *v24;
  id v25;
  void *v26;

  v1 = (void *)v0[94];
  v2 = (uint64_t *)(v0[96] + 112);
  swift_beginAccess();
  v3 = v1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v5 = *v2;
  v0[47] = *v2;
  *v2 = 0x8000000000000000;
  v7 = sub_20A470BC8((uint64_t)v3);
  v8 = *(_QWORD *)(v5 + 16);
  v9 = (v6 & 1) == 0;
  result = v8 + v9;
  if (__OFADD__(v8, v9))
  {
    __break(1u);
  }
  else
  {
    v11 = v6;
    if (*(_QWORD *)(v5 + 24) >= result)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        result = (int64_t)sub_20A478EC8();
    }
    else
    {
      v12 = v0[94];
      sub_20A4755A8(result, isUniquelyReferenced_nonNull_native);
      result = sub_20A470BC8(v12);
      if ((v11 & 1) != (v13 & 1))
      {
        sub_20A459574(0, &qword_2545F9D58);
        return sub_20A5B9218();
      }
      v7 = result;
    }
    v14 = (_QWORD *)v0[47];
    v15 = v0[98];
    v16 = v0[97];
    v17 = v0[95];
    if ((v11 & 1) != 0)
    {
      v18 = v14[7] + 24 * v7;
      *(_QWORD *)v18 = v16;
      *(_QWORD *)(v18 + 8) = v15;
      *(_BYTE *)(v18 + 16) = v17 == 0;
LABEL_12:
      v26 = (void *)v0[94];
      *v2 = (uint64_t)v14;

      swift_bridgeObjectRelease();
      swift_endAccess();
      return swift_task_switch();
    }
    v19 = v0[94];
    v14[(v7 >> 6) + 8] |= 1 << v7;
    *(_QWORD *)(v14[6] + 8 * v7) = v19;
    v20 = v14[7] + 24 * v7;
    *(_QWORD *)v20 = v16;
    *(_QWORD *)(v20 + 8) = v15;
    *(_BYTE *)(v20 + 16) = v17 == 0;
    v21 = v14[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v24 = (void *)v0[94];
      v14[2] = v23;
      v25 = v24;
      goto LABEL_12;
    }
  }
  __break(1u);
  return result;
}

void sub_20A50C914()
{
  uint64_t v0;
  _QWORD *v1;
  char v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  _QWORD *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  void *v38;
  int v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  char *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  _QWORD *v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;

  if (*(_QWORD *)(v0 + 760))
    v1 = (_QWORD *)(v0 + 520);
  else
    v1 = (_QWORD *)(v0 + 504);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 480) + 16))(*(_QWORD *)(v0 + 488), *v1, *(_QWORD *)(v0 + 472));
  v2 = sub_20A5B85D0();
  v3 = sub_20A5B87EC();
  v4 = sub_20A5B8C48();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = swift_slowAlloc();
    *(_DWORD *)v5 = 67240192;
    *(_DWORD *)(v5 + 4) = v2 & 1;
    _os_log_impl(&dword_20A443000, v3, v4, "fillCoordinateMap address needs refresh - %{BOOL,public}d", (uint8_t *)v5, 8u);
    MEMORY[0x20BD26DB8](v5, -1, -1);
  }

  v6 = *(void **)(v0 + 760);
  v7 = *(void **)(v0 + 752);
  if ((v2 & 1) != 0)
  {
    v8 = *(_QWORD *)(v0 + 736);
    v9 = *(void (**)(uint64_t, uint64_t))(v0 + 696);
    v11 = *(_QWORD *)(v0 + 488);
    v10 = *(_QWORD *)(v0 + 496);
    v12 = *(_QWORD *)(v0 + 472);

    v9(v11, v12);
    v9(v10, v12);
    v13 = __OFADD__(v8, 1);
    v14 = v8 + 1;
    if (v13)
    {
      __break(1u);
LABEL_33:
      swift_once();
      goto LABEL_16;
    }
    v15 = *(_QWORD *)(v0 + 728);
    goto LABEL_13;
  }

  v16 = *(_QWORD *)(v0 + 440);
  if (v6)
  {
    v17 = *(_QWORD *)(v16 + 184);
    v13 = __OFADD__(v17, 1);
    v18 = v17 + 1;
    if (v13)
    {
      __break(1u);
    }
    else
    {
      v19 = *(void **)(v0 + 760);
      v20 = *(void **)(v0 + 752);
      v21 = *(_QWORD *)(v0 + 728);
      v22 = *(void (**)(uint64_t, uint64_t))(v0 + 696);
      v24 = *(_QWORD *)(v0 + 488);
      v23 = *(_QWORD *)(v0 + 496);
      v25 = *(_QWORD *)(v0 + 472);
      *(_QWORD *)(v16 + 184) = v18;

      v22(v24, v25);
      v22(v23, v25);
      v15 = v21 + 1;
      if (!__OFADD__(v21, 1))
      {
        v14 = *(_QWORD *)(v0 + 736);
LABEL_13:
        v26 = *(_QWORD *)(v0 + 720);
        goto LABEL_14;
      }
    }
    __break(1u);
    goto LABEL_36;
  }
  v55 = *(_QWORD *)(v16 + 208);
  v13 = __OFADD__(v55, 1);
  v56 = v55 + 1;
  if (v13)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v57 = *(void **)(v0 + 752);
  v58 = *(_QWORD *)(v0 + 720);
  v59 = *(void (**)(uint64_t, uint64_t))(v0 + 696);
  v61 = *(_QWORD *)(v0 + 488);
  v60 = *(_QWORD *)(v0 + 496);
  v62 = *(_QWORD *)(v0 + 472);
  *(_QWORD *)(v16 + 208) = v56;

  v59(v61, v62);
  v59(v60, v62);
  v26 = v58 + 1;
  if (__OFADD__(v58, 1))
  {
LABEL_37:
    __break(1u);
    return;
  }
  v14 = *(_QWORD *)(v0 + 736);
  v15 = *(_QWORD *)(v0 + 728);
LABEL_14:
  v27 = *(_QWORD *)(v0 + 744) + 1;
  if (v27 != *(_QWORD *)(v0 + 704))
  {
    *(_QWORD *)(v0 + 744) = v27;
    *(_QWORD *)(v0 + 736) = v14;
    *(_QWORD *)(v0 + 728) = v15;
    *(_QWORD *)(v0 + 720) = v26;
    v41 = *(_QWORD *)(v0 + 496);
    v42 = *(_QWORD *)(v0 + 472);
    v43 = *(_QWORD *)(v0 + 480);
    v44 = *(_QWORD **)(v0 + 464);
    v45 = (char *)v44 + *(int *)(v0 + 824);
    sub_20A47D62C(*(_QWORD *)(v0 + 680)+ ((*(unsigned __int8 *)(v0 + 828) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 828))+ *(_QWORD *)(v0 + 712) * v27, (uint64_t)v44, &qword_2545F9D38);
    *(_QWORD *)(v0 + 752) = *v44;
    v46 = (void *)v44[1];
    *(_QWORD *)(v0 + 760) = v46;
    (*(void (**)(uint64_t, char *, uint64_t))(v43 + 32))(v41, v45, v42);
    *(_QWORD *)(v0 + 768) = qword_2545FB3B8;
    if (v46)
    {
      objc_msgSend(v46, sel_coordinate);
    }
    else
    {
      v47 = 0;
      v48 = 0;
    }
    *(_QWORD *)(v0 + 784) = v48;
    *(_QWORD *)(v0 + 776) = v47;
    swift_task_switch();
    return;
  }
  v77 = v0 + 368;
  swift_bridgeObjectRelease();
  v28 = *(_QWORD *)(v0 + 688);
  v29 = *(_QWORD *)(v0 + 632);
  v30 = *(_QWORD *)(v0 + 624);
  v31 = (void *)sub_20A5B88F4();
  v32 = (_QWORD *)swift_allocObject();
  v32[2] = v14;
  v32[3] = v30;
  v32[4] = v15;
  v32[5] = v26;
  v32[6] = v28;
  v32[7] = v29;
  *(_QWORD *)(v0 + 48) = sub_20A513358;
  *(_QWORD *)(v0 + 56) = v32;
  *(_QWORD *)(v0 + 16) = MEMORY[0x24BDAC760];
  *(_QWORD *)(v0 + 24) = 1107296256;
  *(_QWORD *)(v0 + 32) = sub_20A4C6DC8;
  *(_QWORD *)(v0 + 40) = &block_descriptor_13;
  v33 = _Block_copy((const void *)(v0 + 16));
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v33);

  sub_20A5B8CF0();
  sub_20A5B87C8();
  if (qword_2545F99D8 != -1)
    goto LABEL_33;
LABEL_16:
  v34 = *(_QWORD *)(v0 + 536);
  v35 = qword_2546100C0;
  v36 = *(_QWORD *)algn_2546100C8;
  v37 = byte_2546100D0;
  v38 = (void *)qword_2546100D8;
  v39 = byte_2546100E0;
  *(_QWORD *)(v34 + 32) = "enableTelemetry=YES";
  *(_QWORD *)(v34 + 40) = 19;
  *(_BYTE *)(v34 + 48) = 2;
  *(_QWORD *)v34 = v35;
  *(_QWORD *)(v34 + 8) = v36;
  *(_BYTE *)(v34 + 16) = v37;
  *(_QWORD *)(v34 + 24) = v38;
  v40 = v38;
  sub_20A5B87D4();
  sub_20A5B8CFC();
  if (v39 == 1)
    sub_20A5B87BC();
  else
    sub_20A5B87C8();
  v49 = *(_QWORD *)(v0 + 544);
  v50 = *(_QWORD *)(v0 + 536);

  sub_20A4595B4(v50, v49);
  v51 = sub_20A5B87EC();
  v52 = sub_20A5B8C48();
  if (os_log_type_enabled(v51, v52))
  {
    v53 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v53 = 134349056;
    swift_beginAccess();
    if ((*(_QWORD *)v77 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      v54 = sub_20A5B8DE0();
      swift_bridgeObjectRelease();
    }
    else
    {
      v54 = *(_QWORD *)(*(_QWORD *)v77 + 16);
    }
    *(_QWORD *)(v0 + 384) = v54;
    sub_20A5B8D50();
    _os_log_impl(&dword_20A443000, v51, v52, "fillCoordinateMap - Attempting to geocode %{public}ld addresses", v53, 0xCu);
    MEMORY[0x20BD26DB8](v53, -1, -1);
  }
  v76 = *(_QWORD *)(v0 + 440);

  sub_20A47BD60(v0 + 144, v0 + 64);
  v63 = *(_QWORD *)(v0 + 88);
  v64 = __swift_mutable_project_boxed_opaque_existential_1(v0 + 64, v63);
  v65 = *(_QWORD *)(v63 - 8);
  v66 = (uint64_t *)swift_task_alloc();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v65 + 16))(v66, v64, v63);
  v67 = *v66;
  v68 = type metadata accessor for DIPODNHelper();
  *(_QWORD *)(v0 + 248) = v68;
  *(_QWORD *)(v0 + 256) = &off_24C317378;
  *(_QWORD *)(v0 + 224) = v67;
  type metadata accessor for GeoCoder.GeocodeCompletionState();
  v69 = swift_allocObject();
  *(_QWORD *)(v0 + 792) = v69;
  v70 = __swift_mutable_project_boxed_opaque_existential_1(v0 + 224, v68);
  v71 = *(_QWORD *)(v68 - 8);
  v72 = (uint64_t *)swift_task_alloc();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v71 + 16))(v72, v70, v68);
  v73 = *v72;
  *(_QWORD *)(v0 + 128) = v68;
  *(_QWORD *)(v0 + 136) = &off_24C317378;
  *(_QWORD *)(v0 + 104) = v73;
  swift_defaultActor_initialize();
  *(_QWORD *)(v69 + 112) = MEMORY[0x24BEE4AF8];
  *(_BYTE *)(v69 + 120) = 0;
  sub_20A44CFD8((__int128 *)(v0 + 104), v69 + 128);
  __swift_destroy_boxed_opaque_existential_1(v0 + 224);
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  swift_task_dealloc();
  sub_20A513380();
  v74 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 800) = v74;
  v74[2] = v77;
  v74[3] = v76;
  v74[4] = v69;
  v75 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 808) = v75;
  *v75 = v0;
  v75[1] = sub_20A50D0B4;
  sub_20A5B8F00();
}

uint64_t sub_20A50D0B4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A50D118()
{
  uint64_t v0;
  _QWORD *v1;

  sub_20A5B8CF0();
  sub_20A5B87C8();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 816) = v1;
  *v1 = v0;
  v1[1] = sub_20A50D1A0;
  v1[11] = *(_QWORD *)(v0 + 792);
  return swift_task_switch();
}

uint64_t sub_20A50D1A0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A50D1F8()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 696);
  v2 = *(_QWORD *)(v0 + 576);
  v3 = *(_QWORD *)(v0 + 560);
  v4 = *(_QWORD *)(v0 + 544);
  v5 = *(_QWORD *)(v0 + 520);
  v6 = *(_QWORD *)(v0 + 504);
  v7 = *(_QWORD *)(v0 + 472);
  swift_release();
  sub_20A4595F8(v4);
  v1(v6, v7);
  v1(v5, v7);
  __swift_destroy_boxed_opaque_existential_1(v0 + 144);
  sub_20A4595F8(v3);
  sub_20A4595F8(v2);
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(v0 + 592);
  sub_20A5B8CF0();
  sub_20A5B87C8();
  sub_20A4595F8(v8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A50D38C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = a3;
  return swift_task_switch();
}

uint64_t sub_20A50D3A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v1 = swift_bridgeObjectRetain();
  v2 = sub_20A57C02C(v1);
  *(_QWORD *)(v0 + 32) = v2;
  swift_bridgeObjectRelease();
  v5 = (uint64_t (*)(uint64_t))((char *)&dword_2545F9D30 + dword_2545F9D30);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v3;
  *v3 = v0;
  v3[1] = sub_20A50D424;
  return v5(v2);
}

uint64_t sub_20A50D424(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 48) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_release();
    *(_QWORD *)(v4 + 56) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_20A50D4A0()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 16) = *(_QWORD *)(v0 + 56);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A50D4B8()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_20A50D4EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, unint64_t a6)
{
  uint64_t inited;
  id result;
  uint64_t v14;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA6C0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A5BDAA0;
  strcpy((char *)(inited + 32), "expiredCount");
  *(_BYTE *)(inited + 45) = 0;
  *(_WORD *)(inited + 46) = -5120;
  *(_QWORD *)(inited + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, a1);
  *(_QWORD *)(inited + 56) = 0xD000000000000012;
  *(_QWORD *)(inited + 64) = 0x800000020A5E3FE0;
  *(_QWORD *)(inited + 72) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, a2);
  *(_QWORD *)(inited + 80) = 0x6F4C646568636163;
  *(_QWORD *)(inited + 88) = 0xEF736E6F69746163;
  *(_QWORD *)(inited + 96) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, a3);
  *(_QWORD *)(inited + 104) = 0x6F4E646568636163;
  *(_QWORD *)(inited + 112) = 0xEF73646E756F4674;
  result = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, a4);
  *(_QWORD *)(inited + 120) = result;
  *(_QWORD *)(inited + 128) = 0x6E6F697461727564;
  *(_QWORD *)(inited + 136) = 0xE800000000000000;
  if (a5 < a6)
  {
    __break(1u);
  }
  else
  {
    result = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, (double)(a5 - a6) / 1000000000.0);
    *(_QWORD *)(inited + 144) = result;
    strcpy((char *)(inited + 152), "isAllResolved");
    *(_WORD *)(inited + 166) = -4864;
    if (!__OFADD__(a3, a4))
    {
      v14 = a3 + a4;
      *(_QWORD *)(inited + 168) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, v14 == a2);
      return (id)sub_20A46AB30(inited);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_20A50D70C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[21] = a4;
  v5[22] = a5;
  v5[19] = a2;
  v5[20] = a3;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB5180);
  v5[23] = swift_task_alloc();
  v5[24] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A50D780()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  int64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  id *v35;
  int64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  id v40;
  unint64_t v41;
  _QWORD *v42;

  v1 = (uint64_t *)v0[20];
  swift_beginAccess();
  v2 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_20A5B8DD4();
    sub_20A459574(0, &qword_2545F9D58);
    sub_20A5135D4();
    result = sub_20A5B8C0C();
    v2 = v0[2];
    v37 = v0[3];
    v4 = v0[4];
    v5 = v0[5];
    v6 = v0[6];
  }
  else
  {
    v7 = -1 << *(_BYTE *)(v2 + 32);
    v37 = v2 + 56;
    v4 = ~v7;
    v8 = -v7;
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v6 = v9 & *(_QWORD *)(v2 + 56);
    result = swift_bridgeObjectRetain();
    v5 = 0;
  }
  v38 = v0 + 7;
  v35 = (id *)(v0 + 17);
  v42 = v0;
  v34 = v0 + 18;
  v36 = (unint64_t)(v4 + 64) >> 6;
  v39 = v2;
  while (v2 < 0)
  {
    v14 = sub_20A5B8DF8();
    if (!v14)
      goto LABEL_38;
    *v34 = v14;
    sub_20A459574(0, &qword_2545F9D58);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v15 = *v35;
    swift_unknownObjectRelease();
    v13 = v5;
    v11 = v6;
    if (!v15)
      goto LABEL_38;
LABEL_30:
    v41 = v11;
    v20 = v42[23];
    v19 = v42[24];
    v21 = v15;
    v22 = v42[21];
    v23 = v42[22];
    v24 = sub_20A5B8B64();
    v25 = *(_QWORD *)(v24 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56))(v19, 1, 1, v24);
    v26 = (_QWORD *)swift_allocObject();
    v26[2] = 0;
    v26[3] = 0;
    v26[4] = v21;
    v26[5] = v22;
    v26[6] = v23;
    sub_20A47D62C(v19, v20, (uint64_t *)&unk_253EB5180);
    LODWORD(v20) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v20, 1, v24);
    v40 = v21;
    swift_retain();
    swift_retain();
    v27 = v42[23];
    if ((_DWORD)v20 == 1)
    {
      sub_20A44CE2C(v42[23], (uint64_t *)&unk_253EB5180);
    }
    else
    {
      sub_20A5B8B58();
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v27, v24);
    }
    if (v26[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v28 = sub_20A5B8AF8();
      v30 = v29;
      swift_unknownObjectRelease();
    }
    else
    {
      v28 = 0;
      v30 = 0;
    }
    v2 = v39;
    v31 = *(_QWORD *)v42[19];
    v32 = swift_allocObject();
    *(_QWORD *)(v32 + 16) = &unk_2545FB498;
    *(_QWORD *)(v32 + 24) = v26;
    v33 = (_QWORD *)(v30 | v28);
    if (v30 | v28)
    {
      v33 = v38;
      *v38 = 0;
      v38[1] = 0;
      v42[9] = v28;
      v42[10] = v30;
    }
    v5 = v13;
    v10 = v42[24];
    v42[14] = 1;
    v42[15] = v33;
    v42[16] = v31;
    swift_task_create();

    swift_release();
    result = sub_20A44CE2C(v10, (uint64_t *)&unk_253EB5180);
    v6 = v41;
  }
  if (v6)
  {
    v11 = (v6 - 1) & v6;
    v12 = __clz(__rbit64(v6)) | (v5 << 6);
    v13 = v5;
LABEL_29:
    v15 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v12);
    if (!v15)
      goto LABEL_38;
    goto LABEL_30;
  }
  v16 = v5 + 1;
  if (!__OFADD__(v5, 1))
  {
    if (v16 >= v36)
      goto LABEL_38;
    v17 = *(_QWORD *)(v37 + 8 * v16);
    v13 = v5 + 1;
    if (!v17)
    {
      v13 = v5 + 2;
      if (v5 + 2 >= v36)
        goto LABEL_38;
      v17 = *(_QWORD *)(v37 + 8 * v13);
      if (!v17)
      {
        v13 = v5 + 3;
        if (v5 + 3 >= v36)
          goto LABEL_38;
        v17 = *(_QWORD *)(v37 + 8 * v13);
        if (!v17)
        {
          v13 = v5 + 4;
          if (v5 + 4 >= v36)
            goto LABEL_38;
          v17 = *(_QWORD *)(v37 + 8 * v13);
          if (!v17)
          {
            v18 = v5 + 5;
            while (v36 != v18)
            {
              v17 = *(_QWORD *)(v37 + 8 * v18++);
              if (v17)
              {
                v13 = v18 - 1;
                goto LABEL_28;
              }
            }
LABEL_38:
            sub_20A498A68();
            swift_task_dealloc();
            swift_task_dealloc();
            return ((uint64_t (*)(void))v42[1])();
          }
        }
      }
    }
LABEL_28:
    v11 = (v17 - 1) & v17;
    v12 = __clz(__rbit64(v17)) + (v13 << 6);
    goto LABEL_29;
  }
  __break(1u);
  return result;
}

uint64_t sub_20A50DC68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[56] = a5;
  v6[57] = a6;
  v6[55] = a4;
  v6[58] = type metadata accessor for ODISignpost();
  v6[59] = swift_task_alloc();
  v6[60] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A50DCD8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  void *v5;
  int v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;

  if (qword_2545F99E0 != -1)
    swift_once();
  v1 = v0[59];
  v3 = qword_2546100E8;
  v2 = unk_2546100F0;
  v4 = byte_2546100F8;
  v5 = (void *)qword_254610100;
  v6 = byte_254610108;
  *(_QWORD *)(v1 + 32) = "enableTelemetry=YES";
  *(_QWORD *)(v1 + 40) = 19;
  *(_BYTE *)(v1 + 48) = 2;
  *(_QWORD *)v1 = v3;
  *(_QWORD *)(v1 + 8) = v2;
  *(_BYTE *)(v1 + 16) = v4;
  *(_QWORD *)(v1 + 24) = v5;
  v7 = v5;
  sub_20A5B87D4();
  sub_20A5B8CFC();
  if (v6 == 1)
    sub_20A5B87BC();
  else
    sub_20A5B87C8();
  v8 = v0[59];
  v9 = v0[60];

  sub_20A4595B4(v8, v9);
  v0[61] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBFA68]), sel_init);
  if (qword_253EB5048 != -1)
    swift_once();
  v10 = (void *)v0[55];
  v11 = sub_20A5B8804();
  v12 = __swift_project_value_buffer(v11, (uint64_t)qword_253EBC888);
  v0[62] = v12;
  v13 = v10;
  sub_20A504A7C(v12, v13);

  return swift_task_switch();
}

uint64_t sub_20A50DEAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 448);
  result = swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 200);
  v4 = __OFADD__(v3, 1);
  v5 = v3 + 1;
  if (v4)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 200) = v5;
    return swift_task_switch();
  }
  return result;
}

uint64_t sub_20A50DF0C()
{
  _QWORD *v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v1 = sub_20A5B87EC();
  v2 = sub_20A5B8C48();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_20A443000, v1, v2, "Requesting geocode", v3, 2u);
    MEMORY[0x20BD26DB8](v3, -1, -1);
  }
  v4 = (void *)v0[61];
  v5 = v0[55];

  v0[63] = clock_gettime_nsec_np(_CLOCK_MONOTONIC_RAW);
  v0[7] = v0 + 53;
  v0[2] = v0;
  v0[3] = sub_20A50E034;
  v6 = swift_continuation_init();
  v0[28] = MEMORY[0x24BDAC760];
  v7 = v0 + 28;
  v7[1] = 0x40000000;
  v7[2] = sub_20A50F51C;
  v7[3] = &block_descriptor_42;
  v7[4] = v6;
  objc_msgSend(v4, sel_geocodePostalAddress_completionHandler_, v5, v7);
  return swift_continuation_await();
}

uint64_t sub_20A50E034()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 512) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_20A50E094()
{
  uint8_t *v0;
  uint64_t v1;
  os_log_type_t v2;
  unint64_t v3;
  uint64_t v4;
  NSObject *v5;
  unint64_t v6;
  __uint64_t v7;
  uint64_t v8;
  uint64_t result;
  id i;
  void *v11;
  id v12;
  id v13;
  unint64_t v14;
  unint64_t v15;
  id v16;
  void *v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v5 = *(NSObject **)(v1 + 504);
  v6 = *(_QWORD *)(v1 + 424);
  v7 = clock_gettime_nsec_np(_CLOCK_MONOTONIC_RAW);
  if (v7 < (unint64_t)v5)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 520) = v7 - (_QWORD)v5;
    swift_bridgeObjectRetain_n();
    v5 = sub_20A5B87EC();
    v2 = sub_20A5B8C48();
    v3 = v6 >> 62;
    if (!os_log_type_enabled(v5, v2))
    {

      swift_bridgeObjectRelease_n();
      goto LABEL_16;
    }
    v0 = (uint8_t *)swift_slowAlloc();
    v4 = swift_slowAlloc();
    v31 = v4;
    *(_DWORD *)v0 = 136315138;
    if (!v3)
    {
      v8 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain();
      v30 = v4;
      if (v8)
        goto LABEL_5;
LABEL_13:
      swift_bridgeObjectRelease();
      v12 = 0;
      goto LABEL_14;
    }
  }
  swift_bridgeObjectRetain();
  result = sub_20A5B8FCC();
  v30 = v4;
  if (!result)
    goto LABEL_13;
LABEL_5:
  if ((v6 & 0xC000000000000001) != 0)
    goto LABEL_33;
  if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    for (i = *(id *)(v6 + 32); ; i = (id)MEMORY[0x20BD25F48](0, v6))
    {
      v11 = i;
      swift_bridgeObjectRelease();
      v12 = objc_msgSend(v11, sel_location);

      if (v12)
      {
        v13 = objc_msgSend(v12, sel_description);

        v12 = (id)sub_20A5B8900();
        v15 = v14;

      }
      else
      {
LABEL_14:
        v15 = 0xE000000000000000;
      }
      *(_QWORD *)(v1 + 432) = sub_20A503EE0((uint64_t)v12, v15, &v31);
      sub_20A5B8D50();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_20A443000, v5, v2, "Geocode Result %s", v0, 0xCu);
      v2 = v30;
      swift_arrayDestroy();
      MEMORY[0x20BD26DB8](v30, -1, -1);
      MEMORY[0x20BD26DB8](v0, -1, -1);

LABEL_16:
      if (v3)
      {
        swift_bridgeObjectRetain();
        v5 = sub_20A5B8FCC();
        swift_bridgeObjectRelease();
        if (!v5)
        {
LABEL_27:
          swift_bridgeObjectRelease();
          goto LABEL_28;
        }
      }
      else
      {
        v5 = *(NSObject **)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (!v5)
          goto LABEL_27;
      }
      if ((v6 & 0xC000000000000001) != 0)
        break;
      if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v16 = *(id *)(v6 + 32);
        goto LABEL_21;
      }
      __break(1u);
LABEL_33:
      ;
    }
    v16 = (id)MEMORY[0x20BD25F48](0, v6);
LABEL_21:
    v17 = v16;
    *(_QWORD *)(v1 + 528) = v16;
    swift_bridgeObjectRelease();
    v18 = objc_msgSend(v17, sel_location);
    *(_QWORD *)(v1 + 536) = v18;
    if (v18)
    {
      v19 = sub_20A5B87EC();
      v20 = sub_20A5B8C48();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v21 = 0;
        _os_log_impl(&dword_20A443000, v19, v20, "fillCoordinateMap - geo coded address", v21, 2u);
        MEMORY[0x20BD26DB8](v21, -1, -1);
      }

      return swift_task_switch();
    }

LABEL_28:
    v22 = sub_20A5B87EC();
    v23 = sub_20A5B8C54();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_20A443000, v22, v23, "fillCoordinateMap - no geo coded address found but no error", v24, 2u);
      MEMORY[0x20BD26DB8](v24, -1, -1);
    }
    v25 = *(void **)(v1 + 488);

    sub_20A5B8CF0();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52C0);
    v26 = swift_allocObject();
    v27 = MEMORY[0x24BEE1328];
    v28 = MEMORY[0x24BEE1360];
    *(_OWORD *)(v26 + 16) = xmmword_20A5BA9A0;
    *(_QWORD *)(v26 + 56) = v27;
    *(_QWORD *)(v26 + 64) = v28;
    v29 = *(_QWORD *)(v1 + 480);
    *(_BYTE *)(v26 + 32) = 0;
    sub_20A5B87BC();
    swift_bridgeObjectRelease();
    sub_20A4595F8(v29);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A50E594()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 448);
  v2 = *(_QWORD *)(v1 + 192);
  v3 = __OFADD__(v2, 1);
  v4 = v2 + 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 192) = v4;
    return swift_task_switch();
  }
  return result;
}

uint64_t sub_20A50E5C0()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  if (qword_2545F9AA8 != -1)
    swift_once();
  v1 = (void *)v0[67];
  v0[68] = qword_2545FB3B8;
  objc_msgSend(v1, sel_coordinate);
  v0[69] = v2;
  v0[70] = v3;
  return swift_task_switch();
}

uint64_t sub_20A50E640()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  char isUniquelyReferenced_nonNull_native;
  id v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = v0[70];
  v2 = v0[69];
  v3 = v0[68];
  v4 = (void *)v0[67];
  v5 = (void *)v0[55];
  swift_beginAccess();
  v6 = v5;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *(_QWORD *)(v3 + 112);
  *(_QWORD *)(v3 + 112) = 0x8000000000000000;
  sub_20A476FAC(v2, v1, 0, v6, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v3 + 112) = v13;
  swift_bridgeObjectRelease();

  swift_endAccess();
  v8 = v4;
  v9 = (_QWORD *)swift_task_alloc();
  v0[71] = v9;
  *v9 = v0;
  v9[1] = sub_20A50E74C;
  v10 = v0[57];
  v11 = v0[55];
  v9[18] = v8;
  v9[19] = v10;
  v9[17] = v11;
  return swift_task_switch();
}

uint64_t sub_20A50E74C(char a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(*(_QWORD *)v1 + 536);
  *(_BYTE *)(*(_QWORD *)v1 + 608) = a1;
  swift_task_dealloc();

  return swift_task_switch();
}

uint64_t sub_20A50E7B0()
{
  uint64_t v0;
  char v1;
  void *v2;
  void *v3;
  void *v4;
  double v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_BYTE *)(v0 + 608);
  v2 = *(void **)(v0 + 536);
  v3 = *(void **)(v0 + 528);
  v4 = *(void **)(v0 + 488);
  v5 = (double)*(unint64_t *)(v0 + 520) / 1000000000.0;
  v6 = (void *)sub_20A5B88F4();
  v7 = swift_allocObject();
  *(_BYTE *)(v7 + 16) = v1;
  *(double *)(v7 + 24) = v5;
  *(_QWORD *)(v0 + 160) = sub_20A5137EC;
  *(_QWORD *)(v0 + 168) = v7;
  *(_QWORD *)(v0 + 128) = MEMORY[0x24BDAC760];
  *(_QWORD *)(v0 + 136) = 1107296256;
  *(_QWORD *)(v0 + 144) = sub_20A4C6DC8;
  *(_QWORD *)(v0 + 152) = &block_descriptor_62;
  v8 = _Block_copy((const void *)(v0 + 128));
  swift_release();
  AnalyticsSendEventLazy();

  _Block_release(v8);
  LOBYTE(v8) = *(_QWORD *)(v0 + 512) == 0;
  sub_20A5B8CF0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52C0);
  v9 = swift_allocObject();
  v10 = MEMORY[0x24BEE1328];
  v11 = MEMORY[0x24BEE1360];
  *(_OWORD *)(v9 + 16) = xmmword_20A5BA9A0;
  *(_QWORD *)(v9 + 56) = v10;
  *(_QWORD *)(v9 + 64) = v11;
  v12 = *(_QWORD *)(v0 + 480);
  *(_BYTE *)(v9 + 32) = (_BYTE)v8;
  sub_20A5B87BC();
  swift_bridgeObjectRelease();
  sub_20A4595F8(v12);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A50E9AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 448);
  v2 = *(_QWORD *)(v1 + 216);
  v3 = __OFADD__(v2, 1);
  v4 = v2 + 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 216) = v4;
    return swift_task_switch();
  }
  return result;
}

uint64_t sub_20A50E9D8()
{
  uint64_t v0;

  if (qword_2545F9AA8 != -1)
    swift_once();
  *(_QWORD *)(v0 + 592) = qword_2545FB3B8;
  return swift_task_switch();
}

uint64_t sub_20A50EA3C()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  id v3;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = v0[74];
  v2 = (void *)v0[55];
  swift_beginAccess();
  v3 = v2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *(_QWORD *)(v1 + 112);
  *(_QWORD *)(v1 + 112) = 0x8000000000000000;
  sub_20A476FAC(0, 0, 1, v3, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v1 + 112) = v9;
  swift_bridgeObjectRelease();

  swift_endAccess();
  v5 = (_QWORD *)swift_task_alloc();
  v0[75] = v5;
  *v5 = v0;
  v5[1] = sub_20A50EB28;
  v6 = v0[57];
  v7 = v0[55];
  v5[18] = 0;
  v5[19] = v6;
  v5[17] = v7;
  return swift_task_switch();
}

uint64_t sub_20A50EB28(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 609) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A50EB84()
{
  uint64_t v0;
  char v1;
  void *v2;
  void *v3;
  void *v4;
  double v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_BYTE *)(v0 + 609);
  v2 = *(void **)(v0 + 584);
  v3 = *(void **)(v0 + 512);
  v4 = *(void **)(v0 + 488);
  v5 = (double)*(unint64_t *)(v0 + 576) / 1000000000.0;
  v6 = (void *)sub_20A5B88F4();
  v7 = swift_allocObject();
  *(_BYTE *)(v7 + 16) = v1;
  *(double *)(v7 + 24) = v5;
  *(_QWORD *)(v0 + 112) = sub_20A5137BC;
  *(_QWORD *)(v0 + 120) = v7;
  *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
  *(_QWORD *)(v0 + 88) = 1107296256;
  *(_QWORD *)(v0 + 96) = sub_20A4C6DC8;
  *(_QWORD *)(v0 + 104) = &block_descriptor_55;
  v8 = _Block_copy((const void *)(v0 + 80));
  swift_release();
  AnalyticsSendEventLazy();

  _Block_release(v8);
  LOBYTE(v6) = *(_QWORD *)(v0 + 512) == 0;
  sub_20A5B8CF0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52C0);
  v9 = swift_allocObject();
  v10 = MEMORY[0x24BEE1328];
  v11 = MEMORY[0x24BEE1360];
  *(_OWORD *)(v9 + 16) = xmmword_20A5BA9A0;
  *(_QWORD *)(v9 + 56) = v10;
  *(_QWORD *)(v9 + 64) = v11;
  v12 = *(_QWORD *)(v0 + 480);
  *(_BYTE *)(v9 + 32) = (_BYTE)v6;
  sub_20A5B87BC();
  swift_bridgeObjectRelease();
  sub_20A4595F8(v12);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A50ED84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 448);
  v2 = *(_QWORD *)(v1 + 224);
  v3 = __OFADD__(v2, 1);
  v4 = v2 + 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 224) = v4;
    return swift_task_switch();
  }
  return result;
}

uint64_t sub_20A50EDB0()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  void *v3;
  double v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = (void *)v0[73];
  v2 = (void *)v0[64];
  v3 = (void *)v0[61];
  v4 = (double)(unint64_t)v0[72] / 1000000000.0;
  v5 = (void *)sub_20A5B88F4();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v2;
  *(double *)(v6 + 24) = v4;
  v0[26] = sub_20A5137A0;
  v0[27] = v6;
  v0[22] = MEMORY[0x24BDAC760];
  v0[23] = 1107296256;
  v0[24] = sub_20A4C6DC8;
  v0[25] = &block_descriptor_48;
  v7 = _Block_copy(v0 + 22);
  v8 = v2;
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v7);

  sub_20A5B8CF0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52C0);
  v9 = swift_allocObject();
  v10 = MEMORY[0x24BEE1328];
  v11 = MEMORY[0x24BEE1360];
  *(_OWORD *)(v9 + 16) = xmmword_20A5BA9A0;
  *(_QWORD *)(v9 + 56) = v10;
  *(_QWORD *)(v9 + 64) = v11;
  v12 = v0[60];
  *(_BYTE *)(v9 + 32) = 0;
  sub_20A5B87BC();
  swift_bridgeObjectRelease();
  sub_20A4595F8(v12);
  swift_task_dealloc();
  swift_task_dealloc();
  return ((uint64_t (*)(void))v0[1])();
}

__uint64_t sub_20A50EFA4()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  unint64_t v12;
  __uint64_t result;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  _BOOL4 v27;
  void *v28;
  uint8_t *v29;
  _QWORD *v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  NSObject *v35;
  os_log_type_t v36;
  _BOOL4 v37;
  void *v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43[2];

  v1 = *(void **)(v0 + 512);
  swift_willThrow();
  v2 = v1;
  v3 = v1;
  v4 = sub_20A5B87EC();
  v5 = sub_20A5B8C48();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 512);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v43[0] = v8;
    *(_DWORD *)v7 = 136315138;
    swift_getErrorValue();
    v9 = sub_20A5B923C();
    *(_QWORD *)(v0 + 408) = sub_20A503EE0(v9, v10, v43);
    sub_20A5B8D50();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_20A443000, v4, v5, "Geocode error: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x20BD26DB8](v8, -1, -1);
    MEMORY[0x20BD26DB8](v7, -1, -1);
  }
  else
  {
    v11 = *(void **)(v0 + 512);

  }
  v12 = *(_QWORD *)(v0 + 504);
  result = clock_gettime_nsec_np(_CLOCK_MONOTONIC_RAW);
  if (result >= v12)
  {
    *(_QWORD *)(v0 + 576) = result - v12;
    v14 = (void *)sub_20A5B8414();
    *(_QWORD *)(v0 + 584) = v14;
    v15 = objc_msgSend(v14, sel_domain);
    v16 = sub_20A5B8900();
    v18 = v17;

    if (v16 == sub_20A5B8900() && v18 == v19)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v20 = sub_20A5B91AC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v20 & 1) == 0)
        goto LABEL_13;
    }
    if (objc_msgSend(v14, sel_code) == (id)8)
    {
      v21 = sub_20A5B87EC();
      v22 = sub_20A5B8C48();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v23 = 0;
        _os_log_impl(&dword_20A443000, v21, v22, "fillCoordinateMap - address not found - caching as not found", v23, 2u);
        MEMORY[0x20BD26DB8](v23, -1, -1);
      }

      return swift_task_switch();
    }
LABEL_13:
    v24 = *(id *)(v0 + 440);
    v25 = sub_20A5B87EC();
    v26 = sub_20A5B8C54();
    v27 = os_log_type_enabled(v25, v26);
    v28 = *(void **)(v0 + 440);
    if (v27)
    {
      v29 = (uint8_t *)swift_slowAlloc();
      v30 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v29 = 138477827;
      *(_QWORD *)(v0 + 384) = v28;
      v31 = v28;
      sub_20A5B8D50();
      *v30 = v28;

      _os_log_impl(&dword_20A443000, v25, v26, "Ignoring error occurred in geocoding address: %{private}@", v29, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA640);
      swift_arrayDestroy();
      MEMORY[0x20BD26DB8](v30, -1, -1);
      MEMORY[0x20BD26DB8](v29, -1, -1);
    }
    else
    {

      v25 = *(NSObject **)(v0 + 440);
    }
    v32 = *(void **)(v0 + 512);

    v33 = v32;
    v34 = v32;
    v35 = sub_20A5B87EC();
    v36 = sub_20A5B8C54();
    v37 = os_log_type_enabled(v35, v36);
    v38 = *(void **)(v0 + 512);
    if (v37)
    {
      v39 = (uint8_t *)swift_slowAlloc();
      v40 = swift_slowAlloc();
      v43[0] = v40;
      *(_DWORD *)v39 = 136315138;
      swift_getErrorValue();
      v41 = sub_20A5B923C();
      *(_QWORD *)(v0 + 400) = sub_20A503EE0(v41, v42, v43);
      sub_20A5B8D50();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_20A443000, v35, v36, "    ignored : %s", v39, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x20BD26DB8](v40, -1, -1);
      MEMORY[0x20BD26DB8](v39, -1, -1);
    }
    else
    {

    }
    return swift_task_switch();
  }
  __break(1u);
  return result;
}

uint64_t sub_20A50F51C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  _QWORD *v5;
  id v6;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52D0);
    swift_allocError();
    *v5 = a3;
    v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    sub_20A459574(0, &qword_2545FB4B0);
    **(_QWORD **)(*(_QWORD *)(v3 + 64) + 40) = sub_20A5B8AA4();
    return swift_continuation_throwingResume();
  }
}

unint64_t sub_20A50F5C4(double a1)
{
  void *v2;
  id v3;
  id v4;
  uint64_t inited;
  id v6;
  id v7;
  unint64_t v8;

  v2 = (void *)sub_20A5B8414();
  v3 = objc_msgSend(v2, sel_code);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA6C0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A5BA9B0;
  *(_QWORD *)(inited + 32) = 0x646F43726F727265;
  *(_QWORD *)(inited + 40) = 0xE900000000000065;
  *(_QWORD *)(inited + 48) = v4;
  *(_QWORD *)(inited + 56) = 0x6E6F697461727564;
  *(_QWORD *)(inited + 64) = 0xE800000000000000;
  v6 = objc_allocWithZone(MEMORY[0x24BDD16E0]);
  v7 = v4;
  *(_QWORD *)(inited + 72) = objc_msgSend(v6, sel_initWithDouble_, a1);
  v8 = sub_20A46AB30(inited);

  return v8;
}

unint64_t sub_20A50F6D0(char a1, char a2, double a3)
{
  uint64_t inited;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA6C0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A5BDA90;
  *(_QWORD *)(inited + 32) = 0xD000000000000011;
  *(_QWORD *)(inited + 40) = 0x800000020A5E3FC0;
  *(_QWORD *)(inited + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, a2 & 1);
  *(_QWORD *)(inited + 56) = 0x656D69546E4F7369;
  *(_QWORD *)(inited + 64) = 0xE800000000000000;
  *(_QWORD *)(inited + 72) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, (a1 & 1) == 0);
  *(_QWORD *)(inited + 80) = 0x6E6F697461727564;
  *(_QWORD *)(inited + 88) = 0xE800000000000000;
  *(_QWORD *)(inited + 96) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, a3);
  return sub_20A46AB30(inited);
}

uint64_t sub_20A50F7E0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[5] = a1;
  v2[6] = v1;
  v2[7] = type metadata accessor for ODISignpost();
  v2[8] = swift_task_alloc();
  v2[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A50F84C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  void *v5;
  int v6;
  id v7;
  uint64_t v8;
  uint64_t v9;

  if (qword_2545F99E8 != -1)
    swift_once();
  v1 = v0[8];
  v3 = qword_254610110;
  v2 = *(_QWORD *)algn_254610118;
  v4 = byte_254610120;
  v5 = (void *)qword_254610128;
  v6 = byte_254610130;
  *(_QWORD *)(v1 + 32) = "enableTelemetry=YES";
  *(_QWORD *)(v1 + 40) = 19;
  *(_BYTE *)(v1 + 48) = 2;
  *(_QWORD *)v1 = v3;
  *(_QWORD *)(v1 + 8) = v2;
  *(_BYTE *)(v1 + 16) = v4;
  *(_QWORD *)(v1 + 24) = v5;
  v7 = v5;
  sub_20A5B87D4();
  sub_20A5B8CFC();
  if (v6 == 1)
    sub_20A5B87BC();
  else
    sub_20A5B87C8();
  v8 = v0[8];
  v9 = v0[9];

  sub_20A4595B4(v8, v9);
  if (qword_2545F9AA8 != -1)
    swift_once();
  v0[10] = qword_2545FB3B8;
  return swift_task_switch();
}

uint64_t sub_20A50F9D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  unint64_t v4;
  void *v5;
  char v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 80);
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 112);
  if (*(_QWORD *)(v2 + 16))
  {
    v3 = *(id *)(v0 + 40);
    swift_bridgeObjectRetain();
    v4 = sub_20A470BC8((uint64_t)v3);
    v5 = *(void **)(v0 + 40);
    if ((v6 & 1) != 0)
    {
      v7 = *(_QWORD *)(v2 + 56) + 24 * v4;
      *(_QWORD *)(v0 + 88) = *(_QWORD *)v7;
      *(_QWORD *)(v0 + 96) = *(_QWORD *)(v7 + 8);
      *(_BYTE *)(v0 + 104) = *(_BYTE *)(v7 + 16);
    }
    swift_bridgeObjectRelease();

  }
  return swift_task_switch();
}

uint64_t sub_20A50FAB4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);
  sub_20A5B8CF0();
  sub_20A5B87C8();
  sub_20A4595F8(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD, _QWORD, uint64_t))(v0 + 8))(0, 0, 1);
}

uint64_t sub_20A50FB34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(unsigned __int8 *)(v0 + 104);
  if ((v1 & 1) != 0)
  {
    v2 = 0;
    v3 = 0;
  }
  else
  {
    v2 = *(_QWORD *)(v0 + 88);
    v3 = *(_QWORD *)(v0 + 96);
  }
  v4 = *(_QWORD *)(v0 + 72);
  sub_20A5B8CF0();
  sub_20A5B87C8();
  sub_20A4595F8(v4);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 8))(v2, v3, v1);
}

uint64_t sub_20A50FBD4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 88) = v0;
  return swift_task_switch();
}

uint64_t sub_20A50FBEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v1 = *(_QWORD *)(v0 + 88);
  *(_BYTE *)(v1 + 120) = 1;
  v2 = (uint64_t *)(v1 + 112);
  swift_beginAccess();
  v3 = *(_QWORD *)(*(_QWORD *)(v1 + 112) + 16);
  if (!v3)
    return (*(uint64_t (**)(void))(v0 + 8))();
  if (qword_253EB5048 != -1)
    swift_once();
  v4 = sub_20A5B8804();
  *(_QWORD *)(v0 + 96) = __swift_project_value_buffer(v4, (uint64_t)qword_253EBC888);
  v5 = sub_20A5B87EC();
  v6 = sub_20A5B8C48();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v7 = 134349056;
    *(_QWORD *)(v0 + 80) = v3;
    sub_20A5B8D50();
    _os_log_impl(&dword_20A443000, v5, v6, "fillCoordinateMap - %{public}ld new/updated addresses to store to cache", v7, 0xCu);
    MEMORY[0x20BD26DB8](v7, -1, -1);
  }
  v8 = *(_QWORD *)(v0 + 88);

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v8 + 128), *(_QWORD *)(v8 + 152));
  v9 = *v2;
  *(_QWORD *)(v0 + 104) = v9;
  swift_bridgeObjectRetain();
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v10;
  *v10 = v0;
  v10[1] = sub_20A50FDA0;
  return sub_20A452494(v9);
}

uint64_t sub_20A50FDA0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 120) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_20A50FE14()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  uint64_t v13;

  v1 = *(void **)(v0 + 120);
  swift_bridgeObjectRelease();
  v2 = v1;
  v3 = v1;
  v4 = sub_20A5B87EC();
  v5 = sub_20A5B8C54();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 120);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v13 = v8;
    *(_DWORD *)v7 = 136315138;
    swift_getErrorValue();
    v9 = sub_20A5B923C();
    *(_QWORD *)(v0 + 72) = sub_20A503EE0(v9, v10, &v13);
    sub_20A5B8D50();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_20A443000, v4, v5, "Error thrown trying to cache geocodes to asd: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x20BD26DB8](v8, -1, -1);
    MEMORY[0x20BD26DB8](v7, -1, -1);

  }
  else
  {
    v11 = *(void **)(v0 + 120);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A50FFC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[18] = a2;
  v3[19] = v2;
  v3[17] = a1;
  return swift_task_switch();
}

uint64_t sub_20A50FFE4()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  void *v3;
  uint64_t v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  void *v14;
  _QWORD *v15;
  _QWORD *v16;
  id v17;
  id v18;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v26;
  void *v27;
  uint64_t inited;
  id v29;
  id v30;
  _QWORD *v31;
  uint64_t v32;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(unsigned __int8 *)(v1 + 120);
  *(_BYTE *)(v0 + 192) = v2;
  if (v2 == 1)
  {
    if (qword_253EB5048 != -1)
      swift_once();
    v3 = *(void **)(v0 + 144);
    v4 = sub_20A5B8804();
    *(_QWORD *)(v0 + 160) = __swift_project_value_buffer(v4, (uint64_t)qword_253EBC888);
    v5 = v3;
    v6 = sub_20A5B87EC();
    v7 = sub_20A5B8C48();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = *(_QWORD *)(v0 + 144);
      v9 = (uint8_t *)swift_slowAlloc();
      v10 = swift_slowAlloc();
      *(_DWORD *)v9 = 136315138;
      v32 = v10;
      if (v8)
        v11 = 0x746C75736572;
      else
        v11 = 0x6E756F6620746F6ELL;
      if (v8)
        v12 = 0xE600000000000000;
      else
        v12 = 0xE900000000000064;
      *(_QWORD *)(v0 + 128) = sub_20A503EE0(v11, v12, &v32);
      sub_20A5B8D50();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_20A443000, v6, v7, "Send late geocode %s to asd cache", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x20BD26DB8](v10, -1, -1);
      MEMORY[0x20BD26DB8](v9, -1, -1);
    }
    else
    {

    }
    v26 = *(_QWORD *)(v0 + 144);
    v27 = *(void **)(v0 + 136);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)(v0 + 152) + 128), *(_QWORD *)(*(_QWORD *)(v0 + 152) + 152));
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA010);
    inited = swift_initStackObject();
    *(_QWORD *)(v0 + 168) = inited;
    *(_OWORD *)(inited + 16) = xmmword_20A5BA9A0;
    *(_QWORD *)(inited + 32) = v27;
    *(_QWORD *)(inited + 40) = v26;
    v29 = v5;
    v30 = v27;
    v31 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 176) = v31;
    *v31 = v0;
    v31[1] = sub_20A510318;
    return sub_20A452494(inited);
  }
  else
  {
    v14 = *(void **)(v0 + 136);
    v13 = *(void **)(v0 + 144);
    v15 = (_QWORD *)(v1 + 112);
    swift_beginAccess();
    v16 = *(_QWORD **)(v1 + 112);
    v17 = v13;
    v18 = v14;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v1 + 112) = v16;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v16 = sub_20A470628(0, v16[2] + 1, 1, v16);
      *v15 = v16;
    }
    v21 = v16[2];
    v20 = v16[3];
    if (v21 >= v20 >> 1)
    {
      v16 = sub_20A470628((_QWORD *)(v20 > 1), v21 + 1, 1, v16);
      *v15 = v16;
    }
    v23 = *(_QWORD *)(v0 + 136);
    v22 = *(_QWORD *)(v0 + 144);
    v16[2] = v21 + 1;
    v24 = &v16[2 * v21];
    v24[4] = v23;
    v24[5] = v22;
    swift_endAccess();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 192));
  }
}

uint64_t sub_20A510318()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 184) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA018);
  swift_arrayDestroy();
  return (*(uint64_t (**)(_QWORD))(v2 + 8))(*(unsigned __int8 *)(v2 + 192));
}

uint64_t sub_20A5103B0()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  uint64_t v13;

  v1 = *(void **)(v0 + 184);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA018);
  swift_arrayDestroy();
  v2 = v1;
  v3 = v1;
  v4 = sub_20A5B87EC();
  v5 = sub_20A5B8C54();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 184);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v13 = v8;
    *(_DWORD *)v7 = 136315138;
    swift_getErrorValue();
    v9 = sub_20A5B923C();
    *(_QWORD *)(v0 + 120) = sub_20A503EE0(v9, v10, &v13);
    sub_20A5B8D50();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_20A443000, v4, v5, "Error storing result to geocode cache: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x20BD26DB8](v8, -1, -1);
    MEMORY[0x20BD26DB8](v7, -1, -1);

  }
  else
  {
    v11 = *(void **)(v0 + 184);

  }
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 192));
}

uint64_t sub_20A510590()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 128);
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t GeoCoder.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t GeoCoder.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t GeoCoder.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

void sub_20A510620(uint64_t *a1, _QWORD **a2, uint64_t a3, uint64_t (*a4)(void))
{
  void *v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = (void *)a4();
  v7 = *a1 + 8;
  sub_20A5B8D50();
  *a1 = v7;
  v8 = *a2;
  if (*a2)
  {
    *v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {

  }
}

uint64_t sub_20A5106D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB4B8);
    v2 = sub_20A5B8E58();
    v14 = v2;
    sub_20A5B8DD4();
    if (sub_20A5B8DF8())
    {
      sub_20A459574(0, &qword_2545F9D58);
      do
      {
        swift_dynamicCast();
        v2 = v14;
        if (*(_QWORD *)(v14 + 24) <= *(_QWORD *)(v14 + 16))
        {
          sub_20A510BA0();
          v2 = v14;
        }
        result = sub_20A5B8D08();
        v4 = v2 + 56;
        v5 = -1 << *(_BYTE *)(v2 + 32);
        v6 = result & ~v5;
        v7 = v6 >> 6;
        if (((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          v8 = __clz(__rbit64((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v9 = 0;
          v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v11 = v7 == v10;
            if (v7 == v10)
              v7 = 0;
            v9 |= v11;
            v12 = *(_QWORD *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(_QWORD *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v8) = v13;
        ++*(_QWORD *)(v2 + 16);
      }
      while (sub_20A5B8DF8());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x24BEE4B08];
  }
  return v2;
}

uint64_t sub_20A5108C4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB4C0);
  v3 = sub_20A5B8E4C();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_20A5B929C();
      sub_20A5B8978();
      result = sub_20A5B92CC();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_20A510BA0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB4B8);
  v3 = sub_20A5B8E4C();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v28 = v0;
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v6 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v7 = ~(-1 << v5);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v9 = (unint64_t)(v5 + 63) >> 6;
    v10 = v3 + 56;
    result = swift_retain();
    v12 = 0;
    while (1)
    {
      if (v8)
      {
        v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v15 = v14 | (v12 << 6);
      }
      else
      {
        v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9)
          goto LABEL_33;
        v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          v12 = v16 + 1;
          if (v16 + 1 >= v9)
            goto LABEL_33;
          v17 = v6[v12];
          if (!v17)
          {
            v12 = v16 + 2;
            if (v16 + 2 >= v9)
              goto LABEL_33;
            v17 = v6[v12];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                v1 = v28;
                v27 = 1 << *(_BYTE *)(v2 + 32);
                if (v27 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v27;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  v12 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v12 >= v9)
                    goto LABEL_33;
                  v17 = v6[v12];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v12 = v18;
            }
          }
        }
LABEL_23:
        v8 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      v19 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
      result = sub_20A5B8D08();
      v20 = -1 << *(_BYTE *)(v4 + 32);
      v21 = result & ~v20;
      v22 = v21 >> 6;
      if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v25 = v22 == v24;
          if (v22 == v24)
            v22 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v13) = v19;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_20A510E3C(uint64_t a1)
{
  return sub_20A510E54(a1, &qword_2545FB540);
}

uint64_t sub_20A510E48(uint64_t a1)
{
  return sub_20A510E54(a1, &qword_2545FB5C0);
}

uint64_t sub_20A510E54(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;

  v3 = v2;
  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  result = sub_20A5B8E4C();
  v6 = result;
  if (*(_QWORD *)(v4 + 16))
  {
    v7 = 0;
    v8 = (_QWORD *)(v4 + 56);
    v9 = 1 << *(_BYTE *)(v4 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v4 + 56);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = result + 56;
    while (1)
    {
      if (v11)
      {
        v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v16 = v15 | (v7 << 6);
      }
      else
      {
        v17 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v17 >= v12)
          goto LABEL_33;
        v18 = v8[v17];
        ++v7;
        if (!v18)
        {
          v7 = v17 + 1;
          if (v17 + 1 >= v12)
            goto LABEL_33;
          v18 = v8[v7];
          if (!v18)
          {
            v7 = v17 + 2;
            if (v17 + 2 >= v12)
              goto LABEL_33;
            v18 = v8[v7];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v12)
              {
LABEL_33:
                v28 = 1 << *(_BYTE *)(v4 + 32);
                if (v28 > 63)
                  bzero((void *)(v4 + 56), ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v28;
                v3 = v2;
                *(_QWORD *)(v4 + 16) = 0;
                break;
              }
              v18 = v8[v19];
              if (!v18)
              {
                while (1)
                {
                  v7 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_39;
                  if (v7 >= v12)
                    goto LABEL_33;
                  v18 = v8[v7];
                  ++v19;
                  if (v18)
                    goto LABEL_23;
                }
              }
              v7 = v19;
            }
          }
        }
LABEL_23:
        v11 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v7 << 6);
      }
      v20 = *(_BYTE *)(*(_QWORD *)(v4 + 48) + v16);
      sub_20A5B929C();
      sub_20A5B92A8();
      result = sub_20A5B92CC();
      v21 = -1 << *(_BYTE *)(v6 + 32);
      v22 = result & ~v21;
      v23 = v22 >> 6;
      if (((-1 << v22) & ~*(_QWORD *)(v13 + 8 * (v22 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v13 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v26 = v23 == v25;
          if (v23 == v25)
            v23 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v13 + 8 * v23);
        }
        while (v27 == -1);
        v14 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_BYTE *)(*(_QWORD *)(v6 + 48) + v14) = v20;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  result = swift_release();
  *v3 = v6;
  return result;
}

unint64_t sub_20A5110F8(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  sub_20A5B8D08();
  result = sub_20A5B8DC8();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

void *sub_20A511178()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB4C0);
  v2 = *v0;
  v3 = sub_20A5B8E40();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_20A511328()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB4B8);
  v2 = *v0;
  v3 = sub_20A5B8E40();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_28;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
      {
        v9 = v18 + 2;
        if (v18 + 2 >= v13)
          goto LABEL_28;
        v19 = *(_QWORD *)(v6 + 8 * v9);
        if (!v19)
          break;
      }
    }
LABEL_27:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    result = v17;
  }
  v20 = v18 + 3;
  if (v20 >= v13)
    goto LABEL_28;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_20A5114D0()
{
  return sub_20A5114E8(&qword_2545FB540);
}

void *sub_20A5114DC()
{
  return sub_20A5114E8(&qword_2545FB5C0);
}

void *sub_20A5114E8(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_20A5B8E40();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 56);
  v7 = v3 + 56;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v7 + 8 * v17);
    ++v10;
    if (!v18)
    {
      v10 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v7 + 8 * v10);
      if (!v18)
      {
        v10 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v7 + 8 * v10);
        if (!v18)
          break;
      }
    }
LABEL_27:
    v13 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_12:
    *(_BYTE *)(*(_QWORD *)(v5 + 48) + v16) = *(_BYTE *)(*(_QWORD *)(v3 + 48) + v16);
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v7 + 8 * v19);
  if (v18)
  {
    v10 = v19;
    goto LABEL_27;
  }
  while (1)
  {
    v10 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v10 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v7 + 8 * v10);
    ++v19;
    if (v18)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void sub_20A511670(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  unsigned __int8 v6;
  void *v7;
  _QWORD *v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  id v17;
  unint64_t v18;
  char v19;
  void *v20;
  id v21;
  _QWORD *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  void **v27;
  unsigned __int8 v28;
  void *v29;
  _QWORD *v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  _BOOL8 v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v6 = *(_BYTE *)(a1 + 32);
  v7 = *(void **)(a1 + 40);
  swift_bridgeObjectRetain();
  v8 = (_QWORD *)*a3;
  v9 = sub_20A470C14(v6);
  v11 = v8[2];
  v12 = (v10 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
    goto LABEL_24;
  v14 = v9;
  v15 = v10;
  v16 = v8[3];
  v17 = v7;
  if (v16 >= v13)
  {
    if ((a2 & 1) != 0)
    {
      if ((v15 & 1) != 0)
        goto LABEL_10;
    }
    else
    {
      sub_20A47920C();
      if ((v15 & 1) != 0)
        goto LABEL_10;
    }
LABEL_13:
    v22 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v14 >> 6) + 64) |= 1 << v14;
    *(_BYTE *)(v22[6] + v14) = v6;
    *(_QWORD *)(v22[7] + 8 * v14) = v17;
    v23 = v22[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v22[2] = v25;
    v26 = v3 - 1;
    if (v3 == 1)
    {
LABEL_23:
      swift_bridgeObjectRelease_n();
      return;
    }
    v27 = (void **)(a1 + 56);
    while (1)
    {
      v28 = *((_BYTE *)v27 - 8);
      v29 = *v27;
      v30 = (_QWORD *)*a3;
      v31 = sub_20A470C14(v28);
      v33 = v30[2];
      v34 = (v32 & 1) == 0;
      v35 = v33 + v34;
      if (__OFADD__(v33, v34))
        break;
      v36 = v31;
      v37 = v32;
      v38 = v30[3];
      v17 = v29;
      if (v38 < v35)
      {
        sub_20A475B68(v35, 1);
        v39 = sub_20A470C14(v28);
        if ((v37 & 1) != (v40 & 1))
          goto LABEL_26;
        v36 = v39;
      }
      if ((v37 & 1) != 0)
        goto LABEL_10;
      v41 = (_QWORD *)*a3;
      *(_QWORD *)(*a3 + 8 * (v36 >> 6) + 64) |= 1 << v36;
      *(_BYTE *)(v41[6] + v36) = v28;
      *(_QWORD *)(v41[7] + 8 * v36) = v17;
      v42 = v41[2];
      v24 = __OFADD__(v42, 1);
      v43 = v42 + 1;
      if (v24)
        goto LABEL_25;
      v41[2] = v43;
      v27 += 2;
      if (!--v26)
        goto LABEL_23;
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_20A475B68(v13, a2 & 1);
  v18 = sub_20A470C14(v6);
  if ((v15 & 1) == (v19 & 1))
  {
    v14 = v18;
    if ((v15 & 1) == 0)
      goto LABEL_13;
LABEL_10:
    v20 = (void *)swift_allocError();
    swift_willThrow();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52D0);
    if ((swift_dynamicCast() & 1) == 0)
    {

      swift_bridgeObjectRelease_n();
      return;
    }
    goto LABEL_27;
  }
LABEL_26:
  sub_20A5B9218();
  __break(1u);
LABEL_27:
  sub_20A5B8E94();
  sub_20A5B899C();
  sub_20A5B8F9C();
  sub_20A5B899C();
  sub_20A5B8FB4();
  __break(1u);
}

uint64_t sub_20A5119D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  char v20;
  uint64_t v21;
  id v22;
  char v23;
  uint64_t isStackAllocationSafe;
  uint64_t v25;
  char v26;
  unint64_t v27;
  size_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  int64_t v38;
  _QWORD v39[6];

  v2 = a2;
  v39[5] = *MEMORY[0x24BDAC8D0];
  if (!*(_QWORD *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x24BEE4B08];
  }
  v4 = *(_QWORD *)(a1 + 64);
  v37 = a1 + 64;
  v5 = -1 << *(_BYTE *)(a1 + 32);
  v35 = ~v5;
  if (-v5 < 64)
    v6 = ~(-1 << -(char)v5);
  else
    v6 = -1;
  v7 = v6 & v4;
  v36 = (unint64_t)(63 - v5) >> 6;
  v8 = a2 + 56;
  swift_bridgeObjectRetain();
  v38 = 0;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v38 << 6);
    }
    else
    {
      v11 = v38 + 1;
      if (__OFADD__(v38, 1))
      {
        __break(1u);
        goto LABEL_39;
      }
      if (v11 >= v36)
        goto LABEL_37;
      v12 = *(_QWORD *)(v37 + 8 * v11);
      v13 = v38 + 1;
      if (!v12)
      {
        v13 = v38 + 2;
        if (v38 + 2 >= v36)
          goto LABEL_37;
        v12 = *(_QWORD *)(v37 + 8 * v13);
        if (!v12)
        {
          v13 = v38 + 3;
          if (v38 + 3 >= v36)
            goto LABEL_37;
          v12 = *(_QWORD *)(v37 + 8 * v13);
          if (!v12)
          {
            v13 = v38 + 4;
            if (v38 + 4 >= v36)
              goto LABEL_37;
            v12 = *(_QWORD *)(v37 + 8 * v13);
            if (!v12)
            {
              v14 = v38 + 5;
              if (v38 + 5 >= v36)
              {
LABEL_37:
                sub_20A498A68();
                return v2;
              }
              v12 = *(_QWORD *)(v37 + 8 * v14);
              if (!v12)
              {
                while (1)
                {
                  v13 = v14 + 1;
                  if (__OFADD__(v14, 1))
                    break;
                  if (v13 >= v36)
                    goto LABEL_37;
                  v12 = *(_QWORD *)(v37 + 8 * v13);
                  ++v14;
                  if (v12)
                    goto LABEL_24;
                }
LABEL_39:
                __break(1u);
              }
              v13 = v38 + 5;
            }
          }
        }
      }
LABEL_24:
      v7 = (v12 - 1) & v12;
      v10 = __clz(__rbit64(v12)) + (v13 << 6);
      v38 = v13;
    }
    v15 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v10);
    v16 = sub_20A5B8D08();
    v17 = -1 << *(_BYTE *)(v2 + 32);
    v18 = v16 & ~v17;
    if (((*(_QWORD *)(v8 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) != 0)
      break;
LABEL_6:

  }
  sub_20A459574(0, &qword_2545F9D58);
  v19 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v18);
  v20 = sub_20A5B8D14();

  if ((v20 & 1) == 0)
  {
    v21 = ~v17;
    do
    {
      v18 = (v18 + 1) & v21;
      if (((*(_QWORD *)(v8 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
        goto LABEL_6;
      v22 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v18);
      v23 = sub_20A5B8D14();

    }
    while ((v23 & 1) == 0);
  }

  v39[0] = a1;
  v39[1] = v37;
  v39[2] = v35;
  v39[3] = v38;
  v39[4] = v7;
  v26 = *(_BYTE *)(v2 + 32);
  v27 = (unint64_t)((1 << v26) + 63) >> 6;
  v28 = 8 * v27;
  if ((v26 & 0x3Fu) < 0xE
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe, v25);
    memcpy((char *)&v34 - ((v28 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v28);
    sub_20A511E10((unint64_t *)((char *)&v34 - ((v28 + 15) & 0x3FFFFFFFFFFFFFF0)), v27, v2, v18, v39);
    v30 = v29;
    swift_release();
    sub_20A498A68();
  }
  else
  {
    v31 = (void *)swift_slowAlloc();
    memcpy(v31, (const void *)(v2 + 56), v28);
    sub_20A511E10((unint64_t *)v31, v27, v2, v18, v39);
    v30 = v32;
    swift_release();
    sub_20A498A68();
    MEMORY[0x20BD26DB8](v31, -1, -1);
  }
  return v30;
}

void sub_20A511E10(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  id v25;
  char v26;
  uint64_t v27;
  unint64_t i;
  unint64_t v29;
  id v30;
  char v31;
  unint64_t v32;
  uint64_t v34;
  uint64_t v36;

  v6 = *(_QWORD *)(a3 + 16);
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v7 = v6 - 1;
  v36 = a3 + 56;
  while (2)
  {
    v34 = v7;
    do
    {
      while (1)
      {
        v8 = a5[3];
        v9 = a5[4];
        if (v9)
        {
          v10 = (v9 - 1) & v9;
          v11 = __clz(__rbit64(v9)) | (v8 << 6);
        }
        else
        {
          v12 = v8 + 1;
          if (__OFADD__(v8, 1))
          {
            __break(1u);
            goto LABEL_36;
          }
          v13 = (unint64_t)(a5[2] + 64) >> 6;
          v14 = a5[3];
          if (v12 >= v13)
            goto LABEL_34;
          v15 = a5[1];
          v16 = *(_QWORD *)(v15 + 8 * v12);
          if (!v16)
          {
            v14 = v8 + 1;
            if (v8 + 2 >= v13)
              goto LABEL_34;
            v16 = *(_QWORD *)(v15 + 8 * (v8 + 2));
            if (v16)
            {
              v12 = v8 + 2;
            }
            else
            {
              v14 = v8 + 2;
              if (v8 + 3 >= v13)
                goto LABEL_34;
              v16 = *(_QWORD *)(v15 + 8 * (v8 + 3));
              if (v16)
              {
                v12 = v8 + 3;
              }
              else
              {
                v12 = v8 + 4;
                v14 = v8 + 3;
                if (v8 + 4 >= v13)
                  goto LABEL_34;
                v16 = *(_QWORD *)(v15 + 8 * v12);
                if (!v16)
                {
                  v14 = v13 - 1;
                  v17 = v8 + 5;
                  while (v13 != v17)
                  {
                    v16 = *(_QWORD *)(v15 + 8 * v17++);
                    if (v16)
                    {
                      v12 = v17 - 1;
                      goto LABEL_21;
                    }
                  }
LABEL_34:
                  a5[3] = v14;
                  a5[4] = 0;
                  swift_retain();
                  sub_20A5120E0(a1, a2, v34, a3);
                  return;
                }
              }
            }
          }
LABEL_21:
          v10 = (v16 - 1) & v16;
          v11 = __clz(__rbit64(v16)) + (v12 << 6);
          v8 = v12;
        }
        v18 = *(void **)(*(_QWORD *)(*a5 + 48) + 8 * v11);
        a5[3] = v8;
        a5[4] = v10;
        v19 = v18;
        v20 = sub_20A5B8D08();
        v21 = -1 << *(_BYTE *)(a3 + 32);
        v22 = v20 & ~v21;
        v23 = v22 >> 6;
        v24 = 1 << v22;
        if (((1 << v22) & *(_QWORD *)(v36 + 8 * (v22 >> 6))) != 0)
          break;
LABEL_3:

      }
      sub_20A459574(0, &qword_2545F9D58);
      v25 = *(id *)(*(_QWORD *)(a3 + 48) + 8 * v22);
      v26 = sub_20A5B8D14();

      if ((v26 & 1) == 0)
      {
        v27 = ~v21;
        for (i = v22 + 1; ; i = v29 + 1)
        {
          v29 = i & v27;
          if (((*(_QWORD *)(v36 + (((i & v27) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v27)) & 1) == 0)
            break;
          v30 = *(id *)(*(_QWORD *)(a3 + 48) + 8 * v29);
          v31 = sub_20A5B8D14();

          if ((v31 & 1) != 0)
          {

            v23 = v29 >> 6;
            v24 = 1 << v29;
            goto LABEL_30;
          }
        }
        goto LABEL_3;
      }

LABEL_30:
      v32 = a1[v23];
      a1[v23] = v32 & ~v24;
    }
    while ((v24 & v32) == 0);
    v7 = v34 - 1;
    if (__OFSUB__(v34, 1))
    {
LABEL_36:
      __break(1u);
      return;
    }
    if (v34 != 1)
      continue;
    break;
  }
}

uint64_t sub_20A5120E0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  unint64_t *v28;

  v4 = a4;
  if (!a3)
  {
    v9 = MEMORY[0x24BEE4B08];
LABEL_36:
    swift_release();
    return v9;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB4B8);
  result = sub_20A5B8E64();
  v9 = result;
  v28 = a1;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_39;
    if (v15 >= a2)
      goto LABEL_36;
    v16 = v28[v15];
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= a2)
        goto LABEL_36;
      v16 = v28[v11];
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= a2)
          goto LABEL_36;
        v16 = v28[v11];
        if (!v16)
          break;
      }
    }
LABEL_23:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    v18 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v14);
    result = sub_20A5B8D08();
    v19 = -1 << *(_BYTE *)(v9 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v21 == v24;
        if (v21 == v24)
          v21 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(_QWORD *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v22) = v18;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v17 = v15 + 3;
  if (v17 >= a2)
    goto LABEL_36;
  v16 = v28[v17];
  if (v16)
  {
    v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= a2)
      goto LABEL_36;
    v16 = v28[v11];
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_20A51233C(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  id v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  char v11;
  uint64_t v12;
  id v13;
  char v14;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v18;

  v3 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v4 = a1;
    v5 = sub_20A5B8E04();

    if ((v5 & 1) != 0)
    {
      v6 = sub_20A512510();
      swift_bridgeObjectRelease();
      return v6;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  v7 = sub_20A5B8D08();
  v8 = -1 << *(_BYTE *)(v3 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
    goto LABEL_12;
  sub_20A459574(0, &qword_2545F9D58);
  v10 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v9);
  v11 = sub_20A5B8D14();

  if ((v11 & 1) == 0)
  {
    v12 = ~v8;
    do
    {
      v9 = (v9 + 1) & v12;
      if (((*(_QWORD *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_12;
      v13 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v9);
      v14 = sub_20A5B8D14();

    }
    while ((v14 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v16 = *v1;
  v18 = *v1;
  *v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_20A511328();
    v16 = v18;
  }
  v6 = *(_QWORD *)(*(_QWORD *)(v16 + 48) + 8 * v9);
  sub_20A5126A8(v9);
  *v1 = v18;
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_20A512510()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  id v8;
  char v9;
  uint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  v1 = v0;
  swift_bridgeObjectRelease();
  v2 = sub_20A5B8DE0();
  v3 = swift_unknownObjectRetain();
  v4 = sub_20A5106D0(v3, v2);
  v15 = v4;
  swift_retain();
  v5 = sub_20A5B8D08();
  v6 = -1 << *(_BYTE *)(v4 + 32);
  v7 = v5 & ~v6;
  if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
  {
    sub_20A459574(0, &qword_2545F9D58);
    v8 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v7);
    v9 = sub_20A5B8D14();

    if ((v9 & 1) != 0)
    {
LABEL_6:
      swift_release();
      v13 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v7);
      sub_20A5126A8(v7);
      if ((sub_20A5B8D14() & 1) != 0)
      {
        *v1 = v15;
        return v13;
      }
      __break(1u);
    }
    else
    {
      v10 = ~v6;
      while (1)
      {
        v7 = (v7 + 1) & v10;
        if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
          break;
        v11 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v7);
        v12 = sub_20A5B8D14();

        if ((v12 & 1) != 0)
          goto LABEL_6;
      }
    }
    swift_release();
    __break(1u);
  }
  result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_20A5126A8(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_20A5B8DBC();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v6);
        v11 = sub_20A5B8D08();

        v12 = v11 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= (uint64_t)v12)
          {
LABEL_16:
            v15 = *(_QWORD *)(v3 + 48);
            v16 = (_QWORD *)(v15 + 8 * v2);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v2 != v6 || (v2 = v6, v16 >= v17 + 1))
            {
              *v16 = *v17;
              v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v18 = *(_QWORD *)(v3 + 16);
  v19 = __OFSUB__(v18, 1);
  v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_20A51284C(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t _s17CoreODIEssentials15GeoCoderAddressV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  uint64_t v54;
  char v55;
  char v56;
  uint64_t v57;
  char v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v3 = a1[1];
  v4 = a1[2];
  v6 = a1[3];
  v5 = a1[4];
  v7 = a1[5];
  v8 = a1[6];
  v10 = a1[7];
  v9 = a1[8];
  v11 = a1[9];
  v76 = a1[10];
  v79 = a1[11];
  v12 = a1[12];
  v13 = a2[1];
  v14 = a2[2];
  v16 = a2[3];
  v15 = a2[4];
  v18 = a2[5];
  v17 = a2[6];
  v20 = a2[7];
  v19 = a2[8];
  v22 = a2[9];
  v21 = a2[10];
  v23 = a2[11];
  v75 = a2[12];
  v77 = a2[13];
  v78 = a1[13];
  if (!v3)
  {
    if (v13)
      return 0;
    goto LABEL_8;
  }
  if (!v13)
    return 0;
  if (*a1 == *a2 && v3 == v13)
    goto LABEL_8;
  v70 = a1[4];
  v72 = a2[6];
  v63 = a2[11];
  v64 = a2[10];
  v60 = a2[2];
  v61 = a1[2];
  v24 = a1[12];
  v25 = a1[8];
  v26 = a1[9];
  v62 = a2[8];
  v66 = a2[4];
  v68 = a2[5];
  v27 = a2[7];
  v28 = a1[5];
  v29 = sub_20A5B91AC();
  v18 = v68;
  v5 = v70;
  v7 = v28;
  v4 = v61;
  v19 = v62;
  v17 = v72;
  v20 = v27;
  v11 = v26;
  v9 = v25;
  v12 = v24;
  v14 = v60;
  v23 = v63;
  v21 = v64;
  v15 = v66;
  v30 = v29;
  result = 0;
  if ((v30 & 1) != 0)
  {
LABEL_8:
    if (v6)
    {
      if (!v16)
        return 0;
      if (v4 != v14 || v6 != v16)
      {
        v71 = v5;
        v73 = v17;
        v65 = v12;
        v67 = v15;
        v32 = v9;
        v33 = v11;
        v34 = v22;
        v35 = v19;
        v36 = v20;
        v37 = v7;
        v69 = v18;
        v38 = sub_20A5B91AC();
        v18 = v69;
        v5 = v71;
        v7 = v37;
        v17 = v73;
        v20 = v36;
        v19 = v35;
        v22 = v34;
        v11 = v33;
        v9 = v32;
        v12 = v65;
        v15 = v67;
        v39 = v38;
        result = 0;
        if ((v39 & 1) == 0)
          return result;
      }
    }
    else if (v16)
    {
      return 0;
    }
    if (v7)
    {
      if (!v18)
        return 0;
      if (v5 != v15 || v7 != v18)
      {
        v74 = v17;
        v40 = v12;
        v41 = v9;
        v42 = v11;
        v43 = v22;
        v44 = v19;
        v45 = v20;
        v46 = sub_20A5B91AC();
        v17 = v74;
        v20 = v45;
        v19 = v44;
        v22 = v43;
        v11 = v42;
        v9 = v41;
        v12 = v40;
        v47 = v46;
        result = 0;
        if ((v47 & 1) == 0)
          return result;
      }
    }
    else if (v18)
    {
      return 0;
    }
    if (v10)
    {
      if (!v20)
        return 0;
      if (v8 != v17 || v10 != v20)
      {
        v48 = v12;
        v49 = v9;
        v50 = v11;
        v51 = v19;
        v52 = sub_20A5B91AC();
        v19 = v51;
        v11 = v50;
        v9 = v49;
        v12 = v48;
        v53 = v52;
        result = 0;
        if ((v53 & 1) == 0)
          return result;
      }
    }
    else if (v20)
    {
      return 0;
    }
    if (v11)
    {
      if (!v22)
        return 0;
      if (v9 != v19 || v11 != v22)
      {
        v54 = v12;
        v55 = sub_20A5B91AC();
        v12 = v54;
        v56 = v55;
        result = 0;
        if ((v56 & 1) == 0)
          return result;
      }
    }
    else if (v22)
    {
      return 0;
    }
    if (v79)
    {
      if (!v23)
        return 0;
      if (v76 != v21 || v79 != v23)
      {
        v57 = v12;
        v58 = sub_20A5B91AC();
        v12 = v57;
        v59 = v58;
        result = 0;
        if ((v59 & 1) == 0)
          return result;
      }
    }
    else if (v23)
    {
      return 0;
    }
    if (v78)
    {
      if (v77 && (v12 == v75 && v78 == v77 || (sub_20A5B91AC() & 1) != 0))
        return 1;
    }
    else if (!v77)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

unint64_t sub_20A512C58()
{
  unint64_t result;

  result = qword_2545FB3C0[0];
  if (!qword_2545FB3C0[0])
  {
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for GeoCoderAddress, &type metadata for GeoCoderAddress);
    atomic_store(result, qword_2545FB3C0);
  }
  return result;
}

uint64_t sub_20A512CA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t sub_20A512CAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 16) + *(_QWORD *)(a3 + 16));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_20A459310;
  return v9(a1, a2, a3);
}

uint64_t sub_20A512D24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 24) + *(_QWORD *)(a3 + 24));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_20A45A37C;
  return v9(a1, a2, a3);
}

uint64_t getEnumTagSinglePayload for GeoCoderStats(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 64))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for GeoCoderStats(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 64) = v3;
  return result;
}

ValueMetadata *type metadata accessor for GeoCoderStats()
{
  return &type metadata for GeoCoderStats;
}

uint64_t destroy for GeoCoderAddress()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for GeoCoderAddress(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for GeoCoderAddress(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy112_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

_QWORD *assignWithTake for GeoCoderAddress(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_bridgeObjectRelease();
  v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for GeoCoderAddress(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 112))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for GeoCoderAddress(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 112) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for GeoCoderAddress()
{
  return &type metadata for GeoCoderAddress;
}

uint64_t type metadata accessor for GeoCoder()
{
  return objc_opt_self();
}

uint64_t method lookup function for GeoCoder()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of GeoCoder.stats.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of GeoCoder.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t type metadata accessor for GeoCoder.SharedCoordinateMap()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for GeoCoder.GeocodeCompletionState()
{
  return objc_opt_self();
}

uint64_t getEnumTagSinglePayload for GeoCoder.LocationResult(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for GeoCoder.LocationResult(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 16) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 17) = v3;
  return result;
}

uint64_t sub_20A51326C(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_20A513288(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    *(_BYTE *)(result + 16) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for GeoCoder.LocationResult()
{
  return &type metadata for GeoCoder.LocationResult;
}

uint64_t sub_20A5132B8()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_20A5132E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 56);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_20A45A37C;
  v5[2] = a1;
  v5[3] = v4;
  return swift_task_switch();
}

uint64_t sub_20A513348()
{
  return swift_deallocObject();
}

id sub_20A513358()
{
  uint64_t v0;

  return sub_20A50D4EC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

unint64_t sub_20A513380()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2545FB420;
  if (!qword_2545FB420)
  {
    v1 = type metadata accessor for GeoCoder();
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for GeoCoder, v1);
    atomic_store(result, &qword_2545FB420);
  }
  return result;
}

uint64_t sub_20A5133C4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v6 = v2[2];
  v7 = v2[3];
  v8 = v2[4];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v9;
  *v9 = v3;
  v9[1] = sub_20A45A37C;
  return sub_20A50D70C(a1, a2, v6, v7, v8);
}

uint64_t sub_20A513440(uint64_t a1)
{
  uint64_t *v1;

  return sub_20A505CA8(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_20A513454(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_20A45A37C;
  return sub_20A506B38(a1, v4, v5, v7, v6);
}

uint64_t sub_20A5134D0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_20A45A37C;
  return sub_20A5083FC(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_20A513568()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc();
  v4 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_20A45A37C;
  *(_QWORD *)(v3 + 32) = v2;
  *(_OWORD *)(v3 + 16) = v4;
  return swift_task_switch();
}

unint64_t sub_20A5135D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2545FB488;
  if (!qword_2545FB488)
  {
    v1 = sub_20A459574(255, &qword_2545F9D58);
    result = MEMORY[0x20BD26CEC](MEMORY[0x24BEE5BD8], v1);
    atomic_store(result, &qword_2545FB488);
  }
  return result;
}

uint64_t sub_20A51362C()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20A513668(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_20A45A37C;
  return sub_20A50DC68(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_20A5136E8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20A51370C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_20A45A37C;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_2545FB4A0 + dword_2545FB4A0))(a1, v4);
}

uint64_t sub_20A51377C()
{
  uint64_t v0;

  return swift_deallocObject();
}

unint64_t sub_20A5137A0()
{
  uint64_t v0;

  return sub_20A50F5C4(*(double *)(v0 + 24));
}

uint64_t sub_20A5137AC()
{
  return swift_deallocObject();
}

unint64_t sub_20A5137BC()
{
  uint64_t v0;

  return sub_20A50F6D0(*(_BYTE *)(v0 + 16), 1, *(double *)(v0 + 24));
}

uint64_t sub_20A5137DC()
{
  return swift_deallocObject();
}

unint64_t sub_20A5137EC()
{
  uint64_t v0;

  return sub_20A50F6D0(*(_BYTE *)(v0 + 16), 0, *(double *)(v0 + 24));
}

uint64_t sub_20A51380C(uint64_t a1)
{
  uint64_t v1;

  return sub_20A50AA30(a1, v1);
}

uint64_t sub_20A513814(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = a2;
    v4 = a1;
    if (!(*v3 >> 62))
    {
      if (*(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10) >= a2)
        goto LABEL_4;
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
  }
  swift_bridgeObjectRetain();
  v21 = sub_20A5B8FCC();
  swift_bridgeObjectRelease();
  if (v21 < v2)
    goto LABEL_31;
LABEL_4:
  v6 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v5 = v4 - v2;
  if (__OFSUB__(0, v6))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    swift_bridgeObjectRetain();
    v7 = sub_20A5B8FCC();
    swift_bridgeObjectRelease();
    v8 = v7 + v5;
    if (!__OFADD__(v7, v5))
      goto LABEL_8;
LABEL_36:
    __break(1u);
LABEL_37:
    swift_bridgeObjectRetain();
    v12 = sub_20A5B8FCC();
    swift_bridgeObjectRelease();
    v9 = *v3;
    goto LABEL_15;
  }
  if (*v3 >> 62)
    goto LABEL_34;
  v7 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  v8 = v7 - v6;
  if (__OFADD__(v7, v5))
    goto LABEL_36;
LABEL_8:
  v9 = *v3;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v3 = v9;
  v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v9 & 0x8000000000000000) == 0 && (v9 & 0x4000000000000000) == 0)
  {
    v11 = v9 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v7 = 1;
  }
  if (v9 >> 62)
    goto LABEL_37;
  v12 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v8)
    v12 = v8;
  swift_bridgeObjectRetain();
  *v3 = MEMORY[0x20BD25F54](v7, v12, 1, v9);
  swift_bridgeObjectRelease();
  v11 = *v3 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v13 = v11 + 32;
  v14 = (char *)(v11 + 32 + 8 * v4);
  type metadata accessor for ODNRequestTask();
  swift_arrayDestroy();
  if (!v5)
    return sub_20A5B8ABC();
  if (!(*v3 >> 62))
  {
    v15 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    v16 = v15 - v2;
    if (!__OFSUB__(v15, v2))
      goto LABEL_21;
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  swift_bridgeObjectRetain();
  v22 = sub_20A5B8FCC();
  swift_bridgeObjectRelease();
  v16 = v22 - v2;
  if (__OFSUB__(v22, v2))
    goto LABEL_40;
LABEL_21:
  if ((v16 & 0x8000000000000000) == 0)
  {
    v17 = (char *)(v13 + 8 * v2);
    if (v4 != v2 || v14 >= &v17[8 * v16])
      memmove(v14, v17, 8 * v16);
    if (!(*v3 >> 62))
    {
      v18 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10);
      v19 = v18 + v5;
      if (!__OFADD__(v18, v5))
      {
LABEL_27:
        *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10) = v19;
        return sub_20A5B8ABC();
      }
      goto LABEL_43;
    }
LABEL_41:
    swift_bridgeObjectRetain();
    v23 = sub_20A5B8FCC();
    swift_bridgeObjectRelease();
    v19 = v23 + v5;
    if (!__OFADD__(v23, v5))
      goto LABEL_27;
LABEL_43:
    __break(1u);
  }
  result = sub_20A5B8FFC();
  __break(1u);
  return result;
}

uint64_t sub_20A513B0C(uint64_t a1, int64_t a2)
{
  unint64_t *v2;
  unint64_t v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *(_QWORD *)(v4 + 24) >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_20A4701C0(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  v12 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_253EB5178) - 8);
  v13 = v4 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  v14 = *(_QWORD *)(v12 + 72);
  v15 = v14 * a1;
  v16 = v13 + v14 * a1;
  result = swift_arrayDestroy();
  if (!v7)
    goto LABEL_25;
  v18 = *(_QWORD *)(v4 + 16);
  v19 = v18 - a2;
  if (__OFSUB__(v18, a2))
    goto LABEL_31;
  if ((v19 & 0x8000000000000000) == 0)
  {
    if (v15 < v14 * a2 || v16 >= v13 + v14 * a2 + v19 * v14)
    {
      result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v15 != v14 * a2)
    {
      result = swift_arrayInitWithTakeBackToFront();
    }
    v21 = *(_QWORD *)(v4 + 16);
    v22 = __OFADD__(v21, v8);
    v23 = v21 - v7;
    if (!v22)
    {
      *(_QWORD *)(v4 + 16) = v23;
LABEL_25:
      *v2 = v4;
      return result;
    }
    goto LABEL_32;
  }
LABEL_33:
  result = sub_20A5B8FFC();
  __break(1u);
  return result;
}

uint64_t sub_20A513CBC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_20A45A37C;
  return sub_20A506568(a1, v4, v5, v7, v6);
}

uint64_t sub_20A513D38(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_20A45A37C;
  return sub_20A5077D4(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_20A513DD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc();
  v4 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_20A45A37C;
  *(_QWORD *)(v3 + 32) = v2;
  *(_OWORD *)(v3 + 16) = v4;
  return swift_task_switch();
}

uint64_t sub_20A513E40(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_20A45A37C;
  return sub_20A506280(a1, v4, v5, v7, v6);
}

uint64_t sub_20A513EBC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_20A45A37C;
  return sub_20A507108(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_20A513F54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc();
  v4 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_20A45A37C;
  *(_QWORD *)(v3 + 32) = v2;
  *(_OWORD *)(v3 + 16) = v4;
  return swift_task_switch();
}

uint64_t sub_20A513FC4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_20A45A37C;
  return sub_20A506850(a1, v4, v5, v7, v6);
}

uint64_t sub_20A514040(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_20A45A37C;
  return sub_20A507E08(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_20A5140D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc();
  v4 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_20A45A37C;
  *(_QWORD *)(v3 + 32) = v2;
  *(_OWORD *)(v3 + 16) = v4;
  return swift_task_switch();
}

uint64_t objectdestroy_15Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20A514174(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_20A4597C0;
  return sub_20A506E20(a1, v4, v5, v7, v6);
}

uint64_t objectdestroy_19Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20A51422C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_20A4597C0;
  return sub_20A508A2C(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t objectdestroy_23Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20A514300()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc();
  v4 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_20A45A37C;
  *(_QWORD *)(v3 + 32) = v2;
  *(_OWORD *)(v3 + 16) = v4;
  return swift_task_switch();
}

uint64_t objectdestroy_27Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20A5143B8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v3 = v2;
  v6 = v2[36];
  v7 = v2[37];
  __swift_project_boxed_opaque_existential_1(v2 + 33, v6);
  (*(void (**)(unint64_t, unint64_t, uint64_t, uint64_t))(v7 + 16))(0xD00000000000001ALL, 0x800000020A5E4090, v6, v7);
  if (v8 && (v9 = sub_20A514974(), v9 != 5))
  {
    v15 = v9;
    v21 = v2[1];
    v25 = *v2;
    v26 = v21;
    v23 = 0;
    v24 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_20A5B8E94();
    sub_20A5B899C();
    sub_20A5B8F9C();
    sub_20A5B899C();
    v18 = 0;
    v19 = 0xE000000000000000;
    v20 = 14;
  }
  else
  {
    v10 = sub_20A5148EC(0x64uLL) == 0;
    v25 = a1;
    v26 = a2;
    swift_bridgeObjectRetain();
    sub_20A5B899C();
    v11 = v2[31];
    if (v11)
    {
      if (*(_QWORD *)(v11 + 16))
      {
        v12 = sub_20A47094C(v25, v26);
        if ((v13 & 1) != 0)
          v10 = *(unsigned __int8 *)(*(_QWORD *)(v11 + 56) + v12);
      }
    }
    swift_bridgeObjectRelease();
    if (*((_BYTE *)v3 + 304) == 1)
      v14 = 3;
    else
      v14 = 4;
    if (*((_BYTE *)v3 + 304))
      v15 = v14;
    else
      v15 = v10 ^ 1u;
    v16 = *v3;
    v17 = v3[1];
    v25 = v16;
    v26 = v17;
    swift_bridgeObjectRetain();
    sub_20A5B8E94();
    swift_bridgeObjectRelease();
    v23 = 0xD00000000000001BLL;
    v24 = 0x800000020A5E40B0;
    sub_20A5B899C();
    swift_bridgeObjectRelease();
    v18 = 0xD00000000000001BLL;
    v19 = 0x800000020A5E40B0;
    v20 = 1;
  }
  LOBYTE(v23) = v20;
  CoreODILogger.debug(_:category:)(v18, v19, &v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_20A51461C(char *a1, char *a2)
{
  return sub_20A4E990C(*a1, *a2);
}

uint64_t sub_20A514628()
{
  sub_20A5B929C();
  sub_20A5B8978();
  swift_bridgeObjectRelease();
  return sub_20A5B92CC();
}

uint64_t sub_20A514678()
{
  sub_20A5B8978();
  return swift_bridgeObjectRelease();
}

uint64_t sub_20A51469C()
{
  sub_20A5B929C();
  sub_20A5B8978();
  swift_bridgeObjectRelease();
  return sub_20A5B92CC();
}

uint64_t sub_20A5146E8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_20A514974();
  *a1 = result;
  return result;
}

void sub_20A514714(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1 + 48;
  a1[1] = 0xE100000000000000;
}

uint64_t sub_20A514728()
{
  uint64_t result;
  char v1;
  char v2;
  uint64_t v3;
  unint64_t v4;

  result = os_variant_allows_internal_security_policies();
  v1 = result;
  if ((_DWORD)result)
  {
    v3 = 0x657261685369646FLL;
    v4 = 0xEF726567676F4C64;
    v2 = 0;
    result = CoreODILogger.debug(_:category:)(0xD000000000000017, 0x800000020A5E4130, &v2);
  }
  byte_253EBC790 = v1;
  return result;
}

void sub_20A5147B0()
{
  id v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (qword_253EB4740 != -1)
    swift_once();
  if (byte_253EBC790 != 1)
    goto LABEL_8;
  v0 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v1 = (void *)sub_20A5B88F4();
  v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (!v2)
    goto LABEL_8;
  v3 = v2;
  v4 = (void *)sub_20A5B88F4();
  v5 = objc_msgSend(v3, sel_stringForKey_, v4);

  if (!v5)
  {

LABEL_8:
    v6 = 0;
    v8 = 0;
    goto LABEL_9;
  }
  v6 = sub_20A5B8900();
  v8 = v7;

LABEL_9:
  qword_2546103B8 = v6;
  qword_2546103C0 = v8;
}

unint64_t sub_20A5148EC(unint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  if (result)
  {
    v1 = result;
    v3 = 0;
    MEMORY[0x20BD26DD0](&v3, 8);
    result = (v3 * (unsigned __int128)v1) >> 64;
    if (v3 * v1 < v1)
    {
      v2 = -(uint64_t)v1 % v1;
      if (v2 > v3 * v1)
      {
        do
        {
          v3 = 0;
          MEMORY[0x20BD26DD0](&v3, 8);
        }
        while (v2 > v3 * v1);
        return (v3 * (unsigned __int128)v1) >> 64;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A514974()
{
  unint64_t v0;

  v0 = sub_20A5B9008();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

uint64_t storeEnumTagSinglePayload for Profile.Bucket(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_20A514A08 + 4 * byte_20A5C4A45[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_20A514A3C + 4 * byte_20A5C4A40[v4]))();
}

uint64_t sub_20A514A3C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A514A44(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A514A4CLL);
  return result;
}

uint64_t sub_20A514A58(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A514A60);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_20A514A64(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A514A6C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Profile.Bucket()
{
  return &type metadata for Profile.Bucket;
}

uint64_t destroy for BucketSelector(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 40) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + 224) != 1)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1(a1 + 264);
}

uint64_t initializeWithCopy for BucketSelector(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  _OWORD *v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6 == 1)
  {
    v7 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v7;
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    v8 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v8;
    v9 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v9;
    v10 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v10;
    v11 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v11;
  }
  else
  {
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v6;
    v12 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = v12;
    v13 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = v13;
    v14 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = v14;
    v15 = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = v15;
    v16 = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = v16;
    v17 = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = v17;
    v18 = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 152) = v18;
    v19 = *(_QWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    *(_QWORD *)(a1 + 168) = v19;
    v20 = *(_QWORD *)(a2 + 184);
    *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 184) = v20;
    v21 = *(_QWORD *)(a2 + 200);
    *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
    *(_QWORD *)(a1 + 200) = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v22 = (_OWORD *)(a1 + 208);
  v23 = (_OWORD *)(a2 + 208);
  v24 = *(_QWORD *)(a2 + 224);
  if (v24 == 1)
  {
    v25 = *(_OWORD *)(a2 + 224);
    *v22 = *v23;
    *(_OWORD *)(a1 + 224) = v25;
    *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
  }
  else
  {
    *(_QWORD *)v22 = *(_QWORD *)v23;
    *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
    v26 = *(_QWORD *)(a2 + 232);
    *(_QWORD *)(a1 + 224) = v24;
    *(_QWORD *)(a1 + 232) = v26;
    *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
    swift_bridgeObjectRetain();
  }
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
  v27 = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 288) = v27;
  v28 = v27;
  v29 = **(void (***)(uint64_t, uint64_t, uint64_t))(v27 - 8);
  swift_bridgeObjectRetain();
  v29(a1 + 264, a2 + 264, v28);
  *(_BYTE *)(a1 + 304) = *(_BYTE *)(a2 + 304);
  return a1;
}

uint64_t assignWithCopy for BucketSelector(uint64_t a1, uint64_t a2)
{
  __int128 *v4;
  __int128 *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 *v23;
  __int128 *v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  char v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (__int128 *)(a1 + 32);
  v5 = (__int128 *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 40);
  if (*(_QWORD *)(a1 + 40) == 1)
  {
    if (v6 == 1)
    {
      v7 = *v5;
      v8 = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 64) = v8;
      *v4 = v7;
      v9 = *(_OWORD *)(a2 + 80);
      v10 = *(_OWORD *)(a2 + 96);
      v11 = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 128) = v11;
      *(_OWORD *)(a1 + 80) = v9;
      *(_OWORD *)(a1 + 96) = v10;
      v12 = *(_OWORD *)(a2 + 144);
      v13 = *(_OWORD *)(a2 + 160);
      v14 = *(_OWORD *)(a2 + 192);
      *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
      *(_OWORD *)(a1 + 192) = v14;
      *(_OWORD *)(a1 + 144) = v12;
      *(_OWORD *)(a1 + 160) = v13;
    }
    else
    {
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
      *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v6 == 1)
  {
    sub_20A4E36C4(a1 + 32);
    v16 = *(_OWORD *)(a2 + 48);
    v15 = *(_OWORD *)(a2 + 64);
    *v4 = *v5;
    *(_OWORD *)(a1 + 48) = v16;
    *(_OWORD *)(a1 + 64) = v15;
    v17 = *(_OWORD *)(a2 + 128);
    v19 = *(_OWORD *)(a2 + 80);
    v18 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v17;
    *(_OWORD *)(a1 + 80) = v19;
    *(_OWORD *)(a1 + 96) = v18;
    v20 = *(_OWORD *)(a2 + 192);
    v22 = *(_OWORD *)(a2 + 144);
    v21 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 192) = v20;
    *(_OWORD *)(a1 + 144) = v22;
    *(_OWORD *)(a1 + 160) = v21;
  }
  else
  {
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
    *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v23 = (__int128 *)(a1 + 208);
  v24 = (__int128 *)(a2 + 208);
  v25 = *(_QWORD *)(a2 + 224);
  if (*(_QWORD *)(a1 + 224) == 1)
  {
    if (v25 == 1)
    {
      v26 = *v24;
      v27 = *(_OWORD *)(a2 + 224);
      *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
      *v23 = v26;
      *(_OWORD *)(a1 + 224) = v27;
    }
    else
    {
      v30 = *(_QWORD *)v24;
      *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
      *(_QWORD *)v23 = v30;
      *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
      v31 = *(_QWORD *)(a2 + 232);
      *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
      *(_QWORD *)(a1 + 232) = v31;
      swift_bridgeObjectRetain();
    }
  }
  else if (v25 == 1)
  {
    sub_20A4E36F0(a1 + 208);
    v28 = *(_BYTE *)(a2 + 240);
    v29 = *(_OWORD *)(a2 + 224);
    *v23 = *v24;
    *(_OWORD *)(a1 + 224) = v29;
    *(_BYTE *)(a1 + 240) = v28;
  }
  else
  {
    v32 = *(_QWORD *)v24;
    *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
    *(_QWORD *)v23 = v32;
    *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v33 = *(_QWORD *)(a2 + 232);
    *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
    *(_QWORD *)(a1 + 232) = v33;
  }
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 264), (uint64_t *)(a2 + 264));
  *(_BYTE *)(a1 + 304) = *(_BYTE *)(a2 + 304);
  return a1;
}

void *__swift_memcpy305_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x131uLL);
}

uint64_t assignWithTake for BucketSelector(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 40) == 1)
    goto LABEL_4;
  v6 = *(_QWORD *)(a2 + 40);
  if (v6 == 1)
  {
    sub_20A4E36C4(a1 + 32);
LABEL_4:
    v7 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v7;
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    v8 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v8;
    v9 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v9;
    v10 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v10;
    v11 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v11;
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v12;
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v13;
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v14;
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v15;
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v16;
  swift_bridgeObjectRelease();
  v17 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v17;
  swift_bridgeObjectRelease();
  v18 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v18;
  swift_bridgeObjectRelease();
  v19 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v19;
  swift_bridgeObjectRelease();
  v20 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v20;
  swift_bridgeObjectRelease();
  v21 = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = v21;
  swift_bridgeObjectRelease();
LABEL_6:
  v22 = (_QWORD *)(a1 + 208);
  v23 = (_QWORD *)(a2 + 208);
  if (*(_QWORD *)(a1 + 224) != 1)
  {
    v24 = *(_QWORD *)(a2 + 224);
    if (v24 != 1)
    {
      *v22 = *v23;
      *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
      *(_QWORD *)(a1 + 224) = v24;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
      *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
      goto LABEL_11;
    }
    sub_20A4E36F0(a1 + 208);
  }
  v25 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *(_OWORD *)(a1 + 224) = v25;
  *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
LABEL_11:
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
  __swift_destroy_boxed_opaque_existential_1(a1 + 264);
  v26 = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 280) = v26;
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  *(_BYTE *)(a1 + 304) = *(_BYTE *)(a2 + 304);
  return a1;
}

uint64_t getEnumTagSinglePayload for BucketSelector(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 305))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BucketSelector(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 296) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 304) = 0;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 305) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 305) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for BucketSelector()
{
  return &type metadata for BucketSelector;
}

unint64_t sub_20A5154A0()
{
  unint64_t result;

  result = qword_2545FB5C8;
  if (!qword_2545FB5C8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C4B04, &type metadata for Profile.Bucket);
    atomic_store(result, (unint64_t *)&qword_2545FB5C8);
  }
  return result;
}

ValueMetadata *type metadata accessor for Profile()
{
  return &type metadata for Profile;
}

uint64_t storeEnumTagSinglePayload for Profile.Population(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_20A515540 + 4 * byte_20A5C4A4F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_20A515574 + 4 * byte_20A5C4A4A[v4]))();
}

uint64_t sub_20A515574(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A51557C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A515584);
  return result;
}

uint64_t sub_20A515590(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A515598);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_20A51559C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A5155A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Profile.Population()
{
  return &type metadata for Profile.Population;
}

unint64_t sub_20A5155C4()
{
  unint64_t result;

  result = qword_2545FB5D0;
  if (!qword_2545FB5D0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C4B78, &type metadata for Profile.Population);
    atomic_store(result, &qword_2545FB5D0);
  }
  return result;
}

uint64_t *sub_20A515608(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_20A5B84D4();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = *(_OWORD *)((char *)a2 + v8 + 24);
    *(_OWORD *)((char *)a1 + v8 + 24) = v9;
    (**(void (***)(void))(v9 - 8))();
    v10 = a3[6];
    v11 = *(_OWORD *)((char *)a2 + v10 + 24);
    *(_OWORD *)((char *)a1 + v10 + 24) = v11;
    (**(void (***)(void))(v11 - 8))();
    v12 = a3[7];
    v13 = *(_OWORD *)((char *)a2 + v12 + 24);
    *(_OWORD *)((char *)a1 + v12 + 24) = v13;
    (**(void (***)(void))(v13 - 8))();
    v14 = a3[8];
    v15 = (uint64_t *)((char *)a1 + v14);
    v16 = (uint64_t *)((char *)a2 + v14);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_20A515708(uint64_t a1, int *a2)
{
  uint64_t v4;

  v4 = sub_20A5B84D4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[5]);
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[6]);
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[7]);
  return swift_bridgeObjectRelease();
}

uint64_t sub_20A515774(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  v6 = sub_20A5B84D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(_OWORD *)(a2 + v7 + 24);
  *(_OWORD *)(a1 + v7 + 24) = v8;
  (**(void (***)(void))(v8 - 8))();
  v9 = a3[6];
  v10 = *(_OWORD *)(a2 + v9 + 24);
  *(_OWORD *)(a1 + v9 + 24) = v10;
  (**(void (***)(void))(v10 - 8))();
  v11 = a3[7];
  v12 = *(_OWORD *)(a2 + v11 + 24);
  *(_OWORD *)(a1 + v11 + 24) = v12;
  (**(void (***)(void))(v12 - 8))();
  v13 = a3[8];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_20A515848(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_20A5B84D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[5]), (uint64_t *)(a2 + a3[5]));
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[6]), (uint64_t *)(a2 + a3[6]));
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[7]), (uint64_t *)(a2 + a3[7]));
  v7 = a3[8];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_20A5158F4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;

  v6 = sub_20A5B84D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)(v9 + 32) = *(_QWORD *)(v10 + 32);
  v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  v12 = a1 + v8;
  v13 = a2 + v8;
  *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  v14 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v14;
  v15 = a3[7];
  v16 = a3[8];
  v17 = a1 + v15;
  v18 = a2 + v15;
  v19 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v19;
  *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
  *(_OWORD *)(a1 + v16) = *(_OWORD *)(a2 + v16);
  return a1;
}

uint64_t sub_20A51599C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;

  v6 = sub_20A5B84D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  __swift_destroy_boxed_opaque_existential_1(a1 + v7);
  v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  __swift_destroy_boxed_opaque_existential_1(a1 + v11);
  v14 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v14;
  *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  __swift_destroy_boxed_opaque_existential_1(a1 + v15);
  v18 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 16) = v18;
  *(_QWORD *)(v16 + 32) = *(_QWORD *)(v17 + 32);
  v19 = a3[8];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (uint64_t *)(a2 + v19);
  v23 = *v21;
  v22 = v21[1];
  *v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_20A515A7C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20A515A88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_20A5B84D4();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 24);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_20A515B08()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_20A515B14(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_20A5B84D4();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for RavioliRequestFactory()
{
  uint64_t result;

  result = qword_253EB6260;
  if (!qword_253EB6260)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_20A515BCC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_20A5B84D4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_20A515C4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v5 = sub_20A5B8240();
  v4[6] = v5;
  v4[7] = *(_QWORD *)(v5 - 8);
  v4[8] = swift_task_alloc();
  v6 = sub_20A5B84D4();
  v4[9] = v6;
  v4[10] = *(_QWORD *)(v6 - 8);
  v4[11] = swift_task_alloc();
  v4[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A515CE8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);

  v1 = v0[5];
  (*(void (**)(_QWORD, uint64_t, _QWORD))(v0[10] + 16))(v0[12], v1, v0[9]);
  v2 = type metadata accessor for RavioliRequestFactory();
  v0[13] = v2;
  if (*(_QWORD *)(v1 + *(int *)(v2 + 32) + 8))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5270);
    sub_20A5B82B8();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_20A5BA9A0;
    sub_20A5B82AC();
    sub_20A5B8498();
    swift_bridgeObjectRelease();
  }
  v3 = v0[5];
  sub_20A5B8480();
  sub_20A5B8210();
  sub_20A5B8228();
  v4 = (_QWORD *)(v3 + *(int *)(v2 + 20));
  v5 = v4[3];
  v6 = v4[4];
  __swift_project_boxed_opaque_existential_1(v4, v5);
  v9 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v6 + 8) + *(_QWORD *)(v6 + 8));
  v7 = (_QWORD *)swift_task_alloc();
  v0[14] = v7;
  *v7 = v0;
  v7[1] = sub_20A515EAC;
  return v9(v5, v6);
}

uint64_t sub_20A515EAC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 120) = a1;
  *(_QWORD *)(v3 + 128) = a2;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A515F08()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(_QWORD, _QWORD, uint64_t, uint64_t);

  v1 = v0[13];
  v2 = v0[5];
  sub_20A5B8228();
  swift_bridgeObjectRelease();
  v3 = (_QWORD *)(v2 + *(int *)(v1 + 24));
  v4 = v3[3];
  v5 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  v8 = (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v5 + 8) + *(_QWORD *)(v5 + 8));
  v6 = (_QWORD *)swift_task_alloc();
  v0[17] = v6;
  *v6 = v0;
  v6[1] = sub_20A515FCC;
  return v8(v0[2], v0[8], v4, v5);
}

uint64_t sub_20A515FCC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A516030()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 8))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 48));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A5160B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 8))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 48));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A516130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_20A516148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_20A516160(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 32))();
}

uint64_t sub_20A516178(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 40))();
}

uint64_t sub_20A516190(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 48))();
}

uint64_t sub_20A5161A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 56))();
}

uint64_t destroy for ODNAssessmentConfiguration(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;

  result = swift_bridgeObjectRelease();
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >> 60 != 15)
    return sub_20A44BD90(*(_QWORD *)(a1 + 16), v3);
  return result;
}

uint64_t initializeWithCopy for ODNAssessmentConfiguration(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  unint64_t v5;
  uint64_t v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = (_OWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  if (v5 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *v4;
  }
  else
  {
    v6 = *(_QWORD *)v4;
    sub_20A45964C(v6, v5);
    *(_QWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 24) = v5;
  }
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  return a1;
}

uint64_t assignWithCopy for ODNAssessmentConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (uint64_t *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  if (*(_QWORD *)(a1 + 24) >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      v7 = *v4;
      sub_20A45964C(*v4, *(_QWORD *)(a2 + 24));
      v8 = *(_QWORD *)(a1 + 16);
      v9 = *(_QWORD *)(a1 + 24);
      *(_QWORD *)(a1 + 16) = v7;
      *(_QWORD *)(a1 + 24) = v5;
      sub_20A44BD90(v8, v9);
      goto LABEL_8;
    }
    sub_20A45A1A8(a1 + 16);
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v4;
    goto LABEL_8;
  }
  v6 = *v4;
  sub_20A45964C(*v4, *(_QWORD *)(a2 + 24));
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v5;
LABEL_8:
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  return a1;
}

__n128 __swift_memcpy34_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ODNAssessmentConfiguration(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v4 = (_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  if (v5 >> 60 != 15)
  {
    v6 = *(_QWORD *)(a2 + 24);
    if (v6 >> 60 != 15)
    {
      v7 = *(_QWORD *)(a1 + 16);
      *(_QWORD *)(a1 + 16) = *v4;
      *(_QWORD *)(a1 + 24) = v6;
      sub_20A44BD90(v7, v5);
      goto LABEL_6;
    }
    sub_20A45A1A8(a1 + 16);
  }
  *(_OWORD *)(a1 + 16) = *(_OWORD *)v4;
LABEL_6:
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  return a1;
}

uint64_t getEnumTagSinglePayload for ODNAssessmentConfiguration(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 34))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ODNAssessmentConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_WORD *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 34) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 34) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ODNAssessmentConfiguration()
{
  return &type metadata for ODNAssessmentConfiguration;
}

uint64_t storeEnumTagSinglePayload for ODNAssessmentConfiguration.ODNAssessmentMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_20A516500 + 4 * byte_20A5C4C95[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_20A516534 + 4 * asc_20A5C4C90[v4]))();
}

uint64_t sub_20A516534(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A51653C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A516544);
  return result;
}

uint64_t sub_20A516550(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A516558);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_20A51655C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A516564(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ODNAssessmentConfiguration.ODNAssessmentMode()
{
  return &type metadata for ODNAssessmentConfiguration.ODNAssessmentMode;
}

unint64_t sub_20A516584()
{
  unint64_t result;

  result = qword_2545FB5E0;
  if (!qword_2545FB5E0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C4D34, &type metadata for ODNAssessmentConfiguration.ODNAssessmentMode);
    atomic_store(result, (unint64_t *)&qword_2545FB5E0);
  }
  return result;
}

_QWORD *sub_20A5165CC()
{
  _QWORD *result;

  type metadata accessor for DistributedNotificationsAsyncSequence.Iterator.Handler();
  swift_allocObject();
  result = sub_20A516608();
  qword_253EB5020 = (uint64_t)result;
  return result;
}

_QWORD *sub_20A516608()
{
  _QWORD *v0;
  id v1;
  uint64_t v2;
  void *v3;
  _QWORD v5[5];
  _QWORD *v6;

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1648]), sel_init);
  v2 = MEMORY[0x24BEE4B00];
  v0[2] = v1;
  v0[3] = v2;
  v0[4] = 0;
  v5[4] = sub_20A517464;
  v6 = v0;
  v5[0] = MEMORY[0x24BDAC760];
  v5[1] = 1107296256;
  v5[2] = sub_20A516890;
  v5[3] = &block_descriptor_14;
  v3 = _Block_copy(v5);
  swift_retain();
  swift_release();
  xpc_set_event_stream_handler("com.apple.distnoted.matching", 0, v3);
  _Block_release(v3);
  return v0;
}

id sub_20A5166D0(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  id result;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = *(void **)(v1 + 16);
  objc_msgSend(v3, sel_lock);
  swift_beginAccess();
  v4 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(v1 + 24) = MEMORY[0x24BEE4B00];
  result = objc_msgSend(v3, sel_unlock);
  v6 = 0;
  v7 = v4 + 64;
  v8 = 1 << *(_BYTE *)(v4 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(v4 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  while (v10)
  {
    v12 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    v13 = v12 | (v6 << 6);
LABEL_22:
    v17 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v13);
    if (v17)
    {
      v19 = a1;
      v18 = *(_QWORD *)(*(_QWORD *)(v17 + 64) + 40);
      swift_unknownObjectRetain();
      sub_20A517480((uint64_t)&v19, v18);
      result = (id)swift_continuation_resume();
    }
  }
  v14 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v14 >= v11)
    return (id)swift_release();
  v15 = *(_QWORD *)(v7 + 8 * v14);
  ++v6;
  if (v15)
    goto LABEL_21;
  v6 = v14 + 1;
  if (v14 + 1 >= v11)
    return (id)swift_release();
  v15 = *(_QWORD *)(v7 + 8 * v6);
  if (v15)
    goto LABEL_21;
  v6 = v14 + 2;
  if (v14 + 2 >= v11)
    return (id)swift_release();
  v15 = *(_QWORD *)(v7 + 8 * v6);
  if (v15)
    goto LABEL_21;
  v6 = v14 + 3;
  if (v14 + 3 >= v11)
    return (id)swift_release();
  v15 = *(_QWORD *)(v7 + 8 * v6);
  if (v15)
  {
LABEL_21:
    v10 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v6 << 6);
    goto LABEL_22;
  }
  v16 = v14 + 4;
  if (v16 >= v11)
    return (id)swift_release();
  v15 = *(_QWORD *)(v7 + 8 * v16);
  if (v15)
  {
    v6 = v16;
    goto LABEL_21;
  }
  while (1)
  {
    v6 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v6 >= v11)
      return (id)swift_release();
    v15 = *(_QWORD *)(v7 + 8 * v6);
    ++v16;
    if (v15)
      goto LABEL_21;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_20A516890(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();
  return swift_unknownObjectRelease();
}

id sub_20A5168D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v5;
  uint64_t *v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  _QWORD v13[3];

  v5 = *(void **)(v2 + 16);
  objc_msgSend(v5, sel_lock);
  v6 = (uint64_t *)(v2 + 24);
  swift_beginAccess();
  v7 = *(_QWORD *)(v2 + 24);
  if (*(_QWORD *)(v7 + 16) && (v8 = sub_20A470C6C(a2), (v9 & 1) != 0) && !*(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v8))
  {
    swift_endAccess();
    swift_beginAccess();
    sub_20A4DE818(a2);
    swift_endAccess();
    objc_msgSend(v5, sel_unlock);
    v13[0] = 0;
    sub_20A517480((uint64_t)v13, *(_QWORD *)(*(_QWORD *)(a1 + 64) + 40));
    return (id)swift_continuation_resume();
  }
  else
  {
    swift_endAccess();
    swift_beginAccess();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v12 = *v6;
    *v6 = 0x8000000000000000;
    sub_20A4770F8(a1, a2, isUniquelyReferenced_nonNull_native);
    *v6 = v12;
    swift_bridgeObjectRelease();
    swift_endAccess();
    return objc_msgSend(v5, sel_unlock);
  }
}

id sub_20A516A30(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  uint64_t *v4;
  uint64_t v5;
  char isUniquelyReferenced_nonNull_native;
  id result;
  uint64_t v8;
  _QWORD v9[3];

  v3 = *(void **)(v1 + 16);
  objc_msgSend(v3, sel_lock);
  v4 = (uint64_t *)(v1 + 24);
  swift_beginAccess();
  v5 = sub_20A4DE818(a1);
  swift_endAccess();
  if (v5 == 1)
  {
    swift_beginAccess();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *v4;
    *v4 = 0x8000000000000000;
    sub_20A4770F8(0, a1, isUniquelyReferenced_nonNull_native);
    *v4 = v8;
    swift_bridgeObjectRelease();
    swift_endAccess();
    return objc_msgSend(v3, sel_unlock);
  }
  else
  {
    result = objc_msgSend(v3, sel_unlock);
    if (v5)
    {
      v9[0] = 0;
      sub_20A517480((uint64_t)v9, *(_QWORD *)(*(_QWORD *)(v5 + 64) + 40));
      return (id)swift_continuation_resume();
    }
  }
  return result;
}

uint64_t sub_20A516B44()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t DistributedNotificationsAsyncSequence.Iterator.next()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  return swift_task_switch();
}

id sub_20A516B88()
{
  uint64_t v0;
  id result;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  if ((sub_20A5B8B88() & 1) != 0)
    return (id)(*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  v2 = **(_QWORD **)(v0 + 24);
  *(_QWORD *)(v0 + 32) = v2;
  v3 = *(void **)(v2 + 16);
  result = objc_msgSend(v3, sel_lock);
  v4 = *(_QWORD *)(v2 + 32);
  if (__OFADD__(v4, 1))
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v2 + 32) = v4 + 1;
    objc_msgSend(v3, sel_unlock);
    v5 = swift_task_alloc();
    *(_QWORD *)(v0 + 40) = v5;
    *(_QWORD *)(v5 + 16) = v2;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = swift_task_alloc();
    *(_QWORD *)(v0 + 48) = v6;
    *(_QWORD *)(v6 + 16) = v2;
    *(_QWORD *)(v6 + 24) = v4;
    swift_retain();
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 56) = v7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_253EB51A0);
    *v7 = v0;
    v7[1] = sub_20A516CBC;
    return (id)sub_20A5B91B8();
  }
  return result;
}

uint64_t sub_20A516CBC()
{
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A516D34()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_20A516D3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[12] = a2;
  v3[13] = a3;
  v3[11] = a1;
  return swift_task_switch();
}

uint64_t sub_20A516D58()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[13];
  v0[7] = v0 + 10;
  v0[2] = v0;
  v0[3] = sub_20A516DB8;
  v2 = swift_continuation_init();
  sub_20A5168D8(v2, v1);
  return swift_continuation_await();
}

uint64_t sub_20A516DB8()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  **(_QWORD **)(*v0 + 88) = *(_QWORD *)(*v0 + 80);
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_20A516E08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_20A45A37C;
  v6[12] = v5;
  v6[13] = v4;
  v6[11] = a1;
  return swift_task_switch();
}

id sub_20A516E78()
{
  uint64_t v0;

  return sub_20A516A30(*(_QWORD *)(v0 + 24));
}

uint64_t sub_20A516E9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  *(_QWORD *)(v2 + 16) = a1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = v2;
  v3[1] = sub_20A516EFC;
  v3[3] = v1;
  return swift_task_switch();
}

uint64_t sub_20A516EFC(uint64_t a1)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v5;

  v3 = *(_QWORD **)(*v1 + 16);
  v5 = *v1;
  swift_task_dealloc();
  *v3 = a1;
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_20A516F50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)(v3 + 24) = a1;
  v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_2545FB680 + dword_2545FB680);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 32) = v6;
  *v6 = v3;
  v6[1] = sub_20A516FD0;
  return v8(a2, a3, v3 + 16);
}

uint64_t sub_20A516FD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (!v1)
    **(_QWORD **)(v4 + 24) = a1;
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_20A517038()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  return swift_task_switch();
}

id sub_20A517050()
{
  uint64_t v0;
  id result;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  if ((sub_20A5B8B88() & 1) != 0)
    return (id)(*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  v2 = **(_QWORD **)(v0 + 24);
  *(_QWORD *)(v0 + 32) = v2;
  v3 = *(void **)(v2 + 16);
  result = objc_msgSend(v3, sel_lock);
  v4 = *(_QWORD *)(v2 + 32);
  if (__OFADD__(v4, 1))
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v2 + 32) = v4 + 1;
    objc_msgSend(v3, sel_unlock);
    v5 = swift_task_alloc();
    *(_QWORD *)(v0 + 40) = v5;
    *(_QWORD *)(v5 + 16) = v2;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = swift_task_alloc();
    *(_QWORD *)(v0 + 48) = v6;
    *(_QWORD *)(v6 + 16) = v2;
    *(_QWORD *)(v6 + 24) = v4;
    swift_retain();
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 56) = v7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_253EB51A0);
    *v7 = v0;
    v7[1] = sub_20A517188;
    return (id)sub_20A5B91B8();
  }
  return result;
}

uint64_t sub_20A517188()
{
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A517200()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t DistributedNotificationsAsyncSequence.makeAsyncIterator()@<X0>(_QWORD *a1@<X8>)
{
  if (qword_253EB5030 != -1)
    swift_once();
  *a1 = qword_253EB5020;
  return swift_retain();
}

uint64_t sub_20A51725C()
{
  return MEMORY[0x24BEE40A8];
}

unint64_t sub_20A51726C()
{
  unint64_t result;

  result = qword_253EB5038;
  if (!qword_253EB5038)
  {
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for DistributedNotificationsAsyncSequence.Iterator, &type metadata for DistributedNotificationsAsyncSequence.Iterator);
    atomic_store(result, (unint64_t *)&qword_253EB5038);
  }
  return result;
}

uint64_t sub_20A5172B0@<X0>(_QWORD *a1@<X8>)
{
  if (qword_253EB5030 != -1)
    swift_once();
  *a1 = qword_253EB5020;
  return swift_retain();
}

ValueMetadata *type metadata accessor for DistributedNotificationsAsyncSequence()
{
  return &type metadata for DistributedNotificationsAsyncSequence;
}

ValueMetadata *type metadata accessor for DistributedNotificationsAsyncSequence.Iterator()
{
  return &type metadata for DistributedNotificationsAsyncSequence.Iterator;
}

uint64_t type metadata accessor for DistributedNotificationsAsyncSequence.Iterator.Handler()
{
  return objc_opt_self();
}

uint64_t getEnumTagSinglePayload for DistributedNotificationsAsyncSequence.Iterator.Handler.State(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for DistributedNotificationsAsyncSequence.Iterator.Handler.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for DistributedNotificationsAsyncSequence.Iterator.Handler.State()
{
  return &type metadata for DistributedNotificationsAsyncSequence.Iterator.Handler.State;
}

uint64_t sub_20A5173F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_20A4597C0;
  v6[12] = v5;
  v6[13] = v4;
  v6[11] = a1;
  return swift_task_switch();
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t sub_20A517480(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253EB51A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t ODIAnalyticsEvent.name.getter()
{
  uint64_t *v0;

  if (*v0 < 0)
    return 0xD000000000000049;
  else
    return 0xD00000000000003ELL;
}

unint64_t ODIAnalyticsEvent.fields.getter()
{
  _QWORD *v0;
  uint64_t inited;

  if ((*v0 & 0x8000000000000000) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA6C0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_20A5BA9B0;
    *(_QWORD *)(inited + 32) = 0xD000000000000012;
    *(_QWORD *)(inited + 40) = 0x800000020A5DFC60;
    *(_QWORD *)(inited + 48) = sub_20A5B8BF4();
    *(_QWORD *)(inited + 56) = 0x646F43726F727265;
    *(_QWORD *)(inited + 64) = 0xE900000000000065;
    *(_QWORD *)(inited + 72) = sub_20A5B8C18();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA6C0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_20A5BA9A0;
    *(_QWORD *)(inited + 32) = 0xD000000000000012;
    *(_QWORD *)(inited + 40) = 0x800000020A5DFC60;
    *(_QWORD *)(inited + 48) = sub_20A5B8BF4();
  }
  return sub_20A46AB30(inited);
}

unint64_t sub_20A517614()
{
  uint64_t *v0;

  if (*v0 < 0)
    return 0xD000000000000049;
  else
    return 0xD00000000000003ELL;
}

uint64_t dispatch thunk of Event.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of Event.fields.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t getEnumTagSinglePayload for ODIAnalyticsEvent(uint64_t a1, int a2)
{
  unsigned int v2;
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  HIDWORD(v3) = *(_DWORD *)(a1 + 4);
  LODWORD(v3) = HIDWORD(v3);
  v2 = v3 >> 31;
  if (v2 > 0x80000000)
    v4 = ~v2;
  else
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ODIAnalyticsEvent(uint64_t result, int a2, int a3)
{
  unint64_t v3;

  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      HIDWORD(v3) = -a2;
      LODWORD(v3) = -a2;
      *(_QWORD *)result = (unint64_t)(v3 >> 1) << 32;
      *(_QWORD *)(result + 8) = 0;
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_20A5176FC(_QWORD *a1)
{
  return *a1 >> 63;
}

_QWORD *sub_20A517708(_QWORD *result)
{
  *result &= ~0x8000000000000000;
  return result;
}

uint64_t sub_20A517718(uint64_t result, int a2)
{
  *(_DWORD *)(result + 4) = a2 << 31;
  return result;
}

ValueMetadata *type metadata accessor for ODIAnalyticsEvent()
{
  return &type metadata for ODIAnalyticsEvent;
}

void sub_20A517734(char a1)
{
  sub_20A5B929C();
  __asm { BR              X10 }
}

uint64_t sub_20A51778C()
{
  sub_20A5B8978();
  swift_bridgeObjectRelease();
  return sub_20A5B92CC();
}

void sub_20A51783C(char a1)
{
  sub_20A5B929C();
  __asm { BR              X10 }
}

uint64_t sub_20A517890()
{
  sub_20A5B8978();
  swift_bridgeObjectRelease();
  return sub_20A5B92CC();
}

uint64_t sub_20A517914()
{
  sub_20A5B929C();
  sub_20A5B8978();
  swift_bridgeObjectRelease();
  return sub_20A5B92CC();
}

void sub_20A5179BC(char a1)
{
  sub_20A5B929C();
  __asm { BR              X10 }
}

uint64_t sub_20A517A18()
{
  sub_20A5B8978();
  swift_bridgeObjectRelease();
  return sub_20A5B92CC();
}

void sub_20A517AA0(char a1)
{
  sub_20A5B929C();
  __asm { BR              X10 }
}

uint64_t sub_20A517AF4()
{
  sub_20A5B8978();
  swift_bridgeObjectRelease();
  return sub_20A5B92CC();
}

uint64_t sub_20A517B84()
{
  sub_20A5B8978();
  return swift_bridgeObjectRelease();
}

void sub_20A517C04(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_20A517C50()
{
  sub_20A5B8978();
  return swift_bridgeObjectRelease();
}

void sub_20A517CC4(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_20A517D04()
{
  sub_20A5B8978();
  return swift_bridgeObjectRelease();
}

void sub_20A517D78(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_20A517DC4()
{
  sub_20A5B8978();
  return swift_bridgeObjectRelease();
}

void sub_20A517E80(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_20A517EC8()
{
  sub_20A5B8978();
  return swift_bridgeObjectRelease();
}

uint64_t sub_20A517F64()
{
  sub_20A5B929C();
  sub_20A5B8978();
  swift_bridgeObjectRelease();
  return sub_20A5B92CC();
}

void sub_20A518008(uint64_t a1, char a2)
{
  sub_20A5B929C();
  __asm { BR              X10 }
}

uint64_t sub_20A518060()
{
  sub_20A5B8978();
  swift_bridgeObjectRelease();
  return sub_20A5B92CC();
}

void sub_20A5180E8(uint64_t a1, char a2)
{
  sub_20A5B929C();
  __asm { BR              X10 }
}

uint64_t sub_20A518138()
{
  sub_20A5B8978();
  swift_bridgeObjectRelease();
  return sub_20A5B92CC();
}

void sub_20A5181C8(uint64_t a1, char a2)
{
  sub_20A5B929C();
  __asm { BR              X10 }
}

uint64_t sub_20A518220()
{
  sub_20A5B8978();
  swift_bridgeObjectRelease();
  return sub_20A5B92CC();
}

void sub_20A5182F0(uint64_t a1, char a2)
{
  sub_20A5B929C();
  __asm { BR              X10 }
}

uint64_t sub_20A518344()
{
  sub_20A5B8978();
  swift_bridgeObjectRelease();
  return sub_20A5B92CC();
}

void sub_20A5183F4(uint64_t a1, char a2)
{
  sub_20A5B929C();
  __asm { BR              X10 }
}

uint64_t sub_20A518444()
{
  sub_20A5B8978();
  swift_bridgeObjectRelease();
  return sub_20A5B92CC();
}

void sub_20A5184C8(uint64_t a1, char a2)
{
  sub_20A5B929C();
  __asm { BR              X10 }
}

uint64_t sub_20A518518()
{
  sub_20A5B8978();
  swift_bridgeObjectRelease();
  return sub_20A5B92CC();
}

uint64_t DsidType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_20A518608 + 4 * byte_20A5C4F2E[*v0]))(0x64756F6C4369, 0xE600000000000000);
}

uint64_t sub_20A518608()
{
  return 0x73656E755469;
}

uint64_t sub_20A518618()
{
  return 1684628325;
}

uint64_t sub_20A518628()
{
  return 1869903201;
}

uint64_t sub_20A518638()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  uint64_t v7;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v27;

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = *(_BYTE *)(v0 + 32);
  v27 = *(_BYTE *)(v0 + 56);
  v6 = *(unsigned __int8 *)(v0 + 57);
  swift_bridgeObjectRetain();
  v7 = MEMORY[0x24BEE4B00];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_20A4768A4(v1, v2, 0x696669746E656469, 0xEA00000000007265, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  if ((v5 & 1) != 0)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    v3 = ArmandDeviceDataFieldName.rawValue.getter();
    v4 = v9;
  }
  v10 = swift_isUniquelyReferenced_nonNull_native();
  sub_20A4768A4(v3, v4, 0x6D614E646C656966, 0xE900000000000065, v10);
  swift_bridgeObjectRelease();
  v11 = ArmandDataSource.rawValue.getter();
  v13 = v12;
  v14 = swift_isUniquelyReferenced_nonNull_native();
  sub_20A4768A4(v11, v13, 0x656372756F73, 0xE600000000000000, v14);
  swift_bridgeObjectRelease();
  v15 = sub_20A5B9170();
  v17 = v16;
  v18 = swift_isUniquelyReferenced_nonNull_native();
  sub_20A4768A4(v15, v17, 0x797469726F697270, 0xE800000000000000, v18);
  swift_bridgeObjectRelease();
  if (v6)
    v19 = 1702195828;
  else
    v19 = 0x65736C6166;
  if (v6)
    v20 = 0xE400000000000000;
  else
    v20 = 0xE500000000000000;
  v21 = swift_isUniquelyReferenced_nonNull_native();
  sub_20A4768A4(v19, v20, 0x67656C6976697270, 0xEA00000000006465, v21);
  swift_bridgeObjectRelease();
  if ((v27 & 1) == 0)
  {
    v22 = sub_20A5B9170();
    v24 = v23;
    v25 = swift_isUniquelyReferenced_nonNull_native();
    sub_20A4768A4(v22, v24, 0x4D74756F656D6974, 0xEC000000696C6C69, v25);
    swift_bridgeObjectRelease();
  }
  return v7;
}

void DeviceDataField.init(from:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  Swift::String v13;
  Swift::String v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 *v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  unsigned __int8 *v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 *v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  char v43;
  uint64_t *v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  char v49;
  char v50;
  unsigned __int8 *v51;
  unsigned int v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD v58[3];
  char v59;
  int v60;

  sub_20A5227B4(0);
  if (v2)
    goto LABEL_3;
  v7 = v5;
  v8 = v6;
  swift_bridgeObjectRetain();
  sub_20A5227B4(1);
  v10 = v9;
  v12 = v11;
  sub_20A5227B4(2);
  ArmandDataSource.init(rawValue:)(v13);
  if (LOBYTE(v58[0]) == 14)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    LOBYTE(v58[0]) = -102;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000042, 0x800000020A5E4230, 0, (unsigned __int8 *)v58, 0, 0, 0xD00000000000005ALL, 0x800000020A5E4280, 0x6F72662874696E69, 0xEB00000000293A6DLL, 585);
    swift_willThrow();
LABEL_3:
    swift_bridgeObjectRelease();
    return;
  }
  v60 = LOBYTE(v58[0]);
  swift_bridgeObjectRetain();
  v14._countAndFlagsBits = v10;
  v14._object = v12;
  ArmandDeviceDataFieldName.init(rawValue:)(v14);
  if (v10 == 1145652037 && v12 == (void *)0xE400000000000000 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v12 = 0;
    v59 = 0;
    v10 = 4;
  }
  else if (LOBYTE(v58[0]) == 18)
  {
    v59 = 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    v12 = 0;
    v59 = 0;
    v10 = LOBYTE(v58[0]);
  }
  sub_20A5227B4(3);
  v17 = v16;
  v18 = HIBYTE(v16) & 0xF;
  v19 = v15 & 0xFFFFFFFFFFFFLL;
  if ((v17 & 0x2000000000000000) != 0)
    v20 = v18;
  else
    v20 = v15 & 0xFFFFFFFFFFFFLL;
  if (!v20)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_59;
  }
  v57 = v10;
  if ((v17 & 0x1000000000000000) != 0)
  {
    v22 = (uint64_t)sub_20A5252A4(v15, v17, 10);
    v24 = v54;
    goto LABEL_56;
  }
  if ((v17 & 0x2000000000000000) == 0)
  {
    if ((v15 & 0x1000000000000000) != 0)
      v21 = (unsigned __int8 *)((v17 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v21 = (unsigned __int8 *)sub_20A5B8EE8();
    v22 = (uint64_t)sub_20A525498(v21, v19, 10);
    v24 = v23 & 1;
    goto LABEL_56;
  }
  v58[0] = v15;
  v58[1] = v17 & 0xFFFFFFFFFFFFFFLL;
  if (v15 == 43)
  {
    if (!v18)
      goto LABEL_86;
    if (v18 == 1 || (BYTE1(v15) - 48) > 9u)
      goto LABEL_43;
    v22 = (BYTE1(v15) - 48);
    if (v18 != 2)
    {
      if ((BYTE2(v15) - 48) > 9u)
        goto LABEL_43;
      v22 = 10 * (BYTE1(v15) - 48) + (BYTE2(v15) - 48);
      v25 = v18 - 3;
      if (v25)
      {
        v26 = (unsigned __int8 *)v58 + 3;
        while (1)
        {
          v27 = *v26 - 48;
          if (v27 > 9)
            goto LABEL_43;
          v28 = 10 * v22;
          if ((unsigned __int128)(v22 * (__int128)10) >> 64 != (10 * v22) >> 63)
            goto LABEL_43;
          v22 = v28 + v27;
          if (__OFADD__(v28, v27))
            goto LABEL_43;
          v24 = 0;
          ++v26;
          if (!--v25)
            goto LABEL_56;
        }
      }
    }
LABEL_55:
    v24 = 0;
    goto LABEL_56;
  }
  if (v15 != 45)
  {
    if (!v18 || (v15 - 48) > 9u)
      goto LABEL_43;
    v22 = (v15 - 48);
    if (v18 != 1)
    {
      if ((BYTE1(v15) - 48) > 9u)
        goto LABEL_43;
      v22 = 10 * (v15 - 48) + (BYTE1(v15) - 48);
      v29 = v18 - 2;
      if (v29)
      {
        v30 = (unsigned __int8 *)v58 + 2;
        while (1)
        {
          v31 = *v30 - 48;
          if (v31 > 9)
            goto LABEL_43;
          v32 = 10 * v22;
          if ((unsigned __int128)(v22 * (__int128)10) >> 64 != (10 * v22) >> 63)
            goto LABEL_43;
          v22 = v32 + v31;
          if (__OFADD__(v32, v31))
            goto LABEL_43;
          v24 = 0;
          ++v30;
          if (!--v29)
            goto LABEL_56;
        }
      }
    }
    goto LABEL_55;
  }
  if (v18)
  {
    if (v18 != 1 && (BYTE1(v15) - 48) <= 9u)
    {
      if (v18 == 2)
      {
        v24 = 0;
        v22 = -(uint64_t)(BYTE1(v15) - 48);
LABEL_56:
        swift_bridgeObjectRelease();
        if ((v24 & 1) == 0)
        {
          sub_20A5227B4(5);
          v39 = v34;
          v40 = v35;
          v56 = v22;
          if (v34 == 1702195828 && v35 == 0xE400000000000000 || (sub_20A5B91AC() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            v41 = 1;
            goto LABEL_66;
          }
          if (v39 == 0x65736C6166 && v40 == 0xE500000000000000)
          {
            swift_bridgeObjectRelease();
            v41 = 0;
            goto LABEL_66;
          }
          v50 = sub_20A5B91AC();
          swift_bridgeObjectRelease();
          v41 = 0;
          if ((v50 & 1) != 0)
          {
LABEL_66:
            if (*(_QWORD *)(a1 + 16)
              && (v42 = sub_20A47094C(0x4D74756F656D6974, 0xEC000000696C6C69), (v43 & 1) != 0))
            {
              v44 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * v42);
              v45 = *v44;
              v46 = v44[1];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              v55 = sub_20A519118(v45, v46);
              v48 = v47 & 1;
            }
            else
            {
              swift_bridgeObjectRelease();
              v55 = 0;
              v48 = 1;
            }
            v49 = v59;
            swift_bridgeObjectRetain();
            sub_20A45DDBC(v57, (uint64_t)v12, v49);
            swift_bridgeObjectRelease();
            *(_QWORD *)a2 = v7;
            *(_QWORD *)(a2 + 8) = v8;
            *(_QWORD *)(a2 + 16) = v57;
            *(_QWORD *)(a2 + 24) = v12;
            *(_BYTE *)(a2 + 32) = v49;
            *(_BYTE *)(a2 + 33) = v60;
            *(_QWORD *)(a2 + 40) = v56;
            *(_QWORD *)(a2 + 48) = v55;
            *(_BYTE *)(a2 + 56) = v48;
            *(_BYTE *)(a2 + 57) = v41;
            swift_bridgeObjectRelease();
            v37 = v57;
            v38 = (uint64_t)v12;
            v36 = v49;
            goto LABEL_61;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          LOBYTE(v58[0]) = -102;
          ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000042, 0x800000020A5E4330, 0, (unsigned __int8 *)v58, 0, 0, 0xD00000000000005ALL, 0x800000020A5E4280, 0x6F72662874696E69, 0xEB00000000293A6DLL, 606);
          swift_willThrow();
          v10 = v57;
LABEL_60:
          swift_bridgeObjectRelease();
          v36 = v59;
          v37 = v10;
          v38 = (uint64_t)v12;
LABEL_61:
          sub_20A45DDCC(v37, v38, v36);
          return;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v10 = v57;
LABEL_59:
        LOBYTE(v58[0]) = -102;
        ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000040, 0x800000020A5E42E0, 0, (unsigned __int8 *)v58, 0, 0, 0xD00000000000005ALL, 0x800000020A5E4280, 0x6F72662874696E69, 0xEB00000000293A6DLL, 601);
        swift_willThrow();
        goto LABEL_60;
      }
      if ((BYTE2(v15) - 48) <= 9u)
      {
        v22 = -10 * (BYTE1(v15) - 48) - (BYTE2(v15) - 48);
        v33 = v18 - 3;
        if (!v33)
          goto LABEL_55;
        v51 = (unsigned __int8 *)v58 + 3;
        while (1)
        {
          v52 = *v51 - 48;
          if (v52 > 9)
            break;
          v53 = 10 * v22;
          if ((unsigned __int128)(v22 * (__int128)10) >> 64 != (10 * v22) >> 63)
            break;
          v22 = v53 - v52;
          if (__OFSUB__(v53, v52))
            break;
          v24 = 0;
          ++v51;
          if (!--v33)
            goto LABEL_56;
        }
      }
    }
LABEL_43:
    v22 = 0;
    v24 = 1;
    goto LABEL_56;
  }
  __break(1u);
LABEL_86:
  __break(1u);
}

uint64_t sub_20A519118(uint64_t result, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  unsigned __int8 *v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  unsigned int v20;
  uint64_t v21;
  char v22;
  _QWORD v23[3];

  v3 = HIBYTE(a2) & 0xF;
  v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v5 = v3;
  else
    v5 = result & 0xFFFFFFFFFFFFLL;
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0)
        v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v6 = (unsigned __int8 *)sub_20A5B8EE8();
      v7 = (uint64_t)sub_20A525498(v6, v4, 10);
      v9 = v8 & 1;
      goto LABEL_37;
    }
    v23[0] = result;
    v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v3)
        goto LABEL_50;
      if (v3 == 1 || (BYTE1(result) - 48) > 9u)
        goto LABEL_34;
      v7 = (BYTE1(result) - 48);
      v14 = v3 - 2;
      if (v14)
      {
        v15 = (unsigned __int8 *)v23 + 2;
        while (1)
        {
          v16 = *v15 - 48;
          if (v16 > 9)
            goto LABEL_34;
          v17 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
            goto LABEL_34;
          v7 = v17 + v16;
          if (__OFADD__(v17, v16))
            goto LABEL_34;
          v9 = 0;
          ++v15;
          if (!--v14)
            goto LABEL_37;
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v3)
        {
          if (v3 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            v7 = -(uint64_t)(BYTE1(result) - 48);
            v10 = v3 - 2;
            if (v10)
            {
              v11 = (unsigned __int8 *)v23 + 2;
              while (1)
              {
                v12 = *v11 - 48;
                if (v12 > 9)
                  goto LABEL_34;
                v13 = 10 * v7;
                if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
                  goto LABEL_34;
                v7 = v13 - v12;
                if (__OFSUB__(v13, v12))
                  goto LABEL_34;
                v9 = 0;
                ++v11;
                if (!--v10)
                  goto LABEL_37;
              }
            }
            goto LABEL_36;
          }
LABEL_34:
          v7 = 0;
          v9 = 1;
          goto LABEL_37;
        }
        __break(1u);
LABEL_50:
        __break(1u);
        return result;
      }
      if (!v3 || (result - 48) > 9u)
        goto LABEL_34;
      v7 = (result - 48);
      v18 = v3 - 1;
      if (v18)
      {
        v19 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          v20 = *v19 - 48;
          if (v20 > 9)
            goto LABEL_34;
          v21 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
            goto LABEL_34;
          v7 = v21 + v20;
          if (__OFADD__(v21, v20))
            goto LABEL_34;
          v9 = 0;
          ++v19;
          if (!--v18)
            goto LABEL_37;
        }
      }
    }
LABEL_36:
    v9 = 0;
    goto LABEL_37;
  }
  v7 = (uint64_t)sub_20A5252A4(result, a2, 10);
  v9 = v22;
LABEL_37:
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
    return 0;
  else
    return v7;
}

uint64_t sub_20A519364@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X6>, uint64_t a8@<X8>)
{
  char v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  double v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v12 = *a7;
  v13 = (int *)type metadata accessor for PregeneratedAssessment();
  v14 = sub_20A4D0354();
  v31 = sub_20A4894E0(*(uint64_t *)((char *)a1 + v13[7]), *(uint64_t *)((char *)a1 + v13[7] + 8));
  swift_bridgeObjectRelease();
  v15 = a1[1];
  v16 = (uint64_t *)((char *)a1 + v13[19]);
  v17 = v16[1];
  v29 = *v16;
  v30 = *a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v14)
  {
    sub_20A4EF554(v14);
    swift_release();
  }
  v18 = *(uint64_t *)((char *)a1 + v13[13]);
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    v26 = v20;
    v27 = a5;
    v28 = v12;
    if (qword_253EB6228 == -1)
      goto LABEL_5;
  }
  swift_once();
LABEL_5:
  v22 = qword_2546103B8;
  v21 = qword_2546103C0;
  swift_bridgeObjectRetain();
  sub_20A5B85E8();
  v24 = v23;
  result = sub_20A4EF528(v14);
  if ((~*(_QWORD *)&v24 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v24 <= -9.22337204e18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v24 < 9.22337204e18)
  {
    result = sub_20A4B0268((uint64_t)a1);
    *(_QWORD *)a8 = v30;
    *(_QWORD *)(a8 + 8) = v15;
    *(_QWORD *)(a8 + 16) = v29;
    *(_QWORD *)(a8 + 24) = v17;
    *(_QWORD *)(a8 + 32) = a2;
    *(_QWORD *)(a8 + 40) = a3;
    *(_QWORD *)(a8 + 48) = a4;
    *(_QWORD *)(a8 + 56) = v27;
    *(_QWORD *)(a8 + 64) = v14;
    *(_QWORD *)(a8 + 72) = v26;
    *(_BYTE *)(a8 + 80) = 0;
    *(_QWORD *)(a8 + 88) = a6;
    *(_QWORD *)(a8 + 96) = v22;
    *(_QWORD *)(a8 + 104) = v21;
    *(_BYTE *)(a8 + 112) = v28;
    *(_QWORD *)(a8 + 120) = (uint64_t)v24;
    *(_BYTE *)(a8 + 128) = v31 & 1;
    return result;
  }
LABEL_13:
  __break(1u);
  return result;
}

void __swiftcall TSID.init(tsid:session_id:ts_nonce:)(CoreODIEssentials::TSID *__return_ptr retstr, Swift::String tsid, Swift::String session_id, Swift::String_optional ts_nonce)
{
  retstr->tsid = tsid;
  retstr->session_id = session_id;
  retstr->ts_nonce = ts_nonce;
}

unint64_t sub_20A519584(_QWORD *a1, unsigned int a2)
{
  uint64_t v2;
  unint64_t v5;
  unsigned int v7;
  _QWORD v8[4];

  v5 = (unint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A5B92E4();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v8, v8[3]);
    sub_20A5B91C4();
    v7 = sub_20A52D0C0();
    if (v7 == 5)
      v5 = a2;
    else
      v5 = v7;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v5;
}

uint64_t sub_20A519678()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5270);
  sub_20A5B82B8();
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_20A5C8390;
  sub_20A5B82AC();
  sub_20A5B82AC();
  sub_20A5B82AC();
  sub_20A5B82AC();
  sub_20A5B82AC();
  sub_20A5B82AC();
  sub_20A5B82AC();
  return v0;
}

uint64_t sub_20A5197F8()
{
  _BYTE *v0;

  if (*v0)
    return 0x4974736575716572;
  else
    return 0x61737265766E6F63;
}

uint64_t sub_20A519844@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A52AB68(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A519868()
{
  sub_20A52DEE4();
  return sub_20A5B9314();
}

uint64_t sub_20A519890()
{
  sub_20A52DEE4();
  return sub_20A5B9320();
}

uint64_t sub_20A5198B8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_20A5198E4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB940);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A52DEE4();
  sub_20A5B92FC();
  v9[15] = 0;
  swift_bridgeObjectRetain();
  sub_20A5B9110();
  if (!v1)
  {
    swift_bridgeObjectRelease();
    v9[14] = 1;
    swift_bridgeObjectRetain();
    sub_20A5B9110();
  }
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v7, v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_20A519A40(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB7F8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A52DEE4();
  sub_20A5B92F0();
  if (v2)
  {
    type metadata accessor for RequestHeader();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v17 = 0;
    *(_QWORD *)(v1 + 16) = sub_20A5B9074();
    *(_QWORD *)(v1 + 24) = v10;
    v16 = 1;
    v12 = sub_20A5B9074();
    v14 = v13;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    *(_QWORD *)(v3 + 32) = v12;
    *(_QWORD *)(v3 + 40) = v14;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v3;
}

uint64_t sub_20A519BC4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB840);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A52DFF4();
  sub_20A5B92FC();
  v9[15] = 0;
  sub_20A5B90D4();
  if (!v1)
  {
    v9[14] = 1;
    sub_20A5B9110();
    v9[13] = 2;
    sub_20A5B9110();
    v9[12] = 3;
    sub_20A5B9110();
    v9[11] = 4;
    sub_20A5B90D4();
    v9[10] = 5;
    sub_20A5B90D4();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_20A519D78@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_20A51AE7C(a1, (void (*)(void))type metadata accessor for RequestHeader, (uint64_t (*)(uint64_t))sub_20A519A40, a2);
}

uint64_t sub_20A519DA0(_QWORD *a1)
{
  return sub_20A5198E4(a1);
}

uint64_t sub_20A519DC0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_20A519DFC + 4 * byte_20A5C4F32[*v0]))(0x61737265766E6F63, 0xEE0064496E6F6974);
}

uint64_t sub_20A519DFC()
{
  return 0x4974736575716572;
}

uint64_t sub_20A519E18()
{
  return 0x65736E6F70736572;
}

uint64_t sub_20A519E34()
{
  return 0x6F43737574617473;
}

uint64_t sub_20A519E54()
{
  return 0x7574617453627573;
}

uint64_t sub_20A519E78()
{
  return 0x654D737574617473;
}

uint64_t sub_20A519E9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A52AC88(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A519EC0()
{
  sub_20A52DFF4();
  return sub_20A5B9314();
}

uint64_t sub_20A519EE8()
{
  sub_20A52DFF4();
  return sub_20A5B9320();
}

double sub_20A519F10@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  _OWORD v8[6];

  sub_20A52AF90(a1, (uint64_t *)v8);
  if (!v2)
  {
    v5 = v8[3];
    a2[2] = v8[2];
    a2[3] = v5;
    v6 = v8[5];
    a2[4] = v8[4];
    a2[5] = v6;
    result = *(double *)v8;
    v7 = v8[1];
    *a2 = v8[0];
    a2[1] = v7;
  }
  return result;
}

uint64_t sub_20A519F58(_QWORD *a1)
{
  return sub_20A519BC4(a1);
}

uint64_t sub_20A519F6C(char *a1, char *a2)
{
  return sub_20A4EA978(*a1, *a2);
}

uint64_t sub_20A519F78()
{
  sub_20A5B929C();
  sub_20A5B8978();
  swift_bridgeObjectRelease();
  return sub_20A5B92CC();
}

uint64_t sub_20A51A00C()
{
  sub_20A5B8978();
  return swift_bridgeObjectRelease();
}

uint64_t sub_20A51A07C()
{
  sub_20A5B929C();
  sub_20A5B8978();
  swift_bridgeObjectRelease();
  return sub_20A5B92CC();
}

uint64_t sub_20A51A10C@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_20A5B9008();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_20A51A168(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x65736E6F70736572;
  if (*v1)
    v2 = 0x45656D69746E7572;
  v3 = 0xEE00726564616548;
  if (*v1)
    v3 = 0xEC000000726F7272;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_20A51A1BC()
{
  _BYTE *v0;

  if (*v0)
    return 0x45656D69746E7572;
  else
    return 0x65736E6F70736572;
}

uint64_t sub_20A51A20C@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_20A5B9008();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_20A51A26C()
{
  sub_20A52DF28();
  return sub_20A5B9314();
}

uint64_t sub_20A51A294()
{
  sub_20A52DF28();
  return sub_20A5B9320();
}

uint64_t sub_20A51A2BC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD v19[3];
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  char v24;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB808);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A52DF28();
  sub_20A5B92F0();
  if (v2)
  {
    type metadata accessor for GenericResponse();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v24 = 0;
    sub_20A52DF6C();
    sub_20A5B90A4();
    v11 = v19[1];
    v10 = v19[2];
    v12 = v20;
    v13 = v21;
    *(_OWORD *)(v1 + 16) = v19[0];
    *(_OWORD *)(v1 + 32) = v11;
    *(_OWORD *)(v1 + 48) = v10;
    *(_QWORD *)(v1 + 64) = v12;
    *(_QWORD *)(v1 + 72) = v13;
    v14 = v23;
    *(_OWORD *)(v1 + 80) = v22;
    *(_OWORD *)(v1 + 96) = v14;
    LOBYTE(v19[0]) = 1;
    v16 = sub_20A5B9038();
    v18 = v17;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    *(_QWORD *)(v3 + 112) = v16;
    *(_QWORD *)(v3 + 120) = v18;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v3;
}

uint64_t sub_20A51A4B4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_20A51A534(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  _BYTE v16[16];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB930);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A52DF28();
  sub_20A5B92FC();
  v11 = *(_OWORD *)(v3 + 32);
  v10 = *(_OWORD *)(v3 + 48);
  v12 = *(_QWORD *)(v3 + 64);
  v13 = *(_QWORD *)(v3 + 72);
  v17 = *(_OWORD *)(v3 + 16);
  v18 = v11;
  v19 = v10;
  v20 = v12;
  v21 = v13;
  v14 = *(_OWORD *)(v3 + 96);
  v22 = *(_OWORD *)(v3 + 80);
  v23 = v14;
  v16[15] = 0;
  sub_20A52E47C();
  sub_20A5B9140();
  if (!v2)
  {
    LOBYTE(v17) = 1;
    sub_20A5B90D4();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_20A51A678@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_20A51AE7C(a1, (void (*)(void))type metadata accessor for GenericResponse, (uint64_t (*)(uint64_t))sub_20A51A2BC, a2);
}

uint64_t sub_20A51A6A0(_QWORD *a1)
{
  return sub_20A51A534(a1);
}

uint64_t sub_20A51A6C0()
{
  return sub_20A51AF1C();
}

uint64_t sub_20A51A6E4()
{
  return sub_20A5B8978();
}

uint64_t sub_20A51A708()
{
  return sub_20A51AFA0();
}

uint64_t sub_20A51A72C@<X0>(BOOL *a1@<X8>)
{
  return sub_20A51AFF4(a1);
}

void sub_20A51A738(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "requestHeader");
  *(_WORD *)(a1 + 14) = -4864;
}

uint64_t sub_20A51A760()
{
  return 0x4874736575716572;
}

uint64_t sub_20A51A784@<X0>(BOOL *a1@<X8>)
{
  return sub_20A51B088(a1);
}

void sub_20A51A790(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_20A51A79C()
{
  sub_20A52E3FC();
  return sub_20A5B9314();
}

uint64_t sub_20A51A7C4()
{
  sub_20A52E3FC();
  return sub_20A5B9320();
}

void sub_20A51A7EC(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  sub_20A5B8FB4();
  __break(1u);
}

uint64_t sub_20A51A848(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB918);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A52E3FC();
  sub_20A5B92FC();
  v10[1] = *(_QWORD *)(v2 + 16);
  type metadata accessor for RequestHeader();
  sub_20A52E440(&qword_2545FB928, type metadata accessor for RequestHeader, (uint64_t)&unk_20A5C6C4C);
  sub_20A5B9140();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_20A51A960()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_20A51A984@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 96))();
  if (!v2)
    *a1 = result;
  return result;
}

uint64_t sub_20A51A9B0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 104))();
}

uint64_t sub_20A51A9D8()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6449656369766564;
  if (*v0 != 1)
    v1 = 0x6E49746E65696C63;
  if (*v0)
    return v1;
  else
    return 0x7A69726F68747561;
}

uint64_t sub_20A51AA44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A52B3A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A51AA68()
{
  sub_20A52DFB0();
  return sub_20A5B9314();
}

uint64_t sub_20A51AA90()
{
  sub_20A52DFB0();
  return sub_20A5B9320();
}

uint64_t sub_20A51AAB8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_20A51AAEC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB910);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A52DFB0();
  sub_20A5B92FC();
  v9[15] = 0;
  swift_bridgeObjectRetain();
  sub_20A5B9110();
  if (v1)
  {
    (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v7, v3);
  }
  else
  {
    swift_bridgeObjectRelease();
    v9[14] = 1;
    swift_bridgeObjectRetain();
    sub_20A5B9110();
    swift_bridgeObjectRelease();
    v9[13] = 2;
    swift_bridgeObjectRetain();
    sub_20A5B9110();
    (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v7, v3);
  }
  return swift_bridgeObjectRelease();
}

_QWORD *sub_20A51AC88(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB820);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A52DFB0();
  sub_20A5B92F0();
  if (v2)
  {
    type metadata accessor for AppleCredentials();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v19 = 0;
    v1[2] = sub_20A5B9074();
    v1[3] = v10;
    v18 = 1;
    v1[4] = sub_20A5B9074();
    v1[5] = v11;
    v17 = 2;
    v13 = sub_20A5B9074();
    v15 = v14;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    v3[6] = v13;
    v3[7] = v15;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v3;
}

uint64_t sub_20A51AE54@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_20A51AE7C(a1, (void (*)(void))type metadata accessor for AppleCredentials, (uint64_t (*)(uint64_t))sub_20A51AC88, a2);
}

uint64_t sub_20A51AE7C@<X0>(uint64_t a1@<X0>, void (*a2)(void)@<X3>, uint64_t (*a3)(uint64_t)@<X5>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t result;

  a2();
  v8 = swift_allocObject();
  result = a3(a1);
  if (!v4)
    *a4 = v8;
  return result;
}

uint64_t sub_20A51AEE0(_QWORD *a1)
{
  return sub_20A51AAEC(a1);
}

uint64_t sub_20A51AF00()
{
  return sub_20A51AF1C();
}

uint64_t sub_20A51AF1C()
{
  sub_20A5B929C();
  sub_20A5B8978();
  return sub_20A5B92CC();
}

uint64_t sub_20A51AF68()
{
  return sub_20A5B8978();
}

uint64_t sub_20A51AF84()
{
  return sub_20A51AFA0();
}

uint64_t sub_20A51AFA0()
{
  sub_20A5B929C();
  sub_20A5B8978();
  return sub_20A5B92CC();
}

uint64_t sub_20A51AFE8@<X0>(BOOL *a1@<X8>)
{
  return sub_20A51AFF4(a1);
}

uint64_t sub_20A51AFF4@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_20A5B9008();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_20A51B040(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000010;
  a1[1] = 0x800000020A5DB280;
}

unint64_t sub_20A51B060()
{
  return 0xD000000000000010;
}

uint64_t sub_20A51B07C@<X0>(BOOL *a1@<X8>)
{
  return sub_20A51B088(a1);
}

uint64_t sub_20A51B088@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_20A5B9008();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_20A51B0D8()
{
  sub_20A52E33C();
  return sub_20A5B9314();
}

uint64_t sub_20A51B100()
{
  sub_20A52E33C();
  return sub_20A5B9320();
}

void sub_20A51B128(uint64_t a1)
{
  uint64_t inited;

  inited = swift_initStackObject();
  __swift_destroy_boxed_opaque_existential_1(a1);
  *(_QWORD *)(inited + 24) = 0;
  swift_release();
  sub_20A5B8FB4();
  __break(1u);
}

uint64_t sub_20A51B1AC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  _QWORD v10[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB8E8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(v1 + 24))
    return sub_20A51A848(a1);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A52E33C();
  sub_20A5B92FC();
  v10[1] = *(_QWORD *)(v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB8F8);
  sub_20A52E380();
  sub_20A5B9140();
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  if (!v2)
    return sub_20A51A848(a1);
  return result;
}

uint64_t sub_20A51B2D8()
{
  return swift_release();
}

uint64_t sub_20A51B2E0()
{
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_20A51B30C()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000012;
  else
    return 0x6E6F6973726576;
}

uint64_t sub_20A51B34C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A52B524(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A51B370()
{
  sub_20A525388();
  return sub_20A5B9314();
}

uint64_t sub_20A51B398()
{
  sub_20A525388();
  return sub_20A5B9320();
}

uint64_t TrainingSignalId.encode(to:)(_QWORD *a1)
{
  return sub_20A51B528(a1, &qword_253EB48F0, (void (*)(void))sub_20A525388);
}

uint64_t TrainingSignalId.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_20A51B688(a1, &qword_2545FB690, (void (*)(void))sub_20A525388, a2);
}

uint64_t sub_20A51B418@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return TrainingSignalId.init(from:)(a1, a2);
}

uint64_t sub_20A51B42C(_QWORD *a1)
{
  return TrainingSignalId.encode(to:)(a1);
}

uint64_t sub_20A51B440()
{
  _BYTE *v0;

  if (*v0)
    return 0x656D737365737361;
  else
    return 0x6E6F6973726576;
}

uint64_t sub_20A51B488@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A52B610(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A51B4AC()
{
  sub_20A5253CC();
  return sub_20A5B9314();
}

uint64_t sub_20A51B4D4()
{
  sub_20A5253CC();
  return sub_20A5B9320();
}

uint64_t AssessmentGUIDContainer.encode(to:)(_QWORD *a1)
{
  return sub_20A51B528(a1, &qword_253EB4908, (void (*)(void))sub_20A5253CC);
}

uint64_t sub_20A51B528(_QWORD *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[3];
  void (*v13)(void);
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;

  v13 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v15 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v3 + 16);
  v12[1] = *(_QWORD *)(v3 + 24);
  v12[2] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v13();
  sub_20A5B92FC();
  v17 = 0;
  v10 = v14;
  sub_20A5B9110();
  if (!v10)
  {
    v16 = 1;
    sub_20A5B9110();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v8, v5);
}

uint64_t AssessmentGUIDContainer.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_20A51B688(a1, &qword_2545FB698, (void (*)(void))sub_20A5253CC, a2);
}

uint64_t sub_20A51B688@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, void (*a3)(void)@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  char v25;
  char v26;

  v23 = a4;
  v24 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v7 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24, v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_20A5B92F0();
  if (v4)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v11 = v7;
    v12 = v23;
    v13 = v24;
    v26 = 0;
    v14 = sub_20A5B9074();
    v16 = v15;
    v25 = 1;
    swift_bridgeObjectRetain();
    v17 = sub_20A5B9074();
    v20 = v19;
    v21 = *(void (**)(char *, uint64_t))(v11 + 8);
    v22 = v17;
    v21(v10, v13);
    *v12 = v14;
    v12[1] = v16;
    v12[2] = v22;
    v12[3] = v20;
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_20A51B838@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return AssessmentGUIDContainer.init(from:)(a1, a2);
}

uint64_t sub_20A51B84C(_QWORD *a1)
{
  return AssessmentGUIDContainer.encode(to:)(a1);
}

uint64_t sub_20A51B860(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_20A51B898 + 4 * byte_20A5C4F38[a1]))(0x776F6C666B726F77, 0xEA00000000006449);
}

uint64_t sub_20A51B898()
{
  return 0x49656C69666F7270;
}

uint64_t sub_20A51B8B4()
{
  return 0x6E65674172657375;
}

unint64_t sub_20A51B8D4()
{
  return 0xD000000000000011;
}

uint64_t sub_20A51B950()
{
  return 0x6567416568636163;
}

uint64_t sub_20A51B968()
{
  return 0x6563697665447369;
}

void sub_20A51B98C()
{
  JUMPOUT(0x20A51B9A0);
}

uint64_t sub_20A51B9AC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _DWORD v15[4];
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB8D8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + 16);
  v28 = *(_QWORD *)(v1 + 24);
  v29 = v8;
  v9 = *(_QWORD *)(v1 + 32);
  v26 = *(_QWORD *)(v1 + 40);
  v27 = v9;
  v10 = *(_QWORD *)(v1 + 48);
  v24 = *(_QWORD *)(v1 + 56);
  v25 = v10;
  v11 = *(_QWORD *)(v1 + 64);
  v22 = *(_QWORD *)(v1 + 72);
  v23 = v11;
  v21 = *(unsigned __int8 *)(v1 + 80);
  v12 = *(_QWORD *)(v1 + 88);
  v18 = *(_QWORD *)(v1 + 96);
  v19 = *(_QWORD *)(v1 + 104);
  v20 = v12;
  v17 = *(unsigned __int8 *)(v1 + 112);
  v16 = *(_QWORD *)(v1 + 120);
  v15[3] = *(unsigned __int8 *)(v1 + 128);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A52E214();
  sub_20A5B92FC();
  LOBYTE(v32) = 0;
  v13 = v30;
  sub_20A5B9110();
  if (!v13)
  {
    LOBYTE(v32) = 1;
    sub_20A5B90D4();
    LOBYTE(v32) = 2;
    sub_20A5B9110();
    LOBYTE(v32) = 3;
    sub_20A5B9110();
    v32 = v23;
    v31 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_253EB46D0);
    sub_20A44D20C(&qword_2545FA368, &qword_253EB46D0, (uint64_t)&protocol conformance descriptor for EncryptedDataContainer<A>);
    sub_20A5B9104();
    LOBYTE(v32) = 5;
    sub_20A5B90F8();
    v32 = v20;
    v31 = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5130);
    sub_20A52E29C((unint64_t *)&unk_253EB47F8, &qword_253EB5130, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
    sub_20A5B9104();
    LOBYTE(v32) = 7;
    sub_20A5B90D4();
    LOBYTE(v32) = v17;
    v31 = 8;
    sub_20A52E2F8();
    sub_20A5B9104();
    LOBYTE(v32) = 9;
    sub_20A5B9134();
    LOBYTE(v32) = 10;
    sub_20A5B911C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_20A51BD48@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  char v63;
  _QWORD v64[10];
  char v65;
  _BYTE v66[7];
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  _BYTE v71[7];
  uint64_t v72;
  char v73;
  char v74;
  _BYTE v75[7];
  _BYTE v76[7];
  char v77;
  _QWORD *v78;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB8C0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a1[3];
  v78 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_20A52E214();
  sub_20A5B92F0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v78);
  LOBYTE(v64[0]) = 0;
  v11 = sub_20A5B9074();
  v13 = v12;
  LOBYTE(v64[0]) = 1;
  swift_bridgeObjectRetain();
  v50 = sub_20A5B9038();
  v51 = v11;
  LOBYTE(v64[0]) = 2;
  v15 = v14;
  swift_bridgeObjectRetain();
  v16 = sub_20A5B9074();
  v54 = v15;
  v49 = v16;
  LOBYTE(v64[0]) = 3;
  v18 = v17;
  swift_bridgeObjectRetain();
  v19 = sub_20A5B9074();
  v53 = v18;
  v48 = v19;
  v21 = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB46D0);
  LOBYTE(v55) = 4;
  sub_20A44D20C(&qword_2545FA350, &qword_253EB46D0, (uint64_t)&protocol conformance descriptor for EncryptedDataContainer<A>);
  swift_bridgeObjectRetain();
  sub_20A5B9068();
  v52 = v21;
  v22 = v64[0];
  LOBYTE(v64[0]) = 5;
  swift_retain();
  v47 = sub_20A5B905C();
  v77 = v23 & 1;
  v46 = v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5130);
  LOBYTE(v55) = 6;
  sub_20A52E29C(&qword_253EB5138, &qword_253EB5130, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
  sub_20A5B9068();
  v24 = v64[0];
  LOBYTE(v64[0]) = 7;
  v45 = v24;
  swift_bridgeObjectRetain();
  v25 = sub_20A5B9038();
  v44 = v26;
  v42 = v25;
  LOBYTE(v55) = 8;
  sub_20A52E258();
  swift_bridgeObjectRetain();
  v43 = 0;
  sub_20A5B9068();
  v41 = LOBYTE(v64[0]);
  LOBYTE(v64[0]) = 9;
  v40 = sub_20A5B9098();
  v74 = 10;
  v27 = sub_20A5B9080();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  LODWORD(v43) = v27 & 1;
  v28 = v52;
  *(_QWORD *)&v55 = v51;
  *((_QWORD *)&v55 + 1) = v13;
  v30 = v53;
  v29 = v54;
  *(_QWORD *)&v56 = v50;
  *((_QWORD *)&v56 + 1) = v54;
  *(_QWORD *)&v57 = v49;
  *((_QWORD *)&v57 + 1) = v53;
  *(_QWORD *)&v58 = v48;
  *((_QWORD *)&v58 + 1) = v52;
  v39 = v22;
  *(_QWORD *)&v59 = v22;
  *((_QWORD *)&v59 + 1) = v47;
  LOBYTE(v60) = v46 & 1;
  v31 = v45;
  *((_QWORD *)&v60 + 1) = v45;
  *(_QWORD *)&v61 = v42;
  *((_QWORD *)&v61 + 1) = v44;
  LOBYTE(v62) = v41;
  *((_QWORD *)&v62 + 1) = v40;
  v63 = v43;
  sub_20A489D88((uint64_t)&v55);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  v32 = v44;
  swift_bridgeObjectRelease();
  v33 = v62;
  *(_OWORD *)(a2 + 96) = v61;
  *(_OWORD *)(a2 + 112) = v33;
  *(_BYTE *)(a2 + 128) = v63;
  v34 = v58;
  *(_OWORD *)(a2 + 32) = v57;
  *(_OWORD *)(a2 + 48) = v34;
  v35 = v60;
  *(_OWORD *)(a2 + 64) = v59;
  *(_OWORD *)(a2 + 80) = v35;
  v36 = v56;
  *(_OWORD *)a2 = v55;
  *(_OWORD *)(a2 + 16) = v36;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v78);
  v64[0] = v51;
  v64[1] = v13;
  v64[2] = v50;
  v64[3] = v29;
  v64[4] = v49;
  v64[5] = v30;
  v64[6] = v48;
  v64[7] = v28;
  v64[8] = v39;
  v64[9] = v47;
  v65 = v77;
  *(_DWORD *)v66 = *(_DWORD *)v76;
  *(_DWORD *)&v66[3] = *(_DWORD *)&v76[3];
  v67 = v31;
  v68 = v42;
  v69 = v32;
  v70 = v41;
  *(_DWORD *)&v71[3] = *(_DWORD *)&v75[3];
  *(_DWORD *)v71 = *(_DWORD *)v75;
  v72 = v40;
  v73 = v43;
  return sub_20A489E68((uint64_t)v64);
}

uint64_t sub_20A51C4DC()
{
  unsigned __int8 *v0;

  return sub_20A51B860(*v0);
}

uint64_t sub_20A51C4E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A52B724(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A51C508()
{
  sub_20A52E214();
  return sub_20A5B9314();
}

uint64_t sub_20A51C530()
{
  sub_20A52E214();
  return sub_20A5B9320();
}

uint64_t sub_20A51C558@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A51BD48(a1, a2);
}

uint64_t sub_20A51C56C(_QWORD *a1)
{
  return sub_20A51B9AC(a1);
}

uint64_t sub_20A51C580(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE v43[144];
  char v44;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FBA70);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v32 = v1[2];
  v33 = v8;
  v9 = v1[3];
  v30 = v1[4];
  v31 = v9;
  v10 = v1[5];
  v28 = v1[6];
  v29 = v10;
  v11 = v1[7];
  v26 = v1[8];
  v27 = v11;
  v12 = v1[9];
  v24 = v1[10];
  v25 = v12;
  v13 = v1[11];
  v22 = v1[12];
  v23 = v13;
  v14 = v1[13];
  v20 = v1[14];
  v21 = v14;
  sub_20A47E0CC((uint64_t)(v1 + 15), (uint64_t)v43);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A530180();
  sub_20A5B92FC();
  LOBYTE(v35) = 0;
  v15 = v34;
  sub_20A5B90D4();
  if (!v15)
  {
    v16 = v22;
    v17 = v23;
    v35 = v32;
    v36 = v31;
    v37 = v30;
    v38 = v29;
    v39 = v28;
    v40 = v27;
    v18 = v24;
    v41 = v26;
    v42 = v25;
    v44 = 1;
    sub_20A52E07C();
    sub_20A5B9104();
    v35 = v18;
    v36 = v17;
    v37 = v16;
    v38 = v21;
    v39 = v20;
    v44 = 2;
    sub_20A49DB38();
    sub_20A5B9104();
    sub_20A47E0CC((uint64_t)v43, (uint64_t)&v35);
    v44 = 3;
    sub_20A5301C4();
    sub_20A5B9104();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

_QWORD *sub_20A51C7D0@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  _OWORD *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  __int128 v40;
  _QWORD *v41;
  _OWORD *v42;
  _BYTE v43[136];
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  _OWORD v51[7];
  _OWORD v52[2];
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  _OWORD v67[2];
  char v68;
  uint64_t v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  _OWORD v77[7];
  _OWORD v78[3];
  uint64_t v79;

  v42 = a2;
  v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FBAC8);
  v4 = *(_QWORD *)(v79 - 8);
  MEMORY[0x24BDAC7A8](v79, v5);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A530180();
  sub_20A5B92F0();
  if (v2)
    return (_QWORD *)__swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v41 = a1;
  v8 = v4;
  LOBYTE(v53) = 0;
  v9 = v79;
  v10 = v7;
  v11 = sub_20A5B9038();
  v13 = v12;
  *(_QWORD *)&v70 = v11;
  *((_QWORD *)&v70 + 1) = v12;
  LOBYTE(v44) = 1;
  sub_20A48A920();
  swift_bridgeObjectRetain();
  sub_20A5B9068();
  v35 = v13;
  v14 = v54;
  v15 = v55;
  v71 = v53;
  v72 = v54;
  v73 = v55;
  v74 = v56;
  LOBYTE(v44) = 2;
  v40 = v53;
  v36 = *((_QWORD *)&v55 + 1);
  v39 = *((_QWORD *)&v56 + 1);
  v37 = v56;
  sub_20A465800(v53, *((uint64_t *)&v53 + 1));
  sub_20A49D8AC();
  v34 = 0;
  sub_20A5B9068();
  v38 = v14;
  v31 = v15;
  v32 = v11;
  v16 = v53;
  v17 = *((_QWORD *)&v54 + 1);
  v18 = v55;
  v75 = v53;
  v76 = v54;
  *(_QWORD *)&v77[0] = v55;
  v68 = 3;
  v30 = v54;
  sub_20A465850(v53, *((uint64_t *)&v53 + 1), v54, *((uint64_t *)&v54 + 1), v55);
  sub_20A5303E4();
  sub_20A5B9068();
  v33 = *((_QWORD *)&v16 + 1);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v9);
  sub_20A47E0CC((uint64_t)&v69, (uint64_t)v43);
  sub_20A47E0CC((uint64_t)v43, (uint64_t)v77 + 8);
  *(_QWORD *)&v44 = v32;
  *((_QWORD *)&v44 + 1) = v35;
  v45 = v40;
  v46 = v38;
  *(_QWORD *)&v47 = v31;
  *((_QWORD *)&v47 + 1) = v36;
  *(_QWORD *)&v48 = v37;
  *((_QWORD *)&v48 + 1) = v39;
  *(_QWORD *)&v49 = v16;
  v19 = v33;
  v20 = v30;
  *((_QWORD *)&v49 + 1) = v33;
  *(_QWORD *)&v50 = v30;
  *((_QWORD *)&v50 + 1) = v17;
  *(_QWORD *)&v51[0] = v18;
  sub_20A47E0CC((uint64_t)v43, (uint64_t)v51 + 8);
  sub_20A530428(&v44);
  sub_20A46564C(v16, v19, v20, v17, v18);
  sub_20A4655FC(v40, *((uint64_t *)&v40 + 1));
  swift_bridgeObjectRelease();
  v21 = v51[6];
  v22 = v42;
  v42[12] = v51[5];
  v22[13] = v21;
  v22[14] = v52[0];
  *(_OWORD *)((char *)v22 + 233) = *(_OWORD *)((char *)v52 + 9);
  v23 = v51[2];
  v22[8] = v51[1];
  v22[9] = v23;
  v24 = v51[4];
  v22[10] = v51[3];
  v22[11] = v24;
  v25 = v49;
  v22[4] = v48;
  v22[5] = v25;
  v26 = v51[0];
  v22[6] = v50;
  v22[7] = v26;
  v27 = v45;
  *v22 = v44;
  v22[1] = v27;
  v28 = v47;
  v22[2] = v46;
  v22[3] = v28;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  v65 = v77[5];
  v66 = v77[6];
  v67[0] = v78[0];
  *(_OWORD *)((char *)v67 + 9) = *(_OWORD *)((char *)v78 + 9);
  v61 = v77[1];
  v62 = v77[2];
  v63 = v77[3];
  v64 = v77[4];
  v57 = v74;
  v58 = v75;
  v59 = v76;
  v60 = v77[0];
  v53 = v70;
  v54 = v71;
  v55 = v72;
  v56 = v73;
  return sub_20A4912EC(&v53);
}

uint64_t sub_20A51CD14(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_20A51CD50 + 4 * byte_20A5C4F43[a1]))(0xD000000000000012, 0x800000020A5E46E0);
}

uint64_t sub_20A51CD50()
{
  return 0x617461645F617564;
}

uint64_t sub_20A51CD68()
{
  return 0x7364656573;
}

uint64_t sub_20A51CD7C()
{
  return 0x776F6C666B726F77;
}

uint64_t sub_20A51CD9C()
{
  return 0x5F656C69666F7270;
}

uint64_t sub_20A51CDB8()
{
  return 0x726F727265;
}

unint64_t sub_20A51CDCC()
{
  return 0xD000000000000010;
}

uint64_t sub_20A51CDE8()
{
  uint64_t v0;

  return v0 + 22;
}

uint64_t sub_20A51CE10()
{
  return 0x5F64616F6C796170;
}

uint64_t sub_20A51CE34(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[2];
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  char v57;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB858);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + 16);
  v45 = *(_QWORD *)(v1 + 24);
  v46 = v8;
  v9 = *(_QWORD *)(v1 + 32);
  v43 = *(_QWORD *)(v1 + 40);
  v44 = v9;
  v10 = *(_QWORD *)(v1 + 48);
  v41 = *(_QWORD *)(v1 + 56);
  v42 = v10;
  v11 = *(_QWORD *)(v1 + 64);
  v38 = *(_QWORD *)(v1 + 72);
  v39 = v11;
  v12 = *(_QWORD *)(v1 + 80);
  v36 = *(_QWORD *)(v1 + 88);
  v37 = v12;
  v34 = *(_QWORD *)(v1 + 96);
  v35 = *(_QWORD *)(v1 + 104);
  v32 = *(_QWORD *)(v1 + 112);
  v33 = *(_QWORD *)(v1 + 120);
  v27 = *(_QWORD *)(v1 + 128);
  v28 = *(_QWORD *)(v1 + 136);
  v29 = *(_QWORD *)(v1 + 144);
  v30 = *(_QWORD *)(v1 + 152);
  v31 = *(_QWORD *)(v1 + 160);
  v56 = *(unsigned __int8 *)(v1 + 168);
  v26 = *(_QWORD *)(v1 + 176);
  v24[1] = *(_QWORD *)(v1 + 184);
  v25 = *(unsigned __int8 *)(v1 + 192);
  v40 = *(_QWORD *)(v1 + 200);
  v13 = *(unsigned __int8 *)(v1 + 208);
  v14 = a1[3];
  v15 = a1;
  v17 = v16;
  __swift_project_boxed_opaque_existential_1(v15, v14);
  sub_20A52E038();
  sub_20A5B92FC();
  LOBYTE(v48) = 0;
  v18 = v47;
  sub_20A5B9110();
  if (!v18)
  {
    v20 = v41;
    v19 = v42;
    v22 = v43;
    v21 = v44;
    LODWORD(v47) = v13;
    LOBYTE(v48) = 1;
    sub_20A5B90D4();
    v48 = v21;
    v49 = v22;
    v50 = v19;
    v51 = v20;
    v52 = v39;
    v53 = v38;
    v54 = v37;
    v55 = v36;
    v57 = 2;
    sub_20A52E07C();
    sub_20A5B9104();
    LOBYTE(v48) = 3;
    sub_20A5B90D4();
    LOBYTE(v48) = 4;
    sub_20A5B90D4();
    v48 = v27;
    v49 = v28;
    v50 = v29;
    v51 = v30;
    v52 = v31;
    v57 = 5;
    sub_20A49DB38();
    sub_20A5B9104();
    LOBYTE(v48) = 6;
    sub_20A5B90E0();
    v48 = v26;
    v57 = 7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_253EB46D0);
    sub_20A44D20C(&qword_2545FA368, &qword_253EB46D0, (uint64_t)&protocol conformance descriptor for EncryptedDataContainer<A>);
    sub_20A5B9104();
    LOBYTE(v48) = 8;
    sub_20A5B90F8();
    LOBYTE(v48) = 9;
    sub_20A5B90F8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v17);
}

_QWORD *sub_20A51D238@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unsigned __int128 v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  __int128 v78;
  __int128 v79;
  unsigned __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  char v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unsigned __int128 v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char v112;
  _BYTE v113[7];
  uint64_t v114;
  uint64_t v115;
  char v116;
  _BYTE v117[7];
  uint64_t v118;
  char v119;
  char v120;
  char v121;
  _BYTE v122[7];
  char v123;
  _DWORD v124[3];
  _QWORD *v125;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB848);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a1[3];
  v125 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_20A52E038();
  sub_20A5B92F0();
  if (v2)
    return (_QWORD *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v125);
  LOBYTE(v92) = 0;
  v11 = sub_20A5B9074();
  LOBYTE(v92) = 1;
  v13 = v12;
  swift_bridgeObjectRetain();
  v14 = sub_20A5B9038();
  v76 = v13;
  v69 = v14;
  v70 = v11;
  LOBYTE(v78) = 2;
  v16 = v15;
  sub_20A48A920();
  swift_bridgeObjectRetain();
  sub_20A5B9068();
  v75 = v16;
  v17 = v92;
  v18 = v95;
  v19 = v96;
  LOBYTE(v92) = 3;
  v74 = __PAIR128__(v93, v17);
  v77 = v94;
  v67 = v97;
  v68 = *((_QWORD *)&v96 + 1);
  v73 = v98;
  sub_20A465800(v17, v93);
  v20 = sub_20A5B9038();
  v72 = v18;
  v66 = v20;
  v21 = v19;
  LOBYTE(v92) = 4;
  v23 = v22;
  swift_bridgeObjectRetain();
  v24 = sub_20A5B9038();
  v71 = v23;
  v59 = v24;
  LOBYTE(v78) = 5;
  v26 = v25;
  sub_20A49D8AC();
  swift_bridgeObjectRetain();
  sub_20A5B9068();
  v27 = v92;
  LOBYTE(v92) = 6;
  v64 = v27;
  v65 = v26;
  v62 = v94;
  v63 = v93;
  v60 = v96;
  v61 = v95;
  sub_20A465850(v27, v93, v94, v95, v96);
  v57 = sub_20A5B9044();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB46D0);
  LOBYTE(v78) = 7;
  sub_20A44D20C(&qword_2545FA350, &qword_253EB46D0, (uint64_t)&protocol conformance descriptor for EncryptedDataContainer<A>);
  sub_20A5B9068();
  v28 = v92;
  LOBYTE(v92) = 8;
  v58 = v28;
  swift_retain();
  v56 = sub_20A5B905C();
  v29 = v58;
  v54 = v30 & 1;
  v123 = v30 & 1;
  v120 = 9;
  v55 = sub_20A5B905C();
  v32 = v31;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  v33 = v32 & 1;
  v121 = v32 & 1;
  *(_QWORD *)&v78 = v70;
  *((_QWORD *)&v78 + 1) = v76;
  *(_QWORD *)&v79 = v69;
  *((_QWORD *)&v79 + 1) = v75;
  v80 = v74;
  *(_QWORD *)&v81 = v77;
  *((_QWORD *)&v81 + 1) = v72;
  v53 = v21;
  *(_QWORD *)&v82 = v21;
  *((_QWORD *)&v82 + 1) = v68;
  *(_QWORD *)&v83 = v67;
  *((_QWORD *)&v83 + 1) = v73;
  *(_QWORD *)&v84 = v66;
  *((_QWORD *)&v84 + 1) = v71;
  v34 = v60;
  v35 = v64;
  *(_QWORD *)&v85 = v59;
  *((_QWORD *)&v85 + 1) = v65;
  v37 = v62;
  v36 = v63;
  *(_QWORD *)&v86 = v64;
  *((_QWORD *)&v86 + 1) = v63;
  v38 = v61;
  *(_QWORD *)&v87 = v62;
  *((_QWORD *)&v87 + 1) = v61;
  *(_QWORD *)&v88 = v60;
  BYTE8(v88) = v57;
  *(_QWORD *)&v89 = v29;
  *((_QWORD *)&v89 + 1) = v56;
  LOBYTE(v90) = v54;
  *((_QWORD *)&v90 + 1) = v55;
  v91 = v33;
  sub_20A4EEF10(&v78);
  swift_release();
  sub_20A46564C(v35, v36, v37, v38, v34);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v39 = v74;
  v40 = v53;
  v41 = v67;
  v42 = v68;
  sub_20A4655FC(v74, *((uint64_t *)&v74 + 1));
  v43 = v76;
  swift_bridgeObjectRelease();
  v44 = v75;
  swift_bridgeObjectRelease();
  v45 = v89;
  *(_OWORD *)(a2 + 160) = v88;
  *(_OWORD *)(a2 + 176) = v45;
  *(_OWORD *)(a2 + 192) = v90;
  *(_BYTE *)(a2 + 208) = v91;
  v46 = v85;
  *(_OWORD *)(a2 + 96) = v84;
  *(_OWORD *)(a2 + 112) = v46;
  v47 = v87;
  *(_OWORD *)(a2 + 128) = v86;
  *(_OWORD *)(a2 + 144) = v47;
  v48 = v81;
  *(_OWORD *)(a2 + 32) = v80;
  *(_OWORD *)(a2 + 48) = v48;
  v49 = v83;
  *(_OWORD *)(a2 + 64) = v82;
  *(_OWORD *)(a2 + 80) = v49;
  v50 = v79;
  *(_OWORD *)a2 = v78;
  *(_OWORD *)(a2 + 16) = v50;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v125);
  v92 = v70;
  v93 = v43;
  v94 = v69;
  v95 = v44;
  v96 = __PAIR128__(*((unint64_t *)&v74 + 1), v39);
  v97 = v77;
  v98 = v72;
  v99 = v40;
  v100 = v42;
  v101 = v41;
  v102 = v73;
  v103 = v66;
  v104 = v71;
  v105 = v59;
  v106 = v65;
  v107 = v64;
  v108 = v63;
  v109 = v62;
  v110 = v61;
  v111 = v60;
  v112 = v57;
  *(_DWORD *)&v113[3] = *(_DWORD *)((char *)v124 + 3);
  *(_DWORD *)v113 = v124[0];
  v114 = v58;
  v115 = v56;
  v116 = v123;
  *(_DWORD *)&v117[3] = *(_DWORD *)&v122[3];
  *(_DWORD *)v117 = *(_DWORD *)v122;
  v118 = v55;
  v119 = v121;
  return sub_20A4EF0EC(&v92);
}

uint64_t sub_20A51DBF0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB8B0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A52E18C();
  sub_20A5B92FC();
  v9[15] = 0;
  sub_20A5B9134();
  if (!v1)
  {
    v9[14] = 1;
    sub_20A5B90F8();
    v9[13] = 2;
    sub_20A5B90D4();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_20A51DD30()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_20A51DD64 + 4 * byte_20A5C4F4D[*v0]))(0x6F6C79615069646FLL, 0xEA00000000006461);
}

uint64_t sub_20A51DD64()
{
  return 0x7364656573;
}

uint64_t sub_20A51DD78()
{
  return 0x666E49726F727265;
}

uint64_t sub_20A51DD94()
{
  return 0x6E6F697469646461;
}

uint64_t sub_20A51DDB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A52BBC0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A51DDDC()
{
  sub_20A530180();
  return sub_20A5B9314();
}

uint64_t sub_20A51DE04()
{
  sub_20A530180();
  return sub_20A5B9320();
}

_QWORD *sub_20A51DE2C@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_20A51C7D0(a1, a2);
}

uint64_t sub_20A51DE40(_QWORD *a1)
{
  return sub_20A51C580(a1);
}

uint64_t sub_20A51DE54()
{
  unsigned __int8 *v0;

  return sub_20A51CD14(*v0);
}

uint64_t sub_20A51DE5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A52BDAC(a1, a2);
  *a3 = result;
  return result;
}

void sub_20A51DE80(_BYTE *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_20A51DE8C()
{
  sub_20A52E038();
  return sub_20A5B9314();
}

uint64_t sub_20A51DEB4()
{
  sub_20A52E038();
  return sub_20A5B9320();
}

_QWORD *sub_20A51DEDC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A51D238(a1, a2);
}

uint64_t sub_20A51DEF0(_QWORD *a1)
{
  return sub_20A51CE34(a1);
}

uint64_t sub_20A51DF04()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6F7272655F6E646FLL;
  if (*v0 != 1)
    v1 = 0x776F6C666B726F77;
  if (*v0)
    return v1;
  else
    return 0x6F7272655F766469;
}

uint64_t sub_20A51DF68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A52C1D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A51DF8C()
{
  sub_20A52E18C();
  return sub_20A5B9314();
}

uint64_t sub_20A51DFB4()
{
  sub_20A52E18C();
  return sub_20A5B9320();
}

double sub_20A51DFDC@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_20A52C354(a1, (uint64_t)v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_20A51E020(_QWORD *a1)
{
  return sub_20A51DBF0(a1);
}

uint64_t sub_20A51E03C()
{
  return 0x666F72705F617564;
}

uint64_t sub_20A51E05C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x666F72705F617564 && a2 == 0xEB00000000656C69)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_20A5B91AC();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_20A51E108()
{
  sub_20A53035C();
  return sub_20A5B9314();
}

uint64_t sub_20A51E130()
{
  sub_20A53035C();
  return sub_20A5B9320();
}

uint64_t sub_20A51E158@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_20A51E2CC(a1, &qword_253EB5260, (void (*)(void))sub_20A53035C, a2);
}

uint64_t sub_20A51E184(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_20A51E428(a1, a2, a3, &qword_2545FBAC0, (void (*)(void))sub_20A53035C);
}

uint64_t sub_20A51E1B0()
{
  return 0x656D697473;
}

uint64_t sub_20A51E1C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x656D697473 && a2 == 0xE500000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_20A5B91AC();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_20A51E250()
{
  sub_20A5303A0();
  return sub_20A5B9314();
}

uint64_t sub_20A51E278()
{
  sub_20A5303A0();
  return sub_20A5B9320();
}

uint64_t sub_20A51E2A0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_20A51E2CC(a1, &qword_253EB5240, (void (*)(void))sub_20A5303A0, a2);
}

uint64_t sub_20A51E2CC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X3>, void (*a3)(void)@<X4>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;

  v18 = a4;
  v19 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v7 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19, v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_20A5B92F0();
  if (v4)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v11 = v18;
  v12 = v19;
  v13 = sub_20A5B9074();
  v15 = v14;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v12);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *v11 = v13;
  v11[1] = v15;
  return result;
}

uint64_t sub_20A51E3FC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_20A51E428(a1, a2, a3, &qword_2545FBAB8, (void (*)(void))sub_20A5303A0);
}

uint64_t sub_20A51E428(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(void))
{
  uint64_t *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;
  void (*v14)(void);

  v14 = a5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(a4);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v14();
  sub_20A5B92FC();
  sub_20A5B9110();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t static TSID.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_20A5B91AC();
}

uint64_t sub_20A51E550()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x5F6E6F6973736573;
  if (*v0 != 1)
    v1 = 0x65636E6F6E5F7374;
  if (*v0)
    return v1;
  else
    return 1684632436;
}

uint64_t sub_20A51E5A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A52C4E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A51E5CC()
{
  sub_20A525410();
  return sub_20A5B9314();
}

uint64_t sub_20A51E5F4()
{
  sub_20A525410();
  return sub_20A5B9320();
}

uint64_t TSID.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[6];
  char v13;
  char v14;
  char v15;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_253EB4910);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v1[2];
  v12[3] = v1[3];
  v12[4] = v8;
  v9 = v1[4];
  v12[1] = v1[5];
  v12[2] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A525410();
  sub_20A5B92FC();
  v15 = 0;
  v10 = v12[5];
  sub_20A5B9110();
  if (!v10)
  {
    v14 = 1;
    sub_20A5B9110();
    v13 = 2;
    sub_20A5B90D4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t TSID.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB6A0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A525410();
  sub_20A5B92F0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v28 = 0;
  v10 = sub_20A5B9074();
  v12 = v11;
  v25 = v10;
  v27 = 1;
  swift_bridgeObjectRetain();
  v13 = sub_20A5B9074();
  v15 = v14;
  v23 = v13;
  v26 = 2;
  swift_bridgeObjectRetain();
  v24 = v15;
  v16 = sub_20A5B9038();
  v18 = v17;
  v19 = v16;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  swift_bridgeObjectRetain();
  v20 = v24;
  *a2 = v25;
  a2[1] = v12;
  a2[2] = v23;
  a2[3] = v20;
  a2[4] = v19;
  a2[5] = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_20A51E9B0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD v12[2];
  char v13;
  char v14;

  v12[1] = a4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FBA98);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A53024C();
  sub_20A5B92FC();
  v14 = 0;
  sub_20A5B9110();
  if (!v4)
  {
    v13 = 1;
    sub_20A5B9134();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_20A51EAD8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return TSID.init(from:)(a1, a2);
}

uint64_t sub_20A51EAEC(_QWORD *a1)
{
  return TSID.encode(to:)(a1);
}

uint64_t sub_20A51EB00(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_20A5B91AC();
}

uint64_t sub_20A51EB30()
{
  _BYTE *v0;

  if (*v0)
    return 0x695F747365676964;
  else
    return 0x64616F6C796170;
}

uint64_t sub_20A51EB74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A52C634(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A51EB98()
{
  sub_20A53024C();
  return sub_20A5B9314();
}

uint64_t sub_20A51EBC0()
{
  sub_20A53024C();
  return sub_20A5B9320();
}

uint64_t sub_20A51EBE8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = sub_20A52C73C(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_20A51EC14(_QWORD *a1)
{
  uint64_t *v1;

  return sub_20A51E9B0(a1, *v1, v1[1], v1[2]);
}

CoreODIEssentials::DUATaskType_optional __swiftcall DUATaskType.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  if (rawValue == 1)
    v2 = 1;
  else
    v2 = 2;
  if (!rawValue)
    v2 = 0;
  *v1 = v2;
  return (CoreODIEssentials::DUATaskType_optional)rawValue;
}

uint64_t DUATaskType.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t sub_20A51EC54(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  uint64_t v9;
  char v10;
  _DWORD v12[3];
  int v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_253EB48E0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(unsigned __int8 *)(v1 + 24);
  v12[2] = *(unsigned __int8 *)(v1 + 25);
  v13 = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A530290();
  sub_20A5B92FC();
  v19 = 0;
  v9 = v14;
  sub_20A5B9110();
  if (!v9)
  {
    v10 = v13;
    v18 = 1;
    sub_20A5B9128();
    v17 = v10;
    v16 = 2;
    sub_20A530318();
    sub_20A5B9140();
    v15 = 3;
    sub_20A5B90E0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_20A51EDF4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  uint64_t v17;
  char v18;
  char v19;
  unsigned __int8 v20;
  char v21;
  char v22;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FBAA8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A530290();
  sub_20A5B92F0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v22 = 0;
  v10 = sub_20A5B9074();
  v12 = v11;
  v21 = 1;
  swift_bridgeObjectRetain();
  sub_20A5B908C();
  v14 = v13;
  v19 = 2;
  sub_20A5302D4();
  sub_20A5B90A4();
  HIDWORD(v17) = v20;
  v18 = 3;
  v16 = sub_20A5B9044();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v12;
  *(_QWORD *)(a2 + 16) = v14;
  *(_BYTE *)(a2 + 24) = BYTE4(v17);
  *(_BYTE *)(a2 + 25) = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_20A51EFFC()
{
  sub_20A52E724();
  return sub_20A5B8A80();
}

uint64_t sub_20A51F058()
{
  sub_20A52E724();
  return sub_20A5B8A44();
}

uint64_t sub_20A51F0A4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_20A51F0D4 + 4 * byte_20A5C4F51[*v0]))(0x617461645F617564, 0xE800000000000000);
}

uint64_t sub_20A51F0D4()
{
  return 0x6E6F697461727564;
}

uint64_t sub_20A51F0E8()
{
  return 0x7079745F6B736174;
}

unint64_t sub_20A51F104()
{
  return 0xD000000000000010;
}

uint64_t sub_20A51F120@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A52C8CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A51F144()
{
  sub_20A530290();
  return sub_20A5B9314();
}

uint64_t sub_20A51F16C()
{
  sub_20A530290();
  return sub_20A5B9320();
}

uint64_t sub_20A51F194@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A51EDF4(a1, a2);
}

uint64_t sub_20A51F1A8(_QWORD *a1)
{
  return sub_20A51EC54(a1);
}

uint64_t sub_20A51F1BC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_20A51F1FC + 4 * byte_20A5C4F55[a1]))(0x6E6F635F64697374, 0xEE0072656E696174);
}

uint64_t sub_20A51F1FC()
{
  return 0x7364656573;
}

uint64_t sub_20A51F210()
{
  return 0x776F6C666B726F77;
}

uint64_t sub_20A51F230()
{
  return 0x617461645F617564;
}

uint64_t sub_20A51F250()
{
  return 0x6E6F6973726576;
}

unint64_t sub_20A51F268()
{
  return 0xD000000000000010;
}

unint64_t sub_20A51F30C()
{
  return 0xD000000000000012;
}

unint64_t sub_20A51F324()
{
  return 0xD000000000000018;
}

void sub_20A51F33C()
{
  JUMPOUT(0x20A51F350);
}

uint64_t sub_20A51F35C(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  char *v16;
  uint64_t v17;
  _QWORD v19[2];
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  char v59;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB868);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v49 = *v1;
  v8 = *((_QWORD *)v1 + 2);
  v7 = *((_QWORD *)v1 + 3);
  v47 = *((_QWORD *)v1 + 4);
  v48 = v7;
  v9 = *((_QWORD *)v1 + 5);
  v45 = *((_QWORD *)v1 + 6);
  v46 = v9;
  v10 = *((_QWORD *)v1 + 7);
  v43 = *((_QWORD *)v1 + 8);
  v44 = v10;
  v11 = *((_QWORD *)v1 + 9);
  v41 = *((_QWORD *)v1 + 10);
  v42 = v11;
  v12 = *((_QWORD *)v1 + 11);
  v39 = *((_QWORD *)v1 + 12);
  v40 = v12;
  v37 = *((_QWORD *)v1 + 13);
  v38 = *((_QWORD *)v1 + 14);
  v36 = *((_QWORD *)v1 + 15);
  v58 = *((unsigned __int8 *)v1 + 128);
  v35 = *((_QWORD *)v1 + 17);
  v34 = *((_QWORD *)v1 + 18);
  v33 = *((unsigned __int8 *)v1 + 152);
  v28 = *((_QWORD *)v1 + 20);
  v32 = *((_QWORD *)v1 + 21);
  v31 = *((_QWORD *)v1 + 22);
  v30 = *((_QWORD *)v1 + 23);
  v29 = *((_QWORD *)v1 + 24);
  v26 = *((_QWORD *)v1 + 25);
  v27 = *((unsigned __int8 *)v1 + 208);
  v24 = *((_QWORD *)v1 + 27);
  v25 = *((_QWORD *)v1 + 28);
  v23 = *((_QWORD *)v1 + 29);
  v22 = *((_QWORD *)v1 + 30);
  v20 = *((unsigned __int8 *)v1 + 264);
  v21 = *((unsigned __int8 *)v1 + 248);
  v19[1] = *((_QWORD *)v1 + 32);
  v13 = *((_QWORD *)v1 + 35);
  v14 = a1[3];
  v15 = a1;
  v16 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v15, v14);
  sub_20A52E0C0();
  sub_20A5B92FC();
  v51 = v49;
  v52 = v8;
  v59 = 0;
  sub_20A52E104();
  v17 = v50;
  sub_20A5B9140();
  if (!v17)
  {
    v50 = v13;
    *(_QWORD *)&v51 = v48;
    *((_QWORD *)&v51 + 1) = v47;
    v52 = v46;
    v53 = v45;
    v54 = v44;
    v55 = v43;
    v56 = v42;
    v57 = v41;
    v59 = 1;
    sub_20A52E07C();
    sub_20A5B9104();
    LOBYTE(v51) = 2;
    sub_20A5B90D4();
    LOBYTE(v51) = 3;
    sub_20A5B9110();
    LOBYTE(v51) = 4;
    sub_20A5B9134();
    LOBYTE(v51) = 5;
    sub_20A5B90E0();
    *(_QWORD *)&v51 = v35;
    v59 = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_253EB46D8);
    sub_20A44D20C(&qword_2545FB880, &qword_253EB46D8, (uint64_t)&protocol conformance descriptor for EncryptedDataContainer<A>);
    sub_20A5B9104();
    LOBYTE(v51) = 7;
    sub_20A5B90F8();
    *(_QWORD *)&v51 = v28;
    *((_QWORD *)&v51 + 1) = v32;
    v52 = v31;
    v53 = v30;
    v54 = v29;
    v59 = 8;
    sub_20A49DB38();
    sub_20A5B9104();
    LOBYTE(v51) = 9;
    sub_20A5B90EC();
    LOBYTE(v51) = 10;
    sub_20A5B90D4();
    *(_QWORD *)&v51 = v23;
    v59 = 11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB888);
    sub_20A5263F0(&qword_2545FB890, &qword_2545FB888, (uint64_t (*)(void))sub_20A52E148, MEMORY[0x24BEE12A0]);
    sub_20A5B9140();
    LOBYTE(v51) = 12;
    sub_20A5B90EC();
    LOBYTE(v51) = 13;
    sub_20A5B90EC();
    LOBYTE(v51) = 14;
    sub_20A5B90D4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v16, v3);
}

uint64_t sub_20A51F96C()
{
  unsigned __int8 *v0;

  return sub_20A51F1BC(*v0);
}

uint64_t sub_20A51F974@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A52CA8C(a1, a2);
  *a3 = result;
  return result;
}

void sub_20A51F998(_BYTE *a1@<X8>)
{
  *a1 = 15;
}

uint64_t sub_20A51F9A4()
{
  sub_20A52E0C0();
  return sub_20A5B9314();
}

uint64_t sub_20A51F9CC()
{
  sub_20A52E0C0();
  return sub_20A5B9320();
}

uint64_t sub_20A51F9F4(_QWORD *a1)
{
  return sub_20A51F35C(a1);
}

uint64_t AugmentedProfile.assessmentConfig.getter()
{
  return swift_retain();
}

uint64_t AugmentedProfile.profile.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AugmentedProfile.profileInfo.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AugmentedProfile.profileID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

void sub_20A51FA94(char *a1)
{
  sub_20A4EA43C(*a1);
}

void sub_20A51FAA0()
{
  char *v0;

  sub_20A51783C(*v0);
}

void sub_20A51FAA8()
{
  __asm { BR              X10 }
}

uint64_t sub_20A51FAE8()
{
  sub_20A5B8978();
  return swift_bridgeObjectRelease();
}

void sub_20A51FB58(uint64_t a1)
{
  char *v1;

  sub_20A5183F4(a1, *v1);
}

uint64_t sub_20A51FB60@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_20A52D0C0();
  *a1 = result;
  return result;
}

uint64_t sub_20A51FB94()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_20A51FBC8 + 4 * byte_20A5C4F69[*v0]))();
}

void sub_20A51FBC8(_QWORD *a1@<X8>)
{
  *a1 = 0x656C69666F7270;
  a1[1] = 0xE700000000000000;
}

void sub_20A51FBE4(_QWORD *a1@<X8>)
{
  *a1 = 0x49656C69666F7270;
  a1[1] = 0xEB000000006F666ELL;
}

void sub_20A51FC14(_QWORD *a1@<X8>)
{
  *a1 = 0x6E6F6973726576;
  a1[1] = 0xE700000000000000;
}

uint64_t sub_20A51FC30()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_20A51FC64 + 4 * byte_20A5C4F6E[*v0]))(0xD000000000000010, 0x800000020A5DB2A0);
}

uint64_t sub_20A51FC64()
{
  return 0x656C69666F7270;
}

uint64_t sub_20A51FC7C()
{
  return 0x49656C69666F7270;
}

uint64_t sub_20A51FCA8()
{
  return 0x6E6F6973726576;
}

uint64_t sub_20A51FCC0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_20A52D0C0();
  *a1 = result;
  return result;
}

uint64_t sub_20A51FCEC()
{
  sub_20A525454();
  return sub_20A5B9314();
}

uint64_t sub_20A51FD14()
{
  sub_20A525454();
  return sub_20A5B9320();
}

uint64_t AugmentedProfile.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;
  uint64_t v38;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5258);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A525454();
  sub_20A5B92F0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB4EA0);
  v37 = 0;
  sub_20A44D20C(&qword_253EB4E98, (uint64_t *)&unk_253EB4EA0, (uint64_t)&protocol conformance descriptor for JWSSignedJSON<A>);
  sub_20A5B9068();
  v10 = v38;
  v36 = 1;
  swift_retain();
  v11 = sub_20A5B9074();
  v32 = v12;
  v29 = v11;
  v31 = v10;
  v35 = 2;
  swift_bridgeObjectRetain();
  v28 = sub_20A5B9038();
  v34 = 3;
  v14 = v13;
  swift_bridgeObjectRetain();
  v15 = sub_20A5B9074();
  v30 = v14;
  v26 = v15;
  v27 = v16;
  v33 = 4;
  swift_bridgeObjectRetain();
  v17 = sub_20A5B9098();
  v18 = v31;
  v19 = v17;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  v20 = v29;
  v21 = v30;
  *a2 = v18;
  a2[1] = v20;
  v23 = v27;
  v22 = v28;
  a2[2] = v32;
  a2[3] = v22;
  v24 = v26;
  a2[4] = v21;
  a2[5] = v24;
  a2[6] = v23;
  a2[7] = v19;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t AugmentedProfile.armandDataFields.getter()
{
  _QWORD *v0;

  if (*v0)
    return swift_bridgeObjectRetain();
  else
    return 0;
}

uint64_t AugmentedProfile.bindingsDefFields.getter()
{
  _QWORD *v0;

  if (*v0)
    return swift_bridgeObjectRetain();
  else
    return 0;
}

uint64_t AugmentedProfile.slaMilli.getter()
{
  uint64_t v0;

  if (*(_QWORD *)v0)
    return *(_QWORD *)(*(_QWORD *)v0 + 272);
  else
    return 0;
}

uint64_t sub_20A52014C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return AugmentedProfile.init(from:)(a1, a2);
}

CoreODIEssentials::DsidType_optional __swiftcall DsidType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (CoreODIEssentials::DsidType_optional)sub_20A521B68(v1);
}

void sub_20A52016C(char *a1)
{
  sub_20A4E97E8(*a1);
}

void sub_20A520178()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_20A5B929C();
  __asm { BR              X9 }
}

uint64_t sub_20A5201C0()
{
  sub_20A5B8978();
  swift_bridgeObjectRelease();
  return sub_20A5B92CC();
}

void sub_20A520218()
{
  __asm { BR              X10 }
}

uint64_t sub_20A520250()
{
  sub_20A5B8978();
  return swift_bridgeObjectRelease();
}

void sub_20A520294()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_20A5B929C();
  __asm { BR              X9 }
}

uint64_t sub_20A5202D8()
{
  sub_20A5B8978();
  swift_bridgeObjectRelease();
  return sub_20A5B92CC();
}

CoreODIEssentials::DsidType_optional sub_20A520330(Swift::String *a1)
{
  return DsidType.init(rawValue:)(*a1);
}

uint64_t sub_20A52033C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_20A520368 + 4 * byte_20A5C4F7F[*v0]))();
}

void sub_20A520368(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x73656E755469;
  a1[1] = v1;
}

void sub_20A52037C(_QWORD *a1@<X8>)
{
  *a1 = 1684628325;
  a1[1] = 0xE400000000000000;
}

void sub_20A520390(_QWORD *a1@<X8>)
{
  *a1 = 1869903201;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_20A5203A4@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  return DsidType.init(from:)(a1, a2);
}

uint64_t sub_20A5203B8()
{
  sub_20A52E6E0();
  return sub_20A5B8A38();
}

CoreODIEssentials::ArmandDataSource_optional __swiftcall ArmandDataSource.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  CoreODIEssentials::ArmandDataSource_optional result;
  char v5;

  v2 = v1;
  v3 = sub_20A5B9008();
  result.value = swift_bridgeObjectRelease();
  v5 = 14;
  if (v3 < 0xE)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t ArmandDataSource.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_20A52048C + 4 * byte_20A5C4F83[*v0]))(0x73746E756F636341, 0xE800000000000000);
}

uint64_t sub_20A52048C()
{
  return 0x6547656C69626F4DLL;
}

uint64_t sub_20A5204B0()
{
  return 0x6974726543616162;
}

uint64_t sub_20A5204D4()
{
  return 0x6C6569467261654ELL;
}

uint64_t sub_20A5204F0()
{
  return 5456969;
}

uint64_t sub_20A520500()
{
  return 0x656C655465726F43;
}

uint64_t sub_20A520524()
{
  return 0x61636F4C65726F43;
}

unint64_t sub_20A520544()
{
  return 0xD000000000000012;
}

uint64_t sub_20A520560()
{
  return 0x656E6F5A656D6954;
}

uint64_t sub_20A520574()
{
  return 0x6C4372656C6C6143;
}

uint64_t sub_20A520594()
{
  return 0x614E646573726150;
}

uint64_t sub_20A5205B0()
{
  return 0x7265646F636F6547;
}

uint64_t sub_20A5205C4()
{
  return 0x657474616D726F46;
}

uint64_t sub_20A5205E8()
{
  return 0x6553656369766544;
}

uint64_t sub_20A52060C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_20A4EA96C(*a1, *a2);
}

uint64_t sub_20A520618(uint64_t a1, uint64_t a2)
{
  return sub_20A521644(a1, a2, (void (*)(uint64_t))ArmandDataSource.rawValue.getter);
}

uint64_t sub_20A520624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A5216B8(a1, a2, a3, (void (*)(void))ArmandDataSource.rawValue.getter);
}

uint64_t sub_20A520630(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A521714(a1, a2, a3, (void (*)(uint64_t))ArmandDataSource.rawValue.getter);
}

CoreODIEssentials::ArmandDataSource_optional sub_20A52063C(Swift::String *a1)
{
  return ArmandDataSource.init(rawValue:)(*a1);
}

uint64_t sub_20A520648@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = ArmandDataSource.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_20A52066C()
{
  sub_20A52E69C();
  return sub_20A5B8A74();
}

uint64_t sub_20A5206C8()
{
  sub_20A52E69C();
  return sub_20A5B8A38();
}

uint64_t AssessmentConfigFieldName.description.getter()
{
  uint64_t v0;
  _QWORD v2[2];

  if ((*(_BYTE *)(v0 + 16) & 1) != 0)
  {
    sub_20A5B8E94();
    swift_bridgeObjectRelease();
    strcpy((char *)v2, "BindingsField(");
    HIBYTE(v2[1]) = -18;
    sub_20A5B899C();
  }
  else
  {
    sub_20A5B8E94();
    swift_bridgeObjectRelease();
    v2[0] = 0xD000000000000010;
    v2[1] = 0x800000020A5E4380;
    ArmandDeviceDataFieldName.rawValue.getter();
    sub_20A5B899C();
    swift_bridgeObjectRelease();
  }
  sub_20A5B899C();
  return v2[0];
}

uint64_t ArmandDeviceDataFieldName.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_20A520844 + 4 * byte_20A5C4F91[*v0]))(0x726556646C697542, 0xEC0000006E6F6973);
}

uint64_t sub_20A520844()
{
  return 1684628851;
}

uint64_t sub_20A520854()
{
  return 0x754E6C6169726553;
}

uint64_t sub_20A520874()
{
  return 0x6544657571696E55;
}

uint64_t sub_20A520898()
{
  return 0x6843657571696E55;
}

uint64_t sub_20A5208B8()
{
  return 0x6F6973726556736FLL;
}

uint64_t sub_20A5208D4()
{
  return 0x7265626D756ELL;
}

unint64_t sub_20A5208E8()
{
  return 0xD000000000000018;
}

uint64_t sub_20A520930()
{
  return 0x6E6F697461636F6CLL;
}

unint64_t sub_20A520948()
{
  return 0xD000000000000017;
}

uint64_t sub_20A520968()
{
  return 0x6E69726168537369;
}

uint64_t sub_20A52098C()
{
  return 0x696669746E656469;
}

uint64_t sub_20A5209A8()
{
  return 0x736572705F6D6973;
}

uint64_t sub_20A5209C8()
{
  return 0x6F737265705F6161;
}

uint64_t sub_20A5209E8()
{
  return 0x7A696C616D726F6ELL;
}

uint64_t sub_20A520A0C()
{
  return 0x6469656C707061;
}

uint64_t AssessmentConfigFieldName.hash(into:)()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 16) & 1) != 0)
  {
    sub_20A5B92A8();
    return sub_20A5B8978();
  }
  else
  {
    sub_20A5B92A8();
    ArmandDeviceDataFieldName.rawValue.getter();
    sub_20A5B8978();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_20A520AC4()
{
  return 12383;
}

uint64_t sub_20A520AD4()
{
  sub_20A525F64();
  return sub_20A5B9314();
}

uint64_t sub_20A520AFC()
{
  sub_20A525F64();
  return sub_20A5B9320();
}

uint64_t sub_20A520B24()
{
  _BYTE *v0;

  if (*v0)
    return 0x73676E69646E6962;
  else
    return 0x6144656369766564;
}

uint64_t sub_20A520B78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A52D104(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A520B9C()
{
  sub_20A525F20();
  return sub_20A5B9314();
}

uint64_t sub_20A520BC4()
{
  sub_20A525F20();
  return sub_20A5B9320();
}

uint64_t sub_20A520BEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_20A5B91AC();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_20A520C68()
{
  sub_20A525FA8();
  return sub_20A5B9314();
}

uint64_t sub_20A520C90()
{
  sub_20A525FA8();
  return sub_20A5B9320();
}

uint64_t AssessmentConfigFieldName.hashValue.getter()
{
  uint64_t v0;
  char v1;

  v1 = *(_BYTE *)(v0 + 16);
  sub_20A5B929C();
  sub_20A5B92A8();
  if ((v1 & 1) != 0)
  {
    sub_20A5B8978();
  }
  else
  {
    ArmandDeviceDataFieldName.rawValue.getter();
    sub_20A5B8978();
    swift_bridgeObjectRelease();
  }
  return sub_20A5B92CC();
}

uint64_t AssessmentConfigFieldName.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  int v44;
  unsigned __int8 v45;
  char v46;
  char v47;

  v38 = a2;
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB6A8);
  v39 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41, v3);
  v40 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB6B0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB6B8);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1[3];
  v42 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_20A525F20();
  v16 = v43;
  sub_20A5B92F0();
  if (!v16)
  {
    v36 = v5;
    v37 = v6;
    v17 = v40;
    v18 = v41;
    v43 = v11;
    v19 = v14;
    v20 = sub_20A5B90B0();
    if (*(_QWORD *)(v20 + 16) == 1)
    {
      v21 = *(unsigned __int8 *)(v20 + 32);
      if ((v21 & 1) != 0)
      {
        v47 = 1;
        sub_20A525F64();
        sub_20A5B9020();
        v44 = v21;
        v27 = v18;
        v28 = sub_20A5B9074();
        v29 = v43;
        v31 = v28;
        v33 = v32;
        (*(void (**)(char *, uint64_t))(v39 + 8))(v17, v27);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v29 + 8))(v19, v10);
        v34 = v33;
      }
      else
      {
        v44 = *(unsigned __int8 *)(v20 + 32);
        v46 = 0;
        sub_20A525FA8();
        v26 = v9;
        sub_20A5B9020();
        sub_20A525FEC();
        v30 = v36;
        sub_20A5B90A4();
        (*(void (**)(char *, uint64_t))(v37 + 8))(v26, v30);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v43 + 8))(v19, v10);
        v34 = 0;
        v31 = v45;
      }
      v35 = v38;
      *v38 = v31;
      v35[1] = v34;
      *((_BYTE *)v35 + 16) = v44;
    }
    else
    {
      v22 = sub_20A5B8ED0();
      swift_allocError();
      v24 = v23;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB6C8);
      *v24 = &type metadata for AssessmentConfigFieldName;
      sub_20A5B902C();
      sub_20A5B8EC4();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v24, *MEMORY[0x24BEE26D0], v22);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v14, v10);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
}

uint64_t sub_20A521170@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return AssessmentConfigFieldName.init(from:)(a1, a2);
}

uint64_t sub_20A521184()
{
  uint64_t v0;
  char v1;

  v1 = *(_BYTE *)(v0 + 16);
  sub_20A5B929C();
  sub_20A5B92A8();
  if ((v1 & 1) != 0)
  {
    sub_20A5B8978();
  }
  else
  {
    ArmandDeviceDataFieldName.rawValue.getter();
    sub_20A5B8978();
    swift_bridgeObjectRelease();
  }
  return sub_20A5B92CC();
}

uint64_t sub_20A521224()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 16) & 1) != 0)
  {
    sub_20A5B92A8();
    return sub_20A5B8978();
  }
  else
  {
    sub_20A5B92A8();
    ArmandDeviceDataFieldName.rawValue.getter();
    sub_20A5B8978();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_20A5212C0()
{
  uint64_t v0;
  char v1;

  v1 = *(_BYTE *)(v0 + 16);
  sub_20A5B929C();
  sub_20A5B92A8();
  if ((v1 & 1) != 0)
  {
    sub_20A5B8978();
  }
  else
  {
    ArmandDeviceDataFieldName.rawValue.getter();
    sub_20A5B8978();
    swift_bridgeObjectRelease();
  }
  return sub_20A5B92CC();
}

CoreODIEssentials::ArmandDeviceDataFieldName_optional __swiftcall ArmandDeviceDataFieldName.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  CoreODIEssentials::ArmandDeviceDataFieldName_optional result;
  char v5;

  v2 = v1;
  v3 = sub_20A5B91F4();
  result.value = swift_bridgeObjectRelease();
  v5 = 18;
  if (v3 < 0x12)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t sub_20A5213C4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_20A4E9D38(*a1, *a2);
}

uint64_t sub_20A5213D0(uint64_t a1, uint64_t a2)
{
  return sub_20A521644(a1, a2, (void (*)(uint64_t))ArmandDeviceDataFieldName.rawValue.getter);
}

uint64_t sub_20A5213DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A5216B8(a1, a2, a3, (void (*)(void))ArmandDeviceDataFieldName.rawValue.getter);
}

uint64_t sub_20A5213E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A521714(a1, a2, a3, (void (*)(uint64_t))ArmandDeviceDataFieldName.rawValue.getter);
}

CoreODIEssentials::ArmandDeviceDataFieldName_optional sub_20A5213F4(Swift::String *a1)
{
  return ArmandDeviceDataFieldName.init(rawValue:)(*a1);
}

uint64_t sub_20A521400@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = ArmandDeviceDataFieldName.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_20A521424()
{
  sub_20A52E658();
  return sub_20A5B8A74();
}

uint64_t sub_20A521480()
{
  sub_20A52E658();
  return sub_20A5B8A38();
}

CoreODIEssentials::ODIComputableBindingsName_optional __swiftcall ODIComputableBindingsName.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  CoreODIEssentials::ODIComputableBindingsName_optional result;
  char v5;

  v2 = v1;
  v3 = sub_20A5B9008();
  result.value = swift_bridgeObjectRelease();
  v5 = 12;
  if (v3 < 0xC)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t ODIComputableBindingsName.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_20A521558 + 4 * byte_20A5C4FA3[*v0]))(0xD000000000000010, 0x800000020A5DA5D0);
}

uint64_t sub_20A521558()
{
  return 0x6947646573726170;
}

uint64_t sub_20A52162C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_20A4E9D2C(*a1, *a2);
}

uint64_t sub_20A521638(uint64_t a1, uint64_t a2)
{
  return sub_20A521644(a1, a2, (void (*)(uint64_t))ODIComputableBindingsName.rawValue.getter);
}

uint64_t sub_20A521644(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  v4 = sub_20A5B929C();
  a3(v4);
  sub_20A5B8978();
  swift_bridgeObjectRelease();
  return sub_20A5B92CC();
}

uint64_t sub_20A5216AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A5216B8(a1, a2, a3, (void (*)(void))ODIComputableBindingsName.rawValue.getter);
}

uint64_t sub_20A5216B8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  a4();
  sub_20A5B8978();
  return swift_bridgeObjectRelease();
}

uint64_t sub_20A521708(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A521714(a1, a2, a3, (void (*)(uint64_t))ODIComputableBindingsName.rawValue.getter);
}

uint64_t sub_20A521714(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v5;

  v5 = sub_20A5B929C();
  a4(v5);
  sub_20A5B8978();
  swift_bridgeObjectRelease();
  return sub_20A5B92CC();
}

CoreODIEssentials::ODIComputableBindingsName_optional sub_20A521778(Swift::String *a1)
{
  return ODIComputableBindingsName.init(rawValue:)(*a1);
}

uint64_t sub_20A521784@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = ODIComputableBindingsName.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_20A5217A8()
{
  sub_20A52E614();
  return sub_20A5B8A74();
}

CoreODIEssentials::ODIFormattedPhoneNumberBindings_optional __swiftcall ODIFormattedPhoneNumberBindings.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  CoreODIEssentials::ODIFormattedPhoneNumberBindings_optional result;
  char v5;

  v2 = v1;
  v3 = sub_20A5B9008();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

unint64_t ODIFormattedPhoneNumberBindings.rawValue.getter()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000018;
  if (*v0 != 1)
    v1 = 0xD000000000000017;
  if (*v0)
    return v1;
  else
    return 0xD000000000000014;
}

uint64_t sub_20A5218BC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_20A4E9A8C(*a1, *a2);
}

uint64_t sub_20A5218C8()
{
  return sub_20A517914();
}

uint64_t sub_20A5218D0()
{
  return sub_20A517B84();
}

uint64_t sub_20A5218D8()
{
  return sub_20A517F64();
}

CoreODIEssentials::ODIFormattedPhoneNumberBindings_optional sub_20A5218E0(Swift::String *a1)
{
  return ODIFormattedPhoneNumberBindings.init(rawValue:)(*a1);
}

unint64_t sub_20A5218EC@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result;
  unint64_t v3;

  result = ODIFormattedPhoneNumberBindings.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_20A521910()
{
  sub_20A52E5D0();
  return sub_20A5B8A74();
}

CoreODIEssentials::ODIGeocoderBindingsName_optional __swiftcall ODIGeocoderBindingsName.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  CoreODIEssentials::ODIGeocoderBindingsName_optional result;
  char v5;

  v2 = v1;
  v3 = sub_20A5B9008();
  result.value = swift_bridgeObjectRelease();
  v5 = 8;
  if (v3 < 8)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t ODIGeocoderBindingsName.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_20A521A00 + 4 * byte_20A5C4FAF[*v0]))(0x4C73736572646461, 0xEF65647574697461);
}

unint64_t sub_20A521A00()
{
  return 0xD000000000000010;
}

void sub_20A521AA8(char *a1)
{
  sub_20A4E9ED4(*a1);
}

void sub_20A521AB4()
{
  char *v0;

  sub_20A5181C8(0, *v0);
}

void sub_20A521AC0(uint64_t a1)
{
  char *v1;

  sub_20A517D78(a1, *v1);
}

void sub_20A521AC8(uint64_t a1)
{
  char *v1;

  sub_20A5181C8(a1, *v1);
}

CoreODIEssentials::ODIGeocoderBindingsName_optional sub_20A521AD0(Swift::String *a1)
{
  return ODIGeocoderBindingsName.init(rawValue:)(*a1);
}

uint64_t sub_20A521ADC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = ODIGeocoderBindingsName.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_20A521B00()
{
  sub_20A52E58C();
  return sub_20A5B8A74();
}

CoreODIEssentials::ODIDeviceSettingsBindingsName_optional __swiftcall ODIDeviceSettingsBindingsName.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (CoreODIEssentials::ODIDeviceSettingsBindingsName_optional)sub_20A521B68(v1);
}

uint64_t sub_20A521B68@<X0>(char *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_20A5B9008();
  result = swift_bridgeObjectRelease();
  v4 = 4;
  if (v2 < 4)
    v4 = v2;
  *a1 = v4;
  return result;
}

uint64_t ODIDeviceSettingsBindingsName.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_20A521BF8 + 4 * byte_20A5C4FB7[*v0]))(0x6563697665447369, 0xEE0064656B636F4CLL);
}

unint64_t sub_20A521BF8()
{
  return 0xD000000000000014;
}

unint64_t sub_20A521C18()
{
  return 0xD000000000000011;
}

uint64_t sub_20A521C34()
{
  return 0x614C656E6F687069;
}

void sub_20A521C58(char *a1)
{
  sub_20A4E9B88(*a1);
}

void sub_20A521C64()
{
  char *v0;

  sub_20A5179BC(*v0);
}

void sub_20A521C6C(uint64_t a1)
{
  char *v1;

  sub_20A517C04(a1, *v1);
}

void sub_20A521C74(uint64_t a1)
{
  char *v1;

  sub_20A518008(a1, *v1);
}

CoreODIEssentials::ODIDeviceSettingsBindingsName_optional sub_20A521C7C(Swift::String *a1)
{
  return ODIDeviceSettingsBindingsName.init(rawValue:)(*a1);
}

uint64_t sub_20A521C88()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_20A521CC4 + 4 * byte_20A5C4FBB[*v0]))();
}

void sub_20A521CC4(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000014;
  a1[1] = 0x800000020A5DA730;
}

void sub_20A521CE8(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000011;
  a1[1] = 0x800000020A5DA750;
}

void sub_20A521D08(char *a1@<X8>)
{
  strcpy(a1, "iphoneLanguage");
  a1[15] = -18;
}

uint64_t sub_20A521D30()
{
  sub_20A52E548();
  return sub_20A5B8A74();
}

CoreODIEssentials::ODILocationBindingsName_optional __swiftcall ODILocationBindingsName.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  CoreODIEssentials::ODILocationBindingsName_optional result;
  char v5;

  v2 = v1;
  v3 = sub_20A5B9008();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t ODILocationBindingsName.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_20A521E14 + 4 * byte_20A5C4FBF[*v0]))(0x656475746974616CLL, 0xE800000000000000);
}

uint64_t sub_20A521E14()
{
  return 0x64757469676E6F6CLL;
}

unint64_t sub_20A521E30()
{
  return 0xD000000000000012;
}

unint64_t sub_20A521E50()
{
  return 0xD000000000000010;
}

uint64_t sub_20A521E6C(uint64_t a1)
{
  return a1 + 2805;
}

void sub_20A521E74(char *a1)
{
  sub_20A4E9D44(*a1);
}

void sub_20A521E80()
{
  char *v0;

  sub_20A517AA0(*v0);
}

void sub_20A521E88(uint64_t a1)
{
  char *v1;

  sub_20A517CC4(a1, *v1);
}

void sub_20A521E90(uint64_t a1)
{
  char *v1;

  sub_20A5180E8(a1, *v1);
}

CoreODIEssentials::ODILocationBindingsName_optional sub_20A521E98(Swift::String *a1)
{
  return ODILocationBindingsName.init(rawValue:)(*a1);
}

uint64_t sub_20A521EA4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = ODILocationBindingsName.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_20A521EC8()
{
  sub_20A52E504();
  return sub_20A5B8A74();
}

uint64_t DeviceDataField.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeviceDataField.fieldName.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_BYTE *)(v1 + 32);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4;
  return sub_20A45DDBC(v2, v3, v4);
}

void DeviceDataField.source.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 33);
}

uint64_t DeviceDataField.priority.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t DeviceDataField.timeout.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t DeviceDataField.requiresEntitlements.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 57);
}

uint64_t sub_20A521F8C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_20A521FC4 + 4 * byte_20A5C4FC4[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_20A521FC4()
{
  return 0x6D614E646C656966;
}

uint64_t sub_20A521FE0()
{
  return 0x656372756F73;
}

uint64_t sub_20A521FF4()
{
  return 0x797469726F697270;
}

uint64_t sub_20A52200C()
{
  return 0x4D74756F656D6974;
}

uint64_t sub_20A52202C()
{
  return 0x67656C6976697270;
}

uint64_t sub_20A522048@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A52D23C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A52206C()
{
  sub_20A526030();
  return sub_20A5B9314();
}

uint64_t sub_20A522094()
{
  sub_20A526030();
  return sub_20A5B9320();
}

uint64_t DeviceDataField.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  int v28;
  int v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;
  char v42;
  unsigned __int8 v43;
  char v44;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5248);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A526030();
  sub_20A5B92F0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v44 = 0;
  v10 = sub_20A5B9074();
  v13 = v12;
  v32 = v10;
  v42 = 1;
  sub_20A525FEC();
  v35 = v13;
  swift_bridgeObjectRetain();
  sub_20A5B90A4();
  v31 = 0;
  v33 = 0;
  v34 = v43;
  v38 = 0;
  v40 = 2;
  sub_20A526074();
  sub_20A5B90A4();
  v14 = v41;
  v39 = 3;
  v15 = sub_20A5B905C();
  if ((v16 & 1) != 0)
    v17 = 3;
  else
    v17 = v15;
  v37 = 4;
  v18 = sub_20A5B905C();
  v29 = v19;
  v30 = v18;
  v36 = 5;
  v20 = sub_20A5B9044();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  v28 = v20 & 1;
  v21 = v17;
  v22 = v35;
  swift_bridgeObjectRetain();
  v23 = v33;
  v24 = v34;
  v25 = v31;
  sub_20A45DDBC(v34, v33, v31);
  swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v32;
  *(_QWORD *)(a2 + 8) = v22;
  *(_QWORD *)(a2 + 16) = v24;
  *(_QWORD *)(a2 + 24) = v23;
  *(_BYTE *)(a2 + 32) = v25;
  *(_BYTE *)(a2 + 33) = v14;
  v26 = v30;
  *(_QWORD *)(a2 + 40) = v21;
  *(_QWORD *)(a2 + 48) = v26;
  *(_BYTE *)(a2 + 56) = v29 & 1;
  *(_BYTE *)(a2 + 57) = v28;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v27 = v38;
  swift_bridgeObjectRelease();
  return sub_20A45DDCC(v24, v23, v27);
}

uint64_t DeviceDataField.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _DWORD v16[4];
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  int v26;
  char v27;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB6E0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + 16);
  v21 = *(_QWORD *)(v1 + 24);
  v22 = v8;
  v26 = *(unsigned __int8 *)(v1 + 32);
  LODWORD(v8) = *(unsigned __int8 *)(v1 + 33);
  v9 = *(_QWORD *)(v1 + 48);
  v19 = *(_QWORD *)(v1 + 40);
  v20 = v9;
  v17 = *(unsigned __int8 *)(v1 + 56);
  v18 = v8;
  v16[3] = *(unsigned __int8 *)(v1 + 57);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A526030();
  sub_20A5B92FC();
  LOBYTE(v24) = 0;
  v10 = v23;
  sub_20A5B9110();
  if (v10)
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  v13 = v21;
  v12 = v22;
  v14 = v20;
  if ((v26 & 1) != 0)
  {
    LOBYTE(v24) = 1;
    swift_bridgeObjectRetain();
    sub_20A5B9110();
    sub_20A45DDCC(v12, v13, 1);
  }
  else
  {
    LOBYTE(v24) = v22;
    v27 = 1;
    sub_20A5260FC();
    sub_20A5B9140();
  }
  v15 = v17;
  LOBYTE(v24) = v18;
  v27 = 2;
  sub_20A5260B8();
  sub_20A5B9140();
  LOBYTE(v24) = 3;
  sub_20A5B9134();
  v24 = v14;
  v25 = v15;
  v27 = 4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB4840);
  sub_20A52E29C(&qword_2545FB6F0, &qword_253EB4840, MEMORY[0x24BEE1770], MEMORY[0x24BEE4AA8]);
  sub_20A5B9140();
  LOBYTE(v24) = 5;
  sub_20A5B911C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

void sub_20A5227B4(char a1)
{
  __asm { BR              X10 }
}

unint64_t sub_20A52280C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  unint64_t v3;
  _QWORD v5[8];

  if (*(_QWORD *)(v0 + 16) && (v1 = sub_20A47094C(0x6D614E646C656966, 0xE900000000000065), (v2 & 1) != 0))
  {
    v3 = *(_QWORD *)(*(_QWORD *)(v0 + 56) + 16 * v1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v5[0] = 154;
    v5[1] = 0xE000000000000000;
    sub_20A5B8E94();
    sub_20A5B899C();
    sub_20A529AFC();
    sub_20A5B9170();
    sub_20A5B899C();
    swift_bridgeObjectRelease();
    v3 = 0xE000000000000000;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xE000000000000000, 0, (unsigned __int8 *)v5, 0, 0, 0xD00000000000005ALL, 0x800000020A5E4280, 0xD000000000000017, 0x800000020A5E46C0, 577);
    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  return v3;
}

uint64_t DeviceDataField.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_BYTE *)(v0 + 32);
  v4 = *(_BYTE *)(v0 + 56);
  sub_20A5B8E94();
  sub_20A5B899C();
  swift_bridgeObjectRetain();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  sub_20A45DDBC(v1, v2, v3);
  AssessmentConfigFieldName.description.getter();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A45DDCC(v1, v2, v3);
  sub_20A5B899C();
  sub_20A5B8F9C();
  sub_20A5B899C();
  sub_20A5B9170();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  if ((v4 & 1) == 0)
  {
    sub_20A499EF0();
    sub_20A5B8D98();
  }
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t DeviceDataField.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  int v4;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_BYTE *)(v0 + 32);
  v4 = *(unsigned __int8 *)(v0 + 56);
  swift_bridgeObjectRetain();
  sub_20A5B8978();
  swift_bridgeObjectRelease();
  sub_20A5B92A8();
  if ((v3 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    sub_20A5B8978();
    sub_20A45DDCC(v1, v2, 1);
  }
  else
  {
    ArmandDeviceDataFieldName.rawValue.getter();
    sub_20A5B8978();
    swift_bridgeObjectRelease();
  }
  ArmandDataSource.rawValue.getter();
  sub_20A5B8978();
  swift_bridgeObjectRelease();
  sub_20A5B92A8();
  sub_20A5B92B4();
  if (!v4)
    sub_20A5B92A8();
  return sub_20A5B92B4();
}

uint64_t DeviceDataField.hashValue.getter()
{
  sub_20A5B929C();
  DeviceDataField.hash(into:)();
  return sub_20A5B92CC();
}

uint64_t sub_20A522E40@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return DeviceDataField.init(from:)(a1, a2);
}

uint64_t sub_20A522E54(_QWORD *a1)
{
  return DeviceDataField.encode(to:)(a1);
}

uint64_t sub_20A522E6C()
{
  sub_20A5B929C();
  DeviceDataField.hash(into:)();
  return sub_20A5B92CC();
}

uint64_t sub_20A522EE8()
{
  sub_20A5B929C();
  DeviceDataField.hash(into:)();
  return sub_20A5B92CC();
}

uint64_t sub_20A522F60()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6D614E646C656966;
  if (*v0 != 1)
    v1 = 0x656372756F73;
  if (*v0)
    return v1;
  else
    return 0x696669746E656469;
}

uint64_t sub_20A522FC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A52D4EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A522FE4()
{
  sub_20A530208();
  return sub_20A5B9314();
}

uint64_t sub_20A52300C()
{
  sub_20A530208();
  return sub_20A5B9320();
}

double sub_20A523034@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;

  sub_20A52D650(a1, (uint64_t *)v6);
  if (!v2)
  {
    v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

_QWORD *sub_20A523074@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_20A52D884(a1);
  if (!v2)
    *a2 = result;
  return result;
}

void sub_20A52309C(char *a1)
{
  sub_20A4EA5E0(*a1);
}

void sub_20A5230A8()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_20A5B929C();
  __asm { BR              X9 }
}

uint64_t sub_20A5230F0()
{
  sub_20A5B8978();
  swift_bridgeObjectRelease();
  return sub_20A5B92CC();
}

void sub_20A523178()
{
  __asm { BR              X10 }
}

uint64_t sub_20A5231B0()
{
  sub_20A5B8978();
  return swift_bridgeObjectRelease();
}

void sub_20A523224()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_20A5B929C();
  __asm { BR              X9 }
}

uint64_t sub_20A523268()
{
  sub_20A5B8978();
  swift_bridgeObjectRelease();
  return sub_20A5B92CC();
}

uint64_t sub_20A5232F0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_20A52D0C0();
  *a1 = result;
  return result;
}

uint64_t sub_20A523324()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_20A523350 + 4 * byte_20A5C4FDF[*v0]))();
}

void sub_20A523350(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x73656E755469;
  a1[1] = v1;
}

void sub_20A523364(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x64726143656DLL;
  a1[1] = v1;
}

void sub_20A523378(_QWORD *a1@<X8>)
{
  *a1 = 0x6D754E656E6F6870;
  a1[1] = 0xEB00000000726562;
}

void sub_20A52339C(_QWORD *a1@<X8>)
{
  *a1 = 0x726F707075736E75;
  a1[1] = 0xEB00000000646574;
}

uint64_t sub_20A5233C0@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  char v5;
  uint64_t result;
  _QWORD v7[5];

  sub_20A47BD60(a1, (uint64_t)v7);
  v5 = sub_20A519584(v7, 4u);
  result = __swift_destroy_boxed_opaque_existential_1(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_20A523428()
{
  sub_20A52E1D0();
  return sub_20A5B8A38();
}

uint64_t AssessmentConfig.Sources.init(from:)@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v6;
  char v7;
  Swift::String v8;
  _QWORD v9[4];
  _QWORD v10[4];

  sub_20A47BD60(a1, (uint64_t)v10);
  __swift_project_boxed_opaque_existential_1(v10, v10[3]);
  sub_20A5B92E4();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
    return __swift_destroy_boxed_opaque_existential_1(a1);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v9, v9[3]);
    sub_20A5B91C4();
    AssessmentConfig.Sources.init(rawValue:)(v8);
    if (v7 == 7)
      v6 = 6;
    else
      v6 = v7;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
    result = __swift_destroy_boxed_opaque_existential_1(a1);
    *a2 = v6;
  }
  return result;
}

CoreODIEssentials::AssessmentConfig::Sources_optional __swiftcall AssessmentConfig.Sources.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  CoreODIEssentials::AssessmentConfig::Sources_optional result;
  char v5;

  v2 = v1;
  v3 = sub_20A5B9008();
  result.value = swift_bridgeObjectRelease();
  v5 = 7;
  if (v3 < 7)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t AssessmentConfig.Sources.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_20A52360C + 4 * byte_20A5C4FE4[*v0]))(0x73746E756F636341, 0xE800000000000000);
}

uint64_t sub_20A523634()
{
  return 0x656C655465726F43;
}

uint64_t sub_20A523658()
{
  return 0x797469746E656449;
}

uint64_t sub_20A52366C()
{
  return 0x64726143654DLL;
}

uint64_t sub_20A523680()
{
  return 0x726F707075736E75;
}

uint64_t sub_20A5236A0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_20A5236DC + 4 * byte_20A5C4FEB[a1]))(0x74616E6974736564, 0xEC000000736E6F69);
}

unint64_t sub_20A5236DC()
{
  return 0xD000000000000019;
}

uint64_t sub_20A5237E4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_20A523820 + 4 * byte_20A5C4FF6[a1]))(0x74616E6974736564, 0xEC000000736E6F69);
}

unint64_t sub_20A523820()
{
  return 0xD000000000000019;
}

void sub_20A523928(char *a1)
{
  sub_20A4EA764(*a1);
}

void sub_20A523934()
{
  char *v0;

  sub_20A5184C8(0, *v0);
}

void sub_20A523940()
{
  __asm { BR              X10 }
}

uint64_t sub_20A52397C()
{
  sub_20A5B8978();
  return swift_bridgeObjectRelease();
}

void sub_20A523A24(uint64_t a1)
{
  char *v1;

  sub_20A5184C8(a1, *v1);
}

CoreODIEssentials::AssessmentConfig::Sources_optional sub_20A523A2C(Swift::String *a1)
{
  return AssessmentConfig.Sources.init(rawValue:)(*a1);
}

uint64_t sub_20A523A38()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_20A523A68 + 4 * byte_20A5C5008[*v0]))();
}

void sub_20A523A68(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = v1;
  a1[1] = 0xEF64756F6C43692ELL;
}

void sub_20A523A80(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = v1;
  a1[1] = 0xEF73656E7554692ELL;
}

void sub_20A523A98(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "CoreTelephony");
  *(_WORD *)(a1 + 14) = -4864;
}

void sub_20A523AC0(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x797469746E656449;
  a1[1] = v1;
}

void sub_20A523AD8(_QWORD *a1@<X8>)
{
  *a1 = 0x64726143654DLL;
  a1[1] = 0xE600000000000000;
}

void sub_20A523AF0(_QWORD *a1@<X8>)
{
  *a1 = 0x726F707075736E75;
  a1[1] = 0xEB00000000646574;
}

uint64_t sub_20A523B14@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return AssessmentConfig.Sources.init(from:)(a1, a2);
}

uint64_t sub_20A523B28()
{
  sub_20A52E4C0();
  return sub_20A5B8A38();
}

uint64_t sub_20A523B74(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_20A5236A0(*a1);
  v5 = v4;
  if (v3 == sub_20A5236A0(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_20A5B91AC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_20A523BFC()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_20A5B929C();
  sub_20A5236A0(v1);
  sub_20A5B8978();
  swift_bridgeObjectRelease();
  return sub_20A5B92CC();
}

uint64_t sub_20A523C5C()
{
  unsigned __int8 *v0;

  sub_20A5236A0(*v0);
  sub_20A5B8978();
  return swift_bridgeObjectRelease();
}

uint64_t sub_20A523C9C()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_20A5B929C();
  sub_20A5236A0(v1);
  sub_20A5B8978();
  swift_bridgeObjectRelease();
  return sub_20A5B92CC();
}

uint64_t sub_20A523CF8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_20A52DCA0();
  *a1 = result;
  return result;
}

uint64_t sub_20A523D24@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_20A5236A0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_20A523D4C()
{
  unsigned __int8 *v0;

  return sub_20A5237E4(*v0);
}

uint64_t sub_20A523D54@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_20A52DCA0();
  *a1 = result;
  return result;
}

uint64_t sub_20A523D78()
{
  sub_20A5262DC();
  return sub_20A5B9314();
}

uint64_t sub_20A523DA0()
{
  sub_20A5262DC();
  return sub_20A5B9320();
}

uint64_t AssessmentConfig.destinations.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *v1;
  v3 = v1[1];
  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  *a1 = *v1;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  return sub_20A465800(v2, v3);
}

uint64_t AssessmentConfig.bindingsDictSource.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AssessmentConfig.bindingsToCompare.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AssessmentConfig.refreshTtl.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 88);
}

uint64_t AssessmentConfig.useSendOTD.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 97);
}

void AssessmentConfig.primaryDSID.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 98);
}

uint64_t *AssessmentConfig.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int v11;
  char *v12;
  uint64_t *result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t i;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  int v40;
  int v41;
  _BOOL4 v42;
  int v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  int64_t v52;
  unint64_t v53;
  unint64_t v54;
  int64_t v55;
  unint64_t v56;
  int64_t v57;
  uint64_t v58;
  uint64_t v59;
  _BYTE *v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  char v67;
  unsigned __int8 v68;
  char v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  __int128 v80;
  uint64_t v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  uint64_t v85;
  uint64_t v86;
  _BOOL4 v87;
  int v88;
  int v89;
  int v90;
  __int128 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  __int128 v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  char v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  __int128 v126;
  char v127;
  char v128;
  char v129;
  int v130;
  char v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char v135;
  char v136;
  char v137;
  int v138;
  char v139;
  uint64_t v140;

  v3 = v2;
  v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5250);
  v6 = *(_QWORD *)(v140 - 8);
  MEMORY[0x24BDAC7A8](v140, v7);
  v9 = (char *)&v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((_QWORD *)a1, *(_QWORD *)(a1 + 24));
  sub_20A5262DC();
  sub_20A5B92F0();
  if (v2)
    return (uint64_t *)__swift_destroy_boxed_opaque_existential_1(a1);
  v10 = v6;
  v106 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5108);
  LOBYTE(v107) = 1;
  sub_20A5263F0((unint64_t *)&unk_253EB5110, &qword_253EB5108, (uint64_t (*)(void))sub_20A526320, MEMORY[0x24BEE12D0]);
  v11 = v140;
  sub_20A5B90A4();
  v12 = v9;
  v14 = v116;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB50C0);
  LOBYTE(v107) = 2;
  sub_20A526364();
  swift_bridgeObjectRetain();
  sub_20A5B90A4();
  v102 = v10;
  v103 = a1;
  LODWORD(a1) = v11;
  v15 = v116;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5130);
  v104 = (uint64_t)v12;
  LOBYTE(v107) = 3;
  sub_20A52E29C(&qword_253EB5138, &qword_253EB5130, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
  swift_bridgeObjectRetain();
  v16 = v104;
  sub_20A5B9068();
  v17 = (_QWORD *)v116;
  if (v116)
  {
LABEL_35:
    LOBYTE(v107) = 0;
    sub_20A5264BC();
    v32 = v140;
    v33 = v104;
    sub_20A5B9068();
    if (v3)
    {
      (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v33, v32);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(v103);
      v34 = 0;
      v35 = 0;
    }
    else
    {
      v36 = v116;
      a1 = v122;
      LOBYTE(v116) = 4;
      v105 = v36;
      v97 = v117;
      v37 = v118;
      v100 = v120;
      v101 = v119;
      *((_QWORD *)&v98 + 1) = v123;
      v99 = v121;
      sub_20A465800(v36, v117);
      v38 = sub_20A5B9098();
      *(_QWORD *)&v98 = a1;
      *((_QWORD *)&v91 + 1) = v38;
      v92 = v37;
      LOBYTE(v116) = 5;
      v39 = sub_20A5B9044();
      v3 = 0;
      *(_QWORD *)&v91 = v17;
      LODWORD(a1) = v39 == 2;
      LOBYTE(v116) = 6;
      v40 = v39;
      v41 = sub_20A5B9044();
      v89 = a1;
      v90 = v40;
      LODWORD(a1) = v41;
      v42 = v41 == 2;
      LOBYTE(v107) = 7;
      sub_20A526500();
      sub_20A5B9068();
      v43 = v116;
      if (v116 == 4)
        v43 = 0;
      v87 = v42;
      v88 = v43;
      __swift_instantiateConcreteTypeFromMangledName(&qword_253EB50B0);
      LOBYTE(v107) = 8;
      sub_20A526544();
      sub_20A5B9068();
LABEL_47:
      v86 = v15;
      v15 = v14;
      v44 = v116;
      if (!v116)
        v44 = sub_20A46AFC0(MEMORY[0x24BEE4AF8]);
      v45 = sub_20A525BD0(v44);
      swift_bridgeObjectRelease();
      LOBYTE(v107) = 9;
      v94 = v45;
      swift_retain();
      result = (uint64_t *)sub_20A5B9068();
      if (v3)
      {
        (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v104, v140);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        v46 = v97;
        sub_20A4655FC(v105, v97);
        v35 = 0;
        v34 = 1;
      }
      else
      {
        v16 = v116;
        if (!v116)
        {
          v93 = 0;
          goto LABEL_82;
        }
        v47 = 0;
        v48 = v116 + 64;
        v49 = 1 << *(_BYTE *)(v116 + 32);
        v50 = -1;
        if (v49 < 64)
          v50 = ~(-1 << v49);
        v51 = v50 & *(_QWORD *)(v116 + 64);
        v52 = (unint64_t)(v49 + 63) >> 6;
        do
        {
LABEL_55:
          if (v51)
          {
            v53 = __clz(__rbit64(v51));
            v51 &= v51 - 1;
            v54 = v53 | (v47 << 6);
          }
          else
          {
            v55 = v47 + 1;
            if (__OFADD__(v47, 1))
            {
              __break(1u);
LABEL_88:
              __break(1u);
              return result;
            }
            if (v55 >= v52)
              goto LABEL_86;
            v56 = *(_QWORD *)(v48 + 8 * v55);
            ++v47;
            if (!v56)
            {
              v47 = v55 + 1;
              if (v55 + 1 >= v52)
                goto LABEL_86;
              v56 = *(_QWORD *)(v48 + 8 * v47);
              if (!v56)
              {
                v47 = v55 + 2;
                if (v55 + 2 >= v52)
                  goto LABEL_86;
                v56 = *(_QWORD *)(v48 + 8 * v47);
                if (!v56)
                {
                  v47 = v55 + 3;
                  if (v55 + 3 >= v52)
                    goto LABEL_86;
                  v56 = *(_QWORD *)(v48 + 8 * v47);
                  if (!v56)
                  {
                    v47 = v55 + 4;
                    if (v55 + 4 >= v52)
                      goto LABEL_86;
                    v56 = *(_QWORD *)(v48 + 8 * v47);
                    if (!v56)
                    {
                      v57 = v55 + 5;
                      if (v57 >= v52)
                        goto LABEL_86;
                      v56 = *(_QWORD *)(v48 + 8 * v57);
                      if (!v56)
                      {
                        while (1)
                        {
                          v47 = v57 + 1;
                          if (__OFADD__(v57, 1))
                            goto LABEL_88;
                          if (v47 >= v52)
                            goto LABEL_86;
                          v56 = *(_QWORD *)(v48 + 8 * v47);
                          ++v57;
                          if (v56)
                            goto LABEL_74;
                        }
                      }
                      v47 = v57;
                    }
                  }
                }
              }
            }
LABEL_74:
            v51 = (v56 - 1) & v56;
            v54 = __clz(__rbit64(v56)) + (v47 << 6);
          }
          v58 = *(_QWORD *)(*(_QWORD *)(v116 + 56) + 8 * v54);
          v59 = *(_QWORD *)(v58 + 16);
        }
        while (!v59);
        v60 = (_BYTE *)(v58 + 88);
        while ((*v60 & 1) == 0)
        {
          v60 += 64;
          if (!--v59)
            goto LABEL_55;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        sub_20A4655FC(v105, v97);
        v61 = sub_20A5B8ED0();
        swift_allocError();
        v63 = v62;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB6C8);
        *v63 = MEMORY[0x24BEE0D00];
        sub_20A5B8EC4();
        (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v61 - 8) + 104))(v63, *MEMORY[0x24BEE26D0], v61);
        swift_willThrow();
        (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v104, v140);
        v35 = 0;
        v34 = 1;
        v46 = v97;
      }
LABEL_40:
      __swift_destroy_boxed_opaque_existential_1(v103);
      sub_20A4655FC(v105, v46);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = (uint64_t *)swift_bridgeObjectRelease();
    if ((v34 & 1) != 0)
    {
      result = (uint64_t *)swift_bridgeObjectRelease();
      if ((v35 & 1) == 0)
        return result;
    }
    else if (!v35)
    {
      return result;
    }
    return (uint64_t *)swift_bridgeObjectRelease();
  }
  v95 = v14;
  v96 = 0;
  v14 = v15 + 64;
  v18 = 1 << *(_BYTE *)(v15 + 32);
  v19 = -1;
  if (v18 < 64)
    v19 = ~(-1 << v18);
  v20 = v19 & *(_QWORD *)(v15 + 64);
  v105 = (unint64_t)(v18 + 63) >> 6;
  swift_bridgeObjectRetain_n();
  v21 = 0;
  v17 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (!v20)
    goto LABEL_10;
LABEL_9:
  v22 = __clz(__rbit64(v20));
  v20 &= v20 - 1;
  for (i = v22 | (v21 << 6); ; i = __clz(__rbit64(v25)) + (v21 << 6))
  {
    a1 = v15;
    v27 = (uint64_t *)(*(_QWORD *)(v15 + 48) + 16 * i);
    v28 = *v27;
    v16 = v27[1];
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v17 = sub_20A46FE9C(0, v17[2] + 1, 1, v17);
    v3 = v17[2];
    v29 = v17[3];
    v30 = v17;
    if (v3 >= v29 >> 1)
      v30 = sub_20A46FE9C((_QWORD *)(v29 > 1), v3 + 1, 1, v17);
    v30[2] = v3 + 1;
    v17 = v30;
    v31 = &v30[2 * v3];
    v31[4] = v28;
    v31[5] = v16;
    v15 = a1;
    if (v20)
      goto LABEL_9;
LABEL_10:
    v24 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
      __break(1u);
      goto LABEL_47;
    }
    if (v24 >= v105)
      goto LABEL_34;
    v25 = *(_QWORD *)(v14 + 8 * v24);
    ++v21;
    if (!v25)
    {
      v21 = v24 + 1;
      if (v24 + 1 >= v105)
        goto LABEL_34;
      v25 = *(_QWORD *)(v14 + 8 * v21);
      if (!v25)
      {
        v21 = v24 + 2;
        if (v24 + 2 >= v105)
          goto LABEL_34;
        v25 = *(_QWORD *)(v14 + 8 * v21);
        if (!v25)
        {
          v21 = v24 + 3;
          if (v24 + 3 >= v105)
            goto LABEL_34;
          v25 = *(_QWORD *)(v14 + 8 * v21);
          if (!v25)
          {
            v21 = v24 + 4;
            if (v24 + 4 >= v105)
              goto LABEL_34;
            v25 = *(_QWORD *)(v14 + 8 * v21);
            if (!v25)
              break;
          }
        }
      }
    }
LABEL_27:
    v20 = (v25 - 1) & v25;
  }
  v26 = v24 + 5;
  if (v26 >= v105)
  {
LABEL_34:
    swift_release();
    swift_bridgeObjectRelease();
    v14 = v95;
    v3 = v96;
    goto LABEL_35;
  }
  v25 = *(_QWORD *)(v14 + 8 * v26);
  if (v25)
  {
    v21 = v26;
    goto LABEL_27;
  }
  while (1)
  {
    v21 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v21 >= v105)
      goto LABEL_34;
    v25 = *(_QWORD *)(v14 + 8 * v21);
    ++v26;
    if (v25)
      goto LABEL_27;
  }
  __break(1u);
LABEL_86:
  v93 = sub_20A525BD0(v16);
  swift_bridgeObjectRelease();
LABEL_82:
  v136 = 10;
  swift_bridgeObjectRetain();
  v64 = sub_20A5B905C();
  v96 = v3;
  if (v3)
  {
    (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v104, v140);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    v46 = v97;
    sub_20A4655FC(v105, v97);
    v35 = 1;
    v34 = 1;
    goto LABEL_40;
  }
  v66 = v64;
  v67 = v65;
  v68 = (v89 | v90) & 1;
  v69 = (v87 | a1) & 1;
  v89 = v68;
  v90 = (v87 | a1) & 1;
  (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v104, v140);
  v70 = v67 & 1;
  v137 = v67 & 1;
  v71 = v105;
  *(_QWORD *)&v107 = v105;
  *((_QWORD *)&v107 + 1) = v97;
  *(_QWORD *)&v108 = v92;
  *((_QWORD *)&v108 + 1) = v101;
  v72 = v99;
  *(_QWORD *)&v109 = v100;
  *((_QWORD *)&v109 + 1) = v99;
  v73 = *((_QWORD *)&v98 + 1);
  v110 = v98;
  v95 = v15;
  *(_QWORD *)&v111 = v15;
  *((_QWORD *)&v111 + 1) = v86;
  v112 = v91;
  LOBYTE(v113) = v68;
  BYTE1(v113) = v69;
  BYTE2(v113) = v88;
  *((_QWORD *)&v113 + 1) = v94;
  *(_QWORD *)&v114 = v93;
  v85 = v66;
  *((_QWORD *)&v114 + 1) = v66;
  v115 = v70;
  swift_bridgeObjectRetain();
  sub_20A5265F4((uint64_t *)&v107);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  v74 = v71;
  v75 = v97;
  v76 = v98;
  v77 = v92;
  v78 = v100;
  v79 = v101;
  sub_20A4655FC(v74, v97);
  v80 = v114;
  v81 = v106;
  *(_OWORD *)(v106 + 96) = v113;
  *(_OWORD *)(v81 + 112) = v80;
  *(_BYTE *)(v81 + 128) = v115;
  v82 = v110;
  *(_OWORD *)(v81 + 32) = v109;
  *(_OWORD *)(v81 + 48) = v82;
  v83 = v112;
  *(_OWORD *)(v81 + 64) = v111;
  *(_OWORD *)(v81 + 80) = v83;
  v84 = v108;
  *(_OWORD *)v81 = v107;
  *(_OWORD *)(v81 + 16) = v84;
  __swift_destroy_boxed_opaque_existential_1(v103);
  v116 = v105;
  v117 = v75;
  v118 = v77;
  v119 = v79;
  v120 = v78;
  v121 = v72;
  v122 = v76;
  v123 = v73;
  v124 = v95;
  v125 = v86;
  v126 = v91;
  v127 = v89;
  v128 = v90;
  v129 = v88;
  v130 = v138;
  v131 = v139;
  v132 = v94;
  v133 = v93;
  v134 = v85;
  v135 = v137;
  return sub_20A52666C(&v116);
}

uint64_t AssessmentConfig.encode(to:)()
{
  unsigned __int8 v1;

  v1 = 80;
  ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000034, 0x800000020A5E43F0, 0, &v1, 0, 0, 0xD00000000000005ALL, 0x800000020A5E4280, 0x742865646F636E65, 0xEB00000000293A6FLL, 785);
  return swift_willThrow();
}

uint64_t *sub_20A524C3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return AssessmentConfig.init(from:)(a1, a2);
}

uint64_t sub_20A524C50()
{
  return AssessmentConfig.encode(to:)();
}

uint64_t AssessmentServerDestinations.otd.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AssessmentServerDestinations.tsidEncryptionCert.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_20A524CBC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_20A524CE8 + 4 * byte_20A5C500F[*v0]))(6582895, 0xE300000000000000);
}

uint64_t sub_20A524CE8@<X0>(uint64_t a1@<X8>)
{
  return a1 + 2048;
}

uint64_t sub_20A524CF0()
{
  return 6581359;
}

unint64_t sub_20A524CFC()
{
  return 0xD000000000000012;
}

uint64_t sub_20A524D18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A52DD70(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A524D3C()
{
  sub_20A5266E4();
  return sub_20A5B9314();
}

uint64_t sub_20A524D64()
{
  sub_20A5266E4();
  return sub_20A5B9320();
}

uint64_t AssessmentServerDestinations.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[8];
  char v14;
  char v15;
  char v16;
  char v17;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB700);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v1[2];
  v13[5] = v1[3];
  v13[6] = v8;
  v9 = v1[4];
  v13[3] = v1[5];
  v13[4] = v9;
  v10 = v1[6];
  v13[1] = v1[7];
  v13[2] = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A5266E4();
  sub_20A5B92FC();
  v17 = 0;
  v11 = v13[7];
  sub_20A5B9110();
  if (!v11)
  {
    v16 = 1;
    sub_20A5B9110();
    v15 = 2;
    sub_20A5B9110();
    v14 = 3;
    sub_20A5B9110();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t AssessmentServerDestinations.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  char v33;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5268);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A5266E4();
  sub_20A5B92F0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v33 = 0;
  v10 = sub_20A5B9074();
  v12 = v11;
  v28 = v10;
  v32 = 1;
  swift_bridgeObjectRetain();
  v13 = sub_20A5B9074();
  v29 = v14;
  v27 = v13;
  v31 = 2;
  swift_bridgeObjectRetain();
  v25 = sub_20A5B9074();
  v26 = v15;
  v30 = 3;
  swift_bridgeObjectRetain();
  v16 = sub_20A5B9074();
  v19 = v18;
  v20 = *(void (**)(char *, uint64_t))(v6 + 8);
  v21 = v16;
  v20(v9, v5);
  swift_bridgeObjectRetain();
  v22 = v29;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *a2 = v28;
  a2[1] = v12;
  v23 = v26;
  a2[2] = v27;
  a2[3] = v22;
  a2[4] = v25;
  a2[5] = v23;
  a2[6] = v21;
  a2[7] = v19;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_20A525204@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return AssessmentServerDestinations.init(from:)(a1, a2);
}

uint64_t sub_20A525218(_QWORD *a1)
{
  return AssessmentServerDestinations.encode(to:)(a1);
}

_QWORD *sub_20A52522C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB52B8);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

unsigned __int8 *sub_20A525290(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_20A525498(a1, a2, a3);
}

unsigned __int8 *sub_20A5252A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  swift_bridgeObjectRetain();
  v5 = sub_20A5B8A20();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v13 = v5;
    v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  v5 = sub_20A525714();
  v10 = v9;
  swift_bridgeObjectRelease();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = (unsigned __int8 *)sub_20A5B8EE8();
  }
LABEL_7:
  v11 = sub_20A525498(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unint64_t sub_20A525388()
{
  unint64_t result;

  result = qword_253EB4548;
  if (!qword_253EB4548)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C6FBC, &type metadata for TrainingSignalId.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_253EB4548);
  }
  return result;
}

unint64_t sub_20A5253CC()
{
  unint64_t result;

  result = qword_253EB46E0;
  if (!qword_253EB46E0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C6F6C, &type metadata for AssessmentGUIDContainer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_253EB46E0);
  }
  return result;
}

unint64_t sub_20A525410()
{
  unint64_t result;

  result = qword_253EB4720;
  if (!qword_253EB4720)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C6F1C, &type metadata for TSID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_253EB4720);
  }
  return result;
}

unint64_t sub_20A525454()
{
  unint64_t result;

  result = qword_253EB4F48;
  if (!qword_253EB4F48)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C6ECC, &type metadata for AugmentedProfile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_253EB4F48);
  }
  return result;
}

unsigned __int8 *sub_20A525498(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 *v18;
  unsigned int v19;
  char v20;
  uint64_t v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  uint64_t v25;
  unsigned int v26;
  char v27;
  uint64_t v28;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8)
                    return 0;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
                return 0;
              v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12)))
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      v22 = a3 + 48;
      v23 = a3 + 55;
      v24 = a3 + 87;
      if (a3 > 10)
      {
        v22 = 58;
      }
      else
      {
        v24 = 97;
        v23 = 65;
      }
      if (result)
      {
        v25 = 0;
        do
        {
          v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24)
                return 0;
              v27 = -87;
            }
            else
            {
              v27 = -55;
            }
          }
          else
          {
            v27 = -48;
          }
          v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63)
            return 0;
          v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27)))
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  v14 = a2 - 1;
  if (a2 == 1)
    return 0;
  v15 = a3 + 48;
  v16 = a3 + 55;
  v17 = a3 + 87;
  if (a3 > 10)
  {
    v15 = 58;
  }
  else
  {
    v17 = 97;
    v16 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v18 = result + 1;
  do
  {
    v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17)
          return 0;
        v20 = -87;
      }
      else
      {
        v20 = -55;
      }
    }
    else
    {
      v20 = -48;
    }
    v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
      return 0;
    v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20)))
      return 0;
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_20A525714()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = sub_20A5B8A2C();
  v4 = sub_20A525790(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_20A525790(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    v9 = sub_20A5258D4(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      v11 = sub_20A52522C(v9, 0);
      v12 = sub_20A5259C0((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    v13 = MEMORY[0x20BD25A08](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x20BD25A08);
LABEL_9:
      sub_20A5B8EE8();
      goto LABEL_12;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x20BD25A08]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_20A5258D4(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_20A44B0B0(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_20A44B0B0(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return sub_20A5B89D8();
  }
  __break(1u);
  return result;
}

unint64_t sub_20A5259C0(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_33:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    v17 = v12 & 0xC;
    result = v12;
    if (v17 == v15)
      result = sub_20A44B0B0(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = sub_20A5B89E4();
      v19 = result;
      if (v17 != v15)
        goto LABEL_23;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15)
          goto LABEL_23;
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = sub_20A5B8EE8();
        v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0)
            goto LABEL_24;
          goto LABEL_27;
        }
      }
    }
    result = sub_20A44B0B0(v12, a6, a7);
    v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16)
      goto LABEL_35;
    v12 = sub_20A5B89C0();
LABEL_29:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_20A525BD0(uint64_t a1)
{
  uint64_t result;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5208);
  result = sub_20A5B8FD8();
  v3 = (_QWORD *)result;
  v4 = 0;
  v5 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a1 + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  v10 = result + 64;
  if (!v8)
    goto LABEL_5;
LABEL_4:
  v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v11 | (v4 << 6); ; i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v17 = 8 * i;
    v18 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * i);
    v19 = *v16;
    result = v16[1];
    *(_QWORD *)(v10 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v20 = (_QWORD *)(v3[6] + 16 * i);
    *v20 = v19;
    v20[1] = result;
    *(_QWORD *)(v3[7] + v17) = v18;
    v21 = v3[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v23;
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
    if (v8)
      goto LABEL_4;
LABEL_5:
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_24;
    if (v13 >= v9)
      return (uint64_t)v3;
    v14 = *(_QWORD *)(v5 + 8 * v13);
    ++v4;
    if (!v14)
    {
      v4 = v13 + 1;
      if (v13 + 1 >= v9)
        return (uint64_t)v3;
      v14 = *(_QWORD *)(v5 + 8 * v4);
      if (!v14)
      {
        v4 = v13 + 2;
        if (v13 + 2 >= v9)
          return (uint64_t)v3;
        v14 = *(_QWORD *)(v5 + 8 * v4);
        if (!v14)
          break;
      }
    }
LABEL_18:
    v8 = (v14 - 1) & v14;
  }
  v15 = v13 + 3;
  if (v15 >= v9)
    return (uint64_t)v3;
  v14 = *(_QWORD *)(v5 + 8 * v15);
  if (v14)
  {
    v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    v4 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v4 >= v9)
      return (uint64_t)v3;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    ++v15;
    if (v14)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t _s17CoreODIEssentials25AssessmentConfigFieldNameO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(_BYTE *)(a1 + 16);
  v6 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v7 = *(_BYTE *)(a2 + 16);
  if ((v4 & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 16) & 1) != 0)
    {
      if (v3 == v6 && v2 == v5)
        v9 = 1;
      else
        v9 = sub_20A5B91AC();
      sub_20A45DDBC(v6, v5, 1);
      sub_20A45DDBC(v3, v2, 1);
      sub_20A45DDCC(v3, v2, 1);
      v14 = v6;
      v15 = v5;
      v16 = 1;
LABEL_18:
      sub_20A45DDCC(v14, v15, v16);
      return v9 & 1;
    }
    swift_bridgeObjectRetain();
  }
  else if ((*(_BYTE *)(a2 + 16) & 1) == 0)
  {
    v10 = ArmandDeviceDataFieldName.rawValue.getter();
    v12 = v11;
    if (v10 == ArmandDeviceDataFieldName.rawValue.getter() && v12 == v13)
      v9 = 1;
    else
      v9 = sub_20A5B91AC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_20A45DDCC(v3, v2, 0);
    v14 = v6;
    v15 = v5;
    v16 = 0;
    goto LABEL_18;
  }
  sub_20A45DDBC(v6, v5, v7);
  sub_20A45DDCC(v3, v2, v4);
  sub_20A45DDCC(v6, v5, v7);
  v9 = 0;
  return v9 & 1;
}

unint64_t sub_20A525F20()
{
  unint64_t result;

  result = qword_2545FB6C0;
  if (!qword_2545FB6C0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C6E7C, &type metadata for AssessmentConfigFieldName.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FB6C0);
  }
  return result;
}

unint64_t sub_20A525F64()
{
  unint64_t result;

  result = qword_2545FB6D0;
  if (!qword_2545FB6D0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C6E2C, &type metadata for AssessmentConfigFieldName.BindingsFieldCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FB6D0);
  }
  return result;
}

unint64_t sub_20A525FA8()
{
  unint64_t result;

  result = qword_2545FB6D8;
  if (!qword_2545FB6D8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C6DDC, &type metadata for AssessmentConfigFieldName.DeviceDataFieldCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FB6D8);
  }
  return result;
}

unint64_t sub_20A525FEC()
{
  unint64_t result;

  result = qword_253EB4FF8;
  if (!qword_253EB4FF8)
  {
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for ArmandDeviceDataFieldName, &type metadata for ArmandDeviceDataFieldName);
    atomic_store(result, (unint64_t *)&qword_253EB4FF8);
  }
  return result;
}

unint64_t sub_20A526030()
{
  unint64_t result;

  result = qword_253EB4EE8;
  if (!qword_253EB4EE8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C6D8C, &type metadata for DeviceDataField.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_253EB4EE8);
  }
  return result;
}

unint64_t sub_20A526074()
{
  unint64_t result;

  result = qword_253EB4F10;
  if (!qword_253EB4F10)
  {
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for ArmandDataSource, &type metadata for ArmandDataSource);
    atomic_store(result, (unint64_t *)&qword_253EB4F10);
  }
  return result;
}

unint64_t sub_20A5260B8()
{
  unint64_t result;

  result = qword_2545FB6E8;
  if (!qword_2545FB6E8)
  {
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for ArmandDataSource, &type metadata for ArmandDataSource);
    atomic_store(result, (unint64_t *)&qword_2545FB6E8);
  }
  return result;
}

unint64_t sub_20A5260FC()
{
  unint64_t result;

  result = qword_2545FB6F8;
  if (!qword_2545FB6F8)
  {
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for ArmandDeviceDataFieldName, &type metadata for ArmandDeviceDataFieldName);
    atomic_store(result, (unint64_t *)&qword_2545FB6F8);
  }
  return result;
}

uint64_t _s17CoreODIEssentials15DeviceDataFieldV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  int v13;
  uint64_t result;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  unsigned int v24;
  __int128 v25;
  char v26;
  __int128 v27;
  char v28;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_BYTE *)a1 + 32);
  v5 = *((_BYTE *)a1 + 33);
  v6 = a1[5];
  v23 = *((_BYTE *)a1 + 56);
  v7 = *((unsigned __int8 *)a1 + 57);
  v8 = *a2;
  v9 = a2[1];
  v10 = *((_BYTE *)a2 + 32);
  v11 = *((_BYTE *)a2 + 33);
  v12 = a2[5];
  v21 = a2[6];
  v22 = a1[6];
  v24 = *((unsigned __int8 *)a2 + 56);
  v13 = *((unsigned __int8 *)a2 + 57);
  v27 = *((_OWORD *)a1 + 1);
  v28 = v4;
  v25 = *((_OWORD *)a2 + 1);
  v26 = v10;
  if ((_s17CoreODIEssentials25AssessmentConfigFieldNameO2eeoiySbAC_ACtFZ_0((uint64_t)&v27, (uint64_t)&v25) & 1) == 0)
    return 0;
  if (v2 == v8 && v3 == v9)
  {
    result = 0;
  }
  else
  {
    v15 = sub_20A5B91AC();
    result = 0;
    if ((v15 & 1) == 0)
      return result;
  }
  if (v6 == v12 && ((v7 ^ v13) & 1) == 0)
  {
    LOBYTE(v27) = v5;
    LOBYTE(v25) = v11;
    v16 = ArmandDataSource.rawValue.getter();
    v18 = v17;
    if (v16 == ArmandDataSource.rawValue.getter() && v18 == v19)
    {
      swift_bridgeObjectRelease_n();
      result = v24;
      if ((v23 & 1) != 0)
        return result;
    }
    else
    {
      v20 = sub_20A5B91AC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v23 & 1 | ((v20 & 1) == 0))
        return v20 & v24;
    }
    return (v22 == v21) & ~v24;
  }
  return result;
}

unint64_t sub_20A5262DC()
{
  unint64_t result;

  result = qword_253EB4F18;
  if (!qword_253EB4F18)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C6D3C, &type metadata for AssessmentConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_253EB4F18);
  }
  return result;
}

unint64_t sub_20A526320()
{
  unint64_t result;

  result = qword_253EB4F38;
  if (!qword_253EB4F38)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C6D14, &type metadata for AssessmentConfig.Triggers);
    atomic_store(result, (unint64_t *)&qword_253EB4F38);
  }
  return result;
}

unint64_t sub_20A526364()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_253EB50C8;
  if (!qword_253EB50C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253EB50C0);
    v2 = sub_20A5263F0(&qword_253EB5148, &qword_253EB5140, sub_20A526454, MEMORY[0x24BEE12D0]);
    v3[0] = MEMORY[0x24BEE0D38];
    v3[1] = v2;
    result = MEMORY[0x20BD26CEC](MEMORY[0x24BEE04E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_253EB50C8);
  }
  return result;
}

uint64_t sub_20A5263F0(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = a3();
    result = MEMORY[0x20BD26CEC](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A526454()
{
  return sub_20A5263F0(&qword_253EB5100, &qword_253EB50F8, (uint64_t (*)(void))sub_20A526478, MEMORY[0x24BEE12D0]);
}

unint64_t sub_20A526478()
{
  unint64_t result;

  result = qword_253EB4F30;
  if (!qword_253EB4F30)
  {
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for AssessmentConfig.Sources, &type metadata for AssessmentConfig.Sources);
    atomic_store(result, (unint64_t *)&qword_253EB4F30);
  }
  return result;
}

unint64_t sub_20A5264BC()
{
  unint64_t result;

  result = qword_253EB5018;
  if (!qword_253EB5018)
  {
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for AssessmentServerDestinations, &type metadata for AssessmentServerDestinations);
    atomic_store(result, (unint64_t *)&qword_253EB5018);
  }
  return result;
}

unint64_t sub_20A526500()
{
  unint64_t result;

  result = qword_253EB5050;
  if (!qword_253EB5050)
  {
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for DsidType, &type metadata for DsidType);
    atomic_store(result, (unint64_t *)&qword_253EB5050);
  }
  return result;
}

unint64_t sub_20A526544()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_253EB50B8;
  if (!qword_253EB50B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253EB50B0);
    v2 = sub_20A5265B0();
    v3[0] = MEMORY[0x24BEE0D38];
    v3[1] = v2;
    result = MEMORY[0x20BD26CEC](MEMORY[0x24BEE04E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_253EB50B8);
  }
  return result;
}

unint64_t sub_20A5265B0()
{
  unint64_t result;

  result = qword_253EB4F68;
  if (!qword_253EB4F68)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C6CEC, &type metadata for DeviceFieldsList);
    atomic_store(result, (unint64_t *)&qword_253EB4F68);
  }
  return result;
}

uint64_t *sub_20A5265F4(uint64_t *a1)
{
  sub_20A465800(*a1, a1[1]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *sub_20A52666C(uint64_t *a1)
{
  sub_20A4655FC(*a1, a1[1]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_20A5266E4()
{
  unint64_t result;

  result = qword_253EB5000;
  if (!qword_253EB5000)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C6C9C, &type metadata for AssessmentServerDestinations.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_253EB5000);
  }
  return result;
}

unint64_t sub_20A52672C()
{
  unint64_t result;

  result = qword_2545FB708;
  if (!qword_2545FB708)
  {
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for DUATaskType, &type metadata for DUATaskType);
    atomic_store(result, (unint64_t *)&qword_2545FB708);
  }
  return result;
}

unint64_t sub_20A526774()
{
  unint64_t result;

  result = qword_2545FB710;
  if (!qword_2545FB710)
  {
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for DsidType, &type metadata for DsidType);
    atomic_store(result, (unint64_t *)&qword_2545FB710);
  }
  return result;
}

unint64_t sub_20A5267BC()
{
  unint64_t result;

  result = qword_2545FB718;
  if (!qword_2545FB718)
  {
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for ArmandDataSource, &type metadata for ArmandDataSource);
    atomic_store(result, (unint64_t *)&qword_2545FB718);
  }
  return result;
}

unint64_t sub_20A526804()
{
  unint64_t result;

  result = qword_2545FB720;
  if (!qword_2545FB720)
  {
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for AssessmentConfigFieldName, &type metadata for AssessmentConfigFieldName);
    atomic_store(result, (unint64_t *)&qword_2545FB720);
  }
  return result;
}

unint64_t sub_20A52684C()
{
  unint64_t result;

  result = qword_2545FB728;
  if (!qword_2545FB728)
  {
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for ArmandDeviceDataFieldName, &type metadata for ArmandDeviceDataFieldName);
    atomic_store(result, (unint64_t *)&qword_2545FB728);
  }
  return result;
}

unint64_t sub_20A526894()
{
  unint64_t result;

  result = qword_2545FB730;
  if (!qword_2545FB730)
  {
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for ODIComputableBindingsName, &type metadata for ODIComputableBindingsName);
    atomic_store(result, (unint64_t *)&qword_2545FB730);
  }
  return result;
}

unint64_t sub_20A5268DC()
{
  unint64_t result;

  result = qword_2545FB738;
  if (!qword_2545FB738)
  {
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for ODIFormattedPhoneNumberBindings, &type metadata for ODIFormattedPhoneNumberBindings);
    atomic_store(result, (unint64_t *)&qword_2545FB738);
  }
  return result;
}

unint64_t sub_20A526924()
{
  unint64_t result;

  result = qword_2545FB740;
  if (!qword_2545FB740)
  {
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for ODIGeocoderBindingsName, &type metadata for ODIGeocoderBindingsName);
    atomic_store(result, (unint64_t *)&qword_2545FB740);
  }
  return result;
}

unint64_t sub_20A52696C()
{
  unint64_t result;

  result = qword_2545FB748;
  if (!qword_2545FB748)
  {
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for ODIDeviceSettingsBindingsName, &type metadata for ODIDeviceSettingsBindingsName);
    atomic_store(result, (unint64_t *)&qword_2545FB748);
  }
  return result;
}

unint64_t sub_20A5269B4()
{
  unint64_t result;

  result = qword_2545FB750;
  if (!qword_2545FB750)
  {
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for ODILocationBindingsName, &type metadata for ODILocationBindingsName);
    atomic_store(result, (unint64_t *)&qword_2545FB750);
  }
  return result;
}

unint64_t sub_20A5269FC()
{
  unint64_t result;

  result = qword_2545FB758;
  if (!qword_2545FB758)
  {
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for DeviceDataField, &type metadata for DeviceDataField);
    atomic_store(result, (unint64_t *)&qword_2545FB758);
  }
  return result;
}

unint64_t sub_20A526A44()
{
  unint64_t result;

  result = qword_2545FB760;
  if (!qword_2545FB760)
  {
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for AssessmentConfig.Sources, &type metadata for AssessmentConfig.Sources);
    atomic_store(result, (unint64_t *)&qword_2545FB760);
  }
  return result;
}

uint64_t type metadata accessor for RequestHeader()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for GenericResponse()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for DIPWebRequest()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for AppleCredentials()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for DIPAppleWebRequest()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for TrainingSignalId()
{
  return &type metadata for TrainingSignalId;
}

ValueMetadata *type metadata accessor for AssessmentGUIDContainer()
{
  return &type metadata for AssessmentGUIDContainer;
}

ValueMetadata *type metadata accessor for TSID()
{
  return &type metadata for TSID;
}

ValueMetadata *type metadata accessor for DUATaskType()
{
  return &type metadata for DUATaskType;
}

uint64_t destroy for AugmentedProfile()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for AugmentedProfile(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for AugmentedProfile(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  return a1;
}

_QWORD *assignWithTake for AugmentedProfile(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *a1 = *a2;
  swift_release();
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[4];
  a1[3] = a2[3];
  a1[4] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[6];
  a1[5] = a2[5];
  a1[6] = v6;
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  return a1;
}

uint64_t getEnumTagSinglePayload for AugmentedProfile(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AugmentedProfile(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AugmentedProfile()
{
  return &type metadata for AugmentedProfile;
}

ValueMetadata *type metadata accessor for DsidType()
{
  return &type metadata for DsidType;
}

uint64_t getEnumTagSinglePayload for ArmandDataSource(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF3)
    goto LABEL_17;
  if (a2 + 13 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 13) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 13;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 13;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 13;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xE;
  v8 = v6 - 14;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ArmandDataSource(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 13 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 13) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF3)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF2)
    return ((uint64_t (*)(void))((char *)&loc_20A526ED4 + 4 * byte_20A5C5018[v4]))();
  *a1 = a2 + 13;
  return ((uint64_t (*)(void))((char *)sub_20A526F08 + 4 * byte_20A5C5013[v4]))();
}

uint64_t sub_20A526F08(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A526F10(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A526F18);
  return result;
}

uint64_t sub_20A526F24(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A526F2CLL);
  *(_BYTE *)result = a2 + 13;
  return result;
}

uint64_t sub_20A526F30(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A526F38(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArmandDataSource()
{
  return &type metadata for ArmandDataSource;
}

uint64_t destroy for AssessmentConfigFieldName(uint64_t a1)
{
  return sub_20A45DDCC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s17CoreODIEssentials25AssessmentConfigFieldNameOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_20A45DDBC(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for AssessmentConfigFieldName(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_20A45DDBC(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_20A45DDCC(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for AssessmentConfigFieldName(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_20A45DDCC(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for AssessmentConfigFieldName(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AssessmentConfigFieldName(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_20A5270D4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_20A5270DC(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for AssessmentConfigFieldName()
{
  return &type metadata for AssessmentConfigFieldName;
}

uint64_t getEnumTagSinglePayload for ArmandDeviceDataFieldName(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xEF)
    goto LABEL_17;
  if (a2 + 17 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 17) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 17;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 17;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 17;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x12;
  v8 = v6 - 18;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ArmandDeviceDataFieldName(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 17 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 17) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEE)
    return ((uint64_t (*)(void))((char *)&loc_20A5271D4 + 4 * byte_20A5C5022[v4]))();
  *a1 = a2 + 17;
  return ((uint64_t (*)(void))((char *)sub_20A527208 + 4 * byte_20A5C501D[v4]))();
}

uint64_t sub_20A527208(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A527210(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A527218);
  return result;
}

uint64_t sub_20A527224(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A52722CLL);
  *(_BYTE *)result = a2 + 17;
  return result;
}

uint64_t sub_20A527230(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A527238(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArmandDeviceDataFieldName()
{
  return &type metadata for ArmandDeviceDataFieldName;
}

uint64_t storeEnumTagSinglePayload for ODIComputableBindingsName(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_20A5272A0 + 4 * byte_20A5C502C[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_20A5272D4 + 4 * byte_20A5C5027[v4]))();
}

uint64_t sub_20A5272D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A5272DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A5272E4);
  return result;
}

uint64_t sub_20A5272F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A5272F8);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_20A5272FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A527304(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ODIComputableBindingsName()
{
  return &type metadata for ODIComputableBindingsName;
}

ValueMetadata *type metadata accessor for ODIFormattedPhoneNumberBindings()
{
  return &type metadata for ODIFormattedPhoneNumberBindings;
}

uint64_t storeEnumTagSinglePayload for ODIGeocoderBindingsName(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_20A527380 + 4 * byte_20A5C5036[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_20A5273B4 + 4 * byte_20A5C5031[v4]))();
}

uint64_t sub_20A5273B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A5273BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A5273C4);
  return result;
}

uint64_t sub_20A5273D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A5273D8);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_20A5273DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A5273E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ODIGeocoderBindingsName()
{
  return &type metadata for ODIGeocoderBindingsName;
}

ValueMetadata *type metadata accessor for ODIDeviceSettingsBindingsName()
{
  return &type metadata for ODIDeviceSettingsBindingsName;
}

ValueMetadata *type metadata accessor for ODILocationBindingsName()
{
  return &type metadata for ODILocationBindingsName;
}

uint64_t destroy for DeviceDataField(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return sub_20A45DDCC(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t initializeWithCopy for DeviceDataField(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain();
  sub_20A45DDBC(v5, v6, v7);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  v8 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  return a1;
}

uint64_t assignWithCopy for DeviceDataField(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_BYTE *)(a2 + 32);
  sub_20A45DDBC(v4, v5, v6);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = v6;
  sub_20A45DDCC(v7, v8, v9);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v10;
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  return a1;
}

__n128 __swift_memcpy58_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 42) = *(_OWORD *)(a2 + 42);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for DeviceDataField(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_BYTE *)(a2 + 32);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_BYTE *)(a1 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = v5;
  sub_20A45DDCC(v6, v7, v8);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  v9 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v9;
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  return a1;
}

uint64_t getEnumTagSinglePayload for DeviceDataField(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 58))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DeviceDataField(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 56) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 58) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 58) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceDataField()
{
  return &type metadata for DeviceDataField;
}

uint64_t destroy for AssessmentConfig(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AssessmentConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(_QWORD *)(a2 + 8);
  if (v4)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v4;
    v5 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v5;
    v6 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v6;
    v7 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    v9 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v9;
  }
  v10 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v10;
  v11 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v11;
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_WORD *)(a1 + 97) = *(_WORD *)(a2 + 97);
  v12 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v12;
  v13 = *(_QWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AssessmentConfig(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;

  v4 = *((_QWORD *)a2 + 1);
  if (*(_QWORD *)(a1 + 8))
  {
    if (v4)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
      *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
      *(_QWORD *)(a1 + 56) = *((_QWORD *)a2 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_20A5279F0(a1);
      v5 = a2[3];
      v7 = *a2;
      v6 = a2[1];
      *(_OWORD *)(a1 + 32) = a2[2];
      *(_OWORD *)(a1 + 48) = v5;
      *(_OWORD *)a1 = v7;
      *(_OWORD *)(a1 + 16) = v6;
    }
  }
  else if (v4)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
    *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
    *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 3);
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
    *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
    *(_QWORD *)(a1 + 56) = *((_QWORD *)a2 + 7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v8 = *a2;
    v9 = a2[1];
    v10 = a2[3];
    *(_OWORD *)(a1 + 32) = a2[2];
    *(_OWORD *)(a1 + 48) = v10;
    *(_OWORD *)a1 = v8;
    *(_OWORD *)(a1 + 16) = v9;
  }
  *(_QWORD *)(a1 + 64) = *((_QWORD *)a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *((_QWORD *)a2 + 10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *((_QWORD *)a2 + 11);
  *(_BYTE *)(a1 + 96) = *((_BYTE *)a2 + 96);
  *(_BYTE *)(a1 + 97) = *((_BYTE *)a2 + 97);
  *(_BYTE *)(a1 + 98) = *((_BYTE *)a2 + 98);
  *(_QWORD *)(a1 + 104) = *((_QWORD *)a2 + 13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *((_QWORD *)a2 + 14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = *((_QWORD *)a2 + 15);
  *(_BYTE *)(a1 + 128) = *((_BYTE *)a2 + 128);
  *(_QWORD *)(a1 + 120) = v11;
  return a1;
}

uint64_t sub_20A5279F0(uint64_t a1)
{
  destroy for ODIClientGUIDSeeds();
  return a1;
}

__n128 __swift_memcpy129_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t assignWithTake for AssessmentConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;

  if (!*(_QWORD *)(a1 + 8))
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (!v4)
  {
    sub_20A5279F0(a1);
LABEL_5:
    v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    v9 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v9;
    goto LABEL_6;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
LABEL_6:
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_BYTE *)(a1 + 97) = *(_BYTE *)(a2 + 97);
  *(_BYTE *)(a1 + 98) = *(_BYTE *)(a2 + 98);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  return a1;
}

uint64_t getEnumTagSinglePayload for AssessmentConfig(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 129))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 64);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AssessmentConfig(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 128) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 129) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 64) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 129) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AssessmentConfig()
{
  return &type metadata for AssessmentConfig;
}

uint64_t getEnumTagSinglePayload for AssessmentConfig.Sources(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AssessmentConfig.Sources(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_20A527CF4 + 4 * byte_20A5C5040[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_20A527D28 + 4 * byte_20A5C503B[v4]))();
}

uint64_t sub_20A527D28(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A527D30(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A527D38);
  return result;
}

uint64_t sub_20A527D44(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A527D4CLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_20A527D50(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A527D58(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AssessmentConfig.Sources()
{
  return &type metadata for AssessmentConfig.Sources;
}

ValueMetadata *type metadata accessor for AssessmentServerDestinations()
{
  return &type metadata for AssessmentServerDestinations;
}

uint64_t destroy for ResponseHeader()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ResponseHeader(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ResponseHeader(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for ResponseHeader(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ResponseHeader(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 96))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ResponseHeader(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 96) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ResponseHeader()
{
  return &type metadata for ResponseHeader;
}

uint64_t destroy for ORDRequest(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 40))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 160) != 1)
    swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for ORDRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v6;
    v7 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = v7;
    v8 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = v8;
    v9 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v10 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v10;
    v11 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v11;
  }
  v12 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v12;
  v13 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v13;
  v14 = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v14 == 1)
  {
    v15 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v15;
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  }
  else
  {
    v16 = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = v16;
    *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 160) = v14;
    swift_bridgeObjectRetain();
  }
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  v17 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v17;
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ORDRequest(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  __int128 *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 *v13;
  __int128 *v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 32);
  v5 = (__int128 *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 40);
  if (*(_QWORD *)(a1 + 40))
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_20A464794(a1 + 32);
      v7 = *(_OWORD *)(a2 + 80);
      v9 = *v5;
      v8 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v7;
      *v4 = v9;
      *(_OWORD *)(a1 + 48) = v8;
    }
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v10 = *v5;
    v11 = *(_OWORD *)(a2 + 48);
    v12 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v12;
    *v4 = v10;
    *(_OWORD *)(a1 + 48) = v11;
  }
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = (__int128 *)(a1 + 128);
  v14 = (__int128 *)(a2 + 128);
  v15 = *(_QWORD *)(a2 + 160);
  if (*(_QWORD *)(a1 + 160) == 1)
  {
    if (v15 == 1)
    {
      v16 = *v14;
      v17 = *(_OWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      *v13 = v16;
      *(_OWORD *)(a1 + 144) = v17;
    }
    else
    {
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      v20 = *(_QWORD *)(a2 + 136);
      *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
      *(_QWORD *)(a1 + 136) = v20;
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      swift_bridgeObjectRetain();
    }
  }
  else if (v15 == 1)
  {
    sub_20A4647C8(a1 + 128);
    v18 = *(_QWORD *)(a2 + 160);
    v19 = *(_OWORD *)(a2 + 144);
    *v13 = *v14;
    *(_OWORD *)(a1 + 144) = v19;
    *(_QWORD *)(a1 + 160) = v18;
  }
  else
  {
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    v21 = *(_QWORD *)(a2 + 136);
    *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
    *(_QWORD *)(a1 + 136) = v21;
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_retain();
  swift_release();
  v22 = *(_QWORD *)(a2 + 184);
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  *(_QWORD *)(a1 + 184) = v22;
  v23 = *(_QWORD *)(a2 + 200);
  *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
  *(_QWORD *)(a1 + 200) = v23;
  return a1;
}

__n128 __swift_memcpy209_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __n128 result;
  __int128 v10;
  __int128 v11;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  result = *(__n128 *)(a2 + 160);
  v10 = *(_OWORD *)(a2 + 176);
  v11 = *(_OWORD *)(a2 + 192);
  *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 192) = v11;
  *(__n128 *)(a1 + 160) = result;
  return result;
}

uint64_t assignWithTake for ORDRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 40))
  {
    v6 = *(_QWORD *)(a2 + 40);
    if (v6)
    {
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = v6;
      swift_bridgeObjectRelease();
      v7 = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = v7;
      swift_bridgeObjectRelease();
      v8 = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = v8;
      swift_bridgeObjectRelease();
      v9 = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = v9;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_20A464794(a1 + 32);
  }
  v10 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v10;
  v11 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v11;
LABEL_6:
  v12 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v12;
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v13;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 160) != 1)
  {
    v14 = *(_QWORD *)(a2 + 160);
    if (v14 != 1)
    {
      v16 = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 136) = v16;
      *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 160) = v14;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_20A4647C8(a1 + 128);
  }
  v15 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v15;
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
LABEL_11:
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_release();
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
  return a1;
}

uint64_t getEnumTagSinglePayload for ORDRequest(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 209))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ORDRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 200) = 0;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 208) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 209) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 209) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ORDRequest()
{
  return &type metadata for ORDRequest;
}

uint64_t destroy for OTDRequest(uint64_t a1)
{
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 32))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (*(_QWORD *)(a1 + 192) != 1)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for OTDRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  if (v5)
  {
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = v5;
    v6 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = v6;
    v7 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = v7;
    v8 = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v9 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = v9;
    v10 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v10;
  }
  v11 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v11;
  v12 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v12;
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  v13 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v13;
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  v14 = *(_QWORD *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (v14 == 1)
  {
    v15 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v15;
    *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  }
  else
  {
    v16 = *(_QWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    *(_QWORD *)(a1 + 168) = v16;
    *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    *(_QWORD *)(a1 + 192) = v14;
    swift_bridgeObjectRetain();
  }
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
  v17 = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = v17;
  v18 = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = v18;
  *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
  *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  v19 = *(_QWORD *)(a2 + 272);
  v20 = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 272) = v19;
  *(_QWORD *)(a1 + 280) = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for OTDRequest(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  __int128 *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  __int128 *v14;
  __int128 *v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = (_OWORD *)(a1 + 24);
  v5 = (__int128 *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 32))
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_20A464794(a1 + 24);
      v7 = *(_OWORD *)(a2 + 72);
      v9 = *v5;
      v8 = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 72) = v7;
      *v4 = v9;
      *(_OWORD *)(a1 + 40) = v8;
    }
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v10 = *v5;
    v11 = *(_OWORD *)(a2 + 40);
    v12 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v12;
    *v4 = v10;
    *(_OWORD *)(a1 + 40) = v11;
  }
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_retain();
  swift_release();
  v13 = *(_QWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = v13;
  v14 = (__int128 *)(a1 + 160);
  v15 = (__int128 *)(a2 + 160);
  v16 = *(_QWORD *)(a2 + 192);
  if (*(_QWORD *)(a1 + 192) == 1)
  {
    if (v16 == 1)
    {
      v17 = *v15;
      v18 = *(_OWORD *)(a2 + 176);
      *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
      *v14 = v17;
      *(_OWORD *)(a1 + 176) = v18;
    }
    else
    {
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      v21 = *(_QWORD *)(a2 + 168);
      *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
      *(_QWORD *)(a1 + 168) = v21;
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
      swift_bridgeObjectRetain();
    }
  }
  else if (v16 == 1)
  {
    sub_20A4647C8(a1 + 160);
    v19 = *(_QWORD *)(a2 + 192);
    v20 = *(_OWORD *)(a2 + 176);
    *v14 = *v15;
    *(_OWORD *)(a1 + 176) = v20;
    *(_QWORD *)(a1 + 192) = v19;
  }
  else
  {
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    v22 = *(_QWORD *)(a2 + 168);
    *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
    *(_QWORD *)(a1 + 168) = v22;
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v23 = *(_QWORD *)(a2 + 200);
  *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
  *(_QWORD *)(a1 + 200) = v23;
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v24 = *(_QWORD *)(a2 + 240);
  *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
  *(_QWORD *)(a1 + 240) = v24;
  v25 = *(_QWORD *)(a2 + 256);
  *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
  *(_QWORD *)(a1 + 256) = v25;
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy288_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x120uLL);
}

uint64_t assignWithTake for OTDRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  if (*(_QWORD *)(a1 + 32))
  {
    v5 = *(_QWORD *)(a2 + 32);
    if (v5)
    {
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = v5;
      swift_bridgeObjectRelease();
      v6 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = v6;
      swift_bridgeObjectRelease();
      v7 = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = v7;
      swift_bridgeObjectRelease();
      v8 = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = v8;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_20A464794(a1 + 24);
  }
  v9 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = v9;
  v10 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = v10;
LABEL_6:
  v11 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v12;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_release();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  if (*(_QWORD *)(a1 + 192) != 1)
  {
    v13 = *(_QWORD *)(a2 + 192);
    if (v13 != 1)
    {
      v15 = *(_QWORD *)(a2 + 168);
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      *(_QWORD *)(a1 + 168) = v15;
      *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      *(_QWORD *)(a1 + 192) = v13;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_20A4647C8(a1 + 160);
  }
  v14 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v14;
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
LABEL_11:
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
  v16 = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = v16;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
  v17 = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = v17;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for OTDRequest(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 288))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OTDRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 280) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 288) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 288) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for OTDRequest()
{
  return &type metadata for OTDRequest;
}

uint64_t destroy for ODNErrorInfo()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ODNErrorInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ODNErrorInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ODNErrorInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ODNErrorInfo(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 32);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ODNErrorInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_QWORD *)(result + 32) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ODNErrorInfo()
{
  return &type metadata for ODNErrorInfo;
}

ValueMetadata *type metadata accessor for AssessmentServerDestinations.CodingKeys()
{
  return &type metadata for AssessmentServerDestinations.CodingKeys;
}

ValueMetadata *type metadata accessor for DeviceFieldsList()
{
  return &type metadata for DeviceFieldsList;
}

ValueMetadata *type metadata accessor for AssessmentConfig.Triggers()
{
  return &type metadata for AssessmentConfig.Triggers;
}

ValueMetadata *type metadata accessor for AssessmentConfig.CodingKeys()
{
  return &type metadata for AssessmentConfig.CodingKeys;
}

ValueMetadata *type metadata accessor for DeviceDataField.CodingKeys()
{
  return &type metadata for DeviceDataField.CodingKeys;
}

ValueMetadata *type metadata accessor for AssessmentConfigFieldName.CodingKeys()
{
  return &type metadata for AssessmentConfigFieldName.CodingKeys;
}

ValueMetadata *type metadata accessor for AssessmentConfigFieldName.DeviceDataFieldCodingKeys()
{
  return &type metadata for AssessmentConfigFieldName.DeviceDataFieldCodingKeys;
}

ValueMetadata *type metadata accessor for AssessmentConfigFieldName.BindingsFieldCodingKeys()
{
  return &type metadata for AssessmentConfigFieldName.BindingsFieldCodingKeys;
}

uint64_t _s17CoreODIEssentials16AssessmentConfigV8TriggersOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_20A529218 + 4 * byte_20A5C504A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_20A52924C + 4 * byte_20A5C5045[v4]))();
}

uint64_t sub_20A52924C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A529254(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A52925CLL);
  return result;
}

uint64_t sub_20A529268(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A529270);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_20A529274(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A52927C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AugmentedProfile.CodingKeys()
{
  return &type metadata for AugmentedProfile.CodingKeys;
}

ValueMetadata *type metadata accessor for TSID.CodingKeys()
{
  return &type metadata for TSID.CodingKeys;
}

ValueMetadata *type metadata accessor for AssessmentGUIDContainer.CodingKeys()
{
  return &type metadata for AssessmentGUIDContainer.CodingKeys;
}

ValueMetadata *type metadata accessor for TrainingSignalId.CodingKeys()
{
  return &type metadata for TrainingSignalId.CodingKeys;
}

uint64_t destroy for AssessmentAdditionalInfo()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AssessmentAdditionalInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  v8 = *(_QWORD *)(a2 + 64);
  v7 = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 64) = v8;
  *(_QWORD *)(a1 + 72) = v7;
  v9 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v9;
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AssessmentAdditionalInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_retain();
  swift_release();
  v4 = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v4;
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  return a1;
}

uint64_t assignWithTake for AssessmentAdditionalInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  return a1;
}

uint64_t getEnumTagSinglePayload for AssessmentAdditionalInfo(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 129))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AssessmentAdditionalInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 128) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 129) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 129) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AssessmentAdditionalInfo()
{
  return &type metadata for AssessmentAdditionalInfo;
}

unint64_t sub_20A52967C()
{
  unint64_t result;

  result = qword_2545FB768;
  if (!qword_2545FB768)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C626C, &type metadata for TrainingSignalId.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FB768);
  }
  return result;
}

unint64_t sub_20A5296C4()
{
  unint64_t result;

  result = qword_2545FB770;
  if (!qword_2545FB770)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C6324, &type metadata for AssessmentGUIDContainer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FB770);
  }
  return result;
}

unint64_t sub_20A52970C()
{
  unint64_t result;

  result = qword_2545FB778;
  if (!qword_2545FB778)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C63DC, &type metadata for TSID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FB778);
  }
  return result;
}

unint64_t sub_20A529754()
{
  unint64_t result;

  result = qword_2545FB780;
  if (!qword_2545FB780)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C64CC, &type metadata for AugmentedProfile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FB780);
  }
  return result;
}

unint64_t sub_20A52979C()
{
  unint64_t result;

  result = qword_2545FB788;
  if (!qword_2545FB788)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C6584, &type metadata for AssessmentConfigFieldName.BindingsFieldCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FB788);
  }
  return result;
}

unint64_t sub_20A5297E4()
{
  unint64_t result;

  result = qword_2545FB790;
  if (!qword_2545FB790)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C663C, &type metadata for AssessmentConfigFieldName.DeviceDataFieldCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FB790);
  }
  return result;
}

unint64_t sub_20A52982C()
{
  unint64_t result;

  result = qword_2545FB798;
  if (!qword_2545FB798)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C66F4, &type metadata for AssessmentConfigFieldName.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FB798);
  }
  return result;
}

unint64_t sub_20A529874()
{
  unint64_t result;

  result = qword_2545FB7A0;
  if (!qword_2545FB7A0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C67AC, &type metadata for DeviceDataField.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FB7A0);
  }
  return result;
}

unint64_t sub_20A5298BC()
{
  unint64_t result;

  result = qword_2545FB7A8;
  if (!qword_2545FB7A8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C689C, &type metadata for AssessmentConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FB7A8);
  }
  return result;
}

unint64_t sub_20A529904()
{
  unint64_t result;

  result = qword_2545FB7B0;
  if (!qword_2545FB7B0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C6964, &type metadata for AssessmentConfig.Triggers);
    atomic_store(result, (unint64_t *)&qword_2545FB7B0);
  }
  return result;
}

unint64_t sub_20A52994C()
{
  unint64_t result;

  result = qword_2545FB7B8;
  if (!qword_2545FB7B8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C6A1C, &type metadata for AssessmentServerDestinations.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FB7B8);
  }
  return result;
}

unint64_t sub_20A529994()
{
  unint64_t result;

  result = qword_253EB5010;
  if (!qword_253EB5010)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C698C, &type metadata for AssessmentServerDestinations.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_253EB5010);
  }
  return result;
}

unint64_t sub_20A5299DC()
{
  unint64_t result;

  result = qword_253EB5008;
  if (!qword_253EB5008)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C69B4, &type metadata for AssessmentServerDestinations.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_253EB5008);
  }
  return result;
}

unint64_t sub_20A529A24()
{
  unint64_t result;

  result = qword_253EB4F28;
  if (!qword_253EB4F28)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C67D4, &type metadata for AssessmentConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_253EB4F28);
  }
  return result;
}

unint64_t sub_20A529A6C()
{
  unint64_t result;

  result = qword_253EB4F20;
  if (!qword_253EB4F20)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C67FC, &type metadata for AssessmentConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_253EB4F20);
  }
  return result;
}

unint64_t sub_20A529AB4()
{
  unint64_t result;

  result = qword_253EB4EF8;
  if (!qword_253EB4EF8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C671C, &type metadata for DeviceDataField.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_253EB4EF8);
  }
  return result;
}

unint64_t sub_20A529AFC()
{
  unint64_t result;

  result = qword_253EB4EF0;
  if (!qword_253EB4EF0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C6744, &type metadata for DeviceDataField.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_253EB4EF0);
  }
  return result;
}

unint64_t sub_20A529B44()
{
  unint64_t result;

  result = qword_2545FB7C0;
  if (!qword_2545FB7C0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C65AC, &type metadata for AssessmentConfigFieldName.DeviceDataFieldCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FB7C0);
  }
  return result;
}

unint64_t sub_20A529B8C()
{
  unint64_t result;

  result = qword_2545FB7C8;
  if (!qword_2545FB7C8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C65D4, &type metadata for AssessmentConfigFieldName.DeviceDataFieldCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FB7C8);
  }
  return result;
}

unint64_t sub_20A529BD4()
{
  unint64_t result;

  result = qword_2545FB7D0;
  if (!qword_2545FB7D0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C64F4, &type metadata for AssessmentConfigFieldName.BindingsFieldCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FB7D0);
  }
  return result;
}

unint64_t sub_20A529C1C()
{
  unint64_t result;

  result = qword_2545FB7D8;
  if (!qword_2545FB7D8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C651C, &type metadata for AssessmentConfigFieldName.BindingsFieldCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FB7D8);
  }
  return result;
}

unint64_t sub_20A529C64()
{
  unint64_t result;

  result = qword_2545FB7E0;
  if (!qword_2545FB7E0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C6664, &type metadata for AssessmentConfigFieldName.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FB7E0);
  }
  return result;
}

unint64_t sub_20A529CAC()
{
  unint64_t result;

  result = qword_2545FB7E8;
  if (!qword_2545FB7E8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C668C, &type metadata for AssessmentConfigFieldName.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FB7E8);
  }
  return result;
}

unint64_t sub_20A529CF4()
{
  unint64_t result;

  result = qword_253EB4F58;
  if (!qword_253EB4F58)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C6404, &type metadata for AugmentedProfile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_253EB4F58);
  }
  return result;
}

unint64_t sub_20A529D3C()
{
  unint64_t result;

  result = qword_253EB4F50;
  if (!qword_253EB4F50)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C642C, &type metadata for AugmentedProfile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_253EB4F50);
  }
  return result;
}

unint64_t sub_20A529D84()
{
  unint64_t result;

  result = qword_253EB4730;
  if (!qword_253EB4730)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C634C, &type metadata for TSID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_253EB4730);
  }
  return result;
}

unint64_t sub_20A529DCC()
{
  unint64_t result;

  result = qword_253EB4728;
  if (!qword_253EB4728)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C6374, &type metadata for TSID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_253EB4728);
  }
  return result;
}

unint64_t sub_20A529E14()
{
  unint64_t result;

  result = qword_253EB46F0;
  if (!qword_253EB46F0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C6294, &type metadata for AssessmentGUIDContainer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_253EB46F0);
  }
  return result;
}

unint64_t sub_20A529E5C()
{
  unint64_t result;

  result = qword_253EB46E8;
  if (!qword_253EB46E8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C62BC, &type metadata for AssessmentGUIDContainer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_253EB46E8);
  }
  return result;
}

unint64_t sub_20A529EA4()
{
  unint64_t result;

  result = qword_253EB4558;
  if (!qword_253EB4558)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C61DC, &type metadata for TrainingSignalId.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_253EB4558);
  }
  return result;
}

unint64_t sub_20A529EEC()
{
  unint64_t result;

  result = qword_253EB4550;
  if (!qword_253EB4550)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C6204, &type metadata for TrainingSignalId.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_253EB4550);
  }
  return result;
}

void sub_20A529F30()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;
  int v8;
  id v9;
  uint64_t v10;
  char v11;
  __int128 v12;
  __int128 v13;

  v0 = sub_20A47B2F4();
  v1 = (void *)sub_20A5B8414();
  v2 = objc_msgSend(v1, sel_domain);
  v3 = sub_20A5B8900();
  v5 = v4;

  if (v3 == 0x726F72724549444FLL && v5 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = sub_20A5B91AC();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0)
    {

      v8 = 0;
      if (!v0)
      {
LABEL_7:
        v12 = 0u;
        v13 = 0u;
        goto LABEL_18;
      }
LABEL_13:
      if (*(_QWORD *)(v0 + 16) && (v10 = sub_20A470960(13), (v11 & 1) != 0))
      {
        sub_20A44FD78(*(_QWORD *)(v0 + 56) + 32 * v10, (uint64_t)&v12);
        swift_bridgeObjectRelease();
        if (*((_QWORD *)&v13 + 1))
        {
          swift_dynamicCast();
          goto LABEL_19;
        }
      }
      else
      {
        v12 = 0u;
        v13 = 0u;
        swift_bridgeObjectRelease();
      }
LABEL_18:
      sub_20A44FDFC((uint64_t)&v12);
LABEL_19:
      __asm { BR              X13 }
    }
  }
  v9 = objc_msgSend(v1, sel_code);

  ODIErrorCode.init(rawValue:)((Swift::Int)v9);
  if (v12 == 209)
    v8 = 0;
  else
    v8 = v12;
  if (!v0)
    goto LABEL_7;
  goto LABEL_13;
}

void sub_20A52A0F0(uint64_t a1@<X8>)
{
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)v4 = -2;
  *(_QWORD *)(v4 + 8) = a1;
  *(_BYTE *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = v3;
  *(_QWORD *)(v4 + 32) = v2;
}

uint64_t sub_20A52AB68(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x61737265766E6F63 && a2 == 0xEE0064496E6F6974;
  if (v2 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4974736575716572 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_20A5B91AC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_20A52AC88(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x61737265766E6F63 && a2 == 0xEE0064496E6F6974;
  if (v2 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4974736575716572 && a2 == 0xE900000000000064 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65736E6F70736572 && a2 == 0xEA00000000006449 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F43737574617473 && a2 == 0xEA00000000006564 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7574617453627573 && a2 == 0xED000065646F4373 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x654D737574617473 && a2 == 0xED00006567617373)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_20A5B91AC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_20A52AF90@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;
  char v42;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB830);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A52DFF4();
  sub_20A5B92F0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v42 = 0;
  v10 = sub_20A5B9038();
  v12 = v11;
  v41 = 1;
  swift_bridgeObjectRetain();
  v34 = sub_20A5B9074();
  v40 = 2;
  v36 = v13;
  swift_bridgeObjectRetain();
  v14 = sub_20A5B9074();
  v35 = v15;
  v31 = v14;
  v39 = 3;
  swift_bridgeObjectRetain();
  v32 = 0;
  v30 = sub_20A5B9074();
  v38 = 4;
  v33 = v16;
  swift_bridgeObjectRetain();
  v28 = sub_20A5B9038();
  v29 = v17;
  v37 = 5;
  swift_bridgeObjectRetain();
  v18 = sub_20A5B9038();
  v20 = v19;
  v21 = *(void (**)(char *, uint64_t))(v6 + 8);
  v32 = v18;
  v21(v9, v5);
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  v22 = v29;
  swift_bridgeObjectRelease();
  v23 = v33;
  swift_bridgeObjectRelease();
  v24 = v35;
  swift_bridgeObjectRelease();
  v25 = v36;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a2 = v10;
  a2[1] = v12;
  a2[2] = v34;
  a2[3] = v25;
  a2[4] = v31;
  a2[5] = v24;
  a2[6] = v30;
  a2[7] = v23;
  a2[8] = v28;
  a2[9] = v22;
  a2[10] = v32;
  a2[11] = v20;
  return result;
}

uint64_t sub_20A52B3A0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7A69726F68747561 && a2 == 0xED00006E6F697461;
  if (v2 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6449656369766564 && a2 == 0xE800000000000000 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E49746E65696C63 && a2 == 0xEA00000000006F66)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_20A5B91AC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_20A52B524(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000;
  if (v2 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000020A5E4580)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_20A5B91AC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_20A52B610(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000;
  if (v2 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656D737365737361 && a2 == 0xEF646975675F746ELL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_20A5B91AC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_20A52B724(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x776F6C666B726F77 && a2 == 0xEA00000000006449;
  if (v2 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x49656C69666F7270 && a2 == 0xE900000000000064 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E65674172657375 && a2 == 0xE900000000000074 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000020A5DA8B0 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x800000020A5E47F0 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000002DLL && a2 == 0x800000020A5E4820 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x42676E697373696DLL && a2 == 0xEF73676E69646E69 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000020A5E4850 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000020A5E4870 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6567416568636163 && a2 == 0xE800000000000000 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6563697665447369 && a2 == 0xEE0064656B636F4CLL)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    v6 = sub_20A5B91AC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 10;
    else
      return 11;
  }
}

uint64_t sub_20A52BBC0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6F6C79615069646FLL && a2 == 0xEA00000000006461;
  if (v2 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7364656573 && a2 == 0xE500000000000000 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x666E49726F727265 && a2 == 0xE90000000000006FLL || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E6F697469646461 && a2 == 0xEE006F666E496C61)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_20A5B91AC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_20A52BDAC(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000012 && a2 == 0x800000020A5E46E0 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x617461645F617564 && a2 == 0xE800000000000000 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7364656573 && a2 == 0xE500000000000000 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x776F6C666B726F77 && a2 == 0xEB0000000064695FLL || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x5F656C69666F7270 && a2 == 0xEA00000000006469 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x726F727265 && a2 == 0xE500000000000000 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000020A5DA7F0 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000026 && a2 == 0x800000020A5DA850 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000033 && a2 == 0x800000020A5DA810 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x5F64616F6C796170 && a2 == 0xEE006572756E6574)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    v5 = sub_20A5B91AC();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 9;
    else
      return 10;
  }
}

uint64_t sub_20A52C1D0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6F7272655F766469 && a2 == 0xE900000000000072;
  if (v2 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F7272655F6E646FLL && a2 == 0xE900000000000072 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x776F6C666B726F77 && a2 == 0xEB0000000064695FLL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_20A5B91AC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_20A52C354@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  int v19;
  char v20;
  char v21;
  char v22;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB8A0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A52E18C();
  sub_20A5B92F0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v22 = 0;
  v10 = sub_20A5B9098();
  v21 = 1;
  v11 = sub_20A5B905C();
  v19 = v12;
  v20 = 2;
  v13 = sub_20A5B9038();
  v14 = v9;
  v16 = v15;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v14, v5);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v11;
  *(_BYTE *)(a2 + 16) = v19 & 1;
  *(_QWORD *)(a2 + 24) = v13;
  *(_QWORD *)(a2 + 32) = v16;
  return result;
}

uint64_t sub_20A52C4E4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1684632436 && a2 == 0xE400000000000000;
  if (v2 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x5F6E6F6973736573 && a2 == 0xEA00000000006469 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65636E6F6E5F7374 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_20A5B91AC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_20A52C634(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x64616F6C796170 && a2 == 0xE700000000000000;
  if (v2 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x695F747365676964 && a2 == 0xEC0000007865646ELL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_20A5B91AC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_20A52C73C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE v10[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FBAD8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A53024C();
  sub_20A5B92F0();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v10[15] = 0;
    v8 = sub_20A5B9074();
    v10[14] = 1;
    swift_bridgeObjectRetain();
    sub_20A5B9098();
    (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v7, v3);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v8;
}

uint64_t sub_20A52C8CC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x617461645F617564 && a2 == 0xE800000000000000;
  if (v2 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7079745F6B736174 && a2 == 0xE900000000000065 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000020A5DA7F0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_20A5B91AC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_20A52CA8C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E6F635F64697374 && a2 == 0xEE0072656E696174;
  if (v2 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7364656573 && a2 == 0xE500000000000000 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x776F6C666B726F77 && a2 == 0xEB0000000064695FLL || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x617461645F617564 && a2 == 0xEC0000006775615FLL || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000020A5DA7F0 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x800000020A5E4700 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000030 && a2 == 0x800000020A5E4730 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x726F727265 && a2 == 0xE500000000000000 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6B63616264656566 && a2 == 0xEF676E696D69745FLL || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6B63616264656566 && a2 == 0xED0000657079745FLL || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000020A5E4770 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000020A5E4790 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000020A5E47B0 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000020A5E47D0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else
  {
    v6 = sub_20A5B91AC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 14;
    else
      return 15;
  }
}

uint64_t sub_20A52D0C0()
{
  unint64_t v0;

  v0 = sub_20A5B9008();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

uint64_t sub_20A52D104(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6144656369766564 && a2 == 0xEF646C6569466174;
  if (v2 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73676E69646E6962 && a2 == 0xED0000646C656946)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_20A5B91AC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_20A52D23C(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D614E646C656966 && a2 == 0xE900000000000065 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656372756F73 && a2 == 0xE600000000000000 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x797469726F697270 && a2 == 0xE800000000000000 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4D74756F656D6974 && a2 == 0xEC000000696C6C69 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x67656C6976697270 && a2 == 0xEA00000000006465)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v5 = sub_20A5B91AC();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_20A52D4EC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D614E646C656966 && a2 == 0xE900000000000065 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656372756F73 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_20A5B91AC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_20A52D650@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FBA88);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A530208();
  sub_20A5B92F0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v28 = 0;
  v10 = sub_20A5B9038();
  v12 = v11;
  v25 = v10;
  v27 = 1;
  swift_bridgeObjectRetain();
  v13 = sub_20A5B9038();
  v15 = v14;
  v23 = v13;
  v26 = 2;
  swift_bridgeObjectRetain();
  v24 = v15;
  v16 = sub_20A5B9038();
  v18 = v17;
  v19 = v16;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  v20 = v24;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a2 = v25;
  a2[1] = v12;
  a2[2] = v23;
  a2[3] = v20;
  a2[4] = v19;
  a2[5] = v18;
  return result;
}

_QWORD *sub_20A52D884(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  int v10;
  uint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  unsigned __int8 v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  _QWORD v35[3];
  uint64_t v36;
  uint64_t v37;

  v2 = (uint64_t)a1;
  v3 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A5B92D8();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1(v2);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v35, v36);
    v4 = sub_20A5B9194();
    v3 = (_QWORD *)MEMORY[0x24BEE4AF8];
    if ((v4 & 1) == 0)
    {
      v23 = v2;
      do
      {
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v35, v36);
        sub_20A52DCE8();
        sub_20A5B9188();
        v5 = v25;
        v6 = v26;
        v7 = v27;
        v8 = v28;
        v9 = v29;
        v10 = v30;
        v11 = v31;
        v22 = v32;
        v20 = v34;
        v21 = v33;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        LODWORD(v37) = v10;
        v24 = v9;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          v3 = sub_20A46FB88(0, v3[2] + 1, 1, v3);
        v14 = v3[2];
        v13 = v3[3];
        v15 = v3;
        v16 = v11;
        if (v14 >= v13 >> 1)
          v15 = sub_20A46FB88((_QWORD *)(v13 > 1), v14 + 1, 1, v3);
        v17 = v15;
        v15[2] = v14 + 1;
        v18 = &v15[8 * v14];
        v18[4] = v5;
        v18[5] = v6;
        v18[6] = v7;
        v18[7] = v8;
        *((_BYTE *)v18 + 64) = v24;
        *((_BYTE *)v18 + 65) = v37;
        v18[9] = v16;
        v18[10] = v22;
        *((_BYTE *)v18 + 88) = v21;
        *((_BYTE *)v18 + 89) = v20;
        __swift_project_boxed_opaque_existential_1(v35, v36);
        v3 = v17;
        v2 = v23;
      }
      while ((sub_20A5B9194() & 1) == 0);
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
    __swift_destroy_boxed_opaque_existential_1(v2);
  }
  return v3;
}

uint64_t sub_20A52DCA0()
{
  unint64_t v0;

  v0 = sub_20A5B9008();
  swift_bridgeObjectRelease();
  if (v0 >= 0xB)
    return 11;
  else
    return v0;
}

unint64_t sub_20A52DCE8()
{
  unint64_t result;

  result = qword_253EB4F00;
  if (!qword_253EB4F00)
  {
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for DeviceDataField, &type metadata for DeviceDataField);
    atomic_store(result, (unint64_t *)&qword_253EB4F00);
  }
  return result;
}

unint64_t sub_20A52DD2C()
{
  unint64_t result;

  result = qword_2545FB7F0;
  if (!qword_2545FB7F0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C7D04, &type metadata for DeviceFieldsList.RelaxedDeviceDataField);
    atomic_store(result, (unint64_t *)&qword_2545FB7F0);
  }
  return result;
}

uint64_t sub_20A52DD70(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 6582895 && a2 == 0xE300000000000000;
  if (v3 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 6583407 && a2 == 0xE300000000000000 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 6581359 && a2 == 0xE300000000000000 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000020A5E4600)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_20A5B91AC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

unint64_t sub_20A52DEE4()
{
  unint64_t result;

  result = qword_2545FB800;
  if (!qword_2545FB800)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C7CB4, &type metadata for RequestHeader.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FB800);
  }
  return result;
}

unint64_t sub_20A52DF28()
{
  unint64_t result;

  result = qword_2545FB810;
  if (!qword_2545FB810)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C7C64, &type metadata for GenericResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FB810);
  }
  return result;
}

unint64_t sub_20A52DF6C()
{
  unint64_t result;

  result = qword_2545FB818;
  if (!qword_2545FB818)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C6B34, &type metadata for ResponseHeader);
    atomic_store(result, (unint64_t *)&qword_2545FB818);
  }
  return result;
}

unint64_t sub_20A52DFB0()
{
  unint64_t result;

  result = qword_2545FB828;
  if (!qword_2545FB828)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C7C14, &type metadata for AppleCredentials.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FB828);
  }
  return result;
}

unint64_t sub_20A52DFF4()
{
  unint64_t result;

  result = qword_2545FB838;
  if (!qword_2545FB838)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C7BC4, &type metadata for ResponseHeader.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FB838);
  }
  return result;
}

unint64_t sub_20A52E038()
{
  unint64_t result;

  result = qword_2545FB850;
  if (!qword_2545FB850)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C7B74, &type metadata for ORDRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FB850);
  }
  return result;
}

unint64_t sub_20A52E07C()
{
  unint64_t result;

  result = qword_2545FB860;
  if (!qword_2545FB860)
  {
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for ODIClientGUIDSeeds, &type metadata for ODIClientGUIDSeeds);
    atomic_store(result, (unint64_t *)&qword_2545FB860);
  }
  return result;
}

unint64_t sub_20A52E0C0()
{
  unint64_t result;

  result = qword_2545FB870;
  if (!qword_2545FB870)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C7B24, &type metadata for OTDRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FB870);
  }
  return result;
}

unint64_t sub_20A52E104()
{
  unint64_t result;

  result = qword_2545FB878;
  if (!qword_2545FB878)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C7AFC, &type metadata for TSIDContainer);
    atomic_store(result, (unint64_t *)&qword_2545FB878);
  }
  return result;
}

unint64_t sub_20A52E148()
{
  unint64_t result;

  result = qword_2545FB898;
  if (!qword_2545FB898)
  {
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for FeedbackState, &type metadata for FeedbackState);
    atomic_store(result, (unint64_t *)&qword_2545FB898);
  }
  return result;
}

unint64_t sub_20A52E18C()
{
  unint64_t result;

  result = qword_2545FB8A8;
  if (!qword_2545FB8A8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C7AAC, &type metadata for ODNErrorInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FB8A8);
  }
  return result;
}

unint64_t sub_20A52E1D0()
{
  unint64_t result;

  result = qword_2545FB8B8;
  if (!qword_2545FB8B8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C68EC, &type metadata for AssessmentConfig.Triggers);
    atomic_store(result, (unint64_t *)&qword_2545FB8B8);
  }
  return result;
}

unint64_t sub_20A52E214()
{
  unint64_t result;

  result = qword_2545FB8C8;
  if (!qword_2545FB8C8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C7A5C, &type metadata for AssessmentAdditionalInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FB8C8);
  }
  return result;
}

unint64_t sub_20A52E258()
{
  unint64_t result;

  result = qword_2545FB8D0;
  if (!qword_2545FB8D0)
  {
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for ODIErrorCode, &type metadata for ODIErrorCode);
    atomic_store(result, (unint64_t *)&qword_2545FB8D0);
  }
  return result;
}

uint64_t sub_20A52E29C(unint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = a3;
    result = MEMORY[0x20BD26CEC](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_20A52E2F8()
{
  unint64_t result;

  result = qword_2545FB8E0;
  if (!qword_2545FB8E0)
  {
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for ODIErrorCode, &type metadata for ODIErrorCode);
    atomic_store(result, (unint64_t *)&qword_2545FB8E0);
  }
  return result;
}

unint64_t sub_20A52E33C()
{
  unint64_t result;

  result = qword_2545FB8F0;
  if (!qword_2545FB8F0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C7A0C, &type metadata for DIPAppleWebRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FB8F0);
  }
  return result;
}

unint64_t sub_20A52E380()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_2545FB900;
  if (!qword_2545FB900)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2545FB8F8);
    v2 = sub_20A52E440(&qword_2545FB908, type metadata accessor for AppleCredentials, (uint64_t)&unk_20A5C6B5C);
    result = MEMORY[0x20BD26CEC](MEMORY[0x24BEE4AA8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2545FB900);
  }
  return result;
}

unint64_t sub_20A52E3FC()
{
  unint64_t result;

  result = qword_2545FB920;
  if (!qword_2545FB920)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C79BC, &type metadata for DIPWebRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FB920);
  }
  return result;
}

uint64_t sub_20A52E440(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2();
    result = MEMORY[0x20BD26CEC](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_20A52E47C()
{
  unint64_t result;

  result = qword_2545FB938;
  if (!qword_2545FB938)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C6B0C, &type metadata for ResponseHeader);
    atomic_store(result, (unint64_t *)&qword_2545FB938);
  }
  return result;
}

unint64_t sub_20A52E4C0()
{
  unint64_t result;

  result = qword_2545FB948;
  if (!qword_2545FB948)
  {
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for AssessmentConfig.Sources, &type metadata for AssessmentConfig.Sources);
    atomic_store(result, (unint64_t *)&qword_2545FB948);
  }
  return result;
}

unint64_t sub_20A52E504()
{
  unint64_t result;

  result = qword_2545FB950;
  if (!qword_2545FB950)
  {
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for ODILocationBindingsName, &type metadata for ODILocationBindingsName);
    atomic_store(result, (unint64_t *)&qword_2545FB950);
  }
  return result;
}

unint64_t sub_20A52E548()
{
  unint64_t result;

  result = qword_2545FB958;
  if (!qword_2545FB958)
  {
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for ODIDeviceSettingsBindingsName, &type metadata for ODIDeviceSettingsBindingsName);
    atomic_store(result, (unint64_t *)&qword_2545FB958);
  }
  return result;
}

unint64_t sub_20A52E58C()
{
  unint64_t result;

  result = qword_2545FB960;
  if (!qword_2545FB960)
  {
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for ODIGeocoderBindingsName, &type metadata for ODIGeocoderBindingsName);
    atomic_store(result, (unint64_t *)&qword_2545FB960);
  }
  return result;
}

unint64_t sub_20A52E5D0()
{
  unint64_t result;

  result = qword_2545FB968;
  if (!qword_2545FB968)
  {
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for ODIFormattedPhoneNumberBindings, &type metadata for ODIFormattedPhoneNumberBindings);
    atomic_store(result, (unint64_t *)&qword_2545FB968);
  }
  return result;
}

unint64_t sub_20A52E614()
{
  unint64_t result;

  result = qword_2545FB970;
  if (!qword_2545FB970)
  {
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for ODIComputableBindingsName, &type metadata for ODIComputableBindingsName);
    atomic_store(result, (unint64_t *)&qword_2545FB970);
  }
  return result;
}

unint64_t sub_20A52E658()
{
  unint64_t result;

  result = qword_253EB4FF0;
  if (!qword_253EB4FF0)
  {
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for ArmandDeviceDataFieldName, &type metadata for ArmandDeviceDataFieldName);
    atomic_store(result, (unint64_t *)&qword_253EB4FF0);
  }
  return result;
}

unint64_t sub_20A52E69C()
{
  unint64_t result;

  result = qword_253EB4F08;
  if (!qword_253EB4F08)
  {
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for ArmandDataSource, &type metadata for ArmandDataSource);
    atomic_store(result, (unint64_t *)&qword_253EB4F08);
  }
  return result;
}

unint64_t sub_20A52E6E0()
{
  unint64_t result;

  result = qword_2545FB978;
  if (!qword_2545FB978)
  {
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for DsidType, &type metadata for DsidType);
    atomic_store(result, (unint64_t *)&qword_2545FB978);
  }
  return result;
}

unint64_t sub_20A52E724()
{
  unint64_t result;

  result = qword_253EB4468;
  if (!qword_253EB4468)
  {
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for DUATaskType, &type metadata for DUATaskType);
    atomic_store(result, (unint64_t *)&qword_253EB4468);
  }
  return result;
}

ValueMetadata *type metadata accessor for GetSTSResponse()
{
  return &type metadata for GetSTSResponse;
}

ValueMetadata *type metadata accessor for GetProfileResponse()
{
  return &type metadata for GetProfileResponse;
}

uint64_t initializeWithCopy for DUADataAug(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DUADataAug(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  return a1;
}

__n128 __swift_memcpy26_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 10) = *(_OWORD *)(a2 + 10);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for DUADataAug(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  return a1;
}

uint64_t getEnumTagSinglePayload for DUADataAug(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 26))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DUADataAug(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_WORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 26) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 26) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DUADataAug()
{
  return &type metadata for DUADataAug;
}

ValueMetadata *type metadata accessor for DIPWebRequest.CodingKeys()
{
  return &type metadata for DIPWebRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for DIPAppleWebRequest.CodingKeys()
{
  return &type metadata for DIPAppleWebRequest.CodingKeys;
}

uint64_t _s17CoreODIEssentials16AssessmentConfigV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_20A52E9A4 + 4 * byte_20A5C5054[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_20A52E9D8 + 4 * byte_20A5C504F[v4]))();
}

uint64_t sub_20A52E9D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A52E9E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A52E9E8);
  return result;
}

uint64_t sub_20A52E9F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A52E9FCLL);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_20A52EA00(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A52EA08(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AssessmentAdditionalInfo.CodingKeys()
{
  return &type metadata for AssessmentAdditionalInfo.CodingKeys;
}

ValueMetadata *type metadata accessor for ODNErrorInfo.CodingKeys()
{
  return &type metadata for ODNErrorInfo.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for OTDRequest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 14 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 14) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF2)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF1)
    return ((uint64_t (*)(void))((char *)&loc_20A52EA80 + 4 * byte_20A5C505E[v4]))();
  *a1 = a2 + 14;
  return ((uint64_t (*)(void))((char *)sub_20A52EAB4 + 4 * byte_20A5C5059[v4]))();
}

uint64_t sub_20A52EAB4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A52EABC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A52EAC4);
  return result;
}

uint64_t sub_20A52EAD0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A52EAD8);
  *(_BYTE *)result = a2 + 14;
  return result;
}

uint64_t sub_20A52EADC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A52EAE4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OTDRequest.CodingKeys()
{
  return &type metadata for OTDRequest.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ORDRequest.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF7)
    goto LABEL_17;
  if (a2 + 9 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 9) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 9;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 9;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 9;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v8 = v6 - 10;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ORDRequest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_20A52EBDC + 4 * byte_20A5C5068[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_20A52EC10 + 4 * byte_20A5C5063[v4]))();
}

uint64_t sub_20A52EC10(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A52EC18(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A52EC20);
  return result;
}

uint64_t sub_20A52EC2C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A52EC34);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_20A52EC38(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A52EC40(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ORDRequest.CodingKeys()
{
  return &type metadata for ORDRequest.CodingKeys;
}

uint64_t _s17CoreODIEssentials15DeviceDataFieldV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_20A52ECA8 + 4 * byte_20A5C5072[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_20A52ECDC + 4 * byte_20A5C506D[v4]))();
}

uint64_t sub_20A52ECDC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A52ECE4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A52ECECLL);
  return result;
}

uint64_t sub_20A52ECF8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A52ED00);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_20A52ED04(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A52ED0C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ResponseHeader.CodingKeys()
{
  return &type metadata for ResponseHeader.CodingKeys;
}

ValueMetadata *type metadata accessor for AppleCredentials.CodingKeys()
{
  return &type metadata for AppleCredentials.CodingKeys;
}

ValueMetadata *type metadata accessor for GenericResponse.CodingKeys()
{
  return &type metadata for GenericResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for RequestHeader.CodingKeys()
{
  return &type metadata for RequestHeader.CodingKeys;
}

ValueMetadata *type metadata accessor for DeviceFieldsList.RelaxedDeviceDataField()
{
  return &type metadata for DeviceFieldsList.RelaxedDeviceDataField;
}

uint64_t destroy for ODIWrappedAssessment(_QWORD *a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  if (a1[3])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[14] != 1)
    swift_bridgeObjectRelease();
  result = a1[16];
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for ODIWrappedAssessment(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  if (v5)
  {
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v5;
    v6 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v6;
    v7 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = v7;
    v8 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v9 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v9;
    v10 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v10;
  }
  v11 = *(_QWORD *)(a2 + 112);
  if (v11 != 1)
  {
    v20 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = v20;
    *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = v11;
    swift_bridgeObjectRetain();
    v13 = *(_QWORD *)(a2 + 128);
    if (v13)
      goto LABEL_6;
LABEL_8:
    v21 = *(_OWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 232) = v21;
    *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
    v22 = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 168) = v22;
    v23 = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 200) = v23;
    v24 = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 136) = v24;
    return a1;
  }
  v12 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v12;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  v13 = *(_QWORD *)(a2 + 128);
  if (!v13)
    goto LABEL_8;
LABEL_6:
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v13;
  v14 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v14;
  v15 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = v15;
  v16 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = v16;
  v18 = *(_QWORD *)(a2 + 184);
  v17 = *(_QWORD *)(a2 + 192);
  *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
  *(_QWORD *)(a1 + 184) = v18;
  *(_QWORD *)(a1 + 192) = v17;
  v19 = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = v19;
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ODIWrappedAssessment(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  __int128 *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 *v13;
  __int128 *v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  _OWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 16);
  v5 = (__int128 *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  if (*(_QWORD *)(a1 + 24))
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_20A464794(a1 + 16);
      v7 = *(_OWORD *)(a2 + 64);
      v9 = *v5;
      v8 = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 64) = v7;
      *v4 = v9;
      *(_OWORD *)(a1 + 32) = v8;
    }
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v10 = *v5;
    v11 = *(_OWORD *)(a2 + 32);
    v12 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v12;
    *v4 = v10;
    *(_OWORD *)(a1 + 32) = v11;
  }
  v13 = (__int128 *)(a1 + 80);
  v14 = (__int128 *)(a2 + 80);
  v15 = *(_QWORD *)(a2 + 112);
  if (*(_QWORD *)(a1 + 112) == 1)
  {
    if (v15 == 1)
    {
      v16 = *v14;
      v17 = *(_OWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *v13 = v16;
      *(_OWORD *)(a1 + 96) = v17;
    }
    else
    {
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      v20 = *(_QWORD *)(a2 + 88);
      *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
      *(_QWORD *)(a1 + 88) = v20;
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      swift_bridgeObjectRetain();
    }
  }
  else if (v15 == 1)
  {
    sub_20A4647C8(a1 + 80);
    v18 = *(_QWORD *)(a2 + 112);
    v19 = *(_OWORD *)(a2 + 96);
    *v13 = *v14;
    *(_OWORD *)(a1 + 96) = v19;
    *(_QWORD *)(a1 + 112) = v18;
  }
  else
  {
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    v21 = *(_QWORD *)(a2 + 88);
    *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
    *(_QWORD *)(a1 + 88) = v21;
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v22 = (_OWORD *)(a1 + 120);
  v23 = (_OWORD *)(a2 + 120);
  v24 = *(_QWORD *)(a2 + 128);
  if (*(_QWORD *)(a1 + 128))
  {
    if (v24)
    {
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      swift_retain();
      swift_release();
      v25 = *(_QWORD *)(a2 + 192);
      *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
      *(_QWORD *)(a1 + 192) = v25;
      *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
      *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
      *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
      *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
    }
    else
    {
      sub_20A52F440(a1 + 120);
      *v22 = *v23;
      v27 = *(_OWORD *)(a2 + 184);
      v29 = *(_OWORD *)(a2 + 136);
      v28 = *(_OWORD *)(a2 + 152);
      *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
      *(_OWORD *)(a1 + 184) = v27;
      *(_OWORD *)(a1 + 136) = v29;
      *(_OWORD *)(a1 + 152) = v28;
      v31 = *(_OWORD *)(a2 + 216);
      v30 = *(_OWORD *)(a2 + 232);
      v32 = *(_OWORD *)(a2 + 200);
      *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
      *(_OWORD *)(a1 + 216) = v31;
      *(_OWORD *)(a1 + 232) = v30;
      *(_OWORD *)(a1 + 200) = v32;
    }
  }
  else if (v24)
  {
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    v26 = *(_QWORD *)(a2 + 192);
    *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
    *(_QWORD *)(a1 + 192) = v26;
    *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
    *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
    *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
    *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
    *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
    *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *v22 = *v23;
    v33 = *(_OWORD *)(a2 + 136);
    v34 = *(_OWORD *)(a2 + 152);
    v35 = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 184) = v35;
    *(_OWORD *)(a1 + 136) = v33;
    *(_OWORD *)(a1 + 152) = v34;
    v36 = *(_OWORD *)(a2 + 200);
    v37 = *(_OWORD *)(a2 + 216);
    v38 = *(_OWORD *)(a2 + 232);
    *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
    *(_OWORD *)(a1 + 216) = v37;
    *(_OWORD *)(a1 + 232) = v38;
    *(_OWORD *)(a1 + 200) = v36;
  }
  return a1;
}

uint64_t sub_20A52F440(uint64_t a1)
{
  destroy for AssessmentAdditionalInfo();
  return a1;
}

__n128 __swift_memcpy249_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __n128 result;
  __int128 v12;
  __int128 v13;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  v5 = a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  v8 = a2[8];
  v9 = a2[9];
  v10 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  result = (__n128)a2[12];
  v12 = a2[13];
  v13 = a2[14];
  *(_OWORD *)(a1 + 233) = *(__int128 *)((char *)a2 + 233);
  *(_OWORD *)(a1 + 208) = v12;
  *(_OWORD *)(a1 + 224) = v13;
  *(__n128 *)(a1 + 192) = result;
  return result;
}

uint64_t assignWithTake for ODIWrappedAssessment(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 24))
  {
    v5 = *(_QWORD *)(a2 + 24);
    if (v5)
    {
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = v5;
      swift_bridgeObjectRelease();
      v6 = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = v6;
      swift_bridgeObjectRelease();
      v7 = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = v7;
      swift_bridgeObjectRelease();
      v8 = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = v8;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_20A464794(a1 + 16);
  }
  v9 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v9;
  v10 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v10;
LABEL_6:
  if (*(_QWORD *)(a1 + 112) == 1)
  {
LABEL_9:
    v12 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v12;
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    goto LABEL_11;
  }
  v11 = *(_QWORD *)(a2 + 112);
  if (v11 == 1)
  {
    sub_20A4647C8(a1 + 80);
    goto LABEL_9;
  }
  v13 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v13;
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v11;
  swift_bridgeObjectRelease();
LABEL_11:
  if (!*(_QWORD *)(a1 + 128))
  {
LABEL_15:
    v19 = *(_OWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 232) = v19;
    *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
    v20 = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 168) = v20;
    v21 = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 200) = v21;
    v22 = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 136) = v22;
    return a1;
  }
  v14 = *(_QWORD *)(a2 + 128);
  if (!v14)
  {
    sub_20A52F440(a1 + 120);
    goto LABEL_15;
  }
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v14;
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v15;
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = v16;
  swift_bridgeObjectRelease();
  v17 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = v17;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  swift_release();
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  swift_bridgeObjectRelease();
  v18 = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = v18;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
  return a1;
}

uint64_t getEnumTagSinglePayload for ODIWrappedAssessment(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 249))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ODIWrappedAssessment(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 248) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 249) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 249) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ODIWrappedAssessment()
{
  return &type metadata for ODIWrappedAssessment;
}

_QWORD *sub_20A52F7A0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for TSIDContainer(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

_QWORD *assignWithTake for TSIDContainer(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t getEnumTagSinglePayload for TSIDContainer(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TSIDContainer(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TSIDContainer()
{
  return &type metadata for TSIDContainer;
}

unint64_t sub_20A52F914()
{
  unint64_t result;

  result = qword_2545FB980;
  if (!qword_2545FB980)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C7184, &type metadata for RequestHeader.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FB980);
  }
  return result;
}

unint64_t sub_20A52F95C()
{
  unint64_t result;

  result = qword_2545FB988;
  if (!qword_2545FB988)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C7274, &type metadata for GenericResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FB988);
  }
  return result;
}

unint64_t sub_20A52F9A4()
{
  unint64_t result;

  result = qword_2545FB990;
  if (!qword_2545FB990)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C732C, &type metadata for AppleCredentials.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FB990);
  }
  return result;
}

unint64_t sub_20A52F9EC()
{
  unint64_t result;

  result = qword_2545FB998;
  if (!qword_2545FB998)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C73E4, &type metadata for ResponseHeader.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FB998);
  }
  return result;
}

unint64_t sub_20A52FA34()
{
  unint64_t result;

  result = qword_2545FB9A0;
  if (!qword_2545FB9A0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C749C, &type metadata for ORDRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FB9A0);
  }
  return result;
}

unint64_t sub_20A52FA7C()
{
  unint64_t result;

  result = qword_2545FB9A8;
  if (!qword_2545FB9A8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C7554, &type metadata for OTDRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FB9A8);
  }
  return result;
}

unint64_t sub_20A52FAC4()
{
  unint64_t result;

  result = qword_2545FB9B0;
  if (!qword_2545FB9B0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C760C, &type metadata for ODNErrorInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FB9B0);
  }
  return result;
}

unint64_t sub_20A52FB0C()
{
  unint64_t result;

  result = qword_2545FB9B8;
  if (!qword_2545FB9B8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C76C4, &type metadata for AssessmentAdditionalInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FB9B8);
  }
  return result;
}

unint64_t sub_20A52FB54()
{
  unint64_t result;

  result = qword_2545FB9C0;
  if (!qword_2545FB9C0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C77B4, &type metadata for DIPAppleWebRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FB9C0);
  }
  return result;
}

unint64_t sub_20A52FB9C()
{
  unint64_t result;

  result = qword_2545FB9C8;
  if (!qword_2545FB9C8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C78A4, &type metadata for DIPWebRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FB9C8);
  }
  return result;
}

unint64_t sub_20A52FBE4()
{
  unint64_t result;

  result = qword_2545FB9D0;
  if (!qword_2545FB9D0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C77DC, &type metadata for DIPWebRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FB9D0);
  }
  return result;
}

unint64_t sub_20A52FC2C()
{
  unint64_t result;

  result = qword_2545FB9D8;
  if (!qword_2545FB9D8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C7804, &type metadata for DIPWebRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FB9D8);
  }
  return result;
}

unint64_t sub_20A52FC74()
{
  unint64_t result;

  result = qword_2545FB9E0;
  if (!qword_2545FB9E0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C76EC, &type metadata for DIPAppleWebRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FB9E0);
  }
  return result;
}

unint64_t sub_20A52FCBC()
{
  unint64_t result;

  result = qword_2545FB9E8;
  if (!qword_2545FB9E8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C7714, &type metadata for DIPAppleWebRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FB9E8);
  }
  return result;
}

unint64_t sub_20A52FD04()
{
  unint64_t result;

  result = qword_2545FB9F0;
  if (!qword_2545FB9F0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C7634, &type metadata for AssessmentAdditionalInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FB9F0);
  }
  return result;
}

unint64_t sub_20A52FD4C()
{
  unint64_t result;

  result = qword_2545FB9F8;
  if (!qword_2545FB9F8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C765C, &type metadata for AssessmentAdditionalInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FB9F8);
  }
  return result;
}

unint64_t sub_20A52FD94()
{
  unint64_t result;

  result = qword_2545FBA00;
  if (!qword_2545FBA00)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C757C, &type metadata for ODNErrorInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBA00);
  }
  return result;
}

unint64_t sub_20A52FDDC()
{
  unint64_t result;

  result = qword_2545FBA08;
  if (!qword_2545FBA08)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C75A4, &type metadata for ODNErrorInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBA08);
  }
  return result;
}

unint64_t sub_20A52FE24()
{
  unint64_t result;

  result = qword_2545FBA10;
  if (!qword_2545FBA10)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C74C4, &type metadata for OTDRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBA10);
  }
  return result;
}

unint64_t sub_20A52FE6C()
{
  unint64_t result;

  result = qword_2545FBA18;
  if (!qword_2545FBA18)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C74EC, &type metadata for OTDRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBA18);
  }
  return result;
}

unint64_t sub_20A52FEB4()
{
  unint64_t result;

  result = qword_2545FBA20;
  if (!qword_2545FBA20)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C740C, &type metadata for ORDRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBA20);
  }
  return result;
}

unint64_t sub_20A52FEFC()
{
  unint64_t result;

  result = qword_2545FBA28;
  if (!qword_2545FBA28)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C7434, &type metadata for ORDRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBA28);
  }
  return result;
}

unint64_t sub_20A52FF44()
{
  unint64_t result;

  result = qword_2545FBA30;
  if (!qword_2545FBA30)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C7354, &type metadata for ResponseHeader.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBA30);
  }
  return result;
}

unint64_t sub_20A52FF8C()
{
  unint64_t result;

  result = qword_2545FBA38;
  if (!qword_2545FBA38)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C737C, &type metadata for ResponseHeader.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBA38);
  }
  return result;
}

unint64_t sub_20A52FFD4()
{
  unint64_t result;

  result = qword_2545FBA40;
  if (!qword_2545FBA40)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C729C, &type metadata for AppleCredentials.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBA40);
  }
  return result;
}

unint64_t sub_20A53001C()
{
  unint64_t result;

  result = qword_2545FBA48;
  if (!qword_2545FBA48)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C72C4, &type metadata for AppleCredentials.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBA48);
  }
  return result;
}

unint64_t sub_20A530064()
{
  unint64_t result;

  result = qword_2545FBA50;
  if (!qword_2545FBA50)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C71AC, &type metadata for GenericResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBA50);
  }
  return result;
}

unint64_t sub_20A5300AC()
{
  unint64_t result;

  result = qword_2545FBA58;
  if (!qword_2545FBA58)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C71D4, &type metadata for GenericResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBA58);
  }
  return result;
}

unint64_t sub_20A5300F4()
{
  unint64_t result;

  result = qword_2545FBA60;
  if (!qword_2545FBA60)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C70F4, &type metadata for RequestHeader.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBA60);
  }
  return result;
}

unint64_t sub_20A53013C()
{
  unint64_t result;

  result = qword_2545FBA68;
  if (!qword_2545FBA68)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C711C, &type metadata for RequestHeader.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBA68);
  }
  return result;
}

unint64_t sub_20A530180()
{
  unint64_t result;

  result = qword_2545FBA78;
  if (!qword_2545FBA78)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C8334, &type metadata for ODIWrappedAssessment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBA78);
  }
  return result;
}

unint64_t sub_20A5301C4()
{
  unint64_t result;

  result = qword_2545FBA80;
  if (!qword_2545FBA80)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C618C, &type metadata for AssessmentAdditionalInfo);
    atomic_store(result, (unint64_t *)&qword_2545FBA80);
  }
  return result;
}

unint64_t sub_20A530208()
{
  unint64_t result;

  result = qword_2545FBA90;
  if (!qword_2545FBA90)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C82E4, &type metadata for DeviceFieldsList.RelaxedDeviceDataField.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBA90);
  }
  return result;
}

unint64_t sub_20A53024C()
{
  unint64_t result;

  result = qword_2545FBAA0;
  if (!qword_2545FBAA0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C8294, &type metadata for TSIDContainer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBAA0);
  }
  return result;
}

unint64_t sub_20A530290()
{
  unint64_t result;

  result = qword_253EB4418;
  if (!qword_253EB4418)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C8244, &type metadata for DUADataAug.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_253EB4418);
  }
  return result;
}

unint64_t sub_20A5302D4()
{
  unint64_t result;

  result = qword_2545FBAB0;
  if (!qword_2545FBAB0)
  {
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for DUATaskType, &type metadata for DUATaskType);
    atomic_store(result, (unint64_t *)&qword_2545FBAB0);
  }
  return result;
}

unint64_t sub_20A530318()
{
  unint64_t result;

  result = qword_253EB4460;
  if (!qword_253EB4460)
  {
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for DUATaskType, &type metadata for DUATaskType);
    atomic_store(result, (unint64_t *)&qword_253EB4460);
  }
  return result;
}

unint64_t sub_20A53035C()
{
  unint64_t result;

  result = qword_253EB4F88;
  if (!qword_253EB4F88)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C81F4, &type metadata for GetProfileResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_253EB4F88);
  }
  return result;
}

unint64_t sub_20A5303A0()
{
  unint64_t result;

  result = qword_253EB4EC0;
  if (!qword_253EB4EC0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C81A4, &type metadata for GetSTSResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_253EB4EC0);
  }
  return result;
}

unint64_t sub_20A5303E4()
{
  unint64_t result;

  result = qword_2545FBAD0;
  if (!qword_2545FBAD0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C61B4, &type metadata for AssessmentAdditionalInfo);
    atomic_store(result, (unint64_t *)&qword_2545FBAD0);
  }
  return result;
}

_QWORD *sub_20A530428(_QWORD *a1)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = a1[3];
  v4 = a1[2];
  v8 = a1[11];
  v9 = a1[10];
  v6 = a1[13];
  v7 = a1[12];
  v5 = a1[14];
  v10 = a1[16];
  v11 = a1[15];
  swift_bridgeObjectRetain();
  sub_20A465800(v4, v3);
  sub_20A465850(v9, v8, v7, v6, v5);
  sub_20A53055C(v11, v10);
  return a1;
}

uint64_t sub_20A53055C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

ValueMetadata *type metadata accessor for GetSTSResponse.CodingKeys()
{
  return &type metadata for GetSTSResponse.CodingKeys;
}

uint64_t _s17CoreODIEssentials25AssessmentConfigFieldNameO25DeviceDataFieldCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_20A530628 + 4 * byte_20A5C5077[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_20A530648 + 4 * byte_20A5C507C[v4]))();
}

_BYTE *sub_20A530628(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_20A530648(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_20A530650(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_20A530658(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_20A530660(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_20A530668(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for GetProfileResponse.CodingKeys()
{
  return &type metadata for GetProfileResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for DUADataAug.CodingKeys()
{
  return &type metadata for DUADataAug.CodingKeys;
}

uint64_t _s17CoreODIEssentials11DUATaskTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_20A5306E0 + 4 * byte_20A5C5086[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_20A530714 + 4 * byte_20A5C5081[v4]))();
}

uint64_t sub_20A530714(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A53071C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A530724);
  return result;
}

uint64_t sub_20A530730(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A530738);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_20A53073C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A530744(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TSIDContainer.CodingKeys()
{
  return &type metadata for TSIDContainer.CodingKeys;
}

uint64_t _s17CoreODIEssentials31ODIFormattedPhoneNumberBindingsOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_20A5307AC + 4 * byte_20A5C5090[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_20A5307E0 + 4 * byte_20A5C508B[v4]))();
}

uint64_t sub_20A5307E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A5307E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A5307F0);
  return result;
}

uint64_t sub_20A5307FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A530804);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_20A530808(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A530810(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DeviceFieldsList.RelaxedDeviceDataField.CodingKeys()
{
  return &type metadata for DeviceFieldsList.RelaxedDeviceDataField.CodingKeys;
}

uint64_t _s17CoreODIEssentials8DsidTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_20A530878 + 4 * byte_20A5C509A[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_20A5308AC + 4 * byte_20A5C5095[v4]))();
}

uint64_t sub_20A5308AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A5308B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A5308BCLL);
  return result;
}

uint64_t sub_20A5308C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A5308D0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_20A5308D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A5308DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ODIWrappedAssessment.CodingKeys()
{
  return &type metadata for ODIWrappedAssessment.CodingKeys;
}

unint64_t sub_20A5308FC()
{
  unint64_t result;

  result = qword_2545FBAE0;
  if (!qword_2545FBAE0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C7DE4, &type metadata for ODIWrappedAssessment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBAE0);
  }
  return result;
}

unint64_t sub_20A530944()
{
  unint64_t result;

  result = qword_2545FBAE8;
  if (!qword_2545FBAE8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C7E9C, &type metadata for DeviceFieldsList.RelaxedDeviceDataField.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBAE8);
  }
  return result;
}

unint64_t sub_20A53098C()
{
  unint64_t result;

  result = qword_2545FBAF0;
  if (!qword_2545FBAF0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C7F54, &type metadata for TSIDContainer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBAF0);
  }
  return result;
}

unint64_t sub_20A5309D4()
{
  unint64_t result;

  result = qword_2545FBAF8;
  if (!qword_2545FBAF8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C800C, &type metadata for DUADataAug.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBAF8);
  }
  return result;
}

unint64_t sub_20A530A1C()
{
  unint64_t result;

  result = qword_2545FBB00;
  if (!qword_2545FBB00)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C80C4, &type metadata for GetProfileResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBB00);
  }
  return result;
}

unint64_t sub_20A530A64()
{
  unint64_t result;

  result = qword_2545FBB08;
  if (!qword_2545FBB08)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C817C, &type metadata for GetSTSResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBB08);
  }
  return result;
}

unint64_t sub_20A530AAC()
{
  unint64_t result;

  result = qword_253EB4ED0;
  if (!qword_253EB4ED0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C80EC, &type metadata for GetSTSResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_253EB4ED0);
  }
  return result;
}

unint64_t sub_20A530AF4()
{
  unint64_t result;

  result = qword_253EB4EC8;
  if (!qword_253EB4EC8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C8114, &type metadata for GetSTSResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_253EB4EC8);
  }
  return result;
}

unint64_t sub_20A530B3C()
{
  unint64_t result;

  result = qword_253EB4F98;
  if (!qword_253EB4F98)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C8034, &type metadata for GetProfileResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_253EB4F98);
  }
  return result;
}

unint64_t sub_20A530B84()
{
  unint64_t result;

  result = qword_253EB4F90;
  if (!qword_253EB4F90)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C805C, &type metadata for GetProfileResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_253EB4F90);
  }
  return result;
}

unint64_t sub_20A530BCC()
{
  unint64_t result;

  result = qword_253EB4428;
  if (!qword_253EB4428)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C7F7C, &type metadata for DUADataAug.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_253EB4428);
  }
  return result;
}

unint64_t sub_20A530C14()
{
  unint64_t result;

  result = qword_253EB4420;
  if (!qword_253EB4420)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C7FA4, &type metadata for DUADataAug.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_253EB4420);
  }
  return result;
}

unint64_t sub_20A530C5C()
{
  unint64_t result;

  result = qword_2545FBB10;
  if (!qword_2545FBB10)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C7EC4, &type metadata for TSIDContainer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBB10);
  }
  return result;
}

unint64_t sub_20A530CA4()
{
  unint64_t result;

  result = qword_2545FBB18;
  if (!qword_2545FBB18)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C7EEC, &type metadata for TSIDContainer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBB18);
  }
  return result;
}

unint64_t sub_20A530CEC()
{
  unint64_t result;

  result = qword_2545FBB20;
  if (!qword_2545FBB20)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C7E0C, &type metadata for DeviceFieldsList.RelaxedDeviceDataField.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBB20);
  }
  return result;
}

unint64_t sub_20A530D34()
{
  unint64_t result;

  result = qword_2545FBB28;
  if (!qword_2545FBB28)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C7E34, &type metadata for DeviceFieldsList.RelaxedDeviceDataField.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBB28);
  }
  return result;
}

unint64_t sub_20A530D7C()
{
  unint64_t result;

  result = qword_2545FBB30;
  if (!qword_2545FBB30)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C7D54, &type metadata for ODIWrappedAssessment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBB30);
  }
  return result;
}

unint64_t sub_20A530DC4()
{
  unint64_t result;

  result = qword_2545FBB38;
  if (!qword_2545FBB38)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5C7D7C, &type metadata for ODIWrappedAssessment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBB38);
  }
  return result;
}

uint64_t Logger.LogCategory.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_20A5B91F4();
  result = swift_bridgeObjectRelease();
  v4 = 18;
  if (v2 < 0x12)
    v4 = v2;
  *a1 = v4;
  return result;
}

uint64_t Logger.LogCategory.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_20A530EB0 + 4 * byte_20A5C83A0[*v0]))(0xD000000000000014, 0x800000020A5DB3E0);
}

uint64_t sub_20A530EB0()
{
  return 0x52656C69666F7250;
}

uint64_t sub_20A530ED4()
{
  return 0x7265746E49495041;
}

uint64_t sub_20A530EF4()
{
  return 0x63614D6574617453;
}

uint64_t sub_20A530F14()
{
  return 0x6E6F697461636F4CLL;
}

uint64_t sub_20A530F2C()
{
  return 0x6C6C6F4361746144;
}

unint64_t sub_20A530F54()
{
  return 0xD000000000000012;
}

uint64_t sub_20A530FDC@<X0>(uint64_t a1@<X8>)
{
  return a1 + 1;
}

uint64_t sub_20A530FEC()
{
  return 0x746C7561666544;
}

uint64_t sub_20A531004()
{
  return 0x6E6F7473656C694DLL;
}

void sub_20A531024()
{
  JUMPOUT(0x20A531030);
}

uint64_t sub_20A53103C()
{
  return 0x6976726573626557;
}

uint64_t sub_20A531058(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_20A4E97DC(*a1, *a2);
}

unint64_t sub_20A531068()
{
  unint64_t result;

  result = qword_2545FBB40;
  if (!qword_2545FBB40)
  {
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for Logger.LogCategory, &type metadata for Logger.LogCategory);
    atomic_store(result, (unint64_t *)&qword_2545FBB40);
  }
  return result;
}

uint64_t sub_20A5310AC()
{
  sub_20A5B929C();
  Logger.LogCategory.rawValue.getter();
  sub_20A5B8978();
  swift_bridgeObjectRelease();
  return sub_20A5B92CC();
}

uint64_t sub_20A531110()
{
  Logger.LogCategory.rawValue.getter();
  sub_20A5B8978();
  return swift_bridgeObjectRelease();
}

uint64_t sub_20A531160()
{
  sub_20A5B929C();
  Logger.LogCategory.rawValue.getter();
  sub_20A5B8978();
  swift_bridgeObjectRelease();
  return sub_20A5B92CC();
}

uint64_t sub_20A5311C0@<X0>(char *a1@<X8>)
{
  return Logger.LogCategory.init(rawValue:)(a1);
}

uint64_t sub_20A5311CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = Logger.LogCategory.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t _s11LogCategoryOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 17 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 17) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEE)
    return ((uint64_t (*)(void))((char *)&loc_20A53123C + 4 * byte_20A5C83B7[v4]))();
  *a1 = a2 + 17;
  return ((uint64_t (*)(void))((char *)sub_20A531270 + 4 * byte_20A5C83B2[v4]))();
}

uint64_t sub_20A531270(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A531278(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A531280);
  return result;
}

uint64_t sub_20A53128C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A531294);
  *(_BYTE *)result = a2 + 17;
  return result;
}

uint64_t sub_20A531298(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A5312A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Logger.LogCategory()
{
  return &type metadata for Logger.LogCategory;
}

uint64_t sub_20A5312BC(uint64_t a1)
{
  return sub_20A53153C(a1, qword_253EBC7E0);
}

uint64_t sub_20A5312E0(uint64_t a1)
{
  return sub_20A53153C(a1, qword_253EBC8A0);
}

uint64_t sub_20A53130C(uint64_t a1)
{
  return sub_20A53153C(a1, qword_2546103C8);
}

uint64_t sub_20A531334(uint64_t a1)
{
  return sub_20A53153C(a1, qword_2546103E0);
}

uint64_t sub_20A53135C(uint64_t a1)
{
  return sub_20A53153C(a1, qword_2546103F8);
}

uint64_t sub_20A53137C(uint64_t a1)
{
  return sub_20A53153C(a1, qword_253EBC798);
}

uint64_t sub_20A5313A8(uint64_t a1)
{
  return sub_20A53153C(a1, qword_253EBC7C8);
}

uint64_t sub_20A5313CC(uint64_t a1)
{
  return sub_20A53153C(a1, qword_254610410);
}

uint64_t sub_20A5313F0(uint64_t a1)
{
  return sub_20A53153C(a1, qword_254610428);
}

uint64_t sub_20A531414(uint64_t a1)
{
  return sub_20A53153C(a1, qword_254610440);
}

uint64_t sub_20A531438(uint64_t a1)
{
  return sub_20A53153C(a1, qword_254610458);
}

uint64_t sub_20A53145C(uint64_t a1)
{
  return sub_20A53153C(a1, qword_253EBC7B0);
}

uint64_t sub_20A531488(uint64_t a1)
{
  return sub_20A53153C(a1, qword_254610470);
}

uint64_t sub_20A5314AC(uint64_t a1)
{
  return sub_20A53153C(a1, qword_254610488);
}

uint64_t sub_20A5314D0(uint64_t a1)
{
  return sub_20A53153C(a1, qword_253EBC8D0);
}

uint64_t sub_20A5314F4(uint64_t a1)
{
  return sub_20A53153C(a1, qword_253EBC7F8);
}

uint64_t sub_20A531518(uint64_t a1)
{
  return sub_20A53153C(a1, qword_2546104A0);
}

uint64_t sub_20A53153C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_20A5B8804();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_20A5B87F8();
}

uint64_t sub_20A5315B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_20A5B8804();
  __swift_allocate_value_buffer(v0, qword_253EBC8B8);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_253EBC8B8);
  if (qword_253EB4A80 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_253EB4950);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t static ODIAccountManager.shared.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;

  if (qword_253EB4578 != -1)
    swift_once();
  v2 = qword_253EB4568;
  a1[3] = type metadata accessor for ODIAccountManager();
  a1[4] = (uint64_t)&protocol witness table for ODIAccountManager;
  *a1 = v2;
  return swift_retain();
}

void sub_20A5316A4()
{
  _QWORD *v0;
  id v1;
  id v2;
  void *v3;

  type metadata accessor for ODIAccountManager();
  v0 = (_QWORD *)swift_allocObject();
  swift_defaultActor_initialize();
  v0[14] = 0xD000000000000015;
  v0[15] = 0x800000020A5DA460;
  v0[17] = 0;
  v1 = objc_msgSend((id)objc_opt_self(), sel_defaultStore);
  if (!v1)
    v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB4398]), sel_init);
  v0[16] = v1;
  v2 = objc_msgSend(v1, sel_aa_primaryAppleAccount);
  v3 = (void *)v0[17];
  v0[17] = v2;

  qword_253EB4568 = (uint64_t)v0;
}

uint64_t type metadata accessor for ODIAccountManager()
{
  return objc_opt_self();
}

uint64_t sub_20A531778(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;
  _QWORD *v5;
  id v6;
  uint64_t v8;
  id v9;
  void *v10;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52D0);
    swift_allocError();
    *v5 = a3;
    v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    v10 = a2;
    v8 = *(_QWORD *)(*(_QWORD *)(v3 + 64) + 40);
    v9 = a2;
    sub_20A459C88((uint64_t)&v10, v8, &qword_2545FBBC8);
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_20A531820()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (__cdecl *v3)();

  v3 = (uint64_t (__cdecl *)())((char *)&dword_2545FBB50 + dword_2545FBB50);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_20A531878;
  return v3();
}

uint64_t sub_20A531878(void *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  id v6;
  uint64_t (*v7)(void *);

  v4 = *v2;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v4 + 8))();
  v7 = *(uint64_t (**)(void *))(v4 + 8);
  v6 = a1;
  return v7(a1);
}

uint64_t sub_20A5318F4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (__cdecl *v4)();

  *(_QWORD *)(v1 + 16) = v0;
  v4 = (uint64_t (__cdecl *)())((char *)&dword_2545FBB50 + dword_2545FBB50);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_20A531950;
  return v4();
}

uint64_t sub_20A531950(void *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  id v7;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v5 + 8))();
  *(_QWORD *)(v4 + 32) = a1;
  v7 = a1;
  return swift_task_switch();
}

uint64_t sub_20A5319D4()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v9;
  unsigned __int8 v10[9];

  v1 = *(void **)(v0 + 32);
  if (v1)
  {
    v2 = objc_msgSend(v1, sel_appleID);
    v3 = *(void **)(v0 + 32);
    if (v2)
    {
      v4 = v2;
      v5 = sub_20A5B8900();
      v7 = v6;

      return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v5, v7);
    }
    v10[0] = -69;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000016, 0x800000020A5E4920, 0, v10, 0, 0, 0xD00000000000005FLL, 0x800000020A5E48C0, 0x284449656C707061, 0xE900000000000029, 112);
    swift_willThrow();

  }
  else
  {
    v9 = -71;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000028, 0x800000020A5E4890, 0, &v9, 0, 0, 0xD00000000000005FLL, 0x800000020A5E48C0, 0x284449656C707061, 0xE900000000000029, 109);
    swift_willThrow();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A531B78()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (__cdecl *v4)();

  *(_QWORD *)(v1 + 16) = v0;
  v4 = (uint64_t (__cdecl *)())((char *)&dword_2545FBB50 + dword_2545FBB50);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_20A531BD4;
  return v4();
}

uint64_t sub_20A531BD4(void *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  id v7;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v5 + 8))();
  *(_QWORD *)(v4 + 32) = a1;
  v7 = a1;
  return swift_task_switch();
}

uint64_t sub_20A531C58()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v9;
  unsigned __int8 v10[9];

  v1 = *(void **)(v0 + 32);
  if (v1)
  {
    v2 = objc_msgSend(v1, sel_aa_personID);
    v3 = *(void **)(v0 + 32);
    if (v2)
    {
      v4 = v2;
      v5 = sub_20A5B8900();
      v7 = v6;

      return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v5, v7);
    }
    v10[0] = -68;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000017, 0x800000020A5E4BC0, 0, v10, 0, 0, 0xD00000000000005FLL, 0x800000020A5E48C0, 0xD000000000000019, 0x800000020A5E4BE0, 126);
    swift_willThrow();

  }
  else
  {
    v9 = -71;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000028, 0x800000020A5E4890, 0, &v9, 0, 0, 0xD00000000000005FLL, 0x800000020A5E48C0, 0xD000000000000019, 0x800000020A5E4BE0, 123);
    swift_willThrow();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A531DEC()
{
  __objc2_meth *v0;
  char **v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  unsigned __int8 v8;
  unsigned __int8 v9;

  v0 = (__objc2_meth *)sub_20A5B8900();
  v2 = (uint64_t)v1;
  v3 = sub_20A533018(v0, v1);
  swift_bridgeObjectRelease();
  if (v3)
  {
    v4 = objc_msgSend(v3, sel_normalizedDSID);
    if (v4)
    {
      v5 = v4;
      v2 = sub_20A5B8900();

      if (qword_253EB4A80 != -1)
        swift_once();
      v6 = sub_20A5B8804();
      __swift_project_value_buffer(v6, (uint64_t)qword_253EB4950);
      swift_bridgeObjectRetain();
      sub_20A504838();

      swift_bridgeObjectRelease();
    }
    else
    {
      v8 = -66;
      ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000017, 0x800000020A5E4BC0, 0, &v8, 0, 0, 0xD00000000000005FLL, 0x800000020A5E48C0, 0xD000000000000013, 0x800000020A5E4BA0, 147);
      swift_willThrow();

    }
  }
  else
  {
    v9 = -70;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001ELL, 0x800000020A5E4B80, 0, &v9, 0, 0, 0xD00000000000005FLL, 0x800000020A5E48C0, 0xD000000000000013, 0x800000020A5E4BA0, 144);
    swift_willThrow();
  }
  return v2;
}

uint64_t sub_20A531FE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[33] = a2;
  v3[34] = v2;
  v3[32] = a1;
  return swift_task_switch();
}

uint64_t sub_20A532000()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  void *v18;
  void *v19;
  id v20;
  unsigned __int8 v21;
  unsigned __int8 v22[9];

  v1 = v0 + 248;
  v2 = *(_QWORD *)(v0 + 272);
  if (!*(_QWORD *)(v0 + 264))
  {
    v3 = *(void **)(v2 + 128);
    *(_QWORD *)(v0 + 280) = v3;
    v10 = objc_msgSend(v3, sel_aida_accountForPrimaryiCloudAccount);
    if (!v10)
    {
      *(_QWORD *)(v0 + 120) = v1;
      *(_QWORD *)(v0 + 80) = v0;
      *(_QWORD *)(v0 + 88) = sub_20A5325D0;
      *(_QWORD *)(v0 + 240) = swift_continuation_init();
      *(_QWORD *)(v0 + 208) = MEMORY[0x24BDAC760];
      *(_QWORD *)(v0 + 216) = 0x40000000;
      *(_QWORD *)(v0 + 224) = sub_20A531778;
      *(_QWORD *)(v0 + 232) = &block_descriptor_15;
      objc_msgSend(v3, sel_aa_primaryAppleAccountWithCompletion_, v0 + 208);
      return swift_continuation_await();
    }
    v5 = v10;
    goto LABEL_7;
  }
  v3 = *(void **)(v2 + 128);
  v4 = (void *)sub_20A5B88F4();
  v5 = objc_msgSend(v3, sel_aida_accountForAltDSID_, v4);

  if (v5)
  {
LABEL_7:
    *(_QWORD *)(v0 + 288) = v5;
    v11 = *(_QWORD *)(v0 + 272);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545F9DC8);
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_20A5BA9A0;
    v13 = *(_QWORD *)(v11 + 112);
    v14 = *(_QWORD *)(v11 + 120);
    *(_QWORD *)(v12 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v12 + 32) = v13;
    *(_QWORD *)(v12 + 40) = v14;
    v15 = v5;
    swift_bridgeObjectRetain();
    v16 = sub_20A5B8A98();
    *(_QWORD *)(v0 + 296) = v16;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 184) = v1;
    *(_QWORD *)(v0 + 144) = v0;
    *(_QWORD *)(v0 + 152) = sub_20A5323E4;
    *(_QWORD *)(v0 + 240) = swift_continuation_init();
    *(_QWORD *)(v0 + 208) = MEMORY[0x24BDAC760];
    *(_QWORD *)(v0 + 216) = 0x40000000;
    *(_QWORD *)(v0 + 224) = sub_20A45F408;
    *(_QWORD *)(v0 + 232) = &block_descriptor_16;
    objc_msgSend(v3, sel_aida_renewCredentialsForAccount_services_force_completion_, v15, v16, 1, v0 + 208);
    return swift_continuation_await();
  }
  v6 = (void *)sub_20A5B88F4();
  v7 = objc_msgSend(v3, sel_aa_appleAccountWithAltDSID_, v6);

  *(_QWORD *)(v0 + 320) = v7;
  if (v7)
  {
    v8 = v7;
    v9 = sub_20A5B88F4();
    *(_QWORD *)(v0 + 328) = v9;
    *(_QWORD *)(v0 + 56) = v1;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_20A532820;
    *(_QWORD *)(v0 + 240) = swift_continuation_init();
    *(_QWORD *)(v0 + 208) = MEMORY[0x24BDAC760];
    *(_QWORD *)(v0 + 216) = 0x40000000;
    *(_QWORD *)(v0 + 224) = sub_20A45F408;
    *(_QWORD *)(v0 + 232) = &block_descriptor_14_0;
    objc_msgSend(v3, sel_renewCredentialsForAccount_force_reason_completion_, v8, 0, v9, v0 + 208);
    return swift_continuation_await();
  }
  v22[0] = -71;
  ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000028, 0x800000020A5E4890, 0, v22, 0, 0, 0xD00000000000005FLL, 0x800000020A5E48C0, 0xD000000000000017, 0x800000020A5E4AE0, 194);
  v19 = v18;
  swift_willThrow();
  v21 = 67;
  v20 = v19;
  ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001BLL, 0x800000020A5E4AC0, (char *)v19, &v21, 0, 0, 0xD00000000000005FLL, 0x800000020A5E48C0, 0xD000000000000017, 0x800000020A5E4AE0, 199);

  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A5323E4()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 304) = *(_QWORD *)(*(_QWORD *)v0 + 176);
  return swift_task_switch();
}

uint64_t sub_20A532444()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  unsigned __int8 v5;
  unsigned __int8 v6;
  unsigned __int8 v7[9];

  v1 = *(void **)(v0 + 296);

  v2 = *(_QWORD *)(v0 + 248);
  v3 = *(void **)(v0 + 288);
  if (v2)
  {
    if (v2 == 2)
    {
      v6 = 67;
      ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000019, 0x800000020A5E4B30, 0, &v6, 0, 0, 0xD00000000000005FLL, 0x800000020A5E48C0, 0xD000000000000017, 0x800000020A5E4AE0, 210);
    }
    else if (v2 == 1)
    {
      v7[0] = 67;
      ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000020, 0x800000020A5E4B50, 0, v7, 0, 0, 0xD00000000000005FLL, 0x800000020A5E48C0, 0xD000000000000017, 0x800000020A5E4AE0, 207);
    }
    else
    {
      v5 = 67;
      ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000021, 0x800000020A5E4B00, 0, &v5, 0, 0, 0xD00000000000005FLL, 0x800000020A5E48C0, 0xD000000000000017, 0x800000020A5E4AE0, 213);
    }
    swift_willThrow();
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A5325D0()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 312) = *(_QWORD *)(*(_QWORD *)v0 + 112);
  return swift_task_switch();
}

uint64_t sub_20A532630()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  void *v8;
  void *v9;
  id v10;
  unsigned __int8 v11;
  unsigned __int8 v12[9];

  v1 = *(void **)(v0 + 248);
  v2 = *(void **)(v0 + 280);
  *(_QWORD *)(v0 + 320) = v1;
  if (v1)
  {
    v3 = v1;
    v4 = sub_20A5B88F4();
    *(_QWORD *)(v0 + 328) = v4;
    *(_QWORD *)(v0 + 56) = v0 + 248;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_20A532820;
    v5 = swift_continuation_init();
    *(_QWORD *)(v0 + 208) = MEMORY[0x24BDAC760];
    v6 = (_QWORD *)(v0 + 208);
    v6[1] = 0x40000000;
    v6[2] = sub_20A45F408;
    v6[3] = &block_descriptor_14_0;
    v6[4] = v5;
    objc_msgSend(v2, sel_renewCredentialsForAccount_force_reason_completion_, v3, 0, v4, v6);
    return swift_continuation_await();
  }
  else
  {
    v12[0] = -71;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000028, 0x800000020A5E4890, 0, v12, 0, 0, 0xD00000000000005FLL, 0x800000020A5E48C0, 0xD000000000000017, 0x800000020A5E4AE0, 194);
    v9 = v8;
    swift_willThrow();
    v11 = 67;
    v10 = v9;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001BLL, 0x800000020A5E4AC0, (char *)v9, &v11, 0, 0, 0xD00000000000005FLL, 0x800000020A5E48C0, 0xD000000000000017, 0x800000020A5E4AE0, 199);

    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_20A532820()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 336) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_20A532880()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  unsigned __int8 v5;
  unsigned __int8 v6;
  unsigned __int8 v7[9];

  v2 = *(void **)(v0 + 320);
  v1 = *(void **)(v0 + 328);

  v3 = *(_QWORD *)(v0 + 248);
  if (v3)
  {
    if (v3 == 2)
    {
      v6 = 67;
      ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000019, 0x800000020A5E4B30, 0, &v6, 0, 0, 0xD00000000000005FLL, 0x800000020A5E48C0, 0xD000000000000017, 0x800000020A5E4AE0, 210);
    }
    else if (v3 == 1)
    {
      v7[0] = 67;
      ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000020, 0x800000020A5E4B50, 0, v7, 0, 0, 0xD00000000000005FLL, 0x800000020A5E48C0, 0xD000000000000017, 0x800000020A5E4AE0, 207);
    }
    else
    {
      v5 = 67;
      ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000021, 0x800000020A5E4B00, 0, &v5, 0, 0, 0xD00000000000005FLL, 0x800000020A5E48C0, 0xD000000000000017, 0x800000020A5E4AE0, 213);
    }
    swift_willThrow();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A532A08()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  unsigned __int8 v7[9];

  v1 = *(void **)(v0 + 296);
  v2 = *(void **)(v0 + 288);
  swift_willThrow();

  v3 = *(void **)(v0 + 304);
  v4 = *(void **)(v0 + 288);
  v7[0] = 67;
  v5 = v3;
  ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001BLL, 0x800000020A5E4AC0, (char *)v3, v7, 0, 0, 0xD00000000000005FLL, 0x800000020A5E48C0, 0xD000000000000017, 0x800000020A5E4AE0, 199);

  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A532AF4()
{
  uint64_t v0;
  void *v1;
  id v2;
  unsigned __int8 v4[9];

  swift_willThrow();
  v1 = *(void **)(v0 + 312);
  v4[0] = 67;
  v2 = v1;
  ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001BLL, 0x800000020A5E4AC0, (char *)v1, v4, 0, 0, 0xD00000000000005FLL, 0x800000020A5E48C0, 0xD000000000000017, 0x800000020A5E4AE0, 199);

  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A532BC4()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  unsigned __int8 v6[9];

  v1 = *(void **)(v0 + 328);
  v2 = *(void **)(v0 + 320);
  swift_willThrow();

  v3 = *(void **)(v0 + 336);
  v6[0] = 67;
  v4 = v3;
  ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001BLL, 0x800000020A5E4AC0, (char *)v3, v6, 0, 0, 0xD00000000000005FLL, 0x800000020A5E48C0, 0xD000000000000017, 0x800000020A5E4AE0, 199);

  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A532CA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  unsigned __int8 v26;
  unsigned __int8 v27[16];
  unsigned __int8 v28;

  if (!a2)
  {
    v5 = objc_msgSend(*(id *)(v2 + 128), sel_aida_accountForPrimaryiCloudAccount);
    if (v5)
      goto LABEL_5;
LABEL_9:
    v28 = -65;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000028, 0x800000020A5E4890, 0, &v28, 0, 0, 0xD00000000000005FLL, 0x800000020A5E48C0, 0xD000000000000013, 0x800000020A5E4A10, 231);
    v23 = v22;
    swift_willThrow();
LABEL_13:

    return 0;
  }
  v3 = *(void **)(v2 + 128);
  v4 = (void *)sub_20A5B88F4();
  v5 = objc_msgSend(v3, sel_aida_accountForAltDSID_, v4);

  if (qword_253EB5040 != -1)
    swift_once();
  v6 = (id)qword_253EBC880;
  sub_20A5B8C6C();
  sub_20A5B87B0();

  if (!v5)
    goto LABEL_9;
LABEL_5:
  v7 = v5;
  v8 = objc_msgSend(v7, sel_aida_alternateDSID);
  if (!v8)
  {
    v27[0] = -64;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD000000000000026, 0x800000020A5E4A30, 0, v27, 0, 0, 0xD00000000000005FLL, 0x800000020A5E48C0, 0xD000000000000013, 0x800000020A5E4A10, 234);
LABEL_12:
    v23 = v24;
    swift_willThrow();

    goto LABEL_13;
  }
  v9 = v8;
  v10 = sub_20A5B8900();
  v12 = v11;

  v13 = (void *)sub_20A5B88F4();
  v14 = objc_msgSend(v7, sel_aida_tokenForService_, v13);

  if (!v14)
  {
    swift_bridgeObjectRelease();
    v26 = -63;
    ODIError(_:fromError:code:forceCode:properties:file:function:line:)(0xD00000000000001DLL, 0x800000020A5E4A60, 0, &v26, 0, 0, 0xD00000000000005FLL, 0x800000020A5E48C0, 0xD000000000000013, 0x800000020A5E4A10, 237);
    goto LABEL_12;
  }
  v15 = sub_20A5B8900();
  v17 = v16;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52C0);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_20A5BA9B0;
  v19 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v18 + 56) = MEMORY[0x24BEE0D00];
  v20 = sub_20A450420();
  *(_QWORD *)(v18 + 32) = v10;
  *(_QWORD *)(v18 + 40) = v12;
  *(_QWORD *)(v18 + 96) = v19;
  *(_QWORD *)(v18 + 104) = v20;
  *(_QWORD *)(v18 + 64) = v20;
  *(_QWORD *)(v18 + 72) = v15;
  *(_QWORD *)(v18 + 80) = v17;
  v21 = sub_20A5B8930();

  return v21;
}

void *sub_20A533018(__objc2_meth *a1, char **p_types)
{
  uint64_t v2;
  void *v5;
  void *v6;
  id v7;
  id v8;
  __objc2_meth *v9;
  void *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  void *v19;
  id v20;
  void *v21;
  uint64_t v22;
  id v23;
  void *v25;
  uint64_t v26;
  char v27[32];
  void *v28;
  _OWORD v29[2];
  __int128 v30;
  uint64_t v31;
  _OWORD v32[3];

  v5 = *(void **)(v2 + 128);
  v6 = (void *)sub_20A5B88F4();
  v7 = objc_msgSend(v5, sel_accountTypeWithAccountTypeIdentifier_, v6);

  v8 = objc_msgSend(v5, sel_accountsWithAccountType_, v7);
  v9 = (__objc2_meth *)MEMORY[0x24BEE4AD8];
  if (v8)
  {
    v10 = v8;
    v11 = sub_20A5B8AA4();

  }
  else
  {
    v11 = 0;
  }
  if (qword_253EB5040 != -1)
LABEL_29:
    swift_once();
  v12 = (id)qword_253EBC880;
  sub_20A5B8C48();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52C0);
  v13 = swift_allocObject();
  v14 = v13;
  *(_OWORD *)(v13 + 16) = xmmword_20A5BA9B0;
  if (v11)
    v15 = *(_QWORD *)(v11 + 16);
  else
    v15 = 0;
  v16 = MEMORY[0x24BEE17F0];
  *(_QWORD *)(v13 + 56) = MEMORY[0x24BEE1768];
  *(_QWORD *)(v13 + 64) = v16;
  *(_QWORD *)(v13 + 32) = v15;
  *(_QWORD *)(v13 + 96) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v13 + 104) = sub_20A450420();
  *(_QWORD *)(v14 + 72) = a1;
  *(_QWORD *)(v14 + 80) = p_types;
  swift_bridgeObjectRetain();
  sub_20A5B87B0();

  swift_bridgeObjectRelease();
  if (v11)
  {
    v25 = v7;
    v7 = *(id *)(v11 + 16);
    v17 = v11 + 32;
    swift_bridgeObjectRetain();
    v18 = 0;
    p_types = &v9->types;
    a1 = &stru_24C326000;
    v9 = &stru_24C326000;
    v26 = v11;
    while (1)
    {
      if ((id)v18 == v7)
      {
        memset(v32, 0, 32);
        v18 = (unint64_t)v7;
      }
      else
      {
        if (v18 >= *(_QWORD *)(v11 + 16))
        {
          __break(1u);
          goto LABEL_29;
        }
        sub_20A44FD78(v17 + 32 * v18++, (uint64_t)v32);
      }
      sub_20A459C88((uint64_t)v32, (uint64_t)&v30, &qword_253EB52E0);
      if (!v31)
      {
        swift_bridgeObjectRelease_n();
        v7 = v25;
        break;
      }
      sub_20A44FD68(&v30, v29);
      sub_20A44FD78((uint64_t)v29, (uint64_t)v27);
      sub_20A533738();
      if ((swift_dynamicCast() & 1) != 0)
      {
        v19 = v28;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
        if (v19)
        {
          if (objc_msgSend(v19, sel_isAuthenticated)
            && (objc_msgSend(v19, sel_isActive) & 1) != 0
            && (v20 = objc_msgSend(v19, sel_normalizedDSID)) != 0)
          {
            v21 = v20;
            sub_20A5B8900();

            v22 = sub_20A5B8984();
            swift_bridgeObjectRelease();
            if (v22 > 3)
            {

              swift_bridgeObjectRelease_n();
              return v19;
            }

            v11 = v26;
          }
          else
          {

          }
        }
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
      }
    }
  }
  v23 = (id)qword_253EBC880;
  sub_20A5B8C3C();
  sub_20A5B87B0();

  return 0;
}

uint64_t ODIAccountManager.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_defaultActor_destroy();
  return v0;
}

uint64_t ODIAccountManager.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t ODIAccountManager.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_20A533424()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (__cdecl *v3)();

  v3 = (uint64_t (__cdecl *)())((char *)&dword_2545FBB50 + dword_2545FBB50);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_20A533B7C;
  return v3();
}

uint64_t sub_20A533480(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  v3[2] = a1;
  v3[3] = a2;
  v3[4] = *v2;
  return swift_task_switch();
}

uint64_t sub_20A53349C()
{
  uint64_t v0;
  void *v1;

  v1 = sub_20A533018(*(__objc2_meth **)(v0 + 16), *(char ***)(v0 + 24));
  return (*(uint64_t (**)(void *))(v0 + 8))(v1);
}

uint64_t sub_20A5334D0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 128) = v0;
  return swift_task_switch();
}

uint64_t sub_20A5334E8()
{
  uint64_t v0;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;

  if (*(_QWORD *)(*(_QWORD *)(v0 + 128) + 136))
    return (*(uint64_t (**)(void))(v0 + 8))();
  if (qword_253EB4A80 != -1)
    swift_once();
  v2 = sub_20A5B8804();
  __swift_project_value_buffer(v2, (uint64_t)qword_253EB4950);
  v3 = sub_20A5B87EC();
  v4 = sub_20A5B8C48();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_20A443000, v3, v4, "Primary account is nil. Will attempt to reload", v5, 2u);
    MEMORY[0x20BD26DB8](v5, -1, -1);
  }
  v6 = *(_QWORD *)(v0 + 128);

  v7 = *(void **)(v6 + 128);
  *(_QWORD *)(v0 + 56) = v0 + 120;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_20A53365C;
  v8 = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
  v9 = (_QWORD *)(v0 + 80);
  v9[1] = 0x40000000;
  v9[2] = sub_20A531778;
  v9[3] = &block_descriptor_19;
  v9[4] = v8;
  objc_msgSend(v7, sel_aa_primaryAppleAccountWithCompletion_, v9);
  return swift_continuation_await();
}

uint64_t sub_20A53365C()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 136) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_20A5336BC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(void **)(v1 + 136);
  *(_QWORD *)(v1 + 136) = *(_QWORD *)(v0 + 120);

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v1 + 136));
}

uint64_t sub_20A5336FC()
{
  uint64_t v0;

  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_20A533738()
{
  unint64_t result;

  result = qword_253EB4898;
  if (!qword_253EB4898)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_253EB4898);
  }
  return result;
}

uint64_t dispatch thunk of ODIAccountManagerProtocol.primaryAppleAccount()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 8) + *(_QWORD *)(a2 + 8));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_20A533B80;
  return v7(a1, a2);
}

uint64_t dispatch thunk of ODIAccountManagerProtocol.getAccount(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 16) + *(_QWORD *)(a4 + 16));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_20A494C74;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_20A533864(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 16) + *(_QWORD *)(a2 + 16));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_20A533B78;
  return v7(a1, a2);
}

uint64_t sub_20A5338D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 24) + *(_QWORD *)(a2 + 24));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_20A533B78;
  return v7(a1, a2);
}

uint64_t sub_20A53393C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 32) + *(_QWORD *)(a2 + 32));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_20A533B78;
  return v7(a1, a2);
}

uint64_t sub_20A5339A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 40) + *(_QWORD *)(a4 + 40));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_20A460338;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_20A533A2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 48) + *(_QWORD *)(a4 + 48));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_20A4597C0;
  return v11(a1, a2, a3, a4);
}

uint64_t method lookup function for ODIAccountManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ODIAccountManager.primaryAppleAccount()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 160) + *(_QWORD *)(*(_QWORD *)v0 + 160));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_20A459310;
  return v4();
}

uint64_t dispatch thunk of ODIAccountManager.appleID()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 168) + *(_QWORD *)(*(_QWORD *)v0 + 168));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_20A48AB6C;
  return v4();
}

uint64_t dispatch thunk of ODIAccountManager.getAccount(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

ValueMetadata *type metadata accessor for AMPAssessmentPayloadAdapter()
{
  return &type metadata for AMPAssessmentPayloadAdapter;
}

uint64_t sub_20A533B94(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v47[2];
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unsigned __int8 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unsigned __int8 v83;
  _QWORD v84[17];
  _BYTE v85[144];

  v3 = sub_20A5B8954();
  MEMORY[0x24BDAC7A8](v3, v4);
  v47[1] = (char *)v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *a1;
  v7 = a1[2];
  v9 = a1[3];
  v8 = a1[4];
  v69 = a1[1];
  v70 = v8;
  v10 = a1[5];
  v11 = a1[6];
  v12 = a1[7];
  v13 = a1[8];
  v15 = a1[9];
  v14 = a1[10];
  v67 = a1[11];
  v68 = v14;
  v66 = a1[12];
  v16 = a1[13];
  v64 = v6;
  v65 = v16;
  v63 = a1[14];
  sub_20A47E0CC((uint64_t)(a1 + 15), (uint64_t)v85);
  v17 = v1[1];
  v48 = (_QWORD *)*v1;
  v49 = v17;
  if (v9)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v18 = v70;
  }
  else
  {
    v18 = 0;
    v10 = 0;
    v13 = 0;
    v15 = 0;
    v11 = 0;
    v12 = 0;
    v7 = 0;
  }
  v58 = v9;
  v59 = v13;
  v60 = v12;
  v61 = v11;
  v62 = v10;
  sub_20A47E0CC((uint64_t)v85, (uint64_t)v84);
  v19 = sub_20A4650DC((uint64_t)v84);
  v70 = v18;
  if (v19 == 1)
  {
    v55 = 0;
    v56 = 0;
    v20 = 0;
    v53 = 0;
    v54 = 0;
    v21 = 0;
    v51 = 0;
    v52 = 0;
    v22 = 0;
    v57 = 0;
    v23 = 0;
    v24 = 0xE200000000000000;
    v50 = 12589;
  }
  else
  {
    v23 = v84[3];
    v57 = v84[2];
    sub_20A47E0CC((uint64_t)v85, (uint64_t)&v73);
    v20 = v74;
    v55 = v83;
    v56 = v73;
    v54 = v79;
    v21 = v77;
    v52 = v82;
    v53 = v78;
    v22 = v81;
    v24 = v76;
    v50 = v75;
    v51 = v80;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  type metadata accessor for AMPCristalPayloadData();
  v25 = (_QWORD *)swift_allocObject();
  v26 = v62;
  v25[2] = v70;
  v25[3] = v26;
  v25[4] = v59;
  v25[5] = v15;
  v27 = v60;
  v25[6] = v61;
  v25[7] = v27;
  v28 = v58;
  v25[8] = v7;
  v25[9] = v28;
  v25[10] = v57;
  v25[11] = v23;
  v30 = v68;
  v29 = v69;
  v25[12] = v64;
  v25[13] = v29;
  v25[14] = v56;
  v25[15] = v20;
  v31 = v53;
  v25[16] = v55;
  v25[17] = v31;
  v25[18] = v54;
  v25[19] = v21;
  v32 = v51;
  v25[20] = v52;
  v25[21] = v32;
  v25[22] = v22;
  v25[23] = v30;
  v34 = v66;
  v33 = v67;
  v25[24] = v67;
  v25[25] = v34;
  v35 = v65;
  v36 = v63;
  v25[26] = v65;
  v25[27] = v36;
  v25[28] = v50;
  v25[29] = v24;
  sub_20A5B8288();
  swift_allocObject();
  swift_bridgeObjectRetain();
  sub_20A465850(v30, v33, v34, v35, v36);
  sub_20A5B827C();
  v73 = v25;
  sub_20A534080();
  v40 = sub_20A5B8270();
  v42 = v41;
  swift_release();
  sub_20A5B893C();
  v43 = sub_20A5B8918();
  v45 = v44;
  sub_20A44BD90(v40, v42);
  if (v45)
  {
    swift_release();
  }
  else
  {
    v73 = v48;
    v74 = v49;
    LOBYTE(v71) = 14;
    swift_bridgeObjectRetain();
    CoreODILogger.fault(_:category:)(0xD00000000000001BLL, 0x800000020A5DCD30, &v71);
    swift_bridgeObjectRelease();
    sub_20A47E0CC((uint64_t)v85, (uint64_t)&v73);
    if (sub_20A4650DC((uint64_t)&v73) != 1)
      swift_bridgeObjectRetain();
    v71 = 0;
    v72 = 0xE000000000000000;
    sub_20A5B8E94();
    sub_20A5B899C();
    sub_20A5B899C();
    sub_20A5B899C();
    v37 = sub_20A44A5C8(v71, v72);
    v39 = v38;
    sub_20A5B854C();
    sub_20A44BD90(v37, v39);
    swift_bridgeObjectRelease();
    v71 = 0;
    v72 = 0xE000000000000000;
    sub_20A5B8E94();
    swift_bridgeObjectRelease();
    v71 = 0x737365737361227BLL;
    v72 = 0xEF223A22746E656DLL;
    sub_20A5B899C();
    swift_bridgeObjectRelease();
    sub_20A5B899C();
    swift_release();
    return v71;
  }
  return v43;
}

unint64_t sub_20A534080()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2545FBBD0;
  if (!qword_2545FBBD0)
  {
    v1 = type metadata accessor for AMPCristalPayloadData();
    result = MEMORY[0x20BD26CEC](&unk_20A5C020C, v1);
    atomic_store(result, (unint64_t *)&qword_2545FBBD0);
  }
  return result;
}

uint64_t ArmandDeviceData.hasValidData.getter()
{
  uint64_t *v0;
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  _BYTE __dst[281];
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD v13[3];

  v1 = *v0;
  memcpy(__dst, v0 + 62, sizeof(__dst));
  v2 = *(_OWORD *)(v0 + 113);
  v11 = *(_OWORD *)(v0 + 111);
  v12 = v2;
  v13[0] = *(_OWORD *)(v0 + 115);
  *(_OWORD *)((char *)v13 + 10) = *(_OWORD *)((char *)v0 + 930);
  v3 = *(_OWORD *)(v0 + 105);
  v7 = *(_OWORD *)(v0 + 103);
  v8 = v3;
  v4 = *(_OWORD *)(v0 + 109);
  v9 = *(_OWORD *)(v0 + 107);
  v10 = v4;
  if (v1 && *(_QWORD *)(v1 + 16))
  {
    swift_bridgeObjectRetain();
    __asm { BR              X9 }
  }
  return 0;
}

uint64_t static ArmandDeviceData.isLessComplete(lhs:than:)(uint64_t a1, uint64_t a2)
{
  unsigned __int8 *v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  __int16 v13;
  __int16 v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  char v23;
  char v24;
  char v25;
  char v26;
  uint64_t v28;
  __int16 v29;
  __int16 v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  __int16 v35;
  uint64_t v36;
  uint64_t v37;
  __int16 v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  unsigned __int8 v45;
  uint64_t v46;
  uint64_t v47;
  unsigned __int8 v48;
  uint64_t v49;
  __int16 v50;
  __int16 v51;
  __int16 v52;
  __int16 v53;
  uint64_t v54;
  unsigned __int8 v55;
  uint64_t v56;
  uint64_t v57;
  unsigned __int8 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __int16 v73;
  uint64_t v74;
  __int16 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  __int16 v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  __int16 v97;
  uint64_t v98;
  __int16 v99;
  __int16 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  char v104;
  __int128 v105;
  __int16 v106;
  __int16 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  char v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  uint64_t v115;
  char v116;
  uint64_t v117;
  uint64_t v118;
  __int128 v119;
  __int128 v120;
  uint64_t v121;
  char v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unsigned __int8 v126;
  uint64_t v127;
  uint64_t v128;
  unsigned __int8 v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  __int16 v140;
  __int16 v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char v152;
  uint64_t v153;
  uint64_t v154;
  _BYTE v155[107];
  _BYTE v156[128];
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  _OWORD v163[2];
  __int128 v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  __int128 v169;
  _OWORD v170[12];
  _OWORD v171[18];
  _OWORD v172[18];
  _BYTE __dst[281];
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  _OWORD v180[2];
  _BYTE __src[281];
  __int128 v182;
  __int128 v183;
  __int128 v184;
  __int128 v185;
  __int128 v186;
  __int128 v187;
  _OWORD v188[3];

  v154 = *(unsigned __int8 *)(a1 + 24);
  v153 = *(unsigned __int8 *)(a1 + 48);
  v4 = (unsigned __int8 *)(a2 + 408);
  v152 = *(_BYTE *)(a1 + 72);
  v148 = *(_QWORD *)(a1 + 80);
  v147 = *(_QWORD *)(a1 + 88);
  v151 = *(unsigned __int8 *)(a1 + 96);
  v146 = *(_QWORD *)(a1 + 104);
  v145 = *(_QWORD *)(a1 + 112);
  v150 = *(unsigned __int8 *)(a1 + 120);
  v144 = *(_QWORD *)(a1 + 128);
  v143 = *(_QWORD *)(a1 + 136);
  v149 = *(unsigned __int8 *)(a1 + 144);
  v142 = *(_QWORD *)(a1 + 152);
  v141 = *(unsigned __int8 *)(a1 + 160);
  v140 = *(unsigned __int8 *)(a1 + 161);
  v130 = *(_QWORD *)(a1 + 168);
  v131 = *(_QWORD *)(a1 + 176);
  v129 = *(_BYTE *)(a1 + 184);
  v125 = *(_QWORD *)(a1 + 192);
  v124 = *(unsigned __int8 *)(a1 + 200);
  v123 = *(unsigned __int8 *)(a1 + 201);
  v96 = *(unsigned __int8 *)(a1 + 424);
  v95 = *(unsigned __int8 *)(a1 + 440);
  v98 = *(unsigned __int8 *)(a1 + 456);
  v97 = *(unsigned __int8 *)(a1 + 472);
  v119 = *(_OWORD *)(a1 + 208);
  *(_QWORD *)&v120 = *(unsigned __int8 *)(a1 + 224);
  *((_QWORD *)&v120 + 1) = *(_QWORD *)(a1 + 232);
  v121 = *(_QWORD *)(a1 + 240);
  v122 = *(_BYTE *)(a1 + 248);
  v108 = *(_OWORD *)(a1 + 256);
  *(_QWORD *)&v109 = *(unsigned __int8 *)(a1 + 272);
  *((_QWORD *)&v109 + 1) = *(_QWORD *)(a1 + 280);
  *(_QWORD *)&v110 = *(_QWORD *)(a1 + 288);
  *((_QWORD *)&v110 + 1) = *(unsigned __int8 *)(a1 + 296);
  v112 = *(_OWORD *)(a1 + 304);
  v107 = *(unsigned __int8 *)(a1 + 320);
  v106 = *(unsigned __int8 *)(a1 + 321);
  v111 = *(_BYTE *)(a1 + 322);
  v57 = *(_QWORD *)(a1 + 328);
  v59 = *(_QWORD *)(a1 + 336);
  v58 = *(_BYTE *)(a1 + 344);
  v52 = *(unsigned __int8 *)(a1 + 346);
  v53 = *(unsigned __int8 *)(a1 + 345);
  v47 = *(_QWORD *)(a1 + 352);
  v49 = *(_QWORD *)(a1 + 360);
  v48 = *(_BYTE *)(a1 + 368);
  v88 = *(_QWORD *)(a1 + 384);
  v89 = *(_QWORD *)(a1 + 376);
  v85 = *(unsigned __int8 *)(a1 + 392);
  v82 = *(unsigned __int8 *)(a1 + 393);
  v84 = *(unsigned __int8 *)(a1 + 394);
  v83 = *(unsigned __int8 *)(a1 + 408);
  v81 = *(unsigned __int8 *)(a1 + 409);
  v86 = *(_QWORD *)(a1 + 416);
  v87 = *(_QWORD *)(a1 + 400);
  v80 = *(unsigned __int8 *)(a1 + 425);
  v79 = *(unsigned __int8 *)(a1 + 441);
  v93 = *(_QWORD *)(a1 + 448);
  v91 = *(_QWORD *)(a1 + 432);
  v92 = *(unsigned __int8 *)(a1 + 457);
  v94 = *(_QWORD *)(a1 + 464);
  v90 = *(unsigned __int8 *)(a1 + 473);
  v43 = *(_QWORD *)(a1 + 480);
  v42 = *(_BYTE *)(a1 + 488);
  memcpy(__dst, (const void *)(a1 + 496), sizeof(__dst));
  v34 = *(unsigned int *)(a1 + 784);
  v36 = *(_QWORD *)(a1 + 792);
  v37 = *(unsigned __int8 *)(a1 + 800);
  v33 = *(unsigned __int8 *)(a1 + 801);
  v39 = *(_QWORD *)(a1 + 808);
  v38 = *(unsigned __int8 *)(a1 + 816);
  v35 = *(unsigned __int8 *)(a1 + 817);
  v5 = *(_OWORD *)(a1 + 904);
  v178 = *(_OWORD *)(a1 + 888);
  v179 = v5;
  v180[0] = *(_OWORD *)(a1 + 920);
  *(_OWORD *)((char *)v180 + 10) = *(_OWORD *)(a1 + 930);
  v6 = *(_OWORD *)(a1 + 840);
  v174 = *(_OWORD *)(a1 + 824);
  v175 = v6;
  v7 = *(_OWORD *)(a1 + 872);
  v176 = *(_OWORD *)(a1 + 856);
  v177 = v7;
  v8 = *(unsigned __int8 *)(a2 + 24);
  v9 = *(unsigned __int8 *)(a2 + 48);
  v10 = *(_BYTE *)(a2 + 72);
  v138 = *(_QWORD *)(a2 + 80);
  v137 = *(_QWORD *)(a2 + 88);
  v139 = *(unsigned __int8 *)(a2 + 96);
  v136 = *(_QWORD *)(a2 + 104);
  v135 = *(_QWORD *)(a2 + 112);
  v11 = *(unsigned __int8 *)(a2 + 120);
  v134 = *(_QWORD *)(a2 + 128);
  v133 = *(_QWORD *)(a2 + 136);
  v12 = *(unsigned __int8 *)(a2 + 144);
  v132 = *(_QWORD *)(a2 + 152);
  v13 = *(unsigned __int8 *)(a2 + 160);
  v14 = *(unsigned __int8 *)(a2 + 161);
  v127 = *(_QWORD *)(a2 + 168);
  v128 = *(_QWORD *)(a2 + 176);
  v126 = *(_BYTE *)(a2 + 184);
  v118 = *(_QWORD *)(a2 + 192);
  v117 = *(unsigned __int8 *)(a2 + 200);
  v78 = v4[16];
  v77 = v4[32];
  v76 = v4[48];
  v75 = v4[64];
  v15 = *(unsigned __int8 *)(a2 + 201);
  v113 = *(_OWORD *)(a2 + 208);
  *(_QWORD *)&v114 = *(unsigned __int8 *)(a2 + 224);
  *((_QWORD *)&v114 + 1) = *(_QWORD *)(a2 + 232);
  v115 = *(_QWORD *)(a2 + 240);
  v116 = *(_BYTE *)(a2 + 248);
  v101 = *(_OWORD *)(a2 + 256);
  *(_QWORD *)&v102 = *(unsigned __int8 *)(a2 + 272);
  *((_QWORD *)&v102 + 1) = *(_QWORD *)(a2 + 280);
  *(_QWORD *)&v103 = *(_QWORD *)(a2 + 288);
  *((_QWORD *)&v103 + 1) = *(unsigned __int8 *)(a2 + 296);
  v105 = *(_OWORD *)(a2 + 304);
  v100 = *(unsigned __int8 *)(a2 + 320);
  v99 = *(unsigned __int8 *)(a2 + 321);
  v104 = *(_BYTE *)(a2 + 322);
  v54 = *(_QWORD *)(a2 + 328);
  v56 = *(_QWORD *)(a2 + 336);
  v55 = *(_BYTE *)(a2 + 344);
  v50 = *(unsigned __int8 *)(a2 + 346);
  v51 = *(unsigned __int8 *)(a2 + 345);
  v44 = *(_QWORD *)(a2 + 352);
  v46 = *(_QWORD *)(a2 + 360);
  v45 = *(_BYTE *)(a2 + 368);
  v61 = *(unsigned __int8 *)(a2 + 392);
  v60 = *(unsigned __int8 *)(a2 + 393);
  v62 = *(unsigned __int8 *)(a2 + 394);
  v63 = *(_QWORD *)(a2 + 376);
  v65 = *(_QWORD *)(a2 + 400);
  v66 = *(_QWORD *)(a2 + 384);
  *(_QWORD *)&v67 = *(unsigned __int8 *)(a2 + 408);
  v64 = *(unsigned __int8 *)(a2 + 409);
  *((_QWORD *)&v67 + 1) = *(_QWORD *)(a2 + 416);
  v68 = *(unsigned __int8 *)(a2 + 425);
  v69 = *(_QWORD *)(a2 + 432);
  v70 = *(unsigned __int8 *)(a2 + 441);
  v71 = *(_QWORD *)(a2 + 448);
  v72 = *(unsigned __int8 *)(a2 + 457);
  v74 = *(_QWORD *)(a2 + 464);
  v73 = *(unsigned __int8 *)(a2 + 473);
  v41 = *(_QWORD *)(a2 + 480);
  v40 = *(_BYTE *)(a2 + 488);
  memcpy(__src, (const void *)(a2 + 496), sizeof(__src));
  *(_QWORD *)&v32 = *(unsigned int *)(a2 + 784);
  *((_QWORD *)&v32 + 1) = *(_QWORD *)(a2 + 792);
  v16 = *(_OWORD *)(a1 + 8);
  v17 = *(_OWORD *)(a1 + 32);
  v18 = *(_OWORD *)(a1 + 56);
  v28 = *(unsigned __int8 *)(a2 + 800);
  v19 = *(unsigned __int8 *)(a2 + 801);
  v31 = *(_QWORD *)(a2 + 808);
  v29 = *(unsigned __int8 *)(a2 + 817);
  v30 = *(unsigned __int8 *)(a2 + 816);
  v20 = *(_OWORD *)(a2 + 904);
  v186 = *(_OWORD *)(a2 + 888);
  v187 = v20;
  v188[0] = *(_OWORD *)(a2 + 920);
  *(_OWORD *)((char *)v188 + 10) = *(_OWORD *)(a2 + 930);
  v21 = *(_OWORD *)(a2 + 840);
  v182 = *(_OWORD *)(a2 + 824);
  v183 = v21;
  v22 = *(_OWORD *)(a2 + 872);
  v184 = *(_OWORD *)(a2 + 856);
  v185 = v22;
  v172[0] = v16;
  *(_QWORD *)&v172[1] = v154;
  *(_OWORD *)((char *)&v172[1] + 8) = v17;
  *((_QWORD *)&v172[2] + 1) = v153;
  v172[3] = v18;
  LOBYTE(v172[4]) = v152;
  v171[0] = *(_OWORD *)(a2 + 8);
  *(_QWORD *)&v171[1] = v8;
  *(_OWORD *)((char *)&v171[1] + 8) = *(_OWORD *)(a2 + 32);
  *((_QWORD *)&v171[2] + 1) = v9;
  v171[3] = *(_OWORD *)(a2 + 56);
  LOBYTE(v171[4]) = v10;
  if ((sub_20A590024((uint64_t)v172, (uint64_t)v171) & 1) != 0)
    goto LABEL_13;
  *(_QWORD *)&v172[0] = v148;
  *((_QWORD *)&v172[0] + 1) = v147;
  *(_QWORD *)&v172[1] = v151;
  *((_QWORD *)&v172[1] + 1) = v146;
  *(_QWORD *)&v172[2] = v145;
  *((_QWORD *)&v172[2] + 1) = v150;
  *(_QWORD *)&v172[3] = v144;
  *((_QWORD *)&v172[3] + 1) = v143;
  *(_QWORD *)&v172[4] = v149;
  *((_QWORD *)&v172[4] + 1) = v142;
  LOWORD(v172[5]) = v141 | (v140 << 8);
  *(_QWORD *)&v171[0] = v138;
  *((_QWORD *)&v171[0] + 1) = v137;
  *(_QWORD *)&v171[1] = v139;
  *((_QWORD *)&v171[1] + 1) = v136;
  *(_QWORD *)&v171[2] = v135;
  *((_QWORD *)&v171[2] + 1) = v11;
  *(_QWORD *)&v171[3] = v134;
  *((_QWORD *)&v171[3] + 1) = v133;
  *(_QWORD *)&v171[4] = v12;
  *((_QWORD *)&v171[4] + 1) = v132;
  LOWORD(v171[5]) = v13 | (v14 << 8);
  if ((sub_20A59026C((uint64_t)v172, (uint64_t)v171) & 1) != 0)
    goto LABEL_13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v23 = sub_20A53D37C(v127, v128, v126, v130, v131, v129);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v23 & 1) == 0)
    goto LABEL_13;
  *(_QWORD *)&v172[0] = v125;
  *((_QWORD *)&v172[0] + 1) = v124 | (v123 << 8);
  v172[1] = v119;
  v172[2] = v120;
  *(_QWORD *)&v172[3] = v121;
  BYTE8(v172[3]) = v122;
  *(_QWORD *)&v171[0] = v118;
  *((_QWORD *)&v171[0] + 1) = v117 | (v15 << 8);
  v171[1] = v113;
  v171[2] = v114;
  *(_QWORD *)&v171[3] = v115;
  BYTE8(v171[3]) = v116;
  if ((sub_20A59050C((uint64_t)v172, (uint64_t)v171) & 1) != 0)
    goto LABEL_13;
  v172[0] = v108;
  v172[1] = v109;
  v172[2] = v110;
  v172[3] = v112;
  BYTE2(v172[4]) = v111;
  LOWORD(v172[4]) = v107 | (v106 << 8);
  v171[0] = v101;
  v171[1] = v102;
  v171[2] = v103;
  v171[3] = v105;
  BYTE2(v171[4]) = v104;
  LOWORD(v171[4]) = v100 | (v99 << 8);
  if ((sub_20A5906E4((uint64_t)v172, (uint64_t)v171) & 1) != 0)
    goto LABEL_13;
  *(_QWORD *)&v172[0] = v89;
  *((_QWORD *)&v172[0] + 1) = v88;
  *(_QWORD *)&v172[1] = v85 | (v82 << 8) | (v84 << 16);
  *((_QWORD *)&v172[1] + 1) = v87;
  *(_QWORD *)&v172[2] = v83 | (v81 << 8);
  *((_QWORD *)&v172[2] + 1) = v86;
  *(_QWORD *)&v172[3] = v96 | (v80 << 8);
  *((_QWORD *)&v172[3] + 1) = v91;
  *(_QWORD *)&v172[4] = v95 | (v79 << 8);
  *((_QWORD *)&v172[4] + 1) = v93;
  *(_QWORD *)&v172[5] = v98 | (v92 << 8);
  *((_QWORD *)&v172[5] + 1) = v94;
  LOWORD(v172[6]) = v97 | (v90 << 8);
  *(_QWORD *)&v171[0] = v63;
  *((_QWORD *)&v171[0] + 1) = v66;
  *(_QWORD *)&v171[1] = v61 | (v60 << 8) | (v62 << 16);
  *((_QWORD *)&v171[1] + 1) = v65;
  v171[2] = v67 | (unint64_t)(v64 << 8);
  *(_QWORD *)&v171[3] = v78 | (v68 << 8);
  *((_QWORD *)&v171[3] + 1) = v69;
  *(_QWORD *)&v171[4] = v77 | (v70 << 8);
  *((_QWORD *)&v171[4] + 1) = v71;
  *(_QWORD *)&v171[5] = v76 | (v72 << 8);
  *((_QWORD *)&v171[5] + 1) = v74;
  LOWORD(v171[6]) = v75 | (v73 << 8);
  if (sub_20A590980((uint64_t)v172, (uint64_t)v171))
    goto LABEL_13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v24 = sub_20A53D37C(v54, v56, v55, v57, v59, v58);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v24 & 1) == 0)
    goto LABEL_13;
  if ((sub_20A53F2B4(v51 | (unsigned __int16)(v50 << 8), v53 | (unsigned __int16)(v52 << 8)) & 1) == 0)
    goto LABEL_13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v25 = sub_20A53D37C(v44, v46, v45, v47, v49, v48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v25 & 1) == 0)
    goto LABEL_13;
  *(_QWORD *)&v172[0] = v43;
  BYTE8(v172[0]) = v42;
  *(_QWORD *)&v171[0] = v41;
  BYTE8(v171[0]) = v40;
  if ((sub_20A590D50((uint64_t *)v172, (uint64_t *)v171) & 1) != 0)
    goto LABEL_13;
  memcpy(v171, __dst, 0x119uLL);
  nullsub_1(v171);
  sub_20A459C88((uint64_t)v171, (uint64_t)&v164, &qword_2545FBBD8);
  memcpy(v172, __src, 0x119uLL);
  nullsub_1(v172);
  sub_20A459C88((uint64_t)v172, (uint64_t)&v157, &qword_2545FBBD8);
  if ((sub_20A591440((uint64_t)&v164, (uint64_t)&v157) & 1) != 0)
    goto LABEL_13;
  *(_QWORD *)&v164 = v34;
  *((_QWORD *)&v164 + 1) = v36;
  *(_QWORD *)&v165 = v37 | (v33 << 8);
  *((_QWORD *)&v165 + 1) = v39;
  LOWORD(v166) = v38 | (v35 << 8);
  v157 = v32;
  *(_QWORD *)&v158 = v28 | (v19 << 8);
  *((_QWORD *)&v158 + 1) = v31;
  LOWORD(v159) = v30 | (v29 << 8);
  if ((sub_20A591F68((uint64_t *)&v164, (uint64_t *)&v157) & 1) != 0)
  {
LABEL_13:
    v26 = 0;
  }
  else
  {
    v161 = v178;
    v162 = v179;
    v163[0] = v180[0];
    *(_OWORD *)((char *)v163 + 10) = *(_OWORD *)((char *)v180 + 10);
    v157 = v174;
    v158 = v175;
    v159 = v176;
    v160 = v177;
    nullsub_1(&v157);
    sub_20A459C88((uint64_t)&v157, (uint64_t)v156, &qword_2545FBBE0);
    v168 = v186;
    v169 = v187;
    v170[0] = v188[0];
    *(_OWORD *)((char *)v170 + 10) = *(_OWORD *)((char *)v188 + 10);
    v164 = v182;
    v165 = v183;
    v166 = v184;
    v167 = v185;
    nullsub_1(&v164);
    sub_20A459C88((uint64_t)&v164, (uint64_t)v155, &qword_2545FBBE0);
    v26 = sub_20A59207C((uint64_t)v156, (uint64_t)v155) ^ 1;
  }
  return v26 & 1;
}

unint64_t ArmandDeviceData.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  unsigned int v9;
  unint64_t v11;

  v0 = sub_20A5B8954();
  MEMORY[0x24BDAC7A8](v0, v1);
  v2 = sub_20A535888();
  v4 = v3;
  sub_20A5B893C();
  sub_20A5B8918();
  v6 = v5;
  sub_20A44BD90(v2, v4);
  if (!v6)
    return 0xD00000000000001FLL;
  swift_bridgeObjectRetain();
  sub_20A5B89FC();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v8 = (void *)sub_20A5B88F4();
  v9 = objc_msgSend(v7, sel_BOOLForKey_, v8);

  if (v9)
  {
    sub_20A5B8E94();
    swift_bridgeObjectRelease();
    v11 = 0x6144656369766544;
    sub_20A5B9170();
    sub_20A5B899C();
    swift_bridgeObjectRelease();
    sub_20A5B899C();
    sub_20A5B899C();
    swift_bridgeObjectRelease();
    sub_20A5B899C();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_20A5B8E94();
    swift_bridgeObjectRelease();
    v11 = 0xD000000000000011;
    sub_20A5B9170();
    sub_20A5B899C();
    swift_bridgeObjectRelease();
  }
  return v11;
}

uint64_t sub_20A535888()
{
  void **v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(_QWORD **, uint64_t, uint64_t);
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  void *v29;
  void *v30;
  id v31;
  _QWORD *v32;
  void *v33;
  uint64_t result;
  _QWORD *v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  char v41;
  char v42;
  uint64_t v43;
  _QWORD *v44;
  char v45;
  _QWORD v46[4];
  char v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char v52;
  _QWORD *v53;
  _QWORD v54[127];
  _QWORD v55[3];
  uint64_t v56;
  uint64_t v57;
  _BYTE __dst[1009];
  uint64_t v59;

  v59 = *MEMORY[0x24BDAC8D0];
  v1 = *v0;
  memcpy(__dst, v0 + 1, sizeof(__dst));
  if (v1)
    v2 = v1;
  else
    v2 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v3 = v2[2];
  if (v3)
  {
    swift_bridgeObjectRetain();
    v4 = (char *)v2 + 89;
    v44 = (_QWORD *)MEMORY[0x24BEE4B00];
    v35 = v1;
    while (1)
    {
      v39 = *(_QWORD *)(v4 - 49);
      v40 = *(_QWORD **)(v4 - 57);
      v37 = v3;
      v38 = *(_QWORD *)(v4 - 41);
      v6 = *(_QWORD *)(v4 - 33);
      v45 = *(v4 - 25);
      v7 = *v4;
      v8 = *(v4 - 1);
      v9 = *(_QWORD *)(v4 - 9);
      v10 = *(_QWORD *)(v4 - 17);
      v36 = v4;
      v41 = *(v4 - 24);
      v42 = *v4;
      v53 = v1;
      memcpy(v54, __dst, 0x3F1uLL);
      v46[0] = v40;
      v46[1] = v39;
      v46[2] = v38;
      v46[3] = v6;
      v47 = v45;
      v48 = v41;
      v49 = v10;
      v50 = v9;
      v51 = v8;
      v52 = v7;
      sub_20A567C1C((uint64_t)v46);
      v11 = v56;
      v12 = v57;
      __swift_project_boxed_opaque_existential_1(v55, v56);
      v53 = v40;
      v54[0] = v39;
      v54[1] = v38;
      v54[2] = v6;
      LOBYTE(v54[3]) = v45;
      BYTE1(v54[3]) = v41;
      v54[4] = v10;
      v54[5] = v9;
      LOBYTE(v54[6]) = v8;
      BYTE1(v54[6]) = v42;
      v13 = *(uint64_t (**)(_QWORD **, uint64_t, uint64_t))(v12 + 24);
      swift_bridgeObjectRetain();
      v43 = v6;
      sub_20A45DDBC(v38, v6, v45);
      swift_bridgeObjectRetain();
      v14 = v13(&v53, v11, v12);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v53 = v44;
      v17 = sub_20A47094C((uint64_t)v40, v39);
      v18 = v44[2];
      v19 = (v16 & 1) == 0;
      v20 = v18 + v19;
      if (__OFADD__(v18, v19))
      {
        __break(1u);
LABEL_24:
        __break(1u);
      }
      v21 = v16;
      if (v44[3] >= v20)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_20A47764C();
      }
      else
      {
        sub_20A472A50(v20, isUniquelyReferenced_nonNull_native);
        v22 = sub_20A47094C((uint64_t)v40, v39);
        if ((v21 & 1) != (v23 & 1))
        {
          result = sub_20A5B9218();
          __break(1u);
          return result;
        }
        v17 = v22;
      }
      v24 = v53;
      v44 = v53;
      if ((v21 & 1) != 0)
      {
        v5 = v53[7];
        swift_bridgeObjectRelease();
        *(_QWORD *)(v5 + 8 * v17) = v14;
      }
      else
      {
        v53[(v17 >> 6) + 8] |= 1 << v17;
        v25 = (_QWORD *)(v24[6] + 16 * v17);
        *v25 = v40;
        v25[1] = v39;
        *(_QWORD *)(v24[7] + 8 * v17) = v14;
        v26 = v24[2];
        v27 = __OFADD__(v26, 1);
        v28 = v26 + 1;
        if (v27)
          goto LABEL_24;
        v24[2] = v28;
        swift_bridgeObjectRetain();
      }
      v4 = v36 + 64;
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      sub_20A45DDCC(v38, v43, v45);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
      v3 = v37 - 1;
      v1 = v35;
      if (v37 == 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_19;
      }
    }
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_19:
  v29 = (void *)objc_opt_self();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA1B0);
  v30 = (void *)sub_20A5B887C();
  swift_bridgeObjectRelease();
  v53 = 0;
  v31 = objc_msgSend(v29, sel_dataWithJSONObject_options_error_, v30, 0, &v53);

  v32 = v53;
  if (v31)
  {
    v33 = (void *)sub_20A5B8564();

  }
  else
  {
    v33 = v32;
    sub_20A5B8420();

    swift_willThrow();
  }
  return (uint64_t)v33;
}

uint64_t sub_20A535CA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD v19[4];
  _QWORD v20[4];

  v4 = v3;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB5180);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A47D62C(a1, (uint64_t)v10, (uint64_t *)&unk_253EB5180);
  v11 = sub_20A5B8B64();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_20A44CE2C((uint64_t)v10, (uint64_t *)&unk_253EB5180);
    if (*(_QWORD *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      v13 = sub_20A5B8AF8();
      v15 = v14;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_20A5B8B58();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
    if (*(_QWORD *)(a3 + 16))
      goto LABEL_3;
  }
  v13 = 0;
  v15 = 0;
LABEL_6:
  v16 = *v4;
  v17 = (_QWORD *)(v15 | v13);
  if (v15 | v13)
  {
    v20[0] = 0;
    v20[1] = 0;
    v17 = v20;
    v20[2] = v13;
    v20[3] = v15;
  }
  v19[1] = 1;
  v19[2] = v17;
  v19[3] = v16;
  swift_task_create();
  return swift_release();
}

unint64_t sub_20A535E34(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t inited;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_2545FA940);
    inited = swift_initStackObject();
    v7 = inited;
    *(_QWORD *)(inited + 32) = 0x65756C6176;
    *(_QWORD *)(inited + 40) = 0xE500000000000000;
    v8 = MEMORY[0x24BEE0D00];
    v9 = MEMORY[0x24BEE0D10];
    *(_OWORD *)(inited + 16) = xmmword_20A5BA9B0;
    *(_QWORD *)(inited + 72) = v8;
    *(_QWORD *)(inited + 80) = v9;
    *(_QWORD *)(inited + 48) = a1;
    *(_QWORD *)(inited + 56) = a2;
    *(_QWORD *)(inited + 88) = 0x646F43726F727265;
    *(_QWORD *)(inited + 96) = 0xE900000000000065;
    if ((a3 + 47) >= 9u)
      __asm { BR              X11 }
    v10 = MEMORY[0x24BEE1778];
    *(_QWORD *)(inited + 128) = MEMORY[0x24BEE1768];
    *(_QWORD *)(inited + 136) = v10;
    *(_QWORD *)(inited + 104) = -(uint64_t)(a3 + 47);
    swift_bridgeObjectRetain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_2545FA940);
    v11 = swift_initStackObject();
    v7 = v11;
    *(_OWORD *)(v11 + 16) = xmmword_20A5BA9A0;
    *(_QWORD *)(v11 + 32) = 0x646F43726F727265;
    *(_QWORD *)(v11 + 40) = 0xE900000000000065;
    if ((a3 + 47) >= 9u)
      __asm { BR              X11 }
    v12 = MEMORY[0x24BEE1778];
    *(_QWORD *)(v11 + 72) = MEMORY[0x24BEE1768];
    *(_QWORD *)(v11 + 80) = v12;
    *(_QWORD *)(v11 + 48) = -(uint64_t)(a3 + 47);
  }
  return sub_20A469B08(v7);
}

void sub_20A535FDC()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A535FE4()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A535FEC()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A535FF4()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A535FFC()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536004()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A53600C()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536014()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A53601C()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536024()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A53602C()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536034()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A53603C()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536044()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A53604C()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536054()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A53605C()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536064()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A53606C()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536074()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A53607C()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536084()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A53608C()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536094()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A53609C()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5360A4()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5360AC()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5360B4()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5360BC()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5360C4()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5360CC()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5360D4()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5360DC()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5360E4()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5360EC()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5360F4()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5360FC()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536104()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A53610C()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536114()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A53611C()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536124()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A53612C()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536134()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A53613C()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536144()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A53614C()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536154()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A53615C()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536164()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A53616C()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536174()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A53617C()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536184()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A53618C()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536194()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A53619C()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5361A4()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5361AC()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5361B4()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5361BC()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5361C8()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5361D8()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5361E8()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5361F0()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5361F8()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536200()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536208()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536210()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536218()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536220()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536228()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536230()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536238()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536240()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536248()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536250()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536258()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536260()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536268()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536270()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536278()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536280()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536288()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536290()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536298()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5362A0()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5362A8()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5362B0()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5362B8()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5362C0()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5362C8()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5362D0()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5362D8()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5362E0()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5362E8()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5362F0()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5362F8()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536304()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A53630C()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536314()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A53631C()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536324()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A53632C()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536334()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A53633C()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536344()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A53634C()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536354()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A53635C()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536364()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A53636C()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536374()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A53637C()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536384()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A53638C()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536394()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A53639C()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5363A4()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5363AC()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5363B4()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5363BC()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5363C4()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5363CC()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5363D4()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5363DC()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5363E4()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5363EC()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5363F4()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5363FC()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536404()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A53640C()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536414()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A53641C()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536424()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A53642C()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536434()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A53643C()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536444()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A53644C()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536454()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A53645C()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536464()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A53646C()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536474()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A53647C()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536484()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A53648C()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536494()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A53649C()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5364A4()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5364AC()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5364B4()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5364BC()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5364C4()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5364CC()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5364D4()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5364DC()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5364E4()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5364EC()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5364F4()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5364FC()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536504()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A53650C()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536514()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A53651C()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536524()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A53652C()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536534()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A53653C()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536544()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A53654C()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536554()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A53655C()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536564()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A53656C()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536574()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A53657C()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536584()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A53658C()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A536594()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A53659C()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5365A4()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5365AC()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5365B4()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5365BC()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5365C4()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5365CC()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5365D4()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5365DC()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5365E4()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5365EC()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5365F4()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5365FC()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A53660C()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A53661C()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A53662C()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A53663C()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A53664C()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A53665C()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A53666C()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A53667C()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A53668C()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A53669C()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5366AC()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5366BC()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5366CC()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5366DC()
{
  JUMPOUT(0x20A535EE0);
}

void sub_20A5366E8()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A5366F0()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A5366F8()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536700()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536708()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536710()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536718()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536720()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536728()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536730()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536738()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536740()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536748()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536750()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536758()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536760()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536768()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536770()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536778()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536780()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536788()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536790()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536798()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A5367A0()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A5367A8()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A5367B0()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A5367B8()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A5367C0()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A5367C8()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A5367D0()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A5367D8()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A5367E0()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A5367E8()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A5367F0()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A5367F8()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536800()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536808()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536810()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536818()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536820()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536828()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536830()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536838()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536840()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536848()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536850()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536858()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536860()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536868()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536870()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536878()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536880()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536888()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536890()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536898()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A5368A0()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A5368A8()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A5368B0()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A5368B8()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A5368C0()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A5368CC()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A5368DC()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A5368EC()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A5368F4()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A5368FC()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536904()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A53690C()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536914()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A53691C()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536924()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A53692C()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536934()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A53693C()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536944()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A53694C()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536954()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A53695C()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536964()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A53696C()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536974()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A53697C()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536984()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A53698C()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536994()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A53699C()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A5369A4()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A5369AC()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A5369B4()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A5369BC()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A5369C4()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A5369CC()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A5369D4()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A5369DC()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A5369E4()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A5369EC()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A5369F4()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A5369FC()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536A08()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536A10()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536A18()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536A20()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536A28()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536A30()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536A38()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536A40()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536A48()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536A50()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536A58()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536A60()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536A68()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536A70()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536A78()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536A80()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536A88()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536A90()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536A98()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536AA0()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536AA8()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536AB0()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536AB8()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536AC0()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536AC8()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536AD0()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536AD8()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536AE0()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536AE8()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536AF0()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536AF8()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536B00()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536B08()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536B10()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536B18()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536B20()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536B28()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536B30()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536B38()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536B40()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536B48()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536B50()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536B58()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536B60()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536B68()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536B70()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536B78()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536B80()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536B88()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536B90()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536B98()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536BA0()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536BA8()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536BB0()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536BB8()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536BC0()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536BC8()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536BD0()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536BD8()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536BE0()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536BE8()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536BF0()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536BF8()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536C00()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536C08()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536C10()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536C18()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536C20()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536C28()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536C30()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536C38()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536C40()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536C48()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536C50()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536C58()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536C60()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536C68()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536C70()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536C78()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536C80()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536C88()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536C90()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536C98()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536CA0()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536CA8()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536CB0()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536CB8()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536CC0()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536CC8()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536CD0()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536CD8()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536CE0()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536CE8()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536CF0()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536CF8()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536D00()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536D10()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536D20()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536D30()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536D40()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536D50()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536D60()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536D70()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536D80()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536D90()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536DA0()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536DB0()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536DC0()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536DD0()
{
  JUMPOUT(0x20A535F5CLL);
}

void sub_20A536DE0()
{
  JUMPOUT(0x20A535F5CLL);
}

unint64_t sub_20A536DEC(__int16 a1)
{
  unsigned __int8 v1;
  int v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = HIBYTE(a1);
  v2 = a1;
  __swift_instantiateConcreteTypeFromMangledName(qword_2545FA940);
  v3 = v1;
  if (v2 == 2)
  {
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_20A5BA9A0;
    *(_QWORD *)(inited + 32) = 0x646F43726F727265;
    *(_QWORD *)(inited + 40) = 0xE900000000000065;
    if ((v3 + 47) >= 9u)
      __asm { BR              X10 }
    v5 = MEMORY[0x24BEE1778];
    *(_QWORD *)(inited + 72) = MEMORY[0x24BEE1768];
    *(_QWORD *)(inited + 80) = v5;
    *(_QWORD *)(inited + 48) = -(uint64_t)(v3 + 47);
  }
  else
  {
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_20A5BA9B0;
    v6 = MEMORY[0x24BEE1328];
    *(_QWORD *)(inited + 32) = 0x65756C6176;
    *(_QWORD *)(inited + 40) = 0xE500000000000000;
    v7 = MEMORY[0x24BEE1338];
    *(_QWORD *)(inited + 72) = v6;
    *(_QWORD *)(inited + 80) = v7;
    *(_BYTE *)(inited + 48) = v2 & 1;
    *(_QWORD *)(inited + 88) = 0x646F43726F727265;
    *(_QWORD *)(inited + 96) = 0xE900000000000065;
    if ((v3 + 47) >= 9u)
      __asm { BR              X10 }
    v8 = MEMORY[0x24BEE1778];
    *(_QWORD *)(inited + 128) = MEMORY[0x24BEE1768];
    *(_QWORD *)(inited + 136) = v8;
    *(_QWORD *)(inited + 104) = -(uint64_t)(v3 + 47);
  }
  return sub_20A469B08(inited);
}

void sub_20A536F5C()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A536F64()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A536F6C()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A536F74()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A536F7C()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A536F84()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A536F8C()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A536F94()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A536F9C()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A536FA4()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A536FAC()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A536FB4()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A536FBC()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A536FC4()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A536FCC()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A536FD4()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A536FDC()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A536FE4()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A536FEC()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A536FF4()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A536FFC()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537004()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A53700C()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537014()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A53701C()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537024()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A53702C()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537034()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A53703C()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537044()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A53704C()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537054()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A53705C()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537064()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A53706C()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537074()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A53707C()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537084()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A53708C()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537094()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A53709C()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5370A4()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5370AC()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5370B4()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5370BC()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5370C4()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5370CC()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5370D4()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5370DC()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5370E4()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5370EC()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5370F4()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5370FC()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537104()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A53710C()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537114()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A53711C()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537124()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A53712C()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537134()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A53713C()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537148()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537158()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537168()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537170()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537178()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537180()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537188()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537190()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537198()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5371A0()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5371A8()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5371B0()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5371B8()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5371C0()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5371C8()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5371D0()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5371D8()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5371E0()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5371E8()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5371F0()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5371F8()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537200()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537208()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537210()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537218()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537220()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537228()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537230()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537238()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537240()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537248()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537250()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537258()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537260()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537268()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537270()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537278()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537284()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A53728C()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537294()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A53729C()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5372A4()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5372AC()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5372B4()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5372BC()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5372C4()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5372CC()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5372D4()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5372DC()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5372E4()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5372EC()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5372F4()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5372FC()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537304()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A53730C()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537314()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A53731C()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537324()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A53732C()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537334()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A53733C()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537344()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A53734C()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537354()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A53735C()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537364()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A53736C()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537374()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A53737C()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537384()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A53738C()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537394()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A53739C()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5373A4()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5373AC()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5373B4()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5373BC()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5373C4()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5373CC()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5373D4()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5373DC()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5373E4()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5373EC()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5373F4()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5373FC()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537404()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A53740C()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537414()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A53741C()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537424()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A53742C()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537434()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A53743C()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537444()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A53744C()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537454()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A53745C()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537464()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A53746C()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537474()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A53747C()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537484()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A53748C()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537494()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A53749C()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5374A4()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5374AC()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5374B4()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5374BC()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5374C4()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5374CC()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5374D4()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5374DC()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5374E4()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5374EC()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5374F4()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5374FC()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537504()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A53750C()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537514()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A53751C()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537524()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A53752C()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537534()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A53753C()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537544()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A53754C()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537554()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A53755C()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537564()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A53756C()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537574()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A53757C()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A53758C()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A53759C()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5375AC()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5375BC()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5375CC()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5375DC()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5375EC()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A5375FC()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A53760C()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A53761C()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A53762C()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A53763C()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A53764C()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A53765C()
{
  JUMPOUT(0x20A536E6CLL);
}

void sub_20A537668()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537670()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537678()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537680()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537688()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537690()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537698()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A5376A0()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A5376A8()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A5376B0()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A5376B8()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A5376C0()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A5376C8()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A5376D0()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A5376D8()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A5376E0()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A5376E8()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A5376F0()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A5376F8()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537700()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537708()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537710()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537718()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537720()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537728()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537730()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537738()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537740()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537748()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537750()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537758()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537760()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537768()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537770()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537778()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537780()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537788()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537790()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537798()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A5377A0()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A5377A8()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A5377B0()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A5377B8()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A5377C0()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A5377C8()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A5377D0()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A5377D8()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A5377E0()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A5377E8()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A5377F0()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A5377F8()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537800()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537808()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537810()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537818()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537820()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537828()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537830()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537838()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537840()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A53784C()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A53785C()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A53786C()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537874()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A53787C()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537884()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A53788C()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537894()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A53789C()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A5378A4()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A5378AC()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A5378B4()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A5378BC()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A5378C4()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A5378CC()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A5378D4()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A5378DC()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A5378E4()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A5378EC()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A5378F4()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A5378FC()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537904()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A53790C()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537914()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A53791C()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537924()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A53792C()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537934()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A53793C()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537944()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A53794C()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537954()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A53795C()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537964()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A53796C()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537974()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A53797C()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537988()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537990()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537998()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A5379A0()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A5379A8()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A5379B0()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A5379B8()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A5379C0()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A5379C8()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A5379D0()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A5379D8()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A5379E0()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A5379E8()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A5379F0()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A5379F8()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537A00()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537A08()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537A10()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537A18()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537A20()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537A28()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537A30()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537A38()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537A40()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537A48()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537A50()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537A58()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537A60()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537A68()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537A70()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537A78()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537A80()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537A88()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537A90()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537A98()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537AA0()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537AA8()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537AB0()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537AB8()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537AC0()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537AC8()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537AD0()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537AD8()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537AE0()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537AE8()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537AF0()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537AF8()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537B00()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537B08()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537B10()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537B18()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537B20()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537B28()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537B30()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537B38()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537B40()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537B48()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537B50()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537B58()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537B60()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537B68()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537B70()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537B78()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537B80()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537B88()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537B90()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537B98()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537BA0()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537BA8()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537BB0()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537BB8()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537BC0()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537BC8()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537BD0()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537BD8()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537BE0()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537BE8()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537BF0()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537BF8()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537C00()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537C08()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537C10()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537C18()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537C20()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537C28()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537C30()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537C38()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537C40()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537C48()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537C50()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537C58()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537C60()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537C68()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537C70()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537C78()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537C80()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537C90()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537CA0()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537CB0()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537CC0()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537CD0()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537CE0()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537CF0()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537D00()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537D10()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537D20()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537D30()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537D40()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537D50()
{
  JUMPOUT(0x20A536EE8);
}

void sub_20A537D60()
{
  JUMPOUT(0x20A536EE8);
}

unint64_t sub_20A537D6C(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4)
{
  uint64_t inited;
  uint64_t v9;
  uint64_t v10;

  __swift_instantiateConcreteTypeFromMangledName(qword_2545FA940);
  if ((a2 & 1) != 0)
  {
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_20A5BA9A0;
    *(_QWORD *)(inited + 32) = 0x646F43726F727265;
    *(_QWORD *)(inited + 40) = 0xE900000000000065;
    if ((HIBYTE(a2) + 47) >= 9u)
      __asm { BR              X10 }
    v10 = MEMORY[0x24BEE1778];
    *(_QWORD *)(inited + 72) = MEMORY[0x24BEE1768];
    *(_QWORD *)(inited + 80) = v10;
    *(_QWORD *)(inited + 48) = -(uint64_t)(HIBYTE(a2) + 47);
  }
  else
  {
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_20A5BA9B0;
    *(_QWORD *)(inited + 32) = 0x65756C6176;
    *(_QWORD *)(inited + 40) = 0xE500000000000000;
    *(_QWORD *)(inited + 72) = a3;
    *(_QWORD *)(inited + 80) = a4;
    *(_QWORD *)(inited + 48) = a1;
    *(_QWORD *)(inited + 88) = 0x646F43726F727265;
    *(_QWORD *)(inited + 96) = 0xE900000000000065;
    if ((HIBYTE(a2) + 47) >= 9u)
      __asm { BR              X10 }
    v9 = MEMORY[0x24BEE1778];
    *(_QWORD *)(inited + 128) = MEMORY[0x24BEE1768];
    *(_QWORD *)(inited + 136) = v9;
    *(_QWORD *)(inited + 104) = -(uint64_t)(HIBYTE(a2) + 47);
  }
  return sub_20A469B08(inited);
}

void sub_20A537ED4()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A537EDC()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A537EE4()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A537EEC()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A537EF4()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A537EFC()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A537F04()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A537F0C()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A537F14()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A537F1C()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A537F24()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A537F2C()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A537F34()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A537F3C()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A537F44()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A537F4C()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A537F54()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A537F5C()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A537F64()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A537F6C()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A537F74()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A537F7C()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A537F84()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A537F8C()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A537F94()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A537F9C()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A537FA4()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A537FAC()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A537FB4()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A537FBC()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A537FC4()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A537FCC()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A537FD4()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A537FDC()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A537FE4()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A537FEC()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A537FF4()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A537FFC()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538004()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A53800C()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538014()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A53801C()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538024()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A53802C()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538034()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A53803C()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538044()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A53804C()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538054()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A53805C()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538064()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A53806C()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538074()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A53807C()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538084()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A53808C()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538094()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A53809C()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A5380A4()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A5380AC()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A5380B4()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A5380C0()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A5380D0()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A5380E0()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A5380E8()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A5380F0()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A5380F8()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538100()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538108()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538110()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538118()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538120()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538128()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538130()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538138()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538140()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538148()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538150()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538158()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538160()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538168()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538170()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538178()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538180()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538188()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538190()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538198()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A5381A0()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A5381A8()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A5381B0()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A5381B8()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A5381C0()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A5381C8()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A5381D0()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A5381D8()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A5381E0()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A5381E8()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A5381F0()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A5381FC()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538204()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A53820C()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538214()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A53821C()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538224()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A53822C()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538234()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A53823C()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538244()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A53824C()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538254()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A53825C()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538264()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A53826C()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538274()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A53827C()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538284()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A53828C()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538294()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A53829C()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A5382A4()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A5382AC()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A5382B4()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A5382BC()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A5382C4()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A5382CC()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A5382D4()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A5382DC()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A5382E4()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A5382EC()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A5382F4()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A5382FC()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538304()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A53830C()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538314()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A53831C()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538324()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A53832C()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538334()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A53833C()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538344()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A53834C()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538354()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A53835C()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538364()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A53836C()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538374()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A53837C()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538384()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A53838C()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538394()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A53839C()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A5383A4()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A5383AC()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A5383B4()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A5383BC()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A5383C4()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A5383CC()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A5383D4()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A5383DC()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A5383E4()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A5383EC()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A5383F4()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A5383FC()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538404()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A53840C()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538414()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A53841C()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538424()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A53842C()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538434()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A53843C()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538444()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A53844C()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538454()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A53845C()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538464()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A53846C()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538474()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A53847C()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538484()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A53848C()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538494()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A53849C()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A5384A4()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A5384AC()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A5384B4()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A5384BC()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A5384C4()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A5384CC()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A5384D4()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A5384DC()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A5384E4()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A5384EC()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A5384F4()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538504()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538514()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538524()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538534()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538544()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538554()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538564()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538574()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538584()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A538594()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A5385A4()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A5385B4()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A5385C4()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A5385D4()
{
  JUMPOUT(0x20A537E10);
}

void sub_20A5385E0()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A5385E8()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A5385F0()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A5385F8()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538600()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538608()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538610()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538618()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538620()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538628()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538630()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538638()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538640()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538648()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538650()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538658()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538660()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538668()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538670()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538678()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538680()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538688()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538690()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538698()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A5386A0()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A5386A8()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A5386B0()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A5386B8()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A5386C0()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A5386C8()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A5386D0()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A5386D8()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A5386E0()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A5386E8()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A5386F0()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A5386F8()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538700()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538708()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538710()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538718()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538720()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538728()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538730()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538738()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538740()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538748()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538750()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538758()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538760()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538768()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538770()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538778()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538780()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538788()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538790()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538798()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A5387A0()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A5387A8()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A5387B0()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A5387B8()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A5387C4()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A5387D4()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A5387E4()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A5387EC()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A5387F4()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A5387FC()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538804()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A53880C()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538814()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A53881C()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538824()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A53882C()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538834()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A53883C()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538844()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A53884C()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538854()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A53885C()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538864()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A53886C()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538874()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A53887C()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538884()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A53888C()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538894()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A53889C()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A5388A4()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A5388AC()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A5388B4()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A5388BC()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A5388C4()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A5388CC()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A5388D4()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A5388DC()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A5388E4()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A5388EC()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A5388F4()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538900()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538908()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538910()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538918()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538920()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538928()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538930()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538938()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538940()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538948()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538950()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538958()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538960()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538968()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538970()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538978()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538980()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538988()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538990()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538998()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A5389A0()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A5389A8()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A5389B0()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A5389B8()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A5389C0()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A5389C8()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A5389D0()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A5389D8()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A5389E0()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A5389E8()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A5389F0()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A5389F8()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538A00()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538A08()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538A10()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538A18()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538A20()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538A28()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538A30()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538A38()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538A40()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538A48()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538A50()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538A58()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538A60()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538A68()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538A70()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538A78()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538A80()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538A88()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538A90()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538A98()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538AA0()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538AA8()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538AB0()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538AB8()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538AC0()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538AC8()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538AD0()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538AD8()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538AE0()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538AE8()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538AF0()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538AF8()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538B00()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538B08()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538B10()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538B18()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538B20()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538B28()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538B30()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538B38()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538B40()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538B48()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538B50()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538B58()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538B60()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538B68()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538B70()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538B78()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538B80()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538B88()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538B90()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538B98()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538BA0()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538BA8()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538BB0()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538BB8()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538BC0()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538BC8()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538BD0()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538BD8()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538BE0()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538BE8()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538BF0()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538BF8()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538C08()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538C18()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538C28()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538C38()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538C48()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538C58()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538C68()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538C78()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538C88()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538C98()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538CA8()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538CB8()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538CC8()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538CD8()
{
  JUMPOUT(0x20A537E5CLL);
}

void sub_20A538CE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v1 = type metadata accessor for ODIKnownBinding();
  MEMORY[0x24BDAC7A8](v1, v2);
  sub_20A4797C4(v0, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = (char *)sub_20A538D68 + 4 * byte_20A5C9018[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_20A538D68()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = MEMORY[0x24BEE13E8];
  v0[3] = MEMORY[0x24BEE13C8];
  v0[4] = v3;
  *v0 = v2;
}

uint64_t sub_20A538EA8(uint64_t a1, uint64_t a2, __int16 a3)
{
  unsigned __int8 v3;
  uint64_t v4;

  v3 = HIBYTE(a3);
  if ((a3 & 1) != 0)
  {
    sub_20A5B92B4();
  }
  else
  {
    sub_20A5B92B4();
    sub_20A5B92C0();
  }
  v4 = v3;
  if ((v4 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  return sub_20A5B92A8();
}

void sub_20A538F38()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A538F40()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A538F48()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A538F50()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A538F58()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A538F60()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A538F68()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A538F70()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A538F78()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A538F80()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A538F88()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A538F90()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A538F98()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A538FA0()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A538FA8()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A538FB0()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A538FB8()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A538FC0()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A538FC8()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A538FD0()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A538FD8()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A538FE0()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A538FE8()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A538FF0()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A538FF8()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539000()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539008()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539010()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539018()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539020()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539028()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539030()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539038()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539040()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539048()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539050()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539058()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539060()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539068()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539070()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539078()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539080()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539088()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539090()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539098()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5390A0()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5390A8()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5390B0()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5390B8()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5390C0()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5390C8()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5390D0()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5390D8()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5390E0()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5390E8()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5390F0()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5390F8()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539100()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539108()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539110()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539118()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539124()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539134()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539144()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A53914C()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539154()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A53915C()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539164()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A53916C()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539174()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A53917C()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539184()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A53918C()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539194()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A53919C()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5391A4()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5391AC()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5391B4()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5391BC()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5391C4()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5391CC()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5391D4()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5391DC()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5391E4()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5391EC()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5391F4()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5391FC()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539204()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A53920C()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539214()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A53921C()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539224()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A53922C()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539234()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A53923C()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539244()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A53924C()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539254()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539260()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539268()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539270()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539278()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539280()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539288()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539290()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539298()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5392A0()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5392A8()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5392B0()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5392B8()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5392C0()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5392C8()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5392D0()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5392D8()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5392E0()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5392E8()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5392F0()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5392F8()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539300()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539308()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539310()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539318()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539320()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539328()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539330()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539338()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539340()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539348()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539350()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539358()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539360()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539368()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539370()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539378()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539380()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539388()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539390()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539398()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5393A0()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5393A8()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5393B0()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5393B8()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5393C0()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5393C8()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5393D0()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5393D8()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5393E0()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5393E8()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5393F0()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5393F8()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539400()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539408()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539410()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539418()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539420()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539428()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539430()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539438()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539440()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539448()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539450()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539458()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539460()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539468()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539470()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539478()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539480()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539488()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539490()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539498()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5394A0()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5394A8()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5394B0()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5394B8()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5394C0()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5394C8()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5394D0()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5394D8()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5394E0()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5394E8()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5394F0()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5394F8()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539500()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539508()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539510()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539518()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539520()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539528()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539530()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539538()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539540()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539548()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539550()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539558()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539568()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539578()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539588()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539598()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5395A8()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5395B8()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5395C8()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5395D8()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5395E8()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A5395F8()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539608()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539618()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539628()
{
  JUMPOUT(0x20A538F00);
}

void sub_20A539638()
{
  JUMPOUT(0x20A538F00);
}

uint64_t sub_20A539644(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  _BOOL8 v7;

  switch(a3)
  {
    case 0xD1u:
      if (a6 == 209)
        goto LABEL_21;
      return 0;
    case 0xD2u:
      if (a6 != 210)
        return 0;
      goto LABEL_21;
    case 0xD3u:
      if (a6 == 211)
        goto LABEL_21;
      return 0;
    case 0xD4u:
      if (a6 == 212)
        goto LABEL_21;
      return 0;
    case 0xD5u:
      if (a6 == 213)
        goto LABEL_21;
      return 0;
    case 0xD6u:
      if (a6 == 214)
        goto LABEL_21;
      return 0;
    case 0xD7u:
      if (a6 == 215)
        goto LABEL_21;
      return 0;
    case 0xD8u:
      if (a6 == 216)
        goto LABEL_21;
      return 0;
    case 0xD9u:
      if (a6 != 217)
        return 0;
LABEL_21:
      v7 = (a2 | a5) == 0;
      if (!a2 || !a5)
        return v7;
      if (a1 != a4 || a2 != a5)
        return sub_20A5B91AC();
      return 1;
    default:
      if ((a6 + 47) < 9u)
        return 0;
      else
        return ((uint64_t (*)(void))((char *)&loc_20A5396AC + 4 * word_20A5C91CA[a3]))();
  }
}

uint64_t sub_20A539774(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A53977C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539784(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A53978C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A53979C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A5397A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A5397AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A5397B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A5397BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A5397C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A5397CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A5397D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A5397DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A5397E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A5397EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A5397F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A5397FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A53980C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539814(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A53981C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539824(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A53982C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A53983C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A53984C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A53985C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539864(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A53986C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A53987C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539884(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A53988C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A53989C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A5398A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A5398AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A5398B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A5398BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A5398C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A5398CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A5398D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A5398DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A5398E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A5398EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A5398F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A5398FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A53990C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A53991C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539924(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A53992C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539934(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A53993C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539950(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539970(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539988(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A5399A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A5399A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A5399B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A5399B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A5399C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A5399C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A5399D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A5399D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A5399E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A5399E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A5399F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A5399F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539A00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539A08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539A10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539A18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539A20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539A28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539A30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539A38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539A40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539A48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539A50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539A58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539A60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539A68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539A70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539A78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539A80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539A8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539A94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539A9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539AA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539AAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539AB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539ABC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539AC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539ACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539AD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539ADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539AE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539AEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539AF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539AFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539B04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539B0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539B14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539B1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539B24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539B2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539B34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539B3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539B44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539B4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539B54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539B5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539B64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539B6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539B74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539B7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539B84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539B8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539B94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539B9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539BA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539BAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539BB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539BBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539BC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539BCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539BD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539BDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539BE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539BEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539BF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539BFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539C04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539C0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539C14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539C1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539C24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539C2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539C34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539C3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539C44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539C4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539C54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539C5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539C64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539C6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539C74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539C7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539C84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539C8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539C94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539C9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539CA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539CAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539CB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539CBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539CC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539CCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539CD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539CDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539CE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539CEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539CF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539CFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539D04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539D0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539D14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539D1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539D24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539D2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539D34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539D3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539D44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539D4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539D54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539D5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539D64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539D6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539D74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539D7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539D84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539D94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539DA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539DB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539DC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539DD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539DE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539DF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539E04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539E14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539E24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539E34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539E44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539E54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

uint64_t sub_20A539E64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  return ((uint64_t (*)())((char *)sub_20A539E94 + 4 * word_20A5C936C[a6]))();
}

void sub_20A539E94(uint64_t a1@<X8>)
{
  if (a1 != -2)
    JUMPOUT(0x20A5396C0);
  JUMPOUT(0x20A539734);
}

uint64_t sub_20A53A5A8(__int16 a1, __int16 a2)
{
  uint64_t result;
  char v3;

  switch(HIBYTE(a1))
  {
    case 0xD1:
      if (HIBYTE(a2) == 209)
        goto LABEL_21;
      goto LABEL_7;
    case 0xD2:
      if (HIBYTE(a2) != 210)
        goto LABEL_7;
      goto LABEL_21;
    case 0xD3:
      if (HIBYTE(a2) == 211)
        goto LABEL_21;
      goto LABEL_7;
    case 0xD4:
      if (HIBYTE(a2) == 212)
        goto LABEL_21;
      goto LABEL_7;
    case 0xD5:
      if (HIBYTE(a2) == 213)
        goto LABEL_21;
      goto LABEL_7;
    case 0xD6:
      if (HIBYTE(a2) == 214)
        goto LABEL_21;
      goto LABEL_7;
    case 0xD7:
      if (HIBYTE(a2) == 215)
        goto LABEL_21;
      goto LABEL_7;
    case 0xD8:
      if (HIBYTE(a2) == 216)
        goto LABEL_21;
      goto LABEL_7;
    case 0xD9:
      if (HIBYTE(a2) != 217)
        goto LABEL_7;
LABEL_21:
      v3 = a2 == 2 && a1 == 2;
      if (a1 != 2 && a2 != 2)
        v3 = ((a2 & 1) == 0) ^ a1;
      result = v3 & 1;
      break;
    default:
      if ((HIBYTE(a2) + 47) < 9u)
LABEL_7:
        result = 0;
      else
        result = ((uint64_t (*)(void))((char *)&loc_20A53A610 + 4 * word_20A5C9518[HIBYTE(a1)]))();
      break;
  }
  return result;
}

uint64_t sub_20A53A6D8(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A6E0(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A6E8(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A6F0(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A6F8(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A700(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A708(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A710(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A718(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A720(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A728(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A730(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A738(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A740(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A748(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A750(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A758(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A760(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A768(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A770(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A778(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A780(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A788(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A790(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A798(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A7A0(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A7A8(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A7B0(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A7B8(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A7C0(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A7C8(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A7D0(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A7D8(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A7E0(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A7E8(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A7F0(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A7F8(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A800(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A808(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A810(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A818(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A820(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A828(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A830(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A838(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A840(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A848(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A850(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A858(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A860(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A868(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A870(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A878(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A880(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A888(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A890(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A898(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A8A0(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A8A8(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A8B4(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A8C4(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A8D4(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A8DC(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A8E4(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A8EC(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A8F4(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A8FC(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A904(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A90C(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A914(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A91C(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A924(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A92C(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A934(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A93C(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A944(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A94C(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A954(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A95C(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A964(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A96C(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A974(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A97C(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A984(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A98C(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A994(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A99C(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A9A4(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A9AC(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A9B4(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A9BC(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A9C4(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A9CC(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A9D4(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A9DC(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A9E4(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A9F0(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53A9F8(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AA00(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AA08(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AA10(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AA18(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AA20(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AA28(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AA30(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AA38(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AA40(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AA48(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AA50(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AA58(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AA60(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AA68(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AA70(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AA78(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AA80(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AA88(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AA90(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AA98(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AAA0(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AAA8(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AAB0(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AAB8(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AAC0(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AAC8(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AAD0(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AAD8(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AAE0(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AAE8(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AAF0(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AAF8(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AB00(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AB08(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AB10(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AB18(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AB20(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AB28(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AB30(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AB38(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AB40(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AB48(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AB50(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AB58(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AB60(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AB68(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AB70(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AB78(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AB80(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AB88(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AB90(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AB98(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53ABA0(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53ABA8(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53ABB0(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53ABB8(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53ABC0(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53ABC8(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53ABD0(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53ABD8(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53ABE0(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53ABE8(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53ABF0(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53ABF8(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AC00(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AC08(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AC10(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AC18(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AC20(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AC28(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AC30(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AC38(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AC40(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AC48(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AC50(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AC58(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AC60(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AC68(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AC70(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AC78(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AC80(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AC88(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AC90(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AC98(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53ACA0(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53ACA8(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53ACB0(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53ACB8(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53ACC0(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53ACC8(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53ACD0(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53ACD8(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53ACE0(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53ACE8(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53ACF8(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AD08(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AD18(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AD28(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AD38(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AD48(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AD58(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AD68(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AD78(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AD88(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53AD98(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53ADA8(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53ADB8(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

uint64_t sub_20A53ADC8(uint64_t a1, __int16 a2)
{
  return ((uint64_t (*)())((char *)sub_20A53ADF8 + 4 * word_20A5C96BA[HIBYTE(a2)]))();
}

void sub_20A53ADF8(uint64_t a1@<X8>)
{
  if (a1 != -2)
    JUMPOUT(0x20A53A624);
  JUMPOUT(0x20A53A698);
}

uint64_t sub_20A53B50C(uint64_t a1, __int16 a2, uint64_t a3, unsigned int a4)
{
  BOOL v4;
  uint64_t result;
  int v6;
  uint64_t v7;
  _BOOL8 v9;

  switch(HIBYTE(a2))
  {
    case 0xD1:
      v4 = BYTE1(a4) == 209;
      goto LABEL_14;
    case 0xD2:
      v4 = BYTE1(a4) == 210;
      goto LABEL_14;
    case 0xD3:
      v4 = BYTE1(a4) == 211;
      goto LABEL_14;
    case 0xD4:
      v4 = BYTE1(a4) == 212;
      goto LABEL_14;
    case 0xD5:
      v4 = BYTE1(a4) == 213;
      goto LABEL_14;
    case 0xD6:
      v4 = BYTE1(a4) == 214;
      goto LABEL_14;
    case 0xD7:
      v4 = BYTE1(a4) == 215;
      goto LABEL_14;
    case 0xD8:
      v4 = BYTE1(a4) == 216;
      goto LABEL_14;
    case 0xD9:
      v4 = BYTE1(a4) == 217;
LABEL_14:
      v6 = v4;
      v7 = v6 & a4;
      if (!v4 || (a2 & 1) != 0)
      {
        result = v7;
      }
      else
      {
        v9 = (a4 & 1) == 0 && a1 == a3;
        result = v9;
      }
      break;
    default:
      if ((BYTE1(a4) + 47) >= 9u)
        result = ((uint64_t (*)(void))((char *)&loc_20A53B5DC + 4 * word_20A5C9866[HIBYTE(a2)]))();
      else
        result = 0;
      break;
  }
  return result;
}

uint64_t sub_20A53C43C(uint64_t a1, __int16 a2, uint64_t a3, __int16 a4)
{
  BOOL v4;
  uint64_t result;
  char v6;

  switch(HIBYTE(a2))
  {
    case 0xD1:
      v4 = HIBYTE(a4) == 209;
      goto LABEL_14;
    case 0xD2:
      v4 = HIBYTE(a4) == 210;
      goto LABEL_14;
    case 0xD3:
      v4 = HIBYTE(a4) == 211;
      goto LABEL_14;
    case 0xD4:
      v4 = HIBYTE(a4) == 212;
      goto LABEL_14;
    case 0xD5:
      v4 = HIBYTE(a4) == 213;
      goto LABEL_14;
    case 0xD6:
      v4 = HIBYTE(a4) == 214;
      goto LABEL_14;
    case 0xD7:
      v4 = HIBYTE(a4) == 215;
      goto LABEL_14;
    case 0xD8:
      v4 = HIBYTE(a4) == 216;
      goto LABEL_14;
    case 0xD9:
      v4 = HIBYTE(a4) == 217;
LABEL_14:
      v6 = !v4;
      if (((v6 | a2) & 1) != 0 || (a4 & 1) != 0)
        result = (v6 ^ (v6 | a2)) & a4 & 1;
      else
        result = *(double *)&a1 == *(double *)&a3;
      break;
    default:
      if ((HIBYTE(a4) + 47) >= 9u)
        result = ((uint64_t (*)(void))((char *)&loc_20A53C50C + 4 * word_20A5C9BB4[HIBYTE(a2)]))();
      else
        result = 0;
      break;
  }
  return result;
}

uint64_t sub_20A53D37C(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  char v6;

  if (a5 == 1)
  {
LABEL_2:
    v6 = 0;
    return v6 & 1;
  }
  if (a2 == 1)
  {
LABEL_4:
    v6 = 1;
    return v6 & 1;
  }
  if (a6 == 209)
  {
    if (a3 == 209)
    {
LABEL_8:
      if (a2)
      {
        if (a5)
        {
          if (a1 != a4 || a2 != a5)
          {
            v6 = sub_20A5B91AC() ^ 1;
            return v6 & 1;
          }
          goto LABEL_2;
        }
      }
      else if (!a5)
      {
        sub_20A59B908(a1, 0);
        sub_20A59B908(a4, 0);
        v6 = 0;
        return v6 & 1;
      }
    }
    goto LABEL_4;
  }
  v6 = 0;
  switch(a3)
  {
    case 0xD1u:
      return v6 & 1;
    case 0xD2u:
      if (a6 == 210)
        goto LABEL_8;
      goto LABEL_2;
    case 0xD3u:
      if (a6 == 211)
        goto LABEL_8;
      goto LABEL_2;
    case 0xD4u:
      if (a6 == 212)
        goto LABEL_8;
      goto LABEL_2;
    case 0xD5u:
      if (a6 == 213)
        goto LABEL_8;
      goto LABEL_2;
    case 0xD6u:
      if (a6 == 214)
        goto LABEL_8;
      goto LABEL_2;
    case 0xD7u:
      if (a6 == 215)
        goto LABEL_8;
      goto LABEL_2;
    case 0xD8u:
      if (a6 == 216)
        goto LABEL_8;
      goto LABEL_2;
    case 0xD9u:
      if (a6 == 217)
        goto LABEL_8;
      goto LABEL_2;
    default:
      if ((a6 + 47) >= 9u)
        __asm { BR              X11 }
      goto LABEL_2;
  }
  return v6 & 1;
}

void sub_20A53D50C()
{
  __asm { BR              X12 }
}

void sub_20A53D514()
{
  __asm { BR              X12 }
}

void sub_20A53D51C()
{
  __asm { BR              X12 }
}

void sub_20A53D524()
{
  __asm { BR              X12 }
}

void sub_20A53D52C()
{
  __asm { BR              X12 }
}

void sub_20A53D534()
{
  __asm { BR              X12 }
}

void sub_20A53D53C()
{
  __asm { BR              X12 }
}

void sub_20A53D544()
{
  __asm { BR              X12 }
}

void sub_20A53D54C()
{
  __asm { BR              X12 }
}

void sub_20A53D554()
{
  __asm { BR              X12 }
}

void sub_20A53D55C()
{
  __asm { BR              X12 }
}

void sub_20A53D564()
{
  __asm { BR              X12 }
}

void sub_20A53D56C()
{
  __asm { BR              X12 }
}

void sub_20A53D574()
{
  __asm { BR              X12 }
}

void sub_20A53D57C()
{
  __asm { BR              X12 }
}

void sub_20A53D584()
{
  __asm { BR              X12 }
}

void sub_20A53D58C()
{
  __asm { BR              X12 }
}

void sub_20A53D594()
{
  __asm { BR              X12 }
}

void sub_20A53D59C()
{
  __asm { BR              X12 }
}

void sub_20A53D5A4()
{
  __asm { BR              X12 }
}

void sub_20A53D5AC()
{
  __asm { BR              X12 }
}

void sub_20A53D5B4()
{
  __asm { BR              X12 }
}

void sub_20A53D5BC()
{
  __asm { BR              X12 }
}

void sub_20A53D5C4()
{
  __asm { BR              X12 }
}

void sub_20A53D5CC()
{
  __asm { BR              X12 }
}

void sub_20A53D5D4()
{
  __asm { BR              X12 }
}

void sub_20A53D5DC()
{
  __asm { BR              X12 }
}

void sub_20A53D5E4()
{
  __asm { BR              X12 }
}

void sub_20A53D5EC()
{
  __asm { BR              X12 }
}

void sub_20A53D5F4()
{
  __asm { BR              X12 }
}

void sub_20A53D5FC()
{
  __asm { BR              X12 }
}

void sub_20A53D604()
{
  __asm { BR              X12 }
}

void sub_20A53D60C()
{
  __asm { BR              X12 }
}

void sub_20A53D614()
{
  __asm { BR              X12 }
}

void sub_20A53D61C()
{
  __asm { BR              X12 }
}

void sub_20A53D624()
{
  __asm { BR              X12 }
}

void sub_20A53D62C()
{
  __asm { BR              X12 }
}

void sub_20A53D634()
{
  __asm { BR              X12 }
}

void sub_20A53D63C()
{
  __asm { BR              X12 }
}

void sub_20A53D644()
{
  __asm { BR              X12 }
}

void sub_20A53D64C()
{
  __asm { BR              X12 }
}

void sub_20A53D654()
{
  __asm { BR              X12 }
}

void sub_20A53D65C()
{
  __asm { BR              X12 }
}

void sub_20A53D664()
{
  __asm { BR              X12 }
}

void sub_20A53D66C()
{
  __asm { BR              X12 }
}

void sub_20A53D674()
{
  __asm { BR              X12 }
}

void sub_20A53D67C()
{
  __asm { BR              X12 }
}

void sub_20A53D684()
{
  __asm { BR              X12 }
}

void sub_20A53D68C()
{
  __asm { BR              X12 }
}

void sub_20A53D694()
{
  __asm { BR              X12 }
}

void sub_20A53D69C()
{
  __asm { BR              X12 }
}

void sub_20A53D6A4()
{
  __asm { BR              X12 }
}

void sub_20A53D6AC()
{
  __asm { BR              X12 }
}

void sub_20A53D6B4()
{
  __asm { BR              X12 }
}

void sub_20A53D6BC()
{
  __asm { BR              X12 }
}

void sub_20A53D6C4()
{
  __asm { BR              X12 }
}

void sub_20A53D6CC()
{
  __asm { BR              X12 }
}

void sub_20A53D6D4()
{
  __asm { BR              X12 }
}

void sub_20A53D6DC()
{
  __asm { BR              X12 }
}

void sub_20A53D6E4()
{
  __asm { BR              X12 }
}

void sub_20A53D6F0()
{
  __asm { BR              X12 }
}

void sub_20A53D700()
{
  __asm { BR              X12 }
}

void sub_20A53D710()
{
  __asm { BR              X12 }
}

void sub_20A53D718()
{
  __asm { BR              X12 }
}

void sub_20A53D720()
{
  __asm { BR              X12 }
}

void sub_20A53D728()
{
  __asm { BR              X12 }
}

void sub_20A53D730()
{
  __asm { BR              X12 }
}

void sub_20A53D738()
{
  __asm { BR              X12 }
}

void sub_20A53D740()
{
  __asm { BR              X12 }
}

void sub_20A53D748()
{
  __asm { BR              X12 }
}

void sub_20A53D750()
{
  __asm { BR              X12 }
}

void sub_20A53D758()
{
  __asm { BR              X12 }
}

void sub_20A53D760()
{
  __asm { BR              X12 }
}

void sub_20A53D768()
{
  __asm { BR              X12 }
}

void sub_20A53D770()
{
  __asm { BR              X12 }
}

void sub_20A53D778()
{
  __asm { BR              X12 }
}

void sub_20A53D780()
{
  __asm { BR              X12 }
}

void sub_20A53D788()
{
  __asm { BR              X12 }
}

void sub_20A53D790()
{
  __asm { BR              X12 }
}

void sub_20A53D798()
{
  __asm { BR              X12 }
}

void sub_20A53D7A0()
{
  __asm { BR              X12 }
}

void sub_20A53D7A8()
{
  __asm { BR              X12 }
}

void sub_20A53D7B0()
{
  __asm { BR              X12 }
}

void sub_20A53D7B8()
{
  __asm { BR              X12 }
}

void sub_20A53D7C0()
{
  __asm { BR              X12 }
}

void sub_20A53D7C8()
{
  __asm { BR              X12 }
}

void sub_20A53D7D0()
{
  __asm { BR              X12 }
}

void sub_20A53D7D8()
{
  __asm { BR              X12 }
}

void sub_20A53D7E0()
{
  __asm { BR              X12 }
}

void sub_20A53D7E8()
{
  __asm { BR              X12 }
}

void sub_20A53D7F0()
{
  __asm { BR              X12 }
}

void sub_20A53D7F8()
{
  __asm { BR              X12 }
}

void sub_20A53D800()
{
  __asm { BR              X12 }
}

void sub_20A53D808()
{
  __asm { BR              X12 }
}

void sub_20A53D810()
{
  __asm { BR              X12 }
}

void sub_20A53D818()
{
  __asm { BR              X12 }
}

void sub_20A53D820()
{
  __asm { BR              X12 }
}

void sub_20A53D82C()
{
  __asm { BR              X12 }
}

void sub_20A53D834()
{
  __asm { BR              X12 }
}

void sub_20A53D83C()
{
  __asm { BR              X12 }
}

void sub_20A53D844()
{
  __asm { BR              X12 }
}

void sub_20A53D84C()
{
  __asm { BR              X12 }
}

void sub_20A53D854()
{
  __asm { BR              X12 }
}

void sub_20A53D85C()
{
  __asm { BR              X12 }
}

void sub_20A53D864()
{
  __asm { BR              X12 }
}

void sub_20A53D86C()
{
  __asm { BR              X12 }
}

void sub_20A53D874()
{
  __asm { BR              X12 }
}

void sub_20A53D87C()
{
  __asm { BR              X12 }
}

void sub_20A53D884()
{
  __asm { BR              X12 }
}

void sub_20A53D88C()
{
  __asm { BR              X12 }
}

void sub_20A53D894()
{
  __asm { BR              X12 }
}

void sub_20A53D89C()
{
  __asm { BR              X12 }
}

void sub_20A53D8A4()
{
  __asm { BR              X12 }
}

void sub_20A53D8AC()
{
  __asm { BR              X12 }
}

void sub_20A53D8B4()
{
  __asm { BR              X12 }
}

void sub_20A53D8BC()
{
  __asm { BR              X12 }
}

void sub_20A53D8C4()
{
  __asm { BR              X12 }
}

void sub_20A53D8CC()
{
  __asm { BR              X12 }
}

void sub_20A53D8D4()
{
  __asm { BR              X12 }
}

void sub_20A53D8DC()
{
  __asm { BR              X12 }
}

void sub_20A53D8E4()
{
  __asm { BR              X12 }
}

void sub_20A53D8EC()
{
  __asm { BR              X12 }
}

void sub_20A53D8F4()
{
  __asm { BR              X12 }
}

void sub_20A53D8FC()
{
  __asm { BR              X12 }
}

void sub_20A53D904()
{
  __asm { BR              X12 }
}

void sub_20A53D90C()
{
  __asm { BR              X12 }
}

void sub_20A53D914()
{
  __asm { BR              X12 }
}

void sub_20A53D91C()
{
  __asm { BR              X12 }
}

void sub_20A53D924()
{
  __asm { BR              X12 }
}

void sub_20A53D92C()
{
  __asm { BR              X12 }
}

void sub_20A53D934()
{
  __asm { BR              X12 }
}

void sub_20A53D93C()
{
  __asm { BR              X12 }
}

void sub_20A53D944()
{
  __asm { BR              X12 }
}

void sub_20A53D94C()
{
  __asm { BR              X12 }
}

void sub_20A53D954()
{
  __asm { BR              X12 }
}

void sub_20A53D95C()
{
  __asm { BR              X12 }
}

void sub_20A53D964()
{
  __asm { BR              X12 }
}

void sub_20A53D96C()
{
  __asm { BR              X12 }
}

void sub_20A53D974()
{
  __asm { BR              X12 }
}

void sub_20A53D97C()
{
  __asm { BR              X12 }
}

void sub_20A53D984()
{
  __asm { BR              X12 }
}

void sub_20A53D98C()
{
  __asm { BR              X12 }
}

void sub_20A53D994()
{
  __asm { BR              X12 }
}

void sub_20A53D99C()
{
  __asm { BR              X12 }
}

void sub_20A53D9A4()
{
  __asm { BR              X12 }
}

void sub_20A53D9AC()
{
  __asm { BR              X12 }
}

void sub_20A53D9B4()
{
  __asm { BR              X12 }
}

void sub_20A53D9BC()
{
  __asm { BR              X12 }
}

void sub_20A53D9C4()
{
  __asm { BR              X12 }
}

void sub_20A53D9CC()
{
  __asm { BR              X12 }
}

void sub_20A53D9D4()
{
  __asm { BR              X12 }
}

void sub_20A53D9DC()
{
  __asm { BR              X12 }
}

void sub_20A53D9E4()
{
  __asm { BR              X12 }
}

void sub_20A53D9EC()
{
  __asm { BR              X12 }
}

void sub_20A53D9F4()
{
  __asm { BR              X12 }
}

void sub_20A53D9FC()
{
  __asm { BR              X12 }
}

void sub_20A53DA04()
{
  __asm { BR              X12 }
}

void sub_20A53DA0C()
{
  __asm { BR              X12 }
}

void sub_20A53DA14()
{
  __asm { BR              X12 }
}

void sub_20A53DA1C()
{
  __asm { BR              X12 }
}

void sub_20A53DA24()
{
  __asm { BR              X12 }
}

void sub_20A53DA2C()
{
  __asm { BR              X12 }
}

void sub_20A53DA34()
{
  __asm { BR              X12 }
}

void sub_20A53DA3C()
{
  __asm { BR              X12 }
}

void sub_20A53DA44()
{
  __asm { BR              X12 }
}

void sub_20A53DA4C()
{
  __asm { BR              X12 }
}

void sub_20A53DA54()
{
  __asm { BR              X12 }
}

void sub_20A53DA5C()
{
  __asm { BR              X12 }
}

void sub_20A53DA64()
{
  __asm { BR              X12 }
}

void sub_20A53DA6C()
{
  __asm { BR              X12 }
}

void sub_20A53DA74()
{
  __asm { BR              X12 }
}

void sub_20A53DA7C()
{
  __asm { BR              X12 }
}

void sub_20A53DA84()
{
  __asm { BR              X12 }
}

void sub_20A53DA8C()
{
  __asm { BR              X12 }
}

void sub_20A53DA94()
{
  __asm { BR              X12 }
}

void sub_20A53DA9C()
{
  __asm { BR              X12 }
}

void sub_20A53DAA4()
{
  __asm { BR              X12 }
}

void sub_20A53DAAC()
{
  __asm { BR              X12 }
}

void sub_20A53DAB4()
{
  __asm { BR              X12 }
}

void sub_20A53DABC()
{
  __asm { BR              X12 }
}

void sub_20A53DAC4()
{
  __asm { BR              X12 }
}

void sub_20A53DACC()
{
  __asm { BR              X12 }
}

void sub_20A53DAD4()
{
  __asm { BR              X12 }
}

void sub_20A53DADC()
{
  __asm { BR              X12 }
}

void sub_20A53DAE4()
{
  __asm { BR              X12 }
}

void sub_20A53DAEC()
{
  __asm { BR              X12 }
}

void sub_20A53DAF4()
{
  __asm { BR              X12 }
}

void sub_20A53DAFC()
{
  __asm { BR              X12 }
}

void sub_20A53DB04()
{
  __asm { BR              X12 }
}

void sub_20A53DB0C()
{
  __asm { BR              X12 }
}

void sub_20A53DB14()
{
  __asm { BR              X12 }
}

void sub_20A53DB1C()
{
  __asm { BR              X12 }
}

void sub_20A53DB24()
{
  __asm { BR              X12 }
}

void sub_20A53DB34()
{
  __asm { BR              X12 }
}

void sub_20A53DB44()
{
  __asm { BR              X12 }
}

void sub_20A53DB54()
{
  __asm { BR              X12 }
}

void sub_20A53DB64()
{
  __asm { BR              X12 }
}

void sub_20A53DB74()
{
  __asm { BR              X12 }
}

void sub_20A53DB84()
{
  __asm { BR              X12 }
}

void sub_20A53DB94()
{
  __asm { BR              X12 }
}

void sub_20A53DBA4()
{
  __asm { BR              X12 }
}

void sub_20A53DBB4()
{
  __asm { BR              X12 }
}

void sub_20A53DBC4()
{
  __asm { BR              X12 }
}

void sub_20A53DBD4()
{
  __asm { BR              X12 }
}

void sub_20A53DBE4()
{
  __asm { BR              X12 }
}

void sub_20A53DBF4()
{
  __asm { BR              X12 }
}

void sub_20A53DC2C(uint64_t a1@<X8>)
{
  if (a1 != -2)
    JUMPOUT(0x20A53D390);
  JUMPOUT(0x20A53D3D4);
}

uint64_t sub_20A53E340(uint64_t a1, __int16 a2, uint64_t a3, __int16 a4)
{
  uint64_t result;
  int v5;
  _BOOL4 v7;
  uint64_t v8;

  if (HIBYTE(a4) == 218)
    return 0;
  if (HIBYTE(a2) == 218)
    return 1;
  if (HIBYTE(a4) == 209)
  {
    if (HIBYTE(a2) != 209)
      return 1;
LABEL_7:
    v5 = a4 & 1;
    v7 = (a4 & 1) == 0 && a1 == a3;
    if ((a2 & 1) == 0)
      v5 = v7;
    return v5 ^ 1u;
  }
  else
  {
    v8 = 0;
    switch(HIBYTE(a2))
    {
      case 0xD1:
        return v8;
      case 0xD2:
        if (HIBYTE(a4) == 210)
          goto LABEL_7;
        result = 0;
        break;
      case 0xD3:
        if (HIBYTE(a4) == 211)
          goto LABEL_7;
        result = 0;
        break;
      case 0xD4:
        if (HIBYTE(a4) == 212)
          goto LABEL_7;
        result = 0;
        break;
      case 0xD5:
        if (HIBYTE(a4) == 213)
          goto LABEL_7;
        result = 0;
        break;
      case 0xD6:
        if (HIBYTE(a4) == 214)
          goto LABEL_7;
        result = 0;
        break;
      case 0xD7:
        if (HIBYTE(a4) == 215)
          goto LABEL_7;
        result = 0;
        break;
      case 0xD8:
        if (HIBYTE(a4) == 216)
          goto LABEL_7;
        result = 0;
        break;
      case 0xD9:
        if (HIBYTE(a4) == 217)
          goto LABEL_7;
        result = 0;
        break;
      default:
        if ((HIBYTE(a4) + 47) >= 9u)
          result = ((uint64_t (*)())((char *)sub_20A53E47C + 4 * word_20A5CA250[HIBYTE(a2)]))();
        else
          result = 0;
        break;
    }
  }
  return result;
}

uint64_t sub_20A53E47C()
{
  uint64_t v0;

  return ((uint64_t (*)(void))((char *)sub_20A53EBA0 + 4 * word_20A5CA3F2[v0]))();
}

void sub_20A53EBA0(uint64_t a1@<X8>)
{
  if (a1 == -2)
    JUMPOUT(0x20A53E378);
  JUMPOUT(0x20A53E34CLL);
}

uint64_t sub_20A53F2B4(__int16 a1, __int16 a2)
{
  uint64_t result;
  char v3;
  char v4;

  if (a2 == 3)
    return 0;
  if (a1 == 3)
    return 1;
  if (HIBYTE(a2) == 209)
  {
    if (HIBYTE(a1) != 209)
      return 1;
LABEL_7:
    v3 = a2 == 2 && a1 == 2;
    if (a1 != 2 && a2 != 2)
      v3 = ((a2 & 1) == 0) ^ a1;
    v4 = v3 ^ 1;
    return v4 & 1;
  }
  else
  {
    v4 = 0;
    switch(HIBYTE(a1))
    {
      case 0xD1:
        return v4 & 1;
      case 0xD2:
        if (HIBYTE(a2) == 210)
          goto LABEL_7;
        result = 0;
        break;
      case 0xD3:
        if (HIBYTE(a2) == 211)
          goto LABEL_7;
        result = 0;
        break;
      case 0xD4:
        if (HIBYTE(a2) == 212)
          goto LABEL_7;
        result = 0;
        break;
      case 0xD5:
        if (HIBYTE(a2) == 213)
          goto LABEL_7;
        result = 0;
        break;
      case 0xD6:
        if (HIBYTE(a2) == 214)
          goto LABEL_7;
        result = 0;
        break;
      case 0xD7:
        if (HIBYTE(a2) == 215)
          goto LABEL_7;
        result = 0;
        break;
      case 0xD8:
        if (HIBYTE(a2) == 216)
          goto LABEL_7;
        result = 0;
        break;
      case 0xD9:
        if (HIBYTE(a2) == 217)
          goto LABEL_7;
        result = 0;
        break;
      default:
        if ((HIBYTE(a2) + 47) >= 9u)
          result = ((uint64_t (*)())((char *)sub_20A53F41C + 4 * word_20A5CA59E[HIBYTE(a1)]))();
        else
          result = 0;
        break;
    }
  }
  return result;
}

uint64_t sub_20A53F41C()
{
  uint64_t v0;

  return ((uint64_t (*)(void))((char *)sub_20A53FB40 + 4 * word_20A5CA740[v0]))();
}

void sub_20A53FB40(uint64_t a1@<X8>)
{
  if (a1 == -2)
    JUMPOUT(0x20A53F2F8);
  JUMPOUT(0x20A53F2C0);
}

uint64_t sub_20A540254(uint64_t a1, __int16 a2, uint64_t a3, __int16 a4)
{
  uint64_t result;
  uint64_t v5;

  if (HIBYTE(a4) == 218)
    return 0;
  if (HIBYTE(a2) == 218)
    return 1;
  if (HIBYTE(a4) == 209)
  {
    if (HIBYTE(a2) != 209)
      return 1;
LABEL_7:
    if (((a4 | a2) & 1) != 0)
      return (a2 & a4 & 1) == 0;
    else
      return *(double *)&a1 != *(double *)&a3;
  }
  else
  {
    v5 = 0;
    switch(HIBYTE(a2))
    {
      case 0xD1:
        return v5;
      case 0xD2:
        if (HIBYTE(a4) == 210)
          goto LABEL_7;
        result = 0;
        break;
      case 0xD3:
        if (HIBYTE(a4) == 211)
          goto LABEL_7;
        result = 0;
        break;
      case 0xD4:
        if (HIBYTE(a4) == 212)
          goto LABEL_7;
        result = 0;
        break;
      case 0xD5:
        if (HIBYTE(a4) == 213)
          goto LABEL_7;
        result = 0;
        break;
      case 0xD6:
        if (HIBYTE(a4) == 214)
          goto LABEL_7;
        result = 0;
        break;
      case 0xD7:
        if (HIBYTE(a4) == 215)
          goto LABEL_7;
        result = 0;
        break;
      case 0xD8:
        if (HIBYTE(a4) == 216)
          goto LABEL_7;
        result = 0;
        break;
      case 0xD9:
        if (HIBYTE(a4) == 217)
          goto LABEL_7;
        result = 0;
        break;
      default:
        if ((HIBYTE(a4) + 47) >= 9u)
          result = ((uint64_t (*)())((char *)sub_20A54039C + 4 * word_20A5CA8EC[HIBYTE(a2)]))();
        else
          result = 0;
        break;
    }
  }
  return result;
}

uint64_t sub_20A54039C()
{
  uint64_t v0;

  return ((uint64_t (*)(void))((char *)sub_20A540AC0 + 4 * word_20A5CAA8E[v0]))();
}

void sub_20A540AC0(uint64_t a1@<X8>)
{
  if (a1 == -2)
    JUMPOUT(0x20A54028CLL);
  JUMPOUT(0x20A540260);
}

void sub_20A5411D4(uint64_t a1)
{
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  id v13[2];

  sub_20A459574(0, &qword_2545F9D58);
  sub_20A597DB4(&qword_2545FB488, &qword_2545F9D58);
  v2 = 0;
  v13[1] = (id)sub_20A5B8C00();
  v3 = a1 + 64;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v10 >= v7)
      goto LABEL_23;
    v11 = *(_QWORD *)(v3 + 8 * v10);
    ++v2;
    if (!v11)
    {
      v2 = v10 + 1;
      if (v10 + 1 >= v7)
        goto LABEL_23;
      v11 = *(_QWORD *)(v3 + 8 * v2);
      if (!v11)
      {
        v2 = v10 + 2;
        if (v10 + 2 >= v7)
          goto LABEL_23;
        v11 = *(_QWORD *)(v3 + 8 * v2);
        if (!v11)
        {
          v2 = v10 + 3;
          if (v10 + 3 >= v7)
            goto LABEL_23;
          v11 = *(_QWORD *)(v3 + 8 * v2);
          if (!v11)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v2 << 6);
LABEL_5:
    sub_20A57C3A0(v13, *(id *)(*(_QWORD *)(a1 + 56) + 8 * v9));

  }
  v12 = v10 + 4;
  if (v12 >= v7)
  {
LABEL_23:
    swift_release();
    return;
  }
  v11 = *(_QWORD *)(v3 + 8 * v12);
  if (v11)
  {
    v2 = v12;
    goto LABEL_22;
  }
  while (1)
  {
    v2 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v2 >= v7)
      goto LABEL_23;
    v11 = *(_QWORD *)(v3 + 8 * v2);
    ++v12;
    if (v11)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

uint64_t ArmandDeviceDataErrorCode.hash(into:)()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  if ((v1 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  return sub_20A5B92A8();
}

void sub_20A5413E8()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5413F0()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5413F8()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541400()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541408()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541410()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541418()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541420()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541428()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541430()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541438()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541440()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541448()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541450()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541458()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541460()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541468()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541470()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541478()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541480()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541488()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541490()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541498()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5414A0()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5414A8()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5414B0()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5414B8()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5414C0()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5414C8()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5414D0()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5414D8()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5414E0()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5414E8()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5414F0()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5414F8()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541500()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541508()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541510()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541518()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541520()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541528()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541530()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541538()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541540()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541548()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541550()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541558()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541560()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541568()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541570()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541578()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541580()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541588()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541590()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541598()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5415A0()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5415A8()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5415B0()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5415B8()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5415C0()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5415C8()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5415D4()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5415E4()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5415F4()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5415FC()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541604()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A54160C()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541614()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A54161C()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541624()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A54162C()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541634()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A54163C()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541644()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A54164C()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541654()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A54165C()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541664()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A54166C()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541674()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A54167C()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541684()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A54168C()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541694()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A54169C()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5416A4()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5416AC()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5416B4()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5416BC()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5416C4()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5416CC()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5416D4()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5416DC()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5416E4()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5416EC()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5416F4()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5416FC()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541704()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541710()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541718()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541720()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541728()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541730()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541738()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541740()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541748()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541750()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541758()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541760()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541768()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541770()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541778()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541780()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541788()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541790()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541798()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5417A0()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5417A8()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5417B0()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5417B8()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5417C0()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5417C8()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5417D0()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5417D8()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5417E0()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5417E8()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5417F0()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5417F8()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541800()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541808()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541810()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541818()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541820()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541828()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541830()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541838()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541840()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541848()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541850()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541858()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541860()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541868()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541870()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541878()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541880()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541888()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541890()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541898()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5418A0()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5418A8()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5418B0()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5418B8()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5418C0()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5418C8()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5418D0()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5418D8()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5418E0()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5418E8()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5418F0()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5418F8()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541900()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541908()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541910()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541918()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541920()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541928()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541930()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541938()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541940()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541948()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541950()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541958()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541960()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541968()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541970()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541978()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541980()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541988()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541990()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541998()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5419A0()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5419A8()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5419B0()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5419B8()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5419C0()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5419C8()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5419D0()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5419D8()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5419E0()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5419E8()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5419F0()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A5419F8()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541A00()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541A08()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541A18()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541A28()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541A38()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541A48()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541A58()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541A68()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541A78()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541A88()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541A98()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541AA8()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541AB8()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541AC8()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541AD8()
{
  JUMPOUT(0x20A5413B4);
}

void sub_20A541AE8()
{
  JUMPOUT(0x20A5413B4);
}

uint64_t sub_20A541AF4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_20A541B24 + 4 * byte_20A5CADD2[a1]))(0x7272456F6ELL, 0xE500000000000000);
}

uint64_t sub_20A541B24()
{
  return 0x6C61567465736E75;
}

uint64_t sub_20A541B40()
{
  return 0x6F6974704F6C696ELL;
}

uint64_t sub_20A541B60()
{
  return 0x6465696E6564;
}

uint64_t sub_20A541B74()
{
  return 0x7463657078656E75;
}

unint64_t sub_20A541B98()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_20A541BB8()
{
  return 0x676E69646F636E65;
}

unint64_t sub_20A541BDC()
{
  return 0xD000000000000016;
}

uint64_t sub_20A541BF8()
{
  return 0x6369447974706D65;
}

uint64_t sub_20A541C1C()
{
  return 0x726F727245636170;
}

uint64_t sub_20A541C34()
{
  unsigned __int8 *v0;

  return sub_20A541AF4(*v0);
}

uint64_t sub_20A541C3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A597EA4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A541C60()
{
  sub_20A593818();
  return sub_20A5B9314();
}

uint64_t sub_20A541C88()
{
  sub_20A593818();
  return sub_20A5B9320();
}

uint64_t sub_20A541CB0()
{
  return 0;
}

uint64_t sub_20A541CBC()
{
  sub_20A5939F4();
  return sub_20A5B9314();
}

uint64_t sub_20A541CE4()
{
  sub_20A5939F4();
  return sub_20A5B9320();
}

uint64_t sub_20A541D0C()
{
  sub_20A5938A0();
  return sub_20A5B9314();
}

uint64_t sub_20A541D34()
{
  sub_20A5938A0();
  return sub_20A5B9320();
}

uint64_t sub_20A541D5C()
{
  sub_20A593928();
  return sub_20A5B9314();
}

uint64_t sub_20A541D84()
{
  sub_20A593928();
  return sub_20A5B9320();
}

uint64_t sub_20A541DAC()
{
  sub_20A593A38();
  return sub_20A5B9314();
}

uint64_t sub_20A541DD4()
{
  sub_20A593A38();
  return sub_20A5B9320();
}

uint64_t sub_20A541DFC()
{
  sub_20A593AC0();
  return sub_20A5B9314();
}

uint64_t sub_20A541E24()
{
  sub_20A593AC0();
  return sub_20A5B9320();
}

uint64_t sub_20A541E4C()
{
  sub_20A5938E4();
  return sub_20A5B9314();
}

uint64_t sub_20A541E74()
{
  sub_20A5938E4();
  return sub_20A5B9320();
}

uint64_t sub_20A541E9C()
{
  sub_20A59385C();
  return sub_20A5B9314();
}

uint64_t sub_20A541EC4()
{
  sub_20A59385C();
  return sub_20A5B9320();
}

uint64_t sub_20A541EEC()
{
  sub_20A5939B0();
  return sub_20A5B9314();
}

uint64_t sub_20A541F14()
{
  sub_20A5939B0();
  return sub_20A5B9320();
}

uint64_t sub_20A541F3C()
{
  sub_20A593A7C();
  return sub_20A5B9314();
}

uint64_t sub_20A541F64()
{
  sub_20A593A7C();
  return sub_20A5B9320();
}

uint64_t sub_20A541F8C()
{
  sub_20A59396C();
  return sub_20A5B9314();
}

uint64_t sub_20A541FB4()
{
  sub_20A59396C();
  return sub_20A5B9320();
}

uint64_t ArmandDeviceDataErrorCode.hashValue.getter()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_20A5B929C();
  if ((v1 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  sub_20A5B92A8();
  return sub_20A5B92CC();
}

void sub_20A542058()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542060()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542068()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542070()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542078()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542080()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542088()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542090()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542098()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5420A0()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5420A8()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5420B0()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5420B8()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5420C0()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5420C8()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5420D0()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5420D8()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5420E0()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5420E8()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5420F0()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5420F8()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542100()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542108()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542110()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542118()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542120()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542128()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542130()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542138()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542140()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542148()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542150()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542158()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542160()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542168()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542170()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542178()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542180()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542188()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542190()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542198()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5421A0()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5421A8()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5421B0()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5421B8()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5421C0()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5421C8()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5421D0()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5421D8()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5421E0()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5421E8()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5421F0()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5421F8()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542200()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542208()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542210()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542218()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542220()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542228()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542230()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542238()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542244()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542254()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542264()
{
  JUMPOUT(0x20A542010);
}

void sub_20A54226C()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542274()
{
  JUMPOUT(0x20A542010);
}

void sub_20A54227C()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542284()
{
  JUMPOUT(0x20A542010);
}

void sub_20A54228C()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542294()
{
  JUMPOUT(0x20A542010);
}

void sub_20A54229C()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5422A4()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5422AC()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5422B4()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5422BC()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5422C4()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5422CC()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5422D4()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5422DC()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5422E4()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5422EC()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5422F4()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5422FC()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542304()
{
  JUMPOUT(0x20A542010);
}

void sub_20A54230C()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542314()
{
  JUMPOUT(0x20A542010);
}

void sub_20A54231C()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542324()
{
  JUMPOUT(0x20A542010);
}

void sub_20A54232C()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542334()
{
  JUMPOUT(0x20A542010);
}

void sub_20A54233C()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542344()
{
  JUMPOUT(0x20A542010);
}

void sub_20A54234C()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542354()
{
  JUMPOUT(0x20A542010);
}

void sub_20A54235C()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542364()
{
  JUMPOUT(0x20A542010);
}

void sub_20A54236C()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542374()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542380()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542388()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542390()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542398()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5423A0()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5423A8()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5423B0()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5423B8()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5423C0()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5423C8()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5423D0()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5423D8()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5423E0()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5423E8()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5423F0()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5423F8()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542400()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542408()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542410()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542418()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542420()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542428()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542430()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542438()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542440()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542448()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542450()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542458()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542460()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542468()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542470()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542478()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542480()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542488()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542490()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542498()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5424A0()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5424A8()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5424B0()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5424B8()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5424C0()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5424C8()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5424D0()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5424D8()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5424E0()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5424E8()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5424F0()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5424F8()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542500()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542508()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542510()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542518()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542520()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542528()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542530()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542538()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542540()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542548()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542550()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542558()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542560()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542568()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542570()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542578()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542580()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542588()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542590()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542598()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5425A0()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5425A8()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5425B0()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5425B8()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5425C0()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5425C8()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5425D0()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5425D8()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5425E0()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5425E8()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5425F0()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5425F8()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542600()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542608()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542610()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542618()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542620()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542628()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542630()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542638()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542640()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542648()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542650()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542658()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542660()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542668()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542670()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542678()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542688()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542698()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5426A8()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5426B8()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5426C8()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5426D8()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5426E8()
{
  JUMPOUT(0x20A542010);
}

void sub_20A5426F8()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542708()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542718()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542728()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542738()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542748()
{
  JUMPOUT(0x20A542010);
}

void sub_20A542758()
{
  JUMPOUT(0x20A542010);
}

uint64_t sub_20A542770()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_20A5B929C();
  if ((v1 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  sub_20A5B92A8();
  return sub_20A5B92CC();
}

void sub_20A5427E8()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A5427F0()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A5427F8()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542800()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542808()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542810()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542818()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542820()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542828()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542830()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542838()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542840()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542848()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542850()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542858()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542860()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542868()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542870()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542878()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542880()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542888()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542890()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542898()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A5428A0()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A5428A8()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A5428B0()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A5428B8()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A5428C0()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A5428C8()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A5428D0()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A5428D8()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A5428E0()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A5428E8()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A5428F0()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A5428F8()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542900()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542908()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542910()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542918()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542920()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542928()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542930()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542938()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542940()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542948()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542950()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542958()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542960()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542968()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542970()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542978()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542980()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542988()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542990()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542998()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A5429A0()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A5429A8()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A5429B0()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A5429B8()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A5429C0()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A5429C8()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A5429D4()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A5429E4()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A5429F4()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A5429FC()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542A04()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542A0C()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542A14()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542A1C()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542A24()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542A2C()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542A34()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542A3C()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542A44()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542A4C()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542A54()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542A5C()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542A64()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542A6C()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542A74()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542A7C()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542A84()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542A8C()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542A94()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542A9C()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542AA4()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542AAC()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542AB4()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542ABC()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542AC4()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542ACC()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542AD4()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542ADC()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542AE4()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542AEC()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542AF4()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542AFC()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542B04()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542B10()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542B18()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542B20()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542B28()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542B30()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542B38()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542B40()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542B48()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542B50()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542B58()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542B60()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542B68()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542B70()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542B78()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542B80()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542B88()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542B90()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542B98()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542BA0()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542BA8()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542BB0()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542BB8()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542BC0()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542BC8()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542BD0()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542BD8()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542BE0()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542BE8()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542BF0()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542BF8()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542C00()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542C08()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542C10()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542C18()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542C20()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542C28()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542C30()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542C38()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542C40()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542C48()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542C50()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542C58()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542C60()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542C68()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542C70()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542C78()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542C80()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542C88()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542C90()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542C98()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542CA0()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542CA8()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542CB0()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542CB8()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542CC0()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542CC8()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542CD0()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542CD8()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542CE0()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542CE8()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542CF0()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542CF8()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542D00()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542D08()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542D10()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542D18()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542D20()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542D28()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542D30()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542D38()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542D40()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542D48()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542D50()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542D58()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542D60()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542D68()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542D70()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542D78()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542D80()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542D88()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542D90()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542D98()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542DA0()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542DA8()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542DB0()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542DB8()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542DC0()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542DC8()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542DD0()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542DD8()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542DE0()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542DE8()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542DF0()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542DF8()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542E00()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542E08()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542E18()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542E28()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542E38()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542E48()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542E58()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542E68()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542E78()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542E88()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542E98()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542EA8()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542EB8()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542EC8()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542ED8()
{
  JUMPOUT(0x20A5427A0);
}

void sub_20A542EE8()
{
  JUMPOUT(0x20A5427A0);
}

uint64_t ArmandDeviceDataErrorCode.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  int v35;
  char *v36;
  uint64_t v37;
  uint64_t result;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  void (*v45)(char *, uint64_t);
  char *v46;
  uint64_t *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char v83;
  char v84;
  char v85;
  _BYTE v86[8];
  uint64_t v87;
  uint64_t v88;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FBBE8);
  v78 = *(_QWORD *)(v3 - 8);
  v79 = v3;
  MEMORY[0x24BDAC7A8](v3, v4);
  v77 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FBBF0);
  v75 = *(_QWORD *)(v6 - 8);
  v76 = v6;
  MEMORY[0x24BDAC7A8](v6, v7);
  v74 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FBBF8);
  v72 = *(_QWORD *)(v9 - 8);
  v73 = v9;
  MEMORY[0x24BDAC7A8](v9, v10);
  v71 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FBC00);
  v69 = *(_QWORD *)(v12 - 8);
  v70 = v12;
  MEMORY[0x24BDAC7A8](v12, v13);
  v68 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FBC08);
  v66 = *(_QWORD *)(v15 - 8);
  v67 = v15;
  MEMORY[0x24BDAC7A8](v15, v16);
  v65 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FBC10);
  v63 = *(_QWORD *)(v64 - 8);
  MEMORY[0x24BDAC7A8](v64, v18);
  v62 = (char *)&v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FBC18);
  v60 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61, v20);
  v59 = (char *)&v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FBC20);
  v57 = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58, v22);
  v56 = (char *)&v54 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FBC28);
  v54 = *(_QWORD *)(v55 - 8);
  MEMORY[0x24BDAC7A8](v55, v24);
  v26 = (char *)&v54 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FBC30);
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27, v29);
  v31 = (char *)&v54 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FBC38);
  v80 = *(_QWORD *)(v82 - 8);
  MEMORY[0x24BDAC7A8](v82, v32);
  v34 = (char *)&v54 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A593818();
  v81 = v34;
  sub_20A5B92FC();
  switch(v35)
  {
    case 209:
      v83 = 0;
      sub_20A593AC0();
      v36 = v81;
      v37 = v82;
      sub_20A5B90C8();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v31, v27);
      return (*(uint64_t (**)(char *, uint64_t))(v80 + 8))(v36, v37);
    case 210:
      v84 = 1;
      sub_20A593A7C();
      v44 = v81;
      v43 = v82;
      sub_20A5B90C8();
      v45 = *(void (**)(char *, uint64_t))(v54 + 8);
      v46 = v26;
      v47 = (uint64_t *)v86;
      goto LABEL_7;
    case 211:
      v85 = 2;
      sub_20A593A38();
      v48 = v56;
      v44 = v81;
      v43 = v82;
      sub_20A5B90C8();
      v45 = *(void (**)(char *, uint64_t))(v57 + 8);
      v46 = v48;
      v47 = &v87;
      goto LABEL_7;
    case 212:
      v86[0] = 3;
      sub_20A5939F4();
      v49 = v59;
      v44 = v81;
      v43 = v82;
      sub_20A5B90C8();
      v45 = *(void (**)(char *, uint64_t))(v60 + 8);
      v46 = v49;
      v47 = &v88;
LABEL_7:
      v50 = *(v47 - 32);
      goto LABEL_14;
    case 213:
      v86[1] = 4;
      sub_20A5939B0();
      v51 = v62;
      v44 = v81;
      v43 = v82;
      sub_20A5B90C8();
      (*(void (**)(char *, uint64_t))(v63 + 8))(v51, v64);
      goto LABEL_15;
    case 214:
      v86[2] = 5;
      sub_20A59396C();
      v52 = v65;
      v44 = v81;
      v43 = v82;
      sub_20A5B90C8();
      v53 = v66;
      v50 = v67;
      goto LABEL_13;
    case 215:
      v86[3] = 6;
      sub_20A593928();
      v52 = v68;
      v44 = v81;
      v43 = v82;
      sub_20A5B90C8();
      v53 = v69;
      v50 = v70;
      goto LABEL_13;
    case 216:
      v86[4] = 7;
      sub_20A5938E4();
      v52 = v71;
      v44 = v81;
      v43 = v82;
      sub_20A5B90C8();
      v53 = v72;
      v50 = v73;
      goto LABEL_13;
    case 217:
      v86[5] = 8;
      sub_20A5938A0();
      v52 = v74;
      v44 = v81;
      v43 = v82;
      sub_20A5B90C8();
      v53 = v75;
      v50 = v76;
LABEL_13:
      v45 = *(void (**)(char *, uint64_t))(v53 + 8);
      v46 = v52;
LABEL_14:
      v45(v46, v50);
LABEL_15:
      result = (*(uint64_t (**)(char *, uint64_t))(v80 + 8))(v44, v43);
      break;
    default:
      v86[7] = 9;
      sub_20A59385C();
      v39 = v77;
      v41 = v81;
      v40 = v82;
      sub_20A5B90C8();
      v86[6] = v35;
      sub_20A52E2F8();
      v42 = v79;
      sub_20A5B9140();
      (*(void (**)(char *, uint64_t))(v78 + 8))(v39, v42);
      result = (*(uint64_t (**)(char *, uint64_t))(v80 + 8))(v41, v40);
      break;
  }
  return result;
}

uint64_t ArmandDeviceDataErrorCode.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  _QWORD v44[5];
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  char *v69;
  char *v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;

  v66 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FBC98);
  v4 = *(_QWORD *)(v3 - 8);
  v60 = v3;
  v61 = v4;
  MEMORY[0x24BDAC7A8](v3, v5);
  v70 = (char *)v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FBCA0);
  v58 = *(_QWORD *)(v7 - 8);
  v59 = v7;
  MEMORY[0x24BDAC7A8](v7, v8);
  v65 = (char *)v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FBCA8);
  v56 = *(_QWORD *)(v10 - 8);
  v57 = v10;
  MEMORY[0x24BDAC7A8](v10, v11);
  v69 = (char *)v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FBCB0);
  v54 = *(_QWORD *)(v13 - 8);
  v55 = v13;
  MEMORY[0x24BDAC7A8](v13, v14);
  v64 = (char *)v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FBCB8);
  v48 = *(_QWORD *)(v51 - 8);
  MEMORY[0x24BDAC7A8](v51, v16);
  v63 = (char *)v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FBCC0);
  v52 = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53, v18);
  v62 = (char *)v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FBCC8);
  v49 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50, v20);
  v68 = (char *)v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FBCD0);
  v46 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47, v22);
  v67 = (char *)v44 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FBCD8);
  v44[4] = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45, v24);
  v26 = (char *)v44 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FBCE0);
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27, v29);
  v31 = (char *)v44 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2545FBCE8);
  v32 = *(_QWORD *)(v71 - 8);
  MEMORY[0x24BDAC7A8](v71, v33);
  v35 = (char *)v44 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = a1[3];
  v72 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v36);
  sub_20A593818();
  v37 = v73;
  sub_20A5B92F0();
  if (!v37)
  {
    v44[2] = v31;
    v44[1] = v28;
    v44[3] = v26;
    v73 = v32;
    v38 = sub_20A5B90B0();
    if (*(_QWORD *)(v38 + 16) == 1)
      __asm { BR              X10 }
    v39 = sub_20A5B8ED0();
    swift_allocError();
    v41 = v40;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB6C8);
    *v41 = &type metadata for ArmandDeviceDataErrorCode;
    v42 = v71;
    sub_20A5B902C();
    sub_20A5B8EC4();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v39 - 8) + 104))(v41, *MEMORY[0x24BEE26D0], v39);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v73 + 8))(v35, v42);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v72);
}

uint64_t sub_20A544030@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ArmandDeviceDataErrorCode.init(from:)(a1, a2);
}

uint64_t sub_20A544044(_QWORD *a1)
{
  return ArmandDeviceDataErrorCode.encode(to:)(a1);
}

uint64_t sub_20A544058@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  id v13;
  uint64_t v14;
  _BYTE v15[40];

  v4 = sub_20A5B8630();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A47BD60((uint64_t)a1, (uint64_t)v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB47D0);
  if (swift_dynamicCast())
    goto LABEL_2;
  if (swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    v9 = v14;
    *a2 = v13;
    a2[1] = v9;
    type metadata accessor for ODIKnownBinding();
    swift_storeEnumTagMultiPayload();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  }
  if (swift_dynamicCast())
  {
LABEL_2:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    *a2 = v13;
    type metadata accessor for ODIKnownBinding();
    swift_storeEnumTagMultiPayload();
  }
  else if (swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    (*(void (**)(_QWORD *, char *, uint64_t))(v5 + 32))(a2, v8, v4);
    type metadata accessor for ODIKnownBinding();
    swift_storeEnumTagMultiPayload();
  }
  else if (swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    *(_BYTE *)a2 = (_BYTE)v13;
    type metadata accessor for ODIKnownBinding();
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    sub_20A459574(0, &qword_2545FA2C8);
    if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);

      type metadata accessor for ODIKnownBinding();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      v13 = 0;
      v14 = 0xE000000000000000;
      sub_20A5B8E94();
      sub_20A5B899C();
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      swift_getDynamicType();
      sub_20A5B932C();
      sub_20A5B899C();
      swift_bridgeObjectRelease();
      sub_20A5B899C();
      sub_20A5B8F9C();
      v10 = (uint64_t)v13;
      LOBYTE(v13) = 107;
      ODIError(_:fromError:code:forceCode:properties:file:function:line:)(v10, v14, 0, (unsigned __int8 *)&v13, 0, 0, 0xD00000000000005FLL, 0x800000020A5E5270, 0x566E692874696E69, 0xEC000000293A6C61, 97);
      swift_bridgeObjectRelease();
      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
}

void sub_20A544410()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v1 = sub_20A5B8630();
  MEMORY[0x24BDAC7A8](v1, v2);
  v3 = type metadata accessor for ODIKnownBinding();
  MEMORY[0x24BDAC7A8](v3, v4);
  sub_20A4797C4(v0, (uint64_t)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = (char *)sub_20A5444D4 + 4 * byte_20A5CB13E[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_20A5444D4()
{
  sub_20A5B92A8();
  return sub_20A5B92C0();
}

void sub_20A5445CC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  _QWORD v25[3];
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FC508);
  v39 = *(_QWORD *)(v2 - 8);
  v40 = v2;
  MEMORY[0x24BDAC7A8](v2, v3);
  v35 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FC510);
  v33 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36, v5);
  v31 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FC518);
  v38 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41, v7);
  v34 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_20A5B8630();
  v32 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37, v9);
  v30 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FC520);
  v28 = *(_QWORD *)(v11 - 8);
  v29 = v11;
  MEMORY[0x24BDAC7A8](v11, v12);
  v27 = (char *)v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FC528);
  v25[2] = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26, v14);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FC530);
  v25[1] = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15, v16);
  v17 = type metadata accessor for ODIKnownBinding();
  MEMORY[0x24BDAC7A8](v17, v18);
  v20 = (char *)v25 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FC538);
  v42 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44, v21);
  v23 = (char *)v25 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A59CF9C();
  v43 = v23;
  sub_20A5B92FC();
  sub_20A4797C4(v45, (uint64_t)v20);
  v24 = (char *)sub_20A5448B4 + 4 * byte_20A5CB144[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_20A5448B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v2 - 94) = 0;
  sub_20A59D134();
  v4 = *(_QWORD *)(v2 - 128);
  v3 = *(_QWORD *)(v2 - 120);
  sub_20A5B90C8();
  sub_20A5B9128();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 280) + 8))(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 136) + 8))(v4, v3);
}

uint64_t sub_20A544BEC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t *v46;
  uint64_t v47;
  _QWORD v49[8];
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;

  v69 = a2;
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FC498);
  v56 = *(_QWORD *)(v68 - 8);
  MEMORY[0x24BDAC7A8](v68, v3);
  v61 = (char *)v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FC4A0);
  v55 = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58, v5);
  v62 = (char *)v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FC4A8);
  v67 = *(_QWORD *)(v57 - 8);
  MEMORY[0x24BDAC7A8](v57, v7);
  v63 = (char *)v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FC4B0);
  v53 = *(_QWORD *)(v54 - 8);
  MEMORY[0x24BDAC7A8](v54, v9);
  v60 = (char *)v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FC4B8);
  v52 = *(_QWORD *)(v51 - 8);
  MEMORY[0x24BDAC7A8](v51, v11);
  v66 = (char *)v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FC4C0);
  v49[7] = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50, v13);
  v59 = (char *)v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FC4C8);
  v65 = *(_QWORD *)(v71 - 8);
  MEMORY[0x24BDAC7A8](v71, v15);
  v17 = (char *)v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = type metadata accessor for ODIKnownBinding();
  v19 = MEMORY[0x24BDAC7A8](v64, v18);
  v49[6] = (char *)v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v19, v21);
  v24 = (char *)v49 - v23;
  v26 = MEMORY[0x24BDAC7A8](v22, v25);
  v28 = (char *)v49 - v27;
  v30 = MEMORY[0x24BDAC7A8](v26, v29);
  v32 = (char *)v49 - v31;
  v34 = MEMORY[0x24BDAC7A8](v30, v33);
  v36 = (char *)v49 - v35;
  MEMORY[0x24BDAC7A8](v34, v37);
  v39 = (char *)v49 - v38;
  v40 = a1[3];
  v72 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v40);
  sub_20A59CF9C();
  v70 = v17;
  v41 = v73;
  sub_20A5B92F0();
  if (!v41)
  {
    v49[1] = v36;
    v49[2] = v32;
    v49[3] = v28;
    v49[4] = v24;
    v73 = 0;
    v49[5] = v39;
    v42 = v70;
    v43 = sub_20A5B90B0();
    if (*(_QWORD *)(v43 + 16) == 1)
      __asm { BR              X10 }
    v44 = sub_20A5B8ED0();
    swift_allocError();
    v46 = v45;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB6C8);
    *v46 = v64;
    v47 = v71;
    sub_20A5B902C();
    sub_20A5B8EC4();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v44 - 8) + 104))(v46, *MEMORY[0x24BEE26D0], v44);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v65 + 8))(v42, v47);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v72);
}

void sub_20A54515C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;

  *(_BYTE *)(v2 - 93) = 1;
  sub_20A59D0F0();
  v3 = v0;
  v4 = *(_QWORD *)(v2 - 128);
  v5 = *(_QWORD *)(v2 - 104);
  sub_20A5B9020();
  if (!v5)
  {
    v6 = *(_QWORD *)(v2 - 280);
    v7 = sub_20A5B9074();
    v9 = v8;
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 272) + 8))(v1, v6);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 168) + 8))(v4, v3);
    v10 = *(uint64_t **)(v2 - 336);
    *v10 = v7;
    v10[1] = v9;
    swift_storeEnumTagMultiPayload();
    v11 = *(_QWORD *)(v2 - 312);
    sub_20A465A70((uint64_t)v10, v11, (uint64_t (*)(_QWORD))type metadata accessor for ODIKnownBinding);
    sub_20A465A70(v11, *(_QWORD *)(v2 - 136), (uint64_t (*)(_QWORD))type metadata accessor for ODIKnownBinding);
    JUMPOUT(0x20A54512CLL);
  }
  swift_bridgeObjectRelease();
  JUMPOUT(0x20A545124);
}

void sub_20A5451F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;

  *(_BYTE *)(v1 - 92) = 2;
  sub_20A59D0AC();
  v2 = *(_QWORD *)(v1 - 208);
  v3 = v0;
  v4 = *(_QWORD *)(v1 - 128);
  v5 = *(_QWORD *)(v1 - 104);
  sub_20A5B9020();
  if (!v5)
  {
    v6 = *(_QWORD *)(v1 - 256);
    v7 = sub_20A5B9098();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 264) + 8))(v2, v6);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 168) + 8))(v4, v3);
    v8 = *(uint64_t **)(v1 - 328);
    *v8 = v7;
    swift_storeEnumTagMultiPayload();
    sub_20A465A70((uint64_t)v8, *(_QWORD *)(v1 - 312), (uint64_t (*)(_QWORD))type metadata accessor for ODIKnownBinding);
    JUMPOUT(0x20A545650);
  }
  swift_bridgeObjectRelease();
  JUMPOUT(0x20A545120);
}

void sub_20A545288()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = v1;
  *(_BYTE *)(v2 - 91) = 3;
  sub_20A59D068();
  v4 = *(_QWORD *)(v2 - 184);
  v5 = v0;
  v6 = *(_QWORD *)(v2 - 128);
  v7 = *(_QWORD *)(v2 - 104);
  sub_20A5B9020();
  if (v7)
    JUMPOUT(0x20A5452D4);
  sub_20A5B8630();
  sub_20A498124(&qword_2545FAE80, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
  v8 = *(_QWORD *)(v2 - 232);
  sub_20A5B90A4();
  v9 = *(_QWORD *)(v2 - 168);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v8);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v6, v5);
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x20A54563CLL);
}

void sub_20A5452EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  *(_BYTE *)(v1 - 90) = 4;
  sub_20A59D024();
  v2 = *(_QWORD *)(v1 - 192);
  v3 = *(_QWORD *)(v1 - 104);
  sub_20A5B9020();
  if (v3)
  {
    swift_bridgeObjectRelease();
    JUMPOUT(0x20A545124);
  }
  v4 = *(_QWORD *)(v1 - 224);
  v5 = sub_20A5B9080();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 248) + 8))(v2, v4);
  swift_bridgeObjectRelease();
  (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v1 - 168) + 8))(*(_QWORD *)(v1 - 128), v0);
  **(_BYTE **)(v1 - 304) = v5 & 1;
  JUMPOUT(0x20A54562CLL);
}

void sub_20A54534C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v2 - 89) = 5;
  sub_20A59CFE0();
  v3 = *(_QWORD *)(v2 - 200);
  v4 = *(_QWORD *)(v2 - 128);
  v5 = *(_QWORD *)(v2 - 104);
  sub_20A5B9020();
  if (!v5)
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 240) + 8))(v3, v1);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 168) + 8))(v4, v0);
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x20A54564CLL);
  }
  JUMPOUT(0x20A545110);
}

uint64_t sub_20A545668()
{
  sub_20A59D024();
  return sub_20A5B9314();
}

uint64_t sub_20A545690()
{
  sub_20A59D024();
  return sub_20A5B9320();
}

uint64_t sub_20A5456B8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_20A5456E4 + 4 * byte_20A5CB150[*v0]))(0x656C62756F44, 0xE600000000000000);
}

uint64_t sub_20A5456E4()
{
  return 0x676E69727453;
}

uint64_t sub_20A5456F4()
{
  return 7630409;
}

uint64_t sub_20A545704()
{
  return 1702125892;
}

uint64_t sub_20A545714()
{
  return 1819242306;
}

uint64_t sub_20A545724()
{
  return 1819047246;
}

uint64_t sub_20A545734@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A5987CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A545758()
{
  sub_20A59CF9C();
  return sub_20A5B9314();
}

uint64_t sub_20A545780()
{
  sub_20A59CF9C();
  return sub_20A5B9320();
}

uint64_t sub_20A5457A8()
{
  sub_20A59D068();
  return sub_20A5B9314();
}

uint64_t sub_20A5457D0()
{
  sub_20A59D068();
  return sub_20A5B9320();
}

uint64_t sub_20A5457F8()
{
  sub_20A59D134();
  return sub_20A5B9314();
}

uint64_t sub_20A545820()
{
  sub_20A59D134();
  return sub_20A5B9320();
}

uint64_t sub_20A545848()
{
  sub_20A59D0AC();
  return sub_20A5B9314();
}

uint64_t sub_20A545870()
{
  sub_20A59D0AC();
  return sub_20A5B9320();
}

uint64_t sub_20A545898@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_20A5458C4()
{
  sub_20A59CFE0();
  return sub_20A5B9314();
}

uint64_t sub_20A5458EC()
{
  sub_20A59CFE0();
  return sub_20A5B9320();
}

uint64_t sub_20A545914()
{
  sub_20A59D0F0();
  return sub_20A5B9314();
}

uint64_t sub_20A54593C()
{
  sub_20A59D0F0();
  return sub_20A5B9320();
}

uint64_t sub_20A545964@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A544BEC(a1, a2);
}

void sub_20A545978(_QWORD *a1)
{
  sub_20A5445CC(a1);
}

uint64_t sub_20A54598C()
{
  sub_20A5B929C();
  sub_20A544410();
  return sub_20A5B92CC();
}

uint64_t sub_20A5459CC()
{
  sub_20A5B929C();
  sub_20A544410();
  return sub_20A5B92CC();
}

unint64_t sub_20A545A08(uint64_t a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t inited;
  uint64_t v7;
  unint64_t v9;

  if ((*(_BYTE *)(a1 + 32) & 1) != 0)
    goto LABEL_6;
  v2 = *(unsigned __int8 *)(a1 + 16);
  if (v2 == 15)
  {
    v3 = *(_QWORD *)(v1 + 24);
    v4 = *(_QWORD *)(v1 + 32);
    v5 = *(_BYTE *)(v1 + 40);
    goto LABEL_9;
  }
  if (v2 == 17)
  {
    v3 = *(_QWORD *)(v1 + 48);
    v4 = *(_QWORD *)(v1 + 56);
    v5 = *(_BYTE *)(v1 + 64);
    goto LABEL_9;
  }
  if (v2 != 16)
  {
LABEL_6:
    __swift_instantiateConcreteTypeFromMangledName(qword_2545FA940);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_20A5BA9A0;
    *(_QWORD *)(inited + 32) = 0x646F43726F727265;
    *(_QWORD *)(inited + 40) = 0xE900000000000065;
    v7 = MEMORY[0x24BEE1778];
    *(_QWORD *)(inited + 72) = MEMORY[0x24BEE1768];
    *(_QWORD *)(inited + 80) = v7;
    *(_QWORD *)(inited + 48) = -5;
    return sub_20A469B08(inited);
  }
  v3 = *(_QWORD *)v1;
  v4 = *(_QWORD *)(v1 + 8);
  v5 = *(_BYTE *)(v1 + 16);
LABEL_9:
  swift_bridgeObjectRetain();
  v9 = sub_20A535E34(v3, v4, v5);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_20A545B00(_QWORD *a1)
{
  return sub_20A55ED9C(a1, &qword_2545FBF68, (void (*)(void))sub_20A598328);
}

uint64_t sub_20A545B2C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_20A55EFC8(a1, &qword_2545FBF48, (void (*)(void))sub_20A598328, a2);
}

uint64_t sub_20A545B58()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x645F64756F6C6369;
  if (*v0 != 1)
    v1 = 0x4449656C707061;
  if (*v0)
    return v1;
  else
    return 0x645F73656E757469;
}

uint64_t sub_20A545BB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A5989FC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A545BDC()
{
  sub_20A598328();
  return sub_20A5B9314();
}

uint64_t sub_20A545C04()
{
  sub_20A598328();
  return sub_20A5B9320();
}

unsigned __int8 *sub_20A545C2C@<X0>(unsigned __int8 *result@<X0>, char *a2@<X8>)
{
  _BYTE *v2;
  char v3;
  int v4;

  if ((result[16] & 1) != 0)
  {
    *a2 = -42;
  }
  else
  {
    v3 = v2[16];
    v4 = *result;
    if (v4 != 16)
      v3 = -42;
    if (v4 == 17)
      v3 = v2[64];
    if (v4 == 15)
      v3 = v2[40];
    *a2 = v3;
  }
  return result;
}

uint64_t sub_20A545C7C()
{
  return sub_20A55D638();
}

uint64_t sub_20A545C94(uint64_t *a1, uint64_t a2)
{
  return sub_20A58C274(a1, a2) & 1;
}

unint64_t sub_20A545CAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t inited;
  uint64_t v3;
  unint64_t result;
  uint64_t v5;
  uint64_t v6;
  char v7;
  unint64_t v8;

  if ((*(_BYTE *)(a1 + 32) & 1) != 0)
  {
LABEL_2:
    __swift_instantiateConcreteTypeFromMangledName(qword_2545FA940);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_20A5BA9A0;
    *(_QWORD *)(inited + 32) = 0x646F43726F727265;
    *(_QWORD *)(inited + 40) = 0xE900000000000065;
    v3 = MEMORY[0x24BEE1778];
    *(_QWORD *)(inited + 72) = MEMORY[0x24BEE1768];
    *(_QWORD *)(inited + 80) = v3;
    *(_QWORD *)(inited + 48) = -5;
    return sub_20A469B08(inited);
  }
  else
  {
    switch(*(_BYTE *)(a1 + 16))
    {
      case 0:
        v5 = *(_QWORD *)v1;
        v6 = *(_QWORD *)(v1 + 8);
        v7 = *(_BYTE *)(v1 + 16);
        goto LABEL_7;
      case 2:
        v5 = *(_QWORD *)(v1 + 24);
        v6 = *(_QWORD *)(v1 + 32);
        v7 = *(_BYTE *)(v1 + 40);
        goto LABEL_7;
      case 3:
        v5 = *(_QWORD *)(v1 + 48);
        v6 = *(_QWORD *)(v1 + 56);
        v7 = *(_BYTE *)(v1 + 64);
LABEL_7:
        swift_bridgeObjectRetain();
        v8 = sub_20A535E34(v5, v6, v7);
        swift_bridgeObjectRelease();
        result = v8;
        break;
      case 4:
        result = sub_20A537D6C(*(_QWORD *)(v1 + 72), *(unsigned __int8 *)(v1 + 80) | (unsigned __int16)(*(unsigned __int8 *)(v1 + 81) << 8), MEMORY[0x24BEE1768], MEMORY[0x24BEE1778]);
        break;
      default:
        goto LABEL_2;
    }
  }
  return result;
}

uint64_t sub_20A545DD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v8;

  v1 = *(unsigned __int8 *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(unsigned __int8 *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 56);
  v5 = *(unsigned __int8 *)(v0 + 64);
  v8 = *(unsigned __int8 *)(v0 + 80);
  v6 = *(unsigned __int8 *)(v0 + 81);
  if (*(_QWORD *)(v0 + 8))
  {
    sub_20A5B92B4();
    swift_bridgeObjectRetain();
    sub_20A5B8978();
  }
  else
  {
    sub_20A5B92B4();
  }
  if ((v1 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  sub_20A5B92A8();
  swift_bridgeObjectRelease();
  sub_20A5B92B4();
  if (v2)
  {
    swift_bridgeObjectRetain();
    sub_20A5B8978();
  }
  if ((v3 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  sub_20A5B92A8();
  swift_bridgeObjectRelease();
  sub_20A5B92B4();
  if (v4)
  {
    swift_bridgeObjectRetain();
    sub_20A5B8978();
  }
  if ((v5 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  sub_20A5B92A8();
  swift_bridgeObjectRelease();
  sub_20A5B92B4();
  if (!v8)
    sub_20A5B92A8();
  if ((v6 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  return sub_20A5B92A8();
}

void sub_20A54601C()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A546024()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A54602C()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546034()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A54603C()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546044()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A54604C()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546054()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A54605C()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546064()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A54606C()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546074()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A54607C()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546084()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A54608C()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546094()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A54609C()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5460A4()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5460AC()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5460B4()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5460BC()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5460C4()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5460CC()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5460D4()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5460DC()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5460E4()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5460EC()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5460F4()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5460FC()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546104()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A54610C()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546114()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A54611C()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546124()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A54612C()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546134()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A54613C()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546144()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A54614C()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546154()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A54615C()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546164()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A54616C()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546174()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A54617C()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546184()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A54618C()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546194()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A54619C()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5461A4()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5461AC()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5461B4()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5461BC()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5461C4()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5461CC()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5461D4()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5461DC()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5461E4()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5461EC()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5461F4()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5461FC()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546208()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546218()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546228()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546230()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546238()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546240()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546248()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546250()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546258()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546260()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546268()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546270()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546278()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546280()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546288()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546290()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546298()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5462A0()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5462A8()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5462B0()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5462B8()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5462C0()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5462C8()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5462D0()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5462D8()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5462E0()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5462E8()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5462F0()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5462F8()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546300()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546308()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546310()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546318()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546320()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546328()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546330()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546338()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546344()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A54634C()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546354()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A54635C()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546364()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A54636C()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546374()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A54637C()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546384()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A54638C()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546394()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A54639C()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5463A4()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5463AC()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5463B4()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5463BC()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5463C4()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5463CC()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5463D4()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5463DC()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5463E4()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5463EC()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5463F4()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5463FC()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546404()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A54640C()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546414()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A54641C()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546424()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A54642C()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546434()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A54643C()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546444()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A54644C()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546454()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A54645C()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546464()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A54646C()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546474()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A54647C()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546484()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A54648C()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546494()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A54649C()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5464A4()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5464AC()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5464B4()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5464BC()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5464C4()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5464CC()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5464D4()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5464DC()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5464E4()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5464EC()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5464F4()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5464FC()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546504()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A54650C()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546514()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A54651C()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546524()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A54652C()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546534()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A54653C()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546544()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A54654C()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546554()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A54655C()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546564()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A54656C()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546574()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A54657C()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546584()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A54658C()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546594()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A54659C()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5465A4()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5465AC()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5465B4()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5465BC()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5465C4()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5465CC()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5465D4()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5465DC()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5465E4()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5465EC()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5465F4()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5465FC()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546604()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A54660C()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546614()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A54661C()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546624()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A54662C()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546634()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A54663C()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A54664C()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A54665C()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A54666C()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A54667C()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A54668C()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A54669C()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5466AC()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5466BC()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5466CC()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5466DC()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5466EC()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A5466FC()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A54670C()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A54671C()
{
  JUMPOUT(0x20A545E6CLL);
}

void sub_20A546728()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546730()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546738()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546740()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546748()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546750()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546758()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546760()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546768()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546770()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546778()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546780()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546788()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546790()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546798()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A5467A0()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A5467A8()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A5467B0()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A5467B8()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A5467C0()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A5467C8()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A5467D0()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A5467D8()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A5467E0()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A5467E8()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A5467F0()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A5467F8()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546800()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546808()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546810()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546818()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546820()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546828()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546830()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546838()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546840()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546848()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546850()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546858()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546860()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546868()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546870()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546878()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546880()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546888()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546890()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546898()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A5468A0()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A5468A8()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A5468B0()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A5468B8()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A5468C0()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A5468C8()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A5468D0()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A5468D8()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A5468E0()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A5468E8()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A5468F0()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A5468F8()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546900()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A54690C()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A54691C()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A54692C()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546934()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A54693C()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546944()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A54694C()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546954()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A54695C()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546964()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A54696C()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546974()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A54697C()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546984()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A54698C()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546994()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A54699C()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A5469A4()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A5469AC()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A5469B4()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A5469BC()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A5469C4()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A5469CC()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A5469D4()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A5469DC()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A5469E4()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A5469EC()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A5469F4()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A5469FC()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546A04()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546A0C()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546A14()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546A1C()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546A24()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546A2C()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546A34()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546A3C()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546A48()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546A50()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546A58()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546A60()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546A68()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546A70()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546A78()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546A80()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546A88()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546A90()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546A98()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546AA0()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546AA8()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546AB0()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546AB8()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546AC0()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546AC8()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546AD0()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546AD8()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546AE0()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546AE8()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546AF0()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546AF8()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546B00()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546B08()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546B10()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546B18()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546B20()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546B28()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546B30()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546B38()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546B40()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546B48()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546B50()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546B58()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546B60()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546B68()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546B70()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546B78()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546B80()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546B88()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546B90()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546B98()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546BA0()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546BA8()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546BB0()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546BB8()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546BC0()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546BC8()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546BD0()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546BD8()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546BE0()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546BE8()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546BF0()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546BF8()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546C00()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546C08()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546C10()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546C18()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546C20()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546C28()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546C30()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546C38()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546C40()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546C48()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546C50()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546C58()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546C60()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546C68()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546C70()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546C78()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546C80()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546C88()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546C90()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546C98()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546CA0()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546CA8()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546CB0()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546CB8()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546CC0()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546CC8()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546CD0()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546CD8()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546CE0()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546CE8()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546CF0()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546CF8()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546D00()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546D08()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546D10()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546D18()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546D20()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546D28()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546D30()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546D38()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546D40()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546D50()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546D60()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546D70()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546D80()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546D90()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546DA0()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546DB0()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546DC0()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546DD0()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546DE0()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546DF0()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546E00()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546E10()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546E20()
{
  JUMPOUT(0x20A545EE8);
}

void sub_20A546E2C()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A546E34()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A546E3C()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A546E44()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A546E4C()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A546E54()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A546E5C()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A546E64()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A546E6C()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A546E74()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A546E7C()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A546E84()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A546E8C()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A546E94()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A546E9C()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A546EA4()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A546EAC()
{
  JUMPOUT(0x20A545F64);
}

