void sub_20A546EB4()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A546EBC()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A546EC4()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A546ECC()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A546ED4()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A546EDC()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A546EE4()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A546EEC()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A546EF4()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A546EFC()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A546F04()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A546F0C()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A546F14()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A546F1C()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A546F24()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A546F2C()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A546F34()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A546F3C()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A546F44()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A546F4C()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A546F54()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A546F5C()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A546F64()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A546F6C()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A546F74()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A546F7C()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A546F84()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A546F8C()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A546F94()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A546F9C()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A546FA4()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A546FAC()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A546FB4()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A546FBC()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A546FC4()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A546FCC()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A546FD4()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A546FDC()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A546FE4()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A546FEC()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A546FF4()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A546FFC()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547004()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547010()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547020()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547030()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547038()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547040()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547048()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547050()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547058()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547060()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547068()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547070()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547078()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547080()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547088()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547090()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547098()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A5470A0()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A5470A8()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A5470B0()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A5470B8()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A5470C0()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A5470C8()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A5470D0()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A5470D8()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A5470E0()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A5470E8()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A5470F0()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A5470F8()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547100()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547108()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547110()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547118()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547120()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547128()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547130()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547138()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547140()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A54714C()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547154()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A54715C()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547164()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A54716C()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547174()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A54717C()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547184()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A54718C()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547194()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A54719C()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A5471A4()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A5471AC()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A5471B4()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A5471BC()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A5471C4()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A5471CC()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A5471D4()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A5471DC()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A5471E4()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A5471EC()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A5471F4()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A5471FC()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547204()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A54720C()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547214()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A54721C()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547224()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A54722C()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547234()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A54723C()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547244()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A54724C()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547254()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A54725C()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547264()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A54726C()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547274()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A54727C()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547284()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A54728C()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547294()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A54729C()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A5472A4()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A5472AC()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A5472B4()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A5472BC()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A5472C4()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A5472CC()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A5472D4()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A5472DC()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A5472E4()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A5472EC()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A5472F4()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A5472FC()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547304()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A54730C()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547314()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A54731C()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547324()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A54732C()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547334()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A54733C()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547344()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A54734C()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547354()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A54735C()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547364()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A54736C()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547374()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A54737C()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547384()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A54738C()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547394()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A54739C()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A5473A4()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A5473AC()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A5473B4()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A5473BC()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A5473C4()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A5473CC()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A5473D4()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A5473DC()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A5473E4()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A5473EC()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A5473F4()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A5473FC()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547404()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A54740C()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547414()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A54741C()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547424()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A54742C()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547434()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A54743C()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547444()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547454()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547464()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547474()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547484()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547494()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A5474A4()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A5474B4()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A5474C4()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A5474D4()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A5474E4()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A5474F4()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547504()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547514()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547524()
{
  JUMPOUT(0x20A545F64);
}

void sub_20A547530()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547538()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547540()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547548()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547550()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547558()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547560()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547568()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547570()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547578()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547580()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547588()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547590()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547598()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A5475A0()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A5475A8()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A5475B0()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A5475B8()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A5475C0()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A5475C8()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A5475D0()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A5475D8()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A5475E0()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A5475E8()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A5475F0()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A5475F8()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547600()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547608()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547610()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547618()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547620()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547628()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547630()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547638()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547640()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547648()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547650()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547658()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547660()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547668()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547670()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547678()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547680()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547688()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547690()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547698()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A5476A0()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A5476A8()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A5476B0()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A5476B8()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A5476C0()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A5476C8()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A5476D0()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A5476D8()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A5476E0()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A5476E8()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A5476F0()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A5476F8()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547700()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547708()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547714()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547724()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547734()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A54773C()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547744()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A54774C()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547754()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A54775C()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547764()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A54776C()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547774()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A54777C()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547784()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A54778C()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547794()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A54779C()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A5477A4()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A5477AC()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A5477B4()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A5477BC()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A5477C4()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A5477CC()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A5477D4()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A5477DC()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A5477E4()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A5477EC()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A5477F4()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A5477FC()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547804()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A54780C()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547814()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A54781C()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547824()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A54782C()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547834()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A54783C()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547844()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547850()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547858()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547860()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547868()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547870()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547878()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547880()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547888()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547890()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547898()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A5478A0()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A5478A8()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A5478B0()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A5478B8()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A5478C0()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A5478C8()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A5478D0()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A5478D8()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A5478E0()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A5478E8()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A5478F0()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A5478F8()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547900()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547908()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547910()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547918()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547920()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547928()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547930()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547938()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547940()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547948()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547950()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547958()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547960()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547968()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547970()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547978()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547980()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547988()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547990()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547998()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A5479A0()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A5479A8()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A5479B0()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A5479B8()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A5479C0()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A5479C8()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A5479D0()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A5479D8()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A5479E0()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A5479E8()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A5479F0()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A5479F8()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547A00()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547A08()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547A10()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547A18()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547A20()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547A28()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547A30()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547A38()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547A40()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547A48()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547A50()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547A58()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547A60()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547A68()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547A70()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547A78()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547A80()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547A88()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547A90()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547A98()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547AA0()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547AA8()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547AB0()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547AB8()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547AC0()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547AC8()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547AD0()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547AD8()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547AE0()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547AE8()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547AF0()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547AF8()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547B00()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547B08()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547B10()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547B18()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547B20()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547B28()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547B30()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547B38()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547B40()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547B48()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547B58()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547B68()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547B78()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547B88()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547B98()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547BA8()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547BB8()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547BC8()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547BD8()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547BE8()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547BF8()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547C08()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547C18()
{
  JUMPOUT(0x20A545FD4);
}

void sub_20A547C28()
{
  JUMPOUT(0x20A545FD4);
}

uint64_t sub_20A547C34(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  int v31;
  char v32;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FBF98);
  v26 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v7 = v1[1];
  v9 = *((_BYTE *)v1 + 16);
  v10 = v1[3];
  v24 = v1[4];
  v25 = v10;
  v31 = *((unsigned __int8 *)v1 + 40);
  v11 = v1[6];
  v22 = v1[7];
  v23 = v11;
  LODWORD(v11) = *((unsigned __int8 *)v1 + 64);
  v18 = v1[9];
  v19 = *((unsigned __int8 *)v1 + 80);
  v20 = *((unsigned __int8 *)v1 + 81);
  v21 = v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A59836C();
  v12 = v3;
  sub_20A5B92FC();
  v28 = v8;
  v29 = v7;
  v30 = v9;
  v32 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FBF58);
  sub_20A44D20C(&qword_2545FBF70, &qword_2545FBF58, (uint64_t)&unk_20A5C2080);
  v13 = v27;
  sub_20A5B9140();
  if (v13)
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v6, v3);
  v15 = v22;
  v16 = v23;
  v17 = v26;
  v28 = v25;
  v29 = v24;
  v30 = v31;
  v32 = 1;
  sub_20A5B9140();
  v28 = v16;
  v29 = v15;
  v30 = v21;
  v32 = 2;
  sub_20A5B9140();
  v28 = v18;
  LOBYTE(v29) = v19;
  BYTE1(v29) = v20;
  v32 = 3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FBF88);
  sub_20A44D20C(&qword_2545FBFA0, &qword_2545FBF88, (uint64_t)&unk_20A5C2080);
  sub_20A5B9140();
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v6, v12);
}

uint64_t sub_20A547EB4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;
  int v29;
  char v30;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FBF78);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A59836C();
  sub_20A5B92F0();
  if (!v2)
  {
    v25 = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545FBF58);
    v30 = 0;
    sub_20A44D20C(&qword_2545FBF60, &qword_2545FBF58, (uint64_t)&unk_20A5C20A8);
    sub_20A5B90A4();
    v23 = v26;
    v24 = v27;
    v11 = v28;
    v30 = 1;
    sub_20A5B90A4();
    v29 = v11;
    v12 = v27;
    v22 = v26;
    v21 = v28;
    v30 = 2;
    sub_20A5B90A4();
    v13 = v27;
    v20 = v26;
    HIDWORD(v19) = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545FBF88);
    v30 = 3;
    sub_20A44D20C(&qword_2545FBF90, &qword_2545FBF88, (uint64_t)&unk_20A5C20A8);
    sub_20A5B90A4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    v15 = v25;
    v14 = v26;
    v16 = v27;
    v17 = BYTE1(v27);
    v18 = v24;
    *v25 = v23;
    v15[1] = v18;
    *((_BYTE *)v15 + 16) = v29;
    v15[3] = v22;
    v15[4] = v12;
    *((_BYTE *)v15 + 40) = v21;
    v15[6] = v20;
    v15[7] = v13;
    *((_BYTE *)v15 + 64) = BYTE4(v19);
    v15[9] = v14;
    *((_BYTE *)v15 + 80) = v16;
    *((_BYTE *)v15 + 81) = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_20A5481EC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_20A548224 + 4 * byte_20A5CB7E4[*v0]))(0x726556646C697562, 0xEC0000006E6F6973);
}

uint64_t sub_20A548224()
{
  return 0x6C6169726573;
}

uint64_t sub_20A548238()
{
  return 1684628597;
}

uint64_t sub_20A54824C()
{
  return 1684628325;
}

uint64_t sub_20A54825C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A598B7C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A548280()
{
  sub_20A59836C();
  return sub_20A5B9314();
}

uint64_t sub_20A5482A8()
{
  sub_20A59836C();
  return sub_20A5B9320();
}

_BYTE *sub_20A5482D0@<X0>(_BYTE *result@<X0>, char *a2@<X8>)
{
  _BYTE *v2;
  char v3;

  if ((result[16] & 1) != 0)
  {
    *a2 = -42;
  }
  else
  {
    v3 = -42;
    switch(*result)
    {
      case 0:
        *a2 = v2[16];
        break;
      case 2:
        *a2 = v2[40];
        break;
      case 3:
        *a2 = v2[64];
        break;
      case 4:
        v3 = v2[81];
        goto LABEL_8;
      default:
LABEL_8:
        *a2 = v3;
        break;
    }
  }
  return result;
}

uint64_t sub_20A548340@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_20A547EB4(a1, a2);
}

uint64_t sub_20A548354(_QWORD *a1)
{
  return sub_20A547C34(a1);
}

uint64_t sub_20A548368()
{
  sub_20A5B929C();
  sub_20A545DD0();
  return sub_20A5B92CC();
}

uint64_t sub_20A5483F4()
{
  sub_20A5B929C();
  sub_20A545DD0();
  return sub_20A5B92CC();
}

unint64_t sub_20A54847C(uint64_t a1)
{
  uint64_t v1;
  int v2;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  unint64_t v9;

  if ((*(_BYTE *)(a1 + 32) & 1) != 0)
  {
LABEL_6:
    __swift_instantiateConcreteTypeFromMangledName(qword_2545FA940);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_20A5BA9A0;
    *(_QWORD *)(inited + 32) = 0x646F43726F727265;
    *(_QWORD *)(inited + 40) = 0xE900000000000065;
    v5 = MEMORY[0x24BEE1778];
    *(_QWORD *)(inited + 72) = MEMORY[0x24BEE1768];
    *(_QWORD *)(inited + 80) = v5;
    *(_QWORD *)(inited + 48) = -5;
    return sub_20A469B08(inited);
  }
  v2 = *(unsigned __int8 *)(a1 + 16);
  switch(v2)
  {
    case 1:
      v6 = *(_QWORD *)(v1 + 16);
      v7 = *(_QWORD *)(v1 + 24);
      v8 = *(_BYTE *)(v1 + 32);
      break;
    case 5:
      v6 = *(_QWORD *)(v1 + 40);
      v7 = *(_QWORD *)(v1 + 48);
      v8 = *(_BYTE *)(v1 + 56);
      break;
    case 4:
      return sub_20A537D6C(*(_QWORD *)v1, *(unsigned __int8 *)(v1 + 8) | (unsigned __int16)(*(unsigned __int8 *)(v1 + 9) << 8), MEMORY[0x24BEE4568], MEMORY[0x24BEE4578]);
    default:
      goto LABEL_6;
  }
  swift_bridgeObjectRetain();
  v9 = sub_20A535E34(v6, v7, v8);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_20A54858C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(unsigned __int8 *)(v0 + 9);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(unsigned __int8 *)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 48);
  v5 = *(unsigned __int8 *)(v0 + 56);
  if (*(_BYTE *)(v0 + 8) == 1)
  {
    sub_20A5B92B4();
  }
  else
  {
    sub_20A5B92B4();
    sub_20A5B92C0();
  }
  if ((v1 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  sub_20A5B92A8();
  sub_20A5B92B4();
  if (v2)
  {
    swift_bridgeObjectRetain();
    sub_20A5B8978();
  }
  if ((v3 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  sub_20A5B92A8();
  swift_bridgeObjectRelease();
  sub_20A5B92B4();
  if (v4)
  {
    swift_bridgeObjectRetain();
    sub_20A5B8978();
  }
  if ((v5 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  sub_20A5B92A8();
  return swift_bridgeObjectRelease();
}

void sub_20A54873C()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A548744()
{
  JUMPOUT(0x20A548604);
}

void sub_20A54874C()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548754()
{
  JUMPOUT(0x20A548604);
}

void sub_20A54875C()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548764()
{
  JUMPOUT(0x20A548604);
}

void sub_20A54876C()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548774()
{
  JUMPOUT(0x20A548604);
}

void sub_20A54877C()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548784()
{
  JUMPOUT(0x20A548604);
}

void sub_20A54878C()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548794()
{
  JUMPOUT(0x20A548604);
}

void sub_20A54879C()
{
  JUMPOUT(0x20A548604);
}

void sub_20A5487A4()
{
  JUMPOUT(0x20A548604);
}

void sub_20A5487AC()
{
  JUMPOUT(0x20A548604);
}

void sub_20A5487B4()
{
  JUMPOUT(0x20A548604);
}

void sub_20A5487BC()
{
  JUMPOUT(0x20A548604);
}

void sub_20A5487C4()
{
  JUMPOUT(0x20A548604);
}

void sub_20A5487CC()
{
  JUMPOUT(0x20A548604);
}

void sub_20A5487D4()
{
  JUMPOUT(0x20A548604);
}

void sub_20A5487DC()
{
  JUMPOUT(0x20A548604);
}

void sub_20A5487E4()
{
  JUMPOUT(0x20A548604);
}

void sub_20A5487EC()
{
  JUMPOUT(0x20A548604);
}

void sub_20A5487F4()
{
  JUMPOUT(0x20A548604);
}

void sub_20A5487FC()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548804()
{
  JUMPOUT(0x20A548604);
}

void sub_20A54880C()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548814()
{
  JUMPOUT(0x20A548604);
}

void sub_20A54881C()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548824()
{
  JUMPOUT(0x20A548604);
}

void sub_20A54882C()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548834()
{
  JUMPOUT(0x20A548604);
}

void sub_20A54883C()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548844()
{
  JUMPOUT(0x20A548604);
}

void sub_20A54884C()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548854()
{
  JUMPOUT(0x20A548604);
}

void sub_20A54885C()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548864()
{
  JUMPOUT(0x20A548604);
}

void sub_20A54886C()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548874()
{
  JUMPOUT(0x20A548604);
}

void sub_20A54887C()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548884()
{
  JUMPOUT(0x20A548604);
}

void sub_20A54888C()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548894()
{
  JUMPOUT(0x20A548604);
}

void sub_20A54889C()
{
  JUMPOUT(0x20A548604);
}

void sub_20A5488A4()
{
  JUMPOUT(0x20A548604);
}

void sub_20A5488AC()
{
  JUMPOUT(0x20A548604);
}

void sub_20A5488B4()
{
  JUMPOUT(0x20A548604);
}

void sub_20A5488BC()
{
  JUMPOUT(0x20A548604);
}

void sub_20A5488C4()
{
  JUMPOUT(0x20A548604);
}

void sub_20A5488CC()
{
  JUMPOUT(0x20A548604);
}

void sub_20A5488D4()
{
  JUMPOUT(0x20A548604);
}

void sub_20A5488DC()
{
  JUMPOUT(0x20A548604);
}

void sub_20A5488E4()
{
  JUMPOUT(0x20A548604);
}

void sub_20A5488EC()
{
  JUMPOUT(0x20A548604);
}

void sub_20A5488F4()
{
  JUMPOUT(0x20A548604);
}

void sub_20A5488FC()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548904()
{
  JUMPOUT(0x20A548604);
}

void sub_20A54890C()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548914()
{
  JUMPOUT(0x20A548604);
}

void sub_20A54891C()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548928()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548938()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548948()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548950()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548958()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548960()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548968()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548970()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548978()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548980()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548988()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548990()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548998()
{
  JUMPOUT(0x20A548604);
}

void sub_20A5489A0()
{
  JUMPOUT(0x20A548604);
}

void sub_20A5489A8()
{
  JUMPOUT(0x20A548604);
}

void sub_20A5489B0()
{
  JUMPOUT(0x20A548604);
}

void sub_20A5489B8()
{
  JUMPOUT(0x20A548604);
}

void sub_20A5489C0()
{
  JUMPOUT(0x20A548604);
}

void sub_20A5489C8()
{
  JUMPOUT(0x20A548604);
}

void sub_20A5489D0()
{
  JUMPOUT(0x20A548604);
}

void sub_20A5489D8()
{
  JUMPOUT(0x20A548604);
}

void sub_20A5489E0()
{
  JUMPOUT(0x20A548604);
}

void sub_20A5489E8()
{
  JUMPOUT(0x20A548604);
}

void sub_20A5489F0()
{
  JUMPOUT(0x20A548604);
}

void sub_20A5489F8()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548A00()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548A08()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548A10()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548A18()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548A20()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548A28()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548A30()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548A38()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548A40()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548A48()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548A50()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548A58()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548A64()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548A6C()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548A74()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548A7C()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548A84()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548A8C()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548A94()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548A9C()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548AA4()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548AAC()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548AB4()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548ABC()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548AC4()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548ACC()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548AD4()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548ADC()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548AE4()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548AEC()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548AF4()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548AFC()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548B04()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548B0C()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548B14()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548B1C()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548B24()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548B2C()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548B34()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548B3C()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548B44()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548B4C()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548B54()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548B5C()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548B64()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548B6C()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548B74()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548B7C()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548B84()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548B8C()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548B94()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548B9C()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548BA4()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548BAC()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548BB4()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548BBC()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548BC4()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548BCC()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548BD4()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548BDC()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548BE4()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548BEC()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548BF4()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548BFC()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548C04()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548C0C()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548C14()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548C1C()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548C24()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548C2C()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548C34()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548C3C()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548C44()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548C4C()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548C54()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548C5C()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548C64()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548C6C()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548C74()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548C7C()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548C84()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548C8C()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548C94()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548C9C()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548CA4()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548CAC()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548CB4()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548CBC()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548CC4()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548CCC()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548CD4()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548CDC()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548CE4()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548CEC()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548CF4()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548CFC()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548D04()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548D0C()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548D14()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548D1C()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548D24()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548D2C()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548D34()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548D3C()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548D44()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548D4C()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548D54()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548D5C()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548D6C()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548D7C()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548D8C()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548D9C()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548DAC()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548DBC()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548DCC()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548DDC()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548DEC()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548DFC()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548E0C()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548E1C()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548E2C()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548E3C()
{
  JUMPOUT(0x20A548604);
}

void sub_20A548E48()
{
  JUMPOUT(0x20A548678);
}

void sub_20A548E50()
{
  JUMPOUT(0x20A548678);
}

void sub_20A548E58()
{
  JUMPOUT(0x20A548678);
}

void sub_20A548E60()
{
  JUMPOUT(0x20A548678);
}

void sub_20A548E68()
{
  JUMPOUT(0x20A548678);
}

void sub_20A548E70()
{
  JUMPOUT(0x20A548678);
}

void sub_20A548E78()
{
  JUMPOUT(0x20A548678);
}

void sub_20A548E80()
{
  JUMPOUT(0x20A548678);
}

void sub_20A548E88()
{
  JUMPOUT(0x20A548678);
}

void sub_20A548E90()
{
  JUMPOUT(0x20A548678);
}

void sub_20A548E98()
{
  JUMPOUT(0x20A548678);
}

void sub_20A548EA0()
{
  JUMPOUT(0x20A548678);
}

void sub_20A548EA8()
{
  JUMPOUT(0x20A548678);
}

void sub_20A548EB0()
{
  JUMPOUT(0x20A548678);
}

void sub_20A548EB8()
{
  JUMPOUT(0x20A548678);
}

void sub_20A548EC0()
{
  JUMPOUT(0x20A548678);
}

void sub_20A548EC8()
{
  JUMPOUT(0x20A548678);
}

void sub_20A548ED0()
{
  JUMPOUT(0x20A548678);
}

void sub_20A548ED8()
{
  JUMPOUT(0x20A548678);
}

void sub_20A548EE0()
{
  JUMPOUT(0x20A548678);
}

void sub_20A548EE8()
{
  JUMPOUT(0x20A548678);
}

void sub_20A548EF0()
{
  JUMPOUT(0x20A548678);
}

void sub_20A548EF8()
{
  JUMPOUT(0x20A548678);
}

void sub_20A548F00()
{
  JUMPOUT(0x20A548678);
}

void sub_20A548F08()
{
  JUMPOUT(0x20A548678);
}

void sub_20A548F10()
{
  JUMPOUT(0x20A548678);
}

void sub_20A548F18()
{
  JUMPOUT(0x20A548678);
}

void sub_20A548F20()
{
  JUMPOUT(0x20A548678);
}

void sub_20A548F28()
{
  JUMPOUT(0x20A548678);
}

void sub_20A548F30()
{
  JUMPOUT(0x20A548678);
}

void sub_20A548F38()
{
  JUMPOUT(0x20A548678);
}

void sub_20A548F40()
{
  JUMPOUT(0x20A548678);
}

void sub_20A548F48()
{
  JUMPOUT(0x20A548678);
}

void sub_20A548F50()
{
  JUMPOUT(0x20A548678);
}

void sub_20A548F58()
{
  JUMPOUT(0x20A548678);
}

void sub_20A548F60()
{
  JUMPOUT(0x20A548678);
}

void sub_20A548F68()
{
  JUMPOUT(0x20A548678);
}

void sub_20A548F70()
{
  JUMPOUT(0x20A548678);
}

void sub_20A548F78()
{
  JUMPOUT(0x20A548678);
}

void sub_20A548F80()
{
  JUMPOUT(0x20A548678);
}

void sub_20A548F88()
{
  JUMPOUT(0x20A548678);
}

void sub_20A548F90()
{
  JUMPOUT(0x20A548678);
}

void sub_20A548F98()
{
  JUMPOUT(0x20A548678);
}

void sub_20A548FA0()
{
  JUMPOUT(0x20A548678);
}

void sub_20A548FA8()
{
  JUMPOUT(0x20A548678);
}

void sub_20A548FB0()
{
  JUMPOUT(0x20A548678);
}

void sub_20A548FB8()
{
  JUMPOUT(0x20A548678);
}

void sub_20A548FC0()
{
  JUMPOUT(0x20A548678);
}

void sub_20A548FC8()
{
  JUMPOUT(0x20A548678);
}

void sub_20A548FD0()
{
  JUMPOUT(0x20A548678);
}

void sub_20A548FD8()
{
  JUMPOUT(0x20A548678);
}

void sub_20A548FE0()
{
  JUMPOUT(0x20A548678);
}

void sub_20A548FE8()
{
  JUMPOUT(0x20A548678);
}

void sub_20A548FF0()
{
  JUMPOUT(0x20A548678);
}

void sub_20A548FF8()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549000()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549008()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549010()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549018()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549020()
{
  JUMPOUT(0x20A548678);
}

void sub_20A54902C()
{
  JUMPOUT(0x20A548678);
}

void sub_20A54903C()
{
  JUMPOUT(0x20A548678);
}

void sub_20A54904C()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549054()
{
  JUMPOUT(0x20A548678);
}

void sub_20A54905C()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549064()
{
  JUMPOUT(0x20A548678);
}

void sub_20A54906C()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549074()
{
  JUMPOUT(0x20A548678);
}

void sub_20A54907C()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549084()
{
  JUMPOUT(0x20A548678);
}

void sub_20A54908C()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549094()
{
  JUMPOUT(0x20A548678);
}

void sub_20A54909C()
{
  JUMPOUT(0x20A548678);
}

void sub_20A5490A4()
{
  JUMPOUT(0x20A548678);
}

void sub_20A5490AC()
{
  JUMPOUT(0x20A548678);
}

void sub_20A5490B4()
{
  JUMPOUT(0x20A548678);
}

void sub_20A5490BC()
{
  JUMPOUT(0x20A548678);
}

void sub_20A5490C4()
{
  JUMPOUT(0x20A548678);
}

void sub_20A5490CC()
{
  JUMPOUT(0x20A548678);
}

void sub_20A5490D4()
{
  JUMPOUT(0x20A548678);
}

void sub_20A5490DC()
{
  JUMPOUT(0x20A548678);
}

void sub_20A5490E4()
{
  JUMPOUT(0x20A548678);
}

void sub_20A5490EC()
{
  JUMPOUT(0x20A548678);
}

void sub_20A5490F4()
{
  JUMPOUT(0x20A548678);
}

void sub_20A5490FC()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549104()
{
  JUMPOUT(0x20A548678);
}

void sub_20A54910C()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549114()
{
  JUMPOUT(0x20A548678);
}

void sub_20A54911C()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549124()
{
  JUMPOUT(0x20A548678);
}

void sub_20A54912C()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549134()
{
  JUMPOUT(0x20A548678);
}

void sub_20A54913C()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549144()
{
  JUMPOUT(0x20A548678);
}

void sub_20A54914C()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549154()
{
  JUMPOUT(0x20A548678);
}

void sub_20A54915C()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549168()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549170()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549178()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549180()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549188()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549190()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549198()
{
  JUMPOUT(0x20A548678);
}

void sub_20A5491A0()
{
  JUMPOUT(0x20A548678);
}

void sub_20A5491A8()
{
  JUMPOUT(0x20A548678);
}

void sub_20A5491B0()
{
  JUMPOUT(0x20A548678);
}

void sub_20A5491B8()
{
  JUMPOUT(0x20A548678);
}

void sub_20A5491C0()
{
  JUMPOUT(0x20A548678);
}

void sub_20A5491C8()
{
  JUMPOUT(0x20A548678);
}

void sub_20A5491D0()
{
  JUMPOUT(0x20A548678);
}

void sub_20A5491D8()
{
  JUMPOUT(0x20A548678);
}

void sub_20A5491E0()
{
  JUMPOUT(0x20A548678);
}

void sub_20A5491E8()
{
  JUMPOUT(0x20A548678);
}

void sub_20A5491F0()
{
  JUMPOUT(0x20A548678);
}

void sub_20A5491F8()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549200()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549208()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549210()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549218()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549220()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549228()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549230()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549238()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549240()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549248()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549250()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549258()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549260()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549268()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549270()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549278()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549280()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549288()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549290()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549298()
{
  JUMPOUT(0x20A548678);
}

void sub_20A5492A0()
{
  JUMPOUT(0x20A548678);
}

void sub_20A5492A8()
{
  JUMPOUT(0x20A548678);
}

void sub_20A5492B0()
{
  JUMPOUT(0x20A548678);
}

void sub_20A5492B8()
{
  JUMPOUT(0x20A548678);
}

void sub_20A5492C0()
{
  JUMPOUT(0x20A548678);
}

void sub_20A5492C8()
{
  JUMPOUT(0x20A548678);
}

void sub_20A5492D0()
{
  JUMPOUT(0x20A548678);
}

void sub_20A5492D8()
{
  JUMPOUT(0x20A548678);
}

void sub_20A5492E0()
{
  JUMPOUT(0x20A548678);
}

void sub_20A5492E8()
{
  JUMPOUT(0x20A548678);
}

void sub_20A5492F0()
{
  JUMPOUT(0x20A548678);
}

void sub_20A5492F8()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549300()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549308()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549310()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549318()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549320()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549328()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549330()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549338()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549340()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549348()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549350()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549358()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549360()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549368()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549370()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549378()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549380()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549388()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549390()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549398()
{
  JUMPOUT(0x20A548678);
}

void sub_20A5493A0()
{
  JUMPOUT(0x20A548678);
}

void sub_20A5493A8()
{
  JUMPOUT(0x20A548678);
}

void sub_20A5493B0()
{
  JUMPOUT(0x20A548678);
}

void sub_20A5493B8()
{
  JUMPOUT(0x20A548678);
}

void sub_20A5493C0()
{
  JUMPOUT(0x20A548678);
}

void sub_20A5493C8()
{
  JUMPOUT(0x20A548678);
}

void sub_20A5493D0()
{
  JUMPOUT(0x20A548678);
}

void sub_20A5493D8()
{
  JUMPOUT(0x20A548678);
}

void sub_20A5493E0()
{
  JUMPOUT(0x20A548678);
}

void sub_20A5493E8()
{
  JUMPOUT(0x20A548678);
}

void sub_20A5493F0()
{
  JUMPOUT(0x20A548678);
}

void sub_20A5493F8()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549400()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549408()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549410()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549418()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549420()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549428()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549430()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549438()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549440()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549448()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549450()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549458()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549460()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549470()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549480()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549490()
{
  JUMPOUT(0x20A548678);
}

void sub_20A5494A0()
{
  JUMPOUT(0x20A548678);
}

void sub_20A5494B0()
{
  JUMPOUT(0x20A548678);
}

void sub_20A5494C0()
{
  JUMPOUT(0x20A548678);
}

void sub_20A5494D0()
{
  JUMPOUT(0x20A548678);
}

void sub_20A5494E0()
{
  JUMPOUT(0x20A548678);
}

void sub_20A5494F0()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549500()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549510()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549520()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549530()
{
  JUMPOUT(0x20A548678);
}

void sub_20A549540()
{
  JUMPOUT(0x20A548678);
}

void sub_20A54954C()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549554()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A54955C()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549564()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A54956C()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549574()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A54957C()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549584()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A54958C()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549594()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A54959C()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A5495A4()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A5495AC()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A5495B4()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A5495BC()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A5495C4()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A5495CC()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A5495D4()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A5495DC()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A5495E4()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A5495EC()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A5495F4()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A5495FC()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549604()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A54960C()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549614()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A54961C()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549624()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A54962C()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549634()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A54963C()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549644()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A54964C()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549654()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A54965C()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549664()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A54966C()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549674()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A54967C()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549684()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A54968C()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549694()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A54969C()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A5496A4()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A5496AC()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A5496B4()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A5496BC()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A5496C4()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A5496CC()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A5496D4()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A5496DC()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A5496E4()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A5496EC()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A5496F4()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A5496FC()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549704()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A54970C()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549714()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A54971C()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549724()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549730()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549740()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549750()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549758()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549760()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549768()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549770()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549778()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549780()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549788()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549790()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549798()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A5497A0()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A5497A8()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A5497B0()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A5497B8()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A5497C0()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A5497C8()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A5497D0()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A5497D8()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A5497E0()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A5497E8()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A5497F0()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A5497F8()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549800()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549808()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549810()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549818()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549820()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549828()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549830()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549838()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549840()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549848()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549850()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549858()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549860()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A54986C()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549874()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A54987C()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549884()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A54988C()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549894()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A54989C()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A5498A4()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A5498AC()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A5498B4()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A5498BC()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A5498C4()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A5498CC()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A5498D4()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A5498DC()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A5498E4()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A5498EC()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A5498F4()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A5498FC()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549904()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A54990C()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549914()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A54991C()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549924()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A54992C()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549934()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A54993C()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549944()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A54994C()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549954()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A54995C()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549964()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A54996C()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549974()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A54997C()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549984()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A54998C()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549994()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A54999C()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A5499A4()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A5499AC()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A5499B4()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A5499BC()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A5499C4()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A5499CC()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A5499D4()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A5499DC()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A5499E4()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A5499EC()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A5499F4()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A5499FC()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549A04()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549A0C()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549A14()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549A1C()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549A24()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549A2C()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549A34()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549A3C()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549A44()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549A4C()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549A54()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549A5C()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549A64()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549A6C()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549A74()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549A7C()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549A84()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549A8C()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549A94()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549A9C()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549AA4()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549AAC()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549AB4()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549ABC()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549AC4()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549ACC()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549AD4()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549ADC()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549AE4()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549AEC()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549AF4()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549AFC()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549B04()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549B0C()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549B14()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549B1C()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549B24()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549B2C()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549B34()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549B3C()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549B44()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549B4C()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549B54()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549B5C()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549B64()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549B74()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549B84()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549B94()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549BA4()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549BB4()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549BC4()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549BD4()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549BE4()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549BF4()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549C04()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549C14()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549C24()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549C34()
{
  JUMPOUT(0x20A5486F4);
}

void sub_20A549C44()
{
  JUMPOUT(0x20A5486F4);
}

uint64_t sub_20A549C50(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  int v28;
  char v29;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FBFC8);
  v23 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v8 = *((_BYTE *)v1 + 8);
  v9 = *((_BYTE *)v1 + 9);
  v10 = v1[2];
  v21 = v1[3];
  v22 = v10;
  v28 = *((unsigned __int8 *)v1 + 32);
  v11 = v1[5];
  v19 = v1[6];
  v20 = v11;
  HIDWORD(v18) = *((unsigned __int8 *)v1 + 56);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A5983B0();
  v12 = v3;
  sub_20A5B92FC();
  v25 = v7;
  LOBYTE(v26) = v8;
  BYTE1(v26) = v9;
  v29 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FBFB8);
  sub_20A44D20C(&qword_2545FBFD0, &qword_2545FBFB8, (uint64_t)&unk_20A5C2080);
  v13 = v24;
  sub_20A5B9140();
  if (v13)
    return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v6, v3);
  v16 = v19;
  v15 = v20;
  v17 = v23;
  v25 = v22;
  v26 = v21;
  v27 = v28;
  v29 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FBF58);
  sub_20A44D20C(&qword_2545FBF70, &qword_2545FBF58, (uint64_t)&unk_20A5C2080);
  sub_20A5B9140();
  v25 = v15;
  v26 = v16;
  v27 = BYTE4(v18);
  v29 = 2;
  sub_20A5B9140();
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v6, v12);
}

uint64_t sub_20A549E7C()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(unsigned __int8 *)(v0 + 8);
  v2 = *(unsigned __int8 *)(v0 + 9);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(unsigned __int8 *)(v0 + 32);
  v5 = *(_QWORD *)(v0 + 48);
  v6 = *(unsigned __int8 *)(v0 + 56);
  sub_20A5B929C();
  sub_20A5B92B4();
  if (v1 != 1)
    sub_20A5B92C0();
  if ((v2 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  sub_20A5B92A8();
  sub_20A5B92B4();
  if (v3)
  {
    swift_bridgeObjectRetain();
    sub_20A5B8978();
  }
  if ((v4 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  sub_20A5B92A8();
  swift_bridgeObjectRelease();
  sub_20A5B92B4();
  if (v5)
  {
    swift_bridgeObjectRetain();
    sub_20A5B8978();
  }
  if ((v6 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  sub_20A5B92A8();
  swift_bridgeObjectRelease();
  return sub_20A5B92CC();
}

void sub_20A54A06C()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54A074()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A07C()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A084()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A08C()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A094()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A09C()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A0A4()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A0AC()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A0B4()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A0BC()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A0C4()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A0CC()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A0D4()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A0DC()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A0E4()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A0EC()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A0F4()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A0FC()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A104()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A10C()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A114()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A11C()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A124()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A12C()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A134()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A13C()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A144()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A14C()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A154()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A15C()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A164()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A16C()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A174()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A17C()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A184()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A18C()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A194()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A19C()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A1A4()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A1AC()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A1B4()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A1BC()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A1C4()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A1CC()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A1D4()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A1DC()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A1E4()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A1EC()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A1F4()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A1FC()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A204()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A20C()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A214()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A21C()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A224()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A22C()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A234()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A23C()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A244()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A24C()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A258()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A268()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A278()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A280()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A288()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A290()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A298()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A2A0()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A2A8()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A2B0()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A2B8()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A2C0()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A2C8()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A2D0()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A2D8()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A2E0()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A2E8()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A2F0()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A2F8()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A300()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A308()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A310()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A318()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A320()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A328()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A330()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A338()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A340()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A348()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A350()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A358()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A360()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A368()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A370()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A378()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A380()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A388()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A394()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A39C()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A3A4()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A3AC()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A3B4()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A3BC()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A3C4()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A3CC()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A3D4()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A3DC()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A3E4()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A3EC()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A3F4()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A3FC()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A404()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A40C()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A414()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A41C()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A424()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A42C()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A434()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A43C()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A444()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A44C()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A454()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A45C()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A464()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A46C()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A474()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A47C()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A484()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A48C()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A494()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A49C()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A4A4()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A4AC()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A4B4()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A4BC()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A4C4()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A4CC()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A4D4()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A4DC()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A4E4()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A4EC()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A4F4()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A4FC()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A504()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A50C()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A514()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A51C()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A524()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A52C()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A534()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A53C()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A544()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A54C()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A554()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A55C()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A564()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A56C()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A574()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A57C()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A584()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A58C()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A594()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A59C()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A5A4()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A5AC()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A5B4()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A5BC()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A5C4()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A5CC()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A5D4()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A5DC()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A5E4()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A5EC()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A5F4()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A5FC()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A604()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A60C()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A614()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A61C()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A624()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A62C()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A634()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A63C()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A644()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A64C()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A654()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A65C()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A664()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A66C()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A674()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A67C()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A684()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A68C()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A69C()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A6AC()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A6BC()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A6CC()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A6DC()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A6EC()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A6FC()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A70C()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A71C()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A72C()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A73C()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A74C()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A75C()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A76C()
{
  JUMPOUT(0x20A549F04);
}

void sub_20A54A778()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A780()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A788()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A790()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A798()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A7A0()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A7A8()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A7B0()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A7B8()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A7C0()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A7C8()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A7D0()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A7D8()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A7E0()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A7E8()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A7F0()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A7F8()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A800()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A808()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A810()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A818()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A820()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A828()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A830()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A838()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A840()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A848()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A850()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A858()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A860()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A868()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A870()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A878()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A880()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A888()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A890()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A898()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A8A0()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A8A8()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A8B0()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A8B8()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A8C0()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A8C8()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A8D0()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A8D8()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A8E0()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A8E8()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A8F0()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A8F8()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A900()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A908()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A910()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A918()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A920()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A928()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A930()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A938()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A940()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A948()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A950()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A95C()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A96C()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A97C()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A984()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A98C()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A994()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A99C()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A9A4()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A9AC()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A9B4()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A9BC()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A9C4()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A9CC()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A9D4()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A9DC()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A9E4()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A9EC()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A9F4()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54A9FC()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AA04()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AA0C()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AA14()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AA1C()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AA24()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AA2C()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AA34()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AA3C()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AA44()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AA4C()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AA54()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AA5C()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AA64()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AA6C()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AA74()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AA7C()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AA84()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AA8C()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AA98()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AAA0()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AAA8()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AAB0()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AAB8()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AAC0()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AAC8()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AAD0()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AAD8()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AAE0()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AAE8()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AAF0()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AAF8()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AB00()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AB08()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AB10()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AB18()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AB20()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AB28()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AB30()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AB38()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AB40()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AB48()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AB50()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AB58()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AB60()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AB68()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AB70()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AB78()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AB80()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AB88()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AB90()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AB98()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54ABA0()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54ABA8()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54ABB0()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54ABB8()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54ABC0()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54ABC8()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54ABD0()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54ABD8()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54ABE0()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54ABE8()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54ABF0()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54ABF8()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AC00()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AC08()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AC10()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AC18()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AC20()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AC28()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AC30()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AC38()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AC40()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AC48()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AC50()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AC58()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AC60()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AC68()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AC70()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AC78()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AC80()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AC88()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AC90()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AC98()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54ACA0()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54ACA8()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54ACB0()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54ACB8()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54ACC0()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54ACC8()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54ACD0()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54ACD8()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54ACE0()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54ACE8()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54ACF0()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54ACF8()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AD00()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AD08()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AD10()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AD18()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AD20()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AD28()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AD30()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AD38()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AD40()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AD48()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AD50()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AD58()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AD60()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AD68()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AD70()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AD78()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AD80()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AD88()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AD90()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54ADA0()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54ADB0()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54ADC0()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54ADD0()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54ADE0()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54ADF0()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AE00()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AE10()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AE20()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AE30()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AE40()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AE50()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AE60()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AE70()
{
  JUMPOUT(0x20A549F84);
}

void sub_20A54AE7C()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54AE84()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54AE8C()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54AE94()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54AE9C()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54AEA4()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54AEAC()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54AEB4()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54AEBC()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54AEC4()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54AECC()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54AED4()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54AEDC()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54AEE4()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54AEEC()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54AEF4()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54AEFC()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54AF04()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54AF0C()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54AF14()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54AF1C()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54AF24()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54AF2C()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54AF34()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54AF3C()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54AF44()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54AF4C()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54AF54()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54AF5C()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54AF64()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54AF6C()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54AF74()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54AF7C()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54AF84()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54AF8C()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54AF94()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54AF9C()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54AFA4()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54AFAC()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54AFB4()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54AFBC()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54AFC4()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54AFCC()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54AFD4()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54AFDC()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54AFE4()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54AFEC()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54AFF4()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54AFFC()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B004()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B00C()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B014()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B01C()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B024()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B02C()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B034()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B03C()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B044()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B04C()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B054()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B060()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B070()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B080()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B088()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B090()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B098()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B0A0()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B0A8()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B0B0()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B0B8()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B0C0()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B0C8()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B0D0()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B0D8()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B0E0()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B0E8()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B0F0()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B0F8()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B100()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B108()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B110()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B118()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B120()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B128()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B130()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B138()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B140()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B148()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B150()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B158()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B160()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B168()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B170()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B178()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B180()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B188()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B190()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B19C()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B1A4()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B1AC()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B1B4()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B1BC()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B1C4()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B1CC()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B1D4()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B1DC()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B1E4()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B1EC()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B1F4()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B1FC()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B204()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B20C()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B214()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B21C()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B224()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B22C()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B234()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B23C()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B244()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B24C()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B254()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B25C()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B264()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B26C()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B274()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B27C()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B284()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B28C()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B294()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B29C()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B2A4()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B2AC()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B2B4()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B2BC()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B2C4()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B2CC()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B2D4()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B2DC()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B2E4()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B2EC()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B2F4()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B2FC()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B304()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B30C()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B314()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B31C()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B324()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B32C()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B334()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B33C()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B344()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B34C()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B354()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B35C()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B364()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B36C()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B374()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B37C()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B384()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B38C()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B394()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B39C()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B3A4()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B3AC()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B3B4()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B3BC()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B3C4()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B3CC()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B3D4()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B3DC()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B3E4()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B3EC()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B3F4()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B3FC()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B404()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B40C()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B414()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B41C()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B424()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B42C()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B434()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B43C()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B444()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B44C()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B454()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B45C()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B464()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B46C()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B474()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B47C()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B484()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B48C()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B494()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B4A4()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B4B4()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B4C4()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B4D4()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B4E4()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B4F4()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B504()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B514()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B524()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B534()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B544()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B554()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B564()
{
  JUMPOUT(0x20A54A00CLL);
}

void sub_20A54B574()
{
  JUMPOUT(0x20A54A00CLL);
}

uint64_t sub_20A54B580@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  int v24;
  char v25;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FBFA8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A5983B0();
  sub_20A5B92F0();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545FBFB8);
    v25 = 0;
    sub_20A44D20C(&qword_2545FBFC0, &qword_2545FBFB8, (uint64_t)&unk_20A5C20A8);
    sub_20A5B90A4();
    v19 = v21;
    v24 = v22;
    v10 = BYTE1(v22);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545FBF58);
    v25 = 1;
    v20 = sub_20A44D20C(&qword_2545FBF60, &qword_2545FBF58, (uint64_t)&unk_20A5C20A8);
    sub_20A5B90A4();
    v18 = v10;
    v12 = v22;
    v17 = v21;
    HIDWORD(v16) = v23;
    v25 = 2;
    sub_20A5B90A4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    v14 = v21;
    v13 = v22;
    v15 = v23;
    swift_bridgeObjectRelease();
    *(_QWORD *)a2 = v19;
    *(_BYTE *)(a2 + 8) = v24;
    *(_BYTE *)(a2 + 9) = v18;
    *(_QWORD *)(a2 + 16) = v17;
    *(_QWORD *)(a2 + 24) = v12;
    *(_BYTE *)(a2 + 32) = BYTE4(v16);
    *(_QWORD *)(a2 + 40) = v14;
    *(_QWORD *)(a2 + 48) = v13;
    *(_BYTE *)(a2 + 56) = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_20A54B808()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 1684628851;
  if (*v0 != 1)
    v1 = 0x6F6973726556736FLL;
  if (*v0)
    return v1;
  else
    return 1684628325;
}

uint64_t sub_20A54B854@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A598D20(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A54B878()
{
  sub_20A5983B0();
  return sub_20A5B9314();
}

uint64_t sub_20A54B8A0()
{
  sub_20A5983B0();
  return sub_20A5B9320();
}

unsigned __int8 *sub_20A54B8C8@<X0>(unsigned __int8 *result@<X0>, char *a2@<X8>)
{
  _BYTE *v2;
  char v3;
  int v4;

  if ((result[16] & 1) != 0)
  {
    *a2 = -42;
  }
  else
  {
    v3 = v2[9];
    v4 = *result;
    if (v4 != 4)
      v3 = -42;
    if (v4 == 5)
      v3 = v2[56];
    if (v4 == 1)
      v3 = v2[32];
    *a2 = v3;
  }
  return result;
}

uint64_t sub_20A54B914@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A54B580(a1, a2);
}

uint64_t sub_20A54B928(_QWORD *a1)
{
  return sub_20A549C50(a1);
}

uint64_t sub_20A54B944()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(unsigned __int8 *)(v0 + 8);
  v2 = *(unsigned __int8 *)(v0 + 9);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(unsigned __int8 *)(v0 + 32);
  v5 = *(_QWORD *)(v0 + 48);
  v6 = *(unsigned __int8 *)(v0 + 56);
  sub_20A5B929C();
  sub_20A5B92B4();
  if (v1 != 1)
    sub_20A5B92C0();
  if ((v2 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  sub_20A5B92A8();
  sub_20A5B92B4();
  if (v3)
  {
    swift_bridgeObjectRetain();
    sub_20A5B8978();
  }
  if ((v4 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  sub_20A5B92A8();
  swift_bridgeObjectRelease();
  sub_20A5B92B4();
  if (v5)
  {
    swift_bridgeObjectRetain();
    sub_20A5B8978();
  }
  if ((v6 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  sub_20A5B92A8();
  swift_bridgeObjectRelease();
  return sub_20A5B92CC();
}

void sub_20A54BB30()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54BB38()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BB40()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BB48()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BB50()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BB58()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BB60()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BB68()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BB70()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BB78()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BB80()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BB88()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BB90()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BB98()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BBA0()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BBA8()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BBB0()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BBB8()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BBC0()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BBC8()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BBD0()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BBD8()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BBE0()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BBE8()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BBF0()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BBF8()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BC00()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BC08()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BC10()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BC18()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BC20()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BC28()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BC30()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BC38()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BC40()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BC48()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BC50()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BC58()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BC60()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BC68()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BC70()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BC78()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BC80()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BC88()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BC90()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BC98()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BCA0()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BCA8()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BCB0()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BCB8()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BCC0()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BCC8()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BCD0()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BCD8()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BCE0()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BCE8()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BCF0()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BCF8()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BD00()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BD08()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BD10()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BD1C()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BD2C()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BD3C()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BD44()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BD4C()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BD54()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BD5C()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BD64()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BD6C()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BD74()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BD7C()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BD84()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BD8C()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BD94()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BD9C()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BDA4()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BDAC()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BDB4()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BDBC()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BDC4()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BDCC()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BDD4()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BDDC()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BDE4()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BDEC()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BDF4()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BDFC()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BE04()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BE0C()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BE14()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BE1C()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BE24()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BE2C()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BE34()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BE3C()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BE44()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BE4C()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BE58()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BE60()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BE68()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BE70()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BE78()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BE80()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BE88()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BE90()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BE98()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BEA0()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BEA8()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BEB0()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BEB8()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BEC0()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BEC8()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BED0()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BED8()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BEE0()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BEE8()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BEF0()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BEF8()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BF00()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BF08()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BF10()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BF18()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BF20()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BF28()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BF30()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BF38()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BF40()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BF48()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BF50()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BF58()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BF60()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BF68()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BF70()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BF78()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BF80()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BF88()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BF90()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BF98()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BFA0()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BFA8()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BFB0()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BFB8()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BFC0()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BFC8()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BFD0()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BFD8()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BFE0()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BFE8()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BFF0()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54BFF8()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54C000()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54C008()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54C010()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54C018()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54C020()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54C028()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54C030()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54C038()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54C040()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54C048()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54C050()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54C058()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54C060()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54C068()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54C070()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54C078()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54C080()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54C088()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54C090()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54C098()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54C0A0()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54C0A8()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54C0B0()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54C0B8()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54C0C0()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54C0C8()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54C0D0()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54C0D8()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54C0E0()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54C0E8()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54C0F0()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54C0F8()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54C100()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54C108()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54C110()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54C118()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54C120()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54C128()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54C130()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54C138()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54C140()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54C148()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54C150()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54C160()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54C170()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54C180()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54C190()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54C1A0()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54C1B0()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54C1C0()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54C1D0()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54C1E0()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54C1F0()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54C200()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54C210()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54C220()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54C230()
{
  JUMPOUT(0x20A54B9C8);
}

void sub_20A54C23C()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C244()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C24C()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C254()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C25C()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C264()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C26C()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C274()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C27C()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C284()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C28C()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C294()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C29C()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C2A4()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C2AC()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C2B4()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C2BC()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C2C4()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C2CC()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C2D4()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C2DC()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C2E4()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C2EC()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C2F4()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C2FC()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C304()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C30C()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C314()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C31C()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C324()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C32C()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C334()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C33C()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C344()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C34C()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C354()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C35C()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C364()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C36C()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C374()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C37C()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C384()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C38C()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C394()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C39C()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C3A4()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C3AC()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C3B4()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C3BC()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C3C4()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C3CC()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C3D4()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C3DC()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C3E4()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C3EC()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C3F4()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C3FC()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C404()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C40C()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C414()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C420()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C430()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C440()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C448()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C450()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C458()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C460()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C468()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C470()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C478()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C480()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C488()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C490()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C498()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C4A0()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C4A8()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C4B0()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C4B8()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C4C0()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C4C8()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C4D0()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C4D8()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C4E0()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C4E8()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C4F0()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C4F8()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C500()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C508()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C510()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C518()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C520()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C528()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C530()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C538()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C540()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C548()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C550()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C55C()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C564()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C56C()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C574()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C57C()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C584()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C58C()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C594()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C59C()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C5A4()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C5AC()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C5B4()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C5BC()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C5C4()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C5CC()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C5D4()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C5DC()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C5E4()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C5EC()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C5F4()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C5FC()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C604()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C60C()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C614()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C61C()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C624()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C62C()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C634()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C63C()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C644()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C64C()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C654()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C65C()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C664()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C66C()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C674()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C67C()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C684()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C68C()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C694()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C69C()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C6A4()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C6AC()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C6B4()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C6BC()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C6C4()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C6CC()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C6D4()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C6DC()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C6E4()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C6EC()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C6F4()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C6FC()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C704()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C70C()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C714()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C71C()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C724()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C72C()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C734()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C73C()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C744()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C74C()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C754()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C75C()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C764()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C76C()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C774()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C77C()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C784()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C78C()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C794()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C79C()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C7A4()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C7AC()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C7B4()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C7BC()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C7C4()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C7CC()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C7D4()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C7DC()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C7E4()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C7EC()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C7F4()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C7FC()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C804()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C80C()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C814()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C81C()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C824()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C82C()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C834()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C83C()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C844()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C84C()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C854()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C864()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C874()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C884()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C894()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C8A4()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C8B4()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C8C4()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C8D4()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C8E4()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C8F4()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C904()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C914()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C924()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C934()
{
  JUMPOUT(0x20A54BA48);
}

void sub_20A54C940()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54C948()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54C950()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54C958()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54C960()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54C968()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54C970()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54C978()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54C980()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54C988()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54C990()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54C998()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54C9A0()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54C9A8()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54C9B0()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54C9B8()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54C9C0()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54C9C8()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54C9D0()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54C9D8()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54C9E0()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54C9E8()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54C9F0()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54C9F8()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CA00()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CA08()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CA10()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CA18()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CA20()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CA28()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CA30()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CA38()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CA40()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CA48()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CA50()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CA58()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CA60()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CA68()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CA70()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CA78()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CA80()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CA88()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CA90()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CA98()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CAA0()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CAA8()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CAB0()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CAB8()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CAC0()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CAC8()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CAD0()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CAD8()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CAE0()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CAE8()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CAF0()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CAF8()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CB00()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CB08()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CB10()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CB18()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CB24()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CB34()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CB44()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CB4C()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CB54()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CB5C()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CB64()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CB6C()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CB74()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CB7C()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CB84()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CB8C()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CB94()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CB9C()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CBA4()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CBAC()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CBB4()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CBBC()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CBC4()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CBCC()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CBD4()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CBDC()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CBE4()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CBEC()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CBF4()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CBFC()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CC04()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CC0C()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CC14()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CC1C()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CC24()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CC2C()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CC34()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CC3C()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CC44()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CC4C()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CC54()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CC60()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CC68()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CC70()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CC78()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CC80()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CC88()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CC90()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CC98()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CCA0()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CCA8()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CCB0()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CCB8()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CCC0()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CCC8()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CCD0()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CCD8()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CCE0()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CCE8()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CCF0()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CCF8()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CD00()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CD08()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CD10()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CD18()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CD20()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CD28()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CD30()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CD38()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CD40()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CD48()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CD50()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CD58()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CD60()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CD68()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CD70()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CD78()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CD80()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CD88()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CD90()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CD98()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CDA0()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CDA8()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CDB0()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CDB8()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CDC0()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CDC8()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CDD0()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CDD8()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CDE0()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CDE8()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CDF0()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CDF8()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CE00()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CE08()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CE10()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CE18()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CE20()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CE28()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CE30()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CE38()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CE40()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CE48()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CE50()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CE58()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CE60()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CE68()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CE70()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CE78()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CE80()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CE88()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CE90()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CE98()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CEA0()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CEA8()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CEB0()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CEB8()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CEC0()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CEC8()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CED0()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CED8()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CEE0()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CEE8()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CEF0()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CEF8()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CF00()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CF08()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CF10()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CF18()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CF20()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CF28()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CF30()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CF38()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CF40()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CF48()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CF50()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CF58()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CF68()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CF78()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CF88()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CF98()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CFA8()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CFB8()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CFC8()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CFD8()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CFE8()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54CFF8()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54D008()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54D018()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54D028()
{
  JUMPOUT(0x20A54BAD0);
}

void sub_20A54D038()
{
  JUMPOUT(0x20A54BAD0);
}

unint64_t sub_20A54D048(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  unint64_t v5;
  uint64_t inited;
  uint64_t v8;

  if ((*(_BYTE *)(a1 + 32) & 1) != 0 || *(_BYTE *)(a1 + 16) != 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_2545FA940);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_20A5BA9A0;
    *(_QWORD *)(inited + 32) = 0x646F43726F727265;
    *(_QWORD *)(inited + 40) = 0xE900000000000065;
    v8 = MEMORY[0x24BEE1778];
    *(_QWORD *)(inited + 72) = MEMORY[0x24BEE1768];
    *(_QWORD *)(inited + 80) = v8;
    *(_QWORD *)(inited + 48) = -5;
    return sub_20A469B08(inited);
  }
  else
  {
    v2 = *(_QWORD *)v1;
    v3 = *(_QWORD *)(v1 + 8);
    v4 = *(_BYTE *)(v1 + 16);
    swift_bridgeObjectRetain();
    v5 = sub_20A535E34(v2, v3, v4);
    swift_bridgeObjectRelease();
    return v5;
  }
}

uint64_t sub_20A54D114(_QWORD *a1)
{
  return sub_20A54FB40(a1, &qword_2545FBFE8, (void (*)(void))sub_20A5983F4);
}

uint64_t sub_20A54D144@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A54FCAC(a1, &qword_2545FBFD8, (void (*)(void))sub_20A5983F4, a2);
}

uint64_t sub_20A54D170()
{
  return 1684628851;
}

uint64_t sub_20A54D180@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 1684628851 && a2 == 0xE400000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_20A5B91AC();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_20A54D204()
{
  sub_20A5983F4();
  return sub_20A5B9314();
}

uint64_t sub_20A54D22C()
{
  sub_20A5983F4();
  return sub_20A5B9320();
}

_BYTE *sub_20A54D254@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  if ((result[16] & 1) != 0 || *result != 1)
    *a2 = -42;
  else
    *a2 = *(_BYTE *)(v2 + 16);
  return result;
}

uint64_t sub_20A54D284()
{
  return sub_20A553A40();
}

uint64_t sub_20A54D2A0(uint64_t *a1, uint64_t a2)
{
  return sub_20A584678(a1, a2) & 1;
}

unint64_t sub_20A54D2B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t inited;
  uint64_t v3;
  unint64_t result;
  uint64_t v5;
  uint64_t v6;
  char v7;
  unint64_t v8;

  if ((*(_BYTE *)(a1 + 32) & 1) != 0)
  {
LABEL_2:
    __swift_instantiateConcreteTypeFromMangledName(qword_2545FA940);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_20A5BA9A0;
    *(_QWORD *)(inited + 32) = 0x646F43726F727265;
    *(_QWORD *)(inited + 40) = 0xE900000000000065;
    v3 = MEMORY[0x24BEE1778];
    *(_QWORD *)(inited + 72) = MEMORY[0x24BEE1768];
    *(_QWORD *)(inited + 80) = v3;
    *(_QWORD *)(inited + 48) = -5;
    return sub_20A469B08(inited);
  }
  else
  {
    switch(*(_BYTE *)(a1 + 16))
    {
      case 6:
        v5 = *(_QWORD *)v1;
        v6 = *(_QWORD *)(v1 + 8);
        v7 = *(_BYTE *)(v1 + 16);
        goto LABEL_7;
      case 8:
        v5 = *(_QWORD *)(v1 + 24);
        v6 = *(_QWORD *)(v1 + 32);
        v7 = *(_BYTE *)(v1 + 40);
        goto LABEL_7;
      case 9:
        v5 = *(_QWORD *)(v1 + 48);
        v6 = *(_QWORD *)(v1 + 56);
        v7 = *(_BYTE *)(v1 + 64);
LABEL_7:
        swift_bridgeObjectRetain();
        v8 = sub_20A535E34(v5, v6, v7);
        swift_bridgeObjectRelease();
        result = v8;
        break;
      case 0xE:
        result = sub_20A536DEC(*(unsigned __int8 *)(v1 + 65) | (unsigned __int16)(*(unsigned __int8 *)(v1 + 66) << 8));
        break;
      default:
        goto LABEL_2;
    }
  }
  return result;
}

uint64_t sub_20A54D3D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v8;

  v1 = *(unsigned __int8 *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(unsigned __int8 *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 56);
  v5 = *(unsigned __int8 *)(v0 + 64);
  v6 = *(unsigned __int8 *)(v0 + 65);
  v8 = *(unsigned __int8 *)(v0 + 66);
  if (*(_QWORD *)(v0 + 8))
  {
    sub_20A5B92B4();
    swift_bridgeObjectRetain();
    sub_20A5B8978();
  }
  else
  {
    sub_20A5B92B4();
  }
  if ((v1 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  sub_20A5B92A8();
  swift_bridgeObjectRelease();
  sub_20A5B92B4();
  if (v2)
  {
    swift_bridgeObjectRetain();
    sub_20A5B8978();
  }
  if ((v3 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  sub_20A5B92A8();
  swift_bridgeObjectRelease();
  sub_20A5B92B4();
  if (v4)
  {
    swift_bridgeObjectRetain();
    sub_20A5B8978();
  }
  if ((v5 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  sub_20A5B92A8();
  swift_bridgeObjectRelease();
  if (v6 != 2)
    sub_20A5B92B4();
  sub_20A5B92B4();
  if ((v8 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  return sub_20A5B92A8();
}

void sub_20A54D620()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54D628()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D630()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D638()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D640()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D648()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D650()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D658()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D660()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D668()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D670()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D678()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D680()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D688()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D690()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D698()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D6A0()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D6A8()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D6B0()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D6B8()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D6C0()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D6C8()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D6D0()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D6D8()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D6E0()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D6E8()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D6F0()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D6F8()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D700()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D708()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D710()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D718()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D720()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D728()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D730()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D738()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D740()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D748()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D750()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D758()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D760()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D768()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D770()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D778()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D780()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D788()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D790()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D798()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D7A0()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D7A8()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D7B0()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D7B8()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D7C0()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D7C8()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D7D0()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D7D8()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D7E0()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D7E8()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D7F0()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D7F8()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D800()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D80C()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D81C()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D82C()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D834()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D83C()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D844()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D84C()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D854()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D85C()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D864()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D86C()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D874()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D87C()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D884()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D88C()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D894()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D89C()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D8A4()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D8AC()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D8B4()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D8BC()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D8C4()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D8CC()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D8D4()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D8DC()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D8E4()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D8EC()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D8F4()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D8FC()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D904()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D90C()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D914()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D91C()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D924()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D92C()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D934()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D93C()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D948()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D950()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D958()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D960()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D968()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D970()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D978()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D980()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D988()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D990()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D998()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D9A0()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D9A8()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D9B0()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D9B8()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D9C0()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D9C8()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D9D0()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D9D8()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D9E0()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D9E8()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D9F0()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54D9F8()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DA00()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DA08()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DA10()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DA18()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DA20()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DA28()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DA30()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DA38()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DA40()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DA48()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DA50()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DA58()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DA60()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DA68()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DA70()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DA78()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DA80()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DA88()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DA90()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DA98()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DAA0()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DAA8()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DAB0()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DAB8()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DAC0()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DAC8()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DAD0()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DAD8()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DAE0()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DAE8()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DAF0()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DAF8()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DB00()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DB08()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DB10()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DB18()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DB20()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DB28()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DB30()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DB38()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DB40()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DB48()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DB50()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DB58()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DB60()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DB68()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DB70()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DB78()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DB80()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DB88()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DB90()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DB98()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DBA0()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DBA8()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DBB0()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DBB8()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DBC0()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DBC8()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DBD0()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DBD8()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DBE0()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DBE8()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DBF0()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DBF8()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DC00()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DC08()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DC10()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DC18()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DC20()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DC28()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DC30()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DC38()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DC40()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DC50()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DC60()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DC70()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DC80()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DC90()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DCA0()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DCB0()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DCC0()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DCD0()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DCE0()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DCF0()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DD00()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DD10()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DD20()
{
  JUMPOUT(0x20A54D46CLL);
}

void sub_20A54DD2C()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DD34()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DD3C()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DD44()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DD4C()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DD54()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DD5C()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DD64()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DD6C()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DD74()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DD7C()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DD84()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DD8C()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DD94()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DD9C()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DDA4()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DDAC()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DDB4()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DDBC()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DDC4()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DDCC()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DDD4()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DDDC()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DDE4()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DDEC()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DDF4()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DDFC()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DE04()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DE0C()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DE14()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DE1C()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DE24()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DE2C()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DE34()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DE3C()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DE44()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DE4C()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DE54()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DE5C()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DE64()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DE6C()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DE74()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DE7C()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DE84()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DE8C()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DE94()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DE9C()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DEA4()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DEAC()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DEB4()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DEBC()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DEC4()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DECC()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DED4()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DEDC()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DEE4()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DEEC()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DEF4()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DEFC()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DF04()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DF10()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DF20()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DF30()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DF38()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DF40()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DF48()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DF50()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DF58()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DF60()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DF68()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DF70()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DF78()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DF80()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DF88()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DF90()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DF98()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DFA0()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DFA8()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DFB0()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DFB8()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DFC0()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DFC8()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DFD0()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DFD8()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DFE0()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DFE8()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DFF0()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54DFF8()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E000()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E008()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E010()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E018()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E020()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E028()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E030()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E038()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E040()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E04C()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E054()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E05C()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E064()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E06C()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E074()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E07C()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E084()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E08C()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E094()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E09C()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E0A4()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E0AC()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E0B4()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E0BC()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E0C4()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E0CC()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E0D4()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E0DC()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E0E4()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E0EC()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E0F4()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E0FC()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E104()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E10C()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E114()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E11C()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E124()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E12C()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E134()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E13C()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E144()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E14C()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E154()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E15C()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E164()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E16C()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E174()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E17C()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E184()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E18C()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E194()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E19C()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E1A4()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E1AC()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E1B4()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E1BC()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E1C4()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E1CC()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E1D4()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E1DC()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E1E4()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E1EC()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E1F4()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E1FC()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E204()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E20C()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E214()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E21C()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E224()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E22C()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E234()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E23C()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E244()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E24C()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E254()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E25C()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E264()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E26C()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E274()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E27C()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E284()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E28C()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E294()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E29C()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E2A4()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E2AC()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E2B4()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E2BC()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E2C4()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E2CC()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E2D4()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E2DC()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E2E4()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E2EC()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E2F4()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E2FC()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E304()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E30C()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E314()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E31C()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E324()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E32C()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E334()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E33C()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E344()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E354()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E364()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E374()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E384()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E394()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E3A4()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E3B4()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E3C4()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E3D4()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E3E4()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E3F4()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E404()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E414()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E424()
{
  JUMPOUT(0x20A54D4E8);
}

void sub_20A54E430()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E438()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E440()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E448()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E450()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E458()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E460()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E468()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E470()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E478()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E480()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E488()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E490()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E498()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E4A0()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E4A8()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E4B0()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E4B8()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E4C0()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E4C8()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E4D0()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E4D8()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E4E0()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E4E8()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E4F0()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E4F8()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E500()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E508()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E510()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E518()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E520()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E528()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E530()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E538()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E540()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E548()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E550()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E558()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E560()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E568()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E570()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E578()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E580()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E588()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E590()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E598()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E5A0()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E5A8()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E5B0()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E5B8()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E5C0()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E5C8()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E5D0()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E5D8()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E5E0()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E5E8()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E5F0()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E5F8()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E600()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E608()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E614()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E624()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E634()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E63C()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E644()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E64C()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E654()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E65C()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E664()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E66C()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E674()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E67C()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E684()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E68C()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E694()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E69C()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E6A4()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E6AC()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E6B4()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E6BC()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E6C4()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E6CC()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E6D4()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E6DC()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E6E4()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E6EC()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E6F4()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E6FC()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E704()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E70C()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E714()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E71C()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E724()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E72C()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E734()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E73C()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E744()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E750()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E758()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E760()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E768()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E770()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E778()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E780()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E788()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E790()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E798()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E7A0()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E7A8()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E7B0()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E7B8()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E7C0()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E7C8()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E7D0()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E7D8()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E7E0()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E7E8()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E7F0()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E7F8()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E800()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E808()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E810()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E818()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E820()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E828()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E830()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E838()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E840()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E848()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E850()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E858()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E860()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E868()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E870()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E878()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E880()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E888()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E890()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E898()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E8A0()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E8A8()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E8B0()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E8B8()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E8C0()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E8C8()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E8D0()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E8D8()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E8E0()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E8E8()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E8F0()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E8F8()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E900()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E908()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E910()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E918()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E920()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E928()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E930()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E938()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E940()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E948()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E950()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E958()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E960()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E968()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E970()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E978()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E980()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E988()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E990()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E998()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E9A0()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E9A8()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E9B0()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E9B8()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E9C0()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E9C8()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E9D0()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E9D8()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E9E0()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E9E8()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E9F0()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54E9F8()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54EA00()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54EA08()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54EA10()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54EA18()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54EA20()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54EA28()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54EA30()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54EA38()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54EA40()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54EA48()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54EA58()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54EA68()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54EA78()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54EA88()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54EA98()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54EAA8()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54EAB8()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54EAC8()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54EAD8()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54EAE8()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54EAF8()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54EB08()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54EB18()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54EB28()
{
  JUMPOUT(0x20A54D564);
}

void sub_20A54EB34()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EB3C()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EB44()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EB4C()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EB54()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EB5C()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EB64()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EB6C()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EB74()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EB7C()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EB84()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EB8C()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EB94()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EB9C()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EBA4()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EBAC()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EBB4()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EBBC()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EBC4()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EBCC()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EBD4()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EBDC()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EBE4()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EBEC()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EBF4()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EBFC()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EC04()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EC0C()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EC14()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EC1C()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EC24()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EC2C()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EC34()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EC3C()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EC44()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EC4C()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EC54()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EC5C()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EC64()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EC6C()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EC74()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EC7C()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EC84()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EC8C()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EC94()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EC9C()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54ECA4()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54ECAC()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54ECB4()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54ECBC()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54ECC4()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54ECCC()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54ECD4()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54ECDC()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54ECE4()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54ECEC()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54ECF4()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54ECFC()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54ED04()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54ED0C()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54ED18()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54ED28()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54ED38()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54ED40()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54ED48()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54ED50()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54ED58()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54ED60()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54ED68()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54ED70()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54ED78()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54ED80()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54ED88()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54ED90()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54ED98()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EDA0()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EDA8()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EDB0()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EDB8()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EDC0()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EDC8()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EDD0()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EDD8()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EDE0()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EDE8()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EDF0()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EDF8()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EE00()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EE08()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EE10()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EE18()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EE20()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EE28()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EE30()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EE38()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EE40()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EE48()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EE54()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EE5C()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EE64()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EE6C()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EE74()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EE7C()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EE84()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EE8C()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EE94()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EE9C()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EEA4()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EEAC()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EEB4()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EEBC()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EEC4()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EECC()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EED4()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EEDC()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EEE4()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EEEC()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EEF4()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EEFC()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EF04()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EF0C()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EF14()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EF1C()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EF24()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EF2C()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EF34()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EF3C()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EF44()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EF4C()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EF54()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EF5C()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EF64()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EF6C()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EF74()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EF7C()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EF84()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EF8C()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EF94()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EF9C()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EFA4()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EFAC()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EFB4()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EFBC()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EFC4()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EFCC()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EFD4()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EFDC()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EFE4()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EFEC()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EFF4()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54EFFC()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54F004()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54F00C()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54F014()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54F01C()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54F024()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54F02C()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54F034()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54F03C()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54F044()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54F04C()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54F054()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54F05C()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54F064()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54F06C()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54F074()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54F07C()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54F084()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54F08C()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54F094()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54F09C()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54F0A4()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54F0AC()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54F0B4()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54F0BC()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54F0C4()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54F0CC()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54F0D4()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54F0DC()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54F0E4()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54F0EC()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54F0F4()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54F0FC()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54F104()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54F10C()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54F114()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54F11C()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54F124()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54F12C()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54F134()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54F13C()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54F144()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54F14C()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54F15C()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54F16C()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54F17C()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54F18C()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54F19C()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54F1AC()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54F1BC()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54F1CC()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54F1DC()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54F1EC()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54F1FC()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54F20C()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54F21C()
{
  JUMPOUT(0x20A54D5D8);
}

void sub_20A54F22C()
{
  JUMPOUT(0x20A54D5D8);
}

uint64_t sub_20A54F238(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  int v31;
  char v32;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FC028);
  v26 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v7 = v1[1];
  v9 = *((_BYTE *)v1 + 16);
  v10 = v1[3];
  v24 = v1[4];
  v25 = v10;
  v31 = *((unsigned __int8 *)v1 + 40);
  v11 = v1[6];
  v22 = v1[7];
  v23 = v11;
  LODWORD(v11) = *((unsigned __int8 *)v1 + 64);
  v19 = *((unsigned __int8 *)v1 + 65);
  v20 = *((unsigned __int8 *)v1 + 66);
  v21 = v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A59847C();
  v12 = v3;
  sub_20A5B92FC();
  v28 = v8;
  v29 = v7;
  v30 = v9;
  v32 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FBF58);
  sub_20A44D20C(&qword_2545FBF70, &qword_2545FBF58, (uint64_t)&unk_20A5C2080);
  v13 = v27;
  sub_20A5B9140();
  if (v13)
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v6, v3);
  v15 = v22;
  v16 = v23;
  v17 = v26;
  v28 = v25;
  v29 = v24;
  v30 = v31;
  v32 = 1;
  sub_20A5B9140();
  v28 = v16;
  v29 = v15;
  v30 = v21;
  v32 = 2;
  sub_20A5B9140();
  LOBYTE(v28) = v19;
  BYTE1(v28) = v20;
  v32 = 3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FC018);
  sub_20A44D20C(&qword_2545FC030, &qword_2545FC018, (uint64_t)&unk_20A5C2080);
  sub_20A5B9140();
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v6, v12);
}

uint64_t sub_20A54F4A8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v11;
  uint64_t v12;
  uint64_t v13;
  __int16 v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 v26;
  int v27;
  char v28;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FC008);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A59847C();
  sub_20A5B92F0();
  if (!v2)
  {
    v23 = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545FBF58);
    v28 = 0;
    sub_20A44D20C(&qword_2545FBF60, &qword_2545FBF58, (uint64_t)&unk_20A5C20A8);
    sub_20A5B90A4();
    v21 = v24;
    v22 = v25;
    v11 = v26;
    v28 = 1;
    sub_20A5B90A4();
    v27 = v11;
    v12 = v25;
    v20 = v24;
    v19 = v26;
    v28 = 2;
    sub_20A5B90A4();
    v13 = v25;
    v18 = v24;
    HIDWORD(v17) = v26;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545FC018);
    v28 = 3;
    sub_20A44D20C(&qword_2545FC020, &qword_2545FC018, (uint64_t)&unk_20A5C20A8);
    sub_20A5B90A4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    v14 = v24;
    v16 = v22;
    v15 = v23;
    *v23 = v21;
    v15[1] = v16;
    *((_BYTE *)v15 + 16) = v27;
    v15[3] = v20;
    v15[4] = v12;
    *((_BYTE *)v15 + 40) = v19;
    v15[6] = v18;
    v15[7] = v13;
    *((_BYTE *)v15 + 64) = BYTE4(v17);
    *(_WORD *)((char *)v15 + 65) = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_20A54F7D4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_20A54F800 + 4 * byte_20A5CCD32[*v0]))(0x7265626D756ELL, 0xE600000000000000);
}

uint64_t sub_20A54F800()
{
  return 0x6469636369;
}

uint64_t sub_20A54F814()
{
  return 1769172329;
}

uint64_t sub_20A54F824()
{
  return 0x6572506D69537369;
}

uint64_t sub_20A54F844@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A598E5C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A54F868()
{
  sub_20A59847C();
  return sub_20A5B9314();
}

uint64_t sub_20A54F890()
{
  sub_20A59847C();
  return sub_20A5B9320();
}

_BYTE *sub_20A54F8B8@<X0>(_BYTE *result@<X0>, char *a2@<X8>)
{
  _BYTE *v2;
  char v3;

  if ((result[16] & 1) != 0)
  {
    *a2 = -42;
  }
  else
  {
    v3 = -42;
    switch(*result)
    {
      case 6:
        *a2 = v2[16];
        break;
      case 8:
        *a2 = v2[40];
        break;
      case 9:
        *a2 = v2[64];
        break;
      case 0xE:
        v3 = v2[66];
        goto LABEL_8;
      default:
LABEL_8:
        *a2 = v3;
        break;
    }
  }
  return result;
}

uint64_t sub_20A54F92C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_20A54F4A8(a1, a2);
}

uint64_t sub_20A54F940(_QWORD *a1)
{
  return sub_20A54F238(a1);
}

uint64_t sub_20A54F954()
{
  sub_20A5B929C();
  sub_20A54D3D8();
  return sub_20A5B92CC();
}

uint64_t sub_20A54F9D0()
{
  sub_20A5B929C();
  sub_20A54D3D8();
  return sub_20A5B92CC();
}

unint64_t sub_20A54FA48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  unint64_t v5;
  uint64_t inited;
  uint64_t v8;

  if ((*(_BYTE *)(a1 + 32) & 1) != 0 || *(_BYTE *)(a1 + 16) != 7)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_2545FA940);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_20A5BA9A0;
    *(_QWORD *)(inited + 32) = 0x646F43726F727265;
    *(_QWORD *)(inited + 40) = 0xE900000000000065;
    v8 = MEMORY[0x24BEE1778];
    *(_QWORD *)(inited + 72) = MEMORY[0x24BEE1768];
    *(_QWORD *)(inited + 80) = v8;
    *(_QWORD *)(inited + 48) = -5;
    return sub_20A469B08(inited);
  }
  else
  {
    v2 = *(_QWORD *)v1;
    v3 = *(_QWORD *)(v1 + 8);
    v4 = *(_BYTE *)(v1 + 16);
    swift_bridgeObjectRetain();
    v5 = sub_20A535E34(v2, v3, v4);
    swift_bridgeObjectRelease();
    return v5;
  }
}

uint64_t sub_20A54FB14(_QWORD *a1)
{
  return sub_20A54FB40(a1, &qword_2545FC000, (void (*)(void))sub_20A598438);
}

uint64_t sub_20A54FB40(_QWORD *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  void (*v13)(void);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  v13 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v14 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v3;
  v10 = v3[1];
  HIDWORD(v12) = *((unsigned __int8 *)v3 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v13();
  sub_20A5B92FC();
  v15 = v9;
  v16 = v10;
  v17 = BYTE4(v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FBF58);
  sub_20A44D20C(&qword_2545FBF70, &qword_2545FBF58, (uint64_t)&unk_20A5C2080);
  sub_20A5B9140();
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v8, v5);
}

uint64_t sub_20A54FC80@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A54FCAC(a1, &qword_2545FBFF0, (void (*)(void))sub_20A598438, a2);
}

uint64_t sub_20A54FCAC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, void (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  char v17;
  uint64_t v18;

  v15 = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v18 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_20A5B92F0();
  if (!v4)
  {
    v11 = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545FBF58);
    sub_20A44D20C(&qword_2545FBF60, &qword_2545FBF58, (uint64_t)&unk_20A5C20A8);
    sub_20A5B90A4();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v10, v7);
    v12 = v17;
    *(_OWORD *)v11 = v16;
    *(_BYTE *)(v11 + 16) = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_20A54FE04()
{
  return 0x4C61746144636170;
}

uint64_t sub_20A54FE24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x4C61746144636170 && a2 == 0xEB00000000747369)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_20A5B91AC();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_20A54FED0()
{
  sub_20A598438();
  return sub_20A5B9314();
}

uint64_t sub_20A54FEF8()
{
  sub_20A598438();
  return sub_20A5B9320();
}

_BYTE *sub_20A54FF20@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  if ((result[16] & 1) != 0 || *result != 7)
    *a2 = -42;
  else
    *a2 = *(_BYTE *)(v2 + 16);
  return result;
}

id sub_20A54FF50(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id result;
  uint64_t v8;

  objc_msgSend(a1, sel_coordinate);
  *(_QWORD *)(v1 + 24) = v3;
  *(_WORD *)(v1 + 32) = -12032;
  objc_msgSend(a1, sel_coordinate);
  *(_QWORD *)(v1 + 40) = v4;
  *(_WORD *)(v1 + 48) = -12032;
  objc_msgSend(a1, sel_horizontalAccuracy);
  *(_QWORD *)(v1 + 56) = v5;
  *(_WORD *)(v1 + 64) = -12032;
  objc_msgSend(a1, sel_verticalAccuracy);
  *(_QWORD *)(v1 + 72) = v6;
  *(_WORD *)(v1 + 80) = -12032;
  result = objc_msgSend(a1, sel_altitude);
  *(_QWORD *)(v1 + 88) = v8;
  *(_WORD *)(v1 + 96) = -12032;
  return result;
}

uint64_t sub_20A54FFE8@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  void *v5;
  Swift::String v6;
  char v7;

  v4 = *(_QWORD *)result;
  if ((*(_BYTE *)(result + 16) & 1) != 0)
  {
    v5 = *(void **)(result + 8);
    swift_bridgeObjectRetain();
    v6._countAndFlagsBits = v4;
    v6._object = v5;
    ODILocationBindingsName.init(rawValue:)(v6);
    __asm { BR              X10 }
  }
  if (*(_QWORD *)result == 10)
  {
    v7 = *(_BYTE *)(v2 + 16);
  }
  else if (*(_QWORD *)result == 11)
  {
    v7 = *(_BYTE *)(v2 + 18);
  }
  else
  {
    v7 = -42;
  }
  *a2 = v7;
  return result;
}

void sub_20A5500B0()
{
  _BYTE *v0;
  char v1;

  *v0 = v1;
  JUMPOUT(0x20A550094);
}

void sub_20A5500B8()
{
  _BYTE *v0;
  char v1;

  *v0 = v1;
  JUMPOUT(0x20A550094);
}

void sub_20A5500C0()
{
  _BYTE *v0;
  char v1;

  *v0 = v1;
  JUMPOUT(0x20A550094);
}

void sub_20A5500C8()
{
  _BYTE *v0;
  char v1;

  *v0 = v1;
  JUMPOUT(0x20A550094);
}

unint64_t sub_20A5500D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  Swift::String v4;
  uint64_t v6;
  uint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t inited;
  uint64_t v11;

  v2 = *(_QWORD *)(a1 + 16);
  if ((*(_BYTE *)(a1 + 32) & 1) != 0)
  {
    v3 = *(void **)(a1 + 24);
    swift_bridgeObjectRetain();
    v4._countAndFlagsBits = v2;
    v4._object = v3;
    ODILocationBindingsName.init(rawValue:)(v4);
    __asm { BR              X10 }
  }
  if (*(_QWORD *)(a1 + 16) == 10)
  {
    v6 = *(_QWORD *)v1;
    v7 = *(_QWORD *)(v1 + 8);
    v8 = *(_BYTE *)(v1 + 16);
    swift_bridgeObjectRetain();
    v9 = sub_20A535E34(v6, v7, v8);
    swift_bridgeObjectRelease();
    return v9;
  }
  else if (*(_QWORD *)(a1 + 16) == 11)
  {
    return sub_20A536DEC(*(unsigned __int8 *)(v1 + 17) | (unsigned __int16)(*(unsigned __int8 *)(v1 + 18) << 8));
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_2545FA940);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_20A5BA9A0;
    *(_QWORD *)(inited + 32) = 0x646F43726F727265;
    *(_QWORD *)(inited + 40) = 0xE900000000000065;
    v11 = MEMORY[0x24BEE1778];
    *(_QWORD *)(inited + 72) = MEMORY[0x24BEE1768];
    *(_QWORD *)(inited + 80) = v11;
    *(_QWORD *)(inited + 48) = -5;
    return sub_20A469B08(inited);
  }
}

uint64_t sub_20A55032C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int16 v10;
  __int16 v11;
  __int16 v12;
  __int16 v13;
  __int16 v14;
  __int16 v15;
  __int16 v16;
  __int16 v17;
  __int16 v18;
  __int16 v19;
  uint64_t v20;
  uint64_t v21;

  v3 = *(unsigned __int8 *)(v1 + 16);
  v4 = *(unsigned __int8 *)(v1 + 17);
  v5 = *(unsigned __int8 *)(v1 + 18);
  v6 = *(_QWORD *)(v1 + 24);
  v10 = *(unsigned __int8 *)(v1 + 33);
  v11 = *(unsigned __int8 *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v12 = *(unsigned __int8 *)(v1 + 49);
  v13 = *(unsigned __int8 *)(v1 + 48);
  v8 = *(_QWORD *)(v1 + 56);
  v14 = *(unsigned __int8 *)(v1 + 65);
  v15 = *(unsigned __int8 *)(v1 + 64);
  v16 = *(unsigned __int8 *)(v1 + 81);
  v17 = *(unsigned __int8 *)(v1 + 80);
  v20 = *(_QWORD *)(v1 + 72);
  v21 = *(_QWORD *)(v1 + 88);
  v18 = *(unsigned __int8 *)(v1 + 97);
  v19 = *(unsigned __int8 *)(v1 + 96);
  if (*(_QWORD *)(v1 + 8))
  {
    sub_20A5B92B4();
    swift_bridgeObjectRetain();
    sub_20A5B8978();
  }
  else
  {
    sub_20A5B92B4();
  }
  if ((v3 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  sub_20A5B92A8();
  swift_bridgeObjectRelease();
  if (v4 != 2)
    sub_20A5B92B4();
  sub_20A5B92B4();
  if ((v5 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  sub_20A5B92A8();
  sub_20A538EA8(a1, v6, v11 | (v10 << 8));
  sub_20A538EA8(a1, v7, v13 | (v12 << 8));
  sub_20A538EA8(a1, v8, v15 | (v14 << 8));
  sub_20A538EA8(a1, v20, v17 | (v16 << 8));
  return sub_20A538EA8(a1, v21, v19 | (unsigned __int16)(v18 << 8));
}

void sub_20A550534()
{
  JUMPOUT(0x20A550484);
}

void sub_20A55053C()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550544()
{
  JUMPOUT(0x20A550404);
}

void sub_20A55054C()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550554()
{
  JUMPOUT(0x20A550404);
}

void sub_20A55055C()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550564()
{
  JUMPOUT(0x20A550404);
}

void sub_20A55056C()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550574()
{
  JUMPOUT(0x20A550404);
}

void sub_20A55057C()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550584()
{
  JUMPOUT(0x20A550404);
}

void sub_20A55058C()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550594()
{
  JUMPOUT(0x20A550404);
}

void sub_20A55059C()
{
  JUMPOUT(0x20A550404);
}

void sub_20A5505A4()
{
  JUMPOUT(0x20A550404);
}

void sub_20A5505AC()
{
  JUMPOUT(0x20A550404);
}

void sub_20A5505B4()
{
  JUMPOUT(0x20A550404);
}

void sub_20A5505BC()
{
  JUMPOUT(0x20A550404);
}

void sub_20A5505C4()
{
  JUMPOUT(0x20A550404);
}

void sub_20A5505CC()
{
  JUMPOUT(0x20A550404);
}

void sub_20A5505D4()
{
  JUMPOUT(0x20A550404);
}

void sub_20A5505DC()
{
  JUMPOUT(0x20A550404);
}

void sub_20A5505E4()
{
  JUMPOUT(0x20A550404);
}

void sub_20A5505EC()
{
  JUMPOUT(0x20A550404);
}

void sub_20A5505F4()
{
  JUMPOUT(0x20A550404);
}

void sub_20A5505FC()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550604()
{
  JUMPOUT(0x20A550404);
}

void sub_20A55060C()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550614()
{
  JUMPOUT(0x20A550404);
}

void sub_20A55061C()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550624()
{
  JUMPOUT(0x20A550404);
}

void sub_20A55062C()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550634()
{
  JUMPOUT(0x20A550404);
}

void sub_20A55063C()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550644()
{
  JUMPOUT(0x20A550404);
}

void sub_20A55064C()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550654()
{
  JUMPOUT(0x20A550404);
}

void sub_20A55065C()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550664()
{
  JUMPOUT(0x20A550404);
}

void sub_20A55066C()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550674()
{
  JUMPOUT(0x20A550404);
}

void sub_20A55067C()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550684()
{
  JUMPOUT(0x20A550404);
}

void sub_20A55068C()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550694()
{
  JUMPOUT(0x20A550404);
}

void sub_20A55069C()
{
  JUMPOUT(0x20A550404);
}

void sub_20A5506A4()
{
  JUMPOUT(0x20A550404);
}

void sub_20A5506AC()
{
  JUMPOUT(0x20A550404);
}

void sub_20A5506B4()
{
  JUMPOUT(0x20A550404);
}

void sub_20A5506BC()
{
  JUMPOUT(0x20A550404);
}

void sub_20A5506C4()
{
  JUMPOUT(0x20A550404);
}

void sub_20A5506CC()
{
  JUMPOUT(0x20A550404);
}

void sub_20A5506D4()
{
  JUMPOUT(0x20A550404);
}

void sub_20A5506DC()
{
  JUMPOUT(0x20A550404);
}

void sub_20A5506E4()
{
  JUMPOUT(0x20A550404);
}

void sub_20A5506EC()
{
  JUMPOUT(0x20A550404);
}

void sub_20A5506F4()
{
  JUMPOUT(0x20A550404);
}

void sub_20A5506FC()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550704()
{
  JUMPOUT(0x20A550404);
}

void sub_20A55070C()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550714()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550720()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550730()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550740()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550748()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550750()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550758()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550760()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550768()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550770()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550778()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550780()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550788()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550790()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550798()
{
  JUMPOUT(0x20A550404);
}

void sub_20A5507A0()
{
  JUMPOUT(0x20A550404);
}

void sub_20A5507A8()
{
  JUMPOUT(0x20A550404);
}

void sub_20A5507B0()
{
  JUMPOUT(0x20A550404);
}

void sub_20A5507B8()
{
  JUMPOUT(0x20A550404);
}

void sub_20A5507C0()
{
  JUMPOUT(0x20A550404);
}

void sub_20A5507C8()
{
  JUMPOUT(0x20A550404);
}

void sub_20A5507D0()
{
  JUMPOUT(0x20A550404);
}

void sub_20A5507D8()
{
  JUMPOUT(0x20A550404);
}

void sub_20A5507E0()
{
  JUMPOUT(0x20A550404);
}

void sub_20A5507E8()
{
  JUMPOUT(0x20A550404);
}

void sub_20A5507F0()
{
  JUMPOUT(0x20A550404);
}

void sub_20A5507F8()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550800()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550808()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550810()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550818()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550820()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550828()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550830()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550838()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550840()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550848()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550850()
{
  JUMPOUT(0x20A550404);
}

void sub_20A55085C()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550864()
{
  JUMPOUT(0x20A550404);
}

void sub_20A55086C()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550874()
{
  JUMPOUT(0x20A550404);
}

void sub_20A55087C()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550884()
{
  JUMPOUT(0x20A550404);
}

void sub_20A55088C()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550894()
{
  JUMPOUT(0x20A550404);
}

void sub_20A55089C()
{
  JUMPOUT(0x20A550404);
}

void sub_20A5508A4()
{
  JUMPOUT(0x20A550404);
}

void sub_20A5508AC()
{
  JUMPOUT(0x20A550404);
}

void sub_20A5508B4()
{
  JUMPOUT(0x20A550404);
}

void sub_20A5508BC()
{
  JUMPOUT(0x20A550404);
}

void sub_20A5508C4()
{
  JUMPOUT(0x20A550404);
}

void sub_20A5508CC()
{
  JUMPOUT(0x20A550404);
}

void sub_20A5508D4()
{
  JUMPOUT(0x20A550404);
}

void sub_20A5508DC()
{
  JUMPOUT(0x20A550404);
}

void sub_20A5508E4()
{
  JUMPOUT(0x20A550404);
}

void sub_20A5508EC()
{
  JUMPOUT(0x20A550404);
}

void sub_20A5508F4()
{
  JUMPOUT(0x20A550404);
}

void sub_20A5508FC()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550904()
{
  JUMPOUT(0x20A550404);
}

void sub_20A55090C()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550914()
{
  JUMPOUT(0x20A550404);
}

void sub_20A55091C()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550924()
{
  JUMPOUT(0x20A550404);
}

void sub_20A55092C()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550934()
{
  JUMPOUT(0x20A550404);
}

void sub_20A55093C()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550944()
{
  JUMPOUT(0x20A550404);
}

void sub_20A55094C()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550954()
{
  JUMPOUT(0x20A550404);
}

void sub_20A55095C()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550964()
{
  JUMPOUT(0x20A550404);
}

void sub_20A55096C()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550974()
{
  JUMPOUT(0x20A550404);
}

void sub_20A55097C()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550984()
{
  JUMPOUT(0x20A550404);
}

void sub_20A55098C()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550994()
{
  JUMPOUT(0x20A550404);
}

void sub_20A55099C()
{
  JUMPOUT(0x20A550404);
}

void sub_20A5509A4()
{
  JUMPOUT(0x20A550404);
}

void sub_20A5509AC()
{
  JUMPOUT(0x20A550404);
}

void sub_20A5509B4()
{
  JUMPOUT(0x20A550404);
}

void sub_20A5509BC()
{
  JUMPOUT(0x20A550404);
}

void sub_20A5509C4()
{
  JUMPOUT(0x20A550404);
}

void sub_20A5509CC()
{
  JUMPOUT(0x20A550404);
}

void sub_20A5509D4()
{
  JUMPOUT(0x20A550404);
}

void sub_20A5509DC()
{
  JUMPOUT(0x20A550404);
}

void sub_20A5509E4()
{
  JUMPOUT(0x20A550404);
}

void sub_20A5509EC()
{
  JUMPOUT(0x20A550404);
}

void sub_20A5509F4()
{
  JUMPOUT(0x20A550404);
}

void sub_20A5509FC()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550A04()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550A0C()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550A14()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550A1C()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550A24()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550A2C()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550A34()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550A3C()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550A44()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550A4C()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550A54()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550A5C()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550A64()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550A6C()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550A74()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550A7C()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550A84()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550A8C()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550A94()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550A9C()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550AA4()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550AAC()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550AB4()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550ABC()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550AC4()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550ACC()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550AD4()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550ADC()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550AE4()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550AEC()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550AF4()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550AFC()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550B04()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550B0C()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550B14()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550B1C()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550B24()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550B2C()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550B34()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550B3C()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550B44()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550B4C()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550B54()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550B64()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550B74()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550B84()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550B94()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550BA4()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550BB4()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550BC4()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550BD4()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550BE4()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550BF4()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550C04()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550C14()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550C24()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550C34()
{
  JUMPOUT(0x20A550404);
}

void sub_20A550C40()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550C48()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550C50()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550C58()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550C60()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550C68()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550C70()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550C78()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550C80()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550C88()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550C90()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550C98()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550CA0()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550CA8()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550CB0()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550CB8()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550CC0()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550CC8()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550CD0()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550CD8()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550CE0()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550CE8()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550CF0()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550CF8()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550D00()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550D08()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550D10()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550D18()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550D20()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550D28()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550D30()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550D38()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550D40()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550D48()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550D50()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550D58()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550D60()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550D68()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550D70()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550D78()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550D80()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550D88()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550D90()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550D98()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550DA0()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550DA8()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550DB0()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550DB8()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550DC0()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550DC8()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550DD0()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550DD8()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550DE0()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550DE8()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550DF0()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550DF8()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550E00()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550E08()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550E10()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550E18()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550E24()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550E34()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550E44()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550E4C()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550E54()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550E5C()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550E64()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550E6C()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550E74()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550E7C()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550E84()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550E8C()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550E94()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550E9C()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550EA4()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550EAC()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550EB4()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550EBC()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550EC4()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550ECC()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550ED4()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550EDC()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550EE4()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550EEC()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550EF4()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550EFC()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550F04()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550F0C()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550F14()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550F1C()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550F24()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550F2C()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550F34()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550F3C()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550F44()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550F4C()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550F54()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550F60()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550F68()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550F70()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550F78()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550F80()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550F88()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550F90()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550F98()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550FA0()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550FA8()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550FB0()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550FB8()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550FC0()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550FC8()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550FD0()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550FD8()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550FE0()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550FE8()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550FF0()
{
  JUMPOUT(0x20A550484);
}

void sub_20A550FF8()
{
  JUMPOUT(0x20A550484);
}

void sub_20A551000()
{
  JUMPOUT(0x20A550484);
}

void sub_20A551008()
{
  JUMPOUT(0x20A550484);
}

void sub_20A551010()
{
  JUMPOUT(0x20A550484);
}

void sub_20A551018()
{
  JUMPOUT(0x20A550484);
}

void sub_20A551020()
{
  JUMPOUT(0x20A550484);
}

void sub_20A551028()
{
  JUMPOUT(0x20A550484);
}

void sub_20A551030()
{
  JUMPOUT(0x20A550484);
}

void sub_20A551038()
{
  JUMPOUT(0x20A550484);
}

void sub_20A551040()
{
  JUMPOUT(0x20A550484);
}

void sub_20A551048()
{
  JUMPOUT(0x20A550484);
}

void sub_20A551050()
{
  JUMPOUT(0x20A550484);
}

void sub_20A551058()
{
  JUMPOUT(0x20A550484);
}

void sub_20A551060()
{
  JUMPOUT(0x20A550484);
}

void sub_20A551068()
{
  JUMPOUT(0x20A550484);
}

void sub_20A551070()
{
  JUMPOUT(0x20A550484);
}

void sub_20A551078()
{
  JUMPOUT(0x20A550484);
}

void sub_20A551080()
{
  JUMPOUT(0x20A550484);
}

void sub_20A551088()
{
  JUMPOUT(0x20A550484);
}

void sub_20A551090()
{
  JUMPOUT(0x20A550484);
}

void sub_20A551098()
{
  JUMPOUT(0x20A550484);
}

void sub_20A5510A0()
{
  JUMPOUT(0x20A550484);
}

void sub_20A5510A8()
{
  JUMPOUT(0x20A550484);
}

void sub_20A5510B0()
{
  JUMPOUT(0x20A550484);
}

void sub_20A5510B8()
{
  JUMPOUT(0x20A550484);
}

void sub_20A5510C0()
{
  JUMPOUT(0x20A550484);
}

void sub_20A5510C8()
{
  JUMPOUT(0x20A550484);
}

void sub_20A5510D0()
{
  JUMPOUT(0x20A550484);
}

void sub_20A5510D8()
{
  JUMPOUT(0x20A550484);
}

void sub_20A5510E0()
{
  JUMPOUT(0x20A550484);
}

void sub_20A5510E8()
{
  JUMPOUT(0x20A550484);
}

void sub_20A5510F0()
{
  JUMPOUT(0x20A550484);
}

void sub_20A5510F8()
{
  JUMPOUT(0x20A550484);
}

void sub_20A551100()
{
  JUMPOUT(0x20A550484);
}

void sub_20A551108()
{
  JUMPOUT(0x20A550484);
}

void sub_20A551110()
{
  JUMPOUT(0x20A550484);
}

void sub_20A551118()
{
  JUMPOUT(0x20A550484);
}

void sub_20A551120()
{
  JUMPOUT(0x20A550484);
}

void sub_20A551128()
{
  JUMPOUT(0x20A550484);
}

void sub_20A551130()
{
  JUMPOUT(0x20A550484);
}

void sub_20A551138()
{
  JUMPOUT(0x20A550484);
}

void sub_20A551140()
{
  JUMPOUT(0x20A550484);
}

void sub_20A551148()
{
  JUMPOUT(0x20A550484);
}

void sub_20A551150()
{
  JUMPOUT(0x20A550484);
}

void sub_20A551158()
{
  JUMPOUT(0x20A550484);
}

void sub_20A551160()
{
  JUMPOUT(0x20A550484);
}

void sub_20A551168()
{
  JUMPOUT(0x20A550484);
}

void sub_20A551170()
{
  JUMPOUT(0x20A550484);
}

void sub_20A551178()
{
  JUMPOUT(0x20A550484);
}

void sub_20A551180()
{
  JUMPOUT(0x20A550484);
}

void sub_20A551188()
{
  JUMPOUT(0x20A550484);
}

void sub_20A551190()
{
  JUMPOUT(0x20A550484);
}

void sub_20A551198()
{
  JUMPOUT(0x20A550484);
}

void sub_20A5511A0()
{
  JUMPOUT(0x20A550484);
}

void sub_20A5511A8()
{
  JUMPOUT(0x20A550484);
}

void sub_20A5511B0()
{
  JUMPOUT(0x20A550484);
}

void sub_20A5511B8()
{
  JUMPOUT(0x20A550484);
}

void sub_20A5511C0()
{
  JUMPOUT(0x20A550484);
}

void sub_20A5511C8()
{
  JUMPOUT(0x20A550484);
}

void sub_20A5511D0()
{
  JUMPOUT(0x20A550484);
}

void sub_20A5511D8()
{
  JUMPOUT(0x20A550484);
}

void sub_20A5511E0()
{
  JUMPOUT(0x20A550484);
}

void sub_20A5511E8()
{
  JUMPOUT(0x20A550484);
}

void sub_20A5511F0()
{
  JUMPOUT(0x20A550484);
}

void sub_20A5511F8()
{
  JUMPOUT(0x20A550484);
}

void sub_20A551200()
{
  JUMPOUT(0x20A550484);
}

void sub_20A551208()
{
  JUMPOUT(0x20A550484);
}

void sub_20A551210()
{
  JUMPOUT(0x20A550484);
}

void sub_20A551218()
{
  JUMPOUT(0x20A550484);
}

void sub_20A551220()
{
  JUMPOUT(0x20A550484);
}

void sub_20A551228()
{
  JUMPOUT(0x20A550484);
}

void sub_20A551230()
{
  JUMPOUT(0x20A550484);
}

void sub_20A551238()
{
  JUMPOUT(0x20A550484);
}

void sub_20A551240()
{
  JUMPOUT(0x20A550484);
}

void sub_20A551248()
{
  JUMPOUT(0x20A550484);
}

void sub_20A551250()
{
  JUMPOUT(0x20A550484);
}

void sub_20A551258()
{
  JUMPOUT(0x20A550484);
}

void sub_20A551268()
{
  JUMPOUT(0x20A550484);
}

void sub_20A551278()
{
  JUMPOUT(0x20A550484);
}

void sub_20A551288()
{
  JUMPOUT(0x20A550484);
}

void sub_20A551298()
{
  JUMPOUT(0x20A550484);
}

void sub_20A5512A8()
{
  JUMPOUT(0x20A550484);
}

void sub_20A5512B8()
{
  JUMPOUT(0x20A550484);
}

void sub_20A5512C8()
{
  JUMPOUT(0x20A550484);
}

void sub_20A5512D8()
{
  JUMPOUT(0x20A550484);
}

void sub_20A5512E8()
{
  JUMPOUT(0x20A550484);
}

void sub_20A5512F8()
{
  JUMPOUT(0x20A550484);
}

void sub_20A551308()
{
  JUMPOUT(0x20A550484);
}

void sub_20A551318()
{
  JUMPOUT(0x20A550484);
}

void sub_20A551328()
{
  JUMPOUT(0x20A550484);
}

void sub_20A551338()
{
  JUMPOUT(0x20A550484);
}

uint64_t sub_20A551344(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_20A551380 + 4 * byte_20A5CD090[a1]))(0x61636F6C5F737067, 0xEC0000006E6F6974);
}

unint64_t sub_20A551380()
{
  return 0xD000000000000014;
}

unint64_t sub_20A5513EC()
{
  return 0xD000000000000010;
}

uint64_t sub_20A551408()
{
  return 0x6564757469746C61;
}

uint64_t sub_20A551424(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  int v10;
  uint64_t v11;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  int v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  int v27;
  int v28;
  int v29;
  int v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  int v38;
  char v39;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FC058);
  v33 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v8 = v1[1];
  v9 = *((_BYTE *)v1 + 16);
  v38 = *((unsigned __int8 *)v1 + 17);
  v32 = *((unsigned __int8 *)v1 + 18);
  v31 = v1[3];
  v10 = *((unsigned __int8 *)v1 + 32);
  v29 = *((unsigned __int8 *)v1 + 33);
  v30 = v10;
  v26 = v1[5];
  LODWORD(v5) = *((unsigned __int8 *)v1 + 49);
  v27 = *((unsigned __int8 *)v1 + 48);
  v28 = v5;
  v23 = v1[7];
  LODWORD(v5) = *((unsigned __int8 *)v1 + 65);
  v24 = *((unsigned __int8 *)v1 + 64);
  v25 = v5;
  v20 = v1[9];
  LODWORD(v5) = *((unsigned __int8 *)v1 + 81);
  v21 = *((unsigned __int8 *)v1 + 80);
  v22 = v5;
  v17 = v1[11];
  LODWORD(v5) = *((unsigned __int8 *)v1 + 97);
  v18 = *((unsigned __int8 *)v1 + 96);
  v19 = v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A5984C0();
  sub_20A5B92FC();
  v35 = v7;
  v36 = v8;
  v37 = v9;
  v39 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FBF58);
  sub_20A44D20C(&qword_2545FBF70, &qword_2545FBF58, (uint64_t)&unk_20A5C2080);
  v11 = v34;
  sub_20A5B9140();
  if (v11)
    return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v6, v3);
  v13 = v29;
  v14 = v30;
  v15 = v31;
  v16 = v33;
  LOBYTE(v35) = v38;
  BYTE1(v35) = v32;
  v39 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FC018);
  sub_20A44D20C(&qword_2545FC030, &qword_2545FC018, (uint64_t)&unk_20A5C2080);
  sub_20A5B9140();
  v35 = v15;
  LOBYTE(v36) = v14;
  BYTE1(v36) = v13;
  v39 = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FC048);
  sub_20A44D20C(&qword_2545FC060, &qword_2545FC048, (uint64_t)&unk_20A5C2080);
  sub_20A5B9140();
  v35 = v26;
  LOBYTE(v36) = v27;
  BYTE1(v36) = v28;
  v39 = 3;
  sub_20A5B9140();
  v35 = v23;
  LOBYTE(v36) = v24;
  BYTE1(v36) = v25;
  v39 = 4;
  sub_20A5B9140();
  v35 = v20;
  LOBYTE(v36) = v21;
  BYTE1(v36) = v22;
  v39 = 5;
  sub_20A5B9140();
  v35 = v17;
  LOBYTE(v36) = v18;
  BYTE1(v36) = v19;
  v39 = 6;
  sub_20A5B9140();
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v6, v3);
}

uint64_t sub_20A5517C8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  _QWORD *v21;
  uint64_t v22;
  int v23;
  int v24;
  int v25;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  int v33;
  int v34;
  int v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned __int8 v41;
  int v42;
  char v43;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FC038);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A5984C0();
  sub_20A5B92F0();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545FBF58);
    v43 = 0;
    sub_20A44D20C(&qword_2545FBF60, &qword_2545FBF58, (uint64_t)&unk_20A5C20A8);
    sub_20A5B90A4();
    v10 = v40;
    v37 = a2;
    v38 = v39;
    v11 = v41;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545FC018);
    v43 = 1;
    sub_20A44D20C(&qword_2545FC020, &qword_2545FC018, (uint64_t)&unk_20A5C20A8);
    sub_20A5B90A4();
    v42 = v11;
    v35 = v39;
    v12 = BYTE1(v39);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545FC048);
    v43 = 2;
    v36 = sub_20A44D20C(&qword_2545FC050, &qword_2545FC048, (uint64_t)&unk_20A5C20A8);
    sub_20A5B90A4();
    v32 = v39;
    v33 = v40;
    v34 = v12;
    v13 = BYTE1(v40);
    v43 = 3;
    sub_20A5B90A4();
    v29 = v39;
    v30 = v40;
    v31 = v13;
    v14 = BYTE1(v40);
    v43 = 4;
    sub_20A5B90A4();
    v26 = v39;
    v27 = v40;
    v28 = v14;
    v15 = BYTE1(v40);
    v43 = 5;
    sub_20A5B90A4();
    v25 = v15;
    v17 = v39;
    v23 = BYTE1(v40);
    v24 = v40;
    v43 = 6;
    sub_20A5B90A4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    v18 = v39;
    v19 = v40;
    v20 = BYTE1(v40);
    v21 = v37;
    *v37 = v38;
    v21[1] = v10;
    *((_BYTE *)v21 + 16) = v42;
    *((_BYTE *)v21 + 17) = v35;
    *((_BYTE *)v21 + 18) = v34;
    v21[3] = v32;
    *((_BYTE *)v21 + 32) = v33;
    *((_BYTE *)v21 + 33) = v31;
    v21[5] = v29;
    *((_BYTE *)v21 + 48) = v30;
    *((_BYTE *)v21 + 49) = v28;
    v21[7] = v26;
    *((_BYTE *)v21 + 64) = v27;
    *((_BYTE *)v21 + 65) = v25;
    v21[9] = v17;
    *((_BYTE *)v21 + 80) = v24;
    *((_BYTE *)v21 + 81) = v23;
    v21[11] = v18;
    *((_BYTE *)v21 + 96) = v19;
    *((_BYTE *)v21 + 97) = v20;
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_20A551BE4()
{
  unsigned __int8 *v0;

  return sub_20A551344(*v0);
}

uint64_t sub_20A551BEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A59900C(a1, a2);
  *a3 = result;
  return result;
}

void sub_20A551C10(_BYTE *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_20A551C1C()
{
  sub_20A5984C0();
  return sub_20A5B9314();
}

uint64_t sub_20A551C44()
{
  sub_20A5984C0();
  return sub_20A5B9320();
}

uint64_t sub_20A551C74@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_20A5517C8(a1, a2);
}

uint64_t sub_20A551C88(_QWORD *a1)
{
  return sub_20A551424(a1);
}

uint64_t sub_20A551C9C()
{
  __int128 *v0;
  __int16 v1;
  char v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  char v16;
  char v17;
  _BYTE v19[72];
  __int128 v20;
  __int16 v21;
  char v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  char v33;
  char v34;
  uint64_t v35;
  char v36;
  char v37;

  v1 = *((_WORD *)v0 + 8);
  v2 = *((_BYTE *)v0 + 18);
  v3 = *((_QWORD *)v0 + 3);
  v4 = *((_BYTE *)v0 + 32);
  v5 = *((_BYTE *)v0 + 33);
  v6 = *((_QWORD *)v0 + 5);
  v7 = *((_BYTE *)v0 + 48);
  v8 = *((_BYTE *)v0 + 49);
  v9 = *((_QWORD *)v0 + 7);
  v10 = *((_BYTE *)v0 + 64);
  v11 = *((_BYTE *)v0 + 65);
  v12 = *((_QWORD *)v0 + 9);
  v13 = *((_BYTE *)v0 + 80);
  v14 = *((_BYTE *)v0 + 81);
  v15 = *((_QWORD *)v0 + 11);
  v16 = *((_BYTE *)v0 + 96);
  v17 = *((_BYTE *)v0 + 97);
  v20 = *v0;
  v21 = v1;
  v22 = v2;
  v23 = v3;
  v24 = v4;
  v25 = v5;
  v26 = v6;
  v27 = v7;
  v28 = v8;
  v29 = v9;
  v30 = v10;
  v31 = v11;
  v32 = v12;
  v33 = v13;
  v34 = v14;
  v35 = v15;
  v36 = v16;
  v37 = v17;
  sub_20A5B929C();
  sub_20A55032C((uint64_t)v19);
  return sub_20A5B92CC();
}

uint64_t sub_20A551D70()
{
  __int128 *v0;
  __int16 v1;
  char v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  char v16;
  char v17;
  _BYTE v19[72];
  __int128 v20;
  __int16 v21;
  char v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  char v33;
  char v34;
  uint64_t v35;
  char v36;
  char v37;

  v1 = *((_WORD *)v0 + 8);
  v2 = *((_BYTE *)v0 + 18);
  v3 = *((_QWORD *)v0 + 3);
  v4 = *((_BYTE *)v0 + 32);
  v5 = *((_BYTE *)v0 + 33);
  v6 = *((_QWORD *)v0 + 5);
  v7 = *((_BYTE *)v0 + 48);
  v8 = *((_BYTE *)v0 + 49);
  v9 = *((_QWORD *)v0 + 7);
  v10 = *((_BYTE *)v0 + 64);
  v11 = *((_BYTE *)v0 + 65);
  v12 = *((_QWORD *)v0 + 9);
  v13 = *((_BYTE *)v0 + 80);
  v14 = *((_BYTE *)v0 + 81);
  v15 = *((_QWORD *)v0 + 11);
  v16 = *((_BYTE *)v0 + 96);
  v17 = *((_BYTE *)v0 + 97);
  v20 = *v0;
  v21 = v1;
  v22 = v2;
  v23 = v3;
  v24 = v4;
  v25 = v5;
  v26 = v6;
  v27 = v7;
  v28 = v8;
  v29 = v9;
  v30 = v10;
  v31 = v11;
  v32 = v12;
  v33 = v13;
  v34 = v14;
  v35 = v15;
  v36 = v16;
  v37 = v17;
  sub_20A5B929C();
  sub_20A55032C((uint64_t)v19);
  return sub_20A5B92CC();
}

uint64_t sub_20A551E40(_QWORD *a1)
{
  __int16 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __int16 v8;
  uint64_t v10;
  __int16 v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FC078);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A598504();
  sub_20A5B92FC();
  v11 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FC018);
  sub_20A44D20C(&qword_2545FC030, &qword_2545FC018, (uint64_t)&unk_20A5C2080);
  sub_20A5B9140();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_20A551F60()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;

  v1 = *v0;
  v2 = v0[1];
  sub_20A5B929C();
  if (v1 != 2)
    sub_20A5B92B4();
  sub_20A5B92B4();
  if ((v2 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  sub_20A5B92A8();
  return sub_20A5B92CC();
}

void sub_20A552014()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A55201C()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552024()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A55202C()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552034()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A55203C()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552044()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A55204C()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552054()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A55205C()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552064()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A55206C()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552074()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A55207C()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552084()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A55208C()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552094()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A55209C()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5520A4()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5520AC()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5520B4()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5520BC()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5520C4()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5520CC()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5520D4()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5520DC()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5520E4()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5520EC()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5520F4()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5520FC()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552104()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A55210C()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552114()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A55211C()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552124()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A55212C()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552134()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A55213C()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552144()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A55214C()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552154()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A55215C()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552164()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A55216C()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552174()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A55217C()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552184()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A55218C()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552194()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A55219C()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5521A4()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5521AC()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5521B4()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5521BC()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5521C4()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5521CC()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5521D4()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5521DC()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5521E4()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5521EC()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5521F4()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552200()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552210()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552220()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552228()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552230()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552238()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552240()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552248()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552250()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552258()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552260()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552268()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552270()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552278()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552280()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552288()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552290()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552298()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5522A0()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5522A8()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5522B0()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5522B8()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5522C0()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5522C8()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5522D0()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5522D8()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5522E0()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5522E8()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5522F0()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5522F8()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552300()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552308()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552310()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552318()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552320()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552328()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552330()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A55233C()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552344()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A55234C()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552354()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A55235C()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552364()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A55236C()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552374()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A55237C()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552384()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A55238C()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552394()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A55239C()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5523A4()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5523AC()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5523B4()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5523BC()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5523C4()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5523CC()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5523D4()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5523DC()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5523E4()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5523EC()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5523F4()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5523FC()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552404()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A55240C()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552414()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A55241C()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552424()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A55242C()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552434()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A55243C()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552444()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A55244C()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552454()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A55245C()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552464()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A55246C()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552474()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A55247C()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552484()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A55248C()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552494()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A55249C()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5524A4()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5524AC()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5524B4()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5524BC()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5524C4()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5524CC()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5524D4()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5524DC()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5524E4()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5524EC()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5524F4()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5524FC()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552504()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A55250C()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552514()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A55251C()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552524()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A55252C()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552534()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A55253C()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552544()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A55254C()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552554()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A55255C()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552564()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A55256C()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552574()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A55257C()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552584()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A55258C()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552594()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A55259C()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5525A4()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5525AC()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5525B4()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5525BC()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5525C4()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5525CC()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5525D4()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5525DC()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5525E4()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5525EC()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5525F4()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5525FC()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552604()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A55260C()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552614()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A55261C()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552624()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A55262C()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552634()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552644()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552654()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552664()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552674()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552684()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552694()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5526A4()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5526B4()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5526C4()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5526D4()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5526E4()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A5526F4()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552704()
{
  JUMPOUT(0x20A551FC8);
}

void sub_20A552714()
{
  JUMPOUT(0x20A551FC8);
}

uint64_t sub_20A552720@<X0>(_QWORD *a1@<X0>, _WORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  __int16 v12;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FC068);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A598504();
  sub_20A5B92F0();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545FC018);
    sub_20A44D20C(&qword_2545FC020, &qword_2545FC018, (uint64_t)&unk_20A5C20A8);
    sub_20A5B90A4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_20A552860()
{
  return 0xD000000000000011;
}

uint64_t sub_20A55287C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A5992DC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_20A5528A4()
{
  sub_20A598504();
  return sub_20A5B9314();
}

uint64_t sub_20A5528CC()
{
  sub_20A598504();
  return sub_20A5B9320();
}

_BYTE *sub_20A5528F4@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  if ((result[16] & 1) != 0 || *result != 12)
    *a2 = -42;
  else
    *a2 = *(_BYTE *)(v2 + 1);
  return result;
}

unint64_t sub_20A552920(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t inited;
  uint64_t v4;

  if ((*(_BYTE *)(a1 + 32) & 1) == 0 && *(_BYTE *)(a1 + 16) == 12)
    return sub_20A536DEC(*v1 | (unsigned __int16)(v1[1] << 8));
  __swift_instantiateConcreteTypeFromMangledName(qword_2545FA940);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A5BA9A0;
  *(_QWORD *)(inited + 32) = 0x646F43726F727265;
  *(_QWORD *)(inited + 40) = 0xE900000000000065;
  v4 = MEMORY[0x24BEE1778];
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE1768];
  *(_QWORD *)(inited + 80) = v4;
  *(_QWORD *)(inited + 48) = -5;
  return sub_20A469B08(inited);
}

uint64_t sub_20A5529C0@<X0>(_QWORD *a1@<X0>, _WORD *a2@<X8>)
{
  return sub_20A552720(a1, a2);
}

uint64_t sub_20A5529D4(_QWORD *a1)
{
  return sub_20A551E40(a1);
}

uint64_t sub_20A5529EC()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = v0[1];
  if (*v0 != 2)
    sub_20A5B92B4();
  sub_20A5B92B4();
  if ((v1 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  return sub_20A5B92A8();
}

void sub_20A552A7C()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552A84()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552A8C()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552A94()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552A9C()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552AA4()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552AAC()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552AB4()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552ABC()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552AC4()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552ACC()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552AD4()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552ADC()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552AE4()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552AEC()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552AF4()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552AFC()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552B04()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552B0C()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552B14()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552B1C()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552B24()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552B2C()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552B34()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552B3C()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552B44()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552B4C()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552B54()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552B5C()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552B64()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552B6C()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552B74()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552B7C()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552B84()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552B8C()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552B94()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552B9C()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552BA4()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552BAC()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552BB4()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552BBC()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552BC4()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552BCC()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552BD4()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552BDC()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552BE4()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552BEC()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552BF4()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552BFC()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552C04()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552C0C()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552C14()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552C1C()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552C24()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552C2C()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552C34()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552C3C()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552C44()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552C4C()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552C54()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552C5C()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552C68()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552C78()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552C88()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552C90()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552C98()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552CA0()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552CA8()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552CB0()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552CB8()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552CC0()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552CC8()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552CD0()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552CD8()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552CE0()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552CE8()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552CF0()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552CF8()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552D00()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552D08()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552D10()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552D18()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552D20()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552D28()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552D30()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552D38()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552D40()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552D48()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552D50()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552D58()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552D60()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552D68()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552D70()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552D78()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552D80()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552D88()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552D90()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552D98()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552DA4()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552DAC()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552DB4()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552DBC()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552DC4()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552DCC()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552DD4()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552DDC()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552DE4()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552DEC()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552DF4()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552DFC()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552E04()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552E0C()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552E14()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552E1C()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552E24()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552E2C()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552E34()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552E3C()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552E44()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552E4C()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552E54()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552E5C()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552E64()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552E6C()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552E74()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552E7C()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552E84()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552E8C()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552E94()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552E9C()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552EA4()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552EAC()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552EB4()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552EBC()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552EC4()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552ECC()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552ED4()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552EDC()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552EE4()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552EEC()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552EF4()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552EFC()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552F04()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552F0C()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552F14()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552F1C()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552F24()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552F2C()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552F34()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552F3C()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552F44()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552F4C()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552F54()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552F5C()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552F64()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552F6C()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552F74()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552F7C()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552F84()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552F8C()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552F94()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552F9C()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552FA4()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552FAC()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552FB4()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552FBC()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552FC4()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552FCC()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552FD4()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552FDC()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552FE4()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552FEC()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552FF4()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A552FFC()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A553004()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A55300C()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A553014()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A55301C()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A553024()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A55302C()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A553034()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A55303C()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A553044()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A55304C()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A553054()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A55305C()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A553064()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A55306C()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A553074()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A55307C()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A553084()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A55308C()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A553094()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A55309C()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A5530AC()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A5530BC()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A5530CC()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A5530DC()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A5530EC()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A5530FC()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A55310C()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A55311C()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A55312C()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A55313C()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A55314C()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A55315C()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A55316C()
{
  JUMPOUT(0x20A552A44);
}

void sub_20A55317C()
{
  JUMPOUT(0x20A552A44);
}

uint64_t sub_20A553188()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;

  v1 = *v0;
  v2 = v0[1];
  sub_20A5B929C();
  if (v1 != 2)
    sub_20A5B92B4();
  sub_20A5B92B4();
  if ((v2 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  sub_20A5B92A8();
  return sub_20A5B92CC();
}

void sub_20A553238()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553240()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553248()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553250()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553258()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553260()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553268()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553270()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553278()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553280()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553288()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553290()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553298()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5532A0()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5532A8()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5532B0()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5532B8()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5532C0()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5532C8()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5532D0()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5532D8()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5532E0()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5532E8()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5532F0()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5532F8()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553300()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553308()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553310()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553318()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553320()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553328()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553330()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553338()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553340()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553348()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553350()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553358()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553360()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553368()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553370()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553378()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553380()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553388()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553390()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553398()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5533A0()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5533A8()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5533B0()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5533B8()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5533C0()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5533C8()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5533D0()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5533D8()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5533E0()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5533E8()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5533F0()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5533F8()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553400()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553408()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553410()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553418()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553424()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553434()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553444()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A55344C()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553454()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A55345C()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553464()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A55346C()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553474()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A55347C()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553484()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A55348C()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553494()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A55349C()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5534A4()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5534AC()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5534B4()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5534BC()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5534C4()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5534CC()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5534D4()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5534DC()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5534E4()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5534EC()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5534F4()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5534FC()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553504()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A55350C()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553514()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A55351C()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553524()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A55352C()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553534()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A55353C()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553544()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A55354C()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553554()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553560()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553568()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553570()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553578()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553580()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553588()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553590()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553598()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5535A0()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5535A8()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5535B0()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5535B8()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5535C0()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5535C8()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5535D0()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5535D8()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5535E0()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5535E8()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5535F0()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5535F8()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553600()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553608()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553610()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553618()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553620()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553628()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553630()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553638()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553640()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553648()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553650()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553658()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553660()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553668()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553670()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553678()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553680()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553688()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553690()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553698()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5536A0()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5536A8()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5536B0()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5536B8()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5536C0()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5536C8()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5536D0()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5536D8()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5536E0()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5536E8()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5536F0()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5536F8()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553700()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553708()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553710()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553718()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553720()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553728()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553730()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553738()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553740()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553748()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553750()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553758()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553760()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553768()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553770()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553778()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553780()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553788()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553790()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553798()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5537A0()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5537A8()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5537B0()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5537B8()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5537C0()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5537C8()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5537D0()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5537D8()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5537E0()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5537E8()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5537F0()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5537F8()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553800()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553808()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553810()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553818()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553820()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553828()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553830()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553838()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553840()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553848()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553850()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553858()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553868()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553878()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553888()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553898()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5538A8()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5538B8()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5538C8()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5538D8()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5538E8()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A5538F8()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553908()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553918()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553928()
{
  JUMPOUT(0x20A5531ECLL);
}

void sub_20A553938()
{
  JUMPOUT(0x20A5531ECLL);
}

unint64_t sub_20A553948(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  unint64_t v5;
  uint64_t inited;
  uint64_t v8;

  if ((*(_BYTE *)(a1 + 32) & 1) != 0 || *(_BYTE *)(a1 + 16) != 13)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_2545FA940);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_20A5BA9A0;
    *(_QWORD *)(inited + 32) = 0x646F43726F727265;
    *(_QWORD *)(inited + 40) = 0xE900000000000065;
    v8 = MEMORY[0x24BEE1778];
    *(_QWORD *)(inited + 72) = MEMORY[0x24BEE1768];
    *(_QWORD *)(inited + 80) = v8;
    *(_QWORD *)(inited + 48) = -5;
    return sub_20A469B08(inited);
  }
  else
  {
    v2 = *(_QWORD *)v1;
    v3 = *(_QWORD *)(v1 + 8);
    v4 = *(_BYTE *)(v1 + 16);
    swift_bridgeObjectRetain();
    v5 = sub_20A535E34(v2, v3, v4);
    swift_bridgeObjectRelease();
    return v5;
  }
}

uint64_t sub_20A553A14(_QWORD *a1)
{
  return sub_20A54FB40(a1, &qword_2545FC090, (void (*)(void))sub_20A598548);
}

uint64_t sub_20A553A40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(unsigned __int8 *)(v0 + 16);
  sub_20A5B929C();
  sub_20A5B92B4();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_20A5B8978();
    swift_bridgeObjectRelease();
  }
  if ((v2 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  sub_20A5B92A8();
  return sub_20A5B92CC();
}

void sub_20A553B04()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553B0C()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553B14()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553B1C()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553B24()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553B2C()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553B34()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553B3C()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553B44()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553B4C()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553B54()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553B5C()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553B64()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553B6C()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553B74()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553B7C()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553B84()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553B8C()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553B94()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553B9C()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553BA4()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553BAC()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553BB4()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553BBC()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553BC4()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553BCC()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553BD4()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553BDC()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553BE4()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553BEC()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553BF4()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553BFC()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553C04()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553C0C()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553C14()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553C1C()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553C24()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553C2C()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553C34()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553C3C()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553C44()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553C4C()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553C54()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553C5C()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553C64()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553C6C()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553C74()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553C7C()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553C84()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553C8C()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553C94()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553C9C()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553CA4()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553CAC()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553CB4()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553CBC()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553CC4()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553CCC()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553CD4()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553CDC()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553CE4()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553CF0()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553D00()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553D10()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553D18()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553D20()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553D28()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553D30()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553D38()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553D40()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553D48()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553D50()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553D58()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553D60()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553D68()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553D70()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553D78()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553D80()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553D88()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553D90()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553D98()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553DA0()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553DA8()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553DB0()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553DB8()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553DC0()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553DC8()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553DD0()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553DD8()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553DE0()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553DE8()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553DF0()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553DF8()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553E00()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553E08()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553E10()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553E18()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553E20()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553E2C()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553E34()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553E3C()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553E44()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553E4C()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553E54()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553E5C()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553E64()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553E6C()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553E74()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553E7C()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553E84()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553E8C()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553E94()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553E9C()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553EA4()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553EAC()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553EB4()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553EBC()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553EC4()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553ECC()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553ED4()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553EDC()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553EE4()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553EEC()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553EF4()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553EFC()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553F04()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553F0C()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553F14()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553F1C()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553F24()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553F2C()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553F34()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553F3C()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553F44()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553F4C()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553F54()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553F5C()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553F64()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553F6C()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553F74()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553F7C()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553F84()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553F8C()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553F94()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553F9C()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553FA4()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553FAC()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553FB4()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553FBC()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553FC4()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553FCC()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553FD4()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553FDC()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553FE4()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553FEC()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553FF4()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A553FFC()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A554004()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A55400C()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A554014()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A55401C()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A554024()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A55402C()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A554034()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A55403C()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A554044()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A55404C()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A554054()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A55405C()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A554064()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A55406C()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A554074()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A55407C()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A554084()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A55408C()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A554094()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A55409C()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A5540A4()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A5540AC()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A5540B4()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A5540BC()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A5540C4()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A5540CC()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A5540D4()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A5540DC()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A5540E4()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A5540EC()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A5540F4()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A5540FC()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A554104()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A55410C()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A554114()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A55411C()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A554124()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A554134()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A554144()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A554154()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A554164()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A554174()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A554184()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A554194()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A5541A4()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A5541B4()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A5541C4()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A5541D4()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A5541E4()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A5541F4()
{
  JUMPOUT(0x20A553AB8);
}

void sub_20A554204()
{
  JUMPOUT(0x20A553AB8);
}

uint64_t sub_20A554210@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A54FCAC(a1, &qword_2545FC080, (void (*)(void))sub_20A598548, a2);
}

uint64_t sub_20A55423C()
{
  return 0x656E6F7A656D6974;
}

uint64_t sub_20A554254@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x656E6F7A656D6974 && a2 == 0xE800000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_20A5B91AC();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_20A5542E8()
{
  sub_20A598548();
  return sub_20A5B9314();
}

uint64_t sub_20A554310()
{
  sub_20A598548();
  return sub_20A5B9320();
}

_BYTE *sub_20A554338@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  if ((result[16] & 1) != 0 || *result != 13)
    *a2 = -42;
  else
    *a2 = *(_BYTE *)(v2 + 16);
  return result;
}

uint64_t sub_20A554368()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(v0 + 16);
  if (*(_QWORD *)(v0 + 8))
  {
    sub_20A5B92B4();
    swift_bridgeObjectRetain();
    sub_20A5B8978();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_20A5B92B4();
  }
  if ((v1 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  return sub_20A5B92A8();
}

void sub_20A554410()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554418()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554420()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554428()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554430()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554438()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554440()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554448()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554450()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554458()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554460()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554468()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554470()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554478()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554480()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554488()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554490()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554498()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5544A0()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5544A8()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5544B0()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5544B8()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5544C0()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5544C8()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5544D0()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5544D8()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5544E0()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5544E8()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5544F0()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5544F8()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554500()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554508()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554510()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554518()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554520()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554528()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554530()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554538()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554540()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554548()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554550()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554558()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554560()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554568()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554570()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554578()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554580()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554588()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554590()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554598()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5545A0()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5545A8()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5545B0()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5545B8()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5545C0()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5545C8()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5545D0()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5545D8()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5545E0()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5545E8()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5545F0()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5545FC()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A55460C()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A55461C()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554624()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A55462C()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554634()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A55463C()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554644()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A55464C()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554654()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A55465C()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554664()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A55466C()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554674()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A55467C()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554684()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A55468C()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554694()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A55469C()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5546A4()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5546AC()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5546B4()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5546BC()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5546C4()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5546CC()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5546D4()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5546DC()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5546E4()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5546EC()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5546F4()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5546FC()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554704()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A55470C()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554714()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A55471C()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554724()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A55472C()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554738()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554740()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554748()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554750()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554758()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554760()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554768()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554770()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554778()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554780()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554788()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554790()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554798()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5547A0()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5547A8()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5547B0()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5547B8()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5547C0()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5547C8()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5547D0()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5547D8()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5547E0()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5547E8()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5547F0()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5547F8()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554800()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554808()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554810()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554818()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554820()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554828()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554830()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554838()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554840()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554848()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554850()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554858()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554860()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554868()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554870()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554878()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554880()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554888()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554890()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554898()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5548A0()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5548A8()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5548B0()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5548B8()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5548C0()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5548C8()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5548D0()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5548D8()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5548E0()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5548E8()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5548F0()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5548F8()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554900()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554908()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554910()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554918()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554920()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554928()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554930()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554938()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554940()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554948()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554950()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554958()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554960()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554968()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554970()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554978()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554980()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554988()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554990()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554998()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5549A0()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5549A8()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5549B0()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5549B8()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5549C0()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5549C8()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5549D0()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5549D8()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5549E0()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5549E8()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5549F0()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A5549F8()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554A00()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554A08()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554A10()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554A18()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554A20()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554A28()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554A30()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554A40()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554A50()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554A60()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554A70()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554A80()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554A90()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554AA0()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554AB0()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554AC0()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554AD0()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554AE0()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554AF0()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554B00()
{
  JUMPOUT(0x20A5543D8);
}

void sub_20A554B10()
{
  JUMPOUT(0x20A5543D8);
}

uint64_t sub_20A554B1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(unsigned __int8 *)(v0 + 16);
  sub_20A5B929C();
  sub_20A5B92B4();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_20A5B8978();
    swift_bridgeObjectRelease();
  }
  if ((v2 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  sub_20A5B92A8();
  return sub_20A5B92CC();
}

void sub_20A554BDC()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554BE4()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554BEC()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554BF4()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554BFC()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554C04()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554C0C()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554C14()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554C1C()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554C24()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554C2C()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554C34()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554C3C()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554C44()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554C4C()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554C54()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554C5C()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554C64()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554C6C()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554C74()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554C7C()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554C84()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554C8C()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554C94()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554C9C()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554CA4()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554CAC()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554CB4()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554CBC()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554CC4()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554CCC()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554CD4()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554CDC()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554CE4()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554CEC()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554CF4()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554CFC()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554D04()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554D0C()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554D14()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554D1C()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554D24()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554D2C()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554D34()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554D3C()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554D44()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554D4C()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554D54()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554D5C()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554D64()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554D6C()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554D74()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554D7C()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554D84()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554D8C()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554D94()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554D9C()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554DA4()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554DAC()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554DB4()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554DBC()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554DC8()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554DD8()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554DE8()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554DF0()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554DF8()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554E00()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554E08()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554E10()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554E18()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554E20()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554E28()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554E30()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554E38()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554E40()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554E48()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554E50()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554E58()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554E60()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554E68()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554E70()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554E78()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554E80()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554E88()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554E90()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554E98()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554EA0()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554EA8()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554EB0()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554EB8()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554EC0()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554EC8()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554ED0()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554ED8()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554EE0()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554EE8()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554EF0()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554EF8()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554F04()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554F0C()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554F14()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554F1C()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554F24()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554F2C()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554F34()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554F3C()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554F44()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554F4C()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554F54()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554F5C()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554F64()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554F6C()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554F74()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554F7C()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554F84()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554F8C()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554F94()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554F9C()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554FA4()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554FAC()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554FB4()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554FBC()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554FC4()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554FCC()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554FD4()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554FDC()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554FE4()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554FEC()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554FF4()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A554FFC()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A555004()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A55500C()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A555014()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A55501C()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A555024()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A55502C()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A555034()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A55503C()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A555044()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A55504C()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A555054()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A55505C()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A555064()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A55506C()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A555074()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A55507C()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A555084()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A55508C()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A555094()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A55509C()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A5550A4()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A5550AC()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A5550B4()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A5550BC()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A5550C4()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A5550CC()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A5550D4()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A5550DC()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A5550E4()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A5550EC()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A5550F4()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A5550FC()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A555104()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A55510C()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A555114()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A55511C()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A555124()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A55512C()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A555134()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A55513C()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A555144()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A55514C()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A555154()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A55515C()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A555164()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A55516C()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A555174()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A55517C()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A555184()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A55518C()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A555194()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A55519C()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A5551A4()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A5551AC()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A5551B4()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A5551BC()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A5551C4()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A5551CC()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A5551D4()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A5551DC()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A5551E4()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A5551EC()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A5551F4()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A5551FC()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A55520C()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A55521C()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A55522C()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A55523C()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A55524C()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A55525C()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A55526C()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A55527C()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A55528C()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A55529C()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A5552AC()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A5552BC()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A5552CC()
{
  JUMPOUT(0x20A554B90);
}

void sub_20A5552DC()
{
  JUMPOUT(0x20A554B90);
}

unint64_t sub_20A5552E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t inited;
  uint64_t v5;

  if (*(_BYTE *)(a1 + 32) == 1)
  {
    v2 = *(_QWORD *)(a1 + 16);
    v1 = *(_QWORD *)(a1 + 24);
    swift_bridgeObjectRetain();
    v3 = sub_20A4C18E4(v2, v1);
    swift_bridgeObjectRelease();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_2545FA940);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_20A5BA9A0;
    *(_QWORD *)(inited + 32) = 0x646F43726F727265;
    *(_QWORD *)(inited + 40) = 0xE900000000000065;
    v5 = MEMORY[0x24BEE1778];
    *(_QWORD *)(inited + 72) = MEMORY[0x24BEE1768];
    *(_QWORD *)(inited + 80) = v5;
    *(_QWORD *)(inited + 48) = -5;
    return sub_20A469B08(inited);
  }
  return v3;
}

uint64_t sub_20A5553BC@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA938);
  result = MEMORY[0x24BDAC7A8](v5, v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(a1 + 16) == 1)
  {
    v10 = *v2;
    if (v10)
    {
      if (*(_QWORD *)(v10 + 16))
      {
        v11 = *(_QWORD *)a1;
        v12 = *(_QWORD *)(a1 + 8);
        swift_bridgeObjectRetain();
        sub_20A45DDBC(v11, v12, 1);
        v13 = sub_20A47094C(v11, v12);
        if ((v14 & 1) != 0)
        {
          v15 = v13;
          v16 = *(_QWORD *)(v10 + 56);
          v17 = type metadata accessor for ODIKnownBinding();
          v18 = *(_QWORD *)(v17 - 8);
          sub_20A4797C4(v16 + *(_QWORD *)(v18 + 72) * v15, (uint64_t)v9);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v9, 0, 1, v17);
        }
        else
        {
          v17 = type metadata accessor for ODIKnownBinding();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v9, 1, 1, v17);
        }
        sub_20A45DDCC(v11, v12, 1);
        type metadata accessor for ODIKnownBinding();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v9, 1, v17) != 1)
        {
          sub_20A44CE2C((uint64_t)v9, &qword_2545FA938);
          result = swift_bridgeObjectRelease();
          v19 = -47;
          goto LABEL_13;
        }
      }
      else
      {
        v21 = type metadata accessor for ODIKnownBinding();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v9, 1, 1, v21);
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      v20 = type metadata accessor for ODIKnownBinding();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v9, 1, 1, v20);
    }
    sub_20A44CE2C((uint64_t)v9, &qword_2545FA938);
    result = swift_bridgeObjectRelease();
    v19 = -46;
  }
  else
  {
    v19 = -42;
  }
LABEL_13:
  *a2 = v19;
  return result;
}

uint64_t sub_20A5555B8(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  uint64_t v11;
  char v12;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FC0B8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v9 = *((_BYTE *)v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A59858C();
  sub_20A5B92FC();
  v11 = v8;
  v12 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FC0A8);
  sub_20A44D20C(&qword_2545FC0C0, &qword_2545FC0A8, (uint64_t)&unk_20A5C2080);
  sub_20A5B9140();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_20A5556E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v4[4];

  v1 = *(_QWORD *)v0;
  v2 = *(unsigned __int8 *)(v0 + 8);
  sub_20A5B929C();
  sub_20A5B92B4();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_20A57DBAC(v4, v1);
    swift_bridgeObjectRelease();
  }
  if ((v2 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  sub_20A5B92A8();
  return sub_20A5B92CC();
}

void sub_20A5557A4()
{
  JUMPOUT(0x20A555758);
}

void sub_20A5557AC()
{
  JUMPOUT(0x20A555758);
}

void sub_20A5557B4()
{
  JUMPOUT(0x20A555758);
}

void sub_20A5557BC()
{
  JUMPOUT(0x20A555758);
}

void sub_20A5557C4()
{
  JUMPOUT(0x20A555758);
}

void sub_20A5557CC()
{
  JUMPOUT(0x20A555758);
}

void sub_20A5557D4()
{
  JUMPOUT(0x20A555758);
}

void sub_20A5557DC()
{
  JUMPOUT(0x20A555758);
}

void sub_20A5557E4()
{
  JUMPOUT(0x20A555758);
}

void sub_20A5557EC()
{
  JUMPOUT(0x20A555758);
}

void sub_20A5557F4()
{
  JUMPOUT(0x20A555758);
}

void sub_20A5557FC()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555804()
{
  JUMPOUT(0x20A555758);
}

void sub_20A55580C()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555814()
{
  JUMPOUT(0x20A555758);
}

void sub_20A55581C()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555824()
{
  JUMPOUT(0x20A555758);
}

void sub_20A55582C()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555834()
{
  JUMPOUT(0x20A555758);
}

void sub_20A55583C()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555844()
{
  JUMPOUT(0x20A555758);
}

void sub_20A55584C()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555854()
{
  JUMPOUT(0x20A555758);
}

void sub_20A55585C()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555864()
{
  JUMPOUT(0x20A555758);
}

void sub_20A55586C()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555874()
{
  JUMPOUT(0x20A555758);
}

void sub_20A55587C()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555884()
{
  JUMPOUT(0x20A555758);
}

void sub_20A55588C()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555894()
{
  JUMPOUT(0x20A555758);
}

void sub_20A55589C()
{
  JUMPOUT(0x20A555758);
}

void sub_20A5558A4()
{
  JUMPOUT(0x20A555758);
}

void sub_20A5558AC()
{
  JUMPOUT(0x20A555758);
}

void sub_20A5558B4()
{
  JUMPOUT(0x20A555758);
}

void sub_20A5558BC()
{
  JUMPOUT(0x20A555758);
}

void sub_20A5558C4()
{
  JUMPOUT(0x20A555758);
}

void sub_20A5558CC()
{
  JUMPOUT(0x20A555758);
}

void sub_20A5558D4()
{
  JUMPOUT(0x20A555758);
}

void sub_20A5558DC()
{
  JUMPOUT(0x20A555758);
}

void sub_20A5558E4()
{
  JUMPOUT(0x20A555758);
}

void sub_20A5558EC()
{
  JUMPOUT(0x20A555758);
}

void sub_20A5558F4()
{
  JUMPOUT(0x20A555758);
}

void sub_20A5558FC()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555904()
{
  JUMPOUT(0x20A555758);
}

void sub_20A55590C()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555914()
{
  JUMPOUT(0x20A555758);
}

void sub_20A55591C()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555924()
{
  JUMPOUT(0x20A555758);
}

void sub_20A55592C()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555934()
{
  JUMPOUT(0x20A555758);
}

void sub_20A55593C()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555944()
{
  JUMPOUT(0x20A555758);
}

void sub_20A55594C()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555954()
{
  JUMPOUT(0x20A555758);
}

void sub_20A55595C()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555964()
{
  JUMPOUT(0x20A555758);
}

void sub_20A55596C()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555974()
{
  JUMPOUT(0x20A555758);
}

void sub_20A55597C()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555984()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555990()
{
  JUMPOUT(0x20A555758);
}

void sub_20A5559A0()
{
  JUMPOUT(0x20A555758);
}

void sub_20A5559B0()
{
  JUMPOUT(0x20A555758);
}

void sub_20A5559B8()
{
  JUMPOUT(0x20A555758);
}

void sub_20A5559C0()
{
  JUMPOUT(0x20A555758);
}

void sub_20A5559C8()
{
  JUMPOUT(0x20A555758);
}

void sub_20A5559D0()
{
  JUMPOUT(0x20A555758);
}

void sub_20A5559D8()
{
  JUMPOUT(0x20A555758);
}

void sub_20A5559E0()
{
  JUMPOUT(0x20A555758);
}

void sub_20A5559E8()
{
  JUMPOUT(0x20A555758);
}

void sub_20A5559F0()
{
  JUMPOUT(0x20A555758);
}

void sub_20A5559F8()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555A00()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555A08()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555A10()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555A18()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555A20()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555A28()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555A30()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555A38()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555A40()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555A48()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555A50()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555A58()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555A60()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555A68()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555A70()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555A78()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555A80()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555A88()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555A90()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555A98()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555AA0()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555AA8()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555AB0()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555AB8()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555AC0()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555ACC()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555AD4()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555ADC()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555AE4()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555AEC()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555AF4()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555AFC()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555B04()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555B0C()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555B14()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555B1C()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555B24()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555B2C()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555B34()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555B3C()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555B44()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555B4C()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555B54()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555B5C()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555B64()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555B6C()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555B74()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555B7C()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555B84()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555B8C()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555B94()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555B9C()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555BA4()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555BAC()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555BB4()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555BBC()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555BC4()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555BCC()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555BD4()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555BDC()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555BE4()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555BEC()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555BF4()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555BFC()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555C04()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555C0C()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555C14()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555C1C()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555C24()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555C2C()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555C34()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555C3C()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555C44()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555C4C()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555C54()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555C5C()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555C64()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555C6C()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555C74()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555C7C()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555C84()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555C8C()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555C94()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555C9C()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555CA4()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555CAC()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555CB4()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555CBC()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555CC4()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555CCC()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555CD4()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555CDC()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555CE4()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555CEC()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555CF4()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555CFC()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555D04()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555D0C()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555D14()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555D1C()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555D24()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555D2C()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555D34()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555D3C()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555D44()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555D4C()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555D54()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555D5C()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555D64()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555D6C()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555D74()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555D7C()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555D84()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555D8C()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555D94()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555D9C()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555DA4()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555DAC()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555DB4()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555DBC()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555DC4()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555DD4()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555DE4()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555DF4()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555E04()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555E14()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555E24()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555E34()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555E44()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555E54()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555E64()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555E74()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555E84()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555E94()
{
  JUMPOUT(0x20A555758);
}

void sub_20A555EA4()
{
  JUMPOUT(0x20A555758);
}

uint64_t sub_20A555EB0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;

  v15 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FC098);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A46AC70(MEMORY[0x24BEE4AF8]);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A59858C();
  sub_20A5B92F0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v9 = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545FC0A8);
    sub_20A44D20C(&qword_2545FC0B0, &qword_2545FC0A8, (uint64_t)&unk_20A5C20A8);
    sub_20A5B90A4();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    v11 = v13;
    v12 = v14;
    swift_bridgeObjectRelease();
    *(_QWORD *)v9 = v11;
    *(_BYTE *)(v9 + 8) = v12;
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return swift_bridgeObjectRelease();
}

unint64_t sub_20A556038()
{
  return 0xD000000000000010;
}

uint64_t sub_20A556054@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A599360(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_20A55607C()
{
  sub_20A59858C();
  return sub_20A5B9314();
}

uint64_t sub_20A5560A4()
{
  sub_20A59858C();
  return sub_20A5B9320();
}

uint64_t sub_20A5560D4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A555EB0(a1, a2);
}

uint64_t sub_20A5560E8(_QWORD *a1)
{
  return sub_20A5555B8(a1);
}

uint64_t sub_20A556100(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v2 = v1;
  v4 = *(_QWORD *)v2;
  v5 = *(unsigned __int8 *)(v2 + 8);
  if (*(_QWORD *)v2)
  {
    sub_20A5B92B4();
    swift_bridgeObjectRetain();
    sub_20A57DBAC(a1, v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_20A5B92B4();
  }
  if ((v5 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  return sub_20A5B92A8();
}

void sub_20A5561A0()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5561A8()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5561B0()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5561B8()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5561C0()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5561C8()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5561D0()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5561D8()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5561E0()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5561E8()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5561F0()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5561F8()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556200()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556208()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556210()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556218()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556220()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556228()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556230()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556238()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556240()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556248()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556250()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556258()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556260()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556268()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556270()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556278()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556280()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556288()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556290()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556298()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5562A0()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5562A8()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5562B0()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5562B8()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5562C0()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5562C8()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5562D0()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5562D8()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5562E0()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5562E8()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5562F0()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5562F8()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556300()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556308()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556310()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556318()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556320()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556328()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556330()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556338()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556340()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556348()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556350()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556358()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556360()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556368()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556370()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556378()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556380()
{
  JUMPOUT(0x20A556168);
}

void sub_20A55638C()
{
  JUMPOUT(0x20A556168);
}

void sub_20A55639C()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5563AC()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5563B4()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5563BC()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5563C4()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5563CC()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5563D4()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5563DC()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5563E4()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5563EC()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5563F4()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5563FC()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556404()
{
  JUMPOUT(0x20A556168);
}

void sub_20A55640C()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556414()
{
  JUMPOUT(0x20A556168);
}

void sub_20A55641C()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556424()
{
  JUMPOUT(0x20A556168);
}

void sub_20A55642C()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556434()
{
  JUMPOUT(0x20A556168);
}

void sub_20A55643C()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556444()
{
  JUMPOUT(0x20A556168);
}

void sub_20A55644C()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556454()
{
  JUMPOUT(0x20A556168);
}

void sub_20A55645C()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556464()
{
  JUMPOUT(0x20A556168);
}

void sub_20A55646C()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556474()
{
  JUMPOUT(0x20A556168);
}

void sub_20A55647C()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556484()
{
  JUMPOUT(0x20A556168);
}

void sub_20A55648C()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556494()
{
  JUMPOUT(0x20A556168);
}

void sub_20A55649C()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5564A4()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5564AC()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5564B4()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5564BC()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5564C8()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5564D0()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5564D8()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5564E0()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5564E8()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5564F0()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5564F8()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556500()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556508()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556510()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556518()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556520()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556528()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556530()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556538()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556540()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556548()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556550()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556558()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556560()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556568()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556570()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556578()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556580()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556588()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556590()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556598()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5565A0()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5565A8()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5565B0()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5565B8()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5565C0()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5565C8()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5565D0()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5565D8()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5565E0()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5565E8()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5565F0()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5565F8()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556600()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556608()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556610()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556618()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556620()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556628()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556630()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556638()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556640()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556648()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556650()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556658()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556660()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556668()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556670()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556678()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556680()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556688()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556690()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556698()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5566A0()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5566A8()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5566B0()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5566B8()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5566C0()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5566C8()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5566D0()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5566D8()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5566E0()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5566E8()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5566F0()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5566F8()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556700()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556708()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556710()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556718()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556720()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556728()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556730()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556738()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556740()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556748()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556750()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556758()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556760()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556768()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556770()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556778()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556780()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556788()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556790()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556798()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5567A0()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5567A8()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5567B0()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5567B8()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5567C0()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5567D0()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5567E0()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5567F0()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556800()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556810()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556820()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556830()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556840()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556850()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556860()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556870()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556880()
{
  JUMPOUT(0x20A556168);
}

void sub_20A556890()
{
  JUMPOUT(0x20A556168);
}

void sub_20A5568A0()
{
  JUMPOUT(0x20A556168);
}

uint64_t sub_20A5568AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v4[4];

  v1 = *(_QWORD *)v0;
  v2 = *(unsigned __int8 *)(v0 + 8);
  sub_20A5B929C();
  sub_20A5B92B4();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_20A57DBAC(v4, v1);
    swift_bridgeObjectRelease();
  }
  if ((v2 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  sub_20A5B92A8();
  return sub_20A5B92CC();
}

void sub_20A556968()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556970()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556978()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556980()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556988()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556990()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556998()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A5569A0()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A5569A8()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A5569B0()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A5569B8()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A5569C0()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A5569C8()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A5569D0()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A5569D8()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A5569E0()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A5569E8()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A5569F0()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A5569F8()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556A00()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556A08()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556A10()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556A18()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556A20()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556A28()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556A30()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556A38()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556A40()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556A48()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556A50()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556A58()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556A60()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556A68()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556A70()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556A78()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556A80()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556A88()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556A90()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556A98()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556AA0()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556AA8()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556AB0()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556AB8()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556AC0()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556AC8()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556AD0()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556AD8()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556AE0()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556AE8()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556AF0()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556AF8()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556B00()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556B08()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556B10()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556B18()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556B20()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556B28()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556B30()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556B38()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556B40()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556B48()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556B54()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556B64()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556B74()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556B7C()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556B84()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556B8C()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556B94()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556B9C()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556BA4()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556BAC()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556BB4()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556BBC()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556BC4()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556BCC()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556BD4()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556BDC()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556BE4()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556BEC()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556BF4()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556BFC()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556C04()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556C0C()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556C14()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556C1C()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556C24()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556C2C()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556C34()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556C3C()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556C44()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556C4C()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556C54()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556C5C()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556C64()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556C6C()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556C74()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556C7C()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556C84()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556C90()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556C98()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556CA0()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556CA8()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556CB0()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556CB8()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556CC0()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556CC8()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556CD0()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556CD8()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556CE0()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556CE8()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556CF0()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556CF8()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556D00()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556D08()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556D10()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556D18()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556D20()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556D28()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556D30()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556D38()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556D40()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556D48()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556D50()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556D58()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556D60()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556D68()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556D70()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556D78()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556D80()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556D88()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556D90()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556D98()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556DA0()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556DA8()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556DB0()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556DB8()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556DC0()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556DC8()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556DD0()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556DD8()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556DE0()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556DE8()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556DF0()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556DF8()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556E00()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556E08()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556E10()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556E18()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556E20()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556E28()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556E30()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556E38()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556E40()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556E48()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556E50()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556E58()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556E60()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556E68()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556E70()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556E78()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556E80()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556E88()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556E90()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556E98()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556EA0()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556EA8()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556EB0()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556EB8()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556EC0()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556EC8()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556ED0()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556ED8()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556EE0()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556EE8()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556EF0()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556EF8()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556F00()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556F08()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556F10()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556F18()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556F20()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556F28()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556F30()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556F38()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556F40()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556F48()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556F50()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556F58()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556F60()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556F68()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556F70()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556F78()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556F80()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556F88()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556F98()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556FA8()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556FB8()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556FC8()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556FD8()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556FE8()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A556FF8()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A557008()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A557018()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A557028()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A557038()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A557048()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A557058()
{
  JUMPOUT(0x20A55691CLL);
}

void sub_20A557068()
{
  JUMPOUT(0x20A55691CLL);
}

unint64_t sub_20A557078(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  Swift::String v3;
  uint64_t inited;
  uint64_t v5;

  if (*(_BYTE *)(a1 + 32) == 1)
  {
    v2 = *(_QWORD *)(a1 + 16);
    v1 = *(void **)(a1 + 24);
    swift_bridgeObjectRetain();
    v3._countAndFlagsBits = v2;
    v3._object = v1;
    ODIDeviceSettingsBindingsName.init(rawValue:)(v3);
    __asm { BR              X10 }
  }
  __swift_instantiateConcreteTypeFromMangledName(qword_2545FA940);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A5BA9A0;
  *(_QWORD *)(inited + 32) = 0x646F43726F727265;
  *(_QWORD *)(inited + 40) = 0xE900000000000065;
  v5 = MEMORY[0x24BEE1778];
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE1768];
  *(_QWORD *)(inited + 80) = v5;
  *(_QWORD *)(inited + 48) = -5;
  return sub_20A469B08(inited);
}

void sub_20A5571B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  __int16 v10;
  __int16 v11;

  sub_20A537D6C(a10, v10 | (v11 << 8), MEMORY[0x24BEE1768], MEMORY[0x24BEE1778]);
  JUMPOUT(0x20A557174);
}

void sub_20A5571D8()
{
  __int16 v0;
  uint64_t v1;
  __int16 v2;

  sub_20A537D6C(v1, v2 | (v0 << 8), MEMORY[0x24BEE1768], MEMORY[0x24BEE1778]);
  JUMPOUT(0x20A557174);
}

void sub_20A5571F8()
{
  __swift_instantiateConcreteTypeFromMangledName(qword_2545FA940);
  JUMPOUT(0x20A557128);
}

uint64_t sub_20A55720C@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  void *v2;
  uint64_t v3;
  Swift::String v4;

  if (*(_BYTE *)(result + 16) == 1)
  {
    v3 = *(_QWORD *)result;
    v2 = *(void **)(result + 8);
    swift_bridgeObjectRetain();
    v4._countAndFlagsBits = v3;
    v4._object = v2;
    ODIDeviceSettingsBindingsName.init(rawValue:)(v4);
    __asm { BR              X10 }
  }
  *a2 = -42;
  return result;
}

void sub_20A5572AC()
{
  _BYTE *v0;
  char v1;

  *v0 = v1;
  JUMPOUT(0x20A557290);
}

void sub_20A5572B4()
{
  _BYTE *v0;
  char v1;

  *v0 = v1;
  JUMPOUT(0x20A557290);
}

void sub_20A5572BC()
{
  _BYTE *v0;
  char v1;

  *v0 = v1;
  JUMPOUT(0x20A557290);
}

uint64_t sub_20A5572C4()
{
  _BYTE *v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;

  v1 = v0[1];
  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[16];
  v5 = v0[17];
  v6 = v0[32];
  v7 = v0[33];
  if (*v0 != 2)
    sub_20A5B92B4();
  sub_20A5B92B4();
  if ((v1 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  sub_20A5B92A8();
  if (v2 != 2)
    sub_20A5B92B4();
  sub_20A5B92B4();
  if ((v3 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  sub_20A5B92A8();
  sub_20A5B92B4();
  if (!v4)
    sub_20A5B92A8();
  if ((v5 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  sub_20A5B92A8();
  sub_20A5B92B4();
  if (!v6)
    sub_20A5B92A8();
  if ((v7 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  return sub_20A5B92A8();
}

void sub_20A5574C8()
{
  JUMPOUT(0x20A557480);
}

void sub_20A5574D0()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5574D8()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5574E0()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5574E8()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5574F0()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5574F8()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557500()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557508()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557510()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557518()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557520()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557528()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557530()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557538()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557540()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557548()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557550()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557558()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557560()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557568()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557570()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557578()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557580()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557588()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557590()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557598()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5575A0()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5575A8()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5575B0()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5575B8()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5575C0()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5575C8()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5575D0()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5575D8()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5575E0()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5575E8()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5575F0()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5575F8()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557600()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557608()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557610()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557618()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557620()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557628()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557630()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557638()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557640()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557648()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557650()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557658()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557660()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557668()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557670()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557678()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557680()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557688()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557690()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557698()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5576A0()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5576A8()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5576B4()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5576C4()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5576D4()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5576DC()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5576E4()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5576EC()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5576F4()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5576FC()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557704()
{
  JUMPOUT(0x20A557350);
}

void sub_20A55770C()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557714()
{
  JUMPOUT(0x20A557350);
}

void sub_20A55771C()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557724()
{
  JUMPOUT(0x20A557350);
}

void sub_20A55772C()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557734()
{
  JUMPOUT(0x20A557350);
}

void sub_20A55773C()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557744()
{
  JUMPOUT(0x20A557350);
}

void sub_20A55774C()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557754()
{
  JUMPOUT(0x20A557350);
}

void sub_20A55775C()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557764()
{
  JUMPOUT(0x20A557350);
}

void sub_20A55776C()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557774()
{
  JUMPOUT(0x20A557350);
}

void sub_20A55777C()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557784()
{
  JUMPOUT(0x20A557350);
}

void sub_20A55778C()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557794()
{
  JUMPOUT(0x20A557350);
}

void sub_20A55779C()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5577A4()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5577AC()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5577B4()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5577BC()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5577C4()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5577CC()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5577D4()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5577DC()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5577E4()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5577F0()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5577F8()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557800()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557808()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557810()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557818()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557820()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557828()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557830()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557838()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557840()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557848()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557850()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557858()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557860()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557868()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557870()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557878()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557880()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557888()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557890()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557898()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5578A0()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5578A8()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5578B0()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5578B8()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5578C0()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5578C8()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5578D0()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5578D8()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5578E0()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5578E8()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5578F0()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5578F8()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557900()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557908()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557910()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557918()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557920()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557928()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557930()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557938()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557940()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557948()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557950()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557958()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557960()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557968()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557970()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557978()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557980()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557988()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557990()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557998()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5579A0()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5579A8()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5579B0()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5579B8()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5579C0()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5579C8()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5579D0()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5579D8()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5579E0()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5579E8()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5579F0()
{
  JUMPOUT(0x20A557350);
}

void sub_20A5579F8()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557A00()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557A08()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557A10()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557A18()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557A20()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557A28()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557A30()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557A38()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557A40()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557A48()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557A50()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557A58()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557A60()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557A68()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557A70()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557A78()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557A80()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557A88()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557A90()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557A98()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557AA0()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557AA8()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557AB0()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557AB8()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557AC0()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557AC8()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557AD0()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557AD8()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557AE0()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557AE8()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557AF8()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557B08()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557B18()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557B28()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557B38()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557B48()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557B58()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557B68()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557B78()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557B88()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557B98()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557BA8()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557BB8()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557BC8()
{
  JUMPOUT(0x20A557350);
}

void sub_20A557BD4()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557BDC()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557BE4()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557BEC()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557BF4()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557BFC()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557C04()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557C0C()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557C14()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557C1C()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557C24()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557C2C()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557C34()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557C3C()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557C44()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557C4C()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557C54()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557C5C()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557C64()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557C6C()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557C74()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557C7C()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557C84()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557C8C()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557C94()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557C9C()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557CA4()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557CAC()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557CB4()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557CBC()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557CC4()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557CCC()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557CD4()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557CDC()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557CE4()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557CEC()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557CF4()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557CFC()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557D04()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557D0C()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557D14()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557D1C()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557D24()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557D2C()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557D34()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557D3C()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557D44()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557D4C()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557D54()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557D5C()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557D64()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557D6C()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557D74()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557D7C()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557D84()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557D8C()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557D94()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557D9C()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557DA4()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557DAC()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557DB8()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557DC8()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557DD8()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557DE0()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557DE8()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557DF0()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557DF8()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557E00()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557E08()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557E10()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557E18()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557E20()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557E28()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557E30()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557E38()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557E40()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557E48()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557E50()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557E58()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557E60()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557E68()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557E70()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557E78()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557E80()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557E88()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557E90()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557E98()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557EA0()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557EA8()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557EB0()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557EB8()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557EC0()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557EC8()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557ED0()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557ED8()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557EE0()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557EE8()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557EF4()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557EFC()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557F04()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557F0C()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557F14()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557F1C()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557F24()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557F2C()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557F34()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557F3C()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557F44()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557F4C()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557F54()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557F5C()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557F64()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557F6C()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557F74()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557F7C()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557F84()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557F8C()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557F94()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557F9C()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557FA4()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557FAC()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557FB4()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557FBC()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557FC4()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557FCC()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557FD4()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557FDC()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557FE4()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557FEC()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557FF4()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A557FFC()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A558004()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A55800C()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A558014()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A55801C()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A558024()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A55802C()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A558034()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A55803C()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A558044()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A55804C()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A558054()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A55805C()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A558064()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A55806C()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A558074()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A55807C()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A558084()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A55808C()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A558094()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A55809C()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A5580A4()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A5580AC()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A5580B4()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A5580BC()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A5580C4()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A5580CC()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A5580D4()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A5580DC()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A5580E4()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A5580EC()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A5580F4()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A5580FC()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A558104()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A55810C()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A558114()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A55811C()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A558124()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A55812C()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A558134()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A55813C()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A558144()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A55814C()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A558154()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A55815C()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A558164()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A55816C()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A558174()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A55817C()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A558184()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A55818C()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A558194()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A55819C()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A5581A4()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A5581AC()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A5581B4()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A5581BC()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A5581C4()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A5581CC()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A5581D4()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A5581DC()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A5581E4()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A5581EC()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A5581FC()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A55820C()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A55821C()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A55822C()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A55823C()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A55824C()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A55825C()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A55826C()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A55827C()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A55828C()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A55829C()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A5582AC()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A5582BC()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A5582CC()
{
  JUMPOUT(0x20A5573B8);
}

void sub_20A5582D8()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5582E0()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5582E8()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5582F0()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5582F8()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558300()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558308()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558310()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558318()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558320()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558328()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558330()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558338()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558340()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558348()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558350()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558358()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558360()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558368()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558370()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558378()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558380()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558388()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558390()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558398()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5583A0()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5583A8()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5583B0()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5583B8()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5583C0()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5583C8()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5583D0()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5583D8()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5583E0()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5583E8()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5583F0()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5583F8()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558400()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558408()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558410()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558418()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558420()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558428()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558430()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558438()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558440()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558448()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558450()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558458()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558460()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558468()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558470()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558478()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558480()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558488()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558490()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558498()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5584A0()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5584A8()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5584B0()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5584BC()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5584CC()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5584DC()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5584E4()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5584EC()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5584F4()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5584FC()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558504()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A55850C()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558514()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A55851C()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558524()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A55852C()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558534()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A55853C()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558544()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A55854C()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558554()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A55855C()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558564()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A55856C()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558574()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A55857C()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558584()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A55858C()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558594()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A55859C()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5585A4()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5585AC()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5585B4()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5585BC()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5585C4()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5585CC()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5585D4()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5585DC()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5585E4()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5585EC()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5585F8()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558600()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558608()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558610()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558618()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558620()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558628()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558630()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558638()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558640()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558648()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558650()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558658()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558660()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558668()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558670()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558678()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558680()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558688()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558690()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558698()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5586A0()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5586A8()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5586B0()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5586B8()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5586C0()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5586C8()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5586D0()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5586D8()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5586E0()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5586E8()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5586F0()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5586F8()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558700()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558708()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558710()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558718()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558720()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558728()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558730()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558738()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558740()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558748()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558750()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558758()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558760()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558768()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558770()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558778()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558780()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558788()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558790()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558798()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5587A0()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5587A8()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5587B0()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5587B8()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5587C0()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5587C8()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5587D0()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5587D8()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5587E0()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5587E8()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5587F0()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5587F8()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558800()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558808()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558810()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558818()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558820()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558828()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558830()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558838()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558840()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558848()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558850()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558858()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558860()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558868()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558870()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558878()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558880()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558888()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558890()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558898()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5588A0()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5588A8()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5588B0()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5588B8()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5588C0()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5588C8()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5588D0()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5588D8()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5588E0()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5588E8()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5588F0()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558900()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558910()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558920()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558930()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558940()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558950()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558960()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558970()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558980()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A558990()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5589A0()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5589B0()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5589C0()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5589D0()
{
  JUMPOUT(0x20A55741CLL);
}

void sub_20A5589DC()
{
  JUMPOUT(0x20A557480);
}

void sub_20A5589E4()
{
  JUMPOUT(0x20A557480);
}

void sub_20A5589EC()
{
  JUMPOUT(0x20A557480);
}

void sub_20A5589F4()
{
  JUMPOUT(0x20A557480);
}

void sub_20A5589FC()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558A04()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558A0C()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558A14()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558A1C()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558A24()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558A2C()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558A34()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558A3C()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558A44()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558A4C()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558A54()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558A5C()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558A64()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558A6C()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558A74()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558A7C()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558A84()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558A8C()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558A94()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558A9C()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558AA4()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558AAC()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558AB4()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558ABC()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558AC4()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558ACC()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558AD4()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558ADC()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558AE4()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558AEC()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558AF4()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558AFC()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558B04()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558B0C()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558B14()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558B1C()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558B24()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558B2C()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558B34()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558B3C()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558B44()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558B4C()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558B54()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558B5C()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558B64()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558B6C()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558B74()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558B7C()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558B84()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558B8C()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558B94()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558B9C()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558BA4()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558BAC()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558BB4()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558BC0()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558BD0()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558BE0()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558BE8()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558BF0()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558BF8()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558C00()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558C08()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558C10()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558C18()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558C20()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558C28()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558C30()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558C38()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558C40()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558C48()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558C50()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558C58()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558C60()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558C68()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558C70()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558C78()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558C80()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558C88()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558C90()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558C98()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558CA0()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558CA8()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558CB0()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558CB8()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558CC0()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558CC8()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558CD0()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558CD8()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558CE0()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558CE8()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558CF0()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558CFC()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558D04()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558D0C()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558D14()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558D1C()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558D24()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558D2C()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558D34()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558D3C()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558D44()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558D4C()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558D54()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558D5C()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558D64()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558D6C()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558D74()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558D7C()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558D84()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558D8C()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558D94()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558D9C()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558DA4()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558DAC()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558DB4()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558DBC()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558DC4()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558DCC()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558DD4()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558DDC()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558DE4()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558DEC()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558DF4()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558DFC()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558E04()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558E0C()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558E14()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558E1C()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558E24()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558E2C()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558E34()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558E3C()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558E44()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558E4C()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558E54()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558E5C()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558E64()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558E6C()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558E74()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558E7C()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558E84()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558E8C()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558E94()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558E9C()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558EA4()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558EAC()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558EB4()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558EBC()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558EC4()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558ECC()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558ED4()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558EDC()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558EE4()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558EEC()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558EF4()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558EFC()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558F04()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558F0C()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558F14()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558F1C()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558F24()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558F2C()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558F34()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558F3C()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558F44()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558F4C()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558F54()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558F5C()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558F64()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558F6C()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558F74()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558F7C()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558F84()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558F8C()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558F94()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558F9C()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558FA4()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558FAC()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558FB4()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558FBC()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558FC4()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558FCC()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558FD4()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558FDC()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558FE4()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558FEC()
{
  JUMPOUT(0x20A557480);
}

void sub_20A558FF4()
{
  JUMPOUT(0x20A557480);
}

void sub_20A559004()
{
  JUMPOUT(0x20A557480);
}

void sub_20A559014()
{
  JUMPOUT(0x20A557480);
}

void sub_20A559024()
{
  JUMPOUT(0x20A557480);
}

void sub_20A559034()
{
  JUMPOUT(0x20A557480);
}

void sub_20A559044()
{
  JUMPOUT(0x20A557480);
}

void sub_20A559054()
{
  JUMPOUT(0x20A557480);
}

void sub_20A559064()
{
  JUMPOUT(0x20A557480);
}

void sub_20A559074()
{
  JUMPOUT(0x20A557480);
}

void sub_20A559084()
{
  JUMPOUT(0x20A557480);
}

void sub_20A559094()
{
  JUMPOUT(0x20A557480);
}

void sub_20A5590A4()
{
  JUMPOUT(0x20A557480);
}

void sub_20A5590B4()
{
  JUMPOUT(0x20A557480);
}

void sub_20A5590C4()
{
  JUMPOUT(0x20A557480);
}

void sub_20A5590D4()
{
  JUMPOUT(0x20A557480);
}

uint64_t sub_20A5590E0(_QWORD *a1)
{
  __int16 *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int16 v9;
  int v10;
  char v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  int v18;
  int v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  char v23;
  char v24;
  int v25;
  char v26;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FC108);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v25 = *((unsigned __int8 *)v1 + 2);
  v21 = *((unsigned __int8 *)v1 + 3);
  v20 = *((_QWORD *)v1 + 1);
  v10 = *((unsigned __int8 *)v1 + 16);
  v18 = *((unsigned __int8 *)v1 + 17);
  v19 = v10;
  v15 = *((_QWORD *)v1 + 3);
  LODWORD(v7) = *((unsigned __int8 *)v1 + 33);
  v16 = *((unsigned __int8 *)v1 + 32);
  v17 = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A5986EC();
  sub_20A5B92FC();
  LOWORD(v22) = v9;
  v26 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FC018);
  sub_20A44D20C(&qword_2545FC030, &qword_2545FC018, (uint64_t)&unk_20A5C2080);
  sub_20A5B9140();
  if (!v2)
  {
    v11 = v19;
    v12 = v20;
    LOBYTE(v22) = v25;
    BYTE1(v22) = v21;
    v26 = 1;
    sub_20A5B9140();
    v22 = v12;
    v23 = v11;
    v24 = v18;
    v26 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545FBF88);
    sub_20A44D20C(&qword_2545FBFA0, &qword_2545FBF88, (uint64_t)&unk_20A5C2080);
    sub_20A5B9140();
    v22 = v15;
    v23 = v16;
    v24 = v17;
    v26 = 3;
    sub_20A5B9140();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_20A559348()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  v4 = v0[3];
  v5 = v0[16];
  v6 = v0[17];
  v7 = v0[32];
  v8 = v0[33];
  sub_20A5B929C();
  if (v1 != 2)
    sub_20A5B92B4();
  sub_20A5B92B4();
  if ((v2 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  sub_20A5B92A8();
  if (v3 != 2)
    sub_20A5B92B4();
  sub_20A5B92B4();
  if ((v4 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  sub_20A5B92A8();
  sub_20A5B92B4();
  if (!v5)
    sub_20A5B92A8();
  if ((v6 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  sub_20A5B92A8();
  sub_20A5B92B4();
  if (!v7)
    sub_20A5B92A8();
  if ((v8 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  sub_20A5B92A8();
  return sub_20A5B92CC();
}

void sub_20A559598()
{
  JUMPOUT(0x20A559540);
}

void sub_20A5595A0()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A5595A8()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A5595B0()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A5595B8()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A5595C0()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A5595C8()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A5595D0()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A5595D8()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A5595E0()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A5595E8()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A5595F0()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A5595F8()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559600()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559608()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559610()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559618()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559620()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559628()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559630()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559638()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559640()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559648()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559650()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559658()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559660()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559668()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559670()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559678()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559680()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559688()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559690()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559698()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A5596A0()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A5596A8()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A5596B0()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A5596B8()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A5596C0()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A5596C8()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A5596D0()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A5596D8()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A5596E0()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A5596E8()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A5596F0()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A5596F8()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559700()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559708()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559710()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559718()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559720()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559728()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559730()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559738()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559740()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559748()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559750()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559758()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559760()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559768()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559770()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559778()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559784()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559794()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A5597A4()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A5597AC()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A5597B4()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A5597BC()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A5597C4()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A5597CC()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A5597D4()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A5597DC()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A5597E4()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A5597EC()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A5597F4()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A5597FC()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559804()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A55980C()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559814()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A55981C()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559824()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A55982C()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559834()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A55983C()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559844()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A55984C()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559854()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A55985C()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559864()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A55986C()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559874()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A55987C()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559884()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A55988C()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559894()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A55989C()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A5598A4()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A5598AC()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A5598B4()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A5598C0()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A5598C8()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A5598D0()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A5598D8()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A5598E0()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A5598E8()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A5598F0()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A5598F8()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559900()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559908()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559910()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559918()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559920()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559928()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559930()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559938()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559940()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559948()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559950()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559958()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559960()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559968()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559970()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559978()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559980()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559988()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559990()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559998()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A5599A0()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A5599A8()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A5599B0()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A5599B8()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A5599C0()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A5599C8()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A5599D0()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A5599D8()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A5599E0()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A5599E8()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A5599F0()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A5599F8()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559A00()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559A08()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559A10()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559A18()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559A20()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559A28()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559A30()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559A38()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559A40()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559A48()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559A50()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559A58()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559A60()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559A68()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559A70()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559A78()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559A80()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559A88()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559A90()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559A98()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559AA0()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559AA8()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559AB0()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559AB8()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559AC0()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559AC8()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559AD0()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559AD8()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559AE0()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559AE8()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559AF0()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559AF8()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559B00()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559B08()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559B10()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559B18()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559B20()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559B28()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559B30()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559B38()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559B40()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559B48()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559B50()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559B58()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559B60()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559B68()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559B70()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559B78()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559B80()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559B88()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559B90()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559B98()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559BA0()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559BA8()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559BB0()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559BB8()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559BC8()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559BD8()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559BE8()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559BF8()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559C08()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559C18()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559C28()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559C38()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559C48()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559C58()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559C68()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559C78()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559C88()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559C98()
{
  JUMPOUT(0x20A5593E0);
}

void sub_20A559CA4()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559CAC()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559CB4()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559CBC()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559CC4()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559CCC()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559CD4()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559CDC()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559CE4()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559CEC()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559CF4()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559CFC()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559D04()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559D0C()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559D14()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559D1C()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559D24()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559D2C()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559D34()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559D3C()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559D44()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559D4C()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559D54()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559D5C()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559D64()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559D6C()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559D74()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559D7C()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559D84()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559D8C()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559D94()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559D9C()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559DA4()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559DAC()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559DB4()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559DBC()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559DC4()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559DCC()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559DD4()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559DDC()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559DE4()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559DEC()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559DF4()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559DFC()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559E04()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559E0C()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559E14()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559E1C()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559E24()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559E2C()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559E34()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559E3C()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559E44()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559E4C()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559E54()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559E5C()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559E64()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559E6C()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559E74()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559E7C()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559E88()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559E98()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559EA8()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559EB0()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559EB8()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559EC0()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559EC8()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559ED0()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559ED8()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559EE0()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559EE8()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559EF0()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559EF8()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559F00()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559F08()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559F10()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559F18()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559F20()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559F28()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559F30()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559F38()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559F40()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559F48()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559F50()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559F58()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559F60()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559F68()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559F70()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559F78()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559F80()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559F88()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559F90()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559F98()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559FA0()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559FA8()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559FB0()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559FB8()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559FC4()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559FCC()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559FD4()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559FDC()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559FE4()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559FEC()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559FF4()
{
  JUMPOUT(0x20A559458);
}

void sub_20A559FFC()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A004()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A00C()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A014()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A01C()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A024()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A02C()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A034()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A03C()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A044()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A04C()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A054()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A05C()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A064()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A06C()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A074()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A07C()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A084()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A08C()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A094()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A09C()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A0A4()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A0AC()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A0B4()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A0BC()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A0C4()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A0CC()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A0D4()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A0DC()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A0E4()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A0EC()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A0F4()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A0FC()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A104()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A10C()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A114()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A11C()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A124()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A12C()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A134()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A13C()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A144()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A14C()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A154()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A15C()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A164()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A16C()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A174()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A17C()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A184()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A18C()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A194()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A19C()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A1A4()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A1AC()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A1B4()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A1BC()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A1C4()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A1CC()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A1D4()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A1DC()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A1E4()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A1EC()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A1F4()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A1FC()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A204()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A20C()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A214()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A21C()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A224()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A22C()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A234()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A23C()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A244()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A24C()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A254()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A25C()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A264()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A26C()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A274()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A27C()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A284()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A28C()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A294()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A29C()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A2A4()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A2AC()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A2B4()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A2BC()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A2CC()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A2DC()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A2EC()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A2FC()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A30C()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A31C()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A32C()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A33C()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A34C()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A35C()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A36C()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A37C()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A38C()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A39C()
{
  JUMPOUT(0x20A559458);
}

void sub_20A55A3A8()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A3B0()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A3B8()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A3C0()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A3C8()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A3D0()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A3D8()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A3E0()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A3E8()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A3F0()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A3F8()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A400()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A408()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A410()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A418()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A420()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A428()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A430()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A438()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A440()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A448()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A450()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A458()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A460()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A468()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A470()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A478()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A480()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A488()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A490()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A498()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A4A0()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A4A8()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A4B0()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A4B8()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A4C0()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A4C8()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A4D0()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A4D8()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A4E0()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A4E8()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A4F0()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A4F8()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A500()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A508()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A510()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A518()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A520()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A528()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A530()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A538()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A540()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A548()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A550()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A558()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A560()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A568()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A570()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A578()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A580()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A58C()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A59C()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A5AC()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A5B4()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A5BC()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A5C4()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A5CC()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A5D4()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A5DC()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A5E4()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A5EC()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A5F4()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A5FC()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A604()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A60C()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A614()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A61C()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A624()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A62C()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A634()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A63C()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A644()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A64C()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A654()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A65C()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A664()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A66C()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A674()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A67C()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A684()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A68C()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A694()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A69C()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A6A4()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A6AC()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A6B4()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A6BC()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A6C8()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A6D0()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A6D8()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A6E0()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A6E8()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A6F0()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A6F8()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A700()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A708()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A710()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A718()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A720()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A728()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A730()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A738()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A740()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A748()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A750()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A758()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A760()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A768()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A770()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A778()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A780()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A788()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A790()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A798()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A7A0()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A7A8()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A7B0()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A7B8()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A7C0()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A7C8()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A7D0()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A7D8()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A7E0()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A7E8()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A7F0()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A7F8()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A800()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A808()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A810()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A818()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A820()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A828()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A830()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A838()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A840()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A848()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A850()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A858()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A860()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A868()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A870()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A878()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A880()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A888()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A890()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A898()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A8A0()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A8A8()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A8B0()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A8B8()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A8C0()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A8C8()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A8D0()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A8D8()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A8E0()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A8E8()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A8F0()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A8F8()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A900()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A908()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A910()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A918()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A920()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A928()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A930()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A938()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A940()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A948()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A950()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A958()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A960()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A968()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A970()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A978()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A980()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A988()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A990()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A998()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A9A0()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A9A8()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A9B0()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A9B8()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A9C0()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A9D0()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A9E0()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55A9F0()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55AA00()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55AA10()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55AA20()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55AA30()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55AA40()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55AA50()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55AA60()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55AA70()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55AA80()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55AA90()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55AAA0()
{
  JUMPOUT(0x20A5594CCLL);
}

void sub_20A55AAAC()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AAB4()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AABC()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AAC4()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AACC()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AAD4()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AADC()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AAE4()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AAEC()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AAF4()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AAFC()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AB04()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AB0C()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AB14()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AB1C()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AB24()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AB2C()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AB34()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AB3C()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AB44()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AB4C()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AB54()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AB5C()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AB64()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AB6C()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AB74()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AB7C()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AB84()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AB8C()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AB94()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AB9C()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55ABA4()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55ABAC()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55ABB4()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55ABBC()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55ABC4()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55ABCC()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55ABD4()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55ABDC()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55ABE4()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55ABEC()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55ABF4()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55ABFC()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AC04()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AC0C()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AC14()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AC1C()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AC24()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AC2C()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AC34()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AC3C()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AC44()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AC4C()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AC54()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AC5C()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AC64()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AC6C()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AC74()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AC7C()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AC84()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AC90()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55ACA0()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55ACB0()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55ACB8()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55ACC0()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55ACC8()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55ACD0()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55ACD8()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55ACE0()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55ACE8()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55ACF0()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55ACF8()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AD00()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AD08()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AD10()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AD18()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AD20()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AD28()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AD30()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AD38()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AD40()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AD48()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AD50()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AD58()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AD60()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AD68()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AD70()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AD78()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AD80()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AD88()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AD90()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AD98()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55ADA0()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55ADA8()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55ADB0()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55ADB8()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55ADC0()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55ADCC()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55ADD4()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55ADDC()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55ADE4()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55ADEC()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55ADF4()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55ADFC()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AE04()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AE0C()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AE14()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AE1C()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AE24()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AE2C()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AE34()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AE3C()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AE44()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AE4C()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AE54()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AE5C()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AE64()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AE6C()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AE74()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AE7C()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AE84()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AE8C()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AE94()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AE9C()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AEA4()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AEAC()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AEB4()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AEBC()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AEC4()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AECC()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AED4()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AEDC()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AEE4()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AEEC()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AEF4()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AEFC()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AF04()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AF0C()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AF14()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AF1C()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AF24()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AF2C()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AF34()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AF3C()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AF44()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AF4C()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AF54()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AF5C()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AF64()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AF6C()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AF74()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AF7C()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AF84()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AF8C()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AF94()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AF9C()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AFA4()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AFAC()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AFB4()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AFBC()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AFC4()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AFCC()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AFD4()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AFDC()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AFE4()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AFEC()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AFF4()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55AFFC()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55B004()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55B00C()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55B014()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55B01C()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55B024()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55B02C()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55B034()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55B03C()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55B044()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55B04C()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55B054()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55B05C()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55B064()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55B06C()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55B074()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55B07C()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55B084()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55B08C()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55B094()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55B09C()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55B0A4()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55B0AC()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55B0B4()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55B0BC()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55B0C4()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55B0D4()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55B0E4()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55B0F4()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55B104()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55B114()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55B124()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55B134()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55B144()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55B154()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55B164()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55B174()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55B184()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55B194()
{
  JUMPOUT(0x20A559540);
}

void sub_20A55B1A4()
{
  JUMPOUT(0x20A559540);
}

uint64_t sub_20A55B1B0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  unsigned __int8 v12;
  unsigned __int8 v13;
  int v14;
  int v15;
  uint64_t v16;
  int v17;
  int v18;
  int v19;
  uint64_t v20;
  unsigned __int8 v21;
  unsigned __int8 v22;
  int v23;
  char v24;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FC0F8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A5986EC();
  sub_20A5B92F0();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545FC018);
    v24 = 0;
    sub_20A44D20C(&qword_2545FC020, &qword_2545FC018, (uint64_t)&unk_20A5C20A8);
    sub_20A5B90A4();
    v23 = v20;
    v19 = BYTE1(v20);
    v24 = 1;
    sub_20A5B90A4();
    v17 = BYTE1(v20);
    v18 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545FBF88);
    v24 = 2;
    sub_20A44D20C(&qword_2545FBF90, &qword_2545FBF88, (uint64_t)&unk_20A5C20A8);
    sub_20A5B90A4();
    v16 = v20;
    v14 = v22;
    v15 = v21;
    v24 = 3;
    sub_20A5B90A4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    v11 = v20;
    v12 = v21;
    v13 = v22;
    *(_BYTE *)a2 = v23;
    *(_BYTE *)(a2 + 1) = v19;
    *(_BYTE *)(a2 + 2) = v18;
    *(_BYTE *)(a2 + 3) = v17;
    *(_QWORD *)(a2 + 8) = v16;
    *(_BYTE *)(a2 + 16) = v15;
    *(_BYTE *)(a2 + 17) = v14;
    *(_QWORD *)(a2 + 24) = v11;
    *(_BYTE *)(a2 + 32) = v12;
    *(_BYTE *)(a2 + 33) = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_20A55B458()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_20A55B494 + 4 * byte_20A5CEC64[*v0]))(0x6563697665447369, 0xEE0064656B636F4CLL);
}

unint64_t sub_20A55B494()
{
  return 0xD000000000000014;
}

unint64_t sub_20A55B4B4()
{
  return 0xD000000000000011;
}

uint64_t sub_20A55B4D0()
{
  return 0x614C656369766564;
}

uint64_t sub_20A55B4F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A5993E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A55B518()
{
  sub_20A5986EC();
  return sub_20A5B9314();
}

uint64_t sub_20A55B540()
{
  sub_20A5986EC();
  return sub_20A5B9320();
}

uint64_t sub_20A55B570@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A55B1B0(a1, a2);
}

uint64_t sub_20A55B584(_QWORD *a1)
{
  return sub_20A5590E0(a1);
}

uint64_t sub_20A55B5A0()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  v4 = v0[3];
  v5 = v0[16];
  v6 = v0[17];
  v7 = v0[32];
  v8 = v0[33];
  sub_20A5B929C();
  if (v1 != 2)
    sub_20A5B92B4();
  sub_20A5B92B4();
  if ((v2 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  sub_20A5B92A8();
  if (v3 != 2)
    sub_20A5B92B4();
  sub_20A5B92B4();
  if ((v4 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  sub_20A5B92A8();
  sub_20A5B92B4();
  if (!v5)
    sub_20A5B92A8();
  if ((v6 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  sub_20A5B92A8();
  sub_20A5B92B4();
  if (!v7)
    sub_20A5B92A8();
  if ((v8 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  sub_20A5B92A8();
  return sub_20A5B92CC();
}

void sub_20A55B7EC()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55B7F4()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B7FC()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B804()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B80C()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B814()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B81C()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B824()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B82C()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B834()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B83C()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B844()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B84C()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B854()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B85C()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B864()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B86C()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B874()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B87C()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B884()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B88C()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B894()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B89C()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B8A4()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B8AC()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B8B4()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B8BC()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B8C4()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B8CC()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B8D4()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B8DC()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B8E4()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B8EC()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B8F4()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B8FC()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B904()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B90C()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B914()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B91C()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B924()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B92C()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B934()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B93C()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B944()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B94C()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B954()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B95C()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B964()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B96C()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B974()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B97C()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B984()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B98C()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B994()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B99C()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B9A4()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B9AC()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B9B4()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B9BC()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B9C4()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B9CC()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B9D8()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B9E8()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55B9F8()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BA00()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BA08()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BA10()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BA18()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BA20()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BA28()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BA30()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BA38()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BA40()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BA48()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BA50()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BA58()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BA60()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BA68()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BA70()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BA78()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BA80()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BA88()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BA90()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BA98()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BAA0()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BAA8()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BAB0()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BAB8()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BAC0()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BAC8()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BAD0()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BAD8()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BAE0()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BAE8()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BAF0()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BAF8()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BB00()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BB08()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BB14()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BB1C()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BB24()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BB2C()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BB34()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BB3C()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BB44()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BB4C()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BB54()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BB5C()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BB64()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BB6C()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BB74()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BB7C()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BB84()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BB8C()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BB94()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BB9C()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BBA4()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BBAC()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BBB4()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BBBC()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BBC4()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BBCC()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BBD4()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BBDC()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BBE4()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BBEC()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BBF4()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BBFC()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BC04()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BC0C()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BC14()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BC1C()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BC24()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BC2C()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BC34()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BC3C()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BC44()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BC4C()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BC54()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BC5C()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BC64()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BC6C()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BC74()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BC7C()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BC84()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BC8C()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BC94()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BC9C()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BCA4()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BCAC()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BCB4()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BCBC()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BCC4()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BCCC()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BCD4()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BCDC()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BCE4()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BCEC()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BCF4()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BCFC()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BD04()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BD0C()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BD14()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BD1C()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BD24()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BD2C()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BD34()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BD3C()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BD44()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BD4C()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BD54()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BD5C()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BD64()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BD6C()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BD74()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BD7C()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BD84()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BD8C()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BD94()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BD9C()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BDA4()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BDAC()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BDB4()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BDBC()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BDC4()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BDCC()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BDD4()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BDDC()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BDE4()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BDEC()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BDF4()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BDFC()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BE04()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BE0C()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BE1C()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BE2C()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BE3C()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BE4C()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BE5C()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BE6C()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BE7C()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BE8C()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BE9C()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BEAC()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BEBC()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BECC()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BEDC()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BEEC()
{
  JUMPOUT(0x20A55B634);
}

void sub_20A55BEF8()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55BF00()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55BF08()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55BF10()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55BF18()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55BF20()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55BF28()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55BF30()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55BF38()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55BF40()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55BF48()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55BF50()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55BF58()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55BF60()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55BF68()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55BF70()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55BF78()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55BF80()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55BF88()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55BF90()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55BF98()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55BFA0()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55BFA8()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55BFB0()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55BFB8()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55BFC0()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55BFC8()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55BFD0()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55BFD8()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55BFE0()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55BFE8()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55BFF0()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55BFF8()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C000()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C008()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C010()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C018()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C020()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C028()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C030()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C038()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C040()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C048()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C050()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C058()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C060()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C068()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C070()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C078()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C080()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C088()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C090()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C098()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C0A0()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C0A8()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C0B0()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C0B8()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C0C0()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C0C8()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C0D0()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C0DC()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C0EC()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C0FC()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C104()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C10C()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C114()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C11C()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C124()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C12C()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C134()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C13C()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C144()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C14C()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C154()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C15C()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C164()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C16C()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C174()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C17C()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C184()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C18C()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C194()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C19C()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C1A4()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C1AC()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C1B4()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C1BC()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C1C4()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C1CC()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C1D4()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C1DC()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C1E4()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C1EC()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C1F4()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C1FC()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C204()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C20C()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C218()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C220()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C228()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C230()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C238()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C240()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C248()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C250()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C258()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C260()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C268()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C270()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C278()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C280()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C288()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C290()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C298()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C2A0()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C2A8()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C2B0()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C2B8()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C2C0()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C2C8()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C2D0()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C2D8()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C2E0()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C2E8()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C2F0()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C2F8()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C300()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C308()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C310()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C318()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C320()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C328()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C330()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C338()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C340()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C348()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C350()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C358()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C360()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C368()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C370()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C378()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C380()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C388()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C390()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C398()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C3A0()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C3A8()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C3B0()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C3B8()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C3C0()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C3C8()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C3D0()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C3D8()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C3E0()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C3E8()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C3F0()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C3F8()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C400()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C408()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C410()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C418()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C420()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C428()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C430()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C438()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C440()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C448()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C450()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C458()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C460()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C468()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C470()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C478()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C480()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C488()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C490()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C498()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C4A0()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C4A8()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C4B0()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C4B8()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C4C0()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C4C8()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C4D0()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C4D8()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C4E0()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C4E8()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C4F0()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C4F8()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C500()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C508()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C510()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C520()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C530()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C540()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C550()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C560()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C570()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C580()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C590()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C5A0()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C5B0()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C5C0()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C5D0()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C5E0()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C5F0()
{
  JUMPOUT(0x20A55B6ACLL);
}

void sub_20A55C5FC()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C604()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C60C()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C614()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C61C()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C624()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C62C()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C634()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C63C()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C644()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C64C()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C654()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C65C()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C664()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C66C()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C674()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C67C()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C684()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C68C()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C694()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C69C()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C6A4()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C6AC()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C6B4()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C6BC()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C6C4()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C6CC()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C6D4()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C6DC()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C6E4()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C6EC()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C6F4()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C6FC()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C704()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C70C()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C714()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C71C()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C724()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C72C()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C734()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C73C()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C744()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C74C()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C754()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C75C()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C764()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C76C()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C774()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C77C()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C784()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C78C()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C794()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C79C()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C7A4()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C7AC()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C7B4()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C7BC()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C7C4()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C7CC()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C7D4()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C7E0()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C7F0()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C800()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C808()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C810()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C818()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C820()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C828()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C830()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C838()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C840()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C848()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C850()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C858()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C860()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C868()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C870()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C878()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C880()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C888()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C890()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C898()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C8A0()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C8A8()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C8B0()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C8B8()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C8C0()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C8C8()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C8D0()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C8D8()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C8E0()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C8E8()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C8F0()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C8F8()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C900()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C908()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C910()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C91C()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C924()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C92C()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C934()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C93C()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C944()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C94C()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C954()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C95C()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C964()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C96C()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C974()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C97C()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C984()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C98C()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C994()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C99C()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C9A4()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C9AC()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C9B4()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C9BC()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C9C4()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C9CC()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C9D4()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C9DC()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C9E4()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C9EC()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C9F4()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55C9FC()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CA04()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CA0C()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CA14()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CA1C()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CA24()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CA2C()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CA34()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CA3C()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CA44()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CA4C()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CA54()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CA5C()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CA64()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CA6C()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CA74()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CA7C()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CA84()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CA8C()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CA94()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CA9C()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CAA4()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CAAC()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CAB4()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CABC()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CAC4()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CACC()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CAD4()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CADC()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CAE4()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CAEC()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CAF4()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CAFC()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CB04()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CB0C()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CB14()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CB1C()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CB24()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CB2C()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CB34()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CB3C()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CB44()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CB4C()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CB54()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CB5C()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CB64()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CB6C()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CB74()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CB7C()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CB84()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CB8C()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CB94()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CB9C()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CBA4()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CBAC()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CBB4()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CBBC()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CBC4()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CBCC()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CBD4()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CBDC()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CBE4()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CBEC()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CBF4()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CBFC()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CC04()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CC0C()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CC14()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CC24()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CC34()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CC44()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CC54()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CC64()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CC74()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CC84()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CC94()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CCA4()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CCB4()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CCC4()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CCD4()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CCE4()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CCF4()
{
  JUMPOUT(0x20A55B720);
}

void sub_20A55CD00()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CD08()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CD10()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CD18()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CD20()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CD28()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CD30()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CD38()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CD40()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CD48()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CD50()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CD58()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CD60()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CD68()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CD70()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CD78()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CD80()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CD88()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CD90()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CD98()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CDA0()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CDA8()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CDB0()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CDB8()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CDC0()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CDC8()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CDD0()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CDD8()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CDE0()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CDE8()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CDF0()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CDF8()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CE00()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CE08()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CE10()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CE18()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CE20()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CE28()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CE30()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CE38()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CE40()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CE48()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CE50()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CE58()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CE60()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CE68()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CE70()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CE78()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CE80()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CE88()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CE90()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CE98()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CEA0()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CEA8()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CEB0()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CEB8()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CEC0()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CEC8()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CED0()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CED8()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CEE4()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CEF4()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CF04()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CF0C()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CF14()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CF1C()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CF24()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CF2C()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CF34()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CF3C()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CF44()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CF4C()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CF54()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CF5C()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CF64()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CF6C()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CF74()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CF7C()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CF84()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CF8C()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CF94()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CF9C()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CFA4()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CFAC()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CFB4()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CFBC()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CFC4()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CFCC()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CFD4()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CFDC()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CFE4()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CFEC()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CFF4()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55CFFC()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D004()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D00C()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D014()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D020()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D028()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D030()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D038()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D040()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D048()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D050()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D058()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D060()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D068()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D070()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D078()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D080()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D088()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D090()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D098()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D0A0()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D0A8()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D0B0()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D0B8()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D0C0()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D0C8()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D0D0()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D0D8()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D0E0()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D0E8()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D0F0()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D0F8()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D100()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D108()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D110()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D118()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D120()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D128()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D130()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D138()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D140()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D148()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D150()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D158()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D160()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D168()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D170()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D178()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D180()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D188()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D190()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D198()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D1A0()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D1A8()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D1B0()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D1B8()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D1C0()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D1C8()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D1D0()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D1D8()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D1E0()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D1E8()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D1F0()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D1F8()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D200()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D208()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D210()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D218()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D220()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D228()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D230()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D238()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D240()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D248()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D250()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D258()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D260()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D268()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D270()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D278()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D280()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D288()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D290()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D298()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D2A0()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D2A8()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D2B0()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D2B8()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D2C0()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D2C8()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D2D0()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D2D8()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D2E0()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D2E8()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D2F0()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D2F8()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D300()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D308()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D310()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D318()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D328()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D338()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D348()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D358()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D368()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D378()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D388()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D398()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D3A8()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D3B8()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D3C8()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D3D8()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D3E8()
{
  JUMPOUT(0x20A55B794);
}

void sub_20A55D3F8()
{
  JUMPOUT(0x20A55B794);
}

unint64_t sub_20A55D408(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  Swift::String v3;
  uint64_t inited;
  uint64_t v5;

  if (*(_BYTE *)(a1 + 32) == 1)
  {
    v2 = *(_QWORD *)(a1 + 16);
    v1 = *(void **)(a1 + 24);
    swift_bridgeObjectRetain();
    v3._countAndFlagsBits = v2;
    v3._object = v1;
    ODIFormattedPhoneNumberBindings.init(rawValue:)(v3);
    __asm { BR              X10 }
  }
  __swift_instantiateConcreteTypeFromMangledName(qword_2545FA940);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A5BA9A0;
  *(_QWORD *)(inited + 32) = 0x646F43726F727265;
  *(_QWORD *)(inited + 40) = 0xE900000000000065;
  v5 = MEMORY[0x24BEE1778];
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE1768];
  *(_QWORD *)(inited + 80) = v5;
  *(_QWORD *)(inited + 48) = -5;
  return sub_20A469B08(inited);
}

uint64_t sub_20A55D594@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  void *v2;
  uint64_t v3;
  Swift::String v4;

  if (*(_BYTE *)(result + 16) == 1)
  {
    v3 = *(_QWORD *)result;
    v2 = *(void **)(result + 8);
    swift_bridgeObjectRetain();
    v4._countAndFlagsBits = v3;
    v4._object = v2;
    ODIFormattedPhoneNumberBindings.init(rawValue:)(v4);
    __asm { BR              X10 }
  }
  *a2 = -42;
  return result;
}

void sub_20A55D628()
{
  _BYTE *v0;
  char v1;

  *v0 = v1;
  JUMPOUT(0x20A55D610);
}

void sub_20A55D630()
{
  _BYTE *v0;
  char v1;

  *v0 = v1;
  JUMPOUT(0x20A55D610);
}

uint64_t sub_20A55D638()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(unsigned __int8 *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(unsigned __int8 *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 56);
  v5 = *(unsigned __int8 *)(v0 + 64);
  if (*(_QWORD *)(v0 + 8))
  {
    sub_20A5B92B4();
    swift_bridgeObjectRetain();
    sub_20A5B8978();
  }
  else
  {
    sub_20A5B92B4();
  }
  if ((v1 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  sub_20A5B92A8();
  swift_bridgeObjectRelease();
  sub_20A5B92B4();
  if (v2)
  {
    swift_bridgeObjectRetain();
    sub_20A5B8978();
  }
  if ((v3 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  sub_20A5B92A8();
  swift_bridgeObjectRelease();
  sub_20A5B92B4();
  if (v4)
  {
    swift_bridgeObjectRetain();
    sub_20A5B8978();
  }
  if ((v5 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  sub_20A5B92A8();
  return swift_bridgeObjectRelease();
}

void sub_20A55D7FC()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55D804()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55D80C()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55D814()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55D81C()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55D824()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55D82C()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55D834()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55D83C()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55D844()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55D84C()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55D854()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55D85C()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55D864()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55D86C()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55D874()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55D87C()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55D884()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55D88C()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55D894()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55D89C()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55D8A4()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55D8AC()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55D8B4()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55D8BC()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55D8C4()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55D8CC()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55D8D4()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55D8DC()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55D8E4()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55D8EC()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55D8F4()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55D8FC()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55D904()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55D90C()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55D914()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55D91C()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55D924()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55D92C()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55D934()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55D93C()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55D944()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55D94C()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55D954()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55D95C()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55D964()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55D96C()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55D974()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55D97C()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55D984()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55D98C()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55D994()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55D99C()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55D9A4()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55D9AC()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55D9B4()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55D9BC()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55D9C4()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55D9CC()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55D9D4()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55D9DC()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55D9E8()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55D9F8()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DA08()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DA10()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DA18()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DA20()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DA28()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DA30()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DA38()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DA40()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DA48()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DA50()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DA58()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DA60()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DA68()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DA70()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DA78()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DA80()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DA88()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DA90()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DA98()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DAA0()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DAA8()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DAB0()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DAB8()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DAC0()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DAC8()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DAD0()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DAD8()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DAE0()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DAE8()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DAF0()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DAF8()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DB00()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DB08()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DB10()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DB18()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DB24()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DB2C()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DB34()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DB3C()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DB44()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DB4C()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DB54()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DB5C()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DB64()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DB6C()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DB74()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DB7C()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DB84()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DB8C()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DB94()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DB9C()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DBA4()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DBAC()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DBB4()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DBBC()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DBC4()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DBCC()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DBD4()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DBDC()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DBE4()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DBEC()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DBF4()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DBFC()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DC04()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DC0C()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DC14()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DC1C()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DC24()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DC2C()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DC34()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DC3C()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DC44()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DC4C()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DC54()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DC5C()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DC64()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DC6C()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DC74()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DC7C()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DC84()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DC8C()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DC94()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DC9C()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DCA4()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DCAC()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DCB4()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DCBC()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DCC4()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DCCC()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DCD4()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DCDC()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DCE4()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DCEC()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DCF4()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DCFC()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DD04()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DD0C()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DD14()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DD1C()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DD24()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DD2C()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DD34()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DD3C()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DD44()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DD4C()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DD54()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DD5C()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DD64()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DD6C()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DD74()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DD7C()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DD84()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DD8C()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DD94()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DD9C()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DDA4()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DDAC()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DDB4()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DDBC()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DDC4()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DDCC()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DDD4()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DDDC()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DDE4()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DDEC()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DDF4()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DDFC()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DE04()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DE0C()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DE14()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DE1C()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DE2C()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DE3C()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DE4C()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DE5C()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DE6C()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DE7C()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DE8C()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DE9C()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DEAC()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DEBC()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DECC()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DEDC()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DEEC()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DEFC()
{
  JUMPOUT(0x20A55D6BCLL);
}

void sub_20A55DF08()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55DF10()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55DF18()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55DF20()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55DF28()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55DF30()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55DF38()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55DF40()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55DF48()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55DF50()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55DF58()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55DF60()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55DF68()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55DF70()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55DF78()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55DF80()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55DF88()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55DF90()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55DF98()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55DFA0()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55DFA8()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55DFB0()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55DFB8()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55DFC0()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55DFC8()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55DFD0()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55DFD8()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55DFE0()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55DFE8()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55DFF0()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55DFF8()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E000()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E008()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E010()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E018()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E020()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E028()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E030()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E038()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E040()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E048()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E050()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E058()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E060()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E068()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E070()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E078()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E080()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E088()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E090()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E098()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E0A0()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E0A8()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E0B0()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E0B8()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E0C0()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E0C8()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E0D0()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E0D8()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E0E0()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E0EC()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E0FC()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E10C()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E114()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E11C()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E124()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E12C()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E134()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E13C()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E144()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E14C()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E154()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E15C()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E164()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E16C()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E174()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E17C()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E184()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E18C()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E194()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E19C()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E1A4()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E1AC()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E1B4()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E1BC()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E1C4()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E1CC()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E1D4()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E1DC()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E1E4()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E1EC()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E1F4()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E1FC()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E204()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E20C()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E214()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E21C()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E228()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E230()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E238()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E240()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E248()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E250()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E258()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E260()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E268()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E270()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E278()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E280()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E288()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E290()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E298()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E2A0()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E2A8()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E2B0()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E2B8()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E2C0()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E2C8()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E2D0()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E2D8()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E2E0()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E2E8()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E2F0()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E2F8()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E300()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E308()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E310()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E318()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E320()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E328()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E330()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E338()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E340()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E348()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E350()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E358()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E360()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E368()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E370()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E378()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E380()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E388()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E390()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E398()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E3A0()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E3A8()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E3B0()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E3B8()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E3C0()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E3C8()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E3D0()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E3D8()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E3E0()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E3E8()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E3F0()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E3F8()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E400()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E408()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E410()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E418()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E420()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E428()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E430()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E438()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E440()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E448()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E450()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E458()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E460()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E468()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E470()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E478()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E480()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E488()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E490()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E498()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E4A0()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E4A8()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E4B0()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E4B8()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E4C0()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E4C8()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E4D0()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E4D8()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E4E0()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E4E8()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E4F0()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E4F8()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E500()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E508()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E510()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E518()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E520()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E530()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E540()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E550()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E560()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E570()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E580()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E590()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E5A0()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E5B0()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E5C0()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E5D0()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E5E0()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E5F0()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E600()
{
  JUMPOUT(0x20A55D738);
}

void sub_20A55E60C()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E614()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E61C()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E624()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E62C()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E634()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E63C()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E644()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E64C()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E654()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E65C()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E664()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E66C()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E674()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E67C()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E684()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E68C()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E694()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E69C()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E6A4()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E6AC()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E6B4()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E6BC()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E6C4()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E6CC()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E6D4()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E6DC()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E6E4()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E6EC()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E6F4()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E6FC()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E704()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E70C()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E714()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E71C()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E724()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E72C()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E734()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E73C()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E744()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E74C()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E754()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E75C()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E764()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E76C()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E774()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E77C()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E784()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E78C()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E794()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E79C()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E7A4()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E7AC()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E7B4()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E7BC()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E7C4()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E7CC()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E7D4()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E7DC()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E7E4()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E7F0()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E800()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E810()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E818()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E820()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E828()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E830()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E838()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E840()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E848()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E850()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E858()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E860()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E868()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E870()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E878()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E880()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E888()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E890()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E898()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E8A0()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E8A8()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E8B0()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E8B8()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E8C0()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E8C8()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E8D0()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E8D8()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E8E0()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E8E8()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E8F0()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E8F8()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E900()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E908()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E910()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E918()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E920()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E92C()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E934()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E93C()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E944()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E94C()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E954()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E95C()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E964()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E96C()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E974()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E97C()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E984()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E98C()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E994()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E99C()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E9A4()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E9AC()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E9B4()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E9BC()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E9C4()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E9CC()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E9D4()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E9DC()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E9E4()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E9EC()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E9F4()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55E9FC()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EA04()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EA0C()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EA14()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EA1C()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EA24()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EA2C()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EA34()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EA3C()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EA44()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EA4C()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EA54()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EA5C()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EA64()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EA6C()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EA74()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EA7C()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EA84()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EA8C()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EA94()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EA9C()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EAA4()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EAAC()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EAB4()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EABC()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EAC4()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EACC()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EAD4()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EADC()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EAE4()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EAEC()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EAF4()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EAFC()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EB04()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EB0C()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EB14()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EB1C()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EB24()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EB2C()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EB34()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EB3C()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EB44()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EB4C()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EB54()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EB5C()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EB64()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EB6C()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EB74()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EB7C()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EB84()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EB8C()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EB94()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EB9C()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EBA4()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EBAC()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EBB4()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EBBC()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EBC4()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EBCC()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EBD4()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EBDC()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EBE4()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EBEC()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EBF4()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EBFC()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EC04()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EC0C()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EC14()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EC1C()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EC24()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EC34()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EC44()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EC54()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EC64()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EC74()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EC84()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55EC94()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55ECA4()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55ECB4()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55ECC4()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55ECD4()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55ECE4()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55ECF4()
{
  JUMPOUT(0x20A55D7B4);
}

void sub_20A55ED04()
{
  JUMPOUT(0x20A55D7B4);
}

unint64_t sub_20A55ED10(char a1)
{
  unint64_t result;

  result = 0xD000000000000014;
  if (a1)
  {
    if (a1 == 1)
      return 0xD000000000000018;
    else
      return 0xD000000000000017;
  }
  return result;
}

uint64_t sub_20A55ED70(_QWORD *a1)
{
  return sub_20A55ED9C(a1, &qword_2545FC138, (void (*)(void))sub_20A598774);
}

uint64_t sub_20A55ED9C(_QWORD *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(void);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  int v30;
  char v31;

  v24 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v26 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  v9 = v3[1];
  v11 = *((_BYTE *)v3 + 16);
  v22 = v3[3];
  v23 = v9;
  v12 = v3[4];
  v30 = *((unsigned __int8 *)v3 + 40);
  v20 = v3[6];
  v21 = v12;
  v19 = v3[7];
  HIDWORD(v18) = *((unsigned __int8 *)v3 + 64);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v24();
  sub_20A5B92FC();
  v27 = v10;
  v28 = v23;
  v29 = v11;
  v31 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FBF58);
  sub_20A44D20C(&qword_2545FBF70, &qword_2545FBF58, (uint64_t)&unk_20A5C2080);
  v13 = v25;
  sub_20A5B9140();
  if (v13)
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v8, v5);
  v16 = v19;
  v15 = v20;
  v17 = v26;
  v27 = v22;
  v28 = v21;
  v29 = v30;
  v31 = 1;
  sub_20A5B9140();
  v27 = v15;
  v28 = v16;
  v29 = BYTE4(v18);
  v31 = 2;
  sub_20A5B9140();
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v8, v5);
}

uint64_t sub_20A55EF9C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_20A55EFC8(a1, &qword_2545FC128, (void (*)(void))sub_20A598774, a2);
}

uint64_t sub_20A55EFC8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, void (*a3)(void)@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  _QWORD *v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  int v31;
  char v32;

  v26 = a4;
  v27 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v7 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27, v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_20A5B92F0();
  if (!v4)
  {
    v25 = v7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545FBF58);
    v32 = 0;
    sub_20A44D20C(&qword_2545FBF60, &qword_2545FBF58, (uint64_t)&unk_20A5C20A8);
    v11 = v27;
    sub_20A5B90A4();
    v13 = v29;
    v24 = v28;
    v14 = v30;
    v32 = 1;
    sub_20A5B90A4();
    v31 = v14;
    v23 = v28;
    v15 = v11;
    v16 = v29;
    v22 = v30;
    v32 = 2;
    sub_20A5B90A4();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v15);
    v18 = v28;
    v17 = v29;
    v19 = v30;
    swift_bridgeObjectRelease();
    v20 = v26;
    *v26 = v24;
    v20[1] = v13;
    *((_BYTE *)v20 + 16) = v31;
    v20[3] = v23;
    v20[4] = v16;
    *((_BYTE *)v20 + 40) = v22;
    v20[6] = v18;
    v20[7] = v17;
    *((_BYTE *)v20 + 64) = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_20A55F264()
{
  char *v0;

  return sub_20A55ED10(*v0);
}

uint64_t sub_20A55F26C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A5995D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A55F290()
{
  sub_20A598774();
  return sub_20A5B9314();
}

uint64_t sub_20A55F2B8()
{
  sub_20A598774();
  return sub_20A5B9320();
}

uint64_t sub_20A55F2E8()
{
  sub_20A5B929C();
  sub_20A55D638();
  return sub_20A5B92CC();
}

uint64_t sub_20A55F358()
{
  sub_20A5B929C();
  sub_20A55D638();
  return sub_20A5B92CC();
}

unint64_t sub_20A55F3C4(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  Swift::String v3;
  uint64_t inited;
  uint64_t v5;

  if (*(_BYTE *)(a1 + 32) == 1)
  {
    v2 = *(_QWORD *)(a1 + 16);
    v1 = *(void **)(a1 + 24);
    swift_bridgeObjectRetain();
    v3._countAndFlagsBits = v2;
    v3._object = v1;
    ODIGeocoderBindingsName.init(rawValue:)(v3);
    __asm { BR              X10 }
  }
  __swift_instantiateConcreteTypeFromMangledName(qword_2545FA940);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A5BA9A0;
  *(_QWORD *)(inited + 32) = 0x646F43726F727265;
  *(_QWORD *)(inited + 40) = 0xE900000000000065;
  v5 = MEMORY[0x24BEE1778];
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE1768];
  *(_QWORD *)(inited + 80) = v5;
  *(_QWORD *)(inited + 48) = -5;
  return sub_20A469B08(inited);
}

void sub_20A55F550(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, __int16 a16, __int16 a17, __int16 a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  sub_20A537D6C(a21, a18 | (a16 << 8), MEMORY[0x24BEE13C8], MEMORY[0x24BEE13E8]);
  JUMPOUT(0x20A55F530);
}

void sub_20A55F574()
{
  __int16 v0;
  __int16 v1;
  uint64_t v2;

  sub_20A537D6C(v2, v0 | (v1 << 8), MEMORY[0x24BEE13C8], MEMORY[0x24BEE13E8]);
  JUMPOUT(0x20A55F530);
}

void sub_20A55F594()
{
  __int16 v0;
  __int16 v1;
  uint64_t v2;

  sub_20A537D6C(v2, v1 | (v0 << 8), MEMORY[0x24BEE13C8], MEMORY[0x24BEE13E8]);
  JUMPOUT(0x20A55F530);
}

void sub_20A55F5B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, __int16 a14, __int16 a15, __int16 a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  sub_20A537D6C(a19, a16 | (a14 << 8), MEMORY[0x24BEE13C8], MEMORY[0x24BEE13E8]);
  JUMPOUT(0x20A55F530);
}

void sub_20A55F5D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, __int16 a12, __int16 a13, __int16 a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  sub_20A537D6C(a17, a14 | (a12 << 8), MEMORY[0x24BEE13C8], MEMORY[0x24BEE13E8]);
  JUMPOUT(0x20A55F530);
}

void sub_20A55F5FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int16 a10, __int16 a11, __int16 a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  sub_20A537D6C(a15, a12 | (a10 << 8), MEMORY[0x24BEE13C8], MEMORY[0x24BEE13E8]);
  JUMPOUT(0x20A55F530);
}

void sub_20A55F620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  __int16 v11;
  __int16 v12;

  sub_20A537D6C(a11, v11 | (v12 << 8), MEMORY[0x24BEE13C8], MEMORY[0x24BEE13E8]);
  JUMPOUT(0x20A55F530);
}

void sub_20A55F640()
{
  __swift_instantiateConcreteTypeFromMangledName(qword_2545FA940);
  JUMPOUT(0x20A55F4E4);
}

uint64_t sub_20A55F654@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  void *v2;
  uint64_t v3;
  Swift::String v4;

  if (*(_BYTE *)(result + 16) == 1)
  {
    v3 = *(_QWORD *)result;
    v2 = *(void **)(result + 8);
    swift_bridgeObjectRetain();
    v4._countAndFlagsBits = v3;
    v4._object = v2;
    ODIGeocoderBindingsName.init(rawValue:)(v4);
    __asm { BR              X10 }
  }
  *a2 = -42;
  return result;
}

void sub_20A55F710()
{
  _BYTE *v0;
  char v1;

  *v0 = v1;
  JUMPOUT(0x20A55F6F0);
}

void sub_20A55F718()
{
  _BYTE *v0;
  char v1;

  *v0 = v1;
  JUMPOUT(0x20A55F6F0);
}

void sub_20A55F720()
{
  _BYTE *v0;
  char v1;

  *v0 = v1;
  JUMPOUT(0x20A55F6F0);
}

void sub_20A55F728()
{
  _BYTE *v0;
  char v1;

  *v0 = v1;
  JUMPOUT(0x20A55F6F0);
}

void sub_20A55F730()
{
  _BYTE *v0;
  char v1;

  *v0 = v1;
  JUMPOUT(0x20A55F6F0);
}

void sub_20A55F738()
{
  _BYTE *v0;
  char v1;

  *v0 = v1;
  JUMPOUT(0x20A55F6F0);
}

void sub_20A55F740()
{
  _BYTE *v0;
  char v1;

  *v0 = v1;
  JUMPOUT(0x20A55F6F0);
}

uint64_t sub_20A55F748(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_20A55F784 + 4 * byte_20A5CF7F0[a1]))(0x6974614C656D6F68, 0xEC00000065647574);
}

uint64_t sub_20A55F784()
{
  return 0x676E6F4C656D6F68;
}

unint64_t sub_20A55F7A8()
{
  return 0xD000000000000010;
}

uint64_t sub_20A55F814()
{
  return 0x746974614C636F64;
}

uint64_t sub_20A55F834()
{
  return 0x69676E6F4C636F64;
}

uint64_t sub_20A55F848(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char v8;
  char v9;
  int v10;
  uint64_t v11;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  int v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  int v30;
  int v31;
  int v32;
  int v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  int v42;
  char v43;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FC120);
  v37 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v8 = *((_BYTE *)v1 + 8);
  v9 = *((_BYTE *)v1 + 9);
  v36 = v1[2];
  v42 = *((unsigned __int8 *)v1 + 24);
  v35 = *((unsigned __int8 *)v1 + 25);
  v34 = v1[4];
  v10 = *((unsigned __int8 *)v1 + 40);
  v32 = *((unsigned __int8 *)v1 + 41);
  v33 = v10;
  v29 = v1[6];
  LODWORD(v5) = *((unsigned __int8 *)v1 + 57);
  v30 = *((unsigned __int8 *)v1 + 56);
  v31 = v5;
  v26 = v1[8];
  LODWORD(v5) = *((unsigned __int8 *)v1 + 73);
  v27 = *((unsigned __int8 *)v1 + 72);
  v28 = v5;
  v23 = v1[10];
  LODWORD(v5) = *((unsigned __int8 *)v1 + 89);
  v24 = *((unsigned __int8 *)v1 + 88);
  v25 = v5;
  v20 = v1[12];
  LODWORD(v5) = *((unsigned __int8 *)v1 + 105);
  v21 = *((unsigned __int8 *)v1 + 104);
  v22 = v5;
  v17 = v1[14];
  LODWORD(v5) = *((unsigned __int8 *)v1 + 121);
  v18 = *((unsigned __int8 *)v1 + 120);
  v19 = v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A598730();
  sub_20A5B92FC();
  v39 = v7;
  v40 = v8;
  v41 = v9;
  v43 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FC048);
  sub_20A44D20C(&qword_2545FC060, &qword_2545FC048, (uint64_t)&unk_20A5C2080);
  v11 = v38;
  sub_20A5B9140();
  if (v11)
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v6, v3);
  v13 = v32;
  v14 = v33;
  v15 = v34;
  v16 = v37;
  v39 = v36;
  v40 = v42;
  v41 = v35;
  v43 = 1;
  sub_20A5B9140();
  v39 = v15;
  v40 = v14;
  v41 = v13;
  v43 = 2;
  sub_20A5B9140();
  v39 = v29;
  v40 = v30;
  v41 = v31;
  v43 = 3;
  sub_20A5B9140();
  v39 = v26;
  v40 = v27;
  v41 = v28;
  v43 = 4;
  sub_20A5B9140();
  v39 = v23;
  v40 = v24;
  v41 = v25;
  v43 = 5;
  sub_20A5B9140();
  v39 = v20;
  v40 = v21;
  v41 = v22;
  v43 = 6;
  sub_20A5B9140();
  v39 = v17;
  v40 = v18;
  v41 = v19;
  v43 = 7;
  sub_20A5B9140();
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v6, v3);
}

uint64_t sub_20A55FC00()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;
  uint64_t v3;
  __int16 v4;
  __int16 v5;
  __int16 v6;
  __int16 v7;
  __int16 v8;
  __int16 v9;
  __int16 v10;
  __int16 v12;
  uint64_t v13;
  __int16 v14;
  __int16 v15;
  uint64_t v16;
  __int16 v17;
  __int16 v18;
  uint64_t v19;
  __int16 v20;
  uint64_t v21;
  __int16 v22;
  uint64_t v23;
  __int16 v24;
  uint64_t v25;
  _BYTE v26[80];

  v1 = *(_QWORD *)v0;
  v2 = *(unsigned __int8 *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(unsigned __int8 *)(v0 + 24);
  v13 = *(_QWORD *)(v0 + 32);
  v12 = *(unsigned __int8 *)(v0 + 40);
  v16 = *(_QWORD *)(v0 + 48);
  v15 = *(unsigned __int8 *)(v0 + 56);
  v19 = *(_QWORD *)(v0 + 64);
  v17 = *(unsigned __int8 *)(v0 + 72);
  v21 = *(_QWORD *)(v0 + 80);
  v20 = *(unsigned __int8 *)(v0 + 88);
  v23 = *(_QWORD *)(v0 + 96);
  v22 = *(unsigned __int8 *)(v0 + 104);
  v25 = *(_QWORD *)(v0 + 112);
  v24 = *(unsigned __int8 *)(v0 + 120);
  v5 = *(unsigned __int8 *)(v0 + 9);
  v6 = *(unsigned __int8 *)(v0 + 25);
  v7 = *(unsigned __int8 *)(v0 + 41);
  v8 = *(unsigned __int8 *)(v0 + 57);
  v9 = *(unsigned __int8 *)(v0 + 73);
  v14 = *(unsigned __int8 *)(v0 + 89);
  v18 = *(unsigned __int8 *)(v0 + 105);
  v10 = *(unsigned __int8 *)(v0 + 121);
  sub_20A5B929C();
  sub_20A538EA8((uint64_t)v26, v1, v2 | (v5 << 8));
  sub_20A538EA8((uint64_t)v26, v3, v4 | (v6 << 8));
  sub_20A538EA8((uint64_t)v26, v13, v12 | (v7 << 8));
  sub_20A538EA8((uint64_t)v26, v16, v15 | (v8 << 8));
  sub_20A538EA8((uint64_t)v26, v19, v17 | (v9 << 8));
  sub_20A538EA8((uint64_t)v26, v21, v20 | (v14 << 8));
  sub_20A538EA8((uint64_t)v26, v23, v22 | (v18 << 8));
  sub_20A538EA8((uint64_t)v26, v25, v24 | (v10 << 8));
  return sub_20A5B92CC();
}

uint64_t sub_20A55FD8C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  uint64_t v17;
  unsigned __int8 v18;
  char v19;
  char v20;
  char v21;
  char v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  int v29;
  int v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  int v34;
  int v35;
  uint64_t v36;
  int v37;
  int v38;
  uint64_t v39;
  int v40;
  int v41;
  int v42;
  _QWORD *v43;
  uint64_t v44;
  unsigned __int8 v45;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;
  char v51;
  uint64_t v52;
  unsigned __int8 v53;
  unsigned __int8 v54;
  char v55;
  char v56;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FC110);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A598730();
  sub_20A5B92F0();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545FC048);
    v56 = 0;
    sub_20A44D20C(&qword_2545FC050, &qword_2545FC048, (uint64_t)&unk_20A5C20A8);
    sub_20A5B90A4();
    v43 = a2;
    v44 = v52;
    v42 = v53;
    v10 = v54;
    v56 = 1;
    sub_20A5B90A4();
    v39 = v52;
    v40 = v53;
    v41 = v10;
    v11 = v54;
    v56 = 2;
    sub_20A5B90A4();
    v36 = v52;
    v37 = v53;
    v38 = v11;
    v12 = v54;
    v56 = 3;
    sub_20A5B90A4();
    v33 = v52;
    v34 = v53;
    v35 = v12;
    v13 = v54;
    v56 = 4;
    sub_20A5B90A4();
    v32 = v13;
    v31 = v52;
    v30 = v53;
    v14 = v54;
    v56 = 5;
    sub_20A5B90A4();
    v29 = v14;
    v28 = v52;
    v27 = v53;
    v15 = v54;
    v56 = 6;
    sub_20A5B90A4();
    v26 = v15;
    v25 = v52;
    HIDWORD(v24) = v53;
    LOBYTE(v15) = v54;
    v56 = 7;
    sub_20A5B90A4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    v17 = v52;
    v18 = v54;
    v19 = v42;
    v55 = v42;
    v20 = v40;
    v51 = v40;
    v21 = v37;
    v50 = v37;
    v22 = v34;
    v49 = v34;
    v48 = v30;
    v47 = v27;
    v46 = BYTE4(v24);
    v45 = v53;
    v23 = v43;
    *v43 = v44;
    *((_BYTE *)v23 + 8) = v19;
    *((_BYTE *)v23 + 9) = v41;
    v23[2] = v39;
    *((_BYTE *)v23 + 24) = v20;
    *((_BYTE *)v23 + 25) = v38;
    v23[4] = v36;
    *((_BYTE *)v23 + 40) = v21;
    *((_BYTE *)v23 + 41) = v35;
    v23[6] = v33;
    *((_BYTE *)v23 + 56) = v22;
    *((_BYTE *)v23 + 57) = v32;
    v23[8] = v31;
    *((_BYTE *)v23 + 72) = v48;
    *((_BYTE *)v23 + 73) = v29;
    v23[10] = v28;
    *((_BYTE *)v23 + 88) = v47;
    *((_BYTE *)v23 + 89) = v26;
    v23[12] = v25;
    *((_BYTE *)v23 + 104) = v46;
    *((_BYTE *)v23 + 105) = v15;
    v23[14] = v17;
    *((_BYTE *)v23 + 120) = v45;
    *((_BYTE *)v23 + 121) = v18;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_20A560200()
{
  unsigned __int8 *v0;

  return sub_20A55F748(*v0);
}

uint64_t sub_20A560208@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A599718(a1, a2);
  *a3 = result;
  return result;
}

void sub_20A56022C(_BYTE *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_20A560238()
{
  sub_20A598730();
  return sub_20A5B9314();
}

uint64_t sub_20A560260()
{
  sub_20A598730();
  return sub_20A5B9320();
}

uint64_t sub_20A560290@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_20A55FD8C(a1, a2);
}

uint64_t sub_20A5602A4(_QWORD *a1)
{
  return sub_20A55F848(a1);
}

uint64_t sub_20A5602BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  __int16 v5;
  uint64_t v6;
  __int16 v7;
  __int16 v8;
  __int16 v9;
  __int16 v10;
  __int16 v11;
  __int16 v12;
  __int16 v13;
  __int16 v15;
  __int16 v16;
  uint64_t v17;
  __int16 v18;
  __int16 v19;
  uint64_t v20;
  __int16 v21;
  uint64_t v22;
  __int16 v23;
  uint64_t v24;
  __int16 v25;
  uint64_t v26;

  v3 = *(_QWORD *)v1;
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(unsigned __int8 *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(unsigned __int8 *)(v1 + 40);
  v17 = *(_QWORD *)(v1 + 48);
  v16 = *(unsigned __int8 *)(v1 + 56);
  v20 = *(_QWORD *)(v1 + 64);
  v18 = *(unsigned __int8 *)(v1 + 72);
  v22 = *(_QWORD *)(v1 + 80);
  v21 = *(unsigned __int8 *)(v1 + 88);
  v24 = *(_QWORD *)(v1 + 96);
  v23 = *(unsigned __int8 *)(v1 + 104);
  v26 = *(_QWORD *)(v1 + 112);
  v25 = *(unsigned __int8 *)(v1 + 120);
  v8 = *(unsigned __int8 *)(v1 + 25);
  v9 = *(unsigned __int8 *)(v1 + 41);
  v10 = *(unsigned __int8 *)(v1 + 57);
  v11 = *(unsigned __int8 *)(v1 + 73);
  v15 = *(unsigned __int8 *)(v1 + 89);
  v19 = *(unsigned __int8 *)(v1 + 105);
  v12 = *(unsigned __int8 *)(v1 + 8) | (*(unsigned __int8 *)(v1 + 9) << 8);
  v13 = *(unsigned __int8 *)(v1 + 121);
  sub_20A538EA8(a1, v3, v12);
  sub_20A538EA8(a1, v4, v5 | (v8 << 8));
  sub_20A538EA8(a1, v6, v7 | (v9 << 8));
  sub_20A538EA8(a1, v17, v16 | (v10 << 8));
  sub_20A538EA8(a1, v20, v18 | (v11 << 8));
  sub_20A538EA8(a1, v22, v21 | (v15 << 8));
  sub_20A538EA8(a1, v24, v23 | (v19 << 8));
  return sub_20A538EA8(a1, v26, v25 | (unsigned __int16)(v13 << 8));
}

uint64_t sub_20A560420()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;
  uint64_t v3;
  __int16 v4;
  __int16 v5;
  __int16 v6;
  __int16 v7;
  __int16 v8;
  __int16 v9;
  __int16 v10;
  __int16 v12;
  uint64_t v13;
  __int16 v14;
  __int16 v15;
  uint64_t v16;
  __int16 v17;
  __int16 v18;
  uint64_t v19;
  __int16 v20;
  uint64_t v21;
  __int16 v22;
  uint64_t v23;
  __int16 v24;
  uint64_t v25;
  _BYTE v26[80];

  v1 = *(_QWORD *)v0;
  v2 = *(unsigned __int8 *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(unsigned __int8 *)(v0 + 24);
  v13 = *(_QWORD *)(v0 + 32);
  v12 = *(unsigned __int8 *)(v0 + 40);
  v16 = *(_QWORD *)(v0 + 48);
  v15 = *(unsigned __int8 *)(v0 + 56);
  v19 = *(_QWORD *)(v0 + 64);
  v17 = *(unsigned __int8 *)(v0 + 72);
  v21 = *(_QWORD *)(v0 + 80);
  v20 = *(unsigned __int8 *)(v0 + 88);
  v23 = *(_QWORD *)(v0 + 96);
  v22 = *(unsigned __int8 *)(v0 + 104);
  v25 = *(_QWORD *)(v0 + 112);
  v24 = *(unsigned __int8 *)(v0 + 120);
  v5 = *(unsigned __int8 *)(v0 + 9);
  v6 = *(unsigned __int8 *)(v0 + 25);
  v7 = *(unsigned __int8 *)(v0 + 41);
  v8 = *(unsigned __int8 *)(v0 + 57);
  v9 = *(unsigned __int8 *)(v0 + 73);
  v14 = *(unsigned __int8 *)(v0 + 89);
  v18 = *(unsigned __int8 *)(v0 + 105);
  v10 = *(unsigned __int8 *)(v0 + 121);
  sub_20A5B929C();
  sub_20A538EA8((uint64_t)v26, v1, v2 | (v5 << 8));
  sub_20A538EA8((uint64_t)v26, v3, v4 | (v6 << 8));
  sub_20A538EA8((uint64_t)v26, v13, v12 | (v7 << 8));
  sub_20A538EA8((uint64_t)v26, v16, v15 | (v8 << 8));
  sub_20A538EA8((uint64_t)v26, v19, v17 | (v9 << 8));
  sub_20A538EA8((uint64_t)v26, v21, v20 | (v14 << 8));
  sub_20A538EA8((uint64_t)v26, v23, v22 | (v18 << 8));
  sub_20A538EA8((uint64_t)v26, v25, v24 | (v10 << 8));
  return sub_20A5B92CC();
}

uint64_t sub_20A5605AC(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;

  v3 = v2;
  v5 = sub_20A5B83D8();
  v7 = v6;
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (v7)
      v30 = -47;
    else
      v30 = -45;
    *(_QWORD *)(v2 + 144) = v5;
    *(_QWORD *)(v2 + 152) = v7;
    *(_BYTE *)(v2 + 160) = v30;
    v31 = sub_20A5B83C0();
    v33 = v32;
    swift_bridgeObjectRelease();
    if (v33)
      v34 = -47;
    else
      v34 = -45;
    *(_QWORD *)(v2 + 168) = v31;
    *(_QWORD *)(v2 + 176) = v33;
    *(_BYTE *)(v2 + 184) = v34;
    v35 = sub_20A5B83B4();
    v37 = v36;
    swift_bridgeObjectRelease();
    if (v37)
      v38 = -47;
    else
      v38 = -45;
    *(_QWORD *)(v2 + 192) = v35;
    *(_QWORD *)(v2 + 200) = v37;
    *(_BYTE *)(v2 + 208) = v38;
    v39 = sub_20A5B83CC();
    v41 = v40;
    swift_bridgeObjectRelease();
    if (v41)
      v42 = -47;
    else
      v42 = -45;
    *(_QWORD *)(v2 + 216) = v39;
    *(_QWORD *)(v2 + 224) = v41;
    *(_BYTE *)(v2 + 232) = v42;
    v43 = sub_20A5B83E4();
    v45 = v44;
    swift_bridgeObjectRelease();
    if (v45)
      v46 = -47;
    else
      v46 = -45;
    *(_QWORD *)(v2 + 240) = v43;
    *(_QWORD *)(v2 + 248) = v45;
    *(_BYTE *)(v2 + 256) = v46;
    v47 = sub_20A5B83FC();
    v49 = v48;
    result = swift_bridgeObjectRelease();
    if (v49)
      v50 = -47;
    else
      v50 = -45;
    *(_QWORD *)(v3 + 264) = v47;
    *(_QWORD *)(v3 + 272) = v49;
    *(_BYTE *)(v3 + 280) = v50;
  }
  else
  {
    swift_bridgeObjectRelease();
    if (v7)
      v8 = -47;
    else
      v8 = -45;
    *(_QWORD *)v2 = v5;
    *(_QWORD *)(v2 + 8) = v7;
    *(_BYTE *)(v2 + 16) = v8;
    v9 = sub_20A5B83C0();
    v11 = v10;
    swift_bridgeObjectRelease();
    if (v11)
      v12 = -47;
    else
      v12 = -45;
    *(_QWORD *)(v2 + 24) = v9;
    *(_QWORD *)(v2 + 32) = v11;
    *(_BYTE *)(v2 + 40) = v12;
    v13 = sub_20A5B83B4();
    v15 = v14;
    swift_bridgeObjectRelease();
    if (v15)
      v16 = -47;
    else
      v16 = -45;
    *(_QWORD *)(v2 + 48) = v13;
    *(_QWORD *)(v2 + 56) = v15;
    *(_BYTE *)(v2 + 64) = v16;
    v17 = sub_20A5B83CC();
    v19 = v18;
    swift_bridgeObjectRelease();
    if (v19)
      v20 = -47;
    else
      v20 = -45;
    *(_QWORD *)(v2 + 72) = v17;
    *(_QWORD *)(v2 + 80) = v19;
    *(_BYTE *)(v2 + 88) = v20;
    v21 = sub_20A5B83E4();
    v23 = v22;
    swift_bridgeObjectRelease();
    if (v23)
      v24 = -47;
    else
      v24 = -45;
    *(_QWORD *)(v2 + 96) = v21;
    *(_QWORD *)(v2 + 104) = v23;
    *(_BYTE *)(v2 + 112) = v24;
    v25 = sub_20A5B83FC();
    v27 = v26;
    result = swift_bridgeObjectRelease();
    if (v27)
      v29 = -47;
    else
      v29 = -45;
    *(_QWORD *)(v3 + 120) = v25;
    *(_QWORD *)(v3 + 128) = v27;
    *(_BYTE *)(v3 + 136) = v29;
  }
  return result;
}

unint64_t sub_20A56079C(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  Swift::String v3;
  uint64_t inited;
  uint64_t v5;

  if (*(_BYTE *)(a1 + 32) == 1)
  {
    v2 = *(_QWORD *)(a1 + 16);
    v1 = *(void **)(a1 + 24);
    swift_bridgeObjectRetain();
    v3._countAndFlagsBits = v2;
    v3._object = v1;
    ODIComputableBindingsName.init(rawValue:)(v3);
    __asm { BR              X10 }
  }
  __swift_instantiateConcreteTypeFromMangledName(qword_2545FA940);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A5BA9A0;
  *(_QWORD *)(inited + 32) = 0x646F43726F727265;
  *(_QWORD *)(inited + 40) = 0xE900000000000065;
  v5 = MEMORY[0x24BEE1778];
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE1768];
  *(_QWORD *)(inited + 80) = v5;
  *(_QWORD *)(inited + 48) = -5;
  return sub_20A469B08(inited);
}

void sub_20A560A84()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  swift_bridgeObjectRetain();
  sub_20A535E34(v0, v2, v1);
  JUMPOUT(0x20A560A5CLL);
}

void sub_20A560AA8()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  swift_bridgeObjectRetain();
  sub_20A535E34(v2, v0, v1);
  swift_bridgeObjectRelease();
  JUMPOUT(0x20A560A64);
}

void sub_20A560AD4()
{
  __swift_instantiateConcreteTypeFromMangledName(qword_2545FA940);
  JUMPOUT(0x20A560900);
}

uint64_t sub_20A560AE8@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  void *v2;
  uint64_t v3;
  Swift::String v4;

  if (*(_BYTE *)(result + 16) == 1)
  {
    v3 = *(_QWORD *)result;
    v2 = *(void **)(result + 8);
    swift_bridgeObjectRetain();
    v4._countAndFlagsBits = v3;
    v4._object = v2;
    ODIComputableBindingsName.init(rawValue:)(v4);
    __asm { BR              X10 }
  }
  *a2 = -42;
  return result;
}

void sub_20A560BB4()
{
  JUMPOUT(0x20A560B90);
}

void sub_20A560BBC()
{
  JUMPOUT(0x20A560B90);
}

void sub_20A560BC4()
{
  JUMPOUT(0x20A560B90);
}

void sub_20A560BCC()
{
  _BYTE *v0;
  char v1;

  *v0 = v1;
  JUMPOUT(0x20A560B94);
}

void sub_20A560BD4()
{
  _BYTE *v0;
  char v1;

  *v0 = v1;
  JUMPOUT(0x20A560B94);
}

void sub_20A560BDC()
{
  _BYTE *v0;
  char v1;

  *v0 = v1;
  JUMPOUT(0x20A560B94);
}

void sub_20A560BE4()
{
  _BYTE *v0;
  char v1;

  *v0 = v1;
  JUMPOUT(0x20A560B94);
}

void sub_20A560BEC()
{
  _BYTE *v0;
  char v1;

  *v0 = v1;
  JUMPOUT(0x20A560B94);
}

void sub_20A560BF4()
{
  _BYTE *v0;
  char v1;

  *v0 = v1;
  JUMPOUT(0x20A560B94);
}

void sub_20A560BFC()
{
  _BYTE *v0;
  char v1;

  *v0 = v1;
  JUMPOUT(0x20A560B94);
}

uint64_t sub_20A560C04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = *(unsigned __int8 *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(unsigned __int8 *)(v0 + 40);
  v21 = *(_QWORD *)(v0 + 56);
  v16 = *(unsigned __int8 *)(v0 + 64);
  v24 = *(_QWORD *)(v0 + 80);
  v17 = *(unsigned __int8 *)(v0 + 88);
  v22 = *(_QWORD *)(v0 + 104);
  v18 = *(unsigned __int8 *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 128);
  v19 = *(unsigned __int8 *)(v0 + 136);
  v23 = *(_QWORD *)(v0 + 152);
  v9 = *(unsigned __int8 *)(v0 + 160);
  v10 = *(_QWORD *)(v0 + 176);
  v20 = *(unsigned __int8 *)(v0 + 184);
  v12 = *(unsigned __int8 *)(v0 + 208);
  v13 = *(_QWORD *)(v0 + 200);
  v5 = *(_QWORD *)(v0 + 224);
  v11 = *(unsigned __int8 *)(v0 + 232);
  v6 = *(_QWORD *)(v0 + 248);
  v7 = *(unsigned __int8 *)(v0 + 256);
  v14 = *(unsigned __int8 *)(v0 + 280);
  v15 = *(_QWORD *)(v0 + 272);
  if (*(_QWORD *)(v0 + 8))
  {
    sub_20A5B92B4();
    swift_bridgeObjectRetain();
    sub_20A5B8978();
  }
  else
  {
    sub_20A5B92B4();
  }
  if ((v1 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  sub_20A5B92A8();
  swift_bridgeObjectRelease();
  sub_20A5B92B4();
  if (v2)
  {
    swift_bridgeObjectRetain();
    sub_20A5B8978();
  }
  if ((v3 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  sub_20A5B92A8();
  swift_bridgeObjectRelease();
  sub_20A5B92B4();
  if (v21)
  {
    swift_bridgeObjectRetain();
    sub_20A5B8978();
  }
  if ((v16 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  sub_20A5B92A8();
  swift_bridgeObjectRelease();
  sub_20A5B92B4();
  if (v24)
  {
    swift_bridgeObjectRetain();
    sub_20A5B8978();
  }
  if ((v17 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  sub_20A5B92A8();
  swift_bridgeObjectRelease();
  sub_20A5B92B4();
  if (v22)
  {
    swift_bridgeObjectRetain();
    sub_20A5B8978();
  }
  if ((v18 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  sub_20A5B92A8();
  swift_bridgeObjectRelease();
  sub_20A5B92B4();
  if (v4)
  {
    swift_bridgeObjectRetain();
    sub_20A5B8978();
  }
  if ((v19 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  sub_20A5B92A8();
  swift_bridgeObjectRelease();
  sub_20A5B92B4();
  if (v23)
  {
    swift_bridgeObjectRetain();
    sub_20A5B8978();
  }
  if ((v9 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  sub_20A5B92A8();
  swift_bridgeObjectRelease();
  sub_20A5B92B4();
  if (v10)
  {
    swift_bridgeObjectRetain();
    sub_20A5B8978();
  }
  if ((v20 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  sub_20A5B92A8();
  swift_bridgeObjectRelease();
  sub_20A5B92B4();
  if (v13)
  {
    swift_bridgeObjectRetain();
    sub_20A5B8978();
  }
  if ((v12 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  sub_20A5B92A8();
  swift_bridgeObjectRelease();
  sub_20A5B92B4();
  if (v5)
  {
    swift_bridgeObjectRetain();
    sub_20A5B8978();
  }
  if ((v11 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  sub_20A5B92A8();
  swift_bridgeObjectRelease();
  sub_20A5B92B4();
  if (v6)
  {
    swift_bridgeObjectRetain();
    sub_20A5B8978();
  }
  if ((v7 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  sub_20A5B92A8();
  swift_bridgeObjectRelease();
  sub_20A5B92B4();
  if (v15)
  {
    swift_bridgeObjectRetain();
    sub_20A5B8978();
  }
  if ((v14 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  sub_20A5B92A8();
  return swift_bridgeObjectRelease();
}

void sub_20A561350()
{
  JUMPOUT(0x20A561304);
}

void sub_20A561358()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561360()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561368()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561370()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561378()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561380()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561388()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561390()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561398()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5613A0()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5613A8()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5613B0()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5613B8()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5613C0()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5613C8()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5613D0()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5613D8()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5613E0()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5613E8()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5613F0()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5613F8()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561400()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561408()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561410()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561418()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561420()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561428()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561430()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561438()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561440()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561448()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561450()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561458()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561460()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561468()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561470()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561478()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561480()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561488()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561490()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561498()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5614A0()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5614A8()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5614B0()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5614B8()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5614C0()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5614C8()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5614D0()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5614D8()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5614E0()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5614E8()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5614F0()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5614F8()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561500()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561508()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561510()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561518()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561520()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561528()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561530()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A56153C()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A56154C()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A56155C()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561564()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A56156C()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561574()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A56157C()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561584()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A56158C()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561594()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A56159C()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5615A4()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5615AC()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5615B4()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5615BC()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5615C4()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5615CC()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5615D4()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5615DC()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5615E4()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5615EC()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5615F4()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5615FC()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561604()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A56160C()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561614()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A56161C()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561624()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A56162C()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561634()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A56163C()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561644()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A56164C()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561654()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A56165C()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561664()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A56166C()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561678()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561680()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561688()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561690()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561698()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5616A0()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5616A8()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5616B0()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5616B8()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5616C0()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5616C8()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5616D0()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5616D8()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5616E0()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5616E8()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5616F0()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5616F8()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561700()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561708()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561710()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561718()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561720()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561728()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561730()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561738()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561740()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561748()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561750()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561758()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561760()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561768()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561770()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561778()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561780()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561788()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561790()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561798()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5617A0()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5617A8()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5617B0()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5617B8()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5617C0()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5617C8()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5617D0()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5617D8()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5617E0()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5617E8()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5617F0()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5617F8()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561800()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561808()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561810()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561818()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561820()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561828()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561830()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561838()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561840()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561848()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561850()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561858()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561860()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561868()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561870()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561878()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561880()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561888()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561890()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561898()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5618A0()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5618A8()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5618B0()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5618B8()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5618C0()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5618C8()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5618D0()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5618D8()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5618E0()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5618E8()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5618F0()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5618F8()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561900()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561908()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561910()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561918()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561920()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561928()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561930()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561938()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561940()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561948()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561950()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561958()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561960()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561968()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561970()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561980()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561990()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5619A0()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5619B0()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5619C0()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5619D0()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5619E0()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A5619F0()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561A00()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561A10()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561A20()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561A30()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561A40()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561A50()
{
  JUMPOUT(0x20A560D54);
}

void sub_20A561A5C()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561A64()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561A6C()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561A74()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561A7C()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561A84()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561A8C()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561A94()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561A9C()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561AA4()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561AAC()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561AB4()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561ABC()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561AC4()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561ACC()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561AD4()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561ADC()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561AE4()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561AEC()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561AF4()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561AFC()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561B04()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561B0C()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561B14()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561B1C()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561B24()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561B2C()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561B34()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561B3C()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561B44()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561B4C()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561B54()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561B5C()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561B64()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561B6C()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561B74()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561B7C()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561B84()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561B8C()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561B94()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561B9C()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561BA4()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561BAC()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561BB4()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561BBC()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561BC4()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561BCC()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561BD4()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561BDC()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561BE4()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561BEC()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561BF4()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561BFC()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561C04()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561C0C()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561C14()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561C1C()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561C24()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561C2C()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561C34()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561C40()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561C50()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561C60()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561C68()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561C70()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561C78()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561C80()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561C88()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561C90()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561C98()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561CA0()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561CA8()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561CB0()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561CB8()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561CC0()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561CC8()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561CD0()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561CD8()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561CE0()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561CE8()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561CF0()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561CF8()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561D00()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561D08()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561D10()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561D18()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561D20()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561D28()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561D30()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561D38()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561D40()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561D48()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561D50()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561D58()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561D60()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561D68()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561D70()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561D7C()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561D84()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561D8C()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561D94()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561D9C()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561DA4()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561DAC()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561DB4()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561DBC()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561DC4()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561DCC()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561DD4()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561DDC()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561DE4()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561DEC()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561DF4()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561DFC()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561E04()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561E0C()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561E14()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561E1C()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561E24()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561E2C()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561E34()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561E3C()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561E44()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561E4C()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561E54()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561E5C()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561E64()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561E6C()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561E74()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561E7C()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561E84()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561E8C()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561E94()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561E9C()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561EA4()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561EAC()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561EB4()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561EBC()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561EC4()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561ECC()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561ED4()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561EDC()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561EE4()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561EEC()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561EF4()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561EFC()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561F04()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561F0C()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561F14()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561F1C()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561F24()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561F2C()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561F34()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561F3C()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561F44()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561F4C()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561F54()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561F5C()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561F64()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561F6C()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561F74()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561F7C()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561F84()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561F8C()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561F94()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561F9C()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561FA4()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561FAC()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561FB4()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561FBC()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561FC4()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561FCC()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561FD4()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561FDC()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561FE4()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561FEC()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561FF4()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A561FFC()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A562004()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A56200C()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A562014()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A56201C()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A562024()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A56202C()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A562034()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A56203C()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A562044()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A56204C()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A562054()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A56205C()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A562064()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A56206C()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A562074()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A562084()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A562094()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A5620A4()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A5620B4()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A5620C4()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A5620D4()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A5620E4()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A5620F4()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A562104()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A562114()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A562124()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A562134()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A562144()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A562154()
{
  JUMPOUT(0x20A560DE8);
}

void sub_20A562160()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562168()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562170()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562178()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562180()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562188()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562190()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562198()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5621A0()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5621A8()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5621B0()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5621B8()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5621C0()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5621C8()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5621D0()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5621D8()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5621E0()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5621E8()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5621F0()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5621F8()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562200()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562208()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562210()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562218()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562220()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562228()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562230()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562238()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562240()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562248()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562250()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562258()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562260()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562268()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562270()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562278()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562280()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562288()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562290()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562298()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5622A0()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5622A8()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5622B0()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5622B8()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5622C0()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5622C8()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5622D0()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5622D8()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5622E0()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5622E8()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5622F0()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5622F8()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562300()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562308()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562310()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562318()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562320()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562328()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562330()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562338()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562344()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562354()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562364()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A56236C()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562374()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A56237C()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562384()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A56238C()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562394()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A56239C()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5623A4()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5623AC()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5623B4()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5623BC()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5623C4()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5623CC()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5623D4()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5623DC()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5623E4()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5623EC()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5623F4()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5623FC()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562404()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A56240C()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562414()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A56241C()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562424()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A56242C()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562434()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A56243C()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562444()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A56244C()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562454()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A56245C()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562464()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A56246C()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562474()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562480()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562488()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562490()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562498()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5624A0()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5624A8()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5624B0()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5624B8()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5624C0()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5624C8()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5624D0()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5624D8()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5624E0()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5624E8()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5624F0()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5624F8()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562500()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562508()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562510()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562518()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562520()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562528()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562530()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562538()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562540()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562548()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562550()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562558()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562560()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562568()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562570()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562578()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562580()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562588()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562590()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562598()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5625A0()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5625A8()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5625B0()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5625B8()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5625C0()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5625C8()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5625D0()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5625D8()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5625E0()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5625E8()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5625F0()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5625F8()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562600()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562608()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562610()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562618()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562620()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562628()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562630()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562638()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562640()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562648()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562650()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562658()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562660()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562668()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562670()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562678()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562680()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562688()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562690()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562698()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5626A0()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5626A8()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5626B0()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5626B8()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5626C0()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5626C8()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5626D0()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5626D8()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5626E0()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5626E8()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5626F0()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5626F8()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562700()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562708()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562710()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562718()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562720()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562728()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562730()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562738()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562740()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562748()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562750()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562758()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562760()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562768()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562770()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562778()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562788()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562798()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5627A8()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5627B8()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5627C8()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5627D8()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5627E8()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A5627F8()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562808()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562818()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562828()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562838()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562848()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562858()
{
  JUMPOUT(0x20A560E70);
}

void sub_20A562864()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A56286C()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562874()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A56287C()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562884()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A56288C()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562894()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A56289C()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A5628A4()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A5628AC()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A5628B4()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A5628BC()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A5628C4()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A5628CC()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A5628D4()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A5628DC()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A5628E4()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A5628EC()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A5628F4()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A5628FC()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562904()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A56290C()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562914()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A56291C()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562924()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A56292C()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562934()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A56293C()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562944()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A56294C()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562954()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A56295C()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562964()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A56296C()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562974()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A56297C()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562984()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A56298C()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562994()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A56299C()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A5629A4()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A5629AC()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A5629B4()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A5629BC()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A5629C4()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A5629CC()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A5629D4()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A5629DC()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A5629E4()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A5629EC()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A5629F4()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A5629FC()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562A04()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562A0C()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562A14()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562A1C()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562A24()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562A2C()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562A34()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562A3C()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562A48()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562A58()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562A68()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562A70()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562A78()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562A80()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562A88()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562A90()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562A98()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562AA0()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562AA8()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562AB0()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562AB8()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562AC0()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562AC8()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562AD0()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562AD8()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562AE0()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562AE8()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562AF0()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562AF8()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562B00()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562B08()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562B10()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562B18()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562B20()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562B28()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562B30()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562B38()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562B40()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562B48()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562B50()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562B58()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562B60()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562B68()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562B70()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562B78()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562B84()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562B8C()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562B94()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562B9C()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562BA4()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562BAC()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562BB4()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562BBC()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562BC4()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562BCC()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562BD4()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562BDC()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562BE4()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562BEC()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562BF4()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562BFC()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562C04()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562C0C()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562C14()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562C1C()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562C24()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562C2C()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562C34()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562C3C()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562C44()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562C4C()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562C54()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562C5C()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562C64()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562C6C()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562C74()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562C7C()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562C84()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562C8C()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562C94()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562C9C()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562CA4()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562CAC()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562CB4()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562CBC()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562CC4()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562CCC()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562CD4()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562CDC()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562CE4()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562CEC()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562CF4()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562CFC()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562D04()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562D0C()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562D14()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562D1C()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562D24()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562D2C()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562D34()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562D3C()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562D44()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562D4C()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562D54()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562D5C()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562D64()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562D6C()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562D74()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562D7C()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562D84()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562D8C()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562D94()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562D9C()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562DA4()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562DAC()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562DB4()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562DBC()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562DC4()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562DCC()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562DD4()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562DDC()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562DE4()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562DEC()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562DF4()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562DFC()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562E04()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562E0C()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562E14()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562E1C()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562E24()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562E2C()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562E34()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562E3C()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562E44()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562E4C()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562E54()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562E5C()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562E64()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562E6C()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562E74()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562E7C()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562E8C()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562E9C()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562EAC()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562EBC()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562ECC()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562EDC()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562EEC()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562EFC()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562F0C()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562F1C()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562F2C()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562F3C()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562F4C()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562F5C()
{
  JUMPOUT(0x20A560EF8);
}

void sub_20A562F68()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A562F70()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A562F78()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A562F80()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A562F88()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A562F90()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A562F98()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A562FA0()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A562FA8()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A562FB0()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A562FB8()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A562FC0()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A562FC8()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A562FD0()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A562FD8()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A562FE0()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A562FE8()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A562FF0()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A562FF8()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563000()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563008()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563010()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563018()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563020()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563028()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563030()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563038()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563040()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563048()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563050()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563058()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563060()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563068()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563070()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563078()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563080()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563088()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563090()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563098()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5630A0()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5630A8()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5630B0()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5630B8()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5630C0()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5630C8()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5630D0()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5630D8()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5630E0()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5630E8()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5630F0()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5630F8()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563100()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563108()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563110()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563118()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563120()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563128()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563130()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563138()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563140()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A56314C()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A56315C()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A56316C()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563174()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A56317C()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563184()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A56318C()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563194()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A56319C()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5631A4()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5631AC()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5631B4()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5631BC()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5631C4()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5631CC()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5631D4()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5631DC()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5631E4()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5631EC()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5631F4()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5631FC()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563204()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A56320C()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563214()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A56321C()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563224()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A56322C()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563234()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A56323C()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563244()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A56324C()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563254()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A56325C()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563264()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A56326C()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563274()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A56327C()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563288()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563290()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563298()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5632A0()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5632A8()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5632B0()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5632B8()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5632C0()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5632C8()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5632D0()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5632D8()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5632E0()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5632E8()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5632F0()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5632F8()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563300()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563308()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563310()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563318()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563320()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563328()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563330()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563338()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563340()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563348()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563350()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563358()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563360()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563368()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563370()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563378()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563380()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563388()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563390()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563398()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5633A0()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5633A8()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5633B0()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5633B8()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5633C0()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5633C8()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5633D0()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5633D8()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5633E0()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5633E8()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5633F0()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5633F8()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563400()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563408()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563410()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563418()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563420()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563428()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563430()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563438()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563440()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563448()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563450()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563458()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563460()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563468()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563470()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563478()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563480()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563488()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563490()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563498()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5634A0()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5634A8()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5634B0()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5634B8()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5634C0()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5634C8()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5634D0()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5634D8()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5634E0()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5634E8()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5634F0()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5634F8()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563500()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563508()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563510()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563518()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563520()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563528()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563530()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563538()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563540()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563548()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563550()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563558()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563560()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563568()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563570()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563578()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563580()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563590()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5635A0()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5635B0()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5635C0()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5635D0()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5635E0()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A5635F0()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563600()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563610()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563620()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563630()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563640()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563650()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A563660()
{
  JUMPOUT(0x20A560F80);
}

void sub_20A56366C()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563674()
{
  JUMPOUT(0x20A561004);
}

void sub_20A56367C()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563684()
{
  JUMPOUT(0x20A561004);
}

void sub_20A56368C()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563694()
{
  JUMPOUT(0x20A561004);
}

void sub_20A56369C()
{
  JUMPOUT(0x20A561004);
}

void sub_20A5636A4()
{
  JUMPOUT(0x20A561004);
}

void sub_20A5636AC()
{
  JUMPOUT(0x20A561004);
}

void sub_20A5636B4()
{
  JUMPOUT(0x20A561004);
}

void sub_20A5636BC()
{
  JUMPOUT(0x20A561004);
}

void sub_20A5636C4()
{
  JUMPOUT(0x20A561004);
}

void sub_20A5636CC()
{
  JUMPOUT(0x20A561004);
}

void sub_20A5636D4()
{
  JUMPOUT(0x20A561004);
}

void sub_20A5636DC()
{
  JUMPOUT(0x20A561004);
}

void sub_20A5636E4()
{
  JUMPOUT(0x20A561004);
}

void sub_20A5636EC()
{
  JUMPOUT(0x20A561004);
}

void sub_20A5636F4()
{
  JUMPOUT(0x20A561004);
}

void sub_20A5636FC()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563704()
{
  JUMPOUT(0x20A561004);
}

void sub_20A56370C()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563714()
{
  JUMPOUT(0x20A561004);
}

void sub_20A56371C()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563724()
{
  JUMPOUT(0x20A561004);
}

void sub_20A56372C()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563734()
{
  JUMPOUT(0x20A561004);
}

void sub_20A56373C()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563744()
{
  JUMPOUT(0x20A561004);
}

void sub_20A56374C()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563754()
{
  JUMPOUT(0x20A561004);
}

void sub_20A56375C()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563764()
{
  JUMPOUT(0x20A561004);
}

void sub_20A56376C()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563774()
{
  JUMPOUT(0x20A561004);
}

void sub_20A56377C()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563784()
{
  JUMPOUT(0x20A561004);
}

void sub_20A56378C()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563794()
{
  JUMPOUT(0x20A561004);
}

void sub_20A56379C()
{
  JUMPOUT(0x20A561004);
}

void sub_20A5637A4()
{
  JUMPOUT(0x20A561004);
}

void sub_20A5637AC()
{
  JUMPOUT(0x20A561004);
}

void sub_20A5637B4()
{
  JUMPOUT(0x20A561004);
}

void sub_20A5637BC()
{
  JUMPOUT(0x20A561004);
}

void sub_20A5637C4()
{
  JUMPOUT(0x20A561004);
}

void sub_20A5637CC()
{
  JUMPOUT(0x20A561004);
}

void sub_20A5637D4()
{
  JUMPOUT(0x20A561004);
}

void sub_20A5637DC()
{
  JUMPOUT(0x20A561004);
}

void sub_20A5637E4()
{
  JUMPOUT(0x20A561004);
}

void sub_20A5637EC()
{
  JUMPOUT(0x20A561004);
}

void sub_20A5637F4()
{
  JUMPOUT(0x20A561004);
}

void sub_20A5637FC()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563804()
{
  JUMPOUT(0x20A561004);
}

void sub_20A56380C()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563814()
{
  JUMPOUT(0x20A561004);
}

void sub_20A56381C()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563824()
{
  JUMPOUT(0x20A561004);
}

void sub_20A56382C()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563834()
{
  JUMPOUT(0x20A561004);
}

void sub_20A56383C()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563844()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563850()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563860()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563870()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563878()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563880()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563888()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563890()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563898()
{
  JUMPOUT(0x20A561004);
}

void sub_20A5638A0()
{
  JUMPOUT(0x20A561004);
}

void sub_20A5638A8()
{
  JUMPOUT(0x20A561004);
}

void sub_20A5638B0()
{
  JUMPOUT(0x20A561004);
}

void sub_20A5638B8()
{
  JUMPOUT(0x20A561004);
}

void sub_20A5638C0()
{
  JUMPOUT(0x20A561004);
}

void sub_20A5638C8()
{
  JUMPOUT(0x20A561004);
}

void sub_20A5638D0()
{
  JUMPOUT(0x20A561004);
}

void sub_20A5638D8()
{
  JUMPOUT(0x20A561004);
}

void sub_20A5638E0()
{
  JUMPOUT(0x20A561004);
}

void sub_20A5638E8()
{
  JUMPOUT(0x20A561004);
}

void sub_20A5638F0()
{
  JUMPOUT(0x20A561004);
}

void sub_20A5638F8()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563900()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563908()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563910()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563918()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563920()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563928()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563930()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563938()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563940()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563948()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563950()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563958()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563960()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563968()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563970()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563978()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563980()
{
  JUMPOUT(0x20A561004);
}

void sub_20A56398C()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563994()
{
  JUMPOUT(0x20A561004);
}

void sub_20A56399C()
{
  JUMPOUT(0x20A561004);
}

void sub_20A5639A4()
{
  JUMPOUT(0x20A561004);
}

void sub_20A5639AC()
{
  JUMPOUT(0x20A561004);
}

void sub_20A5639B4()
{
  JUMPOUT(0x20A561004);
}

void sub_20A5639BC()
{
  JUMPOUT(0x20A561004);
}

void sub_20A5639C4()
{
  JUMPOUT(0x20A561004);
}

void sub_20A5639CC()
{
  JUMPOUT(0x20A561004);
}

void sub_20A5639D4()
{
  JUMPOUT(0x20A561004);
}

void sub_20A5639DC()
{
  JUMPOUT(0x20A561004);
}

void sub_20A5639E4()
{
  JUMPOUT(0x20A561004);
}

void sub_20A5639EC()
{
  JUMPOUT(0x20A561004);
}

void sub_20A5639F4()
{
  JUMPOUT(0x20A561004);
}

void sub_20A5639FC()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563A04()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563A0C()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563A14()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563A1C()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563A24()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563A2C()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563A34()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563A3C()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563A44()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563A4C()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563A54()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563A5C()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563A64()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563A6C()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563A74()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563A7C()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563A84()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563A8C()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563A94()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563A9C()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563AA4()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563AAC()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563AB4()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563ABC()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563AC4()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563ACC()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563AD4()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563ADC()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563AE4()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563AEC()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563AF4()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563AFC()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563B04()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563B0C()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563B14()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563B1C()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563B24()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563B2C()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563B34()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563B3C()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563B44()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563B4C()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563B54()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563B5C()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563B64()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563B6C()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563B74()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563B7C()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563B84()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563B8C()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563B94()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563B9C()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563BA4()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563BAC()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563BB4()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563BBC()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563BC4()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563BCC()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563BD4()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563BDC()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563BE4()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563BEC()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563BF4()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563BFC()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563C04()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563C0C()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563C14()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563C1C()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563C24()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563C2C()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563C34()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563C3C()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563C44()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563C4C()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563C54()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563C5C()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563C64()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563C6C()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563C74()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563C7C()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563C84()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563C94()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563CA4()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563CB4()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563CC4()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563CD4()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563CE4()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563CF4()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563D04()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563D14()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563D24()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563D34()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563D44()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563D54()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563D64()
{
  JUMPOUT(0x20A561004);
}

void sub_20A563D70()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563D78()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563D80()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563D88()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563D90()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563D98()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563DA0()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563DA8()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563DB0()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563DB8()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563DC0()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563DC8()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563DD0()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563DD8()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563DE0()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563DE8()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563DF0()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563DF8()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563E00()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563E08()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563E10()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563E18()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563E20()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563E28()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563E30()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563E38()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563E40()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563E48()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563E50()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563E58()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563E60()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563E68()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563E70()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563E78()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563E80()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563E88()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563E90()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563E98()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563EA0()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563EA8()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563EB0()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563EB8()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563EC0()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563EC8()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563ED0()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563ED8()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563EE0()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563EE8()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563EF0()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563EF8()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563F00()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563F08()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563F10()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563F18()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563F20()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563F28()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563F30()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563F38()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563F40()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563F48()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563F54()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563F64()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563F74()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563F7C()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563F84()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563F8C()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563F94()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563F9C()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563FA4()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563FAC()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563FB4()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563FBC()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563FC4()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563FCC()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563FD4()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563FDC()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563FE4()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563FEC()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563FF4()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A563FFC()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564004()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A56400C()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564014()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A56401C()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564024()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A56402C()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564034()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A56403C()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564044()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A56404C()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564054()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A56405C()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564064()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A56406C()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564074()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A56407C()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564084()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564090()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564098()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A5640A0()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A5640A8()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A5640B0()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A5640B8()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A5640C0()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A5640C8()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A5640D0()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A5640D8()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A5640E0()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A5640E8()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A5640F0()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A5640F8()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564100()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564108()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564110()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564118()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564120()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564128()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564130()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564138()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564140()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564148()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564150()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564158()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564160()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564168()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564170()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564178()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564180()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564188()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564190()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564198()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A5641A0()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A5641A8()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A5641B0()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A5641B8()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A5641C0()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A5641C8()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A5641D0()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A5641D8()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A5641E0()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A5641E8()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A5641F0()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A5641F8()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564200()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564208()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564210()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564218()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564220()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564228()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564230()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564238()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564240()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564248()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564250()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564258()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564260()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564268()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564270()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564278()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564280()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564288()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564290()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564298()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A5642A0()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A5642A8()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A5642B0()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A5642B8()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A5642C0()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A5642C8()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A5642D0()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A5642D8()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A5642E0()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A5642E8()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A5642F0()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A5642F8()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564300()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564308()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564310()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564318()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564320()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564328()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564330()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564338()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564340()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564348()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564350()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564358()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564360()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564368()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564370()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564378()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564380()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564388()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564398()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A5643A8()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A5643B8()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A5643C8()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A5643D8()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A5643E8()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A5643F8()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564408()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564418()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564428()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564438()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564448()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564458()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564468()
{
  JUMPOUT(0x20A56108CLL);
}

void sub_20A564474()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A56447C()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564484()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A56448C()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564494()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A56449C()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5644A4()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5644AC()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5644B4()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5644BC()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5644C4()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5644CC()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5644D4()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5644DC()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5644E4()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5644EC()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5644F4()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5644FC()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564504()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A56450C()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564514()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A56451C()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564524()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A56452C()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564534()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A56453C()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564544()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A56454C()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564554()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A56455C()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564564()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A56456C()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564574()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A56457C()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564584()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A56458C()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564594()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A56459C()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5645A4()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5645AC()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5645B4()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5645BC()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5645C4()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5645CC()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5645D4()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5645DC()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5645E4()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5645EC()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5645F4()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5645FC()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564604()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A56460C()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564614()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A56461C()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564624()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A56462C()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564634()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A56463C()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564644()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A56464C()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564658()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564668()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564678()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564680()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564688()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564690()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564698()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5646A0()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5646A8()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5646B0()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5646B8()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5646C0()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5646C8()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5646D0()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5646D8()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5646E0()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5646E8()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5646F0()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5646F8()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564700()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564708()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564710()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564718()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564720()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564728()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564730()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564738()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564740()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564748()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564750()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564758()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564760()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564768()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564770()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564778()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564780()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564788()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564794()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A56479C()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5647A4()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5647AC()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5647B4()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5647BC()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5647C4()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5647CC()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5647D4()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5647DC()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5647E4()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5647EC()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5647F4()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5647FC()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564804()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A56480C()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564814()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A56481C()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564824()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A56482C()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564834()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A56483C()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564844()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A56484C()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564854()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A56485C()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564864()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A56486C()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564874()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A56487C()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564884()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A56488C()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564894()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A56489C()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5648A4()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5648AC()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5648B4()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5648BC()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5648C4()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5648CC()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5648D4()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5648DC()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5648E4()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5648EC()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5648F4()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5648FC()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564904()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A56490C()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564914()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A56491C()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564924()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A56492C()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564934()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A56493C()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564944()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A56494C()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564954()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A56495C()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564964()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A56496C()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564974()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A56497C()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564984()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A56498C()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564994()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A56499C()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5649A4()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5649AC()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5649B4()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5649BC()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5649C4()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5649CC()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5649D4()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5649DC()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5649E4()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5649EC()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5649F4()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A5649FC()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564A04()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564A0C()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564A14()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564A1C()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564A24()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564A2C()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564A34()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564A3C()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564A44()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564A4C()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564A54()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564A5C()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564A64()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564A6C()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564A74()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564A7C()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564A84()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564A8C()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564A9C()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564AAC()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564ABC()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564ACC()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564ADC()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564AEC()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564AFC()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564B0C()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564B1C()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564B2C()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564B3C()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564B4C()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564B5C()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564B6C()
{
  JUMPOUT(0x20A56110CLL);
}

void sub_20A564B78()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564B80()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564B88()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564B90()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564B98()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564BA0()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564BA8()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564BB0()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564BB8()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564BC0()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564BC8()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564BD0()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564BD8()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564BE0()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564BE8()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564BF0()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564BF8()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564C00()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564C08()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564C10()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564C18()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564C20()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564C28()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564C30()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564C38()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564C40()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564C48()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564C50()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564C58()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564C60()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564C68()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564C70()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564C78()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564C80()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564C88()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564C90()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564C98()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564CA0()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564CA8()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564CB0()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564CB8()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564CC0()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564CC8()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564CD0()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564CD8()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564CE0()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564CE8()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564CF0()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564CF8()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564D00()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564D08()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564D10()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564D18()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564D20()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564D28()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564D30()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564D38()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564D40()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564D48()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564D50()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564D5C()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564D6C()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564D7C()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564D84()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564D8C()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564D94()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564D9C()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564DA4()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564DAC()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564DB4()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564DBC()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564DC4()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564DCC()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564DD4()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564DDC()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564DE4()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564DEC()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564DF4()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564DFC()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564E04()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564E0C()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564E14()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564E1C()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564E24()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564E2C()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564E34()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564E3C()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564E44()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564E4C()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564E54()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564E5C()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564E64()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564E6C()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564E74()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564E7C()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564E84()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564E8C()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564E98()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564EA0()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564EA8()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564EB0()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564EB8()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564EC0()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564EC8()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564ED0()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564ED8()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564EE0()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564EE8()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564EF0()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564EF8()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564F00()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564F08()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564F10()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564F18()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564F20()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564F28()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564F30()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564F38()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564F40()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564F48()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564F50()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564F58()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564F60()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564F68()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564F70()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564F78()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564F80()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564F88()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564F90()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564F98()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564FA0()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564FA8()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564FB0()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564FB8()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564FC0()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564FC8()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564FD0()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564FD8()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564FE0()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564FE8()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564FF0()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A564FF8()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A565000()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A565008()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A565010()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A565018()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A565020()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A565028()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A565030()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A565038()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A565040()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A565048()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A565050()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A565058()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A565060()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A565068()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A565070()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A565078()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A565080()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A565088()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A565090()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A565098()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A5650A0()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A5650A8()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A5650B0()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A5650B8()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A5650C0()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A5650C8()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A5650D0()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A5650D8()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A5650E0()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A5650E8()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A5650F0()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A5650F8()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A565100()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A565108()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A565110()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A565118()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A565120()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A565128()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A565130()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A565138()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A565140()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A565148()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A565150()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A565158()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A565160()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A565168()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A565170()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A565178()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A565180()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A565188()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A565190()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A5651A0()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A5651B0()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A5651C0()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A5651D0()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A5651E0()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A5651F0()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A565200()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A565210()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A565220()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A565230()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A565240()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A565250()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A565260()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A565270()
{
  JUMPOUT(0x20A56118CLL);
}

void sub_20A56527C()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565284()
{
  JUMPOUT(0x20A561208);
}

void sub_20A56528C()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565294()
{
  JUMPOUT(0x20A561208);
}

void sub_20A56529C()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5652A4()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5652AC()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5652B4()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5652BC()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5652C4()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5652CC()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5652D4()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5652DC()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5652E4()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5652EC()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5652F4()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5652FC()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565304()
{
  JUMPOUT(0x20A561208);
}

void sub_20A56530C()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565314()
{
  JUMPOUT(0x20A561208);
}

void sub_20A56531C()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565324()
{
  JUMPOUT(0x20A561208);
}

void sub_20A56532C()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565334()
{
  JUMPOUT(0x20A561208);
}

void sub_20A56533C()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565344()
{
  JUMPOUT(0x20A561208);
}

void sub_20A56534C()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565354()
{
  JUMPOUT(0x20A561208);
}

void sub_20A56535C()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565364()
{
  JUMPOUT(0x20A561208);
}

void sub_20A56536C()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565374()
{
  JUMPOUT(0x20A561208);
}

void sub_20A56537C()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565384()
{
  JUMPOUT(0x20A561208);
}

void sub_20A56538C()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565394()
{
  JUMPOUT(0x20A561208);
}

void sub_20A56539C()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5653A4()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5653AC()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5653B4()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5653BC()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5653C4()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5653CC()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5653D4()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5653DC()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5653E4()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5653EC()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5653F4()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5653FC()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565404()
{
  JUMPOUT(0x20A561208);
}

void sub_20A56540C()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565414()
{
  JUMPOUT(0x20A561208);
}

void sub_20A56541C()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565424()
{
  JUMPOUT(0x20A561208);
}

void sub_20A56542C()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565434()
{
  JUMPOUT(0x20A561208);
}

void sub_20A56543C()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565444()
{
  JUMPOUT(0x20A561208);
}

void sub_20A56544C()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565454()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565460()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565470()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565480()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565488()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565490()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565498()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5654A0()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5654A8()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5654B0()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5654B8()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5654C0()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5654C8()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5654D0()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5654D8()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5654E0()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5654E8()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5654F0()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5654F8()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565500()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565508()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565510()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565518()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565520()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565528()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565530()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565538()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565540()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565548()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565550()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565558()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565560()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565568()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565570()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565578()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565580()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565588()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565590()
{
  JUMPOUT(0x20A561208);
}

void sub_20A56559C()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5655A4()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5655AC()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5655B4()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5655BC()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5655C4()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5655CC()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5655D4()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5655DC()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5655E4()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5655EC()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5655F4()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5655FC()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565604()
{
  JUMPOUT(0x20A561208);
}

void sub_20A56560C()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565614()
{
  JUMPOUT(0x20A561208);
}

void sub_20A56561C()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565624()
{
  JUMPOUT(0x20A561208);
}

void sub_20A56562C()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565634()
{
  JUMPOUT(0x20A561208);
}

void sub_20A56563C()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565644()
{
  JUMPOUT(0x20A561208);
}

void sub_20A56564C()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565654()
{
  JUMPOUT(0x20A561208);
}

void sub_20A56565C()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565664()
{
  JUMPOUT(0x20A561208);
}

void sub_20A56566C()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565674()
{
  JUMPOUT(0x20A561208);
}

void sub_20A56567C()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565684()
{
  JUMPOUT(0x20A561208);
}

void sub_20A56568C()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565694()
{
  JUMPOUT(0x20A561208);
}

void sub_20A56569C()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5656A4()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5656AC()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5656B4()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5656BC()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5656C4()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5656CC()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5656D4()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5656DC()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5656E4()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5656EC()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5656F4()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5656FC()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565704()
{
  JUMPOUT(0x20A561208);
}

void sub_20A56570C()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565714()
{
  JUMPOUT(0x20A561208);
}

void sub_20A56571C()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565724()
{
  JUMPOUT(0x20A561208);
}

void sub_20A56572C()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565734()
{
  JUMPOUT(0x20A561208);
}

void sub_20A56573C()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565744()
{
  JUMPOUT(0x20A561208);
}

void sub_20A56574C()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565754()
{
  JUMPOUT(0x20A561208);
}

void sub_20A56575C()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565764()
{
  JUMPOUT(0x20A561208);
}

void sub_20A56576C()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565774()
{
  JUMPOUT(0x20A561208);
}

void sub_20A56577C()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565784()
{
  JUMPOUT(0x20A561208);
}

void sub_20A56578C()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565794()
{
  JUMPOUT(0x20A561208);
}

void sub_20A56579C()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5657A4()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5657AC()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5657B4()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5657BC()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5657C4()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5657CC()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5657D4()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5657DC()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5657E4()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5657EC()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5657F4()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5657FC()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565804()
{
  JUMPOUT(0x20A561208);
}

void sub_20A56580C()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565814()
{
  JUMPOUT(0x20A561208);
}

void sub_20A56581C()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565824()
{
  JUMPOUT(0x20A561208);
}

void sub_20A56582C()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565834()
{
  JUMPOUT(0x20A561208);
}

void sub_20A56583C()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565844()
{
  JUMPOUT(0x20A561208);
}

void sub_20A56584C()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565854()
{
  JUMPOUT(0x20A561208);
}

void sub_20A56585C()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565864()
{
  JUMPOUT(0x20A561208);
}

void sub_20A56586C()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565874()
{
  JUMPOUT(0x20A561208);
}

void sub_20A56587C()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565884()
{
  JUMPOUT(0x20A561208);
}

void sub_20A56588C()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565894()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5658A4()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5658B4()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5658C4()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5658D4()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5658E4()
{
  JUMPOUT(0x20A561208);
}

void sub_20A5658F4()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565904()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565914()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565924()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565934()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565944()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565954()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565964()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565974()
{
  JUMPOUT(0x20A561208);
}

void sub_20A565980()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565988()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565990()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565998()
{
  JUMPOUT(0x20A561288);
}

void sub_20A5659A0()
{
  JUMPOUT(0x20A561288);
}

void sub_20A5659A8()
{
  JUMPOUT(0x20A561288);
}

void sub_20A5659B0()
{
  JUMPOUT(0x20A561288);
}

void sub_20A5659B8()
{
  JUMPOUT(0x20A561288);
}

void sub_20A5659C0()
{
  JUMPOUT(0x20A561288);
}

void sub_20A5659C8()
{
  JUMPOUT(0x20A561288);
}

void sub_20A5659D0()
{
  JUMPOUT(0x20A561288);
}

void sub_20A5659D8()
{
  JUMPOUT(0x20A561288);
}

void sub_20A5659E0()
{
  JUMPOUT(0x20A561288);
}

void sub_20A5659E8()
{
  JUMPOUT(0x20A561288);
}

void sub_20A5659F0()
{
  JUMPOUT(0x20A561288);
}

void sub_20A5659F8()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565A00()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565A08()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565A10()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565A18()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565A20()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565A28()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565A30()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565A38()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565A40()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565A48()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565A50()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565A58()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565A60()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565A68()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565A70()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565A78()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565A80()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565A88()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565A90()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565A98()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565AA0()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565AA8()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565AB0()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565AB8()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565AC0()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565AC8()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565AD0()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565AD8()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565AE0()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565AE8()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565AF0()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565AF8()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565B00()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565B08()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565B10()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565B18()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565B20()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565B28()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565B30()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565B38()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565B40()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565B48()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565B50()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565B58()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565B64()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565B74()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565B84()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565B8C()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565B94()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565B9C()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565BA4()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565BAC()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565BB4()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565BBC()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565BC4()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565BCC()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565BD4()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565BDC()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565BE4()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565BEC()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565BF4()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565BFC()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565C04()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565C0C()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565C14()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565C1C()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565C24()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565C2C()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565C34()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565C3C()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565C44()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565C4C()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565C54()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565C5C()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565C64()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565C6C()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565C74()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565C7C()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565C84()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565C8C()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565C94()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565CA0()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565CA8()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565CB0()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565CB8()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565CC0()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565CC8()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565CD0()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565CD8()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565CE0()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565CE8()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565CF0()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565CF8()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565D00()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565D08()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565D10()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565D18()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565D20()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565D28()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565D30()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565D38()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565D40()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565D48()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565D50()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565D58()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565D60()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565D68()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565D70()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565D78()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565D80()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565D88()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565D90()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565D98()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565DA0()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565DA8()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565DB0()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565DB8()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565DC0()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565DC8()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565DD0()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565DD8()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565DE0()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565DE8()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565DF0()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565DF8()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565E00()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565E08()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565E10()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565E18()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565E20()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565E28()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565E30()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565E38()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565E40()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565E48()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565E50()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565E58()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565E60()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565E68()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565E70()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565E78()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565E80()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565E88()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565E90()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565E98()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565EA0()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565EA8()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565EB0()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565EB8()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565EC0()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565EC8()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565ED0()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565ED8()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565EE0()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565EE8()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565EF0()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565EF8()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565F00()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565F08()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565F10()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565F18()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565F20()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565F28()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565F30()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565F38()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565F40()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565F48()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565F50()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565F58()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565F60()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565F68()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565F70()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565F78()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565F80()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565F88()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565F90()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565F98()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565FA8()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565FB8()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565FC8()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565FD8()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565FE8()
{
  JUMPOUT(0x20A561288);
}

void sub_20A565FF8()
{
  JUMPOUT(0x20A561288);
}

void sub_20A566008()
{
  JUMPOUT(0x20A561288);
}

void sub_20A566018()
{
  JUMPOUT(0x20A561288);
}

void sub_20A566028()
{
  JUMPOUT(0x20A561288);
}

void sub_20A566038()
{
  JUMPOUT(0x20A561288);
}

void sub_20A566048()
{
  JUMPOUT(0x20A561288);
}

void sub_20A566058()
{
  JUMPOUT(0x20A561288);
}

void sub_20A566068()
{
  JUMPOUT(0x20A561288);
}

void sub_20A566078()
{
  JUMPOUT(0x20A561288);
}

void sub_20A566084()
{
  JUMPOUT(0x20A561304);
}

void sub_20A56608C()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566094()
{
  JUMPOUT(0x20A561304);
}

void sub_20A56609C()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5660A4()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5660AC()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5660B4()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5660BC()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5660C4()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5660CC()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5660D4()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5660DC()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5660E4()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5660EC()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5660F4()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5660FC()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566104()
{
  JUMPOUT(0x20A561304);
}

void sub_20A56610C()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566114()
{
  JUMPOUT(0x20A561304);
}

void sub_20A56611C()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566124()
{
  JUMPOUT(0x20A561304);
}

void sub_20A56612C()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566134()
{
  JUMPOUT(0x20A561304);
}

void sub_20A56613C()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566144()
{
  JUMPOUT(0x20A561304);
}

void sub_20A56614C()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566154()
{
  JUMPOUT(0x20A561304);
}

void sub_20A56615C()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566164()
{
  JUMPOUT(0x20A561304);
}

void sub_20A56616C()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566174()
{
  JUMPOUT(0x20A561304);
}

void sub_20A56617C()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566184()
{
  JUMPOUT(0x20A561304);
}

void sub_20A56618C()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566194()
{
  JUMPOUT(0x20A561304);
}

void sub_20A56619C()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5661A4()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5661AC()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5661B4()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5661BC()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5661C4()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5661CC()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5661D4()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5661DC()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5661E4()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5661EC()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5661F4()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5661FC()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566204()
{
  JUMPOUT(0x20A561304);
}

void sub_20A56620C()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566214()
{
  JUMPOUT(0x20A561304);
}

void sub_20A56621C()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566224()
{
  JUMPOUT(0x20A561304);
}

void sub_20A56622C()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566234()
{
  JUMPOUT(0x20A561304);
}

void sub_20A56623C()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566244()
{
  JUMPOUT(0x20A561304);
}

void sub_20A56624C()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566254()
{
  JUMPOUT(0x20A561304);
}

void sub_20A56625C()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566268()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566278()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566288()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566290()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566298()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5662A0()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5662A8()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5662B0()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5662B8()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5662C0()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5662C8()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5662D0()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5662D8()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5662E0()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5662E8()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5662F0()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5662F8()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566300()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566308()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566310()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566318()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566320()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566328()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566330()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566338()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566340()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566348()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566350()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566358()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566360()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566368()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566370()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566378()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566380()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566388()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566390()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566398()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5663A4()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5663AC()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5663B4()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5663BC()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5663C4()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5663CC()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5663D4()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5663DC()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5663E4()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5663EC()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5663F4()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5663FC()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566404()
{
  JUMPOUT(0x20A561304);
}

void sub_20A56640C()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566414()
{
  JUMPOUT(0x20A561304);
}

void sub_20A56641C()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566424()
{
  JUMPOUT(0x20A561304);
}

void sub_20A56642C()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566434()
{
  JUMPOUT(0x20A561304);
}

void sub_20A56643C()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566444()
{
  JUMPOUT(0x20A561304);
}

void sub_20A56644C()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566454()
{
  JUMPOUT(0x20A561304);
}

void sub_20A56645C()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566464()
{
  JUMPOUT(0x20A561304);
}

void sub_20A56646C()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566474()
{
  JUMPOUT(0x20A561304);
}

void sub_20A56647C()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566484()
{
  JUMPOUT(0x20A561304);
}

void sub_20A56648C()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566494()
{
  JUMPOUT(0x20A561304);
}

void sub_20A56649C()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5664A4()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5664AC()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5664B4()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5664BC()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5664C4()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5664CC()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5664D4()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5664DC()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5664E4()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5664EC()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5664F4()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5664FC()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566504()
{
  JUMPOUT(0x20A561304);
}

void sub_20A56650C()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566514()
{
  JUMPOUT(0x20A561304);
}

void sub_20A56651C()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566524()
{
  JUMPOUT(0x20A561304);
}

void sub_20A56652C()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566534()
{
  JUMPOUT(0x20A561304);
}

void sub_20A56653C()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566544()
{
  JUMPOUT(0x20A561304);
}

void sub_20A56654C()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566554()
{
  JUMPOUT(0x20A561304);
}

void sub_20A56655C()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566564()
{
  JUMPOUT(0x20A561304);
}

void sub_20A56656C()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566574()
{
  JUMPOUT(0x20A561304);
}

void sub_20A56657C()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566584()
{
  JUMPOUT(0x20A561304);
}

void sub_20A56658C()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566594()
{
  JUMPOUT(0x20A561304);
}

void sub_20A56659C()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5665A4()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5665AC()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5665B4()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5665BC()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5665C4()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5665CC()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5665D4()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5665DC()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5665E4()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5665EC()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5665F4()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5665FC()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566604()
{
  JUMPOUT(0x20A561304);
}

void sub_20A56660C()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566614()
{
  JUMPOUT(0x20A561304);
}

void sub_20A56661C()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566624()
{
  JUMPOUT(0x20A561304);
}

void sub_20A56662C()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566634()
{
  JUMPOUT(0x20A561304);
}

void sub_20A56663C()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566644()
{
  JUMPOUT(0x20A561304);
}

void sub_20A56664C()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566654()
{
  JUMPOUT(0x20A561304);
}

void sub_20A56665C()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566664()
{
  JUMPOUT(0x20A561304);
}

void sub_20A56666C()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566674()
{
  JUMPOUT(0x20A561304);
}

void sub_20A56667C()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566684()
{
  JUMPOUT(0x20A561304);
}

void sub_20A56668C()
{
  JUMPOUT(0x20A561304);
}

void sub_20A566694()
{
  JUMPOUT(0x20A561304);
}

void sub_20A56669C()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5666AC()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5666BC()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5666CC()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5666DC()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5666EC()
{
  JUMPOUT(0x20A561304);
}

void sub_20A5666FC()
{
  JUMPOUT(0x20A561304);
}

void sub_20A56670C()
{
  JUMPOUT(0x20A561304);
}

void sub_20A56671C()
{
  JUMPOUT(0x20A561304);
}

void sub_20A56672C()
{
  JUMPOUT(0x20A561304);
}

void sub_20A56673C()
{
  JUMPOUT(0x20A561304);
}

void sub_20A56674C()
{
  JUMPOUT(0x20A561304);
}

void sub_20A56675C()
{
  JUMPOUT(0x20A561304);
}

void sub_20A56676C()
{
  JUMPOUT(0x20A561304);
}

void sub_20A56677C()
{
  JUMPOUT(0x20A561304);
}

uint64_t sub_20A566788(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_20A5667C0 + 4 * byte_20A5D0BAA[a1]))(0x66657250656D616ELL, 0xEA00000000007869);
}

uint64_t sub_20A5667C0()
{
  return 0x614E796C696D6166;
}

uint64_t sub_20A566808()
{
  return 0x66667553656D616ELL;
}

uint64_t sub_20A56681C()
{
  return 0x656D616E6B63696ELL;
}

uint64_t sub_20A566834()
{
  return 0x656D614E72656570;
}

uint64_t sub_20A5668D0()
{
  return 0x6B63694E72656570;
}

uint64_t sub_20A5668F0(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  int v58;
  char v59;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FC0F0);
  v54 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v8 = v1[1];
  v9 = *((_BYTE *)v1 + 16);
  v10 = v1[3];
  v51 = v1[4];
  v52 = v10;
  v58 = *((unsigned __int8 *)v1 + 40);
  v11 = v1[6];
  v49 = v1[7];
  v50 = v11;
  v48 = *((unsigned __int8 *)v1 + 64);
  v47 = v1[9];
  v45 = v1[10];
  v46 = *((unsigned __int8 *)v1 + 88);
  v12 = v1[13];
  v42 = v1[12];
  v43 = v12;
  v44 = *((unsigned __int8 *)v1 + 112);
  v13 = v1[16];
  v39 = v1[15];
  v40 = v13;
  v41 = *((unsigned __int8 *)v1 + 136);
  v36 = v1[18];
  v37 = v1[19];
  v38 = *((unsigned __int8 *)v1 + 160);
  v33 = v1[21];
  v34 = v1[22];
  v35 = *((unsigned __int8 *)v1 + 184);
  v30 = v1[24];
  v31 = v1[25];
  v32 = *((unsigned __int8 *)v1 + 208);
  v27 = v1[27];
  v28 = v1[28];
  v29 = *((unsigned __int8 *)v1 + 232);
  v24 = v1[30];
  v25 = v1[31];
  v26 = *((unsigned __int8 *)v1 + 256);
  v21 = v1[33];
  v22 = v1[34];
  v23 = *((unsigned __int8 *)v1 + 280);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A5985D0();
  sub_20A5B92FC();
  v55 = v7;
  v56 = v8;
  v57 = v9;
  v59 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FBF58);
  sub_20A44D20C(&qword_2545FBF70, &qword_2545FBF58, (uint64_t)&unk_20A5C2080);
  v14 = v53;
  sub_20A5B9140();
  if (v14)
    return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v6, v3);
  v15 = v48;
  v17 = v49;
  v16 = v50;
  v18 = v47;
  v55 = v52;
  v56 = v51;
  v57 = v58;
  v59 = 1;
  sub_20A5B9140();
  v55 = v16;
  v56 = v17;
  v57 = v15;
  v59 = 2;
  sub_20A5B9140();
  v55 = v18;
  v56 = v45;
  v57 = v46;
  v59 = 3;
  sub_20A5B9140();
  v55 = v42;
  v56 = v43;
  v57 = v44;
  v59 = 4;
  sub_20A5B9140();
  v55 = v39;
  v56 = v40;
  v57 = v41;
  v59 = 5;
  sub_20A5B9140();
  v55 = v36;
  v56 = v37;
  v57 = v38;
  v59 = 6;
  sub_20A5B9140();
  v55 = v33;
  v56 = v34;
  v57 = v35;
  v59 = 7;
  sub_20A5B9140();
  v55 = v30;
  v56 = v31;
  v57 = v32;
  v59 = 8;
  sub_20A5B9140();
  v55 = v27;
  v56 = v28;
  v57 = v29;
  v59 = 9;
  sub_20A5B9140();
  v55 = v24;
  v56 = v25;
  v57 = v26;
  v59 = 10;
  v53 = v3;
  sub_20A5B9140();
  v55 = v21;
  v56 = v22;
  v57 = v23;
  v59 = 11;
  v19 = v53;
  sub_20A5B9140();
  return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v6, v19);
}

uint64_t sub_20A566E9C@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _BYTE v60[281];
  char v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  unsigned __int8 v67;
  _BYTE v68[7];
  uint64_t v69;
  uint64_t v70;
  char v71;
  _BYTE v72[7];
  uint64_t v73;
  uint64_t v74;
  char v75;
  _BYTE v76[7];
  uint64_t v77;
  uint64_t v78;
  char v79;
  _BYTE v80[7];
  uint64_t v81;
  uint64_t v82;
  char v83;
  _BYTE v84[7];
  uint64_t v85;
  uint64_t v86;
  char v87;
  _BYTE v88[7];
  uint64_t v89;
  uint64_t v90;
  char v91;
  _BYTE v92[7];
  uint64_t v93;
  uint64_t v94;
  char v95;
  _BYTE v96[7];
  uint64_t v97;
  uint64_t v98;
  char v99;
  _BYTE v100[7];
  uint64_t v101;
  uint64_t v102;
  char v103;
  _BYTE v104[7];
  uint64_t v105;
  uint64_t v106;
  char v107;
  _BYTE v108[7];
  uint64_t v109;
  uint64_t v110;
  char v111;
  _BYTE v112[7];
  _BYTE v113[7];
  _BYTE v114[7];
  _BYTE v115[7];
  _BYTE v116[7];
  _BYTE v117[7];
  _BYTE v118[7];
  _BYTE v119[7];
  _BYTE v120[7];
  _BYTE v121[7];
  _DWORD v122[3];
  uint64_t v123;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FC0E0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a1[3];
  v35 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_20A5985D0();
  sub_20A5B92F0();
  if (v2)
  {
    v123 = v2;
    v38 = 0;
    v39 = 0;
    v40 = 0;
    v41 = 0;
    v43 = 0;
    v44 = 0;
    v47 = 0;
    v48 = 0;
    v49 = 0;
    v50 = 0;
    v52 = 0;
    v53 = 0;
    v56 = 0;
    v57 = 0;
    v58 = 0;
    v59 = 0;
    v33 = 0;
    v34 = 0;
    v36 = 210;
    v37 = 210;
    v42 = 210;
    v45 = 210;
    v46 = 210;
    v51 = 210;
    v54 = 210;
    v55 = 210;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
    v65 = 0;
    v66 = 0;
    v67 = -46;
    v69 = 0;
    v70 = 0;
    *(_DWORD *)v68 = v122[0];
    *(_DWORD *)&v68[3] = *(_DWORD *)((char *)v122 + 3);
    v71 = -46;
    *(_DWORD *)v72 = *(_DWORD *)v121;
    *(_DWORD *)&v72[3] = *(_DWORD *)&v121[3];
    v73 = v33;
    v74 = v34;
    v75 = -46;
    *(_DWORD *)&v76[3] = *(_DWORD *)&v120[3];
    *(_DWORD *)v76 = *(_DWORD *)v120;
    v77 = v58;
    v78 = v59;
    v79 = v55;
    *(_DWORD *)v80 = *(_DWORD *)v119;
    *(_DWORD *)&v80[3] = *(_DWORD *)&v119[3];
    v81 = v56;
    v82 = v57;
    v83 = v54;
    *(_DWORD *)v84 = *(_DWORD *)v118;
    *(_DWORD *)&v84[3] = *(_DWORD *)&v118[3];
    v85 = v52;
    v86 = v53;
    v87 = v51;
    *(_DWORD *)&v88[3] = *(_DWORD *)&v117[3];
    *(_DWORD *)v88 = *(_DWORD *)v117;
    v89 = v49;
    v90 = v50;
    v91 = v46;
    *(_DWORD *)&v92[3] = *(_DWORD *)&v116[3];
    *(_DWORD *)v92 = *(_DWORD *)v116;
    v93 = v47;
    v94 = v48;
    v95 = v45;
    *(_DWORD *)&v96[3] = *(_DWORD *)&v115[3];
    *(_DWORD *)v96 = *(_DWORD *)v115;
    v97 = v43;
    v98 = v44;
    v99 = v42;
    *(_DWORD *)&v100[3] = *(_DWORD *)&v114[3];
    *(_DWORD *)v100 = *(_DWORD *)v114;
    v101 = v40;
    v102 = v41;
    v103 = v36;
    *(_DWORD *)&v104[3] = *(_DWORD *)&v113[3];
    *(_DWORD *)v104 = *(_DWORD *)v113;
    v105 = v38;
    v106 = v39;
    v107 = v37;
    *(_DWORD *)v108 = *(_DWORD *)v112;
    *(_DWORD *)&v108[3] = *(_DWORD *)&v112[3];
    v110 = 0;
    v109 = 0;
    v111 = -46;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545FBF58);
    v60[0] = 0;
    sub_20A44D20C(&qword_2545FBF60, &qword_2545FBF58, (uint64_t)&unk_20A5C20A8);
    sub_20A5B90A4();
    v31 = v65;
    v32 = v66;
    v30 = v67;
    v60[0] = 1;
    sub_20A5B90A4();
    v12 = a2;
    v28 = v65;
    v29 = v66;
    v13 = v67;
    v60[0] = 2;
    sub_20A5B90A4();
    v26 = v13;
    v14 = v65;
    v34 = v66;
    v27 = v67;
    v60[0] = 3;
    sub_20A5B90A4();
    v33 = v14;
    v58 = v65;
    v59 = v66;
    LODWORD(v14) = v67;
    v60[0] = 4;
    sub_20A5B90A4();
    v55 = v14;
    v56 = v65;
    v57 = v66;
    v54 = v67;
    v60[0] = 5;
    sub_20A5B90A4();
    v52 = v65;
    v53 = v66;
    v51 = v67;
    v60[0] = 6;
    sub_20A5B90A4();
    v49 = v65;
    v50 = v66;
    v46 = v67;
    v60[0] = 7;
    sub_20A5B90A4();
    v47 = v65;
    v48 = v66;
    v45 = v67;
    v60[0] = 8;
    sub_20A5B90A4();
    v123 = 0;
    v43 = v65;
    v44 = v66;
    v42 = v67;
    v60[0] = 9;
    sub_20A5B90A4();
    v123 = 0;
    v40 = v65;
    v41 = v66;
    v36 = v67;
    v60[0] = 10;
    sub_20A5B90A4();
    v123 = 0;
    v38 = v65;
    v39 = v66;
    v37 = v67;
    v61 = 11;
    sub_20A5B90A4();
    v123 = 0;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    v15 = v62;
    v24 = v63;
    v25 = v62;
    v16 = v64;
    swift_bridgeObjectRelease();
    v17 = v33;
    *(_QWORD *)v60 = v31;
    *(_QWORD *)&v60[8] = v32;
    v60[16] = v30;
    v18 = v28;
    v19 = v29;
    *(_QWORD *)&v60[24] = v28;
    *(_QWORD *)&v60[32] = v29;
    v20 = v26;
    v60[40] = v26;
    v21 = v34;
    *(_QWORD *)&v60[48] = v33;
    *(_QWORD *)&v60[56] = v34;
    v60[64] = v27;
    *(_QWORD *)&v60[72] = v58;
    *(_QWORD *)&v60[80] = v59;
    v60[88] = v55;
    *(_QWORD *)&v60[96] = v56;
    *(_QWORD *)&v60[104] = v57;
    v60[112] = v54;
    *(_QWORD *)&v60[120] = v52;
    *(_QWORD *)&v60[128] = v53;
    v60[136] = v51;
    *(_QWORD *)&v60[144] = v49;
    *(_QWORD *)&v60[152] = v50;
    v60[160] = v46;
    *(_QWORD *)&v60[168] = v47;
    *(_QWORD *)&v60[176] = v48;
    v60[184] = v45;
    *(_QWORD *)&v60[192] = v43;
    *(_QWORD *)&v60[200] = v44;
    v60[208] = v42;
    *(_QWORD *)&v60[216] = v40;
    *(_QWORD *)&v60[224] = v41;
    v60[232] = v36;
    *(_QWORD *)&v60[240] = v38;
    *(_QWORD *)&v60[248] = v39;
    v60[256] = v37;
    *(_QWORD *)&v60[264] = v15;
    v22 = v24;
    *(_QWORD *)&v60[272] = v24;
    v60[280] = v16;
    memcpy(v12, v60, 0x119uLL);
    sub_20A498844((uint64_t)v60);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
    v65 = v31;
    v66 = v32;
    v67 = v30;
    v69 = v18;
    v70 = v19;
    v71 = v20;
    v73 = v17;
    v74 = v21;
    *(_DWORD *)v68 = v122[0];
    *(_DWORD *)&v68[3] = *(_DWORD *)((char *)v122 + 3);
    *(_DWORD *)v72 = *(_DWORD *)v121;
    *(_DWORD *)&v72[3] = *(_DWORD *)&v121[3];
    v75 = v27;
    *(_DWORD *)&v76[3] = *(_DWORD *)&v120[3];
    *(_DWORD *)v76 = *(_DWORD *)v120;
    v77 = v58;
    v78 = v59;
    v79 = v55;
    *(_DWORD *)v80 = *(_DWORD *)v119;
    *(_DWORD *)&v80[3] = *(_DWORD *)&v119[3];
    v81 = v56;
    v82 = v57;
    v83 = v54;
    *(_DWORD *)v84 = *(_DWORD *)v118;
    *(_DWORD *)&v84[3] = *(_DWORD *)&v118[3];
    v85 = v52;
    v86 = v53;
    v87 = v51;
    *(_DWORD *)&v88[3] = *(_DWORD *)&v117[3];
    *(_DWORD *)v88 = *(_DWORD *)v117;
    v89 = v49;
    v90 = v50;
    v91 = v46;
    *(_DWORD *)&v92[3] = *(_DWORD *)&v116[3];
    *(_DWORD *)v92 = *(_DWORD *)v116;
    v93 = v47;
    v94 = v48;
    v95 = v45;
    *(_DWORD *)&v96[3] = *(_DWORD *)&v115[3];
    *(_DWORD *)v96 = *(_DWORD *)v115;
    v97 = v43;
    v98 = v44;
    v99 = v42;
    *(_DWORD *)&v100[3] = *(_DWORD *)&v114[3];
    *(_DWORD *)v100 = *(_DWORD *)v114;
    v101 = v40;
    v102 = v41;
    v103 = v36;
    *(_DWORD *)&v104[3] = *(_DWORD *)&v113[3];
    *(_DWORD *)v104 = *(_DWORD *)v113;
    v105 = v38;
    v106 = v39;
    v107 = v37;
    *(_DWORD *)v108 = *(_DWORD *)v112;
    *(_DWORD *)&v108[3] = *(_DWORD *)&v112[3];
    v109 = v25;
    v110 = v22;
    v111 = v16;
  }
  return sub_20A598614((uint64_t)&v65);
}

uint64_t sub_20A567AA8()
{
  unsigned __int8 *v0;

  return sub_20A566788(*v0);
}

uint64_t sub_20A567AB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_20A599AC8(a1, a2);
  *a3 = result;
  return result;
}

void sub_20A567AD4(_BYTE *a1@<X8>)
{
  *a1 = 12;
}

uint64_t sub_20A567AE0()
{
  sub_20A5985D0();
  return sub_20A5B9314();
}

uint64_t sub_20A567B08()
{
  sub_20A5985D0();
  return sub_20A5B9320();
}

uint64_t sub_20A567B38@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  return sub_20A566E9C(a1, a2);
}

uint64_t sub_20A567B4C(_QWORD *a1)
{
  return sub_20A5668F0(a1);
}

uint64_t sub_20A567B60()
{
  sub_20A5B929C();
  sub_20A560C04();
  return sub_20A5B92CC();
}

uint64_t sub_20A567BA0()
{
  sub_20A5B929C();
  sub_20A560C04();
  return sub_20A5B92CC();
}

uint64_t ArmandDeviceData.fields.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ArmandDeviceData.fields.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*ArmandDeviceData.fields.modify())()
{
  return nullsub_1;
}

void sub_20A567C1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE __dst[281];

  v2 = *(unsigned __int8 *)(a1 + 33);
  memcpy(__dst, (const void *)(v1 + 496), sizeof(__dst));
  __asm { BR              X9 }
}

uint64_t sub_20A567E70()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;

  v11[3] = (uint64_t)&type metadata for AccountsSource;
  v11[4] = (uint64_t)&off_24C317F20;
  v0 = swift_allocObject();
  *v11 = v0;
  *(_QWORD *)(v0 + 16) = v8;
  *(_QWORD *)(v0 + 24) = v10;
  *(_BYTE *)(v0 + 32) = v7;
  *(_QWORD *)(v0 + 40) = v6;
  *(_QWORD *)(v0 + 48) = v9;
  *(_BYTE *)(v0 + 56) = v4;
  *(_QWORD *)(v0 + 64) = v3;
  *(_QWORD *)(v0 + 72) = v5;
  *(_BYTE *)(v0 + 80) = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void sub_20A56835C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t *a68;
  uint64_t v68;
  uint64_t v69;
  char v70;
  char v71;
  uint64_t v72;
  char v73;
  char v74;
  uint64_t v75;
  uint64_t v76;

  v70 = *(_BYTE *)(v68 + 817);
  v71 = *(_BYTE *)(v69 + 408);
  v72 = *(_QWORD *)(v68 + 808);
  v73 = *(_BYTE *)(v68 + 801);
  v74 = *(_BYTE *)(v69 + 392);
  v75 = *(_QWORD *)(v68 + 792);
  a68[3] = (uint64_t)&type metadata for DeviceSettingsSource;
  a68[4] = (uint64_t)&off_24C313D18;
  v76 = swift_allocObject();
  *a68 = v76;
  *(_DWORD *)(v76 + 16) = *(_DWORD *)(v68 + 784);
  *(_QWORD *)(v76 + 24) = v75;
  *(_BYTE *)(v76 + 32) = v74;
  *(_BYTE *)(v76 + 33) = v73;
  *(_QWORD *)(v76 + 40) = v72;
  *(_BYTE *)(v76 + 48) = v71;
  *(_BYTE *)(v76 + 49) = v70;
  JUMPOUT(0x20A5683C4);
}

uint64_t ArmandDeviceData.valueDict()()
{
  uint64_t *v0;
  const void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 *v5;
  uint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  unsigned __int8 v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(__int128 *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  char v39;
  char v40;
  _QWORD v42[2];
  void *v43;
  uint64_t v44;
  unsigned __int8 *v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  unsigned __int8 v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  char v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  char v71;
  __int128 v72;
  __int128 v73;
  uint64_t v74;
  _BYTE v75[1009];

  v1 = v0 + 1;
  v2 = *v0;
  memcpy(v75, v1, sizeof(v75));
  if (v2)
    v3 = v2;
  else
    v3 = MEMORY[0x24BEE4AF8];
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v43 = (char *)&v65 + 8;
    v44 = v2;
    swift_bridgeObjectRetain();
    v42[1] = v3;
    v5 = (unsigned __int8 *)(v3 + 89);
    v6 = MEMORY[0x24BEE4B00];
    do
    {
      v45 = v5;
      v46 = v4;
      v16 = *(_QWORD *)(v5 - 57);
      v17 = *(_QWORD *)(v5 - 49);
      v47 = *(_QWORD *)(v5 - 41);
      v18 = v47;
      v19 = *(_QWORD *)(v5 - 33);
      v53 = v6;
      v54 = v19;
      v20 = *(v5 - 25);
      v21 = *(v5 - 24);
      v52 = v21;
      v22 = *(_QWORD *)(v5 - 17);
      v50 = *(_QWORD *)(v5 - 9);
      v23 = v50;
      v24 = *(v5 - 1);
      v25 = *v5;
      v48 = v25;
      v49 = v24;
      *(_QWORD *)&v65 = v44;
      memcpy(v43, v75, 0x3F1uLL);
      *(_QWORD *)&v56 = v16;
      *((_QWORD *)&v56 + 1) = v17;
      v57 = v18;
      v26 = v54;
      v58 = v54;
      v59 = v20;
      v60 = v21;
      v61 = v22;
      v62 = v23;
      v63 = v24;
      v64 = v25;
      sub_20A567C1C((uint64_t)&v56);
      v27 = *((_QWORD *)&v73 + 1);
      v28 = v74;
      __swift_project_boxed_opaque_existential_1(&v72, *((uint64_t *)&v73 + 1));
      v51 = v16;
      *(_QWORD *)&v65 = v16;
      *((_QWORD *)&v65 + 1) = v17;
      *(_QWORD *)&v66 = v47;
      *((_QWORD *)&v66 + 1) = v26;
      v29 = v26;
      LOBYTE(v67) = v20;
      BYTE1(v67) = v52;
      v68 = v22;
      v69 = v50;
      v70 = v49;
      v30 = v47;
      v71 = v48;
      v31 = *(uint64_t (**)(__int128 *, uint64_t, uint64_t))(v28 + 24);
      v32 = v17;
      swift_bridgeObjectRetain();
      v52 = v20;
      sub_20A45DDBC(v30, v29, v20);
      v33 = v31(&v65, v27, v28);
      if (*(_QWORD *)(v33 + 16) && (v34 = sub_20A47094C(0x65756C6176, 0xE500000000000000), (v35 & 1) != 0))
      {
        sub_20A47BD60(*(_QWORD *)(v33 + 56) + 40 * v34, (uint64_t)&v65);
      }
      else
      {
        v67 = 0;
        v65 = 0u;
        v66 = 0u;
      }
      v6 = v53;
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v72);
      sub_20A47D62C((uint64_t)&v65, (uint64_t)&v56, &qword_2545FA208);
      if (v58)
      {
        sub_20A44CFD8(&v56, (uint64_t)&v72);
        swift_bridgeObjectRetain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v55 = v6;
        v8 = *((_QWORD *)&v73 + 1);
        v9 = v74;
        v10 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v72, *((uint64_t *)&v73 + 1));
        MEMORY[0x24BDAC7A8](v10, v10);
        v12 = (char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v13 + 16))(v12);
        sub_20A57ED44((uint64_t)v12, v51, v32, isUniquelyReferenced_nonNull_native, &v55, v8, v9);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v72);
        v6 = v55;
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        sub_20A45DDCC(v30, v54, v52);
        v15 = v45;
        v14 = v46;
      }
      else
      {
        v36 = v30;
        swift_bridgeObjectRetain();
        sub_20A44CE2C((uint64_t)&v56, &qword_2545FA208);
        swift_bridgeObjectRetain();
        v37 = sub_20A47094C(v51, v32);
        v39 = v38;
        swift_bridgeObjectRelease();
        if ((v39 & 1) != 0)
        {
          v40 = swift_isUniquelyReferenced_nonNull_native();
          v55 = v6;
          v15 = v45;
          v14 = v46;
          if ((v40 & 1) == 0)
          {
            sub_20A478CE0();
            v6 = v55;
          }
          swift_bridgeObjectRelease();
          sub_20A44CFD8((__int128 *)(*(_QWORD *)(v6 + 56) + 40 * v37), (uint64_t)&v72);
          sub_20A57B6C4(v37, v6);
          swift_bridgeObjectRelease();
        }
        else
        {
          v74 = 0;
          v72 = 0u;
          v73 = 0u;
          v15 = v45;
          v14 = v46;
        }
        swift_bridgeObjectRelease();
        sub_20A44CE2C((uint64_t)&v72, &qword_2545FA208);
        swift_bridgeObjectRelease();
        sub_20A45DDCC(v36, v54, v52);
      }
      v5 = v15 + 64;
      sub_20A44CE2C((uint64_t)&v65, &qword_2545FA208);
      v4 = v14 - 1;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4B00];
  }
  return v6;
}

uint64_t ArmandDeviceData.missingP1ValuesList()()
{
  uint64_t *v0;
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  _BYTE __dst[281];
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _OWORD v28[3];

  v1 = *v0;
  memcpy(__dst, v0 + 62, sizeof(__dst));
  v2 = *(_OWORD *)(v0 + 113);
  v26 = *(_OWORD *)(v0 + 111);
  v27 = v2;
  v28[0] = *(_OWORD *)(v0 + 115);
  *(_OWORD *)((char *)v28 + 10) = *(_OWORD *)((char *)v0 + 930);
  v3 = *(_OWORD *)(v0 + 105);
  v22 = *(_OWORD *)(v0 + 103);
  v23 = v3;
  v4 = *(_OWORD *)(v0 + 109);
  v24 = *(_OWORD *)(v0 + 107);
  v25 = v4;
  if (!v1 || (v5 = *(_QWORD *)(v1 + 16)) == 0)
  {
    v7 = MEMORY[0x24BEE4AF8];
    if (!*(_QWORD *)(MEMORY[0x24BEE4AF8] + 16))
      goto LABEL_14;
LABEL_12:
    __asm { BR              X9 }
  }
  swift_bridgeObjectRetain();
  v6 = (char *)(v1 + 89);
  v7 = MEMORY[0x24BEE4AF8];
  do
  {
    if (*(_QWORD *)(v6 - 17) == 1)
    {
      v17 = *(_QWORD *)(v6 - 57);
      v11 = *(_QWORD *)(v6 - 49);
      v12 = *(_QWORD *)(v6 - 41);
      v13 = *(_QWORD *)(v6 - 33);
      v14 = *(v6 - 25);
      v15 = *(v6 - 24);
      v20 = *(_QWORD *)(v6 - 9);
      v19 = *(v6 - 1);
      v18 = *v6;
      swift_bridgeObjectRetain();
      sub_20A45DDBC(v12, v13, v14);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_20A4578A8(0, *(_QWORD *)(v7 + 16) + 1, 1);
      v9 = *(_QWORD *)(v7 + 16);
      v8 = *(_QWORD *)(v7 + 24);
      if (v9 >= v8 >> 1)
        sub_20A4578A8(v8 > 1, v9 + 1, 1);
      *(_QWORD *)(v7 + 16) = v9 + 1;
      v10 = v7 + (v9 << 6);
      *(_QWORD *)(v10 + 32) = v17;
      *(_QWORD *)(v10 + 40) = v11;
      *(_QWORD *)(v10 + 48) = v12;
      *(_QWORD *)(v10 + 56) = v13;
      *(_BYTE *)(v10 + 64) = v14;
      *(_BYTE *)(v10 + 65) = v15;
      *(_QWORD *)(v10 + 72) = 1;
      *(_QWORD *)(v10 + 80) = v20;
      *(_BYTE *)(v10 + 88) = v19;
      *(_BYTE *)(v10 + 89) = v18;
    }
    v6 += 64;
    --v5;
  }
  while (v5);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v7 + 16))
    goto LABEL_12;
LABEL_14:
  swift_bridgeObjectRelease();
  return MEMORY[0x24BEE4AF8];
}

uint64_t ArmandDeviceData.hash(into:)(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  int v12;
  uint64_t v13;
  __int16 v14;
  __int16 v15;
  uint64_t v16;
  __int16 v17;
  __int16 v18;
  uint64_t v19;
  __int16 v20;
  __int16 v21;
  uint64_t v22;
  __int16 v23;
  __int16 v24;
  uint64_t v25;
  __int16 v26;
  __int16 v27;
  uint64_t v28;
  __int16 v29;
  __int16 v30;
  __int16 v31;
  uint64_t v32;
  __int16 v33;
  __int16 v34;
  __int16 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE __dst[281];

  v3 = *(_QWORD *)v1;
  v11 = *(_QWORD *)(v1 + 176);
  v38 = *(unsigned __int8 *)(v1 + 184);
  v4 = *(_QWORD *)(v1 + 336);
  v5 = *(unsigned __int8 *)(v1 + 344);
  v12 = *(unsigned __int8 *)(v1 + 345);
  v13 = *(unsigned __int8 *)(v1 + 346);
  v6 = *(_QWORD *)(v1 + 360);
  v7 = *(unsigned __int8 *)(v1 + 368);
  v8 = *(_QWORD *)(v1 + 480);
  v9 = *(unsigned __int8 *)(v1 + 488);
  memcpy(__dst, (const void *)(v1 + 496), sizeof(__dst));
  v16 = *(_QWORD *)(v1 + 824);
  v15 = *(unsigned __int8 *)(v1 + 832);
  v14 = *(unsigned __int8 *)(v1 + 833);
  v19 = *(_QWORD *)(v1 + 840);
  v18 = *(unsigned __int8 *)(v1 + 848);
  v17 = *(unsigned __int8 *)(v1 + 849);
  v22 = *(_QWORD *)(v1 + 856);
  v21 = *(unsigned __int8 *)(v1 + 864);
  v20 = *(unsigned __int8 *)(v1 + 865);
  v25 = *(_QWORD *)(v1 + 872);
  v24 = *(unsigned __int8 *)(v1 + 880);
  v23 = *(unsigned __int8 *)(v1 + 881);
  v28 = *(_QWORD *)(v1 + 888);
  v27 = *(unsigned __int8 *)(v1 + 896);
  v26 = *(unsigned __int8 *)(v1 + 897);
  v32 = *(_QWORD *)(v1 + 904);
  v30 = *(unsigned __int8 *)(v1 + 912);
  v29 = *(unsigned __int8 *)(v1 + 913);
  v36 = *(_QWORD *)(v1 + 920);
  v33 = *(unsigned __int8 *)(v1 + 928);
  v31 = *(unsigned __int8 *)(v1 + 929);
  v37 = *(_QWORD *)(v1 + 936);
  v35 = *(unsigned __int8 *)(v1 + 944);
  v34 = *(unsigned __int8 *)(v1 + 945);
  sub_20A5B92B4();
  if (v3)
  {
    swift_bridgeObjectRetain();
    sub_20A57E33C((uint64_t)a1, v3);
    swift_bridgeObjectRelease();
  }
  sub_20A55D638();
  sub_20A545DD0();
  sub_20A5B92B4();
  if (v11)
  {
    swift_bridgeObjectRetain();
    sub_20A5B8978();
  }
  if ((v38 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  sub_20A5B92A8();
  swift_bridgeObjectRelease();
  sub_20A54858C();
  sub_20A54D3D8();
  sub_20A5B92B4();
  if (v4)
  {
    swift_bridgeObjectRetain();
    sub_20A5B8978();
  }
  if ((v5 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  sub_20A5B92A8();
  swift_bridgeObjectRelease();
  if (v12 != 2)
    sub_20A5B92B4();
  sub_20A5B92B4();
  if ((v13 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  sub_20A5B92A8();
  sub_20A5B92B4();
  if (v6)
  {
    swift_bridgeObjectRetain();
    sub_20A5B8978();
  }
  if ((v7 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  sub_20A5B92A8();
  swift_bridgeObjectRelease();
  sub_20A55032C((uint64_t)a1);
  sub_20A5B92B4();
  if (v8)
  {
    swift_bridgeObjectRetain();
    sub_20A57DBAC(a1, v8);
  }
  if ((v9 + 47) >= 9u)
  {
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  sub_20A5B92A8();
  swift_bridgeObjectRelease();
  sub_20A560C04();
  sub_20A5572C4();
  sub_20A538EA8((uint64_t)a1, v16, v15 | (v14 << 8));
  sub_20A538EA8((uint64_t)a1, v19, v18 | (v17 << 8));
  sub_20A538EA8((uint64_t)a1, v22, v21 | (v20 << 8));
  sub_20A538EA8((uint64_t)a1, v25, v24 | (v23 << 8));
  sub_20A538EA8((uint64_t)a1, v28, v27 | (v26 << 8));
  sub_20A538EA8((uint64_t)a1, v32, v30 | (v29 << 8));
  sub_20A538EA8((uint64_t)a1, v36, v33 | (v31 << 8));
  sub_20A538EA8((uint64_t)a1, v37, v35 | (v34 << 8));
  return sub_20A55D638();
}

void sub_20A569D10()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A569D18()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569D20()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569D28()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569D30()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569D38()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569D40()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569D48()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569D50()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569D58()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569D60()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569D68()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569D70()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569D78()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569D80()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569D88()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569D90()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569D98()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569DA0()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569DA8()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569DB0()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569DB8()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569DC0()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569DC8()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569DD0()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569DD8()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569DE0()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569DE8()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569DF0()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569DF8()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569E00()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569E08()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569E10()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569E18()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569E20()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569E28()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569E30()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569E38()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569E40()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569E48()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569E50()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569E58()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569E60()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569E68()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569E70()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569E78()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569E80()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569E88()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569E90()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569E98()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569EA0()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569EA8()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569EB0()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569EB8()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569EC0()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569EC8()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569ED0()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569ED8()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569EE0()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569EE8()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569EF0()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569EFC()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569F0C()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569F1C()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569F24()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569F2C()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569F34()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569F3C()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569F44()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569F4C()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569F54()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569F5C()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569F64()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569F6C()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569F74()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569F7C()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569F84()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569F8C()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569F94()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569F9C()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569FA4()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569FAC()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569FB4()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569FBC()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569FC4()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569FCC()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569FD4()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569FDC()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569FE4()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569FEC()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569FF4()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A569FFC()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A004()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A00C()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A014()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A01C()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A024()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A02C()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A038()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A040()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A048()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A050()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A058()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A060()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A068()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A070()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A078()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A080()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A088()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A090()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A098()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A0A0()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A0A8()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A0B0()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A0B8()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A0C0()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A0C8()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A0D0()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A0D8()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A0E0()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A0E8()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A0F0()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A0F8()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A100()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A108()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A110()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A118()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A120()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A128()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A130()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A138()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A140()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A148()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A150()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A158()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A160()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A168()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A170()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A178()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A180()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A188()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A190()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A198()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A1A0()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A1A8()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A1B0()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A1B8()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A1C0()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A1C8()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A1D0()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A1D8()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A1E0()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A1E8()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A1F0()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A1F8()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A200()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A208()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A210()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A218()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A220()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A228()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A230()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A238()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A240()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A248()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A250()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A258()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A260()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A268()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A270()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A278()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A280()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A288()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A290()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A298()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A2A0()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A2A8()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A2B0()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A2B8()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A2C0()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A2C8()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A2D0()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A2D8()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A2E0()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A2E8()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A2F0()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A2F8()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A300()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A308()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A310()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A318()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A320()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A328()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A330()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A340()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A350()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A360()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A370()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A380()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A390()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A3A0()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A3B0()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A3C0()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A3D0()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A3E0()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A3F0()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A400()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A410()
{
  JUMPOUT(0x20A5697C0);
}

void sub_20A56A41C()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A424()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A42C()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A434()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A43C()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A444()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A44C()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A454()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A45C()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A464()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A46C()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A474()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A47C()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A484()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A48C()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A494()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A49C()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A4A4()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A4AC()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A4B4()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A4BC()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A4C4()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A4CC()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A4D4()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A4DC()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A4E4()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A4EC()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A4F4()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A4FC()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A504()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A50C()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A514()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A51C()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A524()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A52C()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A534()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A53C()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A544()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A54C()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A554()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A55C()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A564()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A56C()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A574()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A57C()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A584()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A58C()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A594()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A59C()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A5A4()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A5AC()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A5B4()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A5BC()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A5C4()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A5CC()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A5D4()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A5DC()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A5E4()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A5EC()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A5F4()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A600()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A610()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A620()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A628()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A630()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A638()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A640()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A648()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A650()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A658()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A660()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A668()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A670()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A678()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A680()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A688()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A690()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A698()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A6A0()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A6A8()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A6B0()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A6B8()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A6C0()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A6C8()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A6D0()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A6D8()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A6E0()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A6E8()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A6F0()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A6F8()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A700()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A708()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A710()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A718()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A720()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A728()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A730()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A73C()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A744()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A74C()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A754()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A75C()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A764()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A76C()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A774()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A77C()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A784()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A78C()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A794()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A79C()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A7A4()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A7AC()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A7B4()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A7BC()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A7C4()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A7CC()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A7D4()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A7DC()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A7E4()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A7EC()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A7F4()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A7FC()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A804()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A80C()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A814()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A81C()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A824()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A82C()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A834()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A83C()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A844()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A84C()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A854()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A85C()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A864()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A86C()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A874()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A87C()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A884()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A88C()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A894()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A89C()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A8A4()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A8AC()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A8B4()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A8BC()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A8C4()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A8CC()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A8D4()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A8DC()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A8E4()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A8EC()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A8F4()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A8FC()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A904()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A90C()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A914()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A91C()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A924()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A92C()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A934()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A93C()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A944()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A94C()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A954()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A95C()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A964()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A96C()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A974()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A97C()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A984()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A98C()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A994()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A99C()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A9A4()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A9AC()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A9B4()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A9BC()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A9C4()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A9CC()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A9D4()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A9DC()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A9E4()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A9EC()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A9F4()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56A9FC()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56AA04()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56AA0C()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56AA14()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56AA1C()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56AA24()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56AA2C()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56AA34()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56AA44()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56AA54()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56AA64()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56AA74()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56AA84()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56AA94()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56AAA4()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56AAB4()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56AAC4()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56AAD4()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56AAE4()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56AAF4()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56AB04()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56AB14()
{
  JUMPOUT(0x20A569904);
}

void sub_20A56AB20()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AB28()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AB30()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AB38()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AB40()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AB48()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AB50()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AB58()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AB60()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AB68()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AB70()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AB78()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AB80()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AB88()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AB90()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AB98()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56ABA0()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56ABA8()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56ABB0()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56ABB8()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56ABC0()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56ABC8()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56ABD0()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56ABD8()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56ABE0()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56ABE8()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56ABF0()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56ABF8()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AC00()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AC08()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AC10()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AC18()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AC20()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AC28()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AC30()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AC38()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AC40()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AC48()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AC50()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AC58()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AC60()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AC68()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AC70()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AC78()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AC80()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AC88()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AC90()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AC98()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56ACA0()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56ACA8()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56ACB0()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56ACB8()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56ACC0()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56ACC8()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56ACD0()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56ACD8()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56ACE0()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56ACE8()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56ACF0()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56ACF8()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AD04()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AD14()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AD24()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AD2C()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AD34()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AD3C()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AD44()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AD4C()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AD54()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AD5C()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AD64()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AD6C()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AD74()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AD7C()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AD84()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AD8C()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AD94()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AD9C()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56ADA4()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56ADAC()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56ADB4()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56ADBC()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56ADC4()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56ADCC()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56ADD4()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56ADDC()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56ADE4()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56ADEC()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56ADF4()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56ADFC()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AE04()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AE0C()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AE14()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AE1C()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AE24()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AE2C()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AE34()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AE40()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AE48()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AE50()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AE58()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AE60()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AE68()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AE70()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AE78()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AE80()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AE88()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AE90()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AE98()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AEA0()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AEA8()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AEB0()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AEB8()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AEC0()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AEC8()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AED0()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AED8()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AEE0()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AEE8()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AEF0()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AEF8()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AF00()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AF08()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AF10()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AF18()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AF20()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AF28()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AF30()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AF38()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AF40()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AF48()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AF50()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AF58()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AF60()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AF68()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AF70()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AF78()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AF80()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AF88()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AF90()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AF98()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AFA0()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AFA8()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AFB0()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AFB8()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AFC0()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AFC8()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AFD0()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AFD8()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AFE0()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AFE8()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AFF0()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56AFF8()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56B000()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56B008()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56B010()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56B018()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56B020()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56B028()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56B030()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56B038()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56B040()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56B048()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56B050()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56B058()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56B060()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56B068()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56B070()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56B078()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56B080()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56B088()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56B090()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56B098()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56B0A0()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56B0A8()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56B0B0()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56B0B8()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56B0C0()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56B0C8()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56B0D0()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56B0D8()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56B0E0()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56B0E8()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56B0F0()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56B0F8()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56B100()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56B108()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56B110()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56B118()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56B120()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56B128()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56B130()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56B138()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56B148()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56B158()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56B168()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56B178()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56B188()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56B198()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56B1A8()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56B1B8()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56B1C8()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56B1D8()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56B1E8()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56B1F8()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56B208()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56B218()
{
  JUMPOUT(0x20A56998CLL);
}

void sub_20A56B224()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B22C()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B234()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B23C()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B244()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B24C()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B254()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B25C()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B264()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B26C()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B274()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B27C()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B284()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B28C()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B294()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B29C()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B2A4()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B2AC()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B2B4()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B2BC()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B2C4()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B2CC()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B2D4()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B2DC()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B2E4()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B2EC()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B2F4()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B2FC()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B304()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B30C()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B314()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B31C()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B324()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B32C()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B334()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B33C()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B344()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B34C()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B354()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B35C()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B364()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B36C()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B374()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B37C()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B384()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B38C()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B394()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B39C()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B3A4()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B3AC()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B3B4()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B3BC()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B3C4()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B3CC()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B3D4()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B3DC()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B3E4()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B3EC()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B3F4()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B3FC()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B408()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B418()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B428()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B430()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B438()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B440()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B448()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B450()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B458()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B460()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B468()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B470()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B478()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B480()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B488()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B490()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B498()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B4A0()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B4A8()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B4B0()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B4B8()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B4C0()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B4C8()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B4D0()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B4D8()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B4E0()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B4E8()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B4F0()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B4F8()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B500()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B508()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B510()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B518()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B520()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B528()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B530()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B538()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B544()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B54C()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B554()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B55C()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B564()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B56C()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B574()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B57C()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B584()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B58C()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B594()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B59C()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B5A4()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B5AC()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B5B4()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B5BC()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B5C4()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B5CC()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B5D4()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B5DC()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B5E4()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B5EC()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B5F4()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B5FC()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B604()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B60C()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B614()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B61C()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B624()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B62C()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B634()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B63C()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B644()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B64C()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B654()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B65C()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B664()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B66C()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B674()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B67C()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B684()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B68C()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B694()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B69C()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B6A4()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B6AC()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B6B4()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B6BC()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B6C4()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B6CC()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B6D4()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B6DC()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B6E4()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B6EC()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B6F4()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B6FC()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B704()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B70C()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B714()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B71C()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B724()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B72C()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B734()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B73C()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B744()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B74C()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B754()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B75C()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B764()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B76C()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B774()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B77C()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B784()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B78C()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B794()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B79C()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B7A4()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B7AC()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B7B4()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B7BC()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B7C4()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B7CC()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B7D4()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B7DC()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B7E4()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B7EC()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B7F4()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B7FC()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B804()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B80C()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B814()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B81C()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B824()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B82C()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B834()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B83C()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B84C()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B85C()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B86C()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B87C()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B88C()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B89C()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B8AC()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B8BC()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B8CC()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B8DC()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B8EC()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B8FC()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B90C()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B91C()
{
  JUMPOUT(0x20A569A10);
}

void sub_20A56B928()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56B930()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56B938()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56B940()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56B948()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56B950()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56B958()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56B960()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56B968()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56B970()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56B978()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56B980()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56B988()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56B990()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56B998()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56B9A0()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56B9A8()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56B9B0()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56B9B8()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56B9C0()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56B9C8()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56B9D0()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56B9D8()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56B9E0()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56B9E8()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56B9F0()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56B9F8()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BA00()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BA08()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BA10()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BA18()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BA20()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BA28()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BA30()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BA38()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BA40()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BA48()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BA50()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BA58()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BA60()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BA68()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BA70()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BA78()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BA80()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BA88()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BA90()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BA98()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BAA0()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BAA8()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BAB0()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BAB8()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BAC0()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BAC8()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BAD0()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BAD8()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BAE0()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BAE8()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BAF0()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BAF8()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BB00()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BB0C()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BB1C()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BB2C()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BB34()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BB3C()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BB44()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BB4C()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BB54()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BB5C()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BB64()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BB6C()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BB74()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BB7C()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BB84()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BB8C()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BB94()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BB9C()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BBA4()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BBAC()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BBB4()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BBBC()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BBC4()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BBCC()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BBD4()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BBDC()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BBE4()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BBEC()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BBF4()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BBFC()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BC04()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BC0C()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BC14()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BC1C()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BC24()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BC2C()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BC34()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BC3C()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BC48()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BC50()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BC58()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BC60()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BC68()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BC70()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BC78()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BC80()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BC88()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BC90()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BC98()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BCA0()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BCA8()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BCB0()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BCB8()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BCC0()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BCC8()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BCD0()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BCD8()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BCE0()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BCE8()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BCF0()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BCF8()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BD00()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BD08()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BD10()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BD18()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BD20()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BD28()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BD30()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BD38()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BD40()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BD48()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BD50()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BD58()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BD60()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BD68()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BD70()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BD78()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BD80()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BD88()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BD90()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BD98()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BDA0()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BDA8()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BDB0()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BDB8()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BDC0()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BDC8()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BDD0()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BDD8()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BDE0()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BDE8()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BDF0()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BDF8()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BE00()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BE08()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BE10()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BE18()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BE20()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BE28()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BE30()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BE38()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BE40()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BE48()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BE50()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BE58()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BE60()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BE68()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BE70()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BE78()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BE80()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BE88()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BE90()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BE98()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BEA0()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BEA8()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BEB0()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BEB8()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BEC0()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BEC8()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BED0()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BED8()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BEE0()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BEE8()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BEF0()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BEF8()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BF00()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BF08()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BF10()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BF18()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BF20()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BF28()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BF30()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BF38()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BF40()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BF50()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BF60()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BF70()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BF80()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BF90()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BFA0()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BFB0()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BFC0()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BFD0()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BFE0()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56BFF0()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56C000()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56C010()
{
  JUMPOUT(0x20A569B4CLL);
}

void sub_20A56C020()
{
  JUMPOUT(0x20A569B4CLL);
}

uint64_t ArmandDeviceData.hashValue.getter()
{
  __int128 v1[4];

  sub_20A5B929C();
  ArmandDeviceData.hash(into:)(v1);
  return sub_20A5B92CC();
}

uint64_t sub_20A56C068()
{
  __int128 v1[4];

  sub_20A5B929C();
  ArmandDeviceData.hash(into:)(v1);
  return sub_20A5B92CC();
}

uint64_t sub_20A56C0A8()
{
  __int128 v1[4];

  sub_20A5B929C();
  ArmandDeviceData.hash(into:)(v1);
  return sub_20A5B92CC();
}

uint64_t sub_20A56C0E8(void *__src, _QWORD *a2)
{
  void *v3;
  _BYTE __dst[1024];
  _BYTE v6[1024];

  memcpy(__dst, __src, 0x3F9uLL);
  v3 = (void *)(*a2 + 112);
  swift_beginAccess();
  memcpy(v6, v3, 0x3F9uLL);
  memcpy(v3, __dst, 0x3F9uLL);
  sub_20A497F30((uint64_t)__dst);
  return sub_20A47D1B0((uint64_t)v6);
}

uint64_t sub_20A56C168@<X0>(void *a1@<X8>)
{
  uint64_t v1;
  const void *v3;
  _BYTE __dst[1024];

  v3 = (const void *)(v1 + 112);
  swift_beginAccess();
  memcpy(__dst, v3, 0x3F9uLL);
  memcpy(a1, v3, 0x3F9uLL);
  return sub_20A497F30((uint64_t)__dst);
}

uint64_t sub_20A56C1D4(const void *a1)
{
  uint64_t v1;
  void *v3;
  _BYTE __dst[1024];

  v3 = (void *)(v1 + 112);
  swift_beginAccess();
  memcpy(__dst, v3, 0x3F9uLL);
  memcpy(v3, a1, 0x3F9uLL);
  return sub_20A47D1B0((uint64_t)__dst);
}

uint64_t (*sub_20A56C240())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_20A56C27C()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 1130) == 1)
    return *(unsigned __int8 *)(v0 + 1129);
  else
    return 0;
}

uint64_t ArmandDataFiller.__allocating_init(sessionIdentifier:)(uint64_t a1, unint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  ArmandDataFiller.init(sessionIdentifier:)(a1, a2);
  return v4;
}

_QWORD *ArmandDataFiller.init(sessionIdentifier:)(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  unint64_t v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v51;
  __int128 v52;
  uint64_t v53;
  _UNKNOWN **v54;
  char v55;
  char v56;
  char v57;
  char v58;
  char v59;
  char v60;
  char v61;
  char v62;
  _BYTE v63[7];
  _BYTE v64[11];
  __int16 v65;
  int v66;
  __int16 v67;
  int v68;
  __int16 v69;
  int v70;
  __int16 v71;
  int v72;
  __int16 v73;
  int v74;
  __int16 v75;
  int v76;
  __int16 v77;
  int v78;
  __int16 v79;
  int v80;
  __int16 v81;
  char v82;
  int v83;
  __int16 v84;
  char v85;
  _BYTE v86[7];
  _BYTE v87[7];
  _BYTE v88[7];
  _BYTE v89[7];
  _BYTE v90[7];
  _BYTE v91[7];
  _BYTE v92[7];
  _BYTE v93[7];
  _BYTE v94[7];
  _BYTE v95[7];
  _BYTE v96[7];
  _BYTE v97[7];
  _BYTE v98[11];
  __int16 v99;
  char v100;
  int v101;
  __int16 v102;
  char v103;
  int v104;
  __int16 v105;
  char v106;
  int v107;
  __int16 v108;
  char v109;
  int v110;
  __int16 v111;
  char v112;
  int v113;
  char v114;
  _BYTE v115[12];
  int v116;
  char v117;
  _BYTE v118[7];
  _BYTE v119[7];
  _BYTE v120[7];
  _BYTE v121[11];
  __int16 v122;
  char v123;
  _BYTE v124[11];
  __int16 v125;
  char v126;
  _BYTE v127[7];
  _BYTE v128[7];
  _BYTE v129[7];
  _BYTE v130[7];
  _BYTE v131[7];
  _BYTE v132[7];

  v3 = (_QWORD *)v2;
  swift_defaultActor_initialize();
  v6 = sub_20A46AC70(MEMORY[0x24BEE4AF8]);
  v62 = 1;
  v61 = 1;
  v60 = 1;
  v59 = 1;
  v58 = 1;
  v57 = 1;
  v56 = 1;
  v55 = 1;
  v126 = 1;
  v123 = 1;
  v112 = 1;
  v109 = 1;
  v106 = 1;
  v103 = 1;
  v100 = 1;
  v85 = 1;
  v82 = 1;
  *(_QWORD *)(v2 + 128) = 0;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_BYTE *)(v2 + 136) = -46;
  *(_DWORD *)(v2 + 137) = *(_DWORD *)v132;
  *(_DWORD *)(v2 + 140) = *(_DWORD *)&v132[3];
  *(_OWORD *)(v2 + 144) = 0u;
  *(_BYTE *)(v2 + 160) = -46;
  *(_DWORD *)(v2 + 161) = *(_DWORD *)v131;
  *(_DWORD *)(v2 + 164) = *(_DWORD *)&v131[3];
  *(_OWORD *)(v2 + 168) = 0u;
  *(_BYTE *)(v2 + 184) = -46;
  *(_DWORD *)(v2 + 188) = *(_DWORD *)&v130[3];
  *(_DWORD *)(v2 + 185) = *(_DWORD *)v130;
  *(_OWORD *)(v2 + 192) = 0u;
  *(_BYTE *)(v2 + 208) = -46;
  *(_DWORD *)(v2 + 212) = *(_DWORD *)&v129[3];
  *(_DWORD *)(v2 + 209) = *(_DWORD *)v129;
  *(_OWORD *)(v2 + 216) = 0u;
  *(_BYTE *)(v2 + 232) = -46;
  *(_DWORD *)(v2 + 236) = *(_DWORD *)&v128[3];
  *(_DWORD *)(v2 + 233) = *(_DWORD *)v128;
  *(_OWORD *)(v2 + 240) = 0u;
  *(_BYTE *)(v2 + 256) = -46;
  *(_DWORD *)(v2 + 260) = *(_DWORD *)&v127[3];
  *(_DWORD *)(v2 + 257) = *(_DWORD *)v127;
  *(_QWORD *)(v2 + 264) = 0;
  *(_BYTE *)(v2 + 272) = v126;
  *(_BYTE *)(v2 + 273) = -46;
  *(_WORD *)(v2 + 278) = v125;
  *(_DWORD *)(v2 + 274) = *(_DWORD *)&v124[7];
  *(_OWORD *)(v2 + 280) = 0u;
  *(_BYTE *)(v2 + 296) = -46;
  *(_DWORD *)(v2 + 300) = *(_DWORD *)&v124[3];
  *(_DWORD *)(v2 + 297) = *(_DWORD *)v124;
  *(_QWORD *)(v2 + 304) = 0;
  *(_BYTE *)(v2 + 312) = v123;
  *(_BYTE *)(v2 + 313) = -46;
  v7 = *(_DWORD *)&v121[7];
  *(_WORD *)(v2 + 318) = v122;
  *(_DWORD *)(v2 + 314) = v7;
  *(_OWORD *)(v2 + 320) = 0u;
  *(_BYTE *)(v2 + 336) = -46;
  v8 = *(_DWORD *)v121;
  *(_DWORD *)(v2 + 340) = *(_DWORD *)&v121[3];
  *(_DWORD *)(v2 + 337) = v8;
  *(_OWORD *)(v2 + 344) = 0u;
  *(_BYTE *)(v2 + 360) = -46;
  v9 = *(_DWORD *)v120;
  *(_DWORD *)(v2 + 364) = *(_DWORD *)&v120[3];
  *(_DWORD *)(v2 + 361) = v9;
  *(_OWORD *)(v2 + 368) = 0u;
  *(_BYTE *)(v2 + 384) = -46;
  v10 = *(_DWORD *)v119;
  *(_DWORD *)(v2 + 388) = *(_DWORD *)&v119[3];
  *(_DWORD *)(v2 + 385) = v10;
  *(_OWORD *)(v2 + 392) = 0u;
  *(_BYTE *)(v2 + 408) = -46;
  v11 = *(_DWORD *)v118;
  *(_DWORD *)(v2 + 412) = *(_DWORD *)&v118[3];
  *(_DWORD *)(v2 + 409) = v11;
  *(_OWORD *)(v2 + 416) = 0u;
  *(_WORD *)(v2 + 432) = 722;
  *(_BYTE *)(v2 + 434) = -46;
  v12 = v116;
  *(_BYTE *)(v2 + 439) = v117;
  *(_DWORD *)(v2 + 435) = v12;
  *(_OWORD *)(v2 + 440) = 0u;
  *(_WORD *)(v2 + 456) = 722;
  *(_BYTE *)(v2 + 458) = -46;
  v13 = *(_DWORD *)&v115[7];
  *(_BYTE *)(v2 + 463) = v115[11];
  *(_DWORD *)(v2 + 459) = v13;
  *(_OWORD *)(v2 + 464) = 0u;
  *(_BYTE *)(v2 + 480) = -46;
  v14 = *(_DWORD *)v115;
  *(_DWORD *)(v2 + 484) = *(_DWORD *)&v115[3];
  *(_DWORD *)(v2 + 481) = v14;
  *(_OWORD *)(v2 + 488) = 0u;
  *(_WORD *)(v2 + 504) = 722;
  *(_BYTE *)(v2 + 506) = -46;
  v15 = v113;
  *(_BYTE *)(v2 + 511) = v114;
  *(_DWORD *)(v2 + 507) = v15;
  *(_QWORD *)(v2 + 512) = 0;
  *(_BYTE *)(v2 + 520) = v112;
  *(_BYTE *)(v2 + 521) = -46;
  v16 = v110;
  *(_WORD *)(v2 + 526) = v111;
  *(_DWORD *)(v2 + 522) = v16;
  *(_QWORD *)(v2 + 528) = 0;
  *(_BYTE *)(v2 + 536) = v109;
  *(_BYTE *)(v2 + 537) = -46;
  v17 = v107;
  *(_WORD *)(v2 + 542) = v108;
  *(_DWORD *)(v2 + 538) = v17;
  *(_QWORD *)(v2 + 544) = 0;
  *(_BYTE *)(v2 + 552) = v106;
  *(_BYTE *)(v2 + 553) = -46;
  v18 = v104;
  *(_WORD *)(v2 + 558) = v105;
  *(_DWORD *)(v2 + 554) = v18;
  *(_QWORD *)(v2 + 560) = 0;
  *(_BYTE *)(v2 + 568) = v103;
  *(_BYTE *)(v2 + 569) = -46;
  v19 = v101;
  *(_WORD *)(v2 + 574) = v102;
  *(_DWORD *)(v2 + 570) = v19;
  *(_QWORD *)(v2 + 576) = 0;
  *(_BYTE *)(v2 + 584) = v100;
  *(_BYTE *)(v2 + 585) = -46;
  v20 = *(_DWORD *)&v98[7];
  *(_WORD *)(v2 + 590) = v99;
  *(_DWORD *)(v2 + 586) = v20;
  *(_QWORD *)(v2 + 592) = v6;
  *(_BYTE *)(v2 + 600) = -39;
  v21 = *(_DWORD *)v98;
  *(_DWORD *)(v2 + 604) = *(_DWORD *)&v98[3];
  *(_DWORD *)(v2 + 601) = v21;
  *(_OWORD *)(v2 + 608) = 0u;
  *(_BYTE *)(v2 + 624) = -46;
  v22 = *(_DWORD *)v97;
  *(_DWORD *)(v2 + 628) = *(_DWORD *)&v97[3];
  *(_DWORD *)(v2 + 625) = v22;
  *(_OWORD *)(v2 + 632) = 0u;
  *(_BYTE *)(v2 + 648) = -46;
  v23 = *(_DWORD *)v96;
  *(_DWORD *)(v2 + 652) = *(_DWORD *)&v96[3];
  *(_DWORD *)(v2 + 649) = v23;
  *(_OWORD *)(v2 + 656) = 0u;
  *(_BYTE *)(v2 + 672) = -46;
  v24 = *(_DWORD *)v95;
  *(_DWORD *)(v2 + 676) = *(_DWORD *)&v95[3];
  *(_DWORD *)(v2 + 673) = v24;
  *(_OWORD *)(v2 + 680) = 0u;
  *(_BYTE *)(v2 + 696) = -46;
  v25 = *(_DWORD *)v94;
  *(_DWORD *)(v2 + 700) = *(_DWORD *)&v94[3];
  *(_DWORD *)(v2 + 697) = v25;
  *(_OWORD *)(v2 + 704) = 0u;
  *(_BYTE *)(v2 + 720) = -46;
  v26 = *(_DWORD *)v93;
  *(_DWORD *)(v2 + 724) = *(_DWORD *)&v93[3];
  *(_DWORD *)(v2 + 721) = v26;
  *(_OWORD *)(v2 + 728) = 0u;
  *(_BYTE *)(v2 + 744) = -46;
  v27 = *(_DWORD *)v92;
  *(_DWORD *)(v2 + 748) = *(_DWORD *)&v92[3];
  *(_DWORD *)(v2 + 745) = v27;
  *(_OWORD *)(v2 + 752) = 0u;
  *(_BYTE *)(v2 + 768) = -46;
  v28 = *(_DWORD *)v91;
  *(_DWORD *)(v2 + 772) = *(_DWORD *)&v91[3];
  *(_DWORD *)(v2 + 769) = v28;
  *(_OWORD *)(v2 + 776) = 0u;
  *(_BYTE *)(v2 + 792) = -46;
  v29 = *(_DWORD *)v90;
  *(_DWORD *)(v2 + 796) = *(_DWORD *)&v90[3];
  *(_DWORD *)(v2 + 793) = v29;
  *(_OWORD *)(v2 + 800) = 0u;
  *(_BYTE *)(v2 + 816) = -46;
  v30 = *(_DWORD *)v89;
  *(_DWORD *)(v2 + 820) = *(_DWORD *)&v89[3];
  *(_DWORD *)(v2 + 817) = v30;
  *(_OWORD *)(v2 + 824) = 0u;
  *(_BYTE *)(v2 + 840) = -46;
  v31 = *(_DWORD *)v88;
  *(_DWORD *)(v2 + 844) = *(_DWORD *)&v88[3];
  *(_DWORD *)(v2 + 841) = v31;
  *(_OWORD *)(v2 + 848) = 0u;
  *(_BYTE *)(v2 + 864) = -46;
  v32 = *(_DWORD *)v87;
  *(_DWORD *)(v2 + 868) = *(_DWORD *)&v87[3];
  *(_DWORD *)(v2 + 865) = v32;
  *(_OWORD *)(v2 + 872) = 0u;
  *(_BYTE *)(v2 + 888) = -46;
  v33 = *(_DWORD *)v86;
  *(_DWORD *)(v2 + 892) = *(_DWORD *)&v86[3];
  *(_DWORD *)(v2 + 889) = v33;
  *(_DWORD *)(v2 + 896) = -771567102;
  *(_QWORD *)(v2 + 904) = 0;
  *(_BYTE *)(v2 + 912) = v85;
  *(_BYTE *)(v2 + 913) = -46;
  v34 = v83;
  *(_WORD *)(v2 + 918) = v84;
  *(_DWORD *)(v2 + 914) = v34;
  *(_QWORD *)(v2 + 920) = 0;
  *(_BYTE *)(v2 + 928) = v82;
  *(_BYTE *)(v2 + 929) = -46;
  v35 = v80;
  *(_WORD *)(v2 + 934) = v81;
  *(_DWORD *)(v2 + 930) = v35;
  *(_QWORD *)(v2 + 936) = 0;
  *(_WORD *)(v2 + 944) = -11775;
  v36 = v78;
  *(_WORD *)(v2 + 950) = v79;
  *(_DWORD *)(v2 + 946) = v36;
  *(_QWORD *)(v2 + 952) = 0;
  *(_WORD *)(v2 + 960) = -11775;
  v37 = v76;
  *(_WORD *)(v2 + 966) = v77;
  *(_DWORD *)(v2 + 962) = v37;
  *(_QWORD *)(v2 + 968) = 0;
  *(_WORD *)(v2 + 976) = -11775;
  v38 = v74;
  *(_WORD *)(v2 + 982) = v75;
  *(_DWORD *)(v2 + 978) = v38;
  *(_QWORD *)(v2 + 984) = 0;
  *(_WORD *)(v2 + 992) = -11775;
  v39 = v72;
  *(_WORD *)(v2 + 998) = v73;
  *(_DWORD *)(v2 + 994) = v39;
  *(_QWORD *)(v2 + 1000) = 0;
  *(_WORD *)(v2 + 1008) = -11775;
  v40 = v70;
  *(_WORD *)(v2 + 1014) = v71;
  *(_DWORD *)(v2 + 1010) = v40;
  *(_QWORD *)(v2 + 1016) = 0;
  *(_WORD *)(v2 + 1024) = -11775;
  v41 = v68;
  *(_WORD *)(v2 + 1030) = v69;
  *(_DWORD *)(v2 + 1026) = v41;
  *(_QWORD *)(v2 + 1032) = 0;
  *(_WORD *)(v2 + 1040) = -11775;
  v42 = v66;
  *(_WORD *)(v2 + 1046) = v67;
  *(_DWORD *)(v2 + 1042) = v42;
  *(_QWORD *)(v2 + 1048) = 0;
  *(_WORD *)(v2 + 1056) = -11775;
  v43 = *(_DWORD *)&v64[7];
  *(_WORD *)(v2 + 1062) = v65;
  *(_DWORD *)(v2 + 1058) = v43;
  *(_OWORD *)(v2 + 1064) = 0u;
  *(_BYTE *)(v2 + 1080) = -46;
  v44 = *(_DWORD *)v64;
  *(_DWORD *)(v2 + 1084) = *(_DWORD *)&v64[3];
  *(_DWORD *)(v2 + 1081) = v44;
  *(_OWORD *)(v2 + 1088) = 0u;
  *(_BYTE *)(v2 + 1104) = -46;
  v45 = *(_DWORD *)v63;
  *(_DWORD *)(v2 + 1108) = *(_DWORD *)&v63[3];
  *(_DWORD *)(v2 + 1105) = v45;
  *(_OWORD *)(v2 + 1112) = 0u;
  *(_WORD *)(v2 + 1128) = 210;
  *(_BYTE *)(v2 + 1130) = 0;
  *(_QWORD *)(v2 + 1152) = 0;
  *(_OWORD *)(v2 + 1136) = 0u;
  v46 = type metadata accessor for PhoneCertificateVendorWrapper();
  swift_allocObject();
  v53 = v46;
  v54 = &off_24C315AE0;
  *(_QWORD *)&v52 = sub_20A498EF8();
  v47 = type metadata accessor for PhoneAuthenticationCertificateProvider();
  v48 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_QWORD *)(v48 + 152) = 0;
  sub_20A44CFD8(&v52, v48 + 112);
  v3[148] = v47;
  v3[149] = &off_24C315CE0;
  v3[145] = v48;
  v49 = 0x72656C6C69466464;
  if (a2)
    v49 = a1;
  else
    a2 = 0xE800000000000000;
  v3[150] = v49;
  v3[151] = a2;
  *(_QWORD *)&v52 = v49;
  *((_QWORD *)&v52 + 1) = a2;
  v51 = 5;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD00000000000001FLL, 0x800000020A5E4C90, &v51);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_20A56C9A4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v14;

  v2 = v1;
  v14 = 5;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD00000000000001FLL, 0x800000020A5E5350, &v14);
  swift_bridgeObjectRelease();
  v4 = a1[2];
  v5 = *((unsigned __int8 *)a1 + 24);
  swift_beginAccess();
  if (v5)
    v6 = -45;
  else
    v6 = -47;
  *(_QWORD *)(v2 + 304) = v4;
  *(_BYTE *)(v2 + 312) = v5;
  *(_BYTE *)(v2 + 313) = v6;
  v8 = a1[10];
  v7 = a1[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (v7)
    v9 = -47;
  else
    v9 = -45;
  *(_QWORD *)(v2 + 344) = v8;
  *(_QWORD *)(v2 + 352) = v7;
  *(_BYTE *)(v2 + 360) = v9;
  v11 = *a1;
  v10 = a1[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (v10)
    v12 = -47;
  else
    v12 = -45;
  *(_QWORD *)(v2 + 320) = v11;
  *(_QWORD *)(v2 + 328) = v10;
  *(_BYTE *)(v2 + 336) = v12;
  swift_endAccess();
  v14 = 5;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD000000000000029, 0x800000020A5E5370, &v14);
  return swift_bridgeObjectRelease();
}

uint64_t sub_20A56CB04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[15] = a2;
  v3[16] = v2;
  v3[14] = a1;
  return swift_task_switch();
}

uint64_t sub_20A56CB20()
{
  uint64_t v0;
  const __CFData *v1;
  SecCertificateRef v2;
  __SecCertificate *v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  _QWORD v31[2];
  uint64_t v32;
  unint64_t v33;

  if (*(_QWORD *)(v0 + 120) >> 60 == 15)
    goto LABEL_5;
  sub_20A45964C(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120));
  v1 = (const __CFData *)sub_20A5B8540();
  v2 = SecCertificateCreateWithData(0, v1);

  if (!v2)
  {
    sub_20A44CFC4(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120));
LABEL_5:
    v4 = *(_QWORD *)(v0 + 128);
    v5 = *(_QWORD *)(v4 + 1208);
    v32 = *(_QWORD *)(v4 + 1200);
    v33 = v5;
    LOBYTE(v31[0]) = 5;
    swift_bridgeObjectRetain();
    CoreODILogger.debug(_:category:)(0xD000000000000036, 0x800000020A5E52D0, v31);
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v3 = v2;
  v7 = sub_20A4B9E40(v3);
  v27 = v8;
  v28 = *(_QWORD *)(v0 + 128);
  v30 = *(_QWORD *)(v0 + 120);
  v29 = *(_QWORD *)(v0 + 112);
  v26 = v9;
  v25 = sub_20A4BA630(1684628851, 0xE400000000000000, (uint64_t)v7);
  v11 = v10;
  v24 = sub_20A4BA870(1145652037, 0xE400000000000000, (uint64_t)v7);
  v23 = v12;
  v13 = sub_20A4BA630(1835954803, 0xE400000000000000, (uint64_t)v7);
  v15 = v14;
  v16 = sub_20A4BA630(1684628597, 0xE400000000000000, (uint64_t)v7);
  v18 = v17;
  v19 = sub_20A4BA630(1768254825, 0xE400000000000000, (uint64_t)v7);
  v21 = v20;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 16) = v25;
  *(_QWORD *)(v0 + 24) = v11;
  *(_QWORD *)(v0 + 32) = v24;
  *(_BYTE *)(v0 + 40) = v23 & 1;
  *(_QWORD *)(v0 + 48) = v13;
  *(_QWORD *)(v0 + 56) = v15;
  *(_QWORD *)(v0 + 64) = v16;
  *(_QWORD *)(v0 + 72) = v18;
  *(_QWORD *)(v0 + 80) = v19;
  *(_QWORD *)(v0 + 88) = v21;
  *(_QWORD *)(v0 + 96) = v27;
  *(_QWORD *)(v0 + 104) = v26;
  v22 = *(_QWORD *)(v28 + 1208);
  v31[0] = *(_QWORD *)(v28 + 1200);
  v31[1] = v22;
  v32 = 5;
  v33 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_20A5B8E94();
  sub_20A5B899C();
  sub_20A5B84EC();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  CoreODILogger.debug(_:category:)(0, 0xE000000000000000, &v32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_20A56C9A4((uint64_t *)(v0 + 16));

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_20A44CFC4(v29, v30);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A56CE1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[22] = a2;
  v3[23] = v2;
  v3[21] = a1;
  v3[24] = *(_QWORD *)(type metadata accessor for ODIKnownBinding() - 8);
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A56CE8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  unint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD v16[2];
  unint64_t v17;
  unint64_t v18;

  v1 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v1 + 1200);
  *(_QWORD *)(v0 + 216) = v3;
  v4 = *(_QWORD *)(v1 + 1208);
  *(_QWORD *)(v0 + 224) = v4;
  v16[0] = v3;
  v16[1] = v4;
  swift_bridgeObjectRetain();
  sub_20A5B8E94();
  swift_bridgeObjectRelease();
  v17 = 0xD000000000000005;
  v18 = 0x800000020A5E51F0;
  MEMORY[0x20BD25B4C](v2, MEMORY[0x24BEE0D00]);
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  CoreODILogger.debug(_:category:)(0xD000000000000024, 0x800000020A5E51F0, &v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(v2 + 16);
  *(_QWORD *)(v0 + 232) = v5;
  if (v5)
  {
    v6 = *(_QWORD *)(v0 + 168);
    v7 = *(_QWORD **)(v0 + 176);
    *(_QWORD *)(v0 + 240) = 0;
    *(_QWORD *)(v0 + 248) = 0;
    v8 = *(_QWORD *)(v6 + 32);
    *(_QWORD *)(v0 + 256) = v8;
    v9 = *(_QWORD *)(v6 + 40);
    *(_QWORD *)(v0 + 264) = v9;
    swift_bridgeObjectRetain();
    v10 = v7[3];
    v11 = v7[4];
    __swift_project_boxed_opaque_existential_1(v7, v10);
    v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(v11 + 24)
                                                                              + *(_QWORD *)(v11 + 24));
    swift_bridgeObjectRetain();
    v12 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 272) = v12;
    *v12 = v0;
    v12[1] = sub_20A56D080;
    return v15(v0 + 56, v8, v9, v10, v11);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 224);
    v17 = *(_QWORD *)(v0 + 216);
    v18 = v14;
    LOBYTE(v16[0]) = 5;
    swift_bridgeObjectRetain();
    CoreODILogger.debug(_:category:)(0xD00000000000002CLL, 0x800000020A5E5220, v16);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_20A56D080()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A56D0D8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v3)(void);
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  _BOOL8 v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  _QWORD *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t (*v47)(_QWORD, _QWORD, void *, _QWORD *, uint64_t, uint64_t);
  uint64_t (*v48)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  char v49[9];

  if (!*(_QWORD *)(v0 + 80))
  {
    v6 = *(_QWORD *)(v0 + 256);
    v5 = *(_QWORD *)(v0 + 264);
    v7 = *(_QWORD **)(v0 + 176);
    sub_20A44CE2C(v0 + 56, &qword_2545FA208);
    v8 = v7[3];
    v9 = v7[4];
    __swift_project_boxed_opaque_existential_1(v7, v8);
    v10 = swift_allocObject();
    *(_QWORD *)(v0 + 280) = v10;
    swift_weakInit();
    v11 = (_QWORD *)swift_allocObject();
    *(_QWORD *)(v0 + 288) = v11;
    v11[2] = v10;
    v11[3] = v6;
    v11[4] = v5;
    v47 = (uint64_t (*)(_QWORD, _QWORD, void *, _QWORD *, uint64_t, uint64_t))(**(int **)(v9 + 32)
                                                                                     + *(_QWORD *)(v9 + 32));
    swift_bridgeObjectRetain();
    swift_retain();
    v12 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 296) = v12;
    *v12 = v0;
    v12[1] = sub_20A56D5B0;
    return v47(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 264), &unk_2545FC150, v11, v8, v9);
  }
  v1 = *(_QWORD *)(v0 + 240);
  v2 = *(_QWORD **)(v0 + 208);
  sub_20A44CFD8((__int128 *)(v0 + 56), v0 + 16);
  sub_20A47BD60(v0 + 16, v0 + 96);
  sub_20A544058((_QWORD *)(v0 + 96), v2);
  if (v1)
  {
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
  v13 = *(_QWORD *)(v0 + 184);
  swift_beginAccess();
  *(_BYTE *)(v13 + 600) = -47;
  if (!*(_QWORD *)(v13 + 592))
  {
    v14 = *(_QWORD *)(v0 + 184);
    *(_QWORD *)(v14 + 592) = sub_20A46AC70(MEMORY[0x24BEE4AF8]);
  }
  v16 = *(_QWORD **)(v0 + 256);
  v15 = *(_QWORD *)(v0 + 264);
  v17 = *(_QWORD *)(v0 + 184);
  sub_20A4797C4(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 200));
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v19 = *(_QWORD *)(v17 + 592);
  *(_QWORD *)(v0 + 160) = v19;
  *(_QWORD *)(v17 + 592) = 0x8000000000000000;
  v20 = sub_20A47094C((uint64_t)v16, v15);
  v22 = *(_QWORD *)(v19 + 16);
  v23 = (v21 & 1) == 0;
  v24 = __OFADD__(v22, v23);
  v25 = v22 + v23;
  if (v24)
  {
    __break(1u);
    goto LABEL_16;
  }
  LOBYTE(v15) = v21;
  v16 = (_QWORD *)(v0 + 160);
  if (*(_QWORD *)(v19 + 24) >= v25)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_13;
LABEL_16:
    v30 = v20;
    sub_20A478AB4();
    v20 = v30;
    v29 = (_QWORD *)*v16;
    if ((v15 & 1) != 0)
      goto LABEL_14;
    goto LABEL_17;
  }
  v27 = *(_QWORD *)(v0 + 256);
  v26 = *(_QWORD *)(v0 + 264);
  sub_20A474F1C(v25, isUniquelyReferenced_nonNull_native);
  v20 = sub_20A47094C(v27, v26);
  if ((v15 & 1) != (v28 & 1))
    return sub_20A5B9218();
LABEL_13:
  v29 = (_QWORD *)*v16;
  if ((v15 & 1) != 0)
  {
LABEL_14:
    sub_20A47984C(*(_QWORD *)(v0 + 200), v29[7] + *(_QWORD *)(*(_QWORD *)(v0 + 192) + 72) * v20);
    goto LABEL_19;
  }
LABEL_17:
  v32 = *(_QWORD *)(v0 + 256);
  v31 = *(_QWORD *)(v0 + 264);
  v34 = *(_QWORD *)(v0 + 192);
  v33 = *(_QWORD *)(v0 + 200);
  v29[(v20 >> 6) + 8] |= 1 << v20;
  v35 = (_QWORD *)(v29[6] + 16 * v20);
  *v35 = v32;
  v35[1] = v31;
  result = sub_20A465A70(v33, v29[7] + *(_QWORD *)(v34 + 72) * v20, (uint64_t (*)(_QWORD))type metadata accessor for ODIKnownBinding);
  v36 = v29[2];
  v24 = __OFADD__(v36, 1);
  v37 = v36 + 1;
  if (v24)
  {
    __break(1u);
    return result;
  }
  v29[2] = v37;
  swift_bridgeObjectRetain();
LABEL_19:
  v38 = *(_QWORD *)(v0 + 208);
  *(_QWORD *)(*(_QWORD *)(v0 + 184) + 592) = v29;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_bridgeObjectRelease();
  sub_20A465AB4(v38, (uint64_t (*)(_QWORD))type metadata accessor for ODIKnownBinding);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  v39 = *(_QWORD *)(v0 + 248) + 1;
  if (v39 == *(_QWORD *)(v0 + 232))
  {
    swift_bridgeObjectRelease();
    v49[0] = 5;
    swift_bridgeObjectRetain();
    CoreODILogger.debug(_:category:)(0xD00000000000002CLL, 0x800000020A5E5220, v49);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
  *(_QWORD *)(v0 + 240) = 0;
  *(_QWORD *)(v0 + 248) = v39;
  v40 = *(_QWORD **)(v0 + 176);
  v41 = *(_QWORD *)(v0 + 168) + 16 * v39;
  v42 = *(_QWORD *)(v41 + 32);
  *(_QWORD *)(v0 + 256) = v42;
  v43 = *(_QWORD *)(v41 + 40);
  *(_QWORD *)(v0 + 264) = v43;
  v44 = v40[3];
  v45 = v40[4];
  __swift_project_boxed_opaque_existential_1(v40, v44);
  v48 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(v45 + 24)
                                                                            + *(_QWORD *)(v45 + 24));
  swift_bridgeObjectRetain();
  v46 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 272) = v46;
  *v46 = v0;
  v46[1] = sub_20A56D080;
  return v48(v0 + 56, v42, v43, v44, v45);
}

uint64_t sub_20A56D5B0()
{
  swift_task_dealloc();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_20A56D630()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  char v11;

  v1 = *(_QWORD *)(v0 + 248) + 1;
  if (v1 == *(_QWORD *)(v0 + 232))
  {
    swift_bridgeObjectRelease();
    v11 = 5;
    swift_bridgeObjectRetain();
    CoreODILogger.debug(_:category:)(0xD00000000000002CLL, 0x800000020A5E5220, &v11);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_QWORD *)(v0 + 248) = v1;
    v3 = *(_QWORD **)(v0 + 176);
    v4 = *(_QWORD *)(v0 + 168) + 16 * v1;
    v5 = *(_QWORD *)(v4 + 32);
    *(_QWORD *)(v0 + 256) = v5;
    v6 = *(_QWORD *)(v4 + 40);
    *(_QWORD *)(v0 + 264) = v6;
    v7 = v3[3];
    v8 = v3[4];
    __swift_project_boxed_opaque_existential_1(v3, v7);
    v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(v8 + 24)
                                                                              + *(_QWORD *)(v8 + 24));
    swift_bridgeObjectRetain();
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 272) = v9;
    *v9 = v0;
    v9[1] = sub_20A56D080;
    return v10(v0 + 56, v5, v6, v7, v8);
  }
}

uint64_t sub_20A56D78C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[15] = a3;
  v4[16] = a4;
  v4[13] = a1;
  v4[14] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA938);
  v4[17] = swift_task_alloc();
  v5 = type metadata accessor for ODIKnownBinding();
  v4[18] = v5;
  v4[19] = *(_QWORD *)(v5 - 8);
  v4[20] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A56D814()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t Strong;

  v1 = *(_QWORD **)(v0 + 160);
  sub_20A47BD60(*(_QWORD *)(v0 + 104), v0 + 16);
  sub_20A544058((_QWORD *)(v0 + 16), v1);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 168) = Strong;
  if (Strong)
    return swift_task_switch();
  sub_20A465AB4(*(_QWORD *)(v0 + 160), (uint64_t (*)(_QWORD))type metadata accessor for ODIKnownBinding);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A56D908()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0[21];
  swift_beginAccess();
  *(_BYTE *)(v1 + 600) = -47;
  if (!*(_QWORD *)(v1 + 592))
    *(_QWORD *)(v1 + 592) = sub_20A46AC70(MEMORY[0x24BEE4AF8]);
  v2 = v0[18];
  v3 = v0[19];
  v5 = v0[16];
  v4 = v0[17];
  v6 = v0[15];
  sub_20A4797C4(v0[20], v4);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v4, 0, 1, v2);
  swift_bridgeObjectRetain();
  sub_20A4DBA08(v4, v6, v5);
  swift_endAccess();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_20A56D9EC()
{
  uint64_t v0;

  sub_20A465AB4(*(_QWORD *)(v0 + 160), (uint64_t (*)(_QWORD))type metadata accessor for ODIKnownBinding);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A56DA40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  return swift_task_switch();
}

uint64_t sub_20A56DA5C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  uint64_t *v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  _BYTE *v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _BYTE *v23;
  _QWORD *v24;
  uint64_t *v25;
  _BYTE *v26;
  _QWORD *v27;
  uint64_t *v28;
  _BYTE *v29;
  _QWORD *v30;
  uint64_t *v31;
  uint64_t v32;
  unsigned __int8 *v33;
  uint64_t v34;
  unint64_t v35;

  v1 = *(_QWORD **)(v0 + 56);
  v2 = v1[2];
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 64);
    v4 = *(_QWORD *)(v3 + 16);
    if (v4)
    {
      v5 = *(_QWORD *)(v0 + 72);
      v31 = (uint64_t *)(v5 + 1064);
      v7 = v1[4];
      v6 = v1[5];
      v8 = (unsigned __int8 *)(v3 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_beginAccess();
      v24 = (_QWORD *)(v5 + 1120);
      v25 = (uint64_t *)(v5 + 1112);
      v23 = (_BYTE *)(v5 + 1128);
      v27 = (_QWORD *)(v5 + 1096);
      v28 = (uint64_t *)(v5 + 1088);
      v26 = (_BYTE *)(v5 + 1104);
      v29 = (_BYTE *)(v5 + 1080);
      v30 = (_QWORD *)(v5 + 1072);
      v9 = v1 + 7;
      v10 = v2 - 1;
      while (1)
      {
        v12 = *v8++;
        v11 = v12;
        if (v6
          && (swift_bridgeObjectRetain(),
              v13 = _s17CoreODIEssentials15BindingsHelpersV17formatPhoneNumber05phoneG016usingCountryCodeSSSgSS_So8NSStringCSgtFZ_0(v7, v6, 0), v15 = v14, swift_bridgeObjectRelease(), v15))
        {
          v32 = v13;
          v33 = v8;
          v16 = v30;
          v17 = v31;
          v18 = v29;
          if (v11)
          {
            v16 = v27;
            v17 = v28;
            v18 = v26;
            if (v11 != 1)
            {
              v16 = v24;
              v17 = v25;
              v18 = v23;
            }
          }
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *v17 = v32;
          *v16 = v15;
          *v18 = -47;
          swift_bridgeObjectRelease();
          v8 = v33;
          if (!v10)
          {
LABEL_19:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return (*(uint64_t (**)(void))(v0 + 8))();
          }
        }
        else
        {
          v34 = 0;
          v35 = 0xE000000000000000;
          swift_bridgeObjectRetain();
          sub_20A5B8E94();
          v19 = v35;
          *(_QWORD *)(v0 + 40) = v34;
          *(_QWORD *)(v0 + 48) = v19;
          sub_20A5B899C();
          *(_BYTE *)(v0 + 80) = v11;
          sub_20A5B8F9C();
          sub_20A5B899C();
          v20 = *(_QWORD *)(v0 + 40);
          v21 = *(_QWORD *)(v0 + 48);
          LOBYTE(v34) = 5;
          CoreODILogger.warning(_:category:)(v20, v21, &v34);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11)
          {
            if (v11 == 1)
            {
              swift_bridgeObjectRelease();
              *(_OWORD *)v28 = xmmword_20A5D79D0;
              *v26 = -47;
              if (!v10)
                goto LABEL_19;
            }
            else
            {
              swift_bridgeObjectRelease();
              *(_OWORD *)v25 = xmmword_20A5D79D0;
              *v23 = -47;
              if (!v10)
                goto LABEL_19;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
            *(_OWORD *)v31 = xmmword_20A5D79D0;
            *v29 = -47;
            if (!v10)
              goto LABEL_19;
          }
        }
        v7 = *(v9 - 1);
        v6 = *v9;
        v9 += 2;
        --v10;
        if (!--v4)
          goto LABEL_19;
      }
    }
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A56DD68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v6 + 64) = a4;
  *(_QWORD *)(v6 + 72) = v5;
  *(_BYTE *)(v6 + 120) = a5;
  *(_QWORD *)(v6 + 48) = a2;
  *(_QWORD *)(v6 + 56) = a3;
  *(_QWORD *)(v6 + 40) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB43E0);
  *(_QWORD *)(v6 + 80) = swift_task_alloc();
  v7 = sub_20A5B8408();
  *(_QWORD *)(v6 + 88) = v7;
  *(_QWORD *)(v6 + 96) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v6 + 104) = swift_task_alloc();
  *(_QWORD *)(v6 + 112) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A56DE08()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  swift_bridgeObjectRetain();
  sub_20A5B899C();
  swift_bridgeObjectRetain();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1738]), sel_init);
  v2 = (void *)sub_20A5B88F4();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v1, sel_personNameComponentsFromString_, v2);

  if (!v3)
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 96) + 56))(*(_QWORD *)(v0 + 80), 1, 1, *(_QWORD *)(v0 + 88));
    goto LABEL_5;
  }
  v5 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 104);
  v7 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 88);
  sub_20A5B83F0();

  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32);
  v8(v7, v4, v6);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v7, 0, 1, v6);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v7, 1, v6) == 1)
  {
LABEL_5:
    sub_20A44CE2C(*(_QWORD *)(v0 + 80), &qword_253EB43E0);
    goto LABEL_6;
  }
  v9 = *(_QWORD *)(v0 + 112);
  v10 = *(_QWORD *)(v0 + 88);
  v11 = *(_QWORD *)(v0 + 96);
  v12 = *(_BYTE *)(v0 + 120) & 1;
  v8(v9, *(_QWORD *)(v0 + 80), v10);
  swift_beginAccess();
  sub_20A5605AC(v9, v12);
  swift_endAccess();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
LABEL_6:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A56DFFC(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;

  v2 = (_QWORD *)(a1 + 64);
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 64);
  result = swift_beginAccess();
  if (v5)
  {
    v7 = __clz(__rbit64(v5));
    goto LABEL_18;
  }
  if ((unint64_t)(v3 + 63) >> 6 > 1)
  {
    v8 = v2[1];
    v9 = 1;
    if (v8)
      goto LABEL_17;
    v9 = 2;
    if ((unint64_t)(v3 + 63) >> 6 <= 2)
      return result;
    v8 = v2[2];
    if (v8)
      goto LABEL_17;
    v9 = 3;
    if ((unint64_t)(v3 + 63) >> 6 <= 3)
      return result;
    v8 = v2[3];
    if (v8)
    {
LABEL_17:
      v7 = __clz(__rbit64(v8)) + (v9 << 6);
LABEL_18:
      __asm { BR              X0 }
    }
    v10 = 4;
    if ((unint64_t)(v3 + 63) >> 6 > 4)
    {
      v8 = v2[4];
      if (v8)
      {
        v9 = 4;
        goto LABEL_17;
      }
      while (1)
      {
        v9 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
          __break(1u);
          JUMPOUT(0x20A56E250);
        }
        if (v9 >= (uint64_t)((unint64_t)(v3 + 63) >> 6))
          break;
        v8 = v2[v9];
        ++v10;
        if (v8)
          goto LABEL_17;
      }
    }
  }
  return result;
}

uint64_t sub_20A56E260()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[5] = v0;
  v2 = sub_20A5B8708();
  v1[6] = v2;
  v1[7] = *(_QWORD *)(v2 - 8);
  v1[8] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB49A0);
  v1[9] = swift_task_alloc();
  v1[10] = type metadata accessor for ODISignpost();
  v1[11] = swift_task_alloc();
  v1[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A56E318()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  void *v5;
  int v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  unsigned int v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;

  if (qword_2545F9A78 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 88);
  v2 = qword_254610318;
  v3 = unk_254610320;
  v4 = byte_254610328;
  v5 = (void *)qword_254610330;
  v6 = byte_254610338;
  *(_QWORD *)(v1 + 32) = "enableTelemetry=YES";
  *(_QWORD *)(v1 + 40) = 19;
  *(_BYTE *)(v1 + 48) = 2;
  *(_QWORD *)v1 = v2;
  *(_QWORD *)(v1 + 8) = v3;
  *(_BYTE *)(v1 + 16) = v4;
  *(_QWORD *)(v1 + 24) = v5;
  v7 = v5;
  sub_20A5B87D4();
  sub_20A5B8CFC();
  if (v6 == 1)
    sub_20A5B87BC();
  else
    sub_20A5B87C8();
  v9 = *(_QWORD *)(v0 + 88);
  v8 = *(_QWORD *)(v0 + 96);
  v10 = *(_QWORD *)(v0 + 40);

  sub_20A465A70(v9, v8, (uint64_t (*)(_QWORD))type metadata accessor for ODISignpost);
  LOBYTE(v8) = MKBGetDeviceLockState() - 1 < 2;
  swift_beginAccess();
  *(_BYTE *)(v10 + 896) = v8;
  *(_BYTE *)(v10 + 897) = -47;
  v11 = objc_msgSend((id)objc_opt_self(), sel_sharedConnection);
  if (v11)
  {
    v12 = v11;
    v13 = objc_msgSend(v11, sel_effectiveBoolValueForSetting_, *MEMORY[0x24BE638E0]);

    v14 = v13 == 1;
  }
  else
  {
    v14 = 0;
  }
  v15 = *(_QWORD *)(v0 + 64);
  v16 = *(_QWORD *)(v0 + 72);
  v17 = *(_QWORD *)(v0 + 48);
  v18 = *(_QWORD *)(v0 + 56);
  v19 = *(_QWORD *)(v0 + 40);
  *(_BYTE *)(v19 + 898) = v14;
  *(_BYTE *)(v19 + 899) = -47;
  sub_20A5B86D8();
  sub_20A5B86CC();
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v15, v17);
  v20 = sub_20A5B86C0();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v16, 1, v20);
  v23 = *(_QWORD *)(v0 + 72);
  if (v22 == 1)
  {
    sub_20A44CE2C(*(_QWORD *)(v0 + 72), (uint64_t *)&unk_253EB49A0);
  }
  else
  {
    sub_20A5B8684();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v23, v20);
  }
  v24 = *(_QWORD *)(v0 + 96);
  v25 = *(_QWORD *)(v0 + 40);
  v26 = _s17CoreODIEssentials15BindingsHelpersV25convertCountryCodeToASCII3strSiSS_tFZ_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v25 + 904) = v26;
  *(_WORD *)(v25 + 912) = -12032;
  v27 = _s17CoreODIEssentials15BindingsHelpersV14deviceLanguageSSSgvgZ_0();
  if (v28)
  {
    v29 = v28;
  }
  else
  {
    v27 = 0;
    v29 = 0xE000000000000000;
  }
  v30 = _s17CoreODIEssentials15BindingsHelpersV26convertLanguageCodeToASCII3strSiSS_tFZ_0(v27, v29);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v25 + 920) = v30;
  *(_WORD *)(v25 + 928) = -12032;
  sub_20A5B8CF0();
  sub_20A5B87C8();
  sub_20A465AB4(v24, (uint64_t (*)(_QWORD))type metadata accessor for ODISignpost);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A56E658(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 88) = a1;
  *(_QWORD *)(v2 + 96) = v1;
  return swift_task_switch();
}

uint64_t sub_20A56E670()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);
  char v8;

  v2 = (_QWORD *)v0[11];
  v1 = v0[12];
  v0[13] = *(_QWORD *)(v1 + 1200);
  v0[14] = *(_QWORD *)(v1 + 1208);
  v8 = 5;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD000000000000024, 0x800000020A5E5100, &v8);
  swift_bridgeObjectRelease();
  v3 = v2[3];
  v4 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v3);
  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v4 + 24) + *(_QWORD *)(v4 + 24));
  v5 = (_QWORD *)swift_task_alloc();
  v0[15] = v5;
  *v5 = v0;
  v5[1] = sub_20A56E744;
  return v7(v3, v4);
}

uint64_t sub_20A56E744(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 128) = a1;
  *(_QWORD *)(v3 + 136) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A56E7B0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v1 = *(void **)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 96);
  if (v1)
  {
    swift_beginAccess();
    sub_20A54FF50(v1);
    swift_endAccess();
    *(_QWORD *)(v2 + 488) = sub_20A59A090(v1);
    *(_QWORD *)(v2 + 496) = v3;
    *(_BYTE *)(v2 + 504) = -47;
    swift_bridgeObjectRelease();
    if ((sub_20A5B8B88() & 1) == 0)
    {

      goto LABEL_7;
    }
    v5 = 14;
    swift_bridgeObjectRetain();
    CoreODILogger.warning(_:category:)(0xD000000000000050, 0x800000020A5E5190, &v5);

  }
  else
  {
    swift_beginAccess();
    *(_QWORD *)(v2 + 488) = 0;
    *(_QWORD *)(v2 + 496) = 0;
    *(_BYTE *)(v2 + 504) = -45;
  }
  swift_bridgeObjectRelease();
LABEL_7:
  v5 = 5;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD000000000000031, 0x800000020A5E5150, &v5);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A56E908()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  _QWORD v7[2];
  uint64_t v8;
  unint64_t v9;

  v1 = *(void **)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 112);
  v7[0] = *(_QWORD *)(v0 + 104);
  v7[1] = v2;
  v8 = 0;
  v9 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_20A5B8E94();
  *(_QWORD *)(v0 + 64) = 0;
  *(_QWORD *)(v0 + 72) = 0xE000000000000000;
  sub_20A5B899C();
  *(_QWORD *)(v0 + 80) = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52D0);
  sub_20A5B8F9C();
  v3 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 72);
  LOBYTE(v8) = 14;
  CoreODILogger.debug(_:category:)(v3, v4, &v8);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(v0 + 112);
  v8 = *(_QWORD *)(v0 + 104);
  v9 = v5;
  LOBYTE(v7[0]) = 5;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD000000000000031, 0x800000020A5E5150, v7);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A56EA48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = v1;
  return swift_task_switch();
}

uint64_t sub_20A56EA60()
{
  _QWORD *v0;
  _QWORD *v1;
  char v3;

  v1 = (_QWORD *)v0[6];
  v1[142] = v0[5];
  swift_retain();
  swift_release();
  v0[7] = v1[150];
  v0[8] = v1[151];
  v3 = 5;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD000000000000026, 0x800000020A5E50A0, &v3);
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_20A56EB08()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[5];
  sub_20A498124(&qword_2545FC140, 255, (uint64_t (*)(uint64_t))type metadata accessor for DeviceStatus, (uint64_t)&unk_20A5BF8B0);
  v2 = *(_QWORD *)(v1 + 120);
  v3 = swift_task_alloc();
  v0[9] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = (_QWORD *)swift_task_alloc();
  v0[10] = v4;
  *v4 = v0;
  v4[1] = sub_20A56EBE8;
  return sub_20A5B917C();
}

uint64_t sub_20A56EBE8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A56EC48()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 89) = *(_BYTE *)(v0 + 88);
  return swift_task_switch();
}

uint64_t sub_20A56EC64()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v4;

  v1 = *(_BYTE *)(v0 + 89);
  v2 = *(_QWORD *)(v0 + 48);
  swift_beginAccess();
  *(_BYTE *)(v2 + 457) = v1;
  *(_BYTE *)(v2 + 458) = -47;
  v4 = 5;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD00000000000002BLL, 0x800000020A5E50D0, &v4);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A56ED08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = v1;
  return swift_task_switch();
}

uint64_t sub_20A56ED20()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  char v4;

  v1 = (_QWORD *)v0[8];
  v1[143] = v0[7];
  swift_retain();
  swift_release();
  v0[9] = v1[150];
  v0[10] = v1[151];
  v4 = 5;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD000000000000025, 0x800000020A5E4FE0, &v4);
  swift_bridgeObjectRelease();
  v2 = swift_task_alloc();
  v0[11] = v2;
  *(_QWORD *)v2 = v0;
  *(_QWORD *)(v2 + 8) = sub_20A56EDF0;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)(v0 + 7);
  return swift_task_switch();
}

uint64_t sub_20A56EDF0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v1 = *v0;
  v4 = *v0;
  swift_task_dealloc();
  v2 = swift_task_alloc();
  *(_QWORD *)(v1 + 96) = v2;
  *(_QWORD *)v2 = v4;
  *(_QWORD *)(v2 + 8) = sub_20A56EE6C;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)(v1 + 56);
  return swift_task_switch();
}

uint64_t sub_20A56EE6C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v1 = *v0;
  v4 = *v0;
  swift_task_dealloc();
  v2 = swift_task_alloc();
  *(_QWORD *)(v1 + 104) = v2;
  *(_QWORD *)v2 = v4;
  *(_QWORD *)(v2 + 8) = sub_20A56EEE8;
  *(_OWORD *)(v2 + 56) = *(_OWORD *)(v1 + 56);
  return swift_task_switch();
}

uint64_t sub_20A56EEE8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A56EF40()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[7];
  sub_20A498124((unint64_t *)&qword_2545FA630, 255, (uint64_t (*)(uint64_t))type metadata accessor for ODIDeviceInfo, (uint64_t)&protocol conformance descriptor for ODIDeviceInfo);
  v2 = swift_task_alloc();
  v0[14] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  strcpy((char *)(v2 + 24), "UniqueChipID");
  *(_BYTE *)(v2 + 37) = 0;
  *(_WORD *)(v2 + 38) = -5120;
  v3 = (_QWORD *)swift_task_alloc();
  v0[15] = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB4840);
  *v3 = v0;
  v3[1] = sub_20A56F044;
  return sub_20A5B917C();
}

uint64_t sub_20A56F044()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  *(_QWORD *)(v1 + 128) = *(_QWORD *)(v1 + 40);
  *(_BYTE *)(v1 + 49) = *(_BYTE *)(v1 + 48);
  return swift_task_switch();
}

uint64_t sub_20A56F0B8()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v1 = *(unsigned __int8 *)(v0 + 49);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 64);
  swift_beginAccess();
  *(_QWORD *)(v3 + 264) = v2;
  if (v1)
    v4 = -45;
  else
    v4 = -47;
  *(_BYTE *)(v3 + 272) = v1;
  *(_BYTE *)(v3 + 273) = v4;
  return swift_task_switch();
}

uint64_t sub_20A56F130()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 50) = sub_20A4BE39C() & 1;
  return swift_task_switch();
}

uint64_t sub_20A56F174()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v4;

  v1 = *(_QWORD *)(v0 + 64);
  *(_BYTE *)(v1 + 433) = *(_BYTE *)(v0 + 50);
  *(_BYTE *)(v1 + 434) = -47;
  v4 = 5;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD000000000000023, 0x800000020A5E5010, &v4);
  swift_bridgeObjectRelease();
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 136) = v2;
  *(_QWORD *)v2 = v0;
  *(_QWORD *)(v2 + 8) = sub_20A56F234;
  *(_OWORD *)(v2 + 40) = *(_OWORD *)(v0 + 56);
  return swift_task_switch();
}

uint64_t sub_20A56F234()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A56F28C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  char v4;

  v4 = 5;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD00000000000001DLL, 0x800000020A5E5040, &v4);
  swift_bridgeObjectRelease();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 144) = v1;
  *v1 = v0;
  v1[1] = sub_20A56F344;
  v1[5] = *(_QWORD *)(v0 + 64);
  v2 = (_QWORD *)swift_task_alloc();
  v1[6] = v2;
  *v2 = v1;
  v2[1] = sub_20A56FBF4;
  return sub_20A4BC994();
}

uint64_t sub_20A56F344()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v1 = *v0;
  v2 = *v0;
  swift_task_dealloc();
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 152) = v3;
  *v3 = v2;
  v3[1] = sub_20A56F3CC;
  v3[5] = *(_QWORD *)(v1 + 64);
  v4 = (_QWORD *)swift_task_alloc();
  v3[6] = v4;
  *v4 = v3;
  v4[1] = sub_20A56FD4C;
  return sub_20A4BD3D4();
}

uint64_t sub_20A56F3CC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A56F424()
{
  uint64_t v0;
  char v2;

  v2 = 5;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD000000000000032, 0x800000020A5E5060, &v2);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A56F498(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = v1;
  return swift_task_switch();
}

uint64_t sub_20A56F4B0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[7];
  sub_20A498124((unint64_t *)&qword_2545FA630, 255, (uint64_t (*)(uint64_t))type metadata accessor for ODIDeviceInfo, (uint64_t)&protocol conformance descriptor for ODIDeviceInfo);
  v2 = swift_task_alloc();
  v0[9] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  strcpy((char *)(v2 + 24), "BuildVersion");
  *(_BYTE *)(v2 + 37) = 0;
  *(_WORD *)(v2 + 38) = -5120;
  v3 = (_QWORD *)swift_task_alloc();
  v0[10] = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB50E8);
  *v3 = v0;
  v3[1] = sub_20A56F5B4;
  return sub_20A5B917C();
}

uint64_t sub_20A56F5B4()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  *(_OWORD *)(v1 + 88) = *(_OWORD *)(v1 + 40);
  return swift_task_switch();
}

uint64_t sub_20A56F620()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v0 + 88);
  v1 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 64);
  swift_beginAccess();
  swift_bridgeObjectRelease();
  if (v1)
    v4 = -47;
  else
    v4 = -45;
  *(_QWORD *)(v3 + 192) = v2;
  *(_QWORD *)(v3 + 200) = v1;
  *(_BYTE *)(v3 + 208) = v4;
  swift_endAccess();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A56F698(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = v1;
  return swift_task_switch();
}

uint64_t sub_20A56F6B0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[7];
  sub_20A498124((unint64_t *)&qword_2545FA630, 255, (uint64_t (*)(uint64_t))type metadata accessor for ODIDeviceInfo, (uint64_t)&protocol conformance descriptor for ODIDeviceInfo);
  v2 = swift_task_alloc();
  v0[9] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  strcpy((char *)(v2 + 24), "SerialNumber");
  *(_BYTE *)(v2 + 37) = 0;
  *(_WORD *)(v2 + 38) = -5120;
  v3 = (_QWORD *)swift_task_alloc();
  v0[10] = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB50E8);
  *v3 = v0;
  v3[1] = sub_20A56F7B4;
  return sub_20A5B917C();
}

uint64_t sub_20A56F7B4()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  *(_OWORD *)(v1 + 88) = *(_OWORD *)(v1 + 40);
  return swift_task_switch();
}

uint64_t sub_20A56F820()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v0 + 88);
  v1 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 64);
  swift_beginAccess();
  swift_bridgeObjectRelease();
  if (v1)
    v4 = -47;
  else
    v4 = -45;
  *(_QWORD *)(v3 + 216) = v2;
  *(_QWORD *)(v3 + 224) = v1;
  *(_BYTE *)(v3 + 232) = v4;
  swift_endAccess();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A56F898(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = v1;
  return swift_task_switch();
}

uint64_t sub_20A56F8B0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[7];
  sub_20A498124((unint64_t *)&qword_2545FA630, 255, (uint64_t (*)(uint64_t))type metadata accessor for ODIDeviceInfo, (uint64_t)&protocol conformance descriptor for ODIDeviceInfo);
  v2 = swift_task_alloc();
  v0[9] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  strcpy((char *)(v2 + 24), "UniqueDeviceID");
  *(_BYTE *)(v2 + 39) = -18;
  v3 = (_QWORD *)swift_task_alloc();
  v0[10] = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB50E8);
  *v3 = v0;
  v3[1] = sub_20A56F9B8;
  return sub_20A5B917C();
}

uint64_t sub_20A56F9B8()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  *(_OWORD *)(v1 + 88) = *(_OWORD *)(v1 + 40);
  return swift_task_switch();
}

uint64_t sub_20A56FA24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v0 + 88);
  v1 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 64);
  swift_beginAccess();
  swift_bridgeObjectRelease();
  if (v1)
    v4 = -47;
  else
    v4 = -45;
  *(_QWORD *)(v3 + 240) = v2;
  *(_QWORD *)(v3 + 248) = v1;
  *(_BYTE *)(v3 + 256) = v4;
  swift_endAccess();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A56FA9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = v1;
  return swift_task_switch();
}

uint64_t sub_20A56FAB4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 56) = sub_20A4BBB9C(0);
  return swift_task_switch();
}

uint64_t sub_20A56FAF8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v1 = *(_QWORD **)(v0 + 56);
  if (v1)
  {
    if (v1[2])
    {
      v3 = v1[4];
      v2 = v1[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    swift_bridgeObjectRelease();
  }
  v3 = 0;
  v2 = 0;
LABEL_6:
  v4 = *(_QWORD *)(v0 + 48);
  swift_beginAccess();
  swift_bridgeObjectRelease();
  if (v2)
    v5 = -47;
  else
    v5 = -45;
  *(_QWORD *)(v4 + 368) = v3;
  *(_QWORD *)(v4 + 376) = v2;
  *(_BYTE *)(v4 + 384) = v5;
  swift_endAccess();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A56FBA4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 40) = v0;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 48) = v2;
  *v2 = v1;
  v2[1] = sub_20A56FBF4;
  return sub_20A4BC994();
}

uint64_t sub_20A56FBF4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A56FC50()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v1 = *(_QWORD **)(v0 + 56);
  if (v1)
  {
    if (v1[2])
    {
      v3 = v1[4];
      v2 = v1[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    swift_bridgeObjectRelease();
  }
  v3 = 0;
  v2 = 0;
LABEL_6:
  v4 = *(_QWORD *)(v0 + 40);
  swift_beginAccess();
  swift_bridgeObjectRelease();
  if (v2)
    v5 = -47;
  else
    v5 = -45;
  *(_QWORD *)(v4 + 392) = v3;
  *(_QWORD *)(v4 + 400) = v2;
  *(_BYTE *)(v4 + 408) = v5;
  swift_endAccess();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A56FCFC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 40) = v0;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 48) = v2;
  *v2 = v1;
  v2[1] = sub_20A56FD4C;
  return sub_20A4BD3D4();
}

uint64_t sub_20A56FD4C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A56FDA8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v1 = *(_QWORD **)(v0 + 56);
  if (v1)
  {
    if (v1[2])
    {
      v3 = v1[4];
      v2 = v1[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    swift_bridgeObjectRelease();
  }
  v3 = 0;
  v2 = 0;
LABEL_6:
  v4 = *(_QWORD *)(v0 + 40);
  swift_beginAccess();
  swift_bridgeObjectRelease();
  if (v2)
    v5 = -47;
  else
    v5 = -45;
  *(_QWORD *)(v4 + 416) = v3;
  *(_QWORD *)(v4 + 424) = v2;
  *(_BYTE *)(v4 + 432) = v5;
  swift_endAccess();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A56FE54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = v1;
  return swift_task_switch();
}

uint64_t sub_20A56FE6C()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  char v4;

  v1 = (_QWORD *)v0[6];
  v1[144] = v0[5];
  swift_retain();
  swift_release();
  v0[7] = v1[150];
  v0[8] = v1[151];
  v4 = 5;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD00000000000001CLL, 0x800000020A5E4F90, &v4);
  swift_bridgeObjectRelease();
  v2 = (_QWORD *)swift_task_alloc();
  v0[9] = v2;
  *v2 = v0;
  v2[1] = sub_20A56FF24;
  return sub_20A4D3D38();
}

uint64_t sub_20A56FF24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;

  v6 = *v3;
  v7 = *v3;
  swift_task_dealloc();
  if (v2)
    return (*(uint64_t (**)(void))(v7 + 8))();
  *(_QWORD *)(v6 + 80) = a2;
  *(_QWORD *)(v6 + 88) = a1;
  return swift_task_switch();
}

uint64_t sub_20A56FFA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v6;

  v2 = *(_QWORD *)(v0 + 80);
  v1 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 48);
  swift_beginAccess();
  swift_bridgeObjectRelease();
  if (v2)
    v4 = -47;
  else
    v4 = -45;
  *(_QWORD *)(v3 + 280) = v1;
  *(_QWORD *)(v3 + 288) = v2;
  *(_BYTE *)(v3 + 296) = v4;
  swift_endAccess();
  v6 = 5;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD00000000000002FLL, 0x800000020A5E4FB0, &v6);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A570074()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = v0;
  return swift_task_switch();
}

uint64_t sub_20A57008C()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  char v4;

  v1 = v0[5];
  v0[6] = *(_QWORD *)(v1 + 1200);
  v0[7] = *(_QWORD *)(v1 + 1208);
  v4 = 5;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD000000000000020, 0x800000020A5E4F30, &v4);
  swift_bridgeObjectRelease();
  if (qword_253EB4578 != -1)
    swift_once();
  v0[8] = qword_253EB4568;
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  v0[9] = v2;
  *v2 = v0;
  v2[1] = sub_20A57016C;
  return sub_20A5318F4();
}

uint64_t sub_20A57016C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(*v3 + 80) = v2;
  swift_task_dealloc();
  if (!v2)
  {
    *(_QWORD *)(v6 + 88) = a2;
    *(_QWORD *)(v6 + 96) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_20A5701E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v2 = *(_QWORD *)(v0 + 88);
  v1 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 40);
  swift_release();
  swift_beginAccess();
  *(_QWORD *)(v3 + 168) = v1;
  *(_QWORD *)(v3 + 176) = v2;
  *(_BYTE *)(v3 + 184) = -47;
  swift_bridgeObjectRelease();
  v5 = 5;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD00000000000002ALL, 0x800000020A5E4F60, &v5);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A5702A4()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A5702D8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 120) = v0;
  return swift_task_switch();
}

uint64_t sub_20A5702F0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t);
  char v7;

  v1 = v0[15];
  v0[16] = *(_QWORD *)(v1 + 1200);
  v0[17] = *(_QWORD *)(v1 + 1208);
  v7 = 5;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD000000000000020, 0x800000020A5E4ED0, &v7);
  swift_bridgeObjectRelease();
  sub_20A47BD60(v1 + 1160, (uint64_t)(v0 + 2));
  v2 = v0[5];
  v3 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v2);
  v6 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v3 + 8) + *(_QWORD *)(v3 + 8));
  v4 = (_QWORD *)swift_task_alloc();
  v0[18] = v4;
  *v4 = v0;
  v4[1] = sub_20A5703D4;
  return v6(v2, v3);
}

uint64_t sub_20A5703D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 152) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 160) = a1;
  return swift_task_switch();
}

uint64_t sub_20A570448()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v6;

  v1 = *(_QWORD *)(v0 + 120);
  *(_QWORD *)(v0 + 112) = *(_QWORD *)(v0 + 160);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB5130);
  sub_20A44D20C((unint64_t *)&qword_253EB4808, &qword_253EB5130, MEMORY[0x24BEE12B0]);
  v2 = sub_20A5B88DC();
  v4 = v3;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_beginAccess();
  *(_QWORD *)(v1 + 440) = v2;
  *(_QWORD *)(v1 + 448) = v4;
  *(_BYTE *)(v1 + 456) = -47;
  swift_bridgeObjectRelease();
  v6 = 5;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD00000000000002CLL, 0x800000020A5E4F00, &v6);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A570568()
{
  uint64_t v0;
  void *v1;
  id v2;
  char v3;
  uint64_t v4;
  char v6;

  v1 = *(void **)(v0 + 152);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  *(_QWORD *)(v0 + 104) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52D0);
  if (swift_dynamicCast())
  {

    v3 = byte_20A5D79BE[*(char *)(v0 + 168)];
    v4 = *(_QWORD *)(v0 + 120);
    swift_beginAccess();
    *(_BYTE *)(v4 + 456) = v3;
    *(_QWORD *)(v4 + 440) = 0;
    *(_QWORD *)(v4 + 448) = 0;
    swift_bridgeObjectRelease();

    v6 = 5;
    swift_bridgeObjectRetain();
    CoreODILogger.debug(_:category:)(0xD00000000000002CLL, 0x800000020A5E4F00, &v6);
    swift_bridgeObjectRelease();
  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A570688()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = v0;
  return swift_task_switch();
}

uint64_t sub_20A5706A0()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  char v4;

  v1 = v0[5];
  v0[6] = *(_QWORD *)(v1 + 1200);
  v0[7] = *(_QWORD *)(v1 + 1208);
  v4 = 5;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD000000000000023, 0x800000020A5E4E70, &v4);
  swift_bridgeObjectRelease();
  if (qword_253EB4578 != -1)
    swift_once();
  v0[8] = qword_253EB4568;
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  v0[9] = v2;
  *v2 = v0;
  v2[1] = sub_20A570780;
  return sub_20A531B78();
}

uint64_t sub_20A570780(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(*v3 + 80) = v2;
  swift_task_dealloc();
  if (!v2)
  {
    *(_QWORD *)(v6 + 88) = a2;
    *(_QWORD *)(v6 + 96) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_20A5707F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v2 = *(_QWORD *)(v0 + 88);
  v1 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 40);
  swift_release();
  swift_beginAccess();
  *(_QWORD *)(v3 + 144) = v1;
  *(_QWORD *)(v3 + 152) = v2;
  *(_BYTE *)(v3 + 160) = -47;
  swift_bridgeObjectRelease();
  v5 = 5;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD00000000000002FLL, 0x800000020A5E4EA0, &v5);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A5708B8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = v0;
  return swift_task_switch();
}

uint64_t sub_20A5708D0()
{
  _QWORD *v0;
  uint64_t v1;
  char v3;

  v1 = v0[5];
  v0[6] = *(_QWORD *)(v1 + 1200);
  v0[7] = *(_QWORD *)(v1 + 1208);
  v3 = 5;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD000000000000023, 0x800000020A5E4E10, &v3);
  swift_bridgeObjectRelease();
  if (qword_253EB4578 != -1)
    swift_once();
  v0[8] = qword_253EB4568;
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_20A57099C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = sub_20A531DEC();
  v0[9] = 0;
  v0[10] = v2;
  v0[11] = v1;
  return swift_task_switch();
}

uint64_t sub_20A570A00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v2 = *(_QWORD *)(v0 + 80);
  v1 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 40);
  swift_release();
  swift_beginAccess();
  *(_QWORD *)(v3 + 120) = v1;
  *(_QWORD *)(v3 + 128) = v2;
  *(_BYTE *)(v3 + 136) = -47;
  swift_bridgeObjectRelease();
  v5 = 5;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD00000000000002FLL, 0x800000020A5E4E40, &v5);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A570AC0()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A570AF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;

  v5[193] = v4;
  v5[192] = a4;
  v5[191] = a3;
  v5[190] = a2;
  v5[189] = a1;
  v5[194] = *v4;
  v5[195] = type metadata accessor for ODISignpost();
  v5[196] = swift_task_alloc();
  v5[197] = swift_task_alloc();
  v5[198] = swift_task_alloc();
  v5[199] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A570B90()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  const void *v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _BYTE *v14;
  uint64_t (*v15)(_QWORD);
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t *__return_ptr, _QWORD *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t *v38;
  uint64_t (*v39)(_QWORD);
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  int v43;
  unint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  unint64_t v49;
  unint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  unint64_t v53;
  unint64_t v54;
  _QWORD *v55;
  unint64_t v56;
  unint64_t v57;
  _QWORD *v58;
  unint64_t v59;
  int v60;
  unint64_t v61;
  _QWORD *v62;
  char *v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  _BYTE *v81;
  uint64_t v82;
  unint64_t v83;
  _BYTE *v84;
  char v85;
  uint64_t *v86;
  uint64_t *v87;
  _BYTE *v88;
  uint64_t v89;
  unint64_t *v90;
  unint64_t *v91;
  uint64_t *v92;
  unint64_t *v93;
  _QWORD **v94;
  _QWORD **v95;
  uint64_t *v96;
  _BYTE *v97;
  _QWORD *v98;
  _QWORD *v99;
  unint64_t *v100;
  uint64_t *v101;
  _BYTE *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  void *__src;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  int v112;
  unint64_t v113;
  int v114;
  _BYTE *v115;
  _QWORD __dst[128];
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char v121;
  char v122;
  uint64_t v123;
  unint64_t v124;
  char v125;
  char v126;
  uint64_t v127;
  uint64_t (*v128)(_QWORD);

  v89 = v0 + 1144;
  v92 = (uint64_t *)(v0 + 1440);
  v94 = (_QWORD **)(v0 + 1456);
  v95 = (_QWORD **)(v0 + 1464);
  v96 = (uint64_t *)(v0 + 1408);
  v86 = (uint64_t *)(v0 + 1472);
  v87 = (uint64_t *)(v0 + 1392);
  v100 = (unint64_t *)(v0 + 1488);
  v101 = (uint64_t *)(v0 + 1424);
  v90 = (unint64_t *)(v0 + 1496);
  v91 = (unint64_t *)(v0 + 1480);
  v93 = (unint64_t *)(v0 + 1504);
  v1 = *(_QWORD **)(v0 + 1544);
  v2 = *(_QWORD *)(v0 + 1512);
  v3 = v1[150];
  *(_QWORD *)(v0 + 1600) = v3;
  v4 = v1[151];
  *(_QWORD *)(v0 + 1608) = v4;
  v5 = v1 + 14;
  swift_beginAccess();
  memcpy((void *)(v0 + 16), v5, 0x3F9uLL);
  v103 = v4;
  v104 = v3;
  v117 = v3;
  v118 = v4;
  __src = (void *)(v0 + 16);
  sub_20A497F30(v0 + 16);
  sub_20A5B8E94();
  swift_bridgeObjectRelease();
  __dst[0] = 0xD00000000000000ELL;
  __dst[1] = 0x800000020A5E4CB0;
  MEMORY[0x20BD25B4C](v2, &type metadata for DeviceDataField);
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  CoreODILogger.info(_:category:)(0xD000000000000015, 0x800000020A5E4CB0, __dst);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 1408) = 0;
  *(_BYTE *)(v0 + 1416) = 1;
  *(_QWORD *)(v0 + 1504) = 0;
  *(_QWORD *)(v0 + 1424) = 0;
  *(_BYTE *)(v0 + 1432) = 1;
  *(_QWORD *)(v0 + 1440) = 0;
  *(_BYTE *)(v0 + 1448) = 1;
  v7 = (_QWORD *)MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + 1464) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + 1456) = v7;
  *(_OWORD *)(v0 + 1488) = 0u;
  *(_QWORD *)(v0 + 1392) = 0;
  *(_BYTE *)(v0 + 1400) = 1;
  v109 = v0;
  *(_OWORD *)(v0 + 1472) = 0u;
  v8 = *(_QWORD *)(v2 + 16);
  if (v8)
  {
    v102 = (_BYTE *)(v0 + 1072);
    v106 = (_QWORD *)(v0 + 1104);
    v88 = (_BYTE *)(v0 + 1416);
    v97 = (_BYTE *)(v0 + 1432);
    v84 = (_BYTE *)(v0 + 1448);
    v81 = (_BYTE *)(v0 + 1400);
    v9 = swift_bridgeObjectRetain();
    v10 = 0;
    v11 = 0;
    v105 = -(uint64_t)v8;
    v12 = v9 + 89;
    v98 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v99 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v82 = v9 + 89;
    v83 = v8;
LABEL_3:
    v85 = v10;
    if (v11 <= v8)
      v13 = v8;
    else
      v13 = v11;
    v14 = (_BYTE *)(v12 + (v11 << 6));
    v15 = (uint64_t (*)(_QWORD))(v11 + 1);
    v107 = -(uint64_t)v13;
    do
    {
      if ((uint64_t (*)(_QWORD))((char *)v15 + v107) == (uint64_t (*)(_QWORD))1)
      {
        __break(1u);
        JUMPOUT(0x20A57171CLL);
      }
      v128 = v15;
      v19 = *(_QWORD *)(v14 - 57);
      v20 = *(_QWORD *)(v14 - 49);
      v21 = *(_QWORD *)(v14 - 41);
      v22 = *(_QWORD *)(v14 - 33);
      v23 = *(v14 - 25);
      v24 = *(v14 - 24);
      v25 = *(_QWORD *)(v14 - 17);
      v26 = *(_QWORD *)(v14 - 9);
      v27 = *(v14 - 1);
      v115 = v14;
      v28 = *v14;
      memcpy(__dst, __src, 0x3F9uLL);
      v111 = v19;
      v117 = v19;
      v118 = v20;
      v119 = v21;
      v120 = v22;
      v121 = v23;
      v112 = v24;
      v122 = v24;
      v110 = v25;
      v123 = v25;
      v124 = v26;
      v29 = v23;
      v113 = v26;
      v114 = v27;
      v125 = v27;
      v126 = v28;
      sub_20A567C1C((uint64_t)&v117);
      v30 = *(_QWORD *)(v109 + 1128);
      v31 = *(_QWORD *)(v109 + 1136);
      __swift_project_boxed_opaque_existential_1(v106, v30);
      __dst[0] = v21;
      __dst[1] = v22;
      LOBYTE(__dst[2]) = v23;
      v32 = *(void (**)(uint64_t *__return_ptr, _QWORD *, uint64_t, uint64_t))(v31 + 8);
      swift_bridgeObjectRetain();
      sub_20A45DDBC(v21, v22, v23);
      v32(&v117, __dst, v30, v31);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v106);
      if (v117 == 210)
      {
        v117 = v104;
        v118 = v103;
        __dst[0] = 0;
        __dst[1] = 0xE000000000000000;
        sub_20A5B8E94();
        v33 = __dst[1];
        *(_QWORD *)(v109 + 1376) = __dst[0];
        *(_QWORD *)(v109 + 1384) = v33;
        sub_20A5B899C();
        *(_QWORD *)(v109 + 1040) = v111;
        *(_QWORD *)(v109 + 1048) = v20;
        *(_QWORD *)(v109 + 1056) = v21;
        *(_QWORD *)(v109 + 1064) = v22;
        *v102 = v23;
        *(_BYTE *)(v109 + 1073) = v112;
        *(_QWORD *)(v109 + 1080) = v110;
        *(_QWORD *)(v109 + 1088) = v26;
        v102[24] = v114;
        *(_BYTE *)(v109 + 1097) = v28;
        sub_20A5B8F9C();
        v34 = *(_QWORD *)(v109 + 1376);
        v35 = *(_QWORD *)(v109 + 1384);
        LOBYTE(__dst[0]) = 14;
        CoreODILogger.debug(_:category:)(v34, v35, __dst);
        swift_bridgeObjectRelease();
        switch(v112)
        {
          case 1:
          case 5:
            swift_bridgeObjectRelease();
            sub_20A45DDCC(v21, v22, v23);
            v36 = *v101;
            if (v110 < *v101)
              v36 = v110;
            if (*v97)
              v37 = v110;
            else
              v37 = v36;
            *v101 = v37;
            *v97 = 0;
            v38 = v100;
            goto LABEL_26;
          case 2:
            swift_bridgeObjectRelease();
            sub_20A45DDCC(v21, v22, v23);
            v40 = *v96;
            if (v110 < *v96)
              v40 = v110;
            if (*v88)
              v41 = v110;
            else
              v41 = v40;
            *v96 = v41;
            *v88 = 0;
            v38 = v93;
LABEL_26:
            v42 = *v38;
            v43 = v114;
            if (v26 > 0x10C6F7A0B5EDLL)
              v43 = 1;
            if (1000000 * v26 > v42)
              v42 = 1000000 * v26;
            if (v43)
              v42 = -1;
            *v38 = v42;
            v39 = v128;
            goto LABEL_9;
          case 6:
            swift_bridgeObjectRelease();
            v11 = (unint64_t)v128;
            v63 = (char *)v128 + v105;
            if ((v29 & 1) != 0)
            {
              sub_20A45DDCC(v21, v22, 1);
              v12 = v82;
              v8 = v83;
              v64 = v114;
            }
            else
            {
              sub_20A45DDCC(v21, v22, 0);
              v12 = v82;
              v8 = v83;
              v64 = v114;
              if (v21 == 11)
                goto LABEL_95;
            }
            v65 = *v87;
            if (*v87 >= v110)
              v65 = v110;
            if (*v81)
              v66 = v110;
            else
              v66 = v65;
            *v87 = v66;
            *v81 = 0;
            if (v113 > 0x10C6F7A0B5EDLL)
              v67 = 1;
            else
              v67 = v64;
            v68 = 1000000 * v113;
            if (*v86 > 1000000 * v113)
              v68 = *v86;
            if (v67)
              v69 = -1;
            else
              v69 = v68;
            *v86 = v69;
LABEL_95:
            v10 = 1;
            if (v63)
              goto LABEL_3;
            swift_bridgeObjectRelease();
            v7 = v98;
            v70 = v99;
            break;
          case 9:
            v39 = v128;
            if (!v23)
              goto LABEL_7;
            v44 = *v91;
            v45 = v114;
            if (v26 > 0x10C6F7A0B5EDLL)
              v45 = 1;
            if (1000000 * v26 > v44)
              v44 = 1000000 * v26;
            if (v45)
              v44 = -1;
            *v91 = v44;
            v46 = *v92;
            if (v110 < *v92)
              v46 = v110;
            if (*v84)
              v47 = v110;
            else
              v47 = v46;
            *v92 = v47;
            *v84 = 0;
            v48 = *v95;
            sub_20A45DDBC(v21, v22, 1);
            swift_bridgeObjectRetain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v48 = sub_20A46FE9C(0, v48[2] + 1, 1, v48);
            v50 = v48[2];
            v49 = v48[3];
            if (v50 >= v49 >> 1)
              v48 = sub_20A46FE9C((_QWORD *)(v49 > 1), v50 + 1, 1, v48);
            v48[2] = v50 + 1;
            v51 = &v48[2 * v50];
            v51[4] = v21;
            v51[5] = v22;
            sub_20A45DDCC(v21, v22, 1);
            swift_bridgeObjectRelease();
            sub_20A45DDCC(v21, v22, 1);
            *v95 = v48;
            goto LABEL_9;
          case 10:
            v39 = v128;
            if (!v23)
              goto LABEL_7;
            sub_20A45DDBC(v21, v22, 1);
            swift_bridgeObjectRetain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
              v52 = v99;
            else
              v52 = sub_20A46FE9C(0, v99[2] + 1, 1, v99);
            v54 = v52[2];
            v53 = v52[3];
            if (v54 >= v53 >> 1)
              v52 = sub_20A46FE9C((_QWORD *)(v53 > 1), v54 + 1, 1, v52);
            v52[2] = v54 + 1;
            v99 = v52;
            goto LABEL_74;
          case 11:
            v39 = v128;
            if (!v23)
              goto LABEL_7;
            v55 = *v94;
            sub_20A45DDBC(v21, v22, 1);
            swift_bridgeObjectRetain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v55 = sub_20A46FE9C(0, v55[2] + 1, 1, v55);
            v57 = v55[2];
            v56 = v55[3];
            if (v57 >= v56 >> 1)
              v55 = sub_20A46FE9C((_QWORD *)(v56 > 1), v57 + 1, 1, v55);
            v55[2] = v57 + 1;
            v58 = &v55[2 * v57];
            v58[4] = v21;
            v58[5] = v22;
            sub_20A45DDCC(v21, v22, 1);
            swift_bridgeObjectRelease();
            sub_20A45DDCC(v21, v22, 1);
            *v94 = v55;
            v59 = *v90;
            v60 = v114;
            if (v113 > 0x10C6F7A0B5EDLL)
              v60 = 1;
            if (1000000 * v113 > v59)
              v59 = 1000000 * v113;
            if (v60)
              v59 = -1;
            *v90 = v59;
            goto LABEL_9;
          case 12:
            v39 = v128;
            if (v23)
            {
              sub_20A45DDBC(v21, v22, 1);
              swift_bridgeObjectRetain();
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
                v52 = v98;
              else
                v52 = sub_20A46FE9C(0, v98[2] + 1, 1, v98);
              v54 = v52[2];
              v61 = v52[3];
              if (v54 >= v61 >> 1)
                v52 = sub_20A46FE9C((_QWORD *)(v61 > 1), v54 + 1, 1, v52);
              v52[2] = v54 + 1;
              v98 = v52;
LABEL_74:
              v62 = &v52[2 * v54];
              v62[4] = v21;
              v62[5] = v22;
              sub_20A45DDCC(v21, v22, 1);
              swift_bridgeObjectRelease();
              v16 = v21;
              v17 = v22;
              v18 = 1;
            }
            else
            {
LABEL_7:
              swift_bridgeObjectRelease();
              v16 = v21;
              v17 = v22;
              v18 = 0;
            }
            sub_20A45DDCC(v16, v17, v18);
            goto LABEL_9;
          default:
            goto LABEL_19;
        }
        goto LABEL_98;
      }
LABEL_19:
      swift_bridgeObjectRelease();
      sub_20A45DDCC(v21, v22, v23);
      v39 = v128;
LABEL_9:
      v15 = (uint64_t (*)(_QWORD))((char *)v39 + 1);
      v14 = v115 + 64;
    }
    while ((uint64_t (*)(_QWORD))((char *)v15 + v105) != (uint64_t (*)(_QWORD))1);
    swift_bridgeObjectRelease();
    v7 = v98;
    v70 = v99;
    if ((v85 & 1) == 0)
      goto LABEL_100;
LABEL_98:
    *(_QWORD *)(v109 + 1624) = v70;
    *(_QWORD *)(v109 + 1616) = v7;
    v128 = (uint64_t (*)(_QWORD))(**(int **)(v109 + 1520) + *(_QWORD *)(v109 + 1520));
    v71 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v109 + 1632) = v71;
    *v71 = v109;
    v71[1] = sub_20A57174C;
    return v128(v89);
  }
  else
  {
    v70 = v7;
LABEL_100:
    v128 = (uint64_t (*)(_QWORD))(v109 + 1033);
    *(_QWORD *)(v89 + 32) = 0;
    *(_OWORD *)v89 = 0u;
    *(_OWORD *)(v89 + 16) = 0u;
    *(_QWORD *)(v109 + 1648) = v70;
    *(_QWORD *)(v109 + 1640) = v7;
    v73 = *(_QWORD *)(v109 + 1608);
    v74 = *(_QWORD *)(v109 + 1600);
    v75 = *(_QWORD *)(v109 + 1552);
    v76 = *(_QWORD *)(v109 + 1544);
    v77 = *(_QWORD *)(v109 + 1536);
    v78 = *(_QWORD *)(v109 + 1512);
    sub_20A498124(&qword_2545FBCF8, v6, (uint64_t (*)(uint64_t))type metadata accessor for ArmandDataFiller, (uint64_t)&protocol conformance descriptor for ArmandDataFiller);
    v79 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v109 + 1656) = v79;
    v79[2] = v74;
    v79[3] = v73;
    v79[4] = v94;
    v79[5] = v90;
    v79[6] = v77;
    v79[7] = v76;
    v79[8] = v87;
    v79[9] = v89;
    v79[10] = v86;
    v79[11] = v78;
    v79[12] = __src;
    v79[13] = v96;
    v79[14] = v93;
    v79[15] = v101;
    v79[16] = v100;
    v79[17] = v92;
    v79[18] = v91;
    v79[19] = v95;
    v79[20] = v75;
    v80 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v109 + 1664) = v80;
    *v80 = v109;
    v80[1] = sub_20A571944;
    v127 = MEMORY[0x24BEE1328];
    return sub_20A5B9014();
  }
}

uint64_t sub_20A57174C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A5717A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;

  *(_OWORD *)(v2 + 1640) = *(_OWORD *)(v2 + 1616);
  v3 = *(_QWORD *)(v2 + 1608);
  v4 = *(_QWORD *)(v2 + 1600);
  v5 = *(_QWORD *)(v2 + 1552);
  v6 = *(_QWORD *)(v2 + 1544);
  v7 = *(_QWORD *)(v2 + 1536);
  v8 = *(_QWORD *)(v2 + 1512);
  sub_20A498124(&qword_2545FBCF8, a2, (uint64_t (*)(uint64_t))type metadata accessor for ArmandDataFiller, (uint64_t)&protocol conformance descriptor for ArmandDataFiller);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 1656) = v9;
  v9[2] = v4;
  v9[3] = v3;
  v9[4] = v2 + 1456;
  v9[5] = v2 + 1496;
  v9[6] = v7;
  v9[7] = v6;
  v9[8] = v2 + 1392;
  v9[9] = v2 + 1144;
  v9[10] = v2 + 1472;
  v9[11] = v8;
  v9[12] = v2 + 16;
  v9[13] = v2 + 1408;
  v9[14] = v2 + 1504;
  v9[15] = v2 + 1424;
  v9[16] = v2 + 1488;
  v9[17] = v2 + 1440;
  v9[18] = v2 + 1480;
  v9[19] = v2 + 1464;
  v9[20] = v5;
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 1664) = v10;
  *v10 = v2;
  v10[1] = sub_20A571944;
  return sub_20A5B9014();
}

uint64_t sub_20A571944()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *v0 + 16;
  swift_task_dealloc();
  sub_20A47D1B0(v1);
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A5719BC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t);

  v1 = *(_QWORD **)(v0 + 1536);
  *(_BYTE *)(v0 + 1034) = *(_BYTE *)(v0 + 1033);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v6 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v3 + 8) + *(_QWORD *)(v3 + 8));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 1672) = v4;
  *v4 = v0;
  v4[1] = sub_20A571A3C;
  return v6(v2, v3);
}

uint64_t sub_20A571A3C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 1680) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A571A9C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  void *v6;
  int v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  void *v14;
  int v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  char v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  _QWORD *v77;
  unint64_t v78;
  unint64_t v79;

  v1 = v0[205];
  if (*(_QWORD *)(v1 + 16))
  {
    if (qword_2545F9A68 != -1)
      swift_once();
    v2 = v0[198];
    v3 = qword_2546102C8;
    v4 = unk_2546102D0;
    v5 = byte_2546102D8;
    v6 = (void *)qword_2546102E0;
    v7 = byte_2546102E8;
    *(_QWORD *)(v2 + 32) = "enableTelemetry=YES";
    *(_QWORD *)(v2 + 40) = 19;
    *(_BYTE *)(v2 + 48) = 2;
    *(_QWORD *)v2 = v3;
    *(_QWORD *)(v2 + 8) = v4;
    *(_BYTE *)(v2 + 16) = v5;
    *(_QWORD *)(v2 + 24) = v6;
    v8 = v6;
    sub_20A5B87D4();
    sub_20A5B8CFC();
    if (v7 == 1)
      sub_20A5B87BC();
    else
      sub_20A5B87C8();
    v17 = v0[199];
    v18 = v0[198];

    sub_20A465A70(v18, v17, (uint64_t (*)(_QWORD))type metadata accessor for ODISignpost);
    v19 = *(_QWORD *)(v1 + 16);
    if (v19)
    {
      v20 = v0[205] + 40;
      v21 = (char *)MEMORY[0x24BEE4AF8];
      do
      {
        swift_bridgeObjectRetain();
        v23 = sub_20A5B9008();
        if (v23 == 2)
        {
          swift_bridgeObjectRelease();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v21 = sub_20A470840(0, *((_QWORD *)v21 + 2) + 1, 1, v21);
          v27 = *((_QWORD *)v21 + 2);
          v26 = *((_QWORD *)v21 + 3);
          if (v27 >= v26 >> 1)
            v21 = sub_20A470840((char *)(v26 > 1), v27 + 1, 1, v21);
          *((_QWORD *)v21 + 2) = v27 + 1;
          v21[v27 + 32] = 2;
        }
        else if (v23 == 1)
        {
          swift_bridgeObjectRelease();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v21 = sub_20A470840(0, *((_QWORD *)v21 + 2) + 1, 1, v21);
          v29 = *((_QWORD *)v21 + 2);
          v28 = *((_QWORD *)v21 + 3);
          if (v29 >= v28 >> 1)
            v21 = sub_20A470840((char *)(v28 > 1), v29 + 1, 1, v21);
          *((_QWORD *)v21 + 2) = v29 + 1;
          v21[v29 + 32] = 1;
        }
        else if (v23)
        {
          v78 = 0;
          v79 = 0xE000000000000000;
          sub_20A5B8E94();
          swift_bridgeObjectRelease();
          v78 = 0xD000000000000025;
          v79 = 0x800000020A5E4CD0;
          sub_20A5B899C();
          swift_bridgeObjectRelease();
          v22 = v78;
          LOBYTE(v78) = 14;
          CoreODILogger.info(_:category:)(v22, v79, &v78);
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v21 = sub_20A470840(0, *((_QWORD *)v21 + 2) + 1, 1, v21);
          v25 = *((_QWORD *)v21 + 2);
          v24 = *((_QWORD *)v21 + 3);
          if (v25 >= v24 >> 1)
            v21 = sub_20A470840((char *)(v24 > 1), v25 + 1, 1, v21);
          *((_QWORD *)v21 + 2) = v25 + 1;
          v21[v25 + 32] = 0;
        }
        v20 += 16;
        --v19;
      }
      while (v19);
    }
    else
    {
      v21 = (char *)MEMORY[0x24BEE4AF8];
    }
    swift_bridgeObjectRelease();
    v30 = sub_20A593C1C((uint64_t)v21);
    swift_bridgeObjectRelease();
    v31 = sub_20A57C124(v30, &qword_2545FA070);
    v0[211] = v31;
    swift_bridgeObjectRelease();
    v32 = *(_QWORD *)(v31 + 16);
    if (v32)
    {
      v33 = v0[210];
      swift_retain();
      v34 = 0;
      v35 = (_QWORD *)MEMORY[0x24BEE4AF8];
      while (1)
      {
        if (*(_BYTE *)(v31 + v34 + 32))
        {
          if (*(_BYTE *)(v31 + v34 + 32) == 1)
          {
            if (*(_QWORD *)(v33 + 16))
            {
              v36 = sub_20A47094C(0x6E6F685072656570, 0xEF7265626D754E65);
              if ((v37 & 1) != 0)
              {
                sub_20A47BD60(*(_QWORD *)(v33 + 56) + 40 * v36, (uint64_t)(v0 + 158));
                __swift_instantiateConcreteTypeFromMangledName(&qword_253EB47D0);
                v38 = swift_dynamicCast();
                v39 = v0[166];
                v40 = v0[167];
LABEL_48:
                if (v38)
                  v45 = v39;
                else
                  v45 = 0;
                if (v38)
                  v46 = v40;
                else
                  v46 = 0;
                goto LABEL_55;
              }
            }
          }
          else if (*(_QWORD *)(v33 + 16))
          {
            v43 = sub_20A47094C(0xD000000000000014, 0x800000020A5DAD20);
            if ((v44 & 1) != 0)
            {
              sub_20A47BD60(*(_QWORD *)(v33 + 56) + 40 * v43, (uint64_t)(v0 + 148));
              __swift_instantiateConcreteTypeFromMangledName(&qword_253EB47D0);
              v38 = swift_dynamicCast();
              v39 = v0[168];
              v40 = v0[169];
              goto LABEL_48;
            }
          }
        }
        else if (*(_QWORD *)(v33 + 16))
        {
          v41 = sub_20A47094C(0x6D754E656E6F6870, 0xEB00000000726562);
          if ((v42 & 1) != 0)
          {
            sub_20A47BD60(*(_QWORD *)(v33 + 56) + 40 * v41, (uint64_t)(v0 + 153));
            __swift_instantiateConcreteTypeFromMangledName(&qword_253EB47D0);
            v38 = swift_dynamicCast();
            v39 = v0[170];
            v40 = v0[171];
            goto LABEL_48;
          }
        }
        v45 = 0;
        v46 = 0;
LABEL_55:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v35 = sub_20A470734(0, v35[2] + 1, 1, v35);
        v48 = v35[2];
        v47 = v35[3];
        if (v48 >= v47 >> 1)
          v35 = sub_20A470734((_QWORD *)(v47 > 1), v48 + 1, 1, v35);
        v35[2] = v48 + 1;
        v49 = &v35[2 * v48];
        v49[4] = v45;
        v49[5] = v46;
        if (v32 == ++v34)
        {
          swift_release();
          goto LABEL_62;
        }
      }
    }
    v35 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_62:
    v0[212] = v35;
    v50 = (_QWORD *)swift_task_alloc();
    v0[213] = v50;
    *v50 = v0;
    v50[1] = sub_20A57244C;
    v51 = v0[193];
    v50[8] = v31;
    v50[9] = v51;
    v50[7] = v35;
    return swift_task_switch();
  }
  else
  {
    swift_bridgeObjectRelease();
    v9 = *(_QWORD *)(v0[206] + 16);
    swift_bridgeObjectRelease();
    if (v9)
    {
      if (qword_2545F9A60 != -1)
        swift_once();
      v10 = v0[196];
      v12 = qword_2546102A0;
      v11 = *(_QWORD *)algn_2546102A8;
      v13 = byte_2546102B0;
      v14 = (void *)qword_2546102B8;
      v15 = byte_2546102C0;
      *(_QWORD *)(v10 + 32) = "enableTelemetry=YES";
      *(_QWORD *)(v10 + 40) = 19;
      *(_BYTE *)(v10 + 48) = 2;
      *(_QWORD *)v10 = v12;
      *(_QWORD *)(v10 + 8) = v11;
      *(_BYTE *)(v10 + 16) = v13;
      *(_QWORD *)(v10 + 24) = v14;
      v16 = v14;
      sub_20A5B87D4();
      sub_20A5B8CFC();
      if (v15 == 1)
        sub_20A5B87BC();
      else
        sub_20A5B87C8();
      v53 = v0[210];
      v54 = v0[197];
      v55 = v0[196];

      sub_20A465A70(v55, v54, (uint64_t (*)(_QWORD))type metadata accessor for ODISignpost);
      LOBYTE(v78) = 0;
      v56 = sub_20A57AD04(&v78, v53);
      v0[214] = v57;
      if (v57)
      {
        v58 = v56;
        v59 = v57;
        v60 = v0[210];
        LOBYTE(v78) = 1;
        v61 = sub_20A57AD04(&v78, v60);
        v0[215] = v62;
        if (v62)
        {
          v63 = v61;
          v64 = v62;
          v65 = (_QWORD *)swift_task_alloc();
          v0[216] = v65;
          *v65 = v0;
          v65[1] = sub_20A572818;
          return sub_20A56DD68(v58, v59, v63, v64, 0);
        }
        swift_bridgeObjectRelease();
      }
      v66 = v0[210];
      LOBYTE(v78) = 16;
      v67 = sub_20A57AD04(&v78, v66);
      v0[217] = v68;
      v69 = v0[210];
      if (v68)
      {
        v70 = v67;
        v71 = v68;
        LOBYTE(v78) = 17;
        v72 = sub_20A57AD04(&v78, v69);
        v74 = v73;
        swift_bridgeObjectRelease();
        v0[218] = v74;
        if (v74)
        {
          v75 = (_QWORD *)swift_task_alloc();
          v0[219] = v75;
          *v75 = v0;
          v75[1] = sub_20A5729E4;
          return sub_20A56DD68(v70, v71, v72, v74, 1);
        }
      }
      swift_bridgeObjectRelease();
      v76 = v0[197];
      sub_20A5B8CF0();
      sub_20A5B87C8();
      sub_20A465AB4(v76, (uint64_t (*)(_QWORD))type metadata accessor for ODISignpost);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v77 = (_QWORD *)swift_task_alloc();
    v0[220] = v77;
    *v77 = v0;
    v77[1] = sub_20A572AE0;
    return sub_20A56E260();
  }
}

uint64_t sub_20A57244C()
{
  swift_task_dealloc();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_20A5724C4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void *v7;
  int v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  char v36;
  char v37;
  char v38;
  char v39;

  v1 = v0[199];
  sub_20A5B8CF0();
  sub_20A5B87C8();
  sub_20A465AB4(v1, (uint64_t (*)(_QWORD))type metadata accessor for ODISignpost);
  v2 = *(_QWORD *)(v0[206] + 16);
  swift_bridgeObjectRelease();
  if (v2)
  {
    if (qword_2545F9A60 != -1)
      swift_once();
    v3 = v0[196];
    v5 = qword_2546102A0;
    v4 = *(_QWORD *)algn_2546102A8;
    v6 = byte_2546102B0;
    v7 = (void *)qword_2546102B8;
    v8 = byte_2546102C0;
    *(_QWORD *)(v3 + 32) = "enableTelemetry=YES";
    *(_QWORD *)(v3 + 40) = 19;
    *(_BYTE *)(v3 + 48) = 2;
    *(_QWORD *)v3 = v5;
    *(_QWORD *)(v3 + 8) = v4;
    *(_BYTE *)(v3 + 16) = v6;
    *(_QWORD *)(v3 + 24) = v7;
    v9 = v7;
    sub_20A5B87D4();
    sub_20A5B8CFC();
    if (v8 == 1)
      sub_20A5B87BC();
    else
      sub_20A5B87C8();
    v10 = v0[210];
    v11 = v0[197];
    v12 = v0[196];

    sub_20A465A70(v12, v11, (uint64_t (*)(_QWORD))type metadata accessor for ODISignpost);
    v36 = 0;
    v13 = sub_20A57AD04(&v36, v10);
    v0[214] = v14;
    if (v14)
    {
      v15 = v13;
      v16 = v14;
      v17 = v0[210];
      v39 = 1;
      v18 = sub_20A57AD04(&v39, v17);
      v0[215] = v19;
      if (v19)
      {
        v20 = v18;
        v21 = v19;
        v22 = (_QWORD *)swift_task_alloc();
        v0[216] = v22;
        *v22 = v0;
        v22[1] = sub_20A572818;
        return sub_20A56DD68(v15, v16, v20, v21, 0);
      }
      swift_bridgeObjectRelease();
    }
    v24 = v0[210];
    v37 = 16;
    v25 = sub_20A57AD04(&v37, v24);
    v0[217] = v26;
    v27 = v0[210];
    if (v26)
    {
      v28 = v25;
      v29 = v26;
      v38 = 17;
      v30 = sub_20A57AD04(&v38, v27);
      v32 = v31;
      swift_bridgeObjectRelease();
      v0[218] = v32;
      if (v32)
      {
        v33 = (_QWORD *)swift_task_alloc();
        v0[219] = v33;
        *v33 = v0;
        v33[1] = sub_20A5729E4;
        return sub_20A56DD68(v28, v29, v30, v32, 1);
      }
    }
    swift_bridgeObjectRelease();
    v34 = v0[197];
    sub_20A5B8CF0();
    sub_20A5B87C8();
    sub_20A465AB4(v34, (uint64_t (*)(_QWORD))type metadata accessor for ODISignpost);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v35 = (_QWORD *)swift_task_alloc();
  v0[220] = v35;
  *v35 = v0;
  v35[1] = sub_20A572AE0;
  return sub_20A56E260();
}

uint64_t sub_20A572818()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_20A572890()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  _QWORD *v13;
  char v14;
  char v15;

  v1 = v0[210];
  v14 = 16;
  v2 = sub_20A57AD04(&v14, v1);
  v0[217] = v3;
  v4 = v0[210];
  if (v3
    && (v5 = v2,
        v6 = v3,
        v15 = 17,
        v7 = sub_20A57AD04(&v15, v4),
        v9 = v8,
        swift_bridgeObjectRelease(),
        (v0[218] = v9) != 0))
  {
    v10 = (_QWORD *)swift_task_alloc();
    v0[219] = v10;
    *v10 = v0;
    v10[1] = sub_20A5729E4;
    return sub_20A56DD68(v5, v6, v7, v9, 1);
  }
  else
  {
    swift_bridgeObjectRelease();
    v12 = v0[197];
    sub_20A5B8CF0();
    sub_20A5B87C8();
    sub_20A465AB4(v12, (uint64_t (*)(_QWORD))type metadata accessor for ODISignpost);
    v13 = (_QWORD *)swift_task_alloc();
    v0[220] = v13;
    *v13 = v0;
    v13[1] = sub_20A572AE0;
    return sub_20A56E260();
  }
}

uint64_t sub_20A5729E4()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_20A572A5C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + 1576);
  sub_20A5B8CF0();
  sub_20A5B87C8();
  sub_20A465AB4(v1, (uint64_t (*)(_QWORD))type metadata accessor for ODISignpost);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 1760) = v2;
  *v2 = v0;
  v2[1] = sub_20A572AE0;
  return sub_20A56E260();
}

uint64_t sub_20A572AE0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A572B38()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 1544) + 1129) = 1;
  sub_20A44CE2C(v0 + 1144, &qword_2545FBD20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 1034));
}

uint64_t sub_20A572BC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD v4[4];

  switch(a1)
  {
    case 3:
      return sub_20A5B8B34();
    case 2:
      return sub_20A5B8B4C();
    case 1:
      return sub_20A5B8B40();
  }
  v4[2] = a2;
  v4[3] = a3;
  sub_20A5B8E94();
  swift_bridgeObjectRelease();
  v4[0] = 0xD00000000000000ELL;
  v4[1] = 0x800000020A5E5790;
  sub_20A5B9170();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  CoreODILogger.error(_:category:)(0xD000000000000030, 0x800000020A5E5790, v4);
  swift_bridgeObjectRelease();
  return sub_20A5B8B34();
}

uint64_t sub_20A572CF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;

  *(_QWORD *)(v8 + 1504) = v16;
  *(_OWORD *)(v8 + 1488) = v15;
  *(_OWORD *)(v8 + 1472) = v14;
  *(_OWORD *)(v8 + 1456) = v13;
  *(_OWORD *)(v8 + 1440) = v12;
  *(_OWORD *)(v8 + 1424) = v11;
  *(_OWORD *)(v8 + 1408) = v10;
  *(_QWORD *)(v8 + 1400) = a8;
  *(_QWORD *)(v8 + 1392) = a7;
  *(_QWORD *)(v8 + 1384) = a6;
  *(_QWORD *)(v8 + 1376) = a5;
  *(_QWORD *)(v8 + 1368) = a4;
  *(_QWORD *)(v8 + 1360) = a3;
  *(_QWORD *)(v8 + 1352) = a2;
  *(_QWORD *)(v8 + 1344) = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB5180);
  *(_QWORD *)(v8 + 1512) = swift_task_alloc();
  *(_QWORD *)(v8 + 1520) = swift_task_alloc();
  *(_QWORD *)(v8 + 1528) = swift_task_alloc();
  *(_QWORD *)(v8 + 1536) = swift_task_alloc();
  *(_QWORD *)(v8 + 1544) = swift_task_alloc();
  *(_QWORD *)(v8 + 1552) = swift_task_alloc();
  *(_QWORD *)(v8 + 1560) = swift_task_alloc();
  *(_QWORD *)(v8 + 1568) = swift_task_alloc();
  *(_QWORD *)(v8 + 1576) = swift_task_alloc();
  *(_QWORD *)(v8 + 1584) = swift_task_alloc();
  *(_QWORD *)(v8 + 1592) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A572E1C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _OWORD *v27;
  __int128 *v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  unint64_t v32;
  const void *v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  unint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  __n128 *v92;
  _QWORD *v93;
  __n128 *v94;
  uint64_t v95;
  uint64_t (*v96)(uint64_t, uint64_t);
  _QWORD __dst[128];
  _OWORD v98[2];
  _OWORD v99[2];

  v1 = *(uint64_t **)(v0 + 1376);
  v2 = *(_QWORD *)(v0 + 1368);
  __dst[0] = *(_QWORD *)(v0 + 1360);
  __dst[1] = v2;
  LOBYTE(v98[0]) = 14;
  CoreODILogger.info(_:category:)(0xD00000000000001BLL, 0x800000020A5E53C0, v98);
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 16))
  {
    v4 = *(_QWORD *)(v0 + 1592);
    v5 = *(_QWORD *)(v0 + 1504);
    v6 = *(_QWORD *)(v0 + 1400);
    v7 = *(_QWORD *)(v0 + 1392);
    v8 = *(uint64_t **)(v0 + 1384);
    v9 = *(_QWORD *)(v0 + 1368);
    v10 = *(_QWORD *)(v0 + 1360);
    v11 = sub_20A5B8B64();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v4, 1, 1, v11);
    v12 = *v8;
    sub_20A47BD60(v7, v0 + 512);
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = 0;
    v13[3] = 0;
    v13[4] = v12;
    sub_20A44CFD8((__int128 *)(v0 + 512), (uint64_t)(v13 + 5));
    v13[10] = v3;
    v13[11] = v10;
    v13[12] = v9;
    v13[13] = v6;
    v13[14] = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_20A535CA4(v4, (uint64_t)&unk_2545FC188, (uint64_t)v13);
    sub_20A44CE2C(v4, (uint64_t *)&unk_253EB5180);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 1368);
    __dst[0] = *(_QWORD *)(v0 + 1360);
    __dst[1] = v14;
    LOBYTE(v98[0]) = 5;
    CoreODILogger.debug(_:category:)(0xD00000000000001CLL, 0x800000020A5E5540, v98);
  }
  v15 = *(_QWORD *)(v0 + 1408);
  if ((*(_BYTE *)(v15 + 8) & 1) == 0)
  {
    v16 = *(_QWORD *)v15;
    sub_20A47D62C(*(_QWORD *)(v0 + 1416), v0 + 592, &qword_2545FBD20);
    if (*(_QWORD *)(v0 + 616))
    {
      v17 = *(_QWORD *)(v0 + 1592);
      v18 = *(uint64_t **)(v0 + 1424);
      v19 = *(_QWORD *)(v0 + 1400);
      v20 = *(_QWORD *)(v0 + 1368);
      v21 = *(_QWORD *)(v0 + 1360);
      sub_20A44CFD8((__int128 *)(v0 + 592), v0 + 472);
      sub_20A572BC8(v16, v21, v20);
      v22 = sub_20A5B8B64();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v17, 0, 1, v22);
      v23 = *v18;
      sub_20A47BD60(v0 + 472, v0 + 272);
      v24 = (_QWORD *)swift_allocObject();
      v24[2] = 0;
      v24[3] = 0;
      v24[4] = v23;
      v24[5] = v19;
      sub_20A44CFD8((__int128 *)(v0 + 272), (uint64_t)(v24 + 6));
      v24[11] = v21;
      v24[12] = v20;
      swift_bridgeObjectRetain();
      swift_retain();
      sub_20A535CA4(v17, (uint64_t)&unk_2545FC250, (uint64_t)v24);
      sub_20A44CE2C(v17, (uint64_t *)&unk_253EB5180);
      __swift_destroy_boxed_opaque_existential_1(v0 + 472);
    }
    else
    {
      sub_20A44CE2C(v0 + 592, &qword_2545FBD20);
    }
  }
  v25 = *(_QWORD *)(v0 + 1432);
  v26 = *(_QWORD *)(v25 + 16);
  if (v26)
  {
    v93 = (_QWORD *)(v0 + 312);
    v94 = (__n128 *)(v0 + 984);
    v92 = (__n128 *)(v0 + 1080);
    v27 = (_OWORD *)(v0 + 208);
    v28 = (__int128 *)(v25 + 32);
    swift_bridgeObjectRetain();
    do
    {
      v95 = v26;
      v33 = *(const void **)(v0 + 1440);
      v34 = *(_QWORD *)(v0 + 1368);
      v35 = *(_QWORD *)(v0 + 1360);
      v37 = v28[1];
      v36 = v28[2];
      v38 = *v28;
      *(_OWORD *)(v0 + 250) = *(__int128 *)((char *)v28 + 42);
      *(_OWORD *)(v0 + 224) = v37;
      *(_OWORD *)(v0 + 240) = v36;
      *v27 = v38;
      sub_20A59A41C((__n128 *)(v0 + 224), v94);
      *(_QWORD *)&v98[0] = v35;
      *((_QWORD *)&v98[0] + 1) = v34;
      __dst[0] = 0;
      __dst[1] = 0xE000000000000000;
      sub_20A59A458((uint64_t)v27);
      sub_20A5B8E94();
      v39 = __dst[1];
      *(_QWORD *)(v0 + 1224) = __dst[0];
      *(_QWORD *)(v0 + 1232) = v39;
      sub_20A5B899C();
      v40 = *(_OWORD *)(v0 + 224);
      *(_OWORD *)(v0 + 144) = *v27;
      *(_OWORD *)(v0 + 160) = v40;
      *(_OWORD *)(v0 + 176) = *(_OWORD *)(v0 + 240);
      *(_OWORD *)(v0 + 186) = *(_OWORD *)(v0 + 250);
      sub_20A5B8F9C();
      v41 = *(_QWORD *)(v0 + 1224);
      v42 = *(_QWORD *)(v0 + 1232);
      LOBYTE(__dst[0]) = 5;
      CoreODILogger.debug(_:category:)(v41, v42, __dst);
      swift_bridgeObjectRelease();
      memcpy(__dst, v33, 0x3F9uLL);
      v43 = *(_OWORD *)(v0 + 224);
      v98[0] = *v27;
      v98[1] = v43;
      v99[0] = *(_OWORD *)(v0 + 240);
      *(_OWORD *)((char *)v99 + 10) = *(_OWORD *)(v0 + 250);
      sub_20A567C1C((uint64_t)v98);
      v44 = *(_QWORD *)(v0 + 336);
      v45 = *(_QWORD *)(v0 + 344);
      __swift_project_boxed_opaque_existential_1(v93, v44);
      sub_20A59A41C(v94, v92);
      (*(void (**)(_QWORD *__return_ptr, __n128 *, uint64_t, uint64_t))(v45 + 8))(__dst, v92, v44, v45);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v93);
      v46 = *(_QWORD *)(v0 + 1368);
      if (LOBYTE(__dst[0]) == 210)
      {
        v47 = *(unsigned __int8 *)(v0 + 241);
        *(_QWORD *)&v98[0] = *(_QWORD *)(v0 + 1360);
        *((_QWORD *)&v98[0] + 1) = v46;
        __dst[0] = 0;
        __dst[1] = 0xE000000000000000;
        sub_20A5B8E94();
        v48 = __dst[1];
        *(_QWORD *)(v0 + 1256) = __dst[0];
        *(_QWORD *)(v0 + 1264) = v48;
        sub_20A5B899C();
        v49 = *(_OWORD *)(v0 + 224);
        *(_OWORD *)(v0 + 80) = *v27;
        *(_OWORD *)(v0 + 96) = v49;
        *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 240);
        *(_OWORD *)(v0 + 122) = *(_OWORD *)(v0 + 250);
        sub_20A5B8F9C();
        v50 = *(_QWORD *)(v0 + 1256);
        v51 = *(_QWORD *)(v0 + 1264);
        LOBYTE(__dst[0]) = 14;
        CoreODILogger.debug(_:category:)(v50, v51, __dst);
        swift_bridgeObjectRelease();
        __asm { BR              X8 }
      }
      *(_QWORD *)&v98[0] = *(_QWORD *)(v0 + 1360);
      *((_QWORD *)&v98[0] + 1) = v46;
      __dst[0] = 0;
      __dst[1] = 0xE000000000000000;
      sub_20A5B8E94();
      v29 = __dst[1];
      *(_QWORD *)(v0 + 1272) = __dst[0];
      *(_QWORD *)(v0 + 1280) = v29;
      sub_20A5B899C();
      v30 = *(_OWORD *)(v0 + 224);
      *(_OWORD *)(v0 + 16) = *v27;
      *(_OWORD *)(v0 + 32) = v30;
      *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 240);
      *(_OWORD *)(v0 + 58) = *(_OWORD *)(v0 + 250);
      sub_20A5B8F9C();
      sub_20A59A4A0((uint64_t)v27);
      v31 = *(_QWORD *)(v0 + 1272);
      v32 = *(_QWORD *)(v0 + 1280);
      LOBYTE(__dst[0]) = 5;
      CoreODILogger.debug(_:category:)(v31, v32, __dst);
      swift_bridgeObjectRelease();
      v28 += 4;
      --v26;
    }
    while (v95 != 1);
    swift_bridgeObjectRelease();
  }
  v52 = *(_QWORD *)(v0 + 1448);
  if ((*(_BYTE *)(v52 + 8) & 1) == 0)
  {
    v53 = *(_QWORD *)(v0 + 1592);
    v54 = *(uint64_t **)(v0 + 1456);
    v55 = *(_QWORD *)(v0 + 1400);
    v56 = *(_QWORD *)(v0 + 1368);
    v57 = *(_QWORD *)(v0 + 1360);
    sub_20A572BC8(*(_QWORD *)v52, v57, v56);
    v58 = sub_20A5B8B64();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v53, 0, 1, v58);
    v59 = *v54;
    v60 = (_QWORD *)swift_allocObject();
    v60[2] = 0;
    v60[3] = 0;
    v60[4] = v59;
    v60[5] = v55;
    v60[6] = v57;
    v60[7] = v56;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_20A535CA4(v53, (uint64_t)&unk_2545FC1C0, (uint64_t)v60);
    sub_20A44CE2C(v53, (uint64_t *)&unk_253EB5180);
  }
  v61 = *(_QWORD *)(v0 + 1464);
  if ((*(_BYTE *)(v61 + 8) & 1) == 0)
  {
    v62 = *(_QWORD *)(v0 + 1592);
    v63 = *(uint64_t **)(v0 + 1472);
    v64 = *(_QWORD *)(v0 + 1400);
    v65 = *(_QWORD *)(v0 + 1368);
    v66 = *(_QWORD *)(v0 + 1360);
    sub_20A572BC8(*(_QWORD *)v61, v66, v65);
    v67 = sub_20A5B8B64();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 56))(v62, 0, 1, v67);
    v68 = *v63;
    v69 = (_QWORD *)swift_allocObject();
    v69[2] = 0;
    v69[3] = 0;
    v69[4] = v68;
    v69[5] = v64;
    v69[6] = v66;
    v69[7] = v65;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_20A535CA4(v62, (uint64_t)&unk_2545FC1B0, (uint64_t)v69);
    sub_20A44CE2C(v62, (uint64_t *)&unk_253EB5180);
  }
  v70 = *(_QWORD **)(v0 + 1488);
  v71 = *(_QWORD *)(v0 + 1480);
  v72 = *(_QWORD *)(v0 + 1368);
  *(_QWORD *)&v98[0] = *(_QWORD *)(v0 + 1360);
  *((_QWORD *)&v98[0] + 1) = v72;
  __dst[0] = 0;
  __dst[1] = 0xE000000000000000;
  sub_20A5B8E94();
  sub_20A5B899C();
  v73 = *(_QWORD *)v71;
  if (*(_BYTE *)(v71 + 8))
    v73 = -1;
  *(_QWORD *)(v0 + 1328) = v73;
  sub_20A5B9170();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  *(_QWORD *)(v0 + 1336) = *v70;
  sub_20A5B9170();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  v74 = swift_bridgeObjectRetain();
  MEMORY[0x20BD25B4C](v74, MEMORY[0x24BEE0D00]);
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v75 = __dst[0];
  LOBYTE(__dst[0]) = 14;
  CoreODILogger.info(_:category:)(v75, __dst[1], __dst);
  swift_bridgeObjectRelease();
  if ((*(_BYTE *)(v71 + 8) & 1) == 0)
  {
    v77 = *(_QWORD *)(v0 + 1592);
    v78 = *(uint64_t **)(v0 + 1496);
    v79 = *(uint64_t **)(v0 + 1488);
    v80 = *(_QWORD *)(v0 + 1400);
    v81 = *(_QWORD *)(v0 + 1392);
    v82 = *(_QWORD *)(v0 + 1368);
    v83 = *(_QWORD *)(v0 + 1360);
    sub_20A572BC8(**(_QWORD **)(v0 + 1480), v83, v82);
    v84 = sub_20A5B8B64();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 56))(v77, 0, 1, v84);
    v85 = *v79;
    v86 = *v78;
    sub_20A47BD60(v81, v0 + 552);
    v87 = (_QWORD *)swift_allocObject();
    v87[2] = 0;
    v87[3] = 0;
    v87[4] = v83;
    v87[5] = v82;
    v87[6] = v86;
    v87[7] = v85;
    v87[8] = v80;
    sub_20A44CFD8((__int128 *)(v0 + 552), (uint64_t)(v87 + 9));
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_20A535CA4(v77, (uint64_t)&unk_2545FC1A0, (uint64_t)v87);
    sub_20A44CE2C(v77, (uint64_t *)&unk_253EB5180);
  }
  v88 = *(_QWORD *)(v0 + 1400);
  v89 = sub_20A498124(&qword_2545FBCF8, v76, (uint64_t (*)(uint64_t))type metadata accessor for ArmandDataFiller, (uint64_t)&protocol conformance descriptor for ArmandDataFiller);
  v96 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_2545FC190 + dword_2545FC190);
  v90 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 1600) = v90;
  *v90 = v0;
  v90[1] = sub_20A574904;
  return v96(v88, v89);
}

uint64_t sub_20A574904()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 1608) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A574968()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  _QWORD v9[2];
  uint64_t v10;
  unint64_t v11;

  v1 = *(void **)(v0 + 1608);
  sub_20A5B8B94();
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 1400);
    v4 = *(_QWORD *)(v2 + 1208);
    v9[0] = *(_QWORD *)(v2 + 1200);
    v3 = v9[0];
    v9[1] = v4;
    v10 = 0;
    v11 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_20A5B8E94();
    *(_QWORD *)(v0 + 1240) = 0;
    *(_QWORD *)(v0 + 1248) = 0xE000000000000000;
    sub_20A5B899C();
    *(_QWORD *)(v0 + 1320) = v1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52D0);
    sub_20A5B8F9C();
    v5 = *(_QWORD *)(v0 + 1240);
    v6 = *(_QWORD *)(v0 + 1248);
    LOBYTE(v10) = 14;
    CoreODILogger.error(_:category:)(v5, v6, &v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v10 = v3;
    v11 = v4;
    LOBYTE(v9[0]) = 14;
    swift_bridgeObjectRetain();
    CoreODILogger.debug(_:category:)(0xD00000000000005ALL, 0x800000020A5E5470, v9);

    swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v7 = 1;
  }
  **(_BYTE **)(v0 + 1344) = v7;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A574B60()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD v8[2];
  uint64_t v9;
  unint64_t v10;

  v1 = *(void **)(v0 + 1608);
  v2 = *(_QWORD *)(v0 + 1400);
  v4 = *(_QWORD *)(v2 + 1208);
  v8[0] = *(_QWORD *)(v2 + 1200);
  v3 = v8[0];
  v8[1] = v4;
  v9 = 0;
  v10 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_20A5B8E94();
  *(_QWORD *)(v0 + 1240) = 0;
  *(_QWORD *)(v0 + 1248) = 0xE000000000000000;
  sub_20A5B899C();
  *(_QWORD *)(v0 + 1320) = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52D0);
  sub_20A5B8F9C();
  v5 = *(_QWORD *)(v0 + 1240);
  v6 = *(_QWORD *)(v0 + 1248);
  LOBYTE(v9) = 14;
  CoreODILogger.error(_:category:)(v5, v6, &v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = v3;
  v10 = v4;
  LOBYTE(v8[0]) = 14;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD00000000000005ALL, 0x800000020A5E5470, v8);

  swift_bridgeObjectRelease();
  **(_BYTE **)(v0 + 1344) = 0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A574D44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;

  v8[18] = v10;
  v8[19] = v11;
  v8[16] = a7;
  v8[17] = a8;
  v8[14] = a5;
  v8[15] = a6;
  v8[12] = a1;
  v8[13] = a4;
  return swift_task_switch();
}

uint64_t sub_20A574D70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v10;
  __int128 v11;

  v2 = *(_QWORD *)(v0 + 128);
  v1 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 104);
  v11 = *(_OWORD *)(v0 + 144);
  sub_20A47BD60(*(_QWORD *)(v0 + 112), v0 + 16);
  sub_20A47BD60(v0 + 16, v0 + 56);
  v5 = swift_allocObject();
  *(_QWORD *)(v0 + 160) = v5;
  sub_20A44CFD8((__int128 *)(v0 + 16), v5 + 16);
  *(_QWORD *)(v5 + 56) = v3;
  *(_QWORD *)(v5 + 64) = v2;
  *(_QWORD *)(v5 + 72) = v1;
  *(_OWORD *)(v5 + 80) = v11;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  if (v4 == -1)
  {
    v10 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 192) = v10;
    *v10 = v0;
    v10[1] = sub_20A574FE4;
    return sub_20A575198(*(_QWORD *)(v0 + 96), v0 + 56, *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144));
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 104);
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 168) = v7;
    v7[2] = v6;
    v7[3] = &unk_2545FC308;
    v7[4] = v5;
    v7[5] = &unk_2545FC268;
    v7[6] = 0;
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 176) = v8;
    *v8 = v0;
    v8[1] = sub_20A574F2C;
    return sub_20A5B9200();
  }
}

uint64_t sub_20A574F2C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 184) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_release();
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1(v2 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_20A574FE4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 200) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A575048()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A5750C0()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A575128()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A575198(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[7] = a5;
  v6[8] = a6;
  v6[5] = a3;
  v6[6] = a4;
  v6[4] = a2;
  v6[9] = type metadata accessor for ODISignpost();
  v6[10] = swift_task_alloc();
  v6[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A57520C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t);

  v1 = *(_QWORD **)(v0 + 32);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v6 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v3 + 8) + *(_QWORD *)(v3 + 8));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v4;
  *v4 = v0;
  v4[1] = sub_20A575284;
  return v6(v2, v3);
}

uint64_t sub_20A575284(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A5752DC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  void *v5;
  int v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void **v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  Swift::String v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t (*v22)(uint64_t, uint64_t);
  char v23;
  unint64_t v24;
  unint64_t v25;

  if (qword_2545F9A70 != -1)
    swift_once();
  v1 = v0[10];
  v3 = qword_2546102F0;
  v2 = *(_QWORD *)algn_2546102F8;
  v4 = byte_254610300;
  v5 = (void *)qword_254610308;
  v6 = byte_254610310;
  *(_QWORD *)(v1 + 32) = "enableTelemetry=YES";
  *(_QWORD *)(v1 + 40) = 19;
  *(_BYTE *)(v1 + 48) = 2;
  *(_QWORD *)v1 = v3;
  *(_QWORD *)(v1 + 8) = v2;
  *(_BYTE *)(v1 + 16) = v4;
  *(_QWORD *)(v1 + 24) = v5;
  v7 = v5;
  sub_20A5B87D4();
  sub_20A5B8CFC();
  if (v6 == 1)
    sub_20A5B87BC();
  else
    sub_20A5B87C8();
  v8 = v0[10];
  v9 = v0[11];
  v10 = v0[5];

  sub_20A465A70(v8, v9, (uint64_t (*)(_QWORD))type metadata accessor for ODISignpost);
  v11 = *(_QWORD *)(v10 + 16);
  if (v11)
  {
    v12 = (void **)(swift_bridgeObjectRetain() + 40);
    do
    {
      v15 = (uint64_t)*(v12 - 1);
      v14 = *v12;
      swift_bridgeObjectRetain_n();
      v16._countAndFlagsBits = v15;
      v16._object = v14;
      ODIGeocoderBindingsName.init(rawValue:)(v16);
      if (v23 != 8)
      {
        swift_bridgeObjectRelease();
        __asm { BR              X8 }
      }
      v24 = 0;
      v25 = 0xE000000000000000;
      sub_20A5B8E94();
      swift_bridgeObjectRelease();
      v24 = 0xD00000000000001CLL;
      v25 = 0x800000020A5E57D0;
      sub_20A5B899C();
      swift_bridgeObjectRelease();
      v13 = v24;
      LOBYTE(v24) = 14;
      CoreODILogger.info(_:category:)(v13, v25, &v24);
      swift_bridgeObjectRelease();
      v12 += 2;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
  }
  v17 = (_QWORD *)v0[4];
  v0[13] = sub_20A59B250();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v18 = v17[3];
  v19 = v17[4];
  __swift_project_boxed_opaque_existential_1(v17, v18);
  v22 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v19 + 16) + *(_QWORD *)(v19 + 16));
  v20 = (_QWORD *)swift_task_alloc();
  v0[14] = v20;
  *v20 = v0;
  v20[1] = sub_20A57576C;
  return v22(v18, v19);
}

uint64_t sub_20A57576C(uint64_t a1)
{
  uint64_t **v1;
  _QWORD *v2;
  uint64_t *v4;

  v4 = *v1;
  v4[15] = a1;
  swift_task_dealloc();
  v2 = (_QWORD *)swift_task_alloc();
  v4[16] = (uint64_t)v2;
  *v2 = v4;
  v2[1] = sub_20A5757DC;
  return sub_20A509DD0(v4[13]);
}

uint64_t sub_20A5757DC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 136) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_20A575858()
{
  uint64_t v0;

  sub_20A56DFFC(*(_QWORD *)(v0 + 136));
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_20A5758A4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 88);
  sub_20A5B8CF0();
  sub_20A5B87C8();
  sub_20A465AB4(v1, (uint64_t (*)(_QWORD))type metadata accessor for ODISignpost);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A575924(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  v8[18] = a7;
  v8[19] = a8;
  v8[16] = a5;
  v8[17] = a6;
  v8[15] = a4;
  v8[20] = type metadata accessor for ODISignpost();
  v8[21] = swift_task_alloc();
  v8[22] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A575998()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  void *v5;
  int v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v18;
  uint64_t v19;

  if (qword_2545F9A48 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 168);
  v2 = qword_254610228;
  v3 = unk_254610230;
  v4 = byte_254610238;
  v5 = (void *)qword_254610240;
  v6 = byte_254610248;
  *(_QWORD *)(v1 + 32) = "enableTelemetry=YES";
  *(_QWORD *)(v1 + 40) = 19;
  *(_BYTE *)(v1 + 48) = 2;
  *(_QWORD *)v1 = v2;
  *(_QWORD *)(v1 + 8) = v3;
  *(_BYTE *)(v1 + 16) = v4;
  *(_QWORD *)(v1 + 24) = v5;
  v7 = v5;
  sub_20A5B87D4();
  sub_20A5B8CFC();
  if (v6 == 1)
    sub_20A5B87BC();
  else
    sub_20A5B87C8();
  v9 = *(_QWORD *)(v0 + 168);
  v8 = *(_QWORD *)(v0 + 176);
  v11 = *(_QWORD *)(v0 + 128);
  v10 = *(_QWORD *)(v0 + 136);
  v12 = *(_QWORD *)(v0 + 120);

  sub_20A465A70(v9, v8, (uint64_t (*)(_QWORD))type metadata accessor for ODISignpost);
  sub_20A47BD60(v10, v0 + 16);
  sub_20A47BD60(v0 + 16, v0 + 56);
  v13 = swift_allocObject();
  *(_QWORD *)(v0 + 184) = v13;
  *(_QWORD *)(v13 + 16) = v11;
  sub_20A44CFD8((__int128 *)(v0 + 16), v13 + 24);
  swift_retain_n();
  if (v12 == -1)
  {
    v18 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 216) = v18;
    *v18 = v0;
    v18[1] = sub_20A575CD0;
    v19 = *(_QWORD *)(v0 + 128);
    v18[11] = v0 + 56;
    v18[12] = v19;
    return swift_task_switch();
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 120);
    v15 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 192) = v15;
    v15[2] = v14;
    v15[3] = &unk_2545FC260;
    v15[4] = v13;
    v15[5] = &unk_2545FC268;
    v15[6] = 0;
    v16 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 200) = v16;
    *v16 = v0;
    v16[1] = sub_20A575C3C;
    return sub_20A5B9200();
  }
}

uint64_t sub_20A575C3C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 208) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_release();
    swift_task_dealloc();
    __swift_destroy_boxed_opaque_existential_1(v2 + 56);
  }
  return swift_task_switch();
}

uint64_t sub_20A575CD0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A575D24()
{
  uint64_t v0;

  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  return swift_task_switch();
}

uint64_t sub_20A575D78()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 176);
  sub_20A5B8CF0();
  sub_20A5B87C8();
  sub_20A465AB4(v1, (uint64_t (*)(_QWORD))type metadata accessor for ODISignpost);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A575DF8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v6[2];

  v1 = *(void **)(v0 + 208);
  swift_task_dealloc();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  v6[0] = 0;
  v6[1] = 0xE000000000000000;
  sub_20A5B8E94();
  *(_QWORD *)(v0 + 96) = 0;
  *(_QWORD *)(v0 + 104) = 0xE000000000000000;
  sub_20A5B899C();
  *(_QWORD *)(v0 + 112) = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52D0);
  sub_20A5B8F9C();
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 104);
  LOBYTE(v6[0]) = 14;
  CoreODILogger.error(_:category:)(v2, v3, v6);
  swift_bridgeObjectRelease();

  v4 = *(_QWORD *)(v0 + 176);
  sub_20A5B8CF0();
  sub_20A5B87C8();
  sub_20A465AB4(v4, (uint64_t (*)(_QWORD))type metadata accessor for ODISignpost);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A575F60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_20A4CC074;
  v6[11] = a3;
  v6[12] = a2;
  return swift_task_switch();
}

uint64_t sub_20A575FC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[5] = a4;
  v5 = sub_20A5B8780();
  v4[6] = v5;
  v4[7] = *(_QWORD *)(v5 - 8);
  v4[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A576028()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v0 + 56);
  v1 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  sub_20A5B8774();
  v5 = sub_20A5B8750();
  v7 = v6;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_beginAccess();
  *(_QWORD *)(v4 + 464) = v5;
  *(_QWORD *)(v4 + 472) = v7;
  *(_BYTE *)(v4 + 480) = -47;
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A5760CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[11] = a6;
  v7[12] = a7;
  v7[9] = a4;
  v7[10] = a5;
  v7[13] = type metadata accessor for ODISignpost();
  v7[14] = swift_task_alloc();
  v7[15] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A57613C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  void *v5;
  int v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;

  if (qword_2545F9A40 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 112);
  v2 = qword_254610200;
  v3 = *(_QWORD *)algn_254610208;
  v4 = byte_254610210;
  v5 = (void *)qword_254610218;
  v6 = byte_254610220;
  *(_QWORD *)(v1 + 32) = "enableTelemetry=YES";
  *(_QWORD *)(v1 + 40) = 19;
  *(_BYTE *)(v1 + 48) = 2;
  *(_QWORD *)v1 = v2;
  *(_QWORD *)(v1 + 8) = v3;
  *(_BYTE *)(v1 + 16) = v4;
  *(_QWORD *)(v1 + 24) = v5;
  v7 = v5;
  sub_20A5B87D4();
  sub_20A5B8CFC();
  if (v6 == 1)
    sub_20A5B87BC();
  else
    sub_20A5B87C8();
  v9 = *(_QWORD *)(v0 + 112);
  v8 = *(_QWORD *)(v0 + 120);
  v10 = *(_QWORD *)(v0 + 72);

  sub_20A465A70(v9, v8, (uint64_t (*)(_QWORD))type metadata accessor for ODISignpost);
  sub_20A459C88(v10 + 48, v0 + 48, &qword_253EB4840);
  sub_20A459C88(v0 + 48, v0 + 32, &qword_253EB4840);
  v11 = *(_BYTE *)(v0 + 40);
  v12 = *(_QWORD *)(v0 + 32);
  swift_retain_n();
  if ((v11 & 1) != 0 || v12 > 0x10C6F7A0B5EDLL)
  {
    if (qword_253EB6258 != -1)
      swift_once();
    v18 = qword_253EB6240;
    v19 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v19;
    *v19 = v0;
    v19[1] = sub_20A576490;
    v20 = *(_QWORD *)(v0 + 80);
    v19[5] = v18;
    v19[6] = v20;
    return swift_task_switch();
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 80);
    v14 = 1000000 * v12;
    v15 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 128) = v15;
    v15[2] = v14;
    v15[3] = &unk_2545FC278;
    v15[4] = v13;
    v15[5] = &unk_2545FC268;
    v15[6] = 0;
    v16 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 136) = v16;
    *v16 = v0;
    v16[1] = sub_20A576414;
    return sub_20A5B9200();
  }
}

uint64_t sub_20A576414()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release_n();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_20A576490()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A5764F4()
{
  swift_release_n();
  return swift_task_switch();
}

uint64_t sub_20A576534()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v6[2];

  v1 = *(void **)(v0 + 160);
  swift_release_n();
  v6[0] = 0;
  v6[1] = 0xE000000000000000;
  sub_20A5B8E94();
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0xE000000000000000;
  sub_20A5B899C();
  *(_QWORD *)(v0 + 64) = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52D0);
  sub_20A5B8F9C();
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  LOBYTE(v6[0]) = 14;
  CoreODILogger.error(_:category:)(v2, v3, v6);
  swift_bridgeObjectRelease();

  v4 = *(_QWORD *)(v0 + 120);
  sub_20A5B8CF0();
  sub_20A5B87C8();
  sub_20A465AB4(v4, (uint64_t (*)(_QWORD))type metadata accessor for ODISignpost);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A576670()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v6[2];

  swift_task_dealloc();
  v1 = *(void **)(v0 + 144);
  swift_release_n();
  v6[0] = 0;
  v6[1] = 0xE000000000000000;
  sub_20A5B8E94();
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0xE000000000000000;
  sub_20A5B899C();
  *(_QWORD *)(v0 + 64) = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52D0);
  sub_20A5B8F9C();
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  LOBYTE(v6[0]) = 14;
  CoreODILogger.error(_:category:)(v2, v3, v6);
  swift_bridgeObjectRelease();

  v4 = *(_QWORD *)(v0 + 120);
  sub_20A5B8CF0();
  sub_20A5B87C8();
  sub_20A465AB4(v4, (uint64_t (*)(_QWORD))type metadata accessor for ODISignpost);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A5767B4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 120);
  sub_20A5B8CF0();
  sub_20A5B87C8();
  sub_20A465AB4(v1, (uint64_t (*)(_QWORD))type metadata accessor for ODISignpost);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A576834(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a2;
  return swift_task_switch();
}

uint64_t sub_20A57684C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  if (qword_253EB6258 != -1)
    swift_once();
  v1 = qword_253EB6240;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v2;
  *v2 = v0;
  v2[1] = sub_20A4F9B28;
  v3 = *(_QWORD *)(v0 + 16);
  v2[5] = v1;
  v2[6] = v3;
  return swift_task_switch();
}

uint64_t sub_20A5768D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[11] = a6;
  v7[12] = a7;
  v7[9] = a4;
  v7[10] = a5;
  v7[13] = type metadata accessor for ODISignpost();
  v7[14] = swift_task_alloc();
  v7[15] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A576948()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  void *v5;
  int v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v18;

  if (qword_2545F9A28 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 112);
  v2 = qword_254610188;
  v3 = unk_254610190;
  v4 = byte_254610198;
  v5 = (void *)qword_2546101A0;
  v6 = byte_2546101A8;
  *(_QWORD *)(v1 + 32) = "enableTelemetry=YES";
  *(_QWORD *)(v1 + 40) = 19;
  *(_BYTE *)(v1 + 48) = 2;
  *(_QWORD *)v1 = v2;
  *(_QWORD *)(v1 + 8) = v3;
  *(_BYTE *)(v1 + 16) = v4;
  *(_QWORD *)(v1 + 24) = v5;
  v7 = v5;
  sub_20A5B87D4();
  sub_20A5B8CFC();
  if (v6 == 1)
    sub_20A5B87BC();
  else
    sub_20A5B87C8();
  v9 = *(_QWORD *)(v0 + 112);
  v8 = *(_QWORD *)(v0 + 120);
  v10 = *(_QWORD *)(v0 + 72);

  sub_20A465A70(v9, v8, (uint64_t (*)(_QWORD))type metadata accessor for ODISignpost);
  sub_20A459C88(v10 + 48, v0 + 48, &qword_253EB4840);
  sub_20A459C88(v0 + 48, v0 + 32, &qword_253EB4840);
  v11 = *(_BYTE *)(v0 + 40);
  v12 = *(_QWORD *)(v0 + 32);
  swift_retain_n();
  if ((v11 & 1) != 0 || v12 > 0x10C6F7A0B5EDLL)
  {
    v18 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v18;
    *v18 = v0;
    v18[1] = sub_20A576C6C;
    v18[15] = *(_QWORD *)(v0 + 80);
    return swift_task_switch();
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 80);
    v14 = 1000000 * v12;
    v15 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 128) = v15;
    v15[2] = v14;
    v15[3] = &unk_2545FC288;
    v15[4] = v13;
    v15[5] = &unk_2545FC268;
    v15[6] = 0;
    v16 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 136) = v16;
    *v16 = v0;
    v16[1] = sub_20A576BF0;
    return sub_20A5B9200();
  }
}

uint64_t sub_20A576BF0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release_n();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_20A576C6C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A576CD0()
{
  swift_release_n();
  return swift_task_switch();
}

uint64_t sub_20A576D10()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v6[2];

  v1 = *(void **)(v0 + 160);
  swift_release_n();
  v6[0] = 0;
  v6[1] = 0xE000000000000000;
  sub_20A5B8E94();
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0xE000000000000000;
  sub_20A5B899C();
  *(_QWORD *)(v0 + 64) = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52D0);
  sub_20A5B8F9C();
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  LOBYTE(v6[0]) = 14;
  CoreODILogger.error(_:category:)(v2, v3, v6);
  swift_bridgeObjectRelease();

  v4 = *(_QWORD *)(v0 + 120);
  sub_20A5B8CF0();
  sub_20A5B87C8();
  sub_20A465AB4(v4, (uint64_t (*)(_QWORD))type metadata accessor for ODISignpost);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A576E4C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v6[2];

  swift_task_dealloc();
  v1 = *(void **)(v0 + 144);
  swift_release_n();
  v6[0] = 0;
  v6[1] = 0xE000000000000000;
  sub_20A5B8E94();
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0xE000000000000000;
  sub_20A5B899C();
  *(_QWORD *)(v0 + 64) = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52D0);
  sub_20A5B8F9C();
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  LOBYTE(v6[0]) = 14;
  CoreODILogger.error(_:category:)(v2, v3, v6);
  swift_bridgeObjectRelease();

  v4 = *(_QWORD *)(v0 + 120);
  sub_20A5B8CF0();
  sub_20A5B87C8();
  sub_20A465AB4(v4, (uint64_t (*)(_QWORD))type metadata accessor for ODISignpost);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A576F90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_20A45A37C;
  v4[15] = a2;
  return swift_task_switch();
}

uint64_t sub_20A576FF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  v8[25] = a7;
  v8[26] = a8;
  v8[23] = a5;
  v8[24] = a6;
  v8[22] = a4;
  return swift_task_switch();
}

uint64_t sub_20A577010()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;

  v2 = *(_QWORD *)(v0 + 184);
  v1 = *(_QWORD *)(v0 + 192);
  sub_20A459C88(*(_QWORD *)(v0 + 176) + 48, v0 + 152, &qword_253EB4840);
  sub_20A459C88(v0 + 152, v0 + 136, &qword_253EB4840);
  v3 = *(_BYTE *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 136);
  sub_20A47BD60(v1, v0 + 56);
  sub_20A47BD60(v0 + 56, v0 + 16);
  v5 = swift_allocObject();
  *(_QWORD *)(v0 + 216) = v5;
  *(_QWORD *)(v5 + 16) = v2;
  sub_20A44CFD8((__int128 *)(v0 + 56), v5 + 24);
  swift_retain_n();
  if ((v3 & 1) != 0 || v4 > 0x10C6F7A0B5EDLL)
    return swift_task_switch();
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 224) = v6;
  v6[2] = 1000000 * v4;
  v6[3] = &unk_2545FC298;
  v6[4] = v5;
  v6[5] = &unk_2545FC268;
  v6[6] = 0;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 232) = v7;
  *v7 = v0;
  v7[1] = sub_20A5771BC;
  return sub_20A5B9200();
}

uint64_t sub_20A5771BC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 240) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_release();
    swift_task_dealloc();
    __swift_destroy_boxed_opaque_existential_1(v2 + 16);
  }
  return swift_task_switch();
}

uint64_t sub_20A577250()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t, uint64_t);
  char v6;

  v6 = 5;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD000000000000033, 0x800000020A5E55F0, &v6);
  swift_bridgeObjectRelease();
  v1 = v0[5];
  v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  v5 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v2 + 8) + *(_QWORD *)(v2 + 8));
  v3 = (_QWORD *)swift_task_alloc();
  v0[31] = v3;
  *v3 = v0;
  v3[1] = sub_20A577320;
  return v5(v1, v2);
}

uint64_t sub_20A577320(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 145) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A577380()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  v1 = *(_BYTE *)(v0 + 145);
  v2 = *(_QWORD *)(v0 + 184);
  swift_beginAccess();
  *(_BYTE *)(v2 + 505) = v1;
  *(_BYTE *)(v2 + 506) = -47;
  return swift_task_switch();
}

uint64_t sub_20A5773DC()
{
  uint64_t v0;

  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_task_switch();
}

uint64_t sub_20A577430()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[2];

  v1 = *(void **)(v0 + 240);
  swift_task_dealloc();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  v5[0] = 0;
  v5[1] = 0xE000000000000000;
  sub_20A5B8E94();
  *(_QWORD *)(v0 + 120) = 0;
  *(_QWORD *)(v0 + 128) = 0xE000000000000000;
  sub_20A5B899C();
  *(_QWORD *)(v0 + 168) = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52D0);
  sub_20A5B8F9C();
  v2 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 128);
  LOBYTE(v5[0]) = 14;
  CoreODILogger.error(_:category:)(v2, v3, v5);
  swift_bridgeObjectRelease();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A57754C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 40) = a2;
  *(_QWORD *)(v3 + 48) = a3;
  return swift_task_switch();
}

uint64_t sub_20A577560()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t);
  char v7;

  v1 = *(_QWORD **)(v0 + 48);
  v7 = 5;
  swift_bridgeObjectRetain();
  CoreODILogger.debug(_:category:)(0xD000000000000033, 0x800000020A5E55F0, &v7);
  swift_bridgeObjectRelease();
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v6 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v3 + 8) + *(_QWORD *)(v3 + 8));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v4;
  *v4 = v0;
  v4[1] = sub_20A57762C;
  return v6(v2, v3);
}

uint64_t sub_20A57762C(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 64) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A57768C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  v1 = *(_BYTE *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 40);
  swift_beginAccess();
  *(_BYTE *)(v2 + 505) = v1;
  *(_BYTE *)(v2 + 506) = -47;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A5776E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[2] = a4;
  v4[3] = type metadata accessor for ODISignpost();
  v4[4] = swift_task_alloc();
  v4[5] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A57774C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  void *v5;
  int v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;

  if (qword_2545F9A38 != -1)
    swift_once();
  v1 = v0[4];
  v3 = qword_2546101D8;
  v2 = unk_2546101E0;
  v4 = byte_2546101E8;
  v5 = (void *)qword_2546101F0;
  v6 = byte_2546101F8;
  *(_QWORD *)(v1 + 32) = "enableTelemetry=YES";
  *(_QWORD *)(v1 + 40) = 19;
  *(_BYTE *)(v1 + 48) = 2;
  *(_QWORD *)v1 = v3;
  *(_QWORD *)(v1 + 8) = v2;
  *(_BYTE *)(v1 + 16) = v4;
  *(_QWORD *)(v1 + 24) = v5;
  v7 = v5;
  sub_20A5B87D4();
  sub_20A5B8CFC();
  if (v6 == 1)
    sub_20A5B87BC();
  else
    sub_20A5B87C8();
  v8 = v0[4];
  v9 = v0[5];

  sub_20A465A70(v8, v9, (uint64_t (*)(_QWORD))type metadata accessor for ODISignpost);
  if (qword_2545F9960 != -1)
    swift_once();
  v10 = qword_25460FF70;
  v11 = (_QWORD *)swift_task_alloc();
  v0[6] = v11;
  *v11 = v0;
  v11[1] = sub_20A577904;
  v12 = v0[2];
  v11[5] = v10;
  v11[6] = v12;
  return swift_task_switch();
}

uint64_t sub_20A577904()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A577958()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  sub_20A5B8CF0();
  sub_20A5B87C8();
  sub_20A465AB4(v1, (uint64_t (*)(_QWORD))type metadata accessor for ODISignpost);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A5779D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[11] = a6;
  v7[12] = a7;
  v7[9] = a4;
  v7[10] = a5;
  v7[13] = type metadata accessor for ODISignpost();
  v7[14] = swift_task_alloc();
  v7[15] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A577A48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  void *v5;
  int v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v18;

  if (qword_2545F9A50 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 112);
  v2 = qword_254610250;
  v3 = *(_QWORD *)algn_254610258;
  v4 = byte_254610260;
  v5 = (void *)qword_254610268;
  v6 = byte_254610270;
  *(_QWORD *)(v1 + 32) = "enableTelemetry=YES";
  *(_QWORD *)(v1 + 40) = 19;
  *(_BYTE *)(v1 + 48) = 2;
  *(_QWORD *)v1 = v2;
  *(_QWORD *)(v1 + 8) = v3;
  *(_BYTE *)(v1 + 16) = v4;
  *(_QWORD *)(v1 + 24) = v5;
  v7 = v5;
  sub_20A5B87D4();
  sub_20A5B8CFC();
  if (v6 == 1)
    sub_20A5B87BC();
  else
    sub_20A5B87C8();
  v9 = *(_QWORD *)(v0 + 112);
  v8 = *(_QWORD *)(v0 + 120);
  v10 = *(_QWORD *)(v0 + 72);

  sub_20A465A70(v9, v8, (uint64_t (*)(_QWORD))type metadata accessor for ODISignpost);
  sub_20A459C88(v10 + 48, v0 + 48, &qword_253EB4840);
  sub_20A459C88(v0 + 48, v0 + 32, &qword_253EB4840);
  v11 = *(_BYTE *)(v0 + 40);
  v12 = *(_QWORD *)(v0 + 32);
  swift_retain_n();
  if ((v11 & 1) != 0 || v12 > 0x10C6F7A0B5EDLL)
  {
    v18 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v18;
    *v18 = v0;
    v18[1] = sub_20A577D6C;
    v18[5] = *(_QWORD *)(v0 + 80);
    return swift_task_switch();
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 80);
    v14 = 1000000 * v12;
    v15 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 128) = v15;
    v15[2] = v14;
    v15[3] = &unk_2545FC2A8;
    v15[4] = v13;
    v15[5] = &unk_2545FC268;
    v15[6] = 0;
    v16 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 136) = v16;
    *v16 = v0;
    v16[1] = sub_20A577CF0;
    return sub_20A5B9200();
  }
}

uint64_t sub_20A577CF0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release_n();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_20A577D6C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A577DD0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v6[2];

  v1 = *(void **)(v0 + 160);
  swift_release_n();
  v6[0] = 0;
  v6[1] = 0xE000000000000000;
  sub_20A5B8E94();
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0xE000000000000000;
  sub_20A5B899C();
  *(_QWORD *)(v0 + 64) = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52D0);
  sub_20A5B8F9C();
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  LOBYTE(v6[0]) = 14;
  CoreODILogger.error(_:category:)(v2, v3, v6);
  swift_bridgeObjectRelease();

  v4 = *(_QWORD *)(v0 + 120);
  sub_20A5B8CF0();
  sub_20A5B87C8();
  sub_20A465AB4(v4, (uint64_t (*)(_QWORD))type metadata accessor for ODISignpost);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A577F0C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v6[2];

  swift_task_dealloc();
  v1 = *(void **)(v0 + 144);
  swift_release_n();
  v6[0] = 0;
  v6[1] = 0xE000000000000000;
  sub_20A5B8E94();
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0xE000000000000000;
  sub_20A5B899C();
  *(_QWORD *)(v0 + 64) = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52D0);
  sub_20A5B8F9C();
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  LOBYTE(v6[0]) = 14;
  CoreODILogger.error(_:category:)(v2, v3, v6);
  swift_bridgeObjectRelease();

  v4 = *(_QWORD *)(v0 + 120);
  sub_20A5B8CF0();
  sub_20A5B87C8();
  sub_20A465AB4(v4, (uint64_t (*)(_QWORD))type metadata accessor for ODISignpost);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A578050(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_20A45A37C;
  v4[5] = a2;
  return swift_task_switch();
}

uint64_t sub_20A5780B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[11] = a6;
  v7[12] = a7;
  v7[9] = a4;
  v7[10] = a5;
  v7[13] = type metadata accessor for ODISignpost();
  v7[14] = swift_task_alloc();
  v7[15] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A578120()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  void *v5;
  int v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v18;

  if (qword_2545F9A50 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 112);
  v2 = qword_254610250;
  v3 = *(_QWORD *)algn_254610258;
  v4 = byte_254610260;
  v5 = (void *)qword_254610268;
  v6 = byte_254610270;
  *(_QWORD *)(v1 + 32) = "enableTelemetry=YES";
  *(_QWORD *)(v1 + 40) = 19;
  *(_BYTE *)(v1 + 48) = 2;
  *(_QWORD *)v1 = v2;
  *(_QWORD *)(v1 + 8) = v3;
  *(_BYTE *)(v1 + 16) = v4;
  *(_QWORD *)(v1 + 24) = v5;
  v7 = v5;
  sub_20A5B87D4();
  sub_20A5B8CFC();
  if (v6 == 1)
    sub_20A5B87BC();
  else
    sub_20A5B87C8();
  v9 = *(_QWORD *)(v0 + 112);
  v8 = *(_QWORD *)(v0 + 120);
  v10 = *(_QWORD *)(v0 + 72);

  sub_20A465A70(v9, v8, (uint64_t (*)(_QWORD))type metadata accessor for ODISignpost);
  sub_20A459C88(v10 + 48, v0 + 48, &qword_253EB4840);
  sub_20A459C88(v0 + 48, v0 + 32, &qword_253EB4840);
  v11 = *(_BYTE *)(v0 + 40);
  v12 = *(_QWORD *)(v0 + 32);
  swift_retain_n();
  if ((v11 & 1) != 0 || v12 > 0x10C6F7A0B5EDLL)
  {
    v18 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v18;
    *v18 = v0;
    v18[1] = sub_20A578444;
    v18[5] = *(_QWORD *)(v0 + 80);
    return swift_task_switch();
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 80);
    v14 = 1000000 * v12;
    v15 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 128) = v15;
    v15[2] = v14;
    v15[3] = &unk_2545FC2B8;
    v15[4] = v13;
    v15[5] = &unk_2545FC268;
    v15[6] = 0;
    v16 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 136) = v16;
    *v16 = v0;
    v16[1] = sub_20A5783C8;
    return sub_20A5B9200();
  }
}

uint64_t sub_20A5783C8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release_n();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_20A578444()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A5784A8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v6[2];

  v1 = *(void **)(v0 + 160);
  swift_release_n();
  v6[0] = 0;
  v6[1] = 0xE000000000000000;
  sub_20A5B8E94();
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0xE000000000000000;
  sub_20A5B899C();
  *(_QWORD *)(v0 + 64) = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52D0);
  sub_20A5B8F9C();
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  LOBYTE(v6[0]) = 14;
  CoreODILogger.error(_:category:)(v2, v3, v6);
  swift_bridgeObjectRelease();

  v4 = *(_QWORD *)(v0 + 120);
  sub_20A5B8CF0();
  sub_20A5B87C8();
  sub_20A465AB4(v4, (uint64_t (*)(_QWORD))type metadata accessor for ODISignpost);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A5785E4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v6[2];

  swift_task_dealloc();
  v1 = *(void **)(v0 + 144);
  swift_release_n();
  v6[0] = 0;
  v6[1] = 0xE000000000000000;
  sub_20A5B8E94();
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0xE000000000000000;
  sub_20A5B899C();
  *(_QWORD *)(v0 + 64) = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52D0);
  sub_20A5B8F9C();
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  LOBYTE(v6[0]) = 14;
  CoreODILogger.error(_:category:)(v2, v3, v6);
  swift_bridgeObjectRelease();

  v4 = *(_QWORD *)(v0 + 120);
  sub_20A5B8CF0();
  sub_20A5B87C8();
  sub_20A465AB4(v4, (uint64_t (*)(_QWORD))type metadata accessor for ODISignpost);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A578728(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_20A45A37C;
  v4[5] = a2;
  return swift_task_switch();
}

uint64_t sub_20A578788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v8;

  v6[5] = a5;
  v6[6] = a6;
  v8 = (_QWORD *)swift_task_alloc();
  v6[7] = v8;
  *v8 = v6;
  v8[1] = sub_20A5787EC;
  v8[5] = a4;
  return swift_task_switch();
}

uint64_t sub_20A5787EC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_20A578858()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[2];

  v1 = *(void **)(v0 + 64);
  v5[0] = 0;
  v5[1] = 0xE000000000000000;
  sub_20A5B8E94();
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0xE000000000000000;
  sub_20A5B899C();
  *(_QWORD *)(v0 + 32) = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52D0);
  sub_20A5B8F9C();
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  LOBYTE(v5[0]) = 14;
  CoreODILogger.error(_:category:)(v2, v3, v5);
  swift_bridgeObjectRelease();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A57893C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[9] = a6;
  v7[10] = a7;
  v7[7] = a4;
  v7[8] = a5;
  v7[11] = type metadata accessor for ODISignpost();
  v7[12] = swift_task_alloc();
  v7[13] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A5789AC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  void *v5;
  int v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v16;

  if (qword_2545F9A20 != -1)
    swift_once();
  v1 = v0[12];
  v3 = qword_254610160;
  v2 = *(_QWORD *)algn_254610168;
  v4 = byte_254610170;
  v5 = (void *)qword_254610178;
  v6 = byte_254610180;
  *(_QWORD *)(v1 + 32) = "enableTelemetry=YES";
  *(_QWORD *)(v1 + 40) = 19;
  *(_BYTE *)(v1 + 48) = 2;
  *(_QWORD *)v1 = v3;
  *(_QWORD *)(v1 + 8) = v2;
  *(_BYTE *)(v1 + 16) = v4;
  *(_QWORD *)(v1 + 24) = v5;
  v7 = v5;
  sub_20A5B87D4();
  sub_20A5B8CFC();
  if (v6 == 1)
    sub_20A5B87BC();
  else
    sub_20A5B87C8();
  v8 = v0[12];
  v9 = v0[13];
  v10 = v0[7];

  sub_20A465A70(v8, v9, (uint64_t (*)(_QWORD))type metadata accessor for ODISignpost);
  swift_retain();
  if (v10 == -1)
  {
    if (qword_2545F9958 != -1)
      swift_once();
    v16 = (_QWORD *)swift_task_alloc();
    v0[17] = v16;
    *v16 = v0;
    v16[1] = sub_20A578C88;
    return sub_20A451D48();
  }
  else
  {
    v12 = v0[7];
    v11 = v0[8];
    v13 = (_QWORD *)swift_task_alloc();
    v0[14] = v13;
    v13[2] = v12;
    v13[3] = &unk_2545FC2D0;
    v13[4] = 0;
    v13[5] = &unk_2545FC2C8;
    v13[6] = v11;
    v14 = (_QWORD *)swift_task_alloc();
    v0[15] = v14;
    *v14 = v0;
    v14[1] = sub_20A578C10;
    return sub_20A5B9200();
  }
}

uint64_t sub_20A578C10()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_20A578C88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(*v3 + 144) = v2;
  swift_task_dealloc();
  if (!v2)
  {
    *(_QWORD *)(v6 + 152) = a2;
    *(_QWORD *)(v6 + 160) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_20A578D00()
{
  uint64_t v0;

  *(int8x16_t *)(v0 + 16) = vextq_s8(*(int8x16_t *)(v0 + 152), *(int8x16_t *)(v0 + 152), 8uLL);
  swift_release();
  return swift_task_switch();
}

uint64_t sub_20A578D48()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v6[2];

  v1 = *(void **)(v0 + 144);
  swift_release();
  v6[0] = 0;
  v6[1] = 0xE000000000000000;
  sub_20A5B8E94();
  *(_QWORD *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 40) = 0xE000000000000000;
  sub_20A5B899C();
  *(_QWORD *)(v0 + 48) = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52D0);
  sub_20A5B8F9C();
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  LOBYTE(v6[0]) = 14;
  CoreODILogger.error(_:category:)(v2, v3, v6);
  swift_bridgeObjectRelease();

  v4 = *(_QWORD *)(v0 + 104);
  sub_20A5B8CF0();
  sub_20A5B87C8();
  sub_20A465AB4(v4, (uint64_t (*)(_QWORD))type metadata accessor for ODISignpost);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A578E80()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v6[2];

  swift_task_dealloc();
  v1 = *(void **)(v0 + 128);
  swift_release();
  v6[0] = 0;
  v6[1] = 0xE000000000000000;
  sub_20A5B8E94();
  *(_QWORD *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 40) = 0xE000000000000000;
  sub_20A5B899C();
  *(_QWORD *)(v0 + 48) = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52D0);
  sub_20A5B8F9C();
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  LOBYTE(v6[0]) = 14;
  CoreODILogger.error(_:category:)(v2, v3, v6);
  swift_bridgeObjectRelease();

  v4 = *(_QWORD *)(v0 + 104);
  sub_20A5B8CF0();
  sub_20A5B87C8();
  sub_20A465AB4(v4, (uint64_t (*)(_QWORD))type metadata accessor for ODISignpost);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A578FC0()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v2 = v0[2];
  v1 = v0[3];
  v0[21] = v2;
  v0[22] = v1;
  sub_20A45964C(v2, v1);
  v3 = (_QWORD *)swift_task_alloc();
  v0[23] = v3;
  *v3 = v0;
  v3[1] = sub_20A579034;
  v4 = v0[8];
  v3[15] = v1;
  v3[16] = v4;
  v3[14] = v2;
  return swift_task_switch();
}

uint64_t sub_20A579034()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 192) = v0;
  swift_task_dealloc();
  if (!v0)
    sub_20A44BD90(*(_QWORD *)(v2 + 168), *(_QWORD *)(v2 + 176));
  return swift_task_switch();
}

uint64_t sub_20A5790A0()
{
  uint64_t v0;
  uint64_t v1;

  sub_20A44BD90(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176));
  v1 = *(_QWORD *)(v0 + 104);
  sub_20A5B8CF0();
  sub_20A5B87C8();
  sub_20A465AB4(v1, (uint64_t (*)(_QWORD))type metadata accessor for ODISignpost);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A579128()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD v8[2];

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 176);
  sub_20A44BD90(v1, v2);
  sub_20A44BD90(v1, v2);
  v3 = *(void **)(v0 + 192);
  v8[0] = 0;
  v8[1] = 0xE000000000000000;
  sub_20A5B8E94();
  *(_QWORD *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 40) = 0xE000000000000000;
  sub_20A5B899C();
  *(_QWORD *)(v0 + 48) = v3;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52D0);
  sub_20A5B8F9C();
  v4 = *(_QWORD *)(v0 + 32);
  v5 = *(_QWORD *)(v0 + 40);
  LOBYTE(v8[0]) = 14;
  CoreODILogger.error(_:category:)(v4, v5, v8);
  swift_bridgeObjectRelease();

  v6 = *(_QWORD *)(v0 + 104);
  sub_20A5B8CF0();
  sub_20A5B87C8();
  sub_20A465AB4(v6, (uint64_t (*)(_QWORD))type metadata accessor for ODISignpost);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A579274(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *a1;
  v5 = a1[1];
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_20A5792E4;
  v6[15] = v5;
  v6[16] = a2;
  v6[14] = v4;
  return swift_task_switch();
}

uint64_t sub_20A5792E4()
{
  void *v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)

  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_20A579338(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
  return swift_task_switch();
}

uint64_t sub_20A579350()
{
  uint64_t v0;

  if (qword_2545F9958 != -1)
    swift_once();
  *(_QWORD *)(v0 + 40) = qword_2545F9CD8;
  return swift_task_switch();
}

uint64_t sub_20A5793B4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD *v4;

  v1 = v0[5];
  v2 = *(_QWORD *)(v1 + 184);
  v0[6] = v2;
  v3 = *(_QWORD *)(v1 + 192);
  v0[7] = v3;
  if (v3 >> 60 == 15)
  {
    sub_20A498124((unint64_t *)&qword_2545F9CF0, 255, (uint64_t (*)(uint64_t))type metadata accessor for DIPODNHelper, (uint64_t)&protocol conformance descriptor for DIPODNHelper);
    v4 = (_QWORD *)swift_task_alloc();
    v0[8] = v4;
    *v4 = v0;
    v4[1] = sub_20A5794B4;
    return sub_20A5B9200();
  }
  else
  {
    v0[10] = v2;
    v0[11] = v3;
    sub_20A459690(v2, v3);
    return swift_task_switch();
  }
}

uint64_t sub_20A5794B4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A579518()
{
  uint64_t v0;

  *(_OWORD *)*(_QWORD *)(v0 + 32) = *(_OWORD *)(v0 + 80);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A579530()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v1 = v0[5];
  v3 = v0[2];
  v2 = v0[3];
  v4 = *(_QWORD *)(v1 + 184);
  v5 = *(_QWORD *)(v1 + 192);
  *(_QWORD *)(v1 + 184) = v3;
  *(_QWORD *)(v1 + 192) = v2;
  sub_20A45964C(v3, v2);
  sub_20A44CFC4(v4, v5);
  v0[10] = v3;
  v0[11] = v2;
  sub_20A459690(v0[6], v0[7]);
  return swift_task_switch();
}

uint64_t sub_20A5795A0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A5795AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[7] = a6;
  v7[8] = a7;
  v7[5] = a4;
  v7[6] = a5;
  v7[9] = type metadata accessor for ODISignpost();
  v7[10] = swift_task_alloc();
  v7[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A57961C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  void *v5;
  int v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;

  if (qword_2545F9A30 != -1)
    swift_once();
  v1 = v0[10];
  v3 = qword_2546101B0;
  v2 = *(_QWORD *)algn_2546101B8;
  v4 = byte_2546101C0;
  v5 = (void *)qword_2546101C8;
  v6 = byte_2546101D0;
  *(_QWORD *)(v1 + 32) = "enableTelemetry=YES";
  *(_QWORD *)(v1 + 40) = 19;
  *(_BYTE *)(v1 + 48) = 2;
  *(_QWORD *)v1 = v3;
  *(_QWORD *)(v1 + 8) = v2;
  *(_BYTE *)(v1 + 16) = v4;
  *(_QWORD *)(v1 + 24) = v5;
  v7 = v5;
  sub_20A5B87D4();
  sub_20A5B8CFC();
  if (v6 == 1)
    sub_20A5B87BC();
  else
    sub_20A5B87C8();
  v8 = v0[10];
  v9 = v0[11];
  v10 = v0[5];

  sub_20A465A70(v8, v9, (uint64_t (*)(_QWORD))type metadata accessor for ODISignpost);
  swift_retain_n();
  if (v10 == -1)
  {
    if (qword_253EB4EB8 != -1)
      swift_once();
    v0[15] = qword_253EB4EB0;
    swift_retain();
    return swift_task_switch();
  }
  else
  {
    v12 = v0[5];
    v11 = v0[6];
    v13 = (_QWORD *)swift_task_alloc();
    v0[12] = v13;
    v13[2] = v12;
    v13[3] = &unk_2545FC2E0;
    v13[4] = v11;
    v13[5] = &unk_2545FC268;
    v13[6] = 0;
    v14 = (_QWORD *)swift_task_alloc();
    v0[13] = v14;
    *v14 = v0;
    v14[1] = sub_20A579878;
    return sub_20A5B9200();
  }
}

uint64_t sub_20A579878()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release_n();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_20A5798F4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v4;

  if ((*(_BYTE *)(v0[15] + 168) & 1) != 0)
  {
    v1 = (_QWORD *)swift_task_alloc();
    v0[17] = v1;
    *v1 = v0;
    v1[1] = sub_20A579A10;
    v2 = v0[6];
    v1[7] = v0[15];
    v1[8] = v2;
    return swift_task_switch();
  }
  else
  {
    v4 = (_QWORD *)swift_task_alloc();
    v0[16] = v4;
    *v4 = v0;
    v4[1] = sub_20A579994;
    return sub_20A4BBF60();
  }
}

uint64_t sub_20A579994()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v5;

  v1 = (_QWORD *)*v0;
  v5 = (_QWORD *)*v0;
  swift_task_dealloc();
  v2 = (_QWORD *)swift_task_alloc();
  v1[17] = v2;
  *v2 = v5;
  v2[1] = sub_20A579A10;
  v3 = v1[6];
  v2[7] = v1[15];
  v2[8] = v3;
  return swift_task_switch();
}

uint64_t sub_20A579A10()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_20A579A70()
{
  swift_release_n();
  return swift_task_switch();
}

uint64_t sub_20A579AB0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v6[2];

  v1 = *(void **)(v0 + 112);
  swift_task_dealloc();
  swift_release_n();
  v6[0] = 0;
  v6[1] = 0xE000000000000000;
  sub_20A5B8E94();
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0xE000000000000000;
  sub_20A5B899C();
  *(_QWORD *)(v0 + 32) = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52D0);
  sub_20A5B8F9C();
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  LOBYTE(v6[0]) = 14;
  CoreODILogger.error(_:category:)(v2, v3, v6);
  swift_bridgeObjectRelease();

  v4 = *(_QWORD *)(v0 + 88);
  sub_20A5B8CF0();
  sub_20A5B87C8();
  sub_20A465AB4(v4, (uint64_t (*)(_QWORD))type metadata accessor for ODISignpost);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A579C00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a2;
  return swift_task_switch();
}

uint64_t sub_20A579C18()
{
  uint64_t v0;

  if (qword_253EB4EB8 != -1)
    swift_once();
  *(_QWORD *)(v0 + 24) = qword_253EB4EB0;
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_20A579C88()
{
  int8x16_t *v0;
  uint64_t v1;
  _QWORD *v3;

  if ((*(_BYTE *)(v0[1].i64[1] + 168) & 1) != 0)
  {
    v1 = swift_task_alloc();
    v0[2].i64[1] = v1;
    *(_QWORD *)v1 = v0;
    *(_QWORD *)(v1 + 8) = sub_20A579DAC;
    *(int8x16_t *)(v1 + 56) = vextq_s8(v0[1], v0[1], 8uLL);
    return swift_task_switch();
  }
  else
  {
    v3 = (_QWORD *)swift_task_alloc();
    v0[2].i64[0] = (uint64_t)v3;
    *v3 = v0;
    v3[1] = sub_20A579D2C;
    return sub_20A4BBF60();
  }
}

uint64_t sub_20A579D2C()
{
  int8x16_t **v0;
  int8x16_t *v1;
  uint64_t v2;
  int8x16_t *v4;

  v1 = *v0;
  v4 = *v0;
  swift_task_dealloc();
  v2 = swift_task_alloc();
  v1[2].i64[1] = v2;
  *(_QWORD *)v2 = v4;
  *(_QWORD *)(v2 + 8) = sub_20A579DAC;
  *(int8x16_t *)(v2 + 56) = vextq_s8(v1[1], v1[1], 8uLL);
  return swift_task_switch();
}

uint64_t sub_20A579DAC()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_release();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_20A579E04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;

  v8[20] = a8;
  v8[21] = v10;
  v8[18] = a6;
  v8[19] = a7;
  v8[16] = a4;
  v8[17] = a5;
  v8[22] = type metadata accessor for ODISignpost();
  v8[23] = swift_task_alloc();
  v8[24] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20A579E7C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  void *v5;
  int v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v20;
  __int128 *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;

  v21 = (__int128 *)(v0 + 2);
  if (qword_2545F9A58 != -1)
    swift_once();
  v1 = v0[23];
  v2 = qword_254610278;
  v3 = unk_254610280;
  v4 = byte_254610288;
  v5 = (void *)qword_254610290;
  v6 = byte_254610298;
  *(_QWORD *)(v1 + 32) = "enableTelemetry=YES";
  *(_QWORD *)(v1 + 40) = 19;
  *(_BYTE *)(v1 + 48) = 2;
  *(_QWORD *)v1 = v2;
  *(_QWORD *)(v1 + 8) = v3;
  *(_BYTE *)(v1 + 16) = v4;
  *(_QWORD *)(v1 + 24) = v5;
  v7 = v5;
  sub_20A5B87D4();
  sub_20A5B8CFC();
  v22 = (uint64_t)(v0 + 7);
  if (v6 == 1)
    sub_20A5B87BC();
  else
    sub_20A5B87C8();
  v9 = v0[23];
  v8 = v0[24];
  v10 = v0[20];
  v11 = v0[21];
  v13 = v0[18];
  v12 = v0[19];

  sub_20A465A70(v9, v8, (uint64_t (*)(_QWORD))type metadata accessor for ODISignpost);
  v23 = 0;
  v24 = 0xE000000000000000;
  sub_20A5B8E94();
  sub_20A5B899C();
  MEMORY[0x20BD25B4C](v13, MEMORY[0x24BEE0D00]);
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  v0[14] = v12;
  sub_20A5B9170();
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  v14 = v23;
  LOBYTE(v23) = 14;
  CoreODILogger.info(_:category:)(v14, v24, &v23);
  swift_bridgeObjectRelease();
  sub_20A47BD60(v11, (uint64_t)v21);
  sub_20A47BD60((uint64_t)v21, v22);
  v15 = swift_allocObject();
  v0[25] = v15;
  *(_QWORD *)(v15 + 16) = v10;
  *(_QWORD *)(v15 + 24) = v13;
  sub_20A44CFD8(v21, v15 + 32);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  if (v12 == -1)
  {
    v20 = (_QWORD *)swift_task_alloc();
    v0[29] = v20;
    *v20 = v0;
    v20[1] = sub_20A57A2C0;
    return sub_20A56CE1C(v0[18], v22);
  }
  else
  {
    v16 = v0[19];
    v17 = (_QWORD *)swift_task_alloc();
    v0[26] = v17;
    v17[2] = v16;
    v17[3] = &unk_2545FC2F0;
    v17[4] = v15;
    v17[5] = &unk_2545FC268;
    v17[6] = 0;
    v18 = (_QWORD *)swift_task_alloc();
    v0[27] = v18;
    *v18 = v0;
    v18[1] = sub_20A57A220;
    return sub_20A5B9200();
  }
}

uint64_t sub_20A57A220()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 224) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    __swift_destroy_boxed_opaque_existential_1(v2 + 56);
  }
  return swift_task_switch();
}

uint64_t sub_20A57A2C0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 240) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20A57A324()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  return swift_task_switch();
}

uint64_t sub_20A57A38C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD v7[2];

  v1 = *(void **)(v0 + 240);
  v2 = *(_QWORD *)(v0 + 144);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  v7[0] = 0;
  v7[1] = 0xE000000000000000;
  sub_20A5B8E94();
  *(_QWORD *)(v0 + 96) = 0;
  *(_QWORD *)(v0 + 104) = 0xE000000000000000;
  sub_20A5B899C();
  MEMORY[0x20BD25B4C](v2, MEMORY[0x24BEE0D00]);
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  *(_QWORD *)(v0 + 120) = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52D0);
  sub_20A5B8F9C();
  v3 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 104);
  LOBYTE(v7[0]) = 14;
  CoreODILogger.error(_:category:)(v3, v4, v7);
  swift_bridgeObjectRelease();

  v5 = *(_QWORD *)(v0 + 192);
  sub_20A5B8CF0();
  sub_20A5B87C8();
  sub_20A465AB4(v5, (uint64_t (*)(_QWORD))type metadata accessor for ODISignpost);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A57A530()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD v7[2];

  swift_task_dealloc();
  v1 = *(void **)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 144);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  v7[0] = 0;
  v7[1] = 0xE000000000000000;
  sub_20A5B8E94();
  *(_QWORD *)(v0 + 96) = 0;
  *(_QWORD *)(v0 + 104) = 0xE000000000000000;
  sub_20A5B899C();
  MEMORY[0x20BD25B4C](v2, MEMORY[0x24BEE0D00]);
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  *(_QWORD *)(v0 + 120) = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52D0);
  sub_20A5B8F9C();
  v3 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 104);
  LOBYTE(v7[0]) = 14;
  CoreODILogger.error(_:category:)(v3, v4, v7);
  swift_bridgeObjectRelease();

  v5 = *(_QWORD *)(v0 + 192);
  sub_20A5B8CF0();
  sub_20A5B87C8();
  sub_20A465AB4(v5, (uint64_t (*)(_QWORD))type metadata accessor for ODISignpost);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A57A6DC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 192);
  sub_20A5B8CF0();
  sub_20A5B87C8();
  sub_20A465AB4(v1, (uint64_t (*)(_QWORD))type metadata accessor for ODISignpost);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A57A75C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v7;
  *v7 = v4;
  v7[1] = sub_20A4597C0;
  return sub_20A56CE1C(a3, a4);
}

uint64_t sub_20A57A7C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  if (a1)
  {
    swift_getObjectType();
    v4 = sub_20A5B8AF8();
    v6 = v5;
  }
  else
  {
    v4 = 0;
    v6 = 0;
  }
  v3[10] = v4;
  v3[11] = v6;
  return swift_task_switch();
}

uint64_t sub_20A57A834()
{
  uint64_t v0;
  int isPlatformVersionAtLeast;
  _QWORD *v3;

  *(_QWORD *)(v0 + 96) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253EB52D0);
  if ((sub_20A5B8BC4() & 1) != 0)
    return (*(uint64_t (**)(void))(v0 + 8))();
  isPlatformVersionAtLeast = __isPlatformVersionAtLeast(2, 18, 0, 0);
  *(_DWORD *)(v0 + 128) = isPlatformVersionAtLeast;
  *(_QWORD *)(v0 + 104) = 0;
  if (!isPlatformVersionAtLeast)
    return swift_taskGroup_wait_next_throwing();
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FC2F8);
  *v3 = v0;
  v3[1] = sub_20A57A94C;
  return sub_20A5B8BB8();
}

uint64_t sub_20A57A94C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    *(_QWORD *)(v2 + 120) = v0;
  else
    *(_BYTE *)(v2 + 134) = *(_BYTE *)(v2 + 132);
  return swift_task_switch();
}

uint64_t sub_20A57A9B8()
{
  uint64_t v0;
  uint64_t v1;

  if (v0)
    *(_QWORD *)(v1 + 120) = v0;
  else
    *(_BYTE *)(v1 + 135) = *(_BYTE *)(v1 + 133);
  return swift_task_switch();
}

uint64_t sub_20A57A9E8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v3;

  if ((*(_BYTE *)(v0 + 134) & 1) == 0)
    goto LABEL_7;
  v1 = *(_QWORD *)(v0 + 104);
  if ((sub_20A5B8BC4() & 1) == 0)
  {
    *(_QWORD *)(v0 + 104) = v1;
LABEL_7:
    if (!*(_DWORD *)(v0 + 128))
      return swift_taskGroup_wait_next_throwing();
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 112) = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545FC2F8);
    *v3 = v0;
    v3[1] = sub_20A57A94C;
    return sub_20A5B8BB8();
  }
  if (v1)
    swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A57AAE8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v3;

  if ((*(_BYTE *)(v0 + 135) & 1) == 0)
    goto LABEL_7;
  v1 = *(_QWORD *)(v0 + 104);
  if ((sub_20A5B8BC4() & 1) == 0)
  {
    *(_QWORD *)(v0 + 104) = v1;
LABEL_7:
    if (!*(_DWORD *)(v0 + 128))
      return swift_taskGroup_wait_next_throwing();
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 112) = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2545FC2F8);
    *v3 = v0;
    v3[1] = sub_20A57A94C;
    return sub_20A5B8BB8();
  }
  if (v1)
    swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20A57ABE8()
{
  uint64_t v0;
  void *v1;
  _QWORD *v3;

  v1 = *(void **)(v0 + 120);
  if (*(_QWORD *)(v0 + 104))
  {

    v1 = *(void **)(v0 + 104);
  }
  if ((sub_20A5B8BC4() & 1) != 0)
  {
    if (v1)
      swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_QWORD *)(v0 + 104) = v1;
    if (*(_DWORD *)(v0 + 128))
    {
      v3 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 112) = v3;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2545FC2F8);
      *v3 = v0;
      v3[1] = sub_20A57A94C;
      return sub_20A5B8BB8();
    }
    else
    {
      return swift_taskGroup_wait_next_throwing();
    }
  }
}

void sub_20A57ACF8()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 1130) = 1;
}

uint64_t sub_20A57AD04(_BYTE *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;

  LOBYTE(v9) = *a1;
  v3 = BindingsKeys.rawValue.getter();
  if (!*(_QWORD *)(a2 + 16) || (v5 = sub_20A47094C(v3, v4), (v6 & 1) == 0))
  {
    v11 = 0;
    v9 = 0u;
    v10 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_20A47BD60(*(_QWORD *)(a2 + 56) + 40 * v5, (uint64_t)&v9);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v10 + 1))
  {
LABEL_9:
    sub_20A44CE2C((uint64_t)&v9, &qword_2545FA208);
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_253EB47D0);
  if (swift_dynamicCast())
    return v8;
  else
    return 0;
}

uint64_t ArmandDataFiller.deinit()
{
  uint64_t v0;
  _BYTE v2[1024];

  memcpy(v2, (const void *)(v0 + 112), 0x3F9uLL);
  sub_20A47D1B0((uint64_t)v2);
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 1160);
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t ArmandDataFiller.__deallocating_deinit()
{
  uint64_t v0;
  _BYTE v2[1024];

  memcpy(v2, (const void *)(v0 + 112), 0x3F9uLL);
  sub_20A47D1B0((uint64_t)v2);
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 1160);
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t ArmandDataFiller.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

unint64_t sub_20A57AED0(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_20A5B8DBC();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_20A5B929C();
        swift_bridgeObjectRetain();
        sub_20A5B8978();
        v9 = sub_20A5B92CC();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_OWORD *)(v14 + 16 * v3);
          v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_20A57B0A4(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  const void *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_20A5B8DBC();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_20A5B929C();
        swift_bridgeObjectRetain();
        sub_20A5B8978();
        v9 = sub_20A5B92CC();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          result = v14 + 288 * v3;
          v15 = (const void *)(v14 + 288 * v6);
          if (v3 != v6 || (v3 = v6, result >= (unint64_t)v15 + 288))
          {
            result = (unint64_t)memmove((void *)result, v15, 0x120uLL);
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v17 = *v16;
    v18 = (-1 << v3) - 1;
  }
  else
  {
    v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    v18 = *v16;
    v17 = (-1 << result) - 1;
  }
  *v16 = v18 & v17;
  v19 = *(_QWORD *)(a2 + 16);
  v20 = __OFSUB__(v19, 1);
  v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v21;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_20A57B284(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  int64_t v20;
  unint64_t v21;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[1027];
  _BYTE __dst[1040];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_20A5B8DBC();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      while (1)
      {
        v9 = 1032 * v6;
        v10 = (const void *)(*(_QWORD *)(a2 + 48) + 1032 * v6);
        memcpy(__dst, v10, 0x403uLL);
        memcpy(v30, v10, sizeof(v30));
        sub_20A5B929C();
        sub_20A47BDA4((uint64_t)__dst);
        sub_20A48B9BC((uint64_t)&v29, v11);
        v12 = sub_20A5B92CC();
        result = sub_20A47CDDC((uint64_t)__dst);
        v13 = v12 & v7;
        if (v3 >= (uint64_t)v8)
          break;
        if (v13 < v8)
          goto LABEL_11;
LABEL_12:
        v14 = *(_QWORD *)(a2 + 48);
        v15 = (char *)(v14 + 1032 * v3);
        v16 = (char *)(v14 + v9);
        if (1032 * v3 < v9 || v15 >= v16 + 1032 || v3 != v6)
          memmove(v15, v16, 0x408uLL);
        v17 = *(_QWORD *)(a2 + 56);
        v18 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2545FA0B8) - 8) + 72);
        v19 = v18 * v3;
        result = v17 + v18 * v3;
        v20 = v18 * v6;
        v21 = v17 + v18 * v6 + v18;
        if (v19 < v20 || result >= v21)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v19 == v20)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          goto LABEL_22;
      }
      if (v13 < v8)
        goto LABEL_6;
LABEL_11:
      if (v3 < (uint64_t)v13)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_22:
    v23 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v24 = *v23;
    v25 = (-1 << v3) - 1;
  }
  else
  {
    v23 = (uint64_t *)(v4 + 8 * (result >> 6));
    v25 = *v23;
    v24 = (-1 << result) - 1;
  }
  *v23 = v25 & v24;
  v26 = *(_QWORD *)(a2 + 16);
  v27 = __OFSUB__(v26, 1);
  v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v28;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_20A57B4C8(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  int64_t v17;
  unint64_t v18;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_20A5B8DBC();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      while (1)
      {
        sub_20A5B929C();
        swift_bridgeObjectRetain();
        sub_20A5B8978();
        v9 = sub_20A5B92CC();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
          break;
        if (v10 < v8)
          goto LABEL_11;
LABEL_12:
        v11 = *(_QWORD *)(a2 + 48);
        v12 = (_OWORD *)(v11 + 16 * v3);
        v13 = (_OWORD *)(v11 + 16 * v6);
        if (v3 != v6 || v12 >= v13 + 1)
          *v12 = *v13;
        v14 = *(_QWORD *)(a2 + 56);
        v15 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for ODIKnownBinding() - 8) + 72);
        v16 = v15 * v3;
        result = v14 + v15 * v3;
        v17 = v15 * v6;
        v18 = v14 + v15 * v6 + v15;
        if (v16 < v17 || result >= v18)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v16 == v17)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          goto LABEL_21;
      }
      if (v10 < v8)
        goto LABEL_6;
LABEL_11:
      if (v3 < (uint64_t)v10)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v21 = *v20;
    v22 = (-1 << v3) - 1;
  }
  else
  {
    v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    v22 = *v20;
    v21 = (-1 << result) - 1;
  }
  *v20 = v22 & v21;
  v23 = *(_QWORD *)(a2 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_20A57B6C4(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  unint64_t v17;
  __int128 *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_20A5B8DBC();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_20A5B929C();
        swift_bridgeObjectRetain();
        sub_20A5B8978();
        v11 = sub_20A5B92CC();
        result = swift_bridgeObjectRelease();
        v12 = v11 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 < v8)
            goto LABEL_5;
        }
        else if (v12 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_11:
          v13 = *(_QWORD *)(a2 + 48);
          v14 = (_OWORD *)(v13 + 16 * v3);
          v15 = (_OWORD *)(v13 + 16 * v6);
          if (v3 != v6 || v14 >= v15 + 1)
            *v14 = *v15;
          v16 = *(_QWORD *)(a2 + 56);
          v17 = v16 + 40 * v3;
          v18 = (__int128 *)(v16 + 40 * v6);
          if (v3 != v6 || (v3 = v6, v17 >= (unint64_t)v18 + 40))
          {
            v9 = *v18;
            v10 = v18[1];
            *(_QWORD *)(v17 + 32) = *((_QWORD *)v18 + 4);
            *(_OWORD *)v17 = v9;
            *(_OWORD *)(v17 + 16) = v10;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v20 = *v19;
    v21 = (-1 << v3) - 1;
  }
  else
  {
    v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    v21 = *v19;
    v20 = (-1 << result) - 1;
  }
  *v19 = v21 & v20;
  v22 = *(_QWORD *)(a2 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_20A57B8AC(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_20A5B8DBC();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_20A5B929C();
        sub_20A5B92A8();
        result = sub_20A5B92CC();
        v9 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v9 < v8)
            goto LABEL_5;
        }
        else if (v9 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v9)
        {
LABEL_11:
          v10 = *(_QWORD *)(a2 + 48);
          v11 = (_BYTE *)(v10 + v3);
          v12 = (_BYTE *)(v10 + v6);
          if (v3 != v6 || v11 >= v12 + 1)
            *v11 = *v12;
          v13 = *(_QWORD *)(a2 + 56);
          v14 = (_OWORD *)(v13 + 16 * v3);
          v15 = (_OWORD *)(v13 + 16 * v6);
          if (v3 != v6 || (v3 = v6, v14 >= v15 + 1))
          {
            *v14 = *v15;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v17 = *v16;
    v18 = (-1 << v3) - 1;
  }
  else
  {
    v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    v18 = *v16;
    v17 = (-1 << result) - 1;
  }
  *v16 = v18 & v17;
  v19 = *(_QWORD *)(a2 + 16);
  v20 = __OFSUB__(v19, 1);
  v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v21;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_20A57BA64(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_20A5B8DBC();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = sub_20A5B9290();
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            v14 = (_QWORD *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1)
              *v14 = *v10;
            v15 = *(_QWORD *)(a2 + 56);
            v16 = (_QWORD *)(v15 + 8 * v3);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v3 != v6 || (v3 = v6, v16 >= v17 + 1))
            {
              *v16 = *v17;
              v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_20A57BBF8(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  const void *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_20A5B8DBC();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_20A5B929C();
        sub_20A5B92A8();
        result = sub_20A5B92CC();
        v9 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v9 < v8)
            goto LABEL_5;
        }
        else if (v9 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v9)
        {
LABEL_11:
          v10 = *(_QWORD *)(a2 + 48);
          v11 = (_BYTE *)(v10 + v3);
          v12 = (_BYTE *)(v10 + v6);
          if (v3 != v6 || v11 >= v12 + 1)
            *v11 = *v12;
          v13 = *(_QWORD *)(a2 + 56);
          result = v13 + 112 * v3;
          v14 = (const void *)(v13 + 112 * v6);
          if (v3 != v6 || (v3 = v6, result >= (unint64_t)v14 + 112))
          {
            result = (unint64_t)memmove((void *)result, v14, 0x70uLL);
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v15 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v16 = *v15;
    v17 = (-1 << v3) - 1;
  }
  else
  {
    v15 = (uint64_t *)(v4 + 8 * (result >> 6));
    v17 = *v15;
    v16 = (-1 << result) - 1;
  }
  *v15 = v17 & v16;
  v18 = *(_QWORD *)(a2 + 16);
  v19 = __OFSUB__(v18, 1);
  v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v20;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

_QWORD *sub_20A57BDBC(unint64_t a1)
{
  return sub_20A57BF2C(a1, (void (*)(_QWORD *, uint64_t, unint64_t))sub_20A57D38C);
}

uint64_t sub_20A57BDC8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  int64_t v5;
  _QWORD *v8;
  size_t v9;
  void *v10;
  uint64_t result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5)
      return MEMORY[0x24BEE4AF8];
    if (v5 <= 0)
    {
      v8 = (_QWORD *)MEMORY[0x24BEE4AF8];
      if (v4 != a3)
      {
LABEL_5:
        if (v5 < 0)
          goto LABEL_17;
        v10 = v8 + 4;
        if (a2 + a3 < (unint64_t)v8 + v5 + 32 && (unint64_t)v10 < a2 + a3 + v5)
          goto LABEL_17;
        memcpy(v10, (const void *)(a2 + a3), v5);
        return (uint64_t)v8;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_253EB52B8);
      v8 = (_QWORD *)swift_allocObject();
      v9 = _swift_stdlib_malloc_size(v8);
      v8[2] = v5;
      v8[3] = 2 * v9 - 64;
      if (v4 != a3)
        goto LABEL_5;
    }
    __break(1u);
  }
  __break(1u);
LABEL_17:
  result = sub_20A5B8FFC();
  __break(1u);
  return result;
}

_QWORD *sub_20A57BF20(unint64_t a1)
{
  return sub_20A57BF2C(a1, (void (*)(_QWORD *, uint64_t, unint64_t))sub_20A57D5A8);
}

_QWORD *sub_20A57BF2C(unint64_t a1, void (*a2)(_QWORD *, uint64_t, unint64_t))
{
  uint64_t v4;
  _QWORD *v5;
  int64_t v6;
  uint64_t v7;
  void (*v8)(_QWORD *, uint64_t, unint64_t);

  if (a1 >> 62)
    goto LABEL_10;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    if (v4 <= 0)
    {
      v5 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_253EB6290);
      v5 = (_QWORD *)swift_allocObject();
      v6 = _swift_stdlib_malloc_size(v5);
      v7 = v6 - 32;
      if (v6 < 32)
        v7 = v6 - 25;
      v5[2] = v4;
      v5[3] = (2 * (v7 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    a2(v5 + 4, v4, a1);
    a2 = v8;
    swift_bridgeObjectRelease();
    if (a2 == (void (*)(_QWORD *, uint64_t, unint64_t))v4)
      break;
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    v4 = sub_20A5B8FCC();
    swift_bridgeObjectRelease();
    if (!v4)
      return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v5;
}

uint64_t sub_20A57C02C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t result;
  uint64_t v8;

  if ((a1 & 0xC000000000000001) != 0)
  {
    v2 = sub_20A5B8DE0();
    if (v2)
      goto LABEL_3;
    return MEMORY[0x24BEE4AF8];
  }
  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return MEMORY[0x24BEE4AF8];
LABEL_3:
  if (v2 <= 0)
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_253EB6290);
    v3 = (_QWORD *)swift_allocObject();
    v4 = _swift_stdlib_malloc_size(v3);
    v5 = v4 - 32;
    if (v4 < 32)
      v5 = v4 - 25;
    v3[2] = v2;
    v3[3] = (2 * (v5 >> 3)) | 1;
  }
  swift_bridgeObjectRetain();
  v6 = sub_20A57E8A8(&v8, v3 + 4, v2, a1);
  result = sub_20A498A68();
  if (v6 == (_QWORD *)v2)
    return (uint64_t)v3;
  __break(1u);
  return result;
}

uint64_t sub_20A57C124(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  size_t v5;
  _QWORD *v6;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v4 = swift_allocObject();
  v5 = _swift_stdlib_malloc_size((const void *)v4);
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = 2 * v5 - 64;
  v6 = sub_20A57EBB0(&v8, (_BYTE *)(v4 + 32), v2, a1);
  swift_bridgeObjectRetain();
  sub_20A498A68();
  if (v6 != (_QWORD *)v2)
  {
    __break(1u);
    return MEMORY[0x24BEE4AF8];
  }
  return v4;
}

uint64_t sub_20A57C1F4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_20A5B929C();
  swift_bridgeObjectRetain();
  sub_20A5B8978();
  v8 = sub_20A5B92CC();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_20A5B91AC() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_20A5B91AC() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_20A57C788(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_20A57C3A0(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  char isUniquelyReferenced_nonNull_native;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_20A5B8DEC();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_20A459574(0, &qword_2545F9D58);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v26;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_20A5B8DE0();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_20A5106D0(v7, result + 1);
    v27 = v21;
    if (*(_QWORD *)(v21 + 24) <= *(_QWORD *)(v21 + 16))
    {
      v25 = v8;
      sub_20A510BA0();
      v22 = v27;
    }
    else
    {
      v22 = v21;
      v23 = v8;
    }
    sub_20A5110F8((uint64_t)v8, v22);
    *v3 = v22;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_20A5B8D08();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      sub_20A459574(0, &qword_2545F9D58);
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_20A5B8D14();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_20A5B8D14();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v28 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_20A57C920((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *v2 = v28;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_20A57C63C(_BYTE *a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t *a5, uint64_t (*a6)(uint64_t))
{
  uint64_t *v6;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v13 = *v6;
  sub_20A5B929C();
  sub_20A5B92A8();
  v14 = sub_20A5B92CC();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  v16 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v21 = *v6;
    *v6 = 0x8000000000000000;
    sub_20A57CAA4(a2, v16, isUniquelyReferenced_nonNull_native, a3, a4, a5, a6);
    *v6 = v21;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v17 = *(_QWORD *)(v13 + 48);
  if (*(unsigned __int8 *)(v17 + v16) != a2)
  {
    v18 = ~v15;
    do
    {
      v16 = (v16 + 1) & v18;
      if (((*(_QWORD *)(v13 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
        goto LABEL_7;
    }
    while (*(unsigned __int8 *)(v17 + v16) != a2);
  }
  result = 0;
  LOBYTE(a2) = *(_BYTE *)(*(_QWORD *)(*v6 + 48) + v16);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_20A57C788(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_20A5108C4();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_20A511178();
      goto LABEL_22;
    }
    sub_20A57CBF4();
  }
  v11 = *v4;
  sub_20A5B929C();
  sub_20A5B8978();
  result = sub_20A5B92CC();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_20A5B91AC(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_20A5B920C();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_20A5B91AC();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

void sub_20A57C920(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_20A510BA0();
  }
  else
  {
    if (v7 > v6)
    {
      sub_20A511328();
      goto LABEL_14;
    }
    sub_20A57CEA0();
  }
  v8 = *v3;
  v9 = sub_20A5B8D08();
  v10 = -1 << *(_BYTE *)(v8 + 32);
  a2 = v9 & ~v10;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    sub_20A459574(0, &qword_2545F9D58);
    v11 = *(id *)(*(_QWORD *)(v8 + 48) + 8 * a2);
    v12 = sub_20A5B8D14();

    if ((v12 & 1) != 0)
    {
LABEL_13:
      sub_20A5B920C();
      __break(1u);
    }
    else
    {
      v13 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v14 = *(id *)(*(_QWORD *)(v8 + 48) + 8 * a2);
        v15 = sub_20A5B8D14();

        if ((v15 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v16 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v16 + 48) + 8 * a2) = a1;
  v17 = *(_QWORD *)(v16 + 16);
  v18 = __OFADD__(v17, 1);
  v19 = v17 + 1;
  if (v18)
    __break(1u);
  else
    *(_QWORD *)(v16 + 16) = v19;
}

uint64_t sub_20A57CAA4(uint64_t result, unint64_t a2, char a3, void (*a4)(uint64_t), uint64_t a5, uint64_t *a6, uint64_t (*a7)(uint64_t))
{
  uint64_t *v7;
  int v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v9 = result;
  v10 = *(_QWORD *)(*v7 + 16);
  v11 = *(_QWORD *)(*v7 + 24);
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_14;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    a4(v12);
  }
  else
  {
    if (v11 > v10)
    {
      result = a7(v12);
      goto LABEL_14;
    }
    sub_20A57D118(v12, a6);
  }
  v13 = *v7;
  sub_20A5B929C();
  sub_20A5B92A8();
  result = sub_20A5B92CC();
  v14 = -1 << *(_BYTE *)(v13 + 32);
  a2 = result & ~v14;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v15 = *(_QWORD *)(v13 + 48);
    if (*(unsigned __int8 *)(v15 + a2) == v9)
    {
LABEL_13:
      result = sub_20A5B920C();
      __break(1u);
    }
    else
    {
      v16 = ~v14;
      while (1)
      {
        a2 = (a2 + 1) & v16;
        if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(unsigned __int8 *)(v15 + a2) == v9)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v17 = *v7;
  *(_QWORD *)(*v7 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v17 + 48) + a2) = v9;
  v18 = *(_QWORD *)(v17 + 16);
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (v19)
    __break(1u);
  else
    *(_QWORD *)(v17 + 16) = v20;
  return result;
}

uint64_t sub_20A57CBF4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB4C0);
  v3 = sub_20A5B8E4C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_20A5B929C();
    swift_bridgeObjectRetain();
    sub_20A5B8978();
    result = sub_20A5B92CC();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_20A57CEA0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t *v27;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2545FB4B8);
  v3 = sub_20A5B8E4C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v27 = v0;
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v9 = (unint64_t)(v5 + 63) >> 6;
  v10 = v3 + 56;
  result = swift_retain();
  v12 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      v12 = v16 + 1;
      if (v16 + 1 >= v9)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v12);
      if (!v17)
      {
        v12 = v16 + 2;
        if (v16 + 2 >= v9)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v12);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    v19 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    result = sub_20A5B8D08();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v13) = v19;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v27;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v9)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v12);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_20A57D118(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;

  v3 = v2;
  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  result = sub_20A5B8E4C();
  v6 = result;
  if (!*(_QWORD *)(v4 + 16))
  {
    result = swift_release();
LABEL_35:
    *v3 = v6;
    return result;
  }
  v7 = 0;
  v8 = v4 + 56;
  v9 = 1 << *(_BYTE *)(v4 + 32);
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v4 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = result + 56;
  while (1)
  {
    if (v11)
    {
      v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v16 = v15 | (v7 << 6);
      goto LABEL_24;
    }
    v17 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v17 >= v12)
      goto LABEL_33;
    v18 = *(_QWORD *)(v8 + 8 * v17);
    ++v7;
    if (!v18)
    {
      v7 = v17 + 1;
      if (v17 + 1 >= v12)
        goto LABEL_33;
      v18 = *(_QWORD *)(v8 + 8 * v7);
      if (!v18)
      {
        v7 = v17 + 2;
        if (v17 + 2 >= v12)
          goto LABEL_33;
        v18 = *(_QWORD *)(v8 + 8 * v7);
        if (!v18)
          break;
      }
    }
LABEL_23:
    v11 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v7 << 6);
LABEL_24:
    v20 = *(_BYTE *)(*(_QWORD *)(v4 + 48) + v16);
    sub_20A5B929C();
    sub_20A5B92A8();
    result = sub_20A5B92CC();
    v21 = -1 << *(_BYTE *)(v6 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v13 + 8 * (v22 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v13 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v26 = v23 == v25;
        if (v23 == v25)
          v23 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v13 + 8 * v23);
      }
      while (v27 == -1);
      v14 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_BYTE *)(*(_QWORD *)(v6 + 48) + v14) = v20;
    ++*(_QWORD *)(v6 + 16);
  }
  v19 = v17 + 3;
  if (v19 >= v12)
  {
LABEL_33:
    result = swift_release();
    v3 = v2;
    goto LABEL_35;
  }
  v18 = *(_QWORD *)(v8 + 8 * v19);
  if (v18)
  {
    v7 = v19;
    goto LABEL_23;
  }
  while (1)
  {
    v7 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v7 >= v12)
      goto LABEL_33;
    v18 = *(_QWORD *)(v8 + 8 * v7);
    ++v19;
    if (v18)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_20A57D38C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  void (*v16[4])(id *);

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_20A5B8FCC();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_20A5B8FCC();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_20A44D20C(&qword_2545FC160, &qword_2545FC158, MEMORY[0x24BEE12E0]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_2545FC158);
          v12 = sub_20A4C0970(v16, i, a3);
          v14 = *v13;
          ((void (*)(void (**)(id *), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_20A459574(0, &qword_253EB51D0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_20A5B8FFC();
  __break(1u);
  return result;
}

uint64_t sub_20A57D5A8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  uint64_t *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_20A5B8FCC();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_20A5B8FCC();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_20A44D20C(&qword_2545FC170, &qword_2545FC168, MEMORY[0x24BEE12E0]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_2545FC168);
          v12 = sub_20A4C09C8(v16, i, a3);
          v14 = *v13;
          swift_retain();
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for ODNRequestTask();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_20A5B8FFC();
  __break(1u);
  return result;
}

uint64_t sub_20A57D7B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  int64_t v34;
  unint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  char v48;
  char v49;
  uint64_t v50;
  int64_t v51;
  uint64_t v52;
  int64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t *v57;
  int64_t v58;
  _BOOL4 v59;

  v4 = type metadata accessor for ODIKnownBinding();
  v5 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x24BDAC7A8](v4, v6);
  v56 = (uint64_t)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v50 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FC0C8);
  v14 = MEMORY[0x24BDAC7A8](v12, v13);
  v16 = (uint64_t *)((char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = MEMORY[0x24BDAC7A8](v14, v17);
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v57 = (uint64_t *)((char *)&v50 - v19);
  v58 = 0;
  v54 = a1;
  v55 = v11;
  v20 = *(_QWORD *)(a1 + 64);
  v52 = a1 + 64;
  v21 = 1 << *(_BYTE *)(a1 + 32);
  v22 = -1;
  if (v21 < 64)
    v22 = ~(-1 << v21);
  v23 = v22 & v20;
  v53 = (unint64_t)(v21 + 63) >> 6;
  v51 = v53 - 1;
  v24 = &qword_2545FC0D0;
  v25 = (uint64_t)v11;
  while (1)
  {
    if (v23)
    {
      v26 = __clz(__rbit64(v23));
      v23 &= v23 - 1;
      v27 = v26 | (v58 << 6);
LABEL_8:
      v28 = *(_QWORD *)(v54 + 56);
      v29 = (_QWORD *)(*(_QWORD *)(v54 + 48) + 16 * v27);
      v30 = v29[1];
      *v16 = *v29;
      v16[1] = v30;
      v31 = v28 + *(_QWORD *)(v5 + 72) * v27;
      v32 = __swift_instantiateConcreteTypeFromMangledName(v24);
      sub_20A4797C4(v31, (uint64_t)v16 + *(int *)(v32 + 48));
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v16, 0, 1, v32);
      swift_bridgeObjectRetain();
      v33 = v57;
      goto LABEL_27;
    }
    v34 = v58 + 1;
    if (__OFADD__(v58, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    v33 = v57;
    if (v34 < v53)
    {
      v35 = *(_QWORD *)(v52 + 8 * v34);
      if (v35)
        goto LABEL_12;
      v36 = v58 + 2;
      ++v58;
      if (v34 + 1 < v53)
      {
        v35 = *(_QWORD *)(v52 + 8 * v36);
        if (v35)
          goto LABEL_15;
        v58 = v34 + 1;
        if (v34 + 2 < v53)
        {
          v35 = *(_QWORD *)(v52 + 8 * (v34 + 2));
          if (v35)
          {
            v34 += 2;
            goto LABEL_12;
          }
          v36 = v34 + 3;
          v58 = v34 + 2;
          if (v34 + 3 < v53)
            break;
        }
      }
    }
LABEL_26:
    v37 = __swift_instantiateConcreteTypeFromMangledName(v24);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v16, 1, 1, v37);
    v23 = 0;
LABEL_27:
    sub_20A459C88((uint64_t)v16, (uint64_t)v33, &qword_2545FC0C8);
    v38 = __swift_instantiateConcreteTypeFromMangledName(v24);
    v39 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 48))(v33, 1, v38);
    v59 = v39 == 1;
    if (v39 == 1)
      return v59;
    v40 = v24;
    v41 = (uint64_t)v33 + *(int *)(v38 + 48);
    v42 = v33;
    v43 = *v33;
    v44 = v42[1];
    sub_20A465A70(v41, v25, (uint64_t (*)(_QWORD))type metadata accessor for ODIKnownBinding);
    v45 = sub_20A47094C(v43, v44);
    LOBYTE(v43) = v46;
    swift_bridgeObjectRelease();
    if ((v43 & 1) == 0)
    {
      sub_20A465AB4(v25, (uint64_t (*)(_QWORD))type metadata accessor for ODIKnownBinding);
      return 0;
    }
    v47 = v56;
    sub_20A4797C4(*(_QWORD *)(a2 + 56) + *(_QWORD *)(v5 + 72) * v45, v56);
    sub_20A582408(v47, v25);
    v49 = v48;
    sub_20A465AB4(v47, (uint64_t (*)(_QWORD))type metadata accessor for ODIKnownBinding);
    result = sub_20A465AB4(v25, (uint64_t (*)(_QWORD))type metadata accessor for ODIKnownBinding);
    v24 = v40;
    if ((v49 & 1) == 0)
      return v59;
  }
  v35 = *(_QWORD *)(v52 + 8 * v36);
  if (v35)
  {
LABEL_15:
    v34 = v36;
LABEL_12:
    v23 = (v35 - 1) & v35;
    v27 = __clz(__rbit64(v35)) + (v34 << 6);
    v58 = v34;
    goto LABEL_8;
  }
  while (1)
  {
    v34 = v36 + 1;
    if (__OFADD__(v36, 1))
      break;
    if (v34 >= v53)
    {
      v58 = v51;
      goto LABEL_26;
    }
    v35 = *(_QWORD *)(v52 + 8 * v34);
    ++v36;
    if (v35)
      goto LABEL_12;
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_20A57DBAC(__int128 *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  char *v40;
  uint64_t v42;
  int64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int64_t v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;

  v4 = sub_20A5B8630();
  v45 = *(_QWORD *)(v4 - 8);
  v46 = v4;
  MEMORY[0x24BDAC7A8](v4, v5);
  v44 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = type metadata accessor for ODIKnownBinding();
  v49 = *(_QWORD *)(v51 - 8);
  v8 = MEMORY[0x24BDAC7A8](v51, v7);
  v53 = (uint64_t)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v42 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FC0C8);
  v15 = MEMORY[0x24BDAC7A8](v13, v14);
  v17 = (uint64_t *)((char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v15, v18);
  v20 = (char *)&v42 - v19;
  v21 = *(_QWORD *)(a2 + 64);
  v47 = a2 + 64;
  v22 = 1 << *(_BYTE *)(a2 + 32);
  v23 = -1;
  if (v22 < 64)
    v23 = ~(-1 << v22);
  v24 = v23 & v21;
  v48 = (unint64_t)(v22 + 63) >> 6;
  v43 = v48 - 1;
  v50 = a2;
  swift_bridgeObjectRetain();
  v52 = 0;
  if (v24)
  {
    v25 = __clz(__rbit64(v24)) | (v52 << 6);
LABEL_5:
    v26 = (uint64_t *)(*(_QWORD *)(v50 + 48) + 16 * v25);
    v28 = *v26;
    v27 = v26[1];
    v29 = *(_QWORD *)(v50 + 56) + *(_QWORD *)(v49 + 72) * v25;
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FC0D0);
    sub_20A4797C4(v29, (uint64_t)v17 + *(int *)(v30 + 48));
    *v17 = v28;
    v17[1] = v27;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v17, 0, 1, v30);
    swift_bridgeObjectRetain();
    goto LABEL_22;
  }
  v31 = v52 + 1;
  if (__OFADD__(v52, 1))
  {
    __break(1u);
LABEL_26:
    __break(1u);
    JUMPOUT(0x20A57E0C8);
  }
  if (v31 < v48)
  {
    v32 = *(_QWORD *)(v47 + 8 * v31);
    if (v32)
    {
LABEL_9:
      v25 = __clz(__rbit64(v32)) + (v31 << 6);
      v52 = v31;
      goto LABEL_5;
    }
    v33 = v52 + 2;
    ++v52;
    if (v31 + 1 < v48)
    {
      v32 = *(_QWORD *)(v47 + 8 * v33);
      if (v32)
      {
        ++v31;
        goto LABEL_9;
      }
      v34 = v31 + 2;
      v52 = v31 + 1;
      if (v31 + 2 < v48)
      {
        v32 = *(_QWORD *)(v47 + 8 * v34);
        if (v32)
        {
          v31 += 2;
          goto LABEL_9;
        }
        while (1)
        {
          v31 = v34 + 1;
          if (__OFADD__(v34, 1))
            goto LABEL_26;
          if (v31 >= v48)
            break;
          v32 = *(_QWORD *)(v47 + 8 * v31);
          ++v34;
          if (v32)
            goto LABEL_9;
        }
        v52 = v43;
      }
    }
  }
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FC0D0);
  (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v17, 1, 1, v35);
LABEL_22:
  sub_20A459C88((uint64_t)v17, (uint64_t)v20, &qword_2545FC0C8);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FC0D0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 48))(v20, 1, v36) != 1)
  {
    sub_20A465A70((uint64_t)&v20[*(int *)(v36 + 48)], (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for ODIKnownBinding);
    v37 = *((_QWORD *)a1 + 8);
    v38 = a1[1];
    v54 = *a1;
    v55 = v38;
    v39 = a1[3];
    v56 = a1[2];
    v57 = v39;
    v58 = v37;
    sub_20A5B8978();
    swift_bridgeObjectRelease();
    sub_20A4797C4((uint64_t)v12, v53);
    v40 = (char *)&loc_20A57DF6C + *((int *)qword_20A57E0C8 + swift_getEnumCaseMultiPayload());
    __asm { BR              X9 }
  }
  swift_release();
  return sub_20A5B92A8();
}

uint64_t sub_20A57E0E0(__int128 *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  int64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  _OWORD v29[2];
  uint64_t v30;
  _QWORD v31[2];
  __int128 v32;
  __int128 v33;
  uint64_t v34;

  v22 = a2 + 64;
  v4 = 1 << *(_BYTE *)(a2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a2 + 64);
  v23 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  v9 = 0;
  if (!v6)
    goto LABEL_6;
LABEL_4:
  v10 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  v11 = v10 | (v9 << 6);
LABEL_5:
  v12 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v11);
  v14 = *v12;
  v13 = v12[1];
  sub_20A479788(*(_QWORD *)(a2 + 56) + 40 * v11, (uint64_t)&v25);
  *(_QWORD *)&v24 = v14;
  *((_QWORD *)&v24 + 1) = v13;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_20A459C88((uint64_t)&v24, (uint64_t)v31, &qword_2545FBF40);
    if (!v31[1])
    {
      swift_release();
      return sub_20A5B92A8();
    }
    v29[0] = v32;
    v29[1] = v33;
    v30 = v34;
    v19 = *((_QWORD *)a1 + 8);
    v20 = a1[1];
    v24 = *a1;
    v25 = v20;
    v21 = a1[3];
    v26 = a1[2];
    v27 = v21;
    v28 = v19;
    sub_20A5B8978();
    swift_bridgeObjectRelease();
    sub_20A5B8E28();
    sub_20A459C54((uint64_t)v29);
    result = sub_20A5B92CC();
    v8 ^= result;
    if (v6)
      goto LABEL_4;
LABEL_6:
    v15 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v15 < v23)
    {
      v16 = *(_QWORD *)(v22 + 8 * v15);
      if (v16)
        goto LABEL_9;
      v17 = v9 + 2;
      ++v9;
      if (v15 + 1 < v23)
      {
        v16 = *(_QWORD *)(v22 + 8 * v17);
        if (v16)
        {
          ++v15;
LABEL_9:
          v6 = (v16 - 1) & v16;
          v11 = __clz(__rbit64(v16)) + (v15 << 6);
          v9 = v15;
          goto LABEL_5;
        }
        v18 = v15 + 2;
        v9 = v15 + 1;
        if (v15 + 2 < v23)
          break;
      }
    }
LABEL_21:
    v6 = 0;
    *(_QWORD *)&v27 = 0;
    v25 = 0u;
    v26 = 0u;
    v24 = 0u;
  }
  v16 = *(_QWORD *)(v22 + 8 * v18);
  if (v16)
  {
    v15 += 2;
    goto LABEL_9;
  }
  while (1)
  {
    v15 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v15 >= v23)
    {
      v9 = v23 - 1;
      goto LABEL_21;
    }
    v16 = *(_QWORD *)(v22 + 8 * v15);
    ++v18;
    if (v16)
      goto LABEL_9;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_20A57E33C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  v3 = *(_QWORD *)(a2 + 16);
  result = sub_20A5B92A8();
  if (v3)
  {
    v5 = a2 + 89;
    v6 = *(_QWORD *)(a2 + 48);
    v7 = *(_QWORD *)(v5 - 33);
    v8 = *(_BYTE *)(v5 - 25);
    v9 = *(unsigned __int8 *)(v5 - 24);
    swift_bridgeObjectRetain_n();
    sub_20A45DDBC(v6, v7, v8);
    sub_20A5B8978();
    swift_bridgeObjectRelease();
    if ((v8 & 1) != 0)
    {
      sub_20A5B92A8();
      swift_bridgeObjectRetain();
      sub_20A5B8978();
      sub_20A45DDCC(v6, v7, 1);
      __asm { BR              X8 }
    }
    sub_20A5B92A8();
    __asm { BR              X9 }
  }
  return result;
}

_QWORD *sub_20A57E8A8(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  id v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  int64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  unint64_t v31;

  v4 = a4;
  v6 = a2;
  v24 = result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    sub_20A5B8DD4();
    sub_20A459574(0, &qword_2545F9D58);
    sub_20A597DB4(&qword_2545FB488, &qword_2545F9D58);
    result = (_QWORD *)sub_20A5B8C0C();
    v4 = v27;
    v7 = v28;
    v8 = v29;
    v9 = v30;
    v10 = v31;
    if (v6)
      goto LABEL_3;
LABEL_36:
    v11 = 0;
    goto LABEL_38;
  }
  v9 = 0;
  v19 = -1 << *(_BYTE *)(a4 + 32);
  v7 = a4 + 56;
  v8 = ~v19;
  v20 = -v19;
  if (v20 < 64)
    v21 = ~(-1 << v20);
  else
    v21 = -1;
  v10 = v21 & *(_QWORD *)(a4 + 56);
  if (!a2)
    goto LABEL_36;
LABEL_3:
  if (!a3)
  {
    v11 = 0;
LABEL_38:
    v22 = v24;
LABEL_41:
    *v22 = v4;
    v22[1] = v7;
    v22[2] = v8;
    v22[3] = v9;
    v22[4] = v10;
    return (_QWORD *)v11;
  }
  if (a3 < 0)
    goto LABEL_48;
  v11 = 0;
  v25 = (unint64_t)(v8 + 64) >> 6;
  v23 = v8;
  while (1)
  {
    if (v4 < 0)
    {
      if (!sub_20A5B8DF8())
        goto LABEL_40;
      sub_20A459574(0, &qword_2545F9D58);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v14 = v26;
      result = (_QWORD *)swift_unknownObjectRelease();
      if (!v26)
        goto LABEL_40;
      goto LABEL_8;
    }
    if (v10)
    {
      v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v13 = v12 | (v9 << 6);
      goto LABEL_7;
    }
    v15 = v9 + 1;
    if (__OFADD__(v9, 1))
      break;
    if (v15 >= v25)
    {
      v10 = 0;
      goto LABEL_40;
    }
    v16 = *(_QWORD *)(v7 + 8 * v15);
    if (v16)
      goto LABEL_23;
    v17 = v9 + 2;
    if (v9 + 2 >= v25)
    {
      v10 = 0;
      ++v9;
      goto LABEL_40;
    }
    v16 = *(_QWORD *)(v7 + 8 * v17);
    if (!v16)
    {
      if (v9 + 3 >= v25)
        goto LABEL_44;
      v16 = *(_QWORD *)(v7 + 8 * (v9 + 3));
      if (v16)
      {
        v15 = v9 + 3;
        goto LABEL_23;
      }
      v17 = v9 + 4;
      if (v9 + 4 >= v25)
      {
        v10 = 0;
        v9 += 3;
        goto LABEL_40;
      }
      v16 = *(_QWORD *)(v7 + 8 * v17);
      if (!v16)
      {
        v15 = v9 + 5;
        if (v9 + 5 >= v25)
        {
LABEL_44:
          v10 = 0;
          v9 = v17;
          goto LABEL_40;
        }
        v16 = *(_QWORD *)(v7 + 8 * v15);
        if (!v16)
        {
          v18 = v9 + 6;
          while (v25 != v18)
          {
            v16 = *(_QWORD *)(v7 + 8 * v18++);
            if (v16)
            {
              v15 = v18 - 1;
              goto LABEL_23;
            }
          }
          v10 = 0;
          v9 = v25 - 1;
          goto LABEL_40;
        }
        goto LABEL_23;
      }
    }
    v15 = v17;
LABEL_23:
    v10 = (v16 - 1) & v16;
    v13 = __clz(__rbit64(v16)) + (v15 << 6);
    v9 = v15;
LABEL_7:
    result = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v13);
    v14 = result;
    if (!result)
      goto LABEL_40;
LABEL_8:
    ++v11;
    *v6++ = v14;
    if (v11 == a3)
    {
      v11 = a3;
LABEL_40:
      v8 = v23;
      v22 = v24;
      goto LABEL_41;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

_QWORD *sub_20A57EBB0(_QWORD *result, _BYTE *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;

  v4 = a4 + 56;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v8 = 0;
    a3 = 0;
LABEL_35:
    *result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (_QWORD *)a3;
  }
  if (!a3)
  {
    v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v8 = 0;
  v9 = 0;
  v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(_BYTE *)(*(_QWORD *)(a4 + 48) + v12);
    if (v9 == a3)
      goto LABEL_35;
  }
  v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v13);
  if (v14)
    goto LABEL_19;
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    v7 = 0;
    v8 = v13;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    v13 = v8;
LABEL_19:
    v16 = __clz(__rbit64(v14));
    v7 = (v14 - 1) & v14;
    v12 = v16 + (v13 << 6);
    v8 = v13;
    goto LABEL_8;
  }
  v15 = v13 + 2;
  if (v13 + 2 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    v13 = v15;
    goto LABEL_19;
  }
  v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    v7 = 0;
    v8 = v13 + 2;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
    goto LABEL_15;
  v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
    goto LABEL_18;
  while (1)
  {
    v13 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v13 >= v10)
    {
      v7 = 0;
      v8 = v10 - 1;
      goto LABEL_34;
    }
    v14 = *(_QWORD *)(v4 + 8 * v13);
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_20A57ED44(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5, uint64_t a6, uint64_t a7)
{
  uint64_t *boxed_opaque_existential_0;
  _QWORD *v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;

  v34 = a6;
  v35 = a7;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v33);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 32))(boxed_opaque_existential_0, a1, a6);
  v15 = (_QWORD *)*a5;
  v17 = sub_20A47094C(a2, a3);
  v18 = v15[2];
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
    goto LABEL_14;
  }
  v21 = v16;
  v22 = v15[3];
  if (v22 >= v20 && (a4 & 1) != 0)
  {
LABEL_7:
    v23 = (_QWORD *)*a5;
    if ((v21 & 1) != 0)
    {
LABEL_8:
      v24 = v23[7] + 40 * v17;
      __swift_destroy_boxed_opaque_existential_1(v24);
      return sub_20A44CFD8(&v33, v24);
    }
    goto LABEL_11;
  }
  if (v22 >= v20 && (a4 & 1) == 0)
  {
    sub_20A478CE0();
    goto LABEL_7;
  }
  sub_20A475284(v20, a4 & 1);
  v26 = sub_20A47094C(a2, a3);
  if ((v21 & 1) != (v27 & 1))
  {
LABEL_14:
    result = sub_20A5B9218();
    __break(1u);
    return result;
  }
  v17 = v26;
  v23 = (_QWORD *)*a5;
  if ((v21 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  v28 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v33, v34);
  MEMORY[0x24BDAC7A8](v28, v28);
  v30 = (char *)&v32 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v31 + 16))(v30);
  sub_20A57EF10(v17, a2, a3, (uint64_t)v30, v23, a6, a7);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v33);
  return swift_bridgeObjectRetain();
}

uint64_t sub_20A57EF10(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t a7)
{
  uint64_t *boxed_opaque_existential_0;
  _QWORD *v14;
  uint64_t result;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;

  v20 = a6;
  v21 = a7;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v19);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 32))(boxed_opaque_existential_0, a4, a6);
  a5[(a1 >> 6) + 8] |= 1 << a1;
  v14 = (_QWORD *)(a5[6] + 16 * a1);
  *v14 = a2;
  v14[1] = a3;
  result = sub_20A44CFD8(&v19, a5[7] + 40 * a1);
  v16 = a5[2];
  v17 = __OFADD__(v16, 1);
  v18 = v16 + 1;
  if (v17)
    __break(1u);
  else
    a5[2] = v18;
  return result;
}

uint64_t sub_20A57EFC8(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  __int16 v13;
  __int16 v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  __int16 v23;
  __int16 v24;
  uint64_t v25;
  uint64_t v26;
  __int16 v27;
  __int16 v28;
  unsigned __int8 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  __int16 v36;
  unsigned __int8 v37;
  char v38;
  __int16 v39;
  unsigned __int8 v40;
  int v41;
  __int16 v42;
  uint64_t v43;
  uint64_t v44;

  v4 = *a1;
  v5 = a1[1];
  v6 = *((unsigned __int8 *)a1 + 16);
  v8 = a1[3];
  v7 = a1[4];
  v9 = *((unsigned __int8 *)a1 + 40);
  v10 = a1[6];
  v11 = a1[7];
  v12 = *((_BYTE *)a1 + 64);
  v13 = *((unsigned __int8 *)a1 + 65);
  v14 = *((unsigned __int8 *)a1 + 66);
  v15 = *(_QWORD *)(a2 + 8);
  v16 = *(unsigned __int8 *)(a2 + 16);
  v18 = *(_QWORD *)(a2 + 24);
  v17 = *(_QWORD *)(a2 + 32);
  v19 = *(unsigned __int8 *)(a2 + 40);
  v20 = *(_QWORD *)(a2 + 48);
  v21 = *(_QWORD *)(a2 + 56);
  v22 = *(_BYTE *)(a2 + 64);
  v23 = *(unsigned __int8 *)(a2 + 65);
  v24 = *(unsigned __int8 *)(a2 + 66);
  switch((int)v6)
  {
    case 209:
      if (v16 == 209)
        goto LABEL_21;
      return 0;
    case 210:
      if (v16 != 210)
        return 0;
      goto LABEL_21;
    case 211:
      if (v16 != 211)
        return 0;
      goto LABEL_21;
    case 212:
      if (v16 != 212)
        return 0;
      goto LABEL_21;
    case 213:
      if (v16 != 213)
        return 0;
      goto LABEL_21;
    case 214:
      if (v16 != 214)
        return 0;
      goto LABEL_21;
    case 215:
      if (v16 != 215)
        return 0;
      goto LABEL_21;
    case 216:
      if (v16 != 216)
        return 0;
      goto LABEL_21;
    case 217:
      if (v16 != 217)
        return 0;
LABEL_21:
      if (v5)
      {
        if (!v15)
          return 0;
        if (v4 != *(_QWORD *)a2 || v5 != v15)
        {
          v41 = *(unsigned __int8 *)(a2 + 40);
          v43 = *(_QWORD *)(a2 + 48);
          v44 = *(_QWORD *)(a2 + 56);
          v42 = *(unsigned __int8 *)(a2 + 66);
          v40 = v12;
          v25 = v11;
          v26 = v10;
          v27 = v14;
          v28 = v13;
          v29 = *(_BYTE *)(a2 + 64);
          v30 = v7;
          v31 = v8;
          v32 = *(_QWORD *)(a2 + 32);
          v33 = *(_QWORD *)(a2 + 24);
          v34 = sub_20A5B91AC();
          v19 = v41;
          v18 = v33;
          v17 = v32;
          v8 = v31;
          v7 = v30;
          v22 = v29;
          v13 = v28;
          v14 = v27;
          v10 = v26;
          v11 = v25;
          v12 = v40;
          v24 = v42;
          v20 = v43;
          v21 = v44;
          if ((v34 & 1) == 0)
            return 0;
        }
      }
      else if (v15)
      {
        return 0;
      }
      switch((int)v9)
      {
        case 209:
          if (v19 != 209)
            return 0;
          break;
        case 210:
          if (v19 != 210)
            return 0;
          break;
        case 211:
          if (v19 != 211)
            return 0;
          break;
        case 212:
          if (v19 != 212)
            return 0;
          break;
        case 213:
          if (v19 != 213)
            return 0;
          break;
        case 214:
          if (v19 != 214)
            return 0;
          break;
        case 215:
          if (v19 != 215)
            return 0;
          break;
        case 216:
          if (v19 != 216)
            return 0;
          break;
        case 217:
          if (v19 != 217)
            return 0;
          break;
        default:
          if ((v19 + 47) >= 9u)
            __asm { BR              X10 }
          return 0;
      }
      if (!v7)
      {
        if (!v17)
          goto LABEL_56;
        return 0;
      }
      if (!v17)
        return 0;
      if (v8 != v18 || v7 != v17)
      {
        v36 = v13;
        v37 = v22;
        v38 = sub_20A5B91AC();
        v22 = v37;
        v13 = v36;
        if ((v38 & 1) == 0)
          return 0;
      }
LABEL_56:
      v39 = v13;
      if ((sub_20A539644(v10, v11, v12, v20, v21, v22) & 1) == 0)
        return 0;
      return sub_20A53A5A8(v39 | (unsigned __int16)(v14 << 8), v23 | (unsigned __int16)(v24 << 8));
    default:
      if ((v16 + 47) >= 9u)
        __asm { BR              X12 }
      return 0;
  }
}

uint64_t sub_20A580FE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  __int16 v3;
  __int16 v4;
  uint64_t v5;
  __int16 v6;
  __int16 v7;
  __int16 v8;
  __int16 v9;
  __int16 v10;
  __int16 v11;
  __int16 v13;
  __int16 v14;
  uint64_t v15;
  __int16 v16;
  __int16 v17;
  uint64_t v18;
  __int16 v19;
  __int16 v20;
  uint64_t v21;
  __int16 v22;
  __int16 v23;
  uint64_t v24;
  __int16 v25;
  __int16 v26;
  uint64_t v27;
  __int16 v28;
  __int16 v29;
  uint64_t v30;
  __int16 v31;
  __int16 v32;
  uint64_t v33;
  __int16 v34;
  __int16 v35;
  uint64_t v36;
  uint64_t v37;
  __int16 v38;
  __int16 v39;
  uint64_t v40;
  uint64_t v41;
  __int16 v42;
  __int16 v43;
  uint64_t v44;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(unsigned __int8 *)(a1 + 24);
  v4 = *(unsigned __int8 *)(a1 + 25);
  v44 = *(_QWORD *)(a1 + 32);
  v42 = *(unsigned __int8 *)(a1 + 41);
  v43 = *(unsigned __int8 *)(a1 + 40);
  v40 = *(_QWORD *)(a1 + 48);
  v38 = *(unsigned __int8 *)(a1 + 57);
  v39 = *(unsigned __int8 *)(a1 + 56);
  v36 = *(_QWORD *)(a1 + 64);
  v34 = *(unsigned __int8 *)(a1 + 73);
  v35 = *(unsigned __int8 *)(a1 + 72);
  v30 = *(_QWORD *)(a1 + 80);
  v28 = *(unsigned __int8 *)(a1 + 89);
  v29 = *(unsigned __int8 *)(a1 + 88);
  v24 = *(_QWORD *)(a1 + 96);
  v22 = *(unsigned __int8 *)(a1 + 105);
  v23 = *(unsigned __int8 *)(a1 + 104);
  v18 = *(_QWORD *)(a1 + 112);
  v16 = *(unsigned __int8 *)(a1 + 121);
  v17 = *(unsigned __int8 *)(a1 + 120);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(unsigned __int8 *)(a2 + 24);
  v7 = *(unsigned __int8 *)(a2 + 25);
  v41 = *(_QWORD *)(a2 + 32);
  v8 = *(unsigned __int8 *)(a2 + 40);
  v9 = *(unsigned __int8 *)(a2 + 41);
  v37 = *(_QWORD *)(a2 + 48);
  v10 = *(unsigned __int8 *)(a2 + 56);
  v11 = *(unsigned __int8 *)(a2 + 57);
  v33 = *(_QWORD *)(a2 + 64);
  v31 = *(unsigned __int8 *)(a2 + 73);
  v32 = *(unsigned __int8 *)(a2 + 72);
  v27 = *(_QWORD *)(a2 + 80);
  v25 = *(unsigned __int8 *)(a2 + 89);
  v26 = *(unsigned __int8 *)(a2 + 88);
  v21 = *(_QWORD *)(a2 + 96);
  v19 = *(unsigned __int8 *)(a2 + 105);
  v20 = *(unsigned __int8 *)(a2 + 104);
  v15 = *(_QWORD *)(a2 + 112);
  v13 = *(unsigned __int8 *)(a2 + 121);
  v14 = *(unsigned __int8 *)(a2 + 120);
  if ((sub_20A53C43C(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8) | (unsigned __int16)(*(unsigned __int8 *)(a1 + 9) << 8), *(_QWORD *)a2, *(unsigned __int8 *)(a2 + 8) | (unsigned __int16)(*(unsigned __int8 *)(a2 + 9) << 8)) & 1) != 0&& (sub_20A53C43C(v2, v3 | (unsigned __int16)(v4 << 8), v5, v6 | (unsigned __int16)(v7 << 8)) & 1) != 0&& (sub_20A53C43C(v44, v43 | (unsigned __int16)(v42 << 8), v41, v8 | (unsigned __int16)(v9 << 8)) & 1) != 0&& (sub_20A53C43C(v40, v39 | (unsigned __int16)(v38 << 8), v37, v10 | (unsigned __int16)(v11 << 8)) & 1) != 0&& (sub_20A53C43C(v36, v35 | (unsigned __int16)(v34 << 8), v33, v32 | (unsigned __int16)(v31 << 8)) & 1) != 0&& (sub_20A53C43C(v30, v29 | (unsigned __int16)(v28 << 8), v27, v26 | (unsigned __int16)(v25 << 8)) & 1) != 0&& (sub_20A53C43C(v24, v23 | (unsigned __int16)(v22 << 8), v21, v20 | (unsigned __int16)(v19 << 8)) & 1) != 0)
  {
    return sub_20A53C43C(v18, v17 | (unsigned __int16)(v16 << 8), v15, v14 | (unsigned __int16)(v13 << 8));
  }
  else
  {
    return 0;
  }
}

uint64_t sub_20A581244(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int16 v7;
  __int16 v8;
  uint64_t v9;
  __int16 v10;
  __int16 v11;
  uint64_t v12;
  __int16 v13;
  __int16 v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  __int16 v18;
  __int16 v19;
  uint64_t v20;
  __int16 v21;
  uint64_t v22;
  __int16 v23;
  __int16 v24;
  uint64_t v25;
  __int16 v26;
  __int16 v27;
  __int16 v28;
  uint64_t v29;
  __int16 v30;
  __int16 v31;
  uint64_t v32;
  __int16 v33;
  __int16 v34;
  __int16 v35;
  char v36;
  __int16 v37;
  uint64_t v38;
  __int16 v39;
  uint64_t v40;
  __int16 v41;
  __int16 v42;
  uint64_t v43;
  __int16 v44;
  __int16 v46;
  __int16 v47;
  uint64_t v48;
  __int16 v49;
  __int16 v50;
  __int16 v51;
  uint64_t v52;
  __int16 v53;
  uint64_t v54;
  __int16 v55;
  uint64_t v56;
  __int16 v57;
  __int16 v58;
  __int16 v59;
  __int16 v60;
  __int16 v61;
  uint64_t v62;
  __int16 v63;
  __int16 v64;
  uint64_t v65;
  uint64_t v66;
  __int16 v67;
  __int16 v68;
  __int16 v69;
  uint64_t v70;
  __int16 v71;
  __int16 v72;
  __int16 v73;

  v4 = *a1;
  v5 = a1[1];
  v6 = *((unsigned __int8 *)a1 + 16);
  v7 = *((unsigned __int8 *)a1 + 17);
  v8 = *((unsigned __int8 *)a1 + 18);
  v9 = a1[3];
  v10 = *((unsigned __int8 *)a1 + 32);
  v11 = *((unsigned __int8 *)a1 + 33);
  v12 = a1[5];
  v13 = *((unsigned __int8 *)a1 + 48);
  v14 = *((unsigned __int8 *)a1 + 49);
  v15 = a1[7];
  v71 = *((unsigned __int8 *)a1 + 64);
  v72 = *((unsigned __int8 *)a1 + 65);
  v70 = a1[9];
  v69 = *((unsigned __int8 *)a1 + 80);
  v68 = *((unsigned __int8 *)a1 + 81);
  v65 = a1[11];
  v63 = *((unsigned __int8 *)a1 + 97);
  v64 = *((unsigned __int8 *)a1 + 96);
  v16 = *(_QWORD *)(a2 + 8);
  v17 = *(unsigned __int8 *)(a2 + 16);
  v18 = *(unsigned __int8 *)(a2 + 17);
  v19 = *(unsigned __int8 *)(a2 + 18);
  v20 = *(_QWORD *)(a2 + 24);
  v21 = *(unsigned __int8 *)(a2 + 32);
  v73 = *(unsigned __int8 *)(a2 + 33);
  v22 = *(_QWORD *)(a2 + 40);
  v23 = *(unsigned __int8 *)(a2 + 48);
  v24 = *(unsigned __int8 *)(a2 + 49);
  v25 = *(_QWORD *)(a2 + 56);
  v26 = *(unsigned __int8 *)(a2 + 64);
  v27 = *(unsigned __int8 *)(a2 + 65);
  v66 = *(_QWORD *)(a2 + 72);
  v28 = *(unsigned __int8 *)(a2 + 80);
  v67 = *(unsigned __int8 *)(a2 + 81);
  v62 = *(_QWORD *)(a2 + 88);
  v60 = *(unsigned __int8 *)(a2 + 97);
  v61 = *(unsigned __int8 *)(a2 + 96);
  switch((int)v6)
  {
    case 209:
      if (v17 == 209)
        goto LABEL_21;
      return 0;
    case 210:
      if (v17 != 210)
        return 0;
      goto LABEL_21;
    case 211:
      if (v17 != 211)
        return 0;
      goto LABEL_21;
    case 212:
      if (v17 != 212)
        return 0;
      goto LABEL_21;
    case 213:
      if (v17 != 213)
        return 0;
      goto LABEL_21;
    case 214:
      if (v17 != 214)
        return 0;
      goto LABEL_21;
    case 215:
      if (v17 != 215)
        return 0;
      goto LABEL_21;
    case 216:
      if (v17 != 216)
        return 0;
      goto LABEL_21;
    case 217:
      if (v17 != 217)
        return 0;
LABEL_21:
      if (v5)
      {
        if (!v16)
          return 0;
        if (v4 != *(_QWORD *)a2 || v5 != v16)
        {
          v49 = v7;
          v50 = *(unsigned __int8 *)(a2 + 49);
          v54 = v12;
          v53 = *(unsigned __int8 *)(a2 + 80);
          v51 = *(unsigned __int8 *)(a2 + 48);
          v52 = *(_QWORD *)(a2 + 40);
          v29 = v15;
          v46 = *(unsigned __int8 *)(a2 + 17);
          v47 = *(unsigned __int8 *)(a2 + 32);
          v30 = v13;
          v31 = v14;
          v32 = v9;
          v33 = *(unsigned __int8 *)(a2 + 65);
          v48 = *(_QWORD *)(a2 + 24);
          v34 = v11;
          v35 = v8;
          v36 = sub_20A5B91AC();
          v8 = v35;
          v7 = v49;
          v24 = v50;
          v11 = v34;
          v20 = v48;
          v27 = v33;
          v9 = v32;
          v14 = v31;
          v21 = v47;
          v13 = v30;
          v18 = v46;
          v15 = v29;
          v22 = v52;
          v23 = v51;
          v28 = v53;
          v12 = v54;
          if ((v36 & 1) == 0)
            return 0;
        }
      }
      else if (v16)
      {
        return 0;
      }
      v57 = v13;
      v58 = v14;
      v59 = v27;
      v55 = v26;
      v56 = v15;
      v37 = v18 | (v19 << 8);
      v38 = v9;
      v39 = v21;
      v40 = v20;
      v41 = v24;
      v42 = v23;
      v43 = v22;
      v44 = v11;
      if ((sub_20A53A5A8(v7 | (unsigned __int16)(v8 << 8), v37) & 1) != 0
        && (sub_20A53C43C(v38, v10 | (unsigned __int16)(v44 << 8), v40, v39 | (unsigned __int16)(v73 << 8)) & 1) != 0
        && (sub_20A53C43C(v12, v57 | (unsigned __int16)(v58 << 8), v43, v42 | (unsigned __int16)(v41 << 8)) & 1) != 0
        && (sub_20A53C43C(v56, v71 | (unsigned __int16)(v72 << 8), v25, v55 | (unsigned __int16)(v59 << 8)) & 1) != 0
        && (sub_20A53C43C(v70, v69 | (unsigned __int16)(v68 << 8), v66, v28 | (unsigned __int16)(v67 << 8)) & 1) != 0)
      {
        return sub_20A53C43C(v65, v64 | (unsigned __int16)(v63 << 8), v62, v61 | (unsigned __int16)(v60 << 8));
      }
      return 0;
    default:
      if ((v17 + 47) >= 9u)
        __asm { BR              X12 }
      return 0;
  }
}

void sub_20A582408(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  _QWORD v23[4];

  v4 = sub_20A5B8630();
  v23[2] = *(_QWORD *)(v4 - 8);
  v23[3] = v4;
  MEMORY[0x24BDAC7A8](v4, v5);
  v23[1] = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ODIKnownBinding();
  v9 = MEMORY[0x24BDAC7A8](v7, v8);
  v11 = MEMORY[0x24BDAC7A8](v9, v10);
  v13 = MEMORY[0x24BDAC7A8](v11, v12);
  v15 = MEMORY[0x24BDAC7A8](v13, v14);
  MEMORY[0x24BDAC7A8](v15, v16);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FC0D8);
  v19 = MEMORY[0x24BDAC7A8](v17, v18);
  v21 = (char *)v23 + *(int *)(v19 + 48) - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4797C4(a1, (uint64_t)v23 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20A4797C4(a2, (uint64_t)v21);
  v22 = (char *)sub_20A582594 + 4 * byte_20A5D1E46[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

BOOL sub_20A582594()
{
  uint64_t v0;
  double *v1;
  double *v2;
  BOOL v3;

  sub_20A4797C4(v0, (uint64_t)v1);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_20A44CE2C(v0, &qword_2545FC0D8);
    return 0;
  }
  else
  {
    v3 = *v1 == *v2;
    sub_20A465AB4(v0, (uint64_t (*)(_QWORD))type metadata accessor for ODIKnownBinding);
  }
  return v3;
}

uint64_t sub_20A5827B8(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  char v20;

  v4 = *a1;
  v5 = *((_BYTE *)a1 + 8);
  v6 = *((unsigned __int8 *)a1 + 9);
  v7 = a1[2];
  v8 = a1[3];
  v9 = *((unsigned __int8 *)a1 + 32);
  v10 = a1[5];
  v11 = a1[6];
  v12 = *((_BYTE *)a1 + 56);
  v13 = *(unsigned __int8 *)(a2 + 9);
  v14 = *(_QWORD *)(a2 + 16);
  v15 = *(_QWORD *)(a2 + 24);
  v16 = *(unsigned __int8 *)(a2 + 32);
  v17 = *(_QWORD *)(a2 + 40);
  v18 = *(_QWORD *)(a2 + 48);
  v19 = *(_BYTE *)(a2 + 56);
  switch((int)v6)
  {
    case 209:
      if (v13 == 209)
        goto LABEL_21;
      return 0;
    case 210:
      if (v13 != 210)
        return 0;
      goto LABEL_21;
    case 211:
      if (v13 != 211)
        return 0;
      goto LABEL_21;
    case 212:
      if (v13 != 212)
        return 0;
      goto LABEL_21;
    case 213:
      if (v13 != 213)
        return 0;
      goto LABEL_21;
    case 214:
      if (v13 != 214)
        return 0;
      goto LABEL_21;
    case 215:
      if (v13 != 215)
        return 0;
      goto LABEL_21;
    case 216:
      if (v13 != 216)
        return 0;
      goto LABEL_21;
    case 217:
      if (v13 != 217)
        return 0;
LABEL_21:
      if ((v5 & 1) != 0)
      {
        if ((*(_BYTE *)(a2 + 8) & 1) == 0)
          return 0;
      }
      else
      {
        if (v4 == *(_QWORD *)a2)
          v20 = *(_BYTE *)(a2 + 8);
        else
          v20 = 1;
        if ((v20 & 1) != 0)
          return 0;
      }
      switch((int)v9)
      {
        case 209:
          if (v16 != 209)
            return 0;
          break;
        case 210:
          if (v16 != 210)
            return 0;
          break;
        case 211:
          if (v16 != 211)
            return 0;
          break;
        case 212:
          if (v16 != 212)
            return 0;
          break;
        case 213:
          if (v16 != 213)
            return 0;
          break;
        case 214:
          if (v16 != 214)
            return 0;
          break;
        case 215:
          if (v16 != 215)
            return 0;
          break;
        case 216:
          if (v16 != 216)
            return 0;
          break;
        case 217:
          if (v16 != 217)
            return 0;
          break;
        default:
          if ((v16 + 47) >= 9u)
            __asm { BR              X12 }
          return 0;
      }
      if (v8)
      {
        if (v15 && (v7 == v14 && v8 == v15 || (sub_20A5B91AC() & 1) != 0))
          return sub_20A539644(v10, v11, v12, v17, v18, v19);
        return 0;
      }
      if (v15)
        return 0;
      return sub_20A539644(v10, v11, v12, v17, v18, v19);
    default:
      if ((v13 + 47) >= 9u)
        __asm { BR              X4 }
      return 0;
  }
}

uint64_t sub_20A584678(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;

  v4 = *a1;
  v5 = a1[1];
  v6 = *((unsigned __int8 *)a1 + 16);
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(unsigned __int8 *)(a2 + 16);
  switch((int)v6)
  {
    case 209:
      if (v8 == 209)
        goto LABEL_21;
      return 0;
    case 210:
      if (v8 != 210)
        return 0;
      goto LABEL_21;
    case 211:
      if (v8 != 211)
        return 0;
      goto LABEL_21;
    case 212:
      if (v8 != 212)
        return 0;
      goto LABEL_21;
    case 213:
      if (v8 != 213)
        return 0;
      goto LABEL_21;
    case 214:
      if (v8 != 214)
        return 0;
      goto LABEL_21;
    case 215:
      if (v8 != 215)
        return 0;
      goto LABEL_21;
    case 216:
      if (v8 != 216)
        return 0;
      goto LABEL_21;
    case 217:
      if (v8 != 217)
        return 0;
LABEL_21:
      if (v5)
      {
        if (v7 && (v4 == *(_QWORD *)a2 && v5 == v7 || (sub_20A5B91AC() & 1) != 0))
          return 1;
      }
      else if (!v7)
      {
        return 1;
      }
      return 0;
    default:
      if ((v8 + 47) >= 9u)
        __asm { BR              X12 }
      return 0;
  }
}

uint64_t sub_20A5855CC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;
  int v4;

  v2 = *a1;
  v3 = *a2;
  v4 = a2[1];
  switch(a1[1])
  {
    case 0xD1u:
      if (v4 == 209)
        goto LABEL_21;
      return 0;
    case 0xD2u:
      if (v4 != 210)
        return 0;
      goto LABEL_21;
    case 0xD3u:
      if (v4 != 211)
        return 0;
      goto LABEL_21;
    case 0xD4u:
      if (v4 != 212)
        return 0;
      goto LABEL_21;
    case 0xD5u:
      if (v4 != 213)
        return 0;
      goto LABEL_21;
    case 0xD6u:
      if (v4 != 214)
        return 0;
      goto LABEL_21;
    case 0xD7u:
      if (v4 != 215)
        return 0;
      goto LABEL_21;
    case 0xD8u:
      if (v4 != 216)
        return 0;
      goto LABEL_21;
    case 0xD9u:
      if (v4 != 217)
        return 0;
LABEL_21:
      if (v2 == 2)
      {
        if (v3 == 2)
          return 1;
      }
      else if (v3 != 2 && ((((v3 & 1) == 0) ^ v2) & 1) != 0)
      {
        return 1;
      }
      return 0;
    default:
      if ((v4 + 47) < 9u)
        return 0;
      return ((uint64_t (*)(void))((char *)&loc_20A585638 + 4 * word_20A5D2840[a1[1]]))();
  }
}

uint64_t sub_20A58650C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  char v5;

  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)a2;
  v4 = *(unsigned __int8 *)(a2 + 8);
  switch(*(_BYTE *)(a1 + 8))
  {
    case 0xD1:
      if (v4 == 209)
        goto LABEL_21;
      return 0;
    case 0xD2:
      if (v4 != 210)
        return 0;
      goto LABEL_21;
    case 0xD3:
      if (v4 != 211)
        return 0;
      goto LABEL_21;
    case 0xD4:
      if (v4 != 212)
        return 0;
      goto LABEL_21;
    case 0xD5:
      if (v4 != 213)
        return 0;
      goto LABEL_21;
    case 0xD6:
      if (v4 != 214)
        return 0;
      goto LABEL_21;
    case 0xD7:
      if (v4 != 215)
        return 0;
      goto LABEL_21;
    case 0xD8:
      if (v4 != 216)
        return 0;
      goto LABEL_21;
    case 0xD9:
      if (v4 != 217)
        return 0;
LABEL_21:
      if (v2)
      {
        if (v3)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v5 = sub_20A57D7B4(v2, v3);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v5 & 1) != 0)
            return 1;
        }
      }
      else if (!v3)
      {
        return 1;
      }
      return 0;
    default:
      if ((v4 + 47) >= 9u)
        __asm { BR              X12 }
      return 0;
  }
}

uint64_t sub_20A587478(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  unsigned __int8 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 v27;
  unsigned __int8 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned __int8 v33;
  unsigned __int8 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned __int8 v39;
  unsigned __int8 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned __int8 v45;
  unsigned __int8 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unsigned __int8 v51;
  unsigned __int8 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unsigned __int8 v57;
  unsigned __int8 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unsigned __int8 v62;
  unsigned __int8 v63;
  uint64_t v64;
  uint64_t v65;
  unsigned __int8 v66;
  uint64_t v67;
  uint64_t v68;

  v3 = *(_QWORD *)(a2 + 24);
  v2 = *(_QWORD *)(a2 + 32);
  v4 = *(_BYTE *)(a2 + 40);
  v67 = *(_QWORD *)(a2 + 56);
  v68 = *(_QWORD *)(a2 + 48);
  v66 = *(_BYTE *)(a2 + 64);
  v64 = *(_QWORD *)(a2 + 80);
  v65 = *(_QWORD *)(a2 + 72);
  v63 = *(_BYTE *)(a2 + 88);
  v59 = *(_QWORD *)(a2 + 104);
  v60 = *(_QWORD *)(a2 + 96);
  v58 = *(_BYTE *)(a2 + 112);
  v53 = *(_QWORD *)(a2 + 128);
  v54 = *(_QWORD *)(a2 + 120);
  v52 = *(_BYTE *)(a2 + 136);
  v47 = *(_QWORD *)(a2 + 152);
  v48 = *(_QWORD *)(a2 + 144);
  v46 = *(_BYTE *)(a2 + 160);
  v41 = *(_QWORD *)(a2 + 176);
  v42 = *(_QWORD *)(a2 + 168);
  v40 = *(_BYTE *)(a2 + 184);
  v35 = *(_QWORD *)(a2 + 200);
  v36 = *(_QWORD *)(a2 + 192);
  v34 = *(_BYTE *)(a2 + 208);
  v29 = *(_QWORD *)(a2 + 224);
  v30 = *(_QWORD *)(a2 + 216);
  v28 = *(_BYTE *)(a2 + 232);
  v23 = *(_QWORD *)(a2 + 248);
  v24 = *(_QWORD *)(a2 + 240);
  v22 = *(_BYTE *)(a2 + 256);
  v17 = *(_QWORD *)(a2 + 272);
  v18 = *(_QWORD *)(a2 + 264);
  v16 = *(_BYTE *)(a2 + 280);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_BYTE *)(a1 + 40);
  v9 = *(_QWORD *)(a1 + 48);
  v8 = *(_QWORD *)(a1 + 56);
  v10 = *(_BYTE *)(a1 + 64);
  v11 = *(_QWORD *)(a1 + 72);
  v61 = *(_QWORD *)(a1 + 80);
  v62 = *(_BYTE *)(a1 + 88);
  v55 = *(_QWORD *)(a1 + 96);
  v56 = *(_QWORD *)(a1 + 104);
  v57 = *(_BYTE *)(a1 + 112);
  v49 = *(_QWORD *)(a1 + 120);
  v50 = *(_QWORD *)(a1 + 128);
  v51 = *(_BYTE *)(a1 + 136);
  v43 = *(_QWORD *)(a1 + 144);
  v44 = *(_QWORD *)(a1 + 152);
  v45 = *(_BYTE *)(a1 + 160);
  v37 = *(_QWORD *)(a1 + 168);
  v38 = *(_QWORD *)(a1 + 176);
  v39 = *(_BYTE *)(a1 + 184);
  v31 = *(_QWORD *)(a1 + 192);
  v32 = *(_QWORD *)(a1 + 200);
  v33 = *(_BYTE *)(a1 + 208);
  v25 = *(_QWORD *)(a1 + 216);
  v26 = *(_QWORD *)(a1 + 224);
  v27 = *(_BYTE *)(a1 + 232);
  v19 = *(_QWORD *)(a1 + 240);
  v20 = *(_QWORD *)(a1 + 248);
  v21 = *(_BYTE *)(a1 + 256);
  v13 = *(_QWORD *)(a1 + 264);
  v14 = *(_QWORD *)(a1 + 272);
  v15 = *(_BYTE *)(a1 + 280);
  if ((sub_20A539644(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_BYTE *)(a2 + 16)) & 1) != 0&& (sub_20A539644(v5, v6, v7, v3, v2, v4) & 1) != 0&& (sub_20A539644(v9, v8, v10, v68, v67, v66) & 1) != 0&& (sub_20A539644(v11, v61, v62, v65, v64, v63) & 1) != 0&& (sub_20A539644(v55, v56, v57, v60, v59, v58) & 1) != 0&& (sub_20A539644(v49, v50, v51, v54, v53, v52) & 1) != 0&& (sub_20A539644(v43, v44, v45, v48, v47, v46) & 1) != 0&& (sub_20A539644(v37, v38, v39, v42, v41, v40) & 1) != 0&& (sub_20A539644(v31, v32, v33, v36, v35, v34) & 1) != 0&& (sub_20A539644(v25, v26, v27, v30, v29, v28) & 1) != 0&& (sub_20A539644(v19, v20, v21, v24, v23, v22) & 1) != 0)
  {
    return sub_20A539644(v13, v14, v15, v18, v17, v16);
  }
  else
  {
    return 0;
  }
}

uint64_t _s17CoreODIEssentials16ArmandDeviceDataV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  __int128 *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  __int16 v17;
  __int16 v18;
  __int16 v19;
  __int16 v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  int v25;
  int v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  char v31;
  unsigned __int8 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned __int8 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned __int8 v41;
  int v42;
  int v43;
  uint64_t v44;
  int v45;
  int v46;
  uint64_t v47;
  __int16 v48;
  __int16 v49;
  __int16 v50;
  __int16 v51;
  unsigned __int8 v52;
  uint64_t v53;
  uint64_t v54;
  unsigned __int8 v55;
  uint64_t v56;
  uint64_t v57;
  unsigned __int8 v58;
  uint64_t v59;
  uint64_t v60;
  __int16 v61;
  __int16 v62;
  uint64_t v63;
  __int16 v64;
  __int16 v65;
  uint64_t v66;
  __int16 v67;
  __int16 v68;
  __int16 v69;
  __int16 v70;
  char v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  char v75;
  char v76;
  char v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  char v87;
  char v88;
  char v89;
  char v90;
  char v91;
  char v92;
  __int128 v93;
  uint64_t v94;
  char v95;
  char v96;
  char v97;
  char v98;
  uint64_t v99;
  char v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  char v104;
  uint64_t v105;
  char v106;
  char v107;
  char v108;
  char v109;
  char v110;
  char v111;
  __int128 v112;
  uint64_t v113;
  uint64_t v114;
  unsigned __int8 v115;
  uint64_t v116;
  uint64_t v117;
  unsigned __int8 v118;
  char v119;
  char v120;
  char v121;
  char v122;
  char v123;
  __int128 v124;
  char v125;
  __int128 v126;
  char v127;
  char v128;
  char v129;
  char v130;
  char v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  char v135;
  char v136;
  char v137;
  char v138;
  char v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  uint64_t v143;
  char v144;
  char v145;
  char v146;
  char v147;
  __int128 v148;
  __int128 v149;
  char v150;
  char v151;
  char v152;
  char v153;
  uint64_t v154;
  __int128 v155;
  __int128 v156;
  uint64_t v157;
  uint64_t v158;
  unsigned __int8 v159;
  unsigned __int8 v160;
  uint64_t v161;
  uint64_t v162;
  int v163;
  int v164;
  uint64_t v165;
  __int16 v166;
  __int16 v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  unsigned __int8 v171;
  unsigned __int8 v172;
  uint64_t v173;
  uint64_t v174;
  unsigned __int8 v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  unsigned __int8 v180;
  uint64_t v181;
  uint64_t v182;
  __int128 v183;
  __int128 v184;
  __int128 v185;
  char v186;
  char v187;
  char v188;
  __int128 v189;
  __int128 v190;
  __int128 v191;
  _OWORD v192[18];
  _OWORD v193[19];
  _BYTE __dst[281];
  __int128 v195;
  __int128 v196;
  __int128 v197;
  __int128 v198;
  __int128 v199;
  __int128 v200;
  _OWORD v201[2];
  _BYTE __src[281];
  __int128 v203;
  __int128 v204;
  __int128 v205;
  __int128 v206;
  __int128 v207;
  __int128 v208;
  _OWORD v209[3];

  v4 = *a1;
  v191 = *(_OWORD *)(a1 + 1);
  v5 = (__int128 *)(a2 + 280);
  v188 = *((_BYTE *)a1 + 24);
  v190 = *((_OWORD *)a1 + 2);
  v187 = *((_BYTE *)a1 + 48);
  v189 = *(_OWORD *)(a1 + 7);
  v186 = *((_BYTE *)a1 + 72);
  v182 = a1[10];
  v181 = a1[11];
  v180 = *((_BYTE *)a1 + 96);
  v177 = a1[13];
  v176 = a1[14];
  v175 = *((_BYTE *)a1 + 120);
  v174 = a1[16];
  v173 = a1[17];
  v172 = *((_BYTE *)a1 + 144);
  v168 = a1[19];
  v167 = *((unsigned __int8 *)a1 + 160);
  v166 = *((unsigned __int8 *)a1 + 161);
  v162 = a1[21];
  v161 = a1[22];
  v160 = *((_BYTE *)a1 + 184);
  v154 = a1[24];
  v153 = *((_BYTE *)a1 + 200);
  v155 = *(_OWORD *)(a1 + 29);
  v156 = *((_OWORD *)a1 + 13);
  v141 = *(_OWORD *)(a1 + 35);
  v142 = *((_OWORD *)a1 + 16);
  v140 = *((_OWORD *)a1 + 19);
  v126 = *(_OWORD *)(a1 + 41);
  v112 = *(_OWORD *)(a1 + 47);
  v107 = *((_BYTE *)a1 + 408);
  v111 = *((_BYTE *)a1 + 424);
  v110 = *((_BYTE *)a1 + 440);
  v109 = *((_BYTE *)a1 + 456);
  v108 = *((_BYTE *)a1 + 472);
  v150 = *((_BYTE *)a1 + 201);
  v151 = *((_BYTE *)a1 + 224);
  v152 = *((_BYTE *)a1 + 248);
  v135 = *((_BYTE *)a1 + 272);
  v136 = *((_BYTE *)a1 + 296);
  v137 = *((_BYTE *)a1 + 320);
  v138 = *((_BYTE *)a1 + 321);
  v139 = *((_BYTE *)a1 + 322);
  v125 = *((_BYTE *)a1 + 344);
  v121 = *((_BYTE *)a1 + 345);
  v122 = *((_BYTE *)a1 + 346);
  v116 = a1[44];
  v117 = a1[45];
  v118 = *((_BYTE *)a1 + 368);
  v97 = *((_BYTE *)a1 + 392);
  v96 = *((_BYTE *)a1 + 393);
  v95 = *((_BYTE *)a1 + 394);
  v94 = a1[50];
  v98 = *((_BYTE *)a1 + 409);
  v99 = a1[52];
  v100 = *((_BYTE *)a1 + 425);
  v101 = a1[54];
  v102 = *((_BYTE *)a1 + 441);
  v103 = a1[56];
  v104 = *((_BYTE *)a1 + 457);
  v105 = a1[58];
  v106 = *((_BYTE *)a1 + 473);
  v74 = a1[60];
  v73 = *((_BYTE *)a1 + 488);
  memcpy(__dst, a1 + 62, sizeof(__dst));
  v69 = *((unsigned __int8 *)a1 + 785);
  v70 = *((unsigned __int8 *)a1 + 784);
  v67 = *((unsigned __int8 *)a1 + 787);
  v68 = *((unsigned __int8 *)a1 + 786);
  v66 = a1[99];
  v64 = *((unsigned __int8 *)a1 + 801);
  v65 = *((unsigned __int8 *)a1 + 800);
  v63 = a1[101];
  v61 = *((unsigned __int8 *)a1 + 817);
  v62 = *((unsigned __int8 *)a1 + 816);
  v6 = *(_OWORD *)(a1 + 113);
  v199 = *(_OWORD *)(a1 + 111);
  v200 = v6;
  v201[0] = *(_OWORD *)(a1 + 115);
  *(_OWORD *)((char *)v201 + 10) = *(_OWORD *)((char *)a1 + 930);
  v7 = *(_OWORD *)(a1 + 105);
  v195 = *(_OWORD *)(a1 + 103);
  v196 = v7;
  v8 = *(_OWORD *)(a1 + 109);
  v197 = *(_OWORD *)(a1 + 107);
  v198 = v8;
  v59 = a1[120];
  v60 = a1[119];
  v58 = *((_BYTE *)a1 + 968);
  v56 = a1[123];
  v57 = a1[122];
  v55 = *((_BYTE *)a1 + 992);
  v53 = a1[126];
  v54 = a1[125];
  v52 = *((_BYTE *)a1 + 1016);
  v9 = *(_QWORD *)a2;
  v185 = *(_OWORD *)(a2 + 8);
  v10 = *(_BYTE *)(a2 + 24);
  v184 = *(_OWORD *)(a2 + 32);
  v11 = *(_BYTE *)(a2 + 48);
  v183 = *(_OWORD *)(a2 + 56);
  v12 = *(_BYTE *)(a2 + 72);
  v179 = *(_QWORD *)(a2 + 80);
  v178 = *(_QWORD *)(a2 + 88);
  v13 = *(_BYTE *)(a2 + 96);
  v148 = *(_OWORD *)(a2 + 232);
  v149 = *(_OWORD *)(a2 + 208);
  v133 = *v5;
  v134 = *(_OWORD *)(a2 + 256);
  v132 = *(_OWORD *)(a2 + 304);
  v124 = v5[3];
  v93 = v5[6];
  v92 = *((_BYTE *)v5 + 128);
  v91 = *((_BYTE *)v5 + 144);
  v90 = *((_BYTE *)v5 + 160);
  v89 = *((_BYTE *)v5 + 176);
  v88 = *((_BYTE *)v5 + 192);
  v14 = *(_QWORD *)(a2 + 104);
  v15 = *(_QWORD *)(a2 + 112);
  v16 = *(_BYTE *)(a2 + 120);
  v169 = *(_QWORD *)(a2 + 128);
  v170 = *(_QWORD *)(a2 + 136);
  v171 = *(_BYTE *)(a2 + 144);
  v165 = *(_QWORD *)(a2 + 152);
  v164 = *(unsigned __int8 *)(a2 + 160);
  v163 = *(unsigned __int8 *)(a2 + 161);
  v157 = *(_QWORD *)(a2 + 168);
  v158 = *(_QWORD *)(a2 + 176);
  v159 = *(_BYTE *)(a2 + 184);
  v143 = *(_QWORD *)(a2 + 192);
  v144 = *(_BYTE *)(a2 + 200);
  v145 = *(_BYTE *)(a2 + 201);
  v146 = *(_BYTE *)(a2 + 224);
  v147 = *(_BYTE *)(a2 + 248);
  v127 = *(_BYTE *)(a2 + 272);
  v128 = *(_BYTE *)(a2 + 296);
  v129 = *(_BYTE *)(a2 + 320);
  v130 = *(_BYTE *)(a2 + 321);
  v131 = *(_BYTE *)(a2 + 322);
  v123 = *(_BYTE *)(a2 + 344);
  v119 = *(_BYTE *)(a2 + 345);
  v120 = *(_BYTE *)(a2 + 346);
  v113 = *(_QWORD *)(a2 + 352);
  v114 = *(_QWORD *)(a2 + 360);
  v115 = *(_BYTE *)(a2 + 368);
  v75 = *(_BYTE *)(a2 + 392);
  v76 = *(_BYTE *)(a2 + 393);
  v77 = *(_BYTE *)(a2 + 394);
  v78 = *(_QWORD *)(a2 + 400);
  v79 = *(_BYTE *)(a2 + 409);
  v80 = *(_QWORD *)(a2 + 416);
  v81 = *(_BYTE *)(a2 + 425);
  v82 = *(_QWORD *)(a2 + 432);
  v83 = *(_BYTE *)(a2 + 441);
  v84 = *(_QWORD *)(a2 + 448);
  v85 = *(_BYTE *)(a2 + 457);
  v86 = *(_QWORD *)(a2 + 464);
  v87 = *(_BYTE *)(a2 + 473);
  v72 = *(_QWORD *)(a2 + 480);
  v71 = *(_BYTE *)(a2 + 488);
  memcpy(__src, (const void *)(a2 + 496), sizeof(__src));
  v17 = *(unsigned __int8 *)(a2 + 784);
  v18 = *(unsigned __int8 *)(a2 + 785);
  v19 = *(unsigned __int8 *)(a2 + 786);
  v20 = *(unsigned __int8 *)(a2 + 787);
  v21 = *(_QWORD *)(a2 + 792);
  v22 = *(unsigned __int8 *)(a2 + 800);
  v23 = *(unsigned __int8 *)(a2 + 801);
  v24 = *(_QWORD *)(a2 + 808);
  v25 = *(unsigned __int8 *)(a2 + 816);
  v26 = *(unsigned __int8 *)(a2 + 817);
  v27 = *(_OWORD *)(a2 + 904);
  v207 = *(_OWORD *)(a2 + 888);
  v208 = v27;
  v209[0] = *(_OWORD *)(a2 + 920);
  *(_OWORD *)((char *)v209 + 10) = *(_OWORD *)(a2 + 930);
  v28 = *(_OWORD *)(a2 + 840);
  v203 = *(_OWORD *)(a2 + 824);
  v204 = v28;
  v29 = *(_OWORD *)(a2 + 872);
  v205 = *(_OWORD *)(a2 + 856);
  v206 = v29;
  if (v4)
  {
    if (!v9)
      return 0;
    v50 = v18;
    v51 = v17;
    v48 = v20;
    v49 = v19;
    v45 = v23;
    v46 = v22;
    v47 = v21;
    v42 = v26;
    v43 = v25;
    v44 = v24;
    v39 = *(_QWORD *)(a2 + 952);
    v40 = *(_QWORD *)(a2 + 960);
    v41 = *(_BYTE *)(a2 + 968);
    v35 = *(_QWORD *)(a2 + 1000);
    v36 = *(_QWORD *)(a2 + 976);
    v37 = *(_BYTE *)(a2 + 992);
    v38 = *(_QWORD *)(a2 + 984);
    v33 = *(_BYTE *)(a2 + 1016);
    v34 = *(_QWORD *)(a2 + 1008);
    swift_bridgeObjectRetain();
    v30 = swift_bridgeObjectRetain();
    v31 = sub_20A45BB80(v30, v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v31 & 1) == 0)
      return 0;
  }
  else
  {
    v50 = v18;
    v51 = v17;
    v48 = v20;
    v49 = v19;
    v45 = v23;
    v46 = v22;
    v47 = v21;
    v42 = v26;
    v43 = v25;
    v44 = v24;
    v39 = *(_QWORD *)(a2 + 952);
    v40 = *(_QWORD *)(a2 + 960);
    v41 = *(_BYTE *)(a2 + 968);
    v35 = *(_QWORD *)(a2 + 1000);
    v36 = *(_QWORD *)(a2 + 976);
    v37 = *(_BYTE *)(a2 + 992);
    v38 = *(_QWORD *)(a2 + 984);
    v33 = *(_BYTE *)(a2 + 1016);
    v34 = *(_QWORD *)(a2 + 1008);
    if (v9)
      return 0;
  }
  v193[0] = v191;
  LOBYTE(v193[1]) = v188;
  *(_OWORD *)((char *)&v193[1] + 8) = v190;
  BYTE8(v193[2]) = v187;
  v193[3] = v189;
  LOBYTE(v193[4]) = v186;
  v192[0] = v185;
  LOBYTE(v192[1]) = v10;
  *(_OWORD *)((char *)&v192[1] + 8) = v184;
  BYTE8(v192[2]) = v11;
  v192[3] = v183;
  LOBYTE(v192[4]) = v12;
  if ((sub_20A58C274((uint64_t *)v193, (uint64_t)v192) & 1) != 0
    && (sub_20A539644(v182, v181, v180, v179, v178, v13) & 1) != 0
    && (sub_20A539644(v177, v176, v175, v14, v15, v16) & 1) != 0
    && (sub_20A539644(v174, v173, v172, v169, v170, v171) & 1) != 0
    && (sub_20A53B50C(v168, v167 | (unsigned __int16)(v166 << 8), v165, v164 | (v163 << 8)) & 1) != 0
    && (sub_20A539644(v162, v161, v160, v157, v158, v159) & 1) != 0)
  {
    *(_QWORD *)&v193[0] = v154;
    BYTE8(v193[0]) = v153;
    BYTE9(v193[0]) = v150;
    v193[1] = v156;
    LOBYTE(v193[2]) = v151;
    *(_OWORD *)((char *)&v193[2] + 8) = v155;
    BYTE8(v193[3]) = v152;
    *(_QWORD *)&v192[0] = v143;
    BYTE8(v192[0]) = v144;
    BYTE9(v192[0]) = v145;
    v192[1] = v149;
    LOBYTE(v192[2]) = v146;
    *(_OWORD *)((char *)&v192[2] + 8) = v148;
    BYTE8(v192[3]) = v147;
    if ((sub_20A5827B8((uint64_t *)v193, (uint64_t)v192) & 1) != 0)
    {
      v193[0] = v142;
      LOBYTE(v193[1]) = v135;
      *(_OWORD *)((char *)&v193[1] + 8) = v141;
      BYTE8(v193[2]) = v136;
      v193[3] = v140;
      LOBYTE(v193[4]) = v137;
      BYTE1(v193[4]) = v138;
      BYTE2(v193[4]) = v139;
      v192[0] = v134;
      LOBYTE(v192[1]) = v127;
      *(_OWORD *)((char *)&v192[1] + 8) = v133;
      BYTE8(v192[2]) = v128;
      v192[3] = v132;
      LOBYTE(v192[4]) = v129;
      BYTE1(v192[4]) = v130;
      BYTE2(v192[4]) = v131;
      if ((sub_20A57EFC8((uint64_t *)v193, (uint64_t)v192) & 1) != 0)
      {
        v193[0] = v126;
        LOBYTE(v193[1]) = v125;
        v192[0] = v124;
        LOBYTE(v192[1]) = v123;
        if ((sub_20A584678((uint64_t *)v193, (uint64_t)v192) & 1) != 0)
        {
          LOBYTE(v193[0]) = v121;
          BYTE1(v193[0]) = v122;
          LOBYTE(v192[0]) = v119;
          BYTE1(v192[0]) = v120;
          if ((sub_20A5855CC((unsigned __int8 *)v193, (unsigned __int8 *)v192) & 1) != 0
            && (sub_20A539644(v116, v117, v118, v113, v114, v115) & 1) != 0)
          {
            LOBYTE(v193[1]) = v97;
            BYTE1(v193[1]) = v96;
            BYTE2(v193[1]) = v95;
            *((_QWORD *)&v193[1] + 1) = v94;
            LOBYTE(v193[2]) = v107;
            v193[0] = v112;
            BYTE1(v193[2]) = v98;
            *((_QWORD *)&v193[2] + 1) = v99;
            LOBYTE(v193[3]) = v111;
            BYTE1(v193[3]) = v100;
            *((_QWORD *)&v193[3] + 1) = v101;
            LOBYTE(v193[4]) = v110;
            BYTE1(v193[4]) = v102;
            *((_QWORD *)&v193[4] + 1) = v103;
            LOBYTE(v193[5]) = v109;
            BYTE1(v193[5]) = v104;
            *((_QWORD *)&v193[5] + 1) = v105;
            LOBYTE(v193[6]) = v108;
            BYTE1(v193[6]) = v106;
            v192[0] = v93;
            LOBYTE(v192[1]) = v75;
            BYTE1(v192[1]) = v76;
            BYTE2(v192[1]) = v77;
            *((_QWORD *)&v192[1] + 1) = v78;
            LOBYTE(v192[2]) = v92;
            BYTE1(v192[2]) = v79;
            *((_QWORD *)&v192[2] + 1) = v80;
            LOBYTE(v192[3]) = v91;
            BYTE1(v192[3]) = v81;
            *((_QWORD *)&v192[3] + 1) = v82;
            LOBYTE(v192[4]) = v90;
            BYTE1(v192[4]) = v83;
            *((_QWORD *)&v192[4] + 1) = v84;
            LOBYTE(v192[5]) = v89;
            BYTE1(v192[5]) = v85;
            *((_QWORD *)&v192[5] + 1) = v86;
            LOBYTE(v192[6]) = v88;
            BYTE1(v192[6]) = v87;
            if ((sub_20A581244((uint64_t *)v193, (uint64_t)v192) & 1) != 0)
            {
              *(_QWORD *)&v193[0] = v74;
              BYTE8(v193[0]) = v73;
              *(_QWORD *)&v192[0] = v72;
              BYTE8(v192[0]) = v71;
              if ((sub_20A58650C((uint64_t)v193, (uint64_t)v192) & 1) != 0)
              {
                memcpy(v193, __dst, 0x119uLL);
                memcpy(v192, __src, 0x119uLL);
                if ((sub_20A587478((uint64_t)v193, (uint64_t)v192) & 1) != 0
                  && (sub_20A53A5A8(v70 | (unsigned __int16)(v69 << 8), v51 | (unsigned __int16)(v50 << 8)) & 1) != 0
                  && (sub_20A53A5A8(v68 | (unsigned __int16)(v67 << 8), v49 | (unsigned __int16)(v48 << 8)) & 1) != 0
                  && (sub_20A53B50C(v66, v65 | (unsigned __int16)(v64 << 8), v47, v46 | (v45 << 8)) & 1) != 0
                  && (sub_20A53B50C(v63, v62 | (unsigned __int16)(v61 << 8), v44, v43 | (v42 << 8)) & 1) != 0)
                {
                  v193[4] = v199;
                  v193[5] = v200;
                  v193[6] = v201[0];
                  *(_OWORD *)((char *)&v193[6] + 10) = *(_OWORD *)((char *)v201 + 10);
                  v193[0] = v195;
                  v193[1] = v196;
                  v193[2] = v197;
                  v193[3] = v198;
                  v192[4] = v207;
                  v192[5] = v208;
                  v192[6] = v209[0];
                  *(_OWORD *)((char *)&v192[6] + 10) = *(_OWORD *)((char *)v209 + 10);
                  v192[0] = v203;
                  v192[1] = v204;
                  v192[2] = v205;
                  v192[3] = v206;
                  if ((sub_20A580FE8((uint64_t)v193, (uint64_t)v192) & 1) != 0
                    && (sub_20A539644(v60, v59, v58, v39, v40, v41) & 1) != 0
                    && (sub_20A539644(v57, v56, v55, v36, v38, v37) & 1) != 0
                    && (sub_20A539644(v54, v53, v52, v35, v34, v33) & 1) != 0)
                  {
                    return 1;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return 0;
}

uint64_t sub_20A58833C(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  uint64_t v13;
  __int16 v14;
  __int16 v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  uint64_t v24;
  int v25;
  int v26;
  __int16 v27;
  __int16 v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  unsigned __int8 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  int v39;
  uint64_t v40;
  unsigned __int8 v41;
  char v42;
  unsigned __int8 v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unsigned __int8 v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v4 = *a1;
  v5 = a1[1];
  v6 = *((unsigned __int8 *)a1 + 16);
  v8 = a1[3];
  v7 = a1[4];
  v9 = *((unsigned __int8 *)a1 + 40);
  v10 = a1[6];
  v11 = a1[7];
  v12 = *((_BYTE *)a1 + 64);
  v13 = a1[9];
  v14 = *((unsigned __int8 *)a1 + 80);
  v15 = *((unsigned __int8 *)a1 + 81);
  v16 = *(_QWORD *)(a2 + 8);
  v17 = *(unsigned __int8 *)(a2 + 16);
  v19 = *(_QWORD *)(a2 + 24);
  v18 = *(_QWORD *)(a2 + 32);
  v20 = *(unsigned __int8 *)(a2 + 40);
  v22 = *(_QWORD *)(a2 + 48);
  v21 = *(_QWORD *)(a2 + 56);
  v23 = *(_BYTE *)(a2 + 64);
  v24 = *(_QWORD *)(a2 + 72);
  v25 = *(unsigned __int8 *)(a2 + 80);
  v26 = *(unsigned __int8 *)(a2 + 81);
  switch((int)v6)
  {
    case 209:
      if (v17 == 209)
        goto LABEL_21;
      return 0;
    case 210:
      if (v17 != 210)
        return 0;
      goto LABEL_21;
    case 211:
      if (v17 != 211)
        return 0;
      goto LABEL_21;
    case 212:
      if (v17 != 212)
        return 0;
      goto LABEL_21;
    case 213:
      if (v17 != 213)
        return 0;
      goto LABEL_21;
    case 214:
      if (v17 != 214)
        return 0;
      goto LABEL_21;
    case 215:
      if (v17 != 215)
        return 0;
      goto LABEL_21;
    case 216:
      if (v17 != 216)
        return 0;
      goto LABEL_21;
    case 217:
      if (v17 != 217)
        return 0;
LABEL_21:
      if (v5)
      {
        if (!v16)
          return 0;
        if (v4 != *(_QWORD *)a2 || v5 != v16)
        {
          v54 = *(_QWORD *)(a2 + 56);
          v51 = v12;
          v52 = *(unsigned __int8 *)(a2 + 80);
          v49 = v10;
          v50 = v11;
          v47 = *(unsigned __int8 *)(a2 + 40);
          v48 = *(_QWORD *)(a2 + 72);
          v27 = v15;
          v28 = v14;
          v29 = v13;
          v46 = v9;
          v30 = *(unsigned __int8 *)(a2 + 81);
          v31 = *(_QWORD *)(a2 + 48);
          v32 = *(_BYTE *)(a2 + 64);
          v33 = v7;
          v34 = v8;
          v35 = *(_QWORD *)(a2 + 32);
          v36 = *(_QWORD *)(a2 + 24);
          v37 = sub_20A5B91AC();
          v19 = v36;
          v18 = v35;
          v8 = v34;
          v7 = v33;
          v23 = v32;
          v21 = v54;
          v22 = v31;
          v26 = v30;
          v9 = v46;
          v20 = v47;
          v13 = v29;
          v14 = v28;
          v15 = v27;
          v24 = v48;
          v10 = v49;
          v11 = v50;
          v12 = v51;
          v25 = v52;
          if ((v37 & 1) == 0)
            return 0;
        }
      }
      else if (v16)
      {
        return 0;
      }
      switch((int)v9)
      {
        case 209:
          if (v20 != 209)
            return 0;
          break;
        case 210:
          if (v20 != 210)
            return 0;
          break;
        case 211:
          if (v20 != 211)
            return 0;
          break;
        case 212:
          if (v20 != 212)
            return 0;
          break;
        case 213:
          if (v20 != 213)
            return 0;
          break;
        case 214:
          if (v20 != 214)
            return 0;
          break;
        case 215:
          if (v20 != 215)
            return 0;
          break;
        case 216:
          if (v20 != 216)
            return 0;
          break;
        case 217:
          if (v20 != 217)
            return 0;
          break;
        default:
          if ((v20 + 47) >= 9u)
            __asm { BR              X10 }
          return 0;
      }
      if (!v7)
      {
        if (!v18)
          goto LABEL_56;
        return 0;
      }
      if (!v18)
        return 0;
      if (v8 != v19 || v7 != v18)
      {
        v53 = v13;
        v55 = v21;
        v39 = v26;
        v40 = v22;
        v41 = v23;
        v42 = sub_20A5B91AC();
        v23 = v41;
        v13 = v53;
        v21 = v55;
        v22 = v40;
        v26 = v39;
        if ((v42 & 1) == 0)
          return 0;
      }
LABEL_56:
      v43 = v12;
      v44 = v13;
      v45 = v26;
      if ((sub_20A539644(v10, v11, v43, v22, v21, v23) & 1) == 0)
        return 0;
      return sub_20A53B50C(v44, v14 | (unsigned __int16)(v15 << 8), v24, v25 | (v45 << 8));
    default:
      if ((v17 + 47) >= 9u)
        __asm { BR              X12 }
      return 0;
  }
}

uint64_t sub_20A58A37C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int16 v9;
  __int16 v10;
  int v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  int v17;

  v3 = *a1;
  v4 = a1[1];
  v5 = a1[2];
  v6 = a1[3];
  v7 = *((_QWORD *)a1 + 1);
  v8 = *((_QWORD *)a1 + 3);
  v9 = a1[32];
  v10 = a1[33];
  v11 = *a2;
  v12 = a2[1];
  v13 = a2[2];
  v14 = a2[3];
  v15 = *((_QWORD *)a2 + 3);
  v16 = a2[32];
  v17 = a2[33];
  switch((int)v4)
  {
    case 209:
      if (v12 == 209)
        goto LABEL_21;
      return 0;
    case 210:
      if (v12 != 210)
        return 0;
      goto LABEL_21;
    case 211:
      if (v12 != 211)
        return 0;
      goto LABEL_21;
    case 212:
      if (v12 != 212)
        return 0;
      goto LABEL_21;
    case 213:
      if (v12 != 213)
        return 0;
      goto LABEL_21;
    case 214:
      if (v12 != 214)
        return 0;
      goto LABEL_21;
    case 215:
      if (v12 != 215)
        return 0;
      goto LABEL_21;
    case 216:
      if (v12 != 216)
        return 0;
      goto LABEL_21;
    case 217:
      if (v12 != 217)
        return 0;
LABEL_21:
      if (v3 == 2)
      {
        if (v11 != 2)
          return 0;
      }
      else if (v11 == 2 || ((((v11 & 1) == 0) ^ v3) & 1) == 0)
      {
        return 0;
      }
      switch((int)v6)
      {
        case 209:
          if (v14 != 209)
            return 0;
          break;
        case 210:
          if (v14 != 210)
            return 0;
          break;
        case 211:
          if (v14 != 211)
            return 0;
          break;
        case 212:
          if (v14 != 212)
            return 0;
          break;
        case 213:
          if (v14 != 213)
            return 0;
          break;
        case 214:
          if (v14 != 214)
            return 0;
          break;
        case 215:
          if (v14 != 215)
            return 0;
          break;
        case 216:
          if (v14 != 216)
            return 0;
          break;
        case 217:
          if (v14 != 217)
            return 0;
          break;
        default:
          if ((v14 + 47) >= 9u)
            __asm { BR              X1 }
          return 0;
      }
      if (v5 == 2)
      {
        if (v13 != 2)
          return 0;
      }
      else if (v13 == 2 || ((((v13 & 1) == 0) ^ v5) & 1) == 0)
      {
        return 0;
      }
      if ((sub_20A53B50C(v7, a1[16] | (unsigned __int16)(a1[17] << 8), *((_QWORD *)a2 + 1), a2[16] | (a2[17] << 8)) & 1) != 0)
        return sub_20A53B50C(v8, v9 | (unsigned __int16)(v10 << 8), v15, v16 | (v17 << 8));
      return 0;
    default:
      if ((v12 + 47) >= 9u)
        __asm { BR              X6 }
      return 0;
  }
}

uint64_t sub_20A58C274(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t result;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;

  v4 = *a1;
  v5 = a1[1];
  v6 = *((unsigned __int8 *)a1 + 16);
  v7 = a1[3];
  v8 = a1[4];
  v9 = *((unsigned __int8 *)a1 + 40);
  v10 = a1[6];
  v11 = a1[7];
  v12 = *((unsigned __int8 *)a1 + 64);
  v13 = *(_QWORD *)(a2 + 8);
  v14 = *(unsigned __int8 *)(a2 + 16);
  v16 = *(_QWORD *)(a2 + 24);
  v15 = *(_QWORD *)(a2 + 32);
  v17 = *(unsigned __int8 *)(a2 + 40);
  v19 = *(_QWORD *)(a2 + 48);
  v18 = *(_QWORD *)(a2 + 56);
  v20 = *(unsigned __int8 *)(a2 + 64);
  switch((int)v6)
  {
    case 209:
      if (v14 == 209)
        goto LABEL_21;
      return 0;
    case 210:
      if (v14 != 210)
        return 0;
      goto LABEL_21;
    case 211:
      if (v14 != 211)
        return 0;
      goto LABEL_21;
    case 212:
      if (v14 != 212)
        return 0;
      goto LABEL_21;
    case 213:
      if (v14 != 213)
        return 0;
      goto LABEL_21;
    case 214:
      if (v14 != 214)
        return 0;
      goto LABEL_21;
    case 215:
      if (v14 != 215)
        return 0;
      goto LABEL_21;
    case 216:
      if (v14 != 216)
        return 0;
      goto LABEL_21;
    case 217:
      if (v14 != 217)
        return 0;
LABEL_21:
      if (v5)
      {
        if (!v13)
          return 0;
        if (v4 != *(_QWORD *)a2 || v5 != v13)
        {
          v33 = v9;
          v34 = v12;
          v21 = *(unsigned __int8 *)(a2 + 64);
          v22 = *(_QWORD *)(a2 + 48);
          v23 = *(_QWORD *)(a2 + 56);
          v24 = v11;
          v25 = v10;
          v26 = *(_QWORD *)(a2 + 32);
          v27 = sub_20A5B91AC();
          v15 = v26;
          v10 = v25;
          v11 = v24;
          v18 = v23;
          v19 = v22;
          v20 = v21;
          v9 = v33;
          v12 = v34;
          v28 = v27;
          result = 0;
          if ((v28 & 1) == 0)
            return result;
        }
      }
      else if (v13)
      {
        return 0;
      }
      switch((int)v9)
      {
        case 209:
          if (v17 != 209)
            return 0;
          break;
        case 210:
          if (v17 != 210)
            return 0;
          break;
        case 211:
          if (v17 != 211)
            return 0;
          break;
        case 212:
          if (v17 != 212)
            return 0;
          break;
        case 213:
          if (v17 != 213)
            return 0;
          break;
        case 214:
          if (v17 != 214)
            return 0;
          break;
        case 215:
          if (v17 != 215)
            return 0;
          break;
        case 216:
          if (v17 != 216)
            return 0;
          break;
        case 217:
          if (v17 != 217)
            return 0;
          break;
        default:
          if ((v17 + 47) >= 9u)
            __asm { BR              X10 }
          return 0;
      }
      if (!v8)
      {
        if (v15)
          return 0;
LABEL_57:
        switch((int)v12)
        {
          case 209:
            if (v20 != 209)
              return 0;
            break;
          case 210:
            if (v20 != 210)
              return 0;
            break;
          case 211:
            if (v20 != 211)
              return 0;
            break;
          case 212:
            if (v20 != 212)
              return 0;
            break;
          case 213:
            if (v20 != 213)
              return 0;
            break;
          case 214:
            if (v20 != 214)
              return 0;
            break;
          case 215:
            if (v20 != 215)
              return 0;
            break;
          case 216:
            if (v20 != 216)
              return 0;
            break;
          case 217:
            if (v20 != 217)
              return 0;
            break;
          default:
            if ((v20 + 47) >= 9u)
              __asm { BR              X10 }
            return 0;
        }
        if (v11)
        {
          if (v18 && (v10 == v19 && v11 == v18 || (sub_20A5B91AC() & 1) != 0))
            return 1;
        }
        else if (!v18)
        {
          return 1;
        }
        return 0;
      }
      if (!v15)
        return 0;
      if (v7 == v16 && v8 == v15)
        goto LABEL_57;
      v30 = v10;
      v31 = sub_20A5B91AC();
      v10 = v30;
      v32 = v31;
      result = 0;
      if ((v32 & 1) != 0)
        goto LABEL_57;
      return result;
    default:
      if ((v14 + 47) >= 9u)
        __asm { BR              X12 }
      return 0;
  }
}

uint64_t _s17CoreODIEssentials25ArmandDeviceDataErrorCodeO2eeoiySbAC_ACtFZ_0(_BYTE *a1, unsigned __int8 *a2)
{
  int v2;
  uint64_t result;

  v2 = *a2;
  switch(*a1)
  {
    case 0xD1:
      if (v2 != 209)
        goto LABEL_22;
      result = 1;
      break;
    case 0xD2:
      if (v2 != 210)
        goto LABEL_22;
      result = 1;
      break;
    case 0xD3:
      if (v2 != 211)
        goto LABEL_22;
      result = 1;
      break;
    case 0xD4:
      if (v2 != 212)
        goto LABEL_22;
      result = 1;
      break;
    case 0xD5:
      if (v2 != 213)
        goto LABEL_22;
      result = 1;
      break;
    case 0xD6:
      if (v2 != 214)
        goto LABEL_22;
      result = 1;
      break;
    case 0xD7:
      if (v2 != 215)
        goto LABEL_22;
      result = 1;
      break;
    case 0xD8:
      if (v2 != 216)
        goto LABEL_22;
      result = 1;
      break;
    case 0xD9:
      if (v2 != 217)
        goto LABEL_22;
      result = 1;
      break;
    default:
      if ((v2 + 47) < 9u)
LABEL_22:
        result = 0;
      else
        result = ((uint64_t (*)(void))((char *)&loc_20A58F164 + 4 * word_20A5D45FE[*a1]))();
      break;
  }
  return result;
}

uint64_t sub_20A58F1F4()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F1FC()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F204()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F20C()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F214()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F21C()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F224()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F22C()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F234()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F23C()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F244()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F24C()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F254()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F25C()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F264()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F26C()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F274()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F27C()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F284()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F28C()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F294()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F29C()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F2A4()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F2AC()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F2B4()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F2BC()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F2C4()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F2CC()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F2D4()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F2DC()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F2E4()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F2EC()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F2F4()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F2FC()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F304()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F30C()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F314()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F31C()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F324()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F32C()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F334()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F33C()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F344()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F34C()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F354()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F35C()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F364()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F36C()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F374()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F37C()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F384()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F38C()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F394()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F39C()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F3A4()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F3AC()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F3B4()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F3BC()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F3C4()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F3D0()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F3E0()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F3F0()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F3F8()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F400()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F408()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F410()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F418()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F420()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F428()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F430()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F438()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F440()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F448()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F450()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F458()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F460()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F468()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F470()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F478()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F480()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F488()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F490()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F498()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F4A0()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F4A8()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F4B0()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F4B8()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F4C0()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F4C8()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F4D0()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F4D8()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F4E0()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F4E8()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F4F0()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F4F8()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F500()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F50C()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F514()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F51C()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F524()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F52C()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F534()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F53C()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F544()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F54C()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F554()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F55C()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F564()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F56C()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F574()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F57C()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F584()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F58C()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F594()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F59C()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F5A4()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F5AC()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F5B4()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F5BC()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F5C4()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F5CC()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F5D4()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F5DC()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F5E4()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F5EC()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F5F4()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F5FC()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F604()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F60C()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F614()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F61C()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F624()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F62C()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F634()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F63C()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F644()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F64C()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F654()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F65C()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F664()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F66C()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F674()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F67C()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F684()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F68C()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F694()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F69C()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F6A4()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F6AC()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F6B4()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F6BC()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F6C4()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F6CC()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F6D4()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F6DC()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F6E4()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F6EC()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F6F4()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F6FC()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F704()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F70C()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F714()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F71C()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F724()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F72C()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F734()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F73C()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F744()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F74C()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F754()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F75C()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F764()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F76C()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F774()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F77C()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F784()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F78C()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F794()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F79C()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F7A4()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F7AC()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F7B4()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F7BC()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F7C4()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F7CC()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F7D4()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F7DC()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F7E4()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F7EC()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F7F4()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F7FC()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F804()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F814()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F824()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F834()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F844()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F854()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F864()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F874()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F884()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F894()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F8A4()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F8B4()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F8C4()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F8D4()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

uint64_t sub_20A58F8E4()
{
  uint64_t v0;

  return ((uint64_t (*)())((char *)sub_20A58F910 + 4 * word_20A5D47A0[v0]))();
}

BOOL sub_20A58F910@<W0>(uint64_t a1@<X8>)
{
  return a1 == -2;
}

uint64_t sub_20A590024(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  char v15;
  char v16;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  char v22;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 v26;
  uint64_t v27;
  unsigned __int8 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 32);
  v31 = *(_QWORD *)(a1 + 40);
  v32 = *(_QWORD *)(a1 + 24);
  v28 = *(_BYTE *)(a1 + 64);
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 32);
  v29 = *(_QWORD *)(a1 + 48);
  v30 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 40);
  v27 = *(_QWORD *)(a2 + 48);
  v24 = *(_QWORD *)(a2 + 56);
  v25 = *(_QWORD *)(a1 + 56);
  v26 = *(_BYTE *)(a2 + 64);
  if (v6 == 1)
  {
    v9 = 0;
    v10 = 0;
    if (v3 != 1)
    {
LABEL_3:
      swift_bridgeObjectRetain();
      goto LABEL_6;
    }
  }
  else
  {
    v9 = *(_QWORD *)a2;
    v10 = *(_BYTE *)(a2 + 16);
    swift_bridgeObjectRetain();
    if (v3 != 1)
      goto LABEL_3;
  }
  v2 = 0;
  LOBYTE(v4) = 0;
LABEL_6:
  v11 = sub_20A53D37C(v9, v6, v10, v2, v3, v4);
  sub_20A59B8F4(v2, v3);
  sub_20A59B8F4(v9, v6);
  if ((v11 & 1) == 0)
  {
    if (v6 == 1)
    {
      v12 = 0;
      LOBYTE(v8) = 0;
      v7 = 1;
      v14 = v31;
      v13 = v32;
      if (v3 != 1)
      {
LABEL_9:
        swift_bridgeObjectRetain();
        goto LABEL_12;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      v14 = v31;
      v13 = v32;
      v12 = v30;
      if (v3 != 1)
        goto LABEL_9;
    }
    v13 = 0;
    v14 = 0;
    v5 = 1;
LABEL_12:
    v15 = sub_20A53D37C(v12, v7, v8, v13, v5, v14);
    sub_20A59B8F4(v13, v5);
    sub_20A59B8F4(v12, v7);
    if ((v15 & 1) != 0)
      goto LABEL_13;
    if (v6 == 1)
    {
      v17 = 0;
      v18 = 0;
      if (v3 != 1)
      {
LABEL_16:
        v19 = v25;
        swift_bridgeObjectRetain();
        v20 = v29;
        v21 = v28;
LABEL_19:
        v22 = sub_20A53D37C(v17, v6, v18, v20, v19, v21);
        sub_20A59B8F4(v20, v19);
        sub_20A59B8F4(v17, v6);
        v16 = v22 ^ 1;
        return v16 & 1;
      }
    }
    else
    {
      v6 = v24;
      swift_bridgeObjectRetain();
      v17 = v27;
      v18 = v26;
      if (v3 != 1)
        goto LABEL_16;
    }
    v20 = 0;
    v21 = 0;
    v19 = 1;
    goto LABEL_19;
  }
LABEL_13:
  v16 = 0;
  return v16 & 1;
}

uint64_t sub_20A59026C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v26;
  __int16 v27;
  uint64_t v28;
  __int16 v29;
  uint64_t v30;
  __int16 v31;
  uint64_t v32;
  __int16 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 32);
  v40 = *(_QWORD *)(a1 + 40);
  v41 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 56);
  v37 = *(_QWORD *)(a1 + 64);
  v38 = *(_QWORD *)(a1 + 48);
  v33 = *(_WORD *)(a1 + 80);
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 32);
  v34 = *(_QWORD *)(a1 + 72);
  v35 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 40);
  v30 = *(_QWORD *)(a2 + 48);
  v42 = *(_QWORD *)(a2 + 56);
  v39 = *(_QWORD *)(a2 + 64);
  v32 = *(_QWORD *)(a2 + 72);
  v31 = *(_WORD *)(a2 + 80);
  if (v7 == 1)
  {
    v10 = 0;
    v11 = 0;
  }
  else
  {
    v10 = *(_QWORD *)a2;
    v11 = *(_BYTE *)(a2 + 16);
    swift_bridgeObjectRetain();
  }
  v36 = v6;
  if (v2 == 1)
  {
    v3 = 0;
    LOBYTE(v4) = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  v12 = sub_20A53D37C(v10, v7, v11, v3, v2, v4);
  sub_20A59B8F4(v3, v2);
  sub_20A59B8F4(v10, v7);
  if ((v12 & 1) != 0)
  {
LABEL_21:
    v24 = 0;
    return v24 & 1;
  }
  if (v7 != 1)
  {
    swift_bridgeObjectRetain();
    v15 = v40;
    v14 = v41;
    v13 = v35;
    if (v2 != 1)
      goto LABEL_10;
LABEL_12:
    v14 = 0;
    v15 = 0;
    v5 = 1;
    goto LABEL_13;
  }
  v13 = 0;
  LOBYTE(v9) = 0;
  v8 = 1;
  v15 = v40;
  v14 = v41;
  if (v2 == 1)
    goto LABEL_12;
LABEL_10:
  swift_bridgeObjectRetain();
LABEL_13:
  v16 = sub_20A53D37C(v13, v8, v9, v14, v5, v15);
  sub_20A59B8F4(v14, v5);
  sub_20A59B8F4(v13, v8);
  if ((v16 & 1) != 0)
    goto LABEL_21;
  if (v7 == 1)
  {
    v17 = 0;
    LOBYTE(v39) = 0;
    v42 = 1;
    v19 = v37;
    v18 = v38;
  }
  else
  {
    swift_bridgeObjectRetain();
    v19 = v37;
    v18 = v38;
    v17 = v30;
  }
  v20 = v36;
  if (v2 == 1)
  {
    v18 = 0;
    v19 = 0;
    v20 = 1;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  v21 = sub_20A53D37C(v17, v42, v39, v18, v20, v19);
  v22 = v20;
  v23 = v21;
  sub_20A59B8F4(v18, v22);
  sub_20A59B8F4(v17, v42);
  if ((v23 & 1) != 0)
    goto LABEL_21;
  if (v7 == 1)
    v26 = 0;
  else
    v26 = v32;
  if (v7 == 1)
    v27 = -9728;
  else
    v27 = v31 & 0xFF01;
  if (v2 == 1)
    v28 = 0;
  else
    v28 = v34;
  if (v2 == 1)
    v29 = -9728;
  else
    v29 = v33 & 0xFF01;
  v24 = sub_20A53E340(v26, v27, v28, v29) ^ 1;
  return v24 & 1;
}

uint64_t sub_20A59050C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int16 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int16 v17;
  unsigned __int8 v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  char v24;
  uint64_t v26;
  unsigned __int8 v27;
  uint64_t v28;

  v3 = *(_QWORD *)a1;
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a2 + 24);
  if (v6 == 1)
  {
    v7 = 0;
    v8 = -9728;
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_WORD *)(a2 + 8) & 0xFF01;
  }
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 32);
  v28 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a1 + 48);
  v27 = *(_BYTE *)(a1 + 56);
  v12 = *(_QWORD *)(a2 + 16);
  v14 = *(_QWORD *)(a2 + 32);
  v13 = *(_QWORD *)(a2 + 40);
  v15 = *(_QWORD *)(a2 + 48);
  if (v5 == 1)
    v16 = 0;
  else
    v16 = v3;
  if (v5 == 1)
    v17 = -9728;
  else
    v17 = v4 & 0xFF01;
  v18 = *(_BYTE *)(a2 + 56);
  if ((sub_20A53E340(v7, v8, v16, v17) & 1) == 0)
  {
    if (v6 == 1)
    {
      v12 = 0;
      LOBYTE(v14) = 0;
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    v26 = v13;
    if (v5 == 1)
    {
      v9 = 0;
      LOBYTE(v10) = 0;
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    v19 = sub_20A53D37C(v12, v6, v14, v9, v5, v10);
    sub_20A59B8F4(v9, v5);
    sub_20A59B8F4(v12, v6);
    if ((v19 & 1) == 0)
    {
      if (v6 == 1)
      {
        v21 = 0;
        v18 = 0;
        v15 = 1;
        if (v5 != 1)
        {
LABEL_21:
          swift_bridgeObjectRetain();
          v22 = v28;
          v23 = v27;
LABEL_24:
          v24 = sub_20A53D37C(v21, v15, v18, v22, v11, v23);
          sub_20A59B8F4(v22, v11);
          sub_20A59B8F4(v21, v15);
          v20 = v24 ^ 1;
          return v20 & 1;
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        v21 = v26;
        if (v5 != 1)
          goto LABEL_21;
      }
      v22 = 0;
      v23 = 0;
      v11 = 1;
      goto LABEL_24;
    }
  }
  v20 = 0;
  return v20 & 1;
}

uint64_t sub_20A5906E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  char v15;
  unsigned __int8 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  char v22;
  char v23;
  __int16 v25;
  __int16 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  int v31;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 32);
  v36 = *(_QWORD *)(a1 + 40);
  v37 = *(_QWORD *)(a1 + 24);
  v34 = *(_QWORD *)(a1 + 56);
  v35 = *(_QWORD *)(a1 + 48);
  v32 = *(unsigned __int16 *)(a1 + 64);
  v33 = *(unsigned __int8 *)(a1 + 66);
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v28 = *(_QWORD *)(a2 + 48);
  v29 = *(_QWORD *)(a2 + 24);
  v27 = *(_QWORD *)(a2 + 56);
  v30 = *(unsigned __int16 *)(a2 + 64);
  v31 = *(unsigned __int8 *)(a2 + 66);
  if (v6 == 1)
  {
    v9 = 0;
    v10 = 0;
    if (v2 != 1)
    {
LABEL_3:
      swift_bridgeObjectRetain();
      goto LABEL_6;
    }
  }
  else
  {
    v9 = *(_QWORD *)a2;
    v10 = *(_BYTE *)(a2 + 16);
    swift_bridgeObjectRetain();
    if (v2 != 1)
      goto LABEL_3;
  }
  v3 = 0;
  LOBYTE(v4) = 0;
LABEL_6:
  v11 = sub_20A53D37C(v9, v6, v10, v3, v2, v4);
  sub_20A59B8F4(v3, v2);
  sub_20A59B8F4(v9, v6);
  if ((v11 & 1) != 0)
  {
LABEL_20:
    v23 = 0;
    return v23 & 1;
  }
  if (v6 != 1)
  {
    swift_bridgeObjectRetain();
    v14 = v36;
    v13 = v37;
    v12 = v29;
    if (v2 != 1)
      goto LABEL_9;
LABEL_11:
    v13 = 0;
    v14 = 0;
    v5 = 1;
    goto LABEL_12;
  }
  v12 = 0;
  LOBYTE(v8) = 0;
  v7 = 1;
  v14 = v36;
  v13 = v37;
  if (v2 == 1)
    goto LABEL_11;
LABEL_9:
  swift_bridgeObjectRetain();
LABEL_12:
  v15 = sub_20A53D37C(v12, v7, v8, v13, v5, v14);
  sub_20A59B8F4(v13, v5);
  sub_20A59B8F4(v12, v7);
  if ((v15 & 1) != 0)
    goto LABEL_20;
  v16 = v30;
  if (v6 == 1)
  {
    v17 = 0;
    v16 = 0;
    v18 = 1;
    v19 = v35;
  }
  else
  {
    v18 = v27;
    swift_bridgeObjectRetain();
    v19 = v35;
    v17 = v28;
  }
  v20 = v34;
  if (v2 == 1)
  {
    v19 = 0;
    v21 = 0;
    v20 = 1;
  }
  else
  {
    swift_bridgeObjectRetain();
    v21 = v32;
  }
  v22 = sub_20A53D37C(v17, v18, v16, v19, v20, v21);
  sub_20A59B8F4(v19, v20);
  sub_20A59B8F4(v17, v18);
  if ((v22 & 1) != 0)
    goto LABEL_20;
  if (v6 == 1)
    v25 = 3;
  else
    v25 = ((v30 | (v31 << 16)) >> 8) & 0xFF00 | BYTE1(v30);
  if (v2 == 1)
    v26 = 3;
  else
    v26 = ((v32 | (v33 << 16)) >> 8) & 0xFF00 | BYTE1(v32);
  v23 = sub_20A53F2B4(v25, v26) ^ 1;
  return v23 & 1;
}

BOOL sub_20A590980(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  unsigned __int8 v13;
  _BOOL8 result;
  __int16 v15;
  __int16 v16;
  id v17;
  id v18;
  double v19;
  double v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 v24;
  unsigned int v25;
  unsigned __int8 v26;
  uint64_t v27;
  char v28;
  double v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  double v37;
  double v38;
  double v39;
  __int16 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 32);
  v37 = *(double *)(a1 + 40);
  v38 = *(double *)(a1 + 24);
  v44 = *(_QWORD *)(a1 + 48);
  v6 = *(_QWORD *)(a1 + 64);
  v39 = *(double *)(a1 + 56);
  v42 = *(_QWORD *)(a1 + 80);
  v7 = *(unsigned __int16 *)(a1 + 96);
  v8 = *(_QWORD *)(a2 + 8);
  v9 = *(_QWORD *)(a2 + 16);
  v25 = v9;
  v32 = *(_QWORD *)(a2 + 32);
  v33 = *(_QWORD *)a2;
  v31 = *(double *)(a2 + 40);
  v29 = *(double *)(a2 + 24);
  v30 = *(_QWORD *)(a2 + 48);
  v36 = *(double *)(a2 + 56);
  v43 = *(_QWORD *)(a2 + 64);
  v34 = *(_QWORD *)(a2 + 72);
  if (v8 == 1)
    v10 = 0;
  else
    v10 = *(_QWORD *)a2;
  v27 = v10;
  if (v8 == 1)
    v11 = 0;
  else
    v11 = v9;
  v26 = v11;
  v41 = *(_QWORD *)(a2 + 80);
  v35 = *(_QWORD *)(a2 + 88);
  if (v3 == 1)
    v12 = 0;
  else
    v12 = *(_QWORD *)a1;
  v23 = v12;
  if (v3 == 1)
    v13 = 0;
  else
    v13 = *(_QWORD *)(a1 + 16);
  v24 = v13;
  v40 = *(_WORD *)(a2 + 96);
  sub_20A59B908(*(_QWORD *)a2, v8);
  sub_20A59B908(v2, v3);
  v28 = sub_20A53D37C(v27, v8, v26, v23, v3, v24);
  HIDWORD(v22) = v7;
  sub_20A59B8F4(v2, v3);
  LOWORD(v22) = v40;
  sub_20A59B8F4(v33, v8);
  result = 0;
  if ((v28 & 1) == 0)
  {
    if (v8 == 1)
      v15 = 3;
    else
      v15 = (v25 >> 8) & 0xFF00 | BYTE1(v25);
    if (v3 == 1)
      v16 = 3;
    else
      v16 = (v4 >> 8) & 0xFF00 | BYTE1(v4);
    result = 0;
    if ((sub_20A53F2B4(v15, v16) & 1) == 0)
    {
      if (v3 == 1)
        return 1;
      if (v8 != 1
        && ((v5 & 0xFF00) != 0xD100 || (v32 & 0xFF00) == 0xD100)
        && ((v44 & 0xFF00) != 0xD100 || (v30 & 0xFF00) == 0xD100)
        && ((v6 & 0xFF00) != 0xD100 || (v43 & 0xFF00) == 0xD100))
      {
        if ((v32 & 1) == 0
          && (v5 & 1) == 0
          && (v30 & 1) == 0
          && (v44 & 1) == 0
          && ((v43 | v6) & 1) == 0)
        {
          v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBFA80]), sel_initWithLatitude_longitude_, v29, v31, v43, v34, v41, v35, v22);
          v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBFA80]), sel_initWithLatitude_longitude_, v38, v37);
          objc_msgSend(v17, sel_distanceFromLocation_, v18);
          v20 = v19;

          v21 = v39 >= v36 ? v36 : v39;
          if (v20 <= v21)
            return 1;
        }
        if (((v42 & 0xFF00) != 0xD100 || (v41 & 0xFF00) == 0xD100)
          && (HIDWORD(v22) >> 8 != 209 || (v40 & 0xFF00) == 0xD100))
        {
          return 1;
        }
      }
    }
  }
  return result;
}

uint64_t sub_20A590D50(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int64_t v51;
  unint64_t v52;
  int64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  void (*v64)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unsigned int (*v71)(uint64_t, uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  char v74;
  char v75;
  int64_t v76;
  uint64_t v77;
  int64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  _BOOL4 v84;
  int64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  unint64_t v92;
  _QWORD *v93;

  v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FC318);
  MEMORY[0x24BDAC7A8](v89, v4);
  v88 = (uint64_t)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FA938);
  v8 = MEMORY[0x24BDAC7A8](v6, v7);
  v10 = (char *)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v8, v11);
  v14 = (char *)&v76 - v13;
  MEMORY[0x24BDAC7A8](v12, v15);
  v17 = (char *)&v76 - v16;
  v91 = type metadata accessor for ODIKnownBinding();
  v18 = *(_QWORD *)(v91 - 8);
  v20 = MEMORY[0x24BDAC7A8](v91, v19);
  v22 = (char *)&v76 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20, v23);
  v25 = (char *)&v76 - v24;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FC0C8);
  v28 = MEMORY[0x24BDAC7A8](v26, v27);
  v90 = (char *)&v76 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28, v30);
  v93 = (int64_t *)((char *)&v76 - v31);
  v32 = *a2;
  if (*a2 == 1)
    return 0;
  v34 = *a1;
  if (*a1 == 1)
    return 1;
  v35 = *((unsigned __int8 *)a1 + 8) != 209 && *((unsigned __int8 *)a2 + 8) == 209;
  result = 1;
  if (!v35 && v34)
  {
    v79 = v22;
    v80 = v10;
    v86 = v17;
    v87 = v14;
    v36 = *(_QWORD *)(v34 + 64);
    v77 = v34 + 64;
    v37 = v34;
    v38 = 1 << *(_BYTE *)(v34 + 32);
    v39 = -1;
    if (v38 < 64)
      v39 = ~(-1 << v38);
    v40 = v39 & v36;
    v78 = (unint64_t)(v38 + 63) >> 6;
    v76 = v78 - 1;
    v81 = v37;
    result = swift_bridgeObjectRetain();
    v85 = 0;
    v42 = v90;
    v41 = v91;
    v82 = v32;
    v83 = v25;
    while (v40)
    {
      v43 = __clz(__rbit64(v40));
      v44 = (v40 - 1) & v40;
      v45 = v43 | (v85 << 6);
LABEL_15:
      v46 = *(_QWORD *)(v81 + 56);
      v47 = (_QWORD *)(*(_QWORD *)(v81 + 48) + 16 * v45);
      v48 = v47[1];
      *v42 = *v47;
      v42[1] = v48;
      v49 = v46 + *(_QWORD *)(v18 + 72) * v45;
      v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FC0D0);
      sub_20A4797C4(v49, (uint64_t)v42 + *(int *)(v50 + 48));
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v42, 0, 1, v50);
      swift_bridgeObjectRetain();
LABEL_34:
      v55 = (uint64_t)v42;
      v56 = v93;
      sub_20A459C88(v55, (uint64_t)v93, &qword_2545FC0C8);
      v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FC0D0);
      v58 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 48))(v56, 1, v57);
      v84 = v58 != 1;
      if (v58 == 1)
        goto LABEL_50;
      v92 = v44;
      v59 = *v93;
      v60 = v93[1];
      sub_20A465A70((uint64_t)v93 + *(int *)(v57 + 48), (uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for ODIKnownBinding);
      if (v32)
      {
        if (*(_QWORD *)(v32 + 16) && (v61 = sub_20A47094C(v59, v60), (v62 & 1) != 0))
        {
          v63 = (uint64_t)v86;
          sub_20A4797C4(*(_QWORD *)(v32 + 56) + *(_QWORD *)(v18 + 72) * v61, (uint64_t)v86);
          v64 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
          v64(v63, 0, 1, v41);
        }
        else
        {
          v64 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
          v63 = (uint64_t)v86;
          v64((uint64_t)v86, 1, 1, v41);
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        v64 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
        v63 = (uint64_t)v86;
        v64((uint64_t)v86, 1, 1, v41);
      }
      v65 = (uint64_t)v87;
      v66 = v18;
      sub_20A4797C4((uint64_t)v25, (uint64_t)v87);
      v64(v65, 0, 1, v41);
      v67 = v41;
      v68 = v88;
      v69 = v88 + *(int *)(v89 + 48);
      sub_20A47D62C(v63, v88, &qword_2545FA938);
      sub_20A47D62C(v65, v69, &qword_2545FA938);
      v70 = v66;
      v71 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48);
      if (v71(v68, 1, v67) == 1)
      {
        sub_20A44CE2C(v65, &qword_2545FA938);
        sub_20A44CE2C(v63, &qword_2545FA938);
        sub_20A465AB4((uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for ODIKnownBinding);
        if (v71(v69, 1, v67) != 1)
          goto LABEL_49;
        result = sub_20A44CE2C(v68, &qword_2545FA938);
        v42 = v90;
        v41 = v91;
        v18 = v70;
        v32 = v82;
        v25 = v83;
        v40 = v92;
      }
      else
      {
        v72 = (uint64_t)v80;
        sub_20A47D62C(v68, (uint64_t)v80, &qword_2545FA938);
        if (v71(v69, 1, v67) == 1)
        {
          sub_20A44CE2C((uint64_t)v87, &qword_2545FA938);
          sub_20A44CE2C((uint64_t)v86, &qword_2545FA938);
          sub_20A465AB4((uint64_t)v83, (uint64_t (*)(_QWORD))type metadata accessor for ODIKnownBinding);
          sub_20A465AB4(v72, (uint64_t (*)(_QWORD))type metadata accessor for ODIKnownBinding);
LABEL_49:
          sub_20A44CE2C(v68, &qword_2545FC318);
LABEL_50:
          swift_release();
          return v84;
        }
        v73 = (uint64_t)v79;
        sub_20A465A70(v69, (uint64_t)v79, (uint64_t (*)(_QWORD))type metadata accessor for ODIKnownBinding);
        sub_20A582408(v72, v73);
        v75 = v74;
        sub_20A465AB4(v73, (uint64_t (*)(_QWORD))type metadata accessor for ODIKnownBinding);
        sub_20A44CE2C((uint64_t)v87, &qword_2545FA938);
        sub_20A44CE2C((uint64_t)v86, &qword_2545FA938);
        v25 = v83;
        sub_20A465AB4((uint64_t)v83, (uint64_t (*)(_QWORD))type metadata accessor for ODIKnownBinding);
        sub_20A465AB4(v72, (uint64_t (*)(_QWORD))type metadata accessor for ODIKnownBinding);
        result = sub_20A44CE2C(v68, &qword_2545FA938);
        v42 = v90;
        v41 = v91;
        v18 = v70;
        v32 = v82;
        v40 = v92;
        if ((v75 & 1) == 0)
          goto LABEL_50;
      }
    }
    v51 = v85 + 1;
    if (__OFADD__(v85, 1))
    {
      __break(1u);
      goto LABEL_53;
    }
    if (v51 >= v78)
    {
LABEL_33:
      v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_2545FC0D0);
      (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v42, 1, 1, v54);
      v44 = 0;
      goto LABEL_34;
    }
    v52 = *(_QWORD *)(v77 + 8 * v51);
    if (!v52)
    {
      v53 = v85 + 2;
      ++v85;
      if (v51 + 1 >= v78)
        goto LABEL_33;
      v52 = *(_QWORD *)(v77 + 8 * v53);
      if (!v52)
      {
        v85 = v51 + 1;
        if (v51 + 2 >= v78)
          goto LABEL_33;
        v52 = *(_QWORD *)(v77 + 8 * (v51 + 2));
        if (v52)
        {
          v51 += 2;
          goto LABEL_19;
        }
        v53 = v51 + 3;
        v85 = v51 + 2;
        if (v51 + 3 >= v78)
          goto LABEL_33;
        v52 = *(_QWORD *)(v77 + 8 * v53);
        if (!v52)
        {
          while (1)
          {
            v51 = v53 + 1;
            if (__OFADD__(v53, 1))
              break;
            if (v51 >= v78)
            {
              v85 = v76;
              goto LABEL_33;
            }
            v52 = *(_QWORD *)(v77 + 8 * v51);
            ++v53;
            if (v52)
              goto LABEL_19;
          }
LABEL_53:
          __break(1u);
          return result;
        }
      }
      v51 = v53;
    }
LABEL_19:
    v44 = (v52 - 1) & v52;
    v45 = __clz(__rbit64(v52)) + (v51 << 6);
    v85 = v51;
    goto LABEL_15;
  }
  return result;
}

uint64_t sub_20A591440(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  unsigned __int8 v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  unsigned __int8 v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  unsigned __int8 v34;
  uint64_t v35;
  uint64_t v36;
  unsigned __int8 v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  unsigned __int8 v41;
  uint64_t v42;
  uint64_t v43;
  unsigned __int8 v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  unsigned __int8 v48;
  uint64_t v49;
  uint64_t v50;
  unsigned __int8 v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  unsigned __int8 v55;
  uint64_t v56;
  uint64_t v57;
  unsigned __int8 v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  unsigned __int8 v62;
  uint64_t v63;
  uint64_t v64;
  unsigned __int8 v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  unsigned __int8 v69;
  uint64_t v70;
  uint64_t v71;
  unsigned __int8 v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  unsigned __int8 v76;
  uint64_t v77;
  uint64_t v78;
  unsigned __int8 v79;
  uint64_t v80;
  char v81;
  char v82;
  uint64_t v84;
  unsigned __int8 v85;
  uint64_t v86;
  uint64_t v87;
  unsigned __int8 v88;
  uint64_t v89;
  char v90;
  _QWORD v91[35];
  unsigned __int8 v92;
  _BYTE v93[264];
  uint64_t v94;
  uint64_t v95;
  unsigned __int8 v96;
  _BYTE v97[240];
  uint64_t v98;
  uint64_t v99;
  unsigned __int8 v100;
  _BYTE v101[240];
  uint64_t v102;
  uint64_t v103;
  unsigned __int8 v104;
  _BYTE v105[216];
  uint64_t v106;
  uint64_t v107;
  unsigned __int8 v108;
  _BYTE v109[216];
  uint64_t v110;
  uint64_t v111;
  unsigned __int8 v112;
  _BYTE v113[192];
  uint64_t v114;
  uint64_t v115;
  unsigned __int8 v116;
  _BYTE v117[192];
  uint64_t v118;
  uint64_t v119;
  unsigned __int8 v120;
  _BYTE v121[168];
  uint64_t v122;
  uint64_t v123;
  unsigned __int8 v124;
  _BYTE v125[168];
  uint64_t v126;
  uint64_t v127;
  unsigned __int8 v128;
  _BYTE v129[144];
  uint64_t v130;
  uint64_t v131;
  unsigned __int8 v132;
  _BYTE v133[144];
  uint64_t v134;
  uint64_t v135;
  unsigned __int8 v136;
  _BYTE v137[120];
  uint64_t v138;
  uint64_t v139;
  unsigned __int8 v140;
  _BYTE v141[120];
  uint64_t v142;
  uint64_t v143;
  unsigned __int8 v144;
  _BYTE v145[96];
  uint64_t v146;
  uint64_t v147;
  unsigned __int8 v148;
  _QWORD v149[14];
  unsigned __int8 v150;
  _QWORD v151[11];
  unsigned __int8 v152;
  _QWORD v153[11];
  unsigned __int8 v154;
  _QWORD v155[8];
  unsigned __int8 v156;
  _QWORD v157[8];
  unsigned __int8 v158;
  _QWORD v159[5];
  unsigned __int8 v160;
  _QWORD v161[5];
  unsigned __int8 v162;
  _QWORD v163[2];
  unsigned __int8 v164;
  _BYTE v165[288];
  _BYTE v166[288];
  _QWORD v167[2];
  unsigned __int8 v168;

  v2 = MEMORY[0x24BDAC7A8](a1, a2);
  v4 = v3;
  sub_20A459C88(v2, (uint64_t)v165, &qword_2545FBBD8);
  sub_20A459C88(v4, (uint64_t)v166, &qword_2545FBBD8);
  sub_20A459C88((uint64_t)v166, (uint64_t)v167, &qword_2545FBBD8);
  if (sub_20A459CCC((uint64_t)v167) == 1)
  {
    v5 = 0;
    v6 = 0;
    v7 = 1;
  }
  else
  {
    v5 = v167[0];
    v7 = v167[1];
    v6 = v168;
    swift_bridgeObjectRetain();
  }
  sub_20A459C88((uint64_t)v165, (uint64_t)v163, &qword_2545FBBD8);
  if (sub_20A459CCC((uint64_t)v163) == 1)
  {
    v8 = 0;
    v9 = 0;
    v10 = 1;
  }
  else
  {
    v8 = v163[0];
    v10 = v163[1];
    v9 = v164;
    swift_bridgeObjectRetain();
  }
  v11 = sub_20A53D37C(v5, v7, v6, v8, v10, v9);
  sub_20A59B8F4(v8, v10);
  sub_20A59B8F4(v5, v7);
  if ((v11 & 1) != 0)
    goto LABEL_78;
  sub_20A459C88((uint64_t)v166, (uint64_t)v161, &qword_2545FBBD8);
  if (sub_20A459CCC((uint64_t)v161) == 1)
  {
    v12 = 0;
    v13 = 0;
    v14 = 1;
  }
  else
  {
    v12 = v161[3];
    v14 = v161[4];
    v13 = v162;
    swift_bridgeObjectRetain();
  }
  sub_20A459C88((uint64_t)v165, (uint64_t)v159, &qword_2545FBBD8);
  if (sub_20A459CCC((uint64_t)v159) == 1)
  {
    v15 = 0;
    v16 = 0;
    v17 = 1;
  }
  else
  {
    v15 = v159[3];
    v17 = v159[4];
    v16 = v160;
    swift_bridgeObjectRetain();
  }
  v18 = sub_20A53D37C(v12, v14, v13, v15, v17, v16);
  sub_20A59B8F4(v15, v17);
  sub_20A59B8F4(v12, v14);
  if ((v18 & 1) != 0)
    goto LABEL_78;
  sub_20A459C88((uint64_t)v166, (uint64_t)v157, &qword_2545FBBD8);
  if (sub_20A459CCC((uint64_t)v157) == 1)
  {
    v19 = 0;
    v20 = 0;
    v21 = 1;
  }
  else
  {
    v19 = v157[6];
    v21 = v157[7];
    v20 = v158;
    swift_bridgeObjectRetain();
  }
  sub_20A459C88((uint64_t)v165, (uint64_t)v155, &qword_2545FBBD8);
  if (sub_20A459CCC((uint64_t)v155) == 1)
  {
    v22 = 0;
    v23 = 0;
    v24 = 1;
  }
  else
  {
    v22 = v155[6];
    v24 = v155[7];
    v23 = v156;
    swift_bridgeObjectRetain();
  }
  v25 = sub_20A53D37C(v19, v21, v20, v22, v24, v23);
  sub_20A59B8F4(v22, v24);
  sub_20A59B8F4(v19, v21);
  if ((v25 & 1) != 0)
    goto LABEL_78;
  sub_20A459C88((uint64_t)v166, (uint64_t)v153, &qword_2545FBBD8);
  if (sub_20A459CCC((uint64_t)v153) == 1)
  {
    v26 = 0;
    v27 = 0;
    v28 = 1;
  }
  else
  {
    v26 = v153[9];
    v28 = v153[10];
    v27 = v154;
    swift_bridgeObjectRetain();
  }
  sub_20A459C88((uint64_t)v165, (uint64_t)v151, &qword_2545FBBD8);
  if (sub_20A459CCC((uint64_t)v151) == 1)
  {
    v29 = 0;
    v30 = 0;
    v31 = 1;
  }
  else
  {
    v29 = v151[9];
    v31 = v151[10];
    v30 = v152;
    swift_bridgeObjectRetain();
  }
  v32 = sub_20A53D37C(v26, v28, v27, v29, v31, v30);
  sub_20A59B8F4(v29, v31);
  sub_20A59B8F4(v26, v28);
  if ((v32 & 1) != 0)
    goto LABEL_78;
  sub_20A459C88((uint64_t)v166, (uint64_t)v149, &qword_2545FBBD8);
  if (sub_20A459CCC((uint64_t)v149) == 1)
  {
    v33 = 0;
    v34 = 0;
    v35 = 1;
  }
  else
  {
    v33 = v149[12];
    v35 = v149[13];
    v34 = v150;
    swift_bridgeObjectRetain();
  }
  sub_20A459C88((uint64_t)v165, (uint64_t)v145, &qword_2545FBBD8);
  if (sub_20A459CCC((uint64_t)v145) == 1)
  {
    v36 = 0;
    v37 = 0;
    v38 = 1;
  }
  else
  {
    v36 = v146;
    v38 = v147;
    v37 = v148;
    swift_bridgeObjectRetain();
  }
  v39 = sub_20A53D37C(v33, v35, v34, v36, v38, v37);
  sub_20A59B8F4(v36, v38);
  sub_20A59B8F4(v33, v35);
  if ((v39 & 1) != 0)
    goto LABEL_78;
  sub_20A459C88((uint64_t)v166, (uint64_t)v141, &qword_2545FBBD8);
  if (sub_20A459CCC((uint64_t)v141) == 1)
  {
    v40 = 0;
    v41 = 0;
    v42 = 1;
  }
  else
  {
    v40 = v142;
    v42 = v143;
    v41 = v144;
    swift_bridgeObjectRetain();
  }
  sub_20A459C88((uint64_t)v165, (uint64_t)v137, &qword_2545FBBD8);
  if (sub_20A459CCC((uint64_t)v137) == 1)
  {
    v43 = 0;
    v44 = 0;
    v45 = 1;
  }
  else
  {
    v43 = v138;
    v45 = v139;
    v44 = v140;
    swift_bridgeObjectRetain();
  }
  v46 = sub_20A53D37C(v40, v42, v41, v43, v45, v44);
  sub_20A59B8F4(v43, v45);
  sub_20A59B8F4(v40, v42);
  if ((v46 & 1) != 0)
    goto LABEL_78;
  sub_20A459C88((uint64_t)v166, (uint64_t)v133, &qword_2545FBBD8);
  if (sub_20A459CCC((uint64_t)v133) == 1)
  {
    v47 = 0;
    v48 = 0;
    v49 = 1;
  }
  else
  {
    v47 = v134;
    v49 = v135;
    v48 = v136;
    swift_bridgeObjectRetain();
  }
  sub_20A459C88((uint64_t)v165, (uint64_t)v129, &qword_2545FBBD8);
  if (sub_20A459CCC((uint64_t)v129) == 1)
  {
    v50 = 0;
    v51 = 0;
    v52 = 1;
  }
  else
  {
    v50 = v130;
    v52 = v131;
    v51 = v132;
    swift_bridgeObjectRetain();
  }
  v53 = sub_20A53D37C(v47, v49, v48, v50, v52, v51);
  sub_20A59B8F4(v50, v52);
  sub_20A59B8F4(v47, v49);
  if ((v53 & 1) != 0)
    goto LABEL_78;
  sub_20A459C88((uint64_t)v166, (uint64_t)v125, &qword_2545FBBD8);
  if (sub_20A459CCC((uint64_t)v125) == 1)
  {
    v54 = 0;
    v55 = 0;
    v56 = 1;
  }
  else
  {
    v54 = v126;
    v56 = v127;
    v55 = v128;
    swift_bridgeObjectRetain();
  }
  sub_20A459C88((uint64_t)v165, (uint64_t)v121, &qword_2545FBBD8);
  if (sub_20A459CCC((uint64_t)v121) == 1)
  {
    v57 = 0;
    v58 = 0;
    v59 = 1;
  }
  else
  {
    v57 = v122;
    v59 = v123;
    v58 = v124;
    swift_bridgeObjectRetain();
  }
  v60 = sub_20A53D37C(v54, v56, v55, v57, v59, v58);
  sub_20A59B8F4(v57, v59);
  sub_20A59B8F4(v54, v56);
  if ((v60 & 1) != 0)
    goto LABEL_78;
  sub_20A459C88((uint64_t)v166, (uint64_t)v117, &qword_2545FBBD8);
  if (sub_20A459CCC((uint64_t)v117) == 1)
  {
    v61 = 0;
    v62 = 0;
    v63 = 1;
  }
  else
  {
    v61 = v118;
    v63 = v119;
    v62 = v120;
    swift_bridgeObjectRetain();
  }
  sub_20A459C88((uint64_t)v165, (uint64_t)v113, &qword_2545FBBD8);
  if (sub_20A459CCC((uint64_t)v113) == 1)
  {
    v64 = 0;
    v65 = 0;
    v66 = 1;
  }
  else
  {
    v64 = v114;
    v66 = v115;
    v65 = v116;
    swift_bridgeObjectRetain();
  }
  v67 = sub_20A53D37C(v61, v63, v62, v64, v66, v65);
  sub_20A59B8F4(v64, v66);
  sub_20A59B8F4(v61, v63);
  if ((v67 & 1) != 0)
    goto LABEL_78;
  sub_20A459C88((uint64_t)v166, (uint64_t)v109, &qword_2545FBBD8);
  if (sub_20A459CCC((uint64_t)v109) == 1)
  {
    v68 = 0;
    v69 = 0;
    v70 = 1;
  }
  else
  {
    v68 = v110;
    v70 = v111;
    v69 = v112;
    swift_bridgeObjectRetain();
  }
  sub_20A459C88((uint64_t)v165, (uint64_t)v105, &qword_2545FBBD8);
  if (sub_20A459CCC((uint64_t)v105) == 1)
  {
    v71 = 0;
    v72 = 0;
    v73 = 1;
  }
  else
  {
    v71 = v106;
    v73 = v107;
    v72 = v108;
    swift_bridgeObjectRetain();
  }
  v74 = sub_20A53D37C(v68, v70, v69, v71, v73, v72);
  sub_20A59B8F4(v71, v73);
  sub_20A59B8F4(v68, v70);
  if ((v74 & 1) != 0)
    goto LABEL_78;
  sub_20A459C88((uint64_t)v166, (uint64_t)v101, &qword_2545FBBD8);
  if (sub_20A459CCC((uint64_t)v101) == 1)
  {
    v75 = 0;
    v76 = 0;
    v77 = 1;
  }
  else
  {
    v75 = v102;
    v77 = v103;
    v76 = v104;
    swift_bridgeObjectRetain();
  }
  sub_20A459C88((uint64_t)v165, (uint64_t)v97, &qword_2545FBBD8);
  if (sub_20A459CCC((uint64_t)v97) == 1)
  {
    v78 = 0;
    v79 = 0;
    v80 = 1;
  }
  else
  {
    v78 = v98;
    v80 = v99;
    v79 = v100;
    swift_bridgeObjectRetain();
  }
  v81 = sub_20A53D37C(v75, v77, v76, v78, v80, v79);
  sub_20A59B8F4(v78, v80);
  sub_20A59B8F4(v75, v77);
  if ((v81 & 1) != 0)
  {
LABEL_78:
    v82 = 0;
  }
  else
  {
    sub_20A459C88((uint64_t)v166, (uint64_t)v93, &qword_2545FBBD8);
    if (sub_20A459CCC((uint64_t)v93) == 1)
    {
      v84 = 0;
      v85 = 0;
      v86 = 1;
    }
    else
    {
      v84 = v94;
      v86 = v95;
      v85 = v96;
      swift_bridgeObjectRetain();
    }
    sub_20A459C88((uint64_t)v165, (uint64_t)v91, &qword_2545FBBD8);
    if (sub_20A459CCC((uint64_t)v91) == 1)
    {
      v87 = 0;
      v88 = 0;
      v89 = 1;
    }
    else
    {
      v87 = v91[33];
      v89 = v91[34];
      v88 = v92;
      swift_bridgeObjectRetain();
    }
    v90 = sub_20A53D37C(v84, v86, v85, v87, v89, v88);
    sub_20A59B8F4(v87, v89);
    sub_20A59B8F4(v84, v86);
    v82 = v90 ^ 1;
  }
  return v82 & 1;
}

uint64_t sub_20A591F68(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int16 v8;
  uint64_t v9;
  __int16 v10;
  __int16 v11;
  __int16 v12;
  __int16 v13;
  uint64_t v14;
  __int16 v15;
  uint64_t v16;
  __int16 v17;
  char v18;
  uint64_t v20;
  __int16 v21;
  uint64_t v22;
  __int16 v23;
  uint64_t v24;
  __int16 v25;
  uint64_t v26;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v26 = a1[3];
  v25 = *((_WORD *)a1 + 16);
  v5 = *a2;
  v6 = a2[1];
  v7 = a2[2];
  v24 = a2[3];
  v8 = *((_WORD *)a2 + 16);
  v9 = *a2;
  if (v9 == 3)
    v10 = 3;
  else
    v10 = *a2;
  if (v2 == 3)
    v11 = 3;
  else
    v11 = v2;
  if ((sub_20A53F2B4(v10, v11) & 1) != 0
    || (v9 != 3 ? (v12 = WORD1(v5)) : (v12 = 3),
        v2 != 3 ? (v13 = WORD1(v2)) : (v13 = 3),
        (sub_20A53F2B4(v12, v13) & 1) != 0
     || (v9 != 3 ? (v14 = v6) : (v14 = 0),
         v9 != 3 ? (v15 = v7 & 0xFF01) : (v15 = -9728),
         v2 != 3 ? (v16 = v3) : (v16 = 0),
         v2 != 3 ? (v17 = v4 & 0xFF01) : (v17 = -9728),
         (sub_20A53E340(v14, v15, v16, v17) & 1) != 0)))
  {
    v18 = 0;
  }
  else
  {
    if (v9 == 3)
      v20 = 0;
    else
      v20 = v24;
    if (v9 == 3)
      v21 = -9728;
    else
      v21 = v8 & 0xFF01;
    if (v2 == 3)
      v22 = 0;
    else
      v22 = v26;
    if (v2 == 3)
      v23 = -9728;
    else
      v23 = v25 & 0xFF01;
    v18 = sub_20A53E340(v20, v21, v22, v23) ^ 1;
  }
  return v18 & 1;
}

uint64_t sub_20A59207C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int16 v4;
  uint64_t v5;
  __int16 v6;
  uint64_t v7;
  __int16 v8;
  uint64_t v9;
  __int16 v10;
  uint64_t v11;
  __int16 v12;
  uint64_t v13;
  __int16 v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  __int16 v18;
  uint64_t v19;
  __int16 v20;
  uint64_t v21;
  __int16 v22;
  uint64_t v23;
  __int16 v24;
  uint64_t v25;
  __int16 v26;
  uint64_t v27;
  __int16 v28;
  uint64_t v29;
  __int16 v30;
  char v31;
  uint64_t v33;
  __int16 v34;
  uint64_t v35;
  __int16 v36;
  _QWORD v37[15];
  unsigned __int8 v38;
  unsigned __int8 v39;
  _BYTE v40[112];
  uint64_t v41;
  unsigned __int8 v42;
  unsigned __int8 v43;
  _BYTE v44[96];
  uint64_t v45;
  unsigned __int8 v46;
  unsigned __int8 v47;
  _BYTE v48[96];
  uint64_t v49;
  unsigned __int8 v50;
  unsigned __int8 v51;
  _BYTE v52[80];
  uint64_t v53;
  unsigned __int8 v54;
  unsigned __int8 v55;
  _BYTE v56[80];
  uint64_t v57;
  unsigned __int8 v58;
  unsigned __int8 v59;
  _BYTE v60[64];
  uint64_t v61;
  unsigned __int8 v62;
  unsigned __int8 v63;
  _BYTE v64[64];
  uint64_t v65;
  unsigned __int8 v66;
  unsigned __int8 v67;
  _BYTE v68[48];
  uint64_t v69;
  unsigned __int8 v70;
  unsigned __int8 v71;
  _BYTE v72[48];
  uint64_t v73;
  unsigned __int8 v74;
  unsigned __int8 v75;
  _BYTE v76[32];
  uint64_t v77;
  unsigned __int8 v78;
  unsigned __int8 v79;
  _BYTE v80[32];
  uint64_t v81;
  unsigned __int8 v82;
  unsigned __int8 v83;
  _BYTE v84[16];
  uint64_t v85;
  unsigned __int8 v86;
  unsigned __int8 v87;
  _BYTE v88[16];
  uint64_t v89;
  unsigned __int8 v90;
  unsigned __int8 v91;
  uint64_t v92;
  unsigned __int8 v93;
  unsigned __int8 v94;
  _BYTE v95[128];
  _BYTE v96[128];
  uint64_t v97;
  unsigned __int8 v98;
  unsigned __int8 v99;

  sub_20A459C88(a1, (uint64_t)v95, &qword_2545FBBE0);
  sub_20A459C88(a2, (uint64_t)v96, &qword_2545FBBE0);
  sub_20A459C88((uint64_t)v96, (uint64_t)&v97, &qword_2545FBBE0);
  if (sub_20A59B8D4((uint64_t)&v97) == 1)
  {
    v3 = 0;
    v4 = -9728;
  }
  else
  {
    v3 = v97;
    v4 = v98 | (v99 << 8);
  }
  sub_20A459C88((uint64_t)v95, (uint64_t)&v92, &qword_2545FBBE0);
  if (sub_20A59B8D4((uint64_t)&v92) == 1)
  {
    v5 = 0;
    v6 = -9728;
  }
  else
  {
    v5 = v92;
    v6 = v93 | (v94 << 8);
  }
  if ((sub_20A540254(v3, v4, v5, v6) & 1) != 0)
    goto LABEL_50;
  sub_20A459C88((uint64_t)v96, (uint64_t)v88, &qword_2545FBBE0);
  if (sub_20A59B8D4((uint64_t)v88) == 1)
  {
    v7 = 0;
    v8 = -9728;
  }
  else
  {
    v7 = v89;
    v8 = v90 | (v91 << 8);
  }
  sub_20A459C88((uint64_t)v95, (uint64_t)v84, &qword_2545FBBE0);
  if (sub_20A59B8D4((uint64_t)v84) == 1)
  {
    v9 = 0;
    v10 = -9728;
  }
  else
  {
    v9 = v85;
    v10 = v86 | (v87 << 8);
  }
  if ((sub_20A540254(v7, v8, v9, v10) & 1) != 0)
    goto LABEL_50;
  sub_20A459C88((uint64_t)v96, (uint64_t)v80, &qword_2545FBBE0);
  if (sub_20A59B8D4((uint64_t)v80) == 1)
  {
    v11 = 0;
    v12 = -9728;
  }
  else
  {
    v11 = v81;
    v12 = v82 | (v83 << 8);
  }
  sub_20A459C88((uint64_t)v95, (uint64_t)v76, &qword_2545FBBE0);
  if (sub_20A59B8D4((uint64_t)v76) == 1)
  {
    v13 = 0;
    v14 = -9728;
  }
  else
  {
    v13 = v77;
    v14 = v78 | (v79 << 8);
  }
  if ((sub_20A540254(v11, v12, v13, v14) & 1) != 0)
    goto LABEL_50;
  sub_20A459C88((uint64_t)v96, (uint64_t)v72, &qword_2545FBBE0);
  if (sub_20A59B8D4((uint64_t)v72) == 1)
  {
    v15 = 0;
    v16 = -9728;
  }
  else
  {
    v15 = v73;
    v16 = v74 | (v75 << 8);
  }
  sub_20A459C88((uint64_t)v95, (uint64_t)v68, &qword_2545FBBE0);
  if (sub_20A59B8D4((uint64_t)v68) == 1)
  {
    v17 = 0;
    v18 = -9728;
  }
  else
  {
    v17 = v69;
    v18 = v70 | (v71 << 8);
  }
  if ((sub_20A540254(v15, v16, v17, v18) & 1) != 0)
    goto LABEL_50;
  sub_20A459C88((uint64_t)v96, (uint64_t)v64, &qword_2545FBBE0);
  if (sub_20A59B8D4((uint64_t)v64) == 1)
  {
    v19 = 0;
    v20 = -9728;
  }
  else
  {
    v19 = v65;
    v20 = v66 | (v67 << 8);
  }
  sub_20A459C88((uint64_t)v95, (uint64_t)v60, &qword_2545FBBE0);
  if (sub_20A59B8D4((uint64_t)v60) == 1)
  {
    v21 = 0;
    v22 = -9728;
  }
  else
  {
    v21 = v61;
    v22 = v62 | (v63 << 8);
  }
  if ((sub_20A540254(v19, v20, v21, v22) & 1) != 0)
    goto LABEL_50;
  sub_20A459C88((uint64_t)v96, (uint64_t)v56, &qword_2545FBBE0);
  if (sub_20A59B8D4((uint64_t)v56) == 1)
  {
    v23 = 0;
    v24 = -9728;
  }
  else
  {
    v23 = v57;
    v24 = v58 | (v59 << 8);
  }
  sub_20A459C88((uint64_t)v95, (uint64_t)v52, &qword_2545FBBE0);
  if (sub_20A59B8D4((uint64_t)v52) == 1)
  {
    v25 = 0;
    v26 = -9728;
  }
  else
  {
    v25 = v53;
    v26 = v54 | (v55 << 8);
  }
  if ((sub_20A540254(v23, v24, v25, v26) & 1) != 0)
    goto LABEL_50;
  sub_20A459C88((uint64_t)v96, (uint64_t)v48, &qword_2545FBBE0);
  if (sub_20A59B8D4((uint64_t)v48) == 1)
  {
    v27 = 0;
    v28 = -9728;
  }
  else
  {
    v27 = v49;
    v28 = v50 | (v51 << 8);
  }
  sub_20A459C88((uint64_t)v95, (uint64_t)v44, &qword_2545FBBE0);
  if (sub_20A59B8D4((uint64_t)v44) == 1)
  {
    v29 = 0;
    v30 = -9728;
  }
  else
  {
    v29 = v45;
    v30 = v46 | (v47 << 8);
  }
  if ((sub_20A540254(v27, v28, v29, v30) & 1) != 0)
  {
LABEL_50:
    v31 = 0;
  }
  else
  {
    sub_20A459C88((uint64_t)v96, (uint64_t)v40, &qword_2545FBBE0);
    if (sub_20A59B8D4((uint64_t)v40) == 1)
    {
      v33 = 0;
      v34 = -9728;
    }
    else
    {
      v33 = v41;
      v34 = v42 | (v43 << 8);
    }
    sub_20A459C88((uint64_t)v95, (uint64_t)v37, &qword_2545FBBE0);
    if (sub_20A59B8D4((uint64_t)v37) == 1)
    {
      v35 = 0;
      v36 = -9728;
    }
    else
    {
      v35 = v37[14];
      v36 = v38 | (v39 << 8);
    }
    v31 = sub_20A540254(v33, v34, v35, v36) ^ 1;
  }
  return v31 & 1;
}

uint64_t _s17CoreODIEssentials16ArmandDeviceDataV21isLessCompleteOrEqual3lhs2toSbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  unsigned __int8 *v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  char v18;
  char v19;
  char v20;
  char v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int16 v26;
  uint64_t v27;
  __int16 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  unsigned __int8 v48;
  uint64_t v49;
  unsigned __int8 v50;
  uint64_t v51;
  __int16 v52;
  __int16 v53;
  __int16 v54;
  __int16 v55;
  uint64_t v56;
  unsigned __int8 v57;
  uint64_t v58;
  uint64_t v59;
  unsigned __int8 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __int16 v84;
  uint64_t v85;
  __int16 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  __int16 v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  __int16 v99;
  uint64_t v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int16 v104;
  __int128 v105;
  __int16 v106;
  __int16 v107;
  __int16 v108;
  __int16 v109;
  __int128 v110;
  __int16 v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char v115;
  uint64_t v116;
  uint64_t v117;
  __int128 v118;
  __int128 v119;
  uint64_t v120;
  __int128 v121;
  uint64_t v122;
  unsigned __int8 v123;
  uint64_t v124;
  uint64_t v125;
  unsigned __int8 v126;
  uint64_t v127;
  __int128 v128;
  uint64_t v129;
  uint64_t v130;
  __int128 v131;
  __int128 v132;
  uint64_t v133;
  uint64_t v134;
  char v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  int v146;
  int v147;
  uint64_t v148;
  __int16 v149;
  __int16 v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  __int128 v158;
  unsigned __int8 v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  unsigned __int8 v163;
  unsigned __int8 v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  _BYTE v170[288];
  _BYTE v171[288];
  _OWORD v172[18];
  _OWORD v173[18];
  _BYTE __dst[281];
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;
  _OWORD v181[2];
  _BYTE __src[281];
  __int128 v183;
  __int128 v184;
  __int128 v185;
  __int128 v186;
  __int128 v187;
  __int128 v188;
  _OWORD v189[3];

  v158 = *(_OWORD *)(a1 + 8);
  v4 = (unsigned __int8 *)(a2 + 408);
  v159 = *(_BYTE *)(a1 + 24);
  v168 = *(_QWORD *)(a1 + 32);
  v167 = *(_QWORD *)(a1 + 40);
  v169 = *(unsigned __int8 *)(a1 + 48);
  v166 = *(_QWORD *)(a1 + 56);
  v165 = *(_QWORD *)(a1 + 64);
  v164 = *(_BYTE *)(a1 + 72);
  v142 = *(_QWORD *)(a1 + 80);
  v141 = *(_QWORD *)(a1 + 88);
  v145 = *(unsigned __int8 *)(a1 + 96);
  v140 = *(_QWORD *)(a1 + 104);
  v139 = *(_QWORD *)(a1 + 112);
  v144 = *(unsigned __int8 *)(a1 + 120);
  v138 = *(_QWORD *)(a1 + 128);
  v137 = *(_QWORD *)(a1 + 136);
  v143 = *(unsigned __int8 *)(a1 + 144);
  v151 = *(_QWORD *)(a1 + 152);
  v150 = *(unsigned __int8 *)(a1 + 160);
  v149 = *(unsigned __int8 *)(a1 + 161);
  v71 = *(unsigned __int8 *)(a1 + 424);
  v70 = *(unsigned __int8 *)(a1 + 440);
  v100 = *(unsigned __int8 *)(a1 + 456);
  v99 = *(unsigned __int8 *)(a1 + 472);
  v125 = *(_QWORD *)(a1 + 168);
  v127 = *(_QWORD *)(a1 + 176);
  v126 = *(_BYTE *)(a1 + 184);
  v133 = *(_QWORD *)(a1 + 192);
  v117 = *(unsigned __int8 *)(a1 + 200);
  v116 = *(unsigned __int8 *)(a1 + 201);
  v118 = *(_OWORD *)(a1 + 208);
  *(_QWORD *)&v119 = *(unsigned __int8 *)(a1 + 224);
  *((_QWORD *)&v119 + 1) = *(_QWORD *)(a1 + 232);
  v134 = *(_QWORD *)(a1 + 240);
  v135 = *(_BYTE *)(a1 + 248);
  v101 = *(_OWORD *)(a1 + 256);
  *(_QWORD *)&v102 = *(unsigned __int8 *)(a1 + 272);
  *((_QWORD *)&v102 + 1) = *(_QWORD *)(a1 + 280);
  *(_QWORD *)&v103 = *(_QWORD *)(a1 + 288);
  *((_QWORD *)&v103 + 1) = *(unsigned __int8 *)(a1 + 296);
  v105 = *(_OWORD *)(a1 + 304);
  v111 = *(unsigned __int8 *)(a1 + 320);
  v108 = *(unsigned __int8 *)(a1 + 321);
  v104 = *(unsigned __int8 *)(a1 + 322);
  v59 = *(_QWORD *)(a1 + 328);
  v61 = *(_QWORD *)(a1 + 336);
  v60 = *(_BYTE *)(a1 + 344);
  v54 = *(unsigned __int8 *)(a1 + 346);
  v55 = *(unsigned __int8 *)(a1 + 345);
  v49 = *(_QWORD *)(a1 + 352);
  v51 = *(_QWORD *)(a1 + 360);
  v50 = *(_BYTE *)(a1 + 368);
  v93 = *(_QWORD *)(a1 + 376);
  v92 = *(_QWORD *)(a1 + 384);
  v90 = *(unsigned __int8 *)(a1 + 392);
  v66 = *(unsigned __int8 *)(a1 + 393);
  v68 = *(unsigned __int8 *)(a1 + 394);
  v91 = *(_QWORD *)(a1 + 400);
  v67 = *(unsigned __int8 *)(a1 + 408);
  v65 = *(unsigned __int8 *)(a1 + 409);
  v69 = *(_QWORD *)(a1 + 416);
  v64 = *(unsigned __int8 *)(a1 + 425);
  v95 = *(_QWORD *)(a1 + 432);
  v63 = *(unsigned __int8 *)(a1 + 441);
  v97 = *(_QWORD *)(a1 + 448);
  v96 = *(unsigned __int8 *)(a1 + 457);
  v98 = *(_QWORD *)(a1 + 464);
  v94 = *(unsigned __int8 *)(a1 + 473);
  v43 = *(_QWORD *)(a1 + 480);
  v42 = *(_BYTE *)(a1 + 488);
  memcpy(__dst, (const void *)(a1 + 496), sizeof(__dst));
  v23 = *(unsigned __int8 *)(a1 + 784);
  v46 = *(unsigned __int8 *)(a1 + 785);
  v24 = *(unsigned __int8 *)(a1 + 786);
  v25 = *(unsigned __int8 *)(a1 + 787);
  v29 = *(unsigned __int8 *)(a1 + 800);
  v30 = *(_QWORD *)(a1 + 792);
  v27 = *(unsigned __int8 *)(a1 + 801);
  v31 = *(_QWORD *)(a1 + 808);
  v28 = *(unsigned __int8 *)(a1 + 816);
  v26 = *(unsigned __int8 *)(a1 + 817);
  v5 = *(_OWORD *)(a1 + 904);
  v179 = *(_OWORD *)(a1 + 888);
  v180 = v5;
  v181[0] = *(_OWORD *)(a1 + 920);
  *(_OWORD *)((char *)v181 + 10) = *(_OWORD *)(a1 + 930);
  v6 = *(_OWORD *)(a1 + 840);
  v175 = *(_OWORD *)(a1 + 824);
  v176 = v6;
  v7 = *(_OWORD *)(a1 + 872);
  v177 = *(_OWORD *)(a1 + 856);
  v178 = v7;
  v9 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  v10 = *(_BYTE *)(a2 + 24);
  v12 = *(_QWORD *)(a2 + 32);
  v11 = *(_QWORD *)(a2 + 40);
  v13 = *(unsigned __int8 *)(a2 + 48);
  v14 = *(_QWORD *)(a2 + 56);
  v162 = *(_QWORD *)(a2 + 64);
  v163 = *(_BYTE *)(a2 + 72);
  v161 = *(_QWORD *)(a2 + 80);
  v160 = *(_QWORD *)(a2 + 88);
  v136 = *(unsigned __int8 *)(a2 + 96);
  v156 = *(_QWORD *)(a2 + 104);
  v155 = *(_QWORD *)(a2 + 112);
  v157 = *(unsigned __int8 *)(a2 + 120);
  v154 = *(_QWORD *)(a2 + 128);
  v153 = *(_QWORD *)(a2 + 136);
  v89 = v4[16];
  v88 = v4[32];
  v87 = v4[48];
  v86 = v4[64];
  v152 = *(unsigned __int8 *)(a2 + 144);
  v148 = *(_QWORD *)(a2 + 152);
  v147 = *(unsigned __int8 *)(a2 + 160);
  v146 = *(unsigned __int8 *)(a2 + 161);
  v122 = *(_QWORD *)(a2 + 168);
  v124 = *(_QWORD *)(a2 + 176);
  v123 = *(_BYTE *)(a2 + 184);
  v130 = *(_QWORD *)(a2 + 192);
  v113 = *(unsigned __int8 *)(a2 + 200);
  v112 = *(unsigned __int8 *)(a2 + 201);
  v131 = *(_OWORD *)(a2 + 208);
  *(_QWORD *)&v132 = *(unsigned __int8 *)(a2 + 224);
  *((_QWORD *)&v132 + 1) = *(_QWORD *)(a2 + 232);
  v114 = *(_QWORD *)(a2 + 240);
  v115 = *(_BYTE *)(a2 + 248);
  v128 = *(_OWORD *)(a2 + 256);
  v129 = *(unsigned __int8 *)(a2 + 272);
  v120 = *(_QWORD *)(a2 + 280);
  *(_QWORD *)&v121 = *(_QWORD *)(a2 + 288);
  *((_QWORD *)&v121 + 1) = *(unsigned __int8 *)(a2 + 296);
  v110 = *(_OWORD *)(a2 + 304);
  v109 = *(unsigned __int8 *)(a2 + 320);
  v106 = *(unsigned __int8 *)(a2 + 321);
  v107 = *(unsigned __int8 *)(a2 + 322);
  v56 = *(_QWORD *)(a2 + 328);
  v58 = *(_QWORD *)(a2 + 336);
  v57 = *(_BYTE *)(a2 + 344);
  v52 = *(unsigned __int8 *)(a2 + 345);
  v53 = *(unsigned __int8 *)(a2 + 346);
  v47 = *(_OWORD *)(a2 + 352);
  v48 = *(_BYTE *)(a2 + 368);
  v72 = *(unsigned __int8 *)(a2 + 392);
  v62 = *(unsigned __int8 *)(a2 + 393);
  v73 = *(unsigned __int8 *)(a2 + 394);
  v74 = *(_QWORD *)(a2 + 376);
  v76 = *(_QWORD *)(a2 + 400);
  v77 = *(_QWORD *)(a2 + 384);
  *(_QWORD *)&v78 = *(unsigned __int8 *)(a2 + 408);
  v75 = *(unsigned __int8 *)(a2 + 409);
  *((_QWORD *)&v78 + 1) = *(_QWORD *)(a2 + 416);
  v79 = *(unsigned __int8 *)(a2 + 425);
  v80 = *(_QWORD *)(a2 + 432);
  v81 = *(unsigned __int8 *)(a2 + 441);
  v82 = *(_QWORD *)(a2 + 448);
  v83 = *(unsigned __int8 *)(a2 + 457);
  v85 = *(_QWORD *)(a2 + 464);
  v84 = *(unsigned __int8 *)(a2 + 473);
  v40 = *(_QWORD *)(a2 + 480);
  v41 = *(_BYTE *)(a2 + 488);
  memcpy(__src, (const void *)(a2 + 496), sizeof(__src));
  v45 = *(unsigned __int8 *)(a2 + 784);
  v44 = *(unsigned __int8 *)(a2 + 785);
  v38 = *(unsigned __int8 *)(a2 + 786);
  v39 = *(unsigned __int8 *)(a2 + 787);
  v36 = *(_QWORD *)(a2 + 792);
  v37 = *(unsigned __int8 *)(a2 + 800);
  v35 = *(unsigned __int8 *)(a2 + 801);
  v34 = *(_QWORD *)(a2 + 808);
  v32 = *(unsigned __int8 *)(a2 + 817);
  v33 = *(unsigned __int8 *)(a2 + 816);
  v15 = *(_OWORD *)(a2 + 904);
  v187 = *(_OWORD *)(a2 + 888);
  v188 = v15;
  v189[0] = *(_OWORD *)(a2 + 920);
  *(_OWORD *)((char *)v189 + 10) = *(_OWORD *)(a2 + 930);
  v16 = *(_OWORD *)(a2 + 840);
  v183 = *(_OWORD *)(a2 + 824);
  v184 = v16;
  v17 = *(_OWORD *)(a2 + 872);
  v185 = *(_OWORD *)(a2 + 856);
  v186 = v17;
  if ((sub_20A539644(v158, *((uint64_t *)&v158 + 1), v159, v9, v8, v10) & 1) == 0
    || (sub_20A539644(v168, v167, v169, v12, v11, v13) & 1) == 0
    || (sub_20A539644(v166, v165, v164, v14, v162, v163) & 1) == 0)
  {
    v173[0] = v158;
    *(_QWORD *)&v173[1] = v159;
    *((_QWORD *)&v173[1] + 1) = v168;
    *(_QWORD *)&v173[2] = v167;
    *((_QWORD *)&v173[2] + 1) = v169;
    *(_QWORD *)&v173[3] = v166;
    *((_QWORD *)&v173[3] + 1) = v165;
    LOBYTE(v173[4]) = v164;
    *(_QWORD *)&v172[0] = v9;
    *((_QWORD *)&v172[0] + 1) = v8;
    *(_QWORD *)&v172[1] = v10;
    *((_QWORD *)&v172[1] + 1) = v12;
    *(_QWORD *)&v172[2] = v11;
    *((_QWORD *)&v172[2] + 1) = v13;
    *(_QWORD *)&v172[3] = v14;
    *((_QWORD *)&v172[3] + 1) = v162;
    LOBYTE(v172[4]) = v163;
    if ((sub_20A590024((uint64_t)v173, (uint64_t)v172) & 1) == 0)
      goto LABEL_38;
  }
  if ((sub_20A539644(v142, v141, v145, v161, v160, v136) & 1) == 0
    || (sub_20A539644(v140, v139, v144, v156, v155, v157) & 1) == 0
    || (sub_20A539644(v138, v137, v143, v154, v153, v152) & 1) == 0
    || (sub_20A53B50C(v151, v150 | (unsigned __int16)(v149 << 8), v148, v147 | (v146 << 8)) & 1) == 0)
  {
    *(_QWORD *)&v173[0] = v142;
    *((_QWORD *)&v173[0] + 1) = v141;
    *(_QWORD *)&v173[1] = v145;
    *((_QWORD *)&v173[1] + 1) = v140;
    *(_QWORD *)&v173[2] = v139;
    *((_QWORD *)&v173[2] + 1) = v144;
    *(_QWORD *)&v173[3] = v138;
    *((_QWORD *)&v173[3] + 1) = v137;
    *(_QWORD *)&v173[4] = v143;
    *((_QWORD *)&v173[4] + 1) = v151;
    LOWORD(v173[5]) = v150 | (v149 << 8);
    *(_QWORD *)&v172[0] = v161;
    *((_QWORD *)&v172[0] + 1) = v160;
    *(_QWORD *)&v172[1] = v136;
    *((_QWORD *)&v172[1] + 1) = v156;
    *(_QWORD *)&v172[2] = v155;
    *((_QWORD *)&v172[2] + 1) = v157;
    *(_QWORD *)&v172[3] = v154;
    *((_QWORD *)&v172[3] + 1) = v153;
    *(_QWORD *)&v172[4] = v152;
    *((_QWORD *)&v172[4] + 1) = v148;
    LOWORD(v172[5]) = v147 | ((_WORD)v146 << 8);
    if ((sub_20A59026C((uint64_t)v173, (uint64_t)v172) & 1) == 0)
      goto LABEL_38;
  }
  *(_QWORD *)&v173[0] = v125;
  *((_QWORD *)&v173[0] + 1) = v127;
  LOBYTE(v173[1]) = v126;
  *(_QWORD *)&v172[0] = v122;
  *((_QWORD *)&v172[0] + 1) = v124;
  LOBYTE(v172[1]) = v123;
  if ((sub_20A584678((uint64_t *)v173, (uint64_t)v172) & 1) == 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v18 = sub_20A53D37C(v122, v124, v123, v125, v127, v126);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v18 & 1) != 0)
      goto LABEL_38;
  }
  *(_QWORD *)&v173[0] = v133;
  BYTE8(v173[0]) = v117;
  BYTE9(v173[0]) = v116;
  v173[1] = v118;
  LOBYTE(v173[2]) = v119;
  *((_QWORD *)&v173[2] + 1) = *((_QWORD *)&v119 + 1);
  *(_QWORD *)&v173[3] = v134;
  BYTE8(v173[3]) = v135;
  *(_QWORD *)&v172[0] = v130;
  BYTE8(v172[0]) = v113;
  BYTE9(v172[0]) = v112;
  v172[1] = v131;
  LOBYTE(v172[2]) = v132;
  *((_QWORD *)&v172[2] + 1) = *((_QWORD *)&v132 + 1);
  *(_QWORD *)&v172[3] = v114;
  BYTE8(v172[3]) = v115;
  if ((sub_20A5827B8((uint64_t *)v173, (uint64_t)v172) & 1) == 0)
  {
    *(_QWORD *)&v173[0] = v133;
    *((_QWORD *)&v173[0] + 1) = v117 | (v116 << 8);
    v173[1] = v118;
    v173[2] = v119;
    *(_QWORD *)&v173[3] = v134;
    BYTE8(v173[3]) = v135;
    *(_QWORD *)&v172[0] = v130;
    *((_QWORD *)&v172[0] + 1) = v113 | (v112 << 8);
    v172[1] = v131;
    v172[2] = v132;
    *(_QWORD *)&v172[3] = v114;
    BYTE8(v172[3]) = v115;
    if ((sub_20A59050C((uint64_t)v173, (uint64_t)v172) & 1) == 0)
      goto LABEL_38;
  }
  if ((sub_20A539644(v101, *((uint64_t *)&v101 + 1), v102, v128, *((uint64_t *)&v128 + 1), v129) & 1) == 0
    || (sub_20A539644(*((uint64_t *)&v102 + 1), v103, BYTE8(v103), v120, v121, BYTE8(v121)) & 1) == 0
    || (sub_20A539644(v105, *((uint64_t *)&v105 + 1), v111, v110, *((uint64_t *)&v110 + 1), v109) & 1) == 0
    || (sub_20A53A5A8(v108 | (unsigned __int16)(v104 << 8), v106 | (unsigned __int16)(v107 << 8)) & 1) == 0)
  {
    v173[0] = v101;
    v173[1] = v102;
    v173[2] = v103;
    v173[3] = v105;
    BYTE2(v173[4]) = v104;
    LOWORD(v173[4]) = v111 | (v108 << 8);
    v172[0] = v128;
    *(_QWORD *)&v172[1] = v129;
    *((_QWORD *)&v172[1] + 1) = v120;
    v172[2] = v121;
    v172[3] = v110;
    BYTE2(v172[4]) = v107;
    LOWORD(v172[4]) = v109 | (v106 << 8);
    if ((sub_20A5906E4((uint64_t)v173, (uint64_t)v172) & 1) == 0)
      goto LABEL_38;
  }
  *(_QWORD *)&v173[0] = v93;
  *((_QWORD *)&v173[0] + 1) = v92;
  LOBYTE(v173[1]) = v90;
  BYTE1(v173[1]) = v66;
  BYTE2(v173[1]) = v68;
  *((_QWORD *)&v173[1] + 1) = v91;
  LOBYTE(v173[2]) = v67;
  BYTE1(v173[2]) = v65;
  *((_QWORD *)&v173[2] + 1) = v69;
  LOBYTE(v173[3]) = v71;
  BYTE1(v173[3]) = v64;
  *((_QWORD *)&v173[3] + 1) = v95;
  LOBYTE(v173[4]) = v70;
  BYTE1(v173[4]) = v63;
  *((_QWORD *)&v173[4] + 1) = v97;
  LOBYTE(v173[5]) = v100;
  BYTE1(v173[5]) = v96;
  *((_QWORD *)&v173[5] + 1) = v98;
  LOBYTE(v173[6]) = v99;
  BYTE1(v173[6]) = v94;
  *(_QWORD *)&v172[0] = v74;
  *((_QWORD *)&v172[0] + 1) = v77;
  LOBYTE(v172[1]) = v72;
  BYTE1(v172[1]) = v62;
  BYTE2(v172[1]) = v73;
  *((_QWORD *)&v172[1] + 1) = v76;
  LOBYTE(v172[2]) = v78;
  BYTE1(v172[2]) = v75;
  *((_QWORD *)&v172[2] + 1) = *((_QWORD *)&v78 + 1);
  LOBYTE(v172[3]) = v89;
  BYTE1(v172[3]) = v79;
  *((_QWORD *)&v172[3] + 1) = v80;
  LOBYTE(v172[4]) = v88;
  BYTE1(v172[4]) = v81;
  *((_QWORD *)&v172[4] + 1) = v82;
  LOBYTE(v172[5]) = v87;
  BYTE1(v172[5]) = v83;
  *((_QWORD *)&v172[5] + 1) = v85;
  LOBYTE(v172[6]) = v86;
  BYTE1(v172[6]) = v84;
  if ((sub_20A581244((uint64_t *)v173, (uint64_t)v172) & 1) == 0)
  {
    *(_QWORD *)&v173[0] = v93;
    *((_QWORD *)&v173[0] + 1) = v92;
    *(_QWORD *)&v173[1] = v90 | (v66 << 8) | (v68 << 16);
    *((_QWORD *)&v173[1] + 1) = v91;
    *(_QWORD *)&v173[2] = v67 | (v65 << 8);
    *((_QWORD *)&v173[2] + 1) = v69;
    *(_QWORD *)&v173[3] = v71 | (v64 << 8);
    *((_QWORD *)&v173[3] + 1) = v95;
    *(_QWORD *)&v173[4] = v70 | (v63 << 8);
    *((_QWORD *)&v173[4] + 1) = v97;
    *(_QWORD *)&v173[5] = v100 | (v96 << 8);
    *((_QWORD *)&v173[5] + 1) = v98;
    LOWORD(v173[6]) = v99 | (v94 << 8);
    *(_QWORD *)&v172[0] = v74;
    *((_QWORD *)&v172[0] + 1) = v77;
    *(_QWORD *)&v172[1] = v72 | (v62 << 8) | (v73 << 16);
    *((_QWORD *)&v172[1] + 1) = v76;
    v172[2] = v78 | (unint64_t)(v75 << 8);
    *(_QWORD *)&v172[3] = v89 | (v79 << 8);
    *((_QWORD *)&v172[3] + 1) = v80;
    *(_QWORD *)&v172[4] = v88 | (v81 << 8);
    *((_QWORD *)&v172[4] + 1) = v82;
    *(_QWORD *)&v172[5] = v87 | (v83 << 8);
    *((_QWORD *)&v172[5] + 1) = v85;
    LOWORD(v172[6]) = v86 | (v84 << 8);
    if (!sub_20A590980((uint64_t)v173, (uint64_t)v172))
      goto LABEL_38;
  }
  *(_QWORD *)&v173[0] = v59;
  *((_QWORD *)&v173[0] + 1) = v61;
  LOBYTE(v173[1]) = v60;
  *(_QWORD *)&v172[0] = v56;
  *((_QWORD *)&v172[0] + 1) = v58;
  LOBYTE(v172[1]) = v57;
  if ((sub_20A584678((uint64_t *)v173, (uint64_t)v172) & 1) == 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v19 = sub_20A53D37C(v56, v58, v57, v59, v61, v60);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v19 & 1) != 0)
      goto LABEL_38;
  }
  LOBYTE(v173[0]) = v55;
  BYTE1(v173[0]) = v54;
  LOBYTE(v172[0]) = v52;
  BYTE1(v172[0]) = v53;
  if ((sub_20A5855CC((unsigned __int8 *)v173, (unsigned __int8 *)v172) & 1) == 0
    && (sub_20A53F2B4(v52 | (unsigned __int16)(v53 << 8), v55 | (unsigned __int16)(v54 << 8)) & 1) != 0)
  {
    goto LABEL_38;
  }
  *(_QWORD *)&v173[0] = v49;
  *((_QWORD *)&v173[0] + 1) = v51;
  LOBYTE(v173[1]) = v50;
  v172[0] = v47;
  LOBYTE(v172[1]) = v48;
  if ((sub_20A584678((uint64_t *)v173, (uint64_t)v172) & 1) == 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20 = sub_20A53D37C(v47, *((uint64_t *)&v47 + 1), v48, v49, v51, v50);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v20 & 1) != 0)
      goto LABEL_38;
  }
  *(_QWORD *)&v173[0] = v43;
  BYTE8(v173[0]) = v42;
  *(_QWORD *)&v172[0] = v40;
  BYTE8(v172[0]) = v41;
  if ((sub_20A58650C((uint64_t)v173, (uint64_t)v172) & 1) == 0)
  {
    *(_QWORD *)&v173[0] = v43;
    BYTE8(v173[0]) = v42;
    *(_QWORD *)&v172[0] = v40;
    BYTE8(v172[0]) = v41;
    if ((sub_20A590D50((uint64_t *)v173, (uint64_t *)v172) & 1) == 0)
      goto LABEL_38;
  }
  memcpy(v173, __dst, 0x119uLL);
  memcpy(v172, __src, 0x119uLL);
  if ((sub_20A587478((uint64_t)v173, (uint64_t)v172) & 1) == 0)
  {
    memcpy(v172, __dst, 0x119uLL);
    nullsub_1(v172);
    sub_20A459C88((uint64_t)v172, (uint64_t)v171, &qword_2545FBBD8);
    memcpy(v173, __src, 0x119uLL);
    nullsub_1(v173);
    sub_20A459C88((uint64_t)v173, (uint64_t)v170, &qword_2545FBBD8);
    if ((sub_20A591440((uint64_t)v171, (uint64_t)v170) & 1) == 0)
      goto LABEL_38;
  }
  if ((sub_20A53A5A8((unsigned __int16)v23 | (unsigned __int16)((_WORD)v46 << 8), (unsigned __int16)v45 | (unsigned __int16)((_WORD)v44 << 8)) & 1) != 0&& (sub_20A53A5A8((unsigned __int16)v24 | (unsigned __int16)((_WORD)v25 << 8), (unsigned __int16)v38 | (unsigned __int16)((_WORD)v39 << 8)) & 1) != 0&& (sub_20A53B50C(v30, (unsigned __int16)v29 | (unsigned __int16)((_WORD)v27 << 8), v36, v37 | ((_DWORD)v35 << 8)) & 1) != 0&& (sub_20A53B50C(v31, v28 | (unsigned __int16)(v26 << 8), v34, v33 | (v32 << 8)) & 1) != 0)
  {
    goto LABEL_36;
  }
  *(_QWORD *)&v173[0] = v23 | (v46 << 8) | (v24 << 16) | (v25 << 24);
  *((_QWORD *)&v173[0] + 1) = v30;
  *(_QWORD *)&v173[1] = v29 | (v27 << 8);
  *((_QWORD *)&v173[1] + 1) = v31;
  LOWORD(v173[2]) = v28 | (v26 << 8);
  *(_QWORD *)&v172[0] = v45 | (v44 << 8) | (v38 << 16) | (v39 << 24);
  *((_QWORD *)&v172[0] + 1) = v36;
  *(_QWORD *)&v172[1] = v37 | (v35 << 8);
  *((_QWORD *)&v172[1] + 1) = v34;
  LOWORD(v172[2]) = v33 | ((_WORD)v32 << 8);
  if ((sub_20A591F68((uint64_t *)v173, (uint64_t *)v172) & 1) != 0)
  {
LABEL_36:
    v173[4] = v179;
    v173[5] = v180;
    v173[6] = v181[0];
    *(_OWORD *)((char *)&v173[6] + 10) = *(_OWORD *)((char *)v181 + 10);
    v173[0] = v175;
    v173[1] = v176;
    v173[2] = v177;
    v173[3] = v178;
    v172[4] = v187;
    v172[5] = v188;
    v172[6] = v189[0];
    *(_OWORD *)((char *)&v172[6] + 10) = *(_OWORD *)((char *)v189 + 10);
    v172[0] = v183;
    v172[1] = v184;
    v172[2] = v185;
    v172[3] = v186;
    if ((sub_20A580FE8((uint64_t)v173, (uint64_t)v172) & 1) != 0)
    {
      v21 = 1;
    }
    else
    {
      v172[4] = v179;
      v172[5] = v180;
      v172[6] = v181[0];
      *(_OWORD *)((char *)&v172[6] + 10) = *(_OWORD *)((char *)v181 + 10);
      v172[0] = v175;
      v172[1] = v176;
      v172[2] = v177;
      v172[3] = v178;
      nullsub_1(v172);
      sub_20A459C88((uint64_t)v172, (uint64_t)v171, &qword_2545FBBE0);
      v173[4] = v187;
      v173[5] = v188;
      v173[6] = v189[0];
      *(_OWORD *)((char *)&v173[6] + 10) = *(_OWORD *)((char *)v189 + 10);
      v173[0] = v183;
      v173[1] = v184;
      v173[2] = v185;
      v173[3] = v186;
      nullsub_1(v173);
      sub_20A459C88((uint64_t)v173, (uint64_t)v170, &qword_2545FBBE0);
      v21 = sub_20A59207C((uint64_t)v171, (uint64_t)v170);
    }
  }
  else
  {
LABEL_38:
    v21 = 0;
  }
  return v21 & 1;
}

uint64_t sub_20A59370C()
{
  return objectdestroy_16Tm();
}

uint64_t sub_20A593714()
{
  return swift_deallocObject();
}

uint64_t sub_20A593724()
{
  return swift_deallocObject();
}

uint64_t sub_20A593734()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_20A5937B0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_20A5937D4()
{
  return objectdestroy_16Tm();
}

uint64_t sub_20A5937DC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_20A593808()
{
  return objectdestroy_16Tm();
}

uint64_t sub_20A593810()
{
  return objectdestroy_16Tm();
}

unint64_t sub_20A593818()
{
  unint64_t result;

  result = qword_2545FBC40;
  if (!qword_2545FBC40)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D6098, &type metadata for ArmandDeviceDataErrorCode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBC40);
  }
  return result;
}

unint64_t sub_20A59385C()
{
  unint64_t result;

  result = qword_2545FBC48;
  if (!qword_2545FBC48)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D6048, &type metadata for ArmandDeviceDataErrorCode.PacErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBC48);
  }
  return result;
}

unint64_t sub_20A5938A0()
{
  unint64_t result;

  result = qword_2545FBC50;
  if (!qword_2545FBC50)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D5FF8, &type metadata for ArmandDeviceDataErrorCode.EmptyDictionaryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBC50);
  }
  return result;
}

unint64_t sub_20A5938E4()
{
  unint64_t result;

  result = qword_2545FBC58;
  if (!qword_2545FBC58)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D5FA8, &type metadata for ArmandDeviceDataErrorCode.NotYetImplementedErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBC58);
  }
  return result;
}

unint64_t sub_20A593928()
{
  unint64_t result;

  result = qword_2545FBC60;
  if (!qword_2545FBC60)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D5F58, &type metadata for ArmandDeviceDataErrorCode.EncodingErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBC60);
  }
  return result;
}

unint64_t sub_20A59396C()
{
  unint64_t result;

  result = qword_2545FBC68;
  if (!qword_2545FBC68)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D5F08, &type metadata for ArmandDeviceDataErrorCode.UnsupportedSourceFieldErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBC68);
  }
  return result;
}

unint64_t sub_20A5939B0()
{
  unint64_t result;

  result = qword_2545FBC70;
  if (!qword_2545FBC70)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D5EB8, &type metadata for ArmandDeviceDataErrorCode.UnexpectedErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBC70);
  }
  return result;
}

unint64_t sub_20A5939F4()
{
  unint64_t result;

  result = qword_2545FBC78;
  if (!qword_2545FBC78)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D5E68, &type metadata for ArmandDeviceDataErrorCode.DeniedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBC78);
  }
  return result;
}

unint64_t sub_20A593A38()
{
  unint64_t result;

  result = qword_2545FBC80;
  if (!qword_2545FBC80)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D5E18, &type metadata for ArmandDeviceDataErrorCode.NilOptionalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBC80);
  }
  return result;
}

unint64_t sub_20A593A7C()
{
  unint64_t result;

  result = qword_2545FBC88;
  if (!qword_2545FBC88)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D5DC8, &type metadata for ArmandDeviceDataErrorCode.UnsetValueCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBC88);
  }
  return result;
}

unint64_t sub_20A593AC0()
{
  unint64_t result;

  result = qword_2545FBC90;
  if (!qword_2545FBC90)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D5D78, &type metadata for ArmandDeviceDataErrorCode.NoErrCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBC90);
  }
  return result;
}

uint64_t type metadata accessor for ArmandDataFiller()
{
  return objc_opt_self();
}

uint64_t sub_20A593B24(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v6 = v2[2];
  v7 = v2[3];
  v8 = v2[4];
  v9 = v2[5];
  v10 = v2[6];
  v11 = v2[7];
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v12;
  *v12 = v3;
  v12[1] = sub_20A4597C0;
  return sub_20A572CF4(a1, a2, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_20A593C1C(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  unsigned __int8 *v4;
  unsigned int v5;
  char v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  sub_20A59A2F8();
  result = sub_20A5B8C00();
  v7 = result;
  if (v2)
  {
    v4 = (unsigned __int8 *)(a1 + 32);
    do
    {
      v5 = *v4++;
      sub_20A57C63C(&v6, v5, (void (*)(uint64_t))sub_20A510E3C, (uint64_t)&type metadata for PhoneFormatterSource.PhoneNumberType, &qword_2545FB540, (uint64_t (*)(uint64_t))sub_20A5114D0);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

unint64_t sub_20A593CD0()
{
  unint64_t result;

  result = qword_2545FBD30;
  if (!qword_2545FBD30)
  {
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for ArmandDeviceDataErrorCode, &type metadata for ArmandDeviceDataErrorCode);
    atomic_store(result, (unint64_t *)&qword_2545FBD30);
  }
  return result;
}

unint64_t sub_20A593D18()
{
  unint64_t result;

  result = qword_2545FBD38;
  if (!qword_2545FBD38)
  {
    result = MEMORY[0x20BD26CEC](&protocol conformance descriptor for ArmandDeviceData, &type metadata for ArmandDeviceData);
    atomic_store(result, (unint64_t *)&qword_2545FBD38);
  }
  return result;
}

uint64_t sub_20A593D5C@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  const void *v3;
  _BYTE __dst[1024];

  v3 = (const void *)(*a1 + 112);
  swift_beginAccess();
  memcpy(__dst, v3, 0x3F9uLL);
  memcpy(a2, v3, 0x3F9uLL);
  return sub_20A497F30((uint64_t)__dst);
}

uint64_t dispatch thunk of ODIBindingsProvider.allBindings.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 8) + *(_QWORD *)(a2 + 8));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_20A494C74;
  return v7(a1, a2);
}

uint64_t dispatch thunk of ODIBindingsProvider.geoCoder.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 16) + *(_QWORD *)(a2 + 16));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_20A4CE1AC;
  return v7(a1, a2);
}

uint64_t dispatch thunk of ODIBindingsProvider.getBinding(bindingName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 24) + *(_QWORD *)(a5 + 24));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_20A45A37C;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of ODIBindingsProvider.registerBinding(_:callback:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a6 + 32)
                                                                                     + *(_QWORD *)(a6 + 32));
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_20A45A37C;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t dispatch thunk of ODILocationProvider.gpsLocationEnabled()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 8) + *(_QWORD *)(a2 + 8));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_20A4CE1AC;
  return v7(a1, a2);
}

uint64_t dispatch thunk of ODILocationProvider.getLocation()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 16) + *(_QWORD *)(a2 + 16));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_20A4CE1AC;
  return v7(a1, a2);
}

uint64_t dispatch thunk of ODILocationProvider.getLocationOrWait()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 24) + *(_QWORD *)(a2 + 24));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_20A459310;
  return v7(a1, a2);
}

uint64_t getEnumTagSinglePayload for ArmandDeviceDataErrorCode(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  unsigned int v7;

  if (!a2)
    return 0;
  if (a2 < 0x27)
  {
    v6 = *a1;
    if (v6 >= 0xD1)
      v7 = v6 - 208;
    else
      v7 = 0;
    if (v7 >= 0xA)
      return v7 - 9;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 217;
    if (a2 + 217 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_20A59416C + 4 * byte_20A5D4942[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for ArmandDeviceDataErrorCode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 217;
  if (a3 + 217 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0x27)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0x26)
    return ((uint64_t (*)(void))((char *)&loc_20A594218 + 4 * byte_20A5D494C[v5]))();
  *a1 = a2 - 39;
  return ((uint64_t (*)(void))((char *)sub_20A59424C + 4 * byte_20A5D4947[v5]))();
}

uint64_t sub_20A59424C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A594254(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A59425CLL);
  return result;
}

uint64_t sub_20A594268(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A594270);
  *(_BYTE *)result = a2 - 39;
  return result;
}

uint64_t sub_20A594274(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A59427C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A594288(unsigned __int8 *a1)
{
  unsigned int v1;

  v1 = *a1;
  if (v1 >= 0xD1)
    return v1 - 208;
  else
    return 0;
}

_BYTE *sub_20A59429C(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 - 48;
  return result;
}

ValueMetadata *type metadata accessor for ArmandDeviceDataErrorCode()
{
  return &type metadata for ArmandDeviceDataErrorCode;
}

uint64_t destroy for ArmandDeviceData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ArmandDeviceData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v5 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v6 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v6;
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  v7 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v7;
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  v8 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v8;
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  *(_WORD *)(a1 + 160) = *(_WORD *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  v9 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = v9;
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  *(_WORD *)(a1 + 200) = *(_WORD *)(a2 + 200);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  v10 = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = v10;
  *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
  v11 = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = v11;
  *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
  v12 = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = v12;
  *(_BYTE *)(a1 + 272) = *(_BYTE *)(a2 + 272);
  v13 = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 288) = v13;
  *(_BYTE *)(a1 + 296) = *(_BYTE *)(a2 + 296);
  v14 = *(_QWORD *)(a2 + 312);
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 312) = v14;
  *(_BYTE *)(a1 + 320) = *(_BYTE *)(a2 + 320);
  *(_WORD *)(a1 + 321) = *(_WORD *)(a2 + 321);
  v15 = *(_QWORD *)(a2 + 336);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  *(_QWORD *)(a1 + 336) = v15;
  *(_BYTE *)(a1 + 344) = *(_BYTE *)(a2 + 344);
  *(_WORD *)(a1 + 345) = *(_WORD *)(a2 + 345);
  v16 = *(_QWORD *)(a2 + 360);
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 360) = v16;
  *(_BYTE *)(a1 + 368) = *(_BYTE *)(a2 + 368);
  v17 = *(_QWORD *)(a2 + 384);
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  *(_QWORD *)(a1 + 384) = v17;
  *(_BYTE *)(a1 + 392) = *(_BYTE *)(a2 + 392);
  *(_WORD *)(a1 + 393) = *(_WORD *)(a2 + 393);
  v18 = *(_QWORD *)(a2 + 400);
  *(_WORD *)(a1 + 408) = *(_WORD *)(a2 + 408);
  *(_QWORD *)(a1 + 400) = v18;
  v19 = *(_QWORD *)(a2 + 416);
  *(_WORD *)(a1 + 424) = *(_WORD *)(a2 + 424);
  *(_QWORD *)(a1 + 416) = v19;
  v20 = *(_QWORD *)(a2 + 432);
  *(_WORD *)(a1 + 440) = *(_WORD *)(a2 + 440);
  *(_QWORD *)(a1 + 432) = v20;
  v21 = *(_QWORD *)(a2 + 448);
  *(_WORD *)(a1 + 456) = *(_WORD *)(a2 + 456);
  *(_QWORD *)(a1 + 448) = v21;
  v22 = *(_QWORD *)(a2 + 464);
  *(_WORD *)(a1 + 472) = *(_WORD *)(a2 + 472);
  *(_QWORD *)(a1 + 464) = v22;
  *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
  *(_BYTE *)(a1 + 488) = *(_BYTE *)(a2 + 488);
  v23 = *(_QWORD *)(a2 + 504);
  *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
  *(_QWORD *)(a1 + 504) = v23;
  *(_BYTE *)(a1 + 512) = *(_BYTE *)(a2 + 512);
  *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
  *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
  *(_BYTE *)(a1 + 536) = *(_BYTE *)(a2 + 536);
  *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
  *(_QWORD *)(a1 + 552) = *(_QWORD *)(a2 + 552);
  *(_BYTE *)(a1 + 560) = *(_BYTE *)(a2 + 560);
  *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
  *(_QWORD *)(a1 + 576) = *(_QWORD *)(a2 + 576);
  *(_BYTE *)(a1 + 584) = *(_BYTE *)(a2 + 584);
  *(_QWORD *)(a1 + 592) = *(_QWORD *)(a2 + 592);
  *(_QWORD *)(a1 + 600) = *(_QWORD *)(a2 + 600);
  *(_BYTE *)(a1 + 608) = *(_BYTE *)(a2 + 608);
  *(_QWORD *)(a1 + 616) = *(_QWORD *)(a2 + 616);
  *(_QWORD *)(a1 + 624) = *(_QWORD *)(a2 + 624);
  *(_BYTE *)(a1 + 632) = *(_BYTE *)(a2 + 632);
  *(_QWORD *)(a1 + 640) = *(_QWORD *)(a2 + 640);
  *(_QWORD *)(a1 + 648) = *(_QWORD *)(a2 + 648);
  *(_BYTE *)(a1 + 656) = *(_BYTE *)(a2 + 656);
  *(_QWORD *)(a1 + 664) = *(_QWORD *)(a2 + 664);
  *(_QWORD *)(a1 + 672) = *(_QWORD *)(a2 + 672);
  *(_BYTE *)(a1 + 680) = *(_BYTE *)(a2 + 680);
  *(_QWORD *)(a1 + 688) = *(_QWORD *)(a2 + 688);
  *(_QWORD *)(a1 + 696) = *(_QWORD *)(a2 + 696);
  *(_BYTE *)(a1 + 704) = *(_BYTE *)(a2 + 704);
  *(_QWORD *)(a1 + 712) = *(_QWORD *)(a2 + 712);
  *(_QWORD *)(a1 + 720) = *(_QWORD *)(a2 + 720);
  *(_BYTE *)(a1 + 728) = *(_BYTE *)(a2 + 728);
  *(_QWORD *)(a1 + 736) = *(_QWORD *)(a2 + 736);
  *(_BYTE *)(a1 + 752) = *(_BYTE *)(a2 + 752);
  *(_QWORD *)(a1 + 760) = *(_QWORD *)(a2 + 760);
  *(_BYTE *)(a1 + 776) = *(_BYTE *)(a2 + 776);
  *(_WORD *)(a1 + 816) = *(_WORD *)(a2 + 816);
  v24 = *(_OWORD *)(a2 + 824);
  v25 = *(_OWORD *)(a2 + 840);
  v26 = *(_OWORD *)(a2 + 872);
  *(_OWORD *)(a1 + 856) = *(_OWORD *)(a2 + 856);
  *(_OWORD *)(a1 + 872) = v26;
  *(_OWORD *)(a1 + 824) = v24;
  *(_OWORD *)(a1 + 840) = v25;
  v27 = *(_OWORD *)(a2 + 888);
  v28 = *(_OWORD *)(a2 + 904);
  v29 = *(_OWORD *)(a2 + 920);
  v30 = *(_OWORD *)(a2 + 930);
  *(_QWORD *)(a1 + 744) = *(_QWORD *)(a2 + 744);
  *(_OWORD *)(a1 + 930) = v30;
  *(_OWORD *)(a1 + 904) = v28;
  *(_OWORD *)(a1 + 920) = v29;
  *(_OWORD *)(a1 + 888) = v27;
  *(_QWORD *)(a1 + 952) = *(_QWORD *)(a2 + 952);
  *(_BYTE *)(a1 + 968) = *(_BYTE *)(a2 + 968);
  *(_QWORD *)(a1 + 976) = *(_QWORD *)(a2 + 976);
  *(_BYTE *)(a1 + 992) = *(_BYTE *)(a2 + 992);
  *(_QWORD *)(a1 + 1000) = *(_QWORD *)(a2 + 1000);
  *(_BYTE *)(a1 + 1016) = *(_BYTE *)(a2 + 1016);
  *(_QWORD *)(a1 + 768) = *(_QWORD *)(a2 + 768);
  v31 = *(_OWORD *)(a2 + 800);
  *(_OWORD *)(a1 + 784) = *(_OWORD *)(a2 + 784);
  *(_OWORD *)(a1 + 800) = v31;
  *(_QWORD *)(a1 + 960) = *(_QWORD *)(a2 + 960);
  *(_QWORD *)(a1 + 984) = *(_QWORD *)(a2 + 984);
  *(_QWORD *)(a1 + 1008) = *(_QWORD *)(a2 + 1008);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ArmandDeviceData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  v4 = *(_QWORD *)(a2 + 152);
  *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = v4;
  *(_BYTE *)(a1 + 161) = *(_BYTE *)(a2 + 161);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  v5 = *(_QWORD *)(a2 + 192);
  *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
  *(_QWORD *)(a1 + 192) = v5;
  *(_BYTE *)(a1 + 201) = *(_BYTE *)(a2 + 201);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 272) = *(_BYTE *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 296) = *(_BYTE *)(a2 + 296);
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 320) = *(_BYTE *)(a2 + 320);
  *(_BYTE *)(a1 + 321) = *(_BYTE *)(a2 + 321);
  *(_BYTE *)(a1 + 322) = *(_BYTE *)(a2 + 322);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 344) = *(_BYTE *)(a2 + 344);
  *(_BYTE *)(a1 + 345) = *(_BYTE *)(a2 + 345);
  *(_BYTE *)(a1 + 346) = *(_BYTE *)(a2 + 346);
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 368) = *(_BYTE *)(a2 + 368);
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 392) = *(_BYTE *)(a2 + 392);
  *(_BYTE *)(a1 + 393) = *(_BYTE *)(a2 + 393);
  *(_BYTE *)(a1 + 394) = *(_BYTE *)(a2 + 394);
  v6 = *(_QWORD *)(a2 + 400);
  *(_BYTE *)(a1 + 408) = *(_BYTE *)(a2 + 408);
  *(_QWORD *)(a1 + 400) = v6;
  *(_BYTE *)(a1 + 409) = *(_BYTE *)(a2 + 409);
  v7 = *(_QWORD *)(a2 + 416);
  *(_BYTE *)(a1 + 424) = *(_BYTE *)(a2 + 424);
  *(_QWORD *)(a1 + 416) = v7;
  *(_BYTE *)(a1 + 425) = *(_BYTE *)(a2 + 425);
  v8 = *(_QWORD *)(a2 + 432);
  *(_BYTE *)(a1 + 440) = *(_BYTE *)(a2 + 440);
  *(_QWORD *)(a1 + 432) = v8;
  *(_BYTE *)(a1 + 441) = *(_BYTE *)(a2 + 441);
  v9 = *(_QWORD *)(a2 + 448);
  *(_BYTE *)(a1 + 456) = *(_BYTE *)(a2 + 456);
  *(_QWORD *)(a1 + 448) = v9;
  *(_BYTE *)(a1 + 457) = *(_BYTE *)(a2 + 457);
  v10 = *(_QWORD *)(a2 + 464);
  *(_BYTE *)(a1 + 472) = *(_BYTE *)(a2 + 472);
  *(_QWORD *)(a1 + 464) = v10;
  *(_BYTE *)(a1 + 473) = *(_BYTE *)(a2 + 473);
  *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 488) = *(_BYTE *)(a2 + 488);
  *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
  *(_QWORD *)(a1 + 504) = *(_QWORD *)(a2 + 504);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 512) = *(_BYTE *)(a2 + 512);
  *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
  *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 536) = *(_BYTE *)(a2 + 536);
  *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
  *(_QWORD *)(a1 + 552) = *(_QWORD *)(a2 + 552);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 560) = *(_BYTE *)(a2 + 560);
  *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
  *(_QWORD *)(a1 + 576) = *(_QWORD *)(a2 + 576);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 584) = *(_BYTE *)(a2 + 584);
  *(_QWORD *)(a1 + 592) = *(_QWORD *)(a2 + 592);
  *(_QWORD *)(a1 + 600) = *(_QWORD *)(a2 + 600);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 608) = *(_BYTE *)(a2 + 608);
  *(_QWORD *)(a1 + 616) = *(_QWORD *)(a2 + 616);
  *(_QWORD *)(a1 + 624) = *(_QWORD *)(a2 + 624);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 632) = *(_BYTE *)(a2 + 632);
  *(_QWORD *)(a1 + 640) = *(_QWORD *)(a2 + 640);
  *(_QWORD *)(a1 + 648) = *(_QWORD *)(a2 + 648);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 656) = *(_BYTE *)(a2 + 656);
  *(_QWORD *)(a1 + 664) = *(_QWORD *)(a2 + 664);
  *(_QWORD *)(a1 + 672) = *(_QWORD *)(a2 + 672);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 680) = *(_BYTE *)(a2 + 680);
  *(_QWORD *)(a1 + 688) = *(_QWORD *)(a2 + 688);
  *(_QWORD *)(a1 + 696) = *(_QWORD *)(a2 + 696);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 704) = *(_BYTE *)(a2 + 704);
  *(_QWORD *)(a1 + 712) = *(_QWORD *)(a2 + 712);
  *(_QWORD *)(a1 + 720) = *(_QWORD *)(a2 + 720);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 728) = *(_BYTE *)(a2 + 728);
  *(_QWORD *)(a1 + 736) = *(_QWORD *)(a2 + 736);
  *(_QWORD *)(a1 + 744) = *(_QWORD *)(a2 + 744);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 752) = *(_BYTE *)(a2 + 752);
  *(_QWORD *)(a1 + 760) = *(_QWORD *)(a2 + 760);
  *(_QWORD *)(a1 + 768) = *(_QWORD *)(a2 + 768);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 776) = *(_BYTE *)(a2 + 776);
  *(_BYTE *)(a1 + 784) = *(_BYTE *)(a2 + 784);
  *(_BYTE *)(a1 + 785) = *(_BYTE *)(a2 + 785);
  *(_BYTE *)(a1 + 786) = *(_BYTE *)(a2 + 786);
  *(_BYTE *)(a1 + 787) = *(_BYTE *)(a2 + 787);
  v11 = *(_QWORD *)(a2 + 792);
  *(_BYTE *)(a1 + 800) = *(_BYTE *)(a2 + 800);
  *(_QWORD *)(a1 + 792) = v11;
  *(_BYTE *)(a1 + 801) = *(_BYTE *)(a2 + 801);
  v12 = *(_QWORD *)(a2 + 808);
  *(_BYTE *)(a1 + 816) = *(_BYTE *)(a2 + 816);
  *(_QWORD *)(a1 + 808) = v12;
  *(_BYTE *)(a1 + 817) = *(_BYTE *)(a2 + 817);
  v13 = *(_QWORD *)(a2 + 824);
  *(_BYTE *)(a1 + 832) = *(_BYTE *)(a2 + 832);
  *(_QWORD *)(a1 + 824) = v13;
  *(_BYTE *)(a1 + 833) = *(_BYTE *)(a2 + 833);
  v14 = *(_QWORD *)(a2 + 840);
  *(_BYTE *)(a1 + 848) = *(_BYTE *)(a2 + 848);
  *(_QWORD *)(a1 + 840) = v14;
  *(_BYTE *)(a1 + 849) = *(_BYTE *)(a2 + 849);
  v15 = *(_QWORD *)(a2 + 856);
  *(_BYTE *)(a1 + 864) = *(_BYTE *)(a2 + 864);
  *(_QWORD *)(a1 + 856) = v15;
  *(_BYTE *)(a1 + 865) = *(_BYTE *)(a2 + 865);
  v16 = *(_QWORD *)(a2 + 872);
  *(_BYTE *)(a1 + 880) = *(_BYTE *)(a2 + 880);
  *(_QWORD *)(a1 + 872) = v16;
  *(_BYTE *)(a1 + 881) = *(_BYTE *)(a2 + 881);
  v17 = *(_QWORD *)(a2 + 888);
  *(_BYTE *)(a1 + 896) = *(_BYTE *)(a2 + 896);
  *(_QWORD *)(a1 + 888) = v17;
  *(_BYTE *)(a1 + 897) = *(_BYTE *)(a2 + 897);
  v18 = *(_QWORD *)(a2 + 904);
  *(_BYTE *)(a1 + 912) = *(_BYTE *)(a2 + 912);
  *(_QWORD *)(a1 + 904) = v18;
  *(_BYTE *)(a1 + 913) = *(_BYTE *)(a2 + 913);
  v19 = *(_QWORD *)(a2 + 920);
  *(_BYTE *)(a1 + 928) = *(_BYTE *)(a2 + 928);
  *(_QWORD *)(a1 + 920) = v19;
  *(_BYTE *)(a1 + 929) = *(_BYTE *)(a2 + 929);
  v20 = *(_QWORD *)(a2 + 936);
  *(_BYTE *)(a1 + 944) = *(_BYTE *)(a2 + 944);
  *(_QWORD *)(a1 + 936) = v20;
  *(_BYTE *)(a1 + 945) = *(_BYTE *)(a2 + 945);
  *(_QWORD *)(a1 + 952) = *(_QWORD *)(a2 + 952);
  *(_QWORD *)(a1 + 960) = *(_QWORD *)(a2 + 960);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 968) = *(_BYTE *)(a2 + 968);
  *(_QWORD *)(a1 + 976) = *(_QWORD *)(a2 + 976);
  *(_QWORD *)(a1 + 984) = *(_QWORD *)(a2 + 984);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 992) = *(_BYTE *)(a2 + 992);
  *(_QWORD *)(a1 + 1000) = *(_QWORD *)(a2 + 1000);
  *(_QWORD *)(a1 + 1008) = *(_QWORD *)(a2 + 1008);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 1016) = *(_BYTE *)(a2 + 1016);
  return a1;
}

void *__swift_memcpy1017_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x3F9uLL);
}

uint64_t assignWithTake for ArmandDeviceData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v7 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  v8 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v8;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  v9 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v9;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_WORD *)(a1 + 160) = *(_WORD *)(a2 + 160);
  v10 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_WORD *)(a1 + 200) = *(_WORD *)(a2 + 200);
  v11 = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = v11;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
  v12 = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = v12;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
  v13 = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = v13;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 272) = *(_BYTE *)(a2 + 272);
  v14 = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 288) = v14;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 296) = *(_BYTE *)(a2 + 296);
  v15 = *(_QWORD *)(a2 + 312);
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 312) = v15;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 320) = *(_BYTE *)(a2 + 320);
  *(_WORD *)(a1 + 321) = *(_WORD *)(a2 + 321);
  v16 = *(_QWORD *)(a2 + 336);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  *(_QWORD *)(a1 + 336) = v16;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 344) = *(_BYTE *)(a2 + 344);
  *(_WORD *)(a1 + 345) = *(_WORD *)(a2 + 345);
  v17 = *(_QWORD *)(a2 + 360);
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 360) = v17;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 368) = *(_BYTE *)(a2 + 368);
  v18 = *(_QWORD *)(a2 + 384);
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  *(_QWORD *)(a1 + 384) = v18;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 392) = *(_BYTE *)(a2 + 392);
  *(_WORD *)(a1 + 393) = *(_WORD *)(a2 + 393);
  *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
  *(_WORD *)(a1 + 408) = *(_WORD *)(a2 + 408);
  *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
  *(_WORD *)(a1 + 424) = *(_WORD *)(a2 + 424);
  *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
  *(_WORD *)(a1 + 440) = *(_WORD *)(a2 + 440);
  v19 = *(_QWORD *)(a2 + 448);
  *(_BYTE *)(a1 + 456) = *(_BYTE *)(a2 + 456);
  *(_QWORD *)(a1 + 448) = v19;
  *(_BYTE *)(a1 + 457) = *(_BYTE *)(a2 + 457);
  *(_QWORD *)(a1 + 464) = *(_QWORD *)(a2 + 464);
  *(_WORD *)(a1 + 472) = *(_WORD *)(a2 + 472);
  *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 488) = *(_BYTE *)(a2 + 488);
  v20 = *(_QWORD *)(a2 + 504);
  *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
  *(_QWORD *)(a1 + 504) = v20;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 512) = *(_BYTE *)(a2 + 512);
  *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
  *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 536) = *(_BYTE *)(a2 + 536);
  *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
  *(_QWORD *)(a1 + 552) = *(_QWORD *)(a2 + 552);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 560) = *(_BYTE *)(a2 + 560);
  *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
  *(_QWORD *)(a1 + 576) = *(_QWORD *)(a2 + 576);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 584) = *(_BYTE *)(a2 + 584);
  *(_QWORD *)(a1 + 592) = *(_QWORD *)(a2 + 592);
  *(_QWORD *)(a1 + 600) = *(_QWORD *)(a2 + 600);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 608) = *(_BYTE *)(a2 + 608);
  *(_QWORD *)(a1 + 616) = *(_QWORD *)(a2 + 616);
  *(_QWORD *)(a1 + 624) = *(_QWORD *)(a2 + 624);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 632) = *(_BYTE *)(a2 + 632);
  *(_QWORD *)(a1 + 640) = *(_QWORD *)(a2 + 640);
  *(_QWORD *)(a1 + 648) = *(_QWORD *)(a2 + 648);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 656) = *(_BYTE *)(a2 + 656);
  *(_QWORD *)(a1 + 664) = *(_QWORD *)(a2 + 664);
  *(_QWORD *)(a1 + 672) = *(_QWORD *)(a2 + 672);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 680) = *(_BYTE *)(a2 + 680);
  *(_QWORD *)(a1 + 688) = *(_QWORD *)(a2 + 688);
  *(_QWORD *)(a1 + 696) = *(_QWORD *)(a2 + 696);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 704) = *(_BYTE *)(a2 + 704);
  *(_QWORD *)(a1 + 712) = *(_QWORD *)(a2 + 712);
  *(_QWORD *)(a1 + 720) = *(_QWORD *)(a2 + 720);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 728) = *(_BYTE *)(a2 + 728);
  *(_QWORD *)(a1 + 736) = *(_QWORD *)(a2 + 736);
  *(_QWORD *)(a1 + 744) = *(_QWORD *)(a2 + 744);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 752) = *(_BYTE *)(a2 + 752);
  *(_QWORD *)(a1 + 760) = *(_QWORD *)(a2 + 760);
  *(_QWORD *)(a1 + 768) = *(_QWORD *)(a2 + 768);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 776) = *(_BYTE *)(a2 + 776);
  *(_DWORD *)(a1 + 784) = *(_DWORD *)(a2 + 784);
  *(_QWORD *)(a1 + 792) = *(_QWORD *)(a2 + 792);
  *(_WORD *)(a1 + 800) = *(_WORD *)(a2 + 800);
  *(_QWORD *)(a1 + 808) = *(_QWORD *)(a2 + 808);
  *(_WORD *)(a1 + 816) = *(_WORD *)(a2 + 816);
  *(_QWORD *)(a1 + 824) = *(_QWORD *)(a2 + 824);
  *(_WORD *)(a1 + 832) = *(_WORD *)(a2 + 832);
  *(_BYTE *)(a1 + 848) = *(_BYTE *)(a2 + 848);
  *(_QWORD *)(a1 + 840) = *(_QWORD *)(a2 + 840);
  *(_BYTE *)(a1 + 849) = *(_BYTE *)(a2 + 849);
  *(_QWORD *)(a1 + 856) = *(_QWORD *)(a2 + 856);
  *(_WORD *)(a1 + 864) = *(_WORD *)(a2 + 864);
  *(_QWORD *)(a1 + 872) = *(_QWORD *)(a2 + 872);
  *(_WORD *)(a1 + 880) = *(_WORD *)(a2 + 880);
  *(_QWORD *)(a1 + 888) = *(_QWORD *)(a2 + 888);
  *(_WORD *)(a1 + 896) = *(_WORD *)(a2 + 896);
  *(_QWORD *)(a1 + 904) = *(_QWORD *)(a2 + 904);
  *(_BYTE *)(a1 + 912) = *(_BYTE *)(a2 + 912);
  *(_BYTE *)(a1 + 913) = *(_BYTE *)(a2 + 913);
  *(_QWORD *)(a1 + 920) = *(_QWORD *)(a2 + 920);
  *(_WORD *)(a1 + 928) = *(_WORD *)(a2 + 928);
  *(_QWORD *)(a1 + 936) = *(_QWORD *)(a2 + 936);
  *(_WORD *)(a1 + 944) = *(_WORD *)(a2 + 944);
  *(_QWORD *)(a1 + 952) = *(_QWORD *)(a2 + 952);
  *(_QWORD *)(a1 + 960) = *(_QWORD *)(a2 + 960);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 968) = *(_BYTE *)(a2 + 968);
  *(_QWORD *)(a1 + 976) = *(_QWORD *)(a2 + 976);
  *(_QWORD *)(a1 + 984) = *(_QWORD *)(a2 + 984);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 992) = *(_BYTE *)(a2 + 992);
  *(_QWORD *)(a1 + 1000) = *(_QWORD *)(a2 + 1000);
  *(_QWORD *)(a1 + 1008) = *(_QWORD *)(a2 + 1008);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 1016) = *(_BYTE *)(a2 + 1016);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArmandDeviceData(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 1017))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ArmandDeviceData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 1016) = 0;
    *(_OWORD *)(result + 1000) = 0u;
    *(_OWORD *)(result + 984) = 0u;
    *(_OWORD *)(result + 968) = 0u;
    *(_OWORD *)(result + 952) = 0u;
    *(_OWORD *)(result + 936) = 0u;
    *(_OWORD *)(result + 920) = 0u;
    *(_OWORD *)(result + 904) = 0u;
    *(_OWORD *)(result + 888) = 0u;
    *(_OWORD *)(result + 872) = 0u;
    *(_OWORD *)(result + 856) = 0u;
    *(_OWORD *)(result + 840) = 0u;
    *(_OWORD *)(result + 824) = 0u;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 1017) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 1017) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ArmandDeviceData()
{
  return &type metadata for ArmandDeviceData;
}

uint64_t method lookup function for ArmandDataFiller()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ArmandDataFiller.armandData.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of ArmandDataFiller.armandData.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of ArmandDataFiller.armandData.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of ArmandDataFiller.isReadyForAssessment.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t dispatch thunk of ArmandDataFiller.__allocating_init(sessionIdentifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 328))();
}

uint64_t dispatch thunk of ArmandDataFiller.updateArmandData(for:locationHelper:bindingsHelper:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);

  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v4 + 576)
                                                                   + *(_QWORD *)(*(_QWORD *)v4 + 576));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v10;
  *v10 = v5;
  v10[1] = sub_20A494C74;
  return v12(a1, a2, a3, a4);
}

uint64_t dispatch thunk of ArmandDataFiller.notifyODNatorReady()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 584))();
}

uint64_t storeEnumTagSinglePayload for ArmandDeviceDataErrorCode.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_20A59578C + 4 * byte_20A5D4956[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_20A5957C0 + 4 * byte_20A5D4951[v4]))();
}

uint64_t sub_20A5957C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A5957C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A5957D0);
  return result;
}

uint64_t sub_20A5957DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A5957E4);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_20A5957E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A5957F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArmandDeviceDataErrorCode.CodingKeys()
{
  return &type metadata for ArmandDeviceDataErrorCode.CodingKeys;
}

ValueMetadata *type metadata accessor for ArmandDeviceDataErrorCode.NoErrCodingKeys()
{
  return &type metadata for ArmandDeviceDataErrorCode.NoErrCodingKeys;
}

ValueMetadata *type metadata accessor for ArmandDeviceDataErrorCode.UnsetValueCodingKeys()
{
  return &type metadata for ArmandDeviceDataErrorCode.UnsetValueCodingKeys;
}

ValueMetadata *type metadata accessor for ArmandDeviceDataErrorCode.NilOptionalCodingKeys()
{
  return &type metadata for ArmandDeviceDataErrorCode.NilOptionalCodingKeys;
}

ValueMetadata *type metadata accessor for ArmandDeviceDataErrorCode.DeniedCodingKeys()
{
  return &type metadata for ArmandDeviceDataErrorCode.DeniedCodingKeys;
}

ValueMetadata *type metadata accessor for ArmandDeviceDataErrorCode.UnexpectedErrorCodingKeys()
{
  return &type metadata for ArmandDeviceDataErrorCode.UnexpectedErrorCodingKeys;
}

ValueMetadata *type metadata accessor for ArmandDeviceDataErrorCode.UnsupportedSourceFieldErrorCodingKeys()
{
  return &type metadata for ArmandDeviceDataErrorCode.UnsupportedSourceFieldErrorCodingKeys;
}

ValueMetadata *type metadata accessor for ArmandDeviceDataErrorCode.EncodingErrorCodingKeys()
{
  return &type metadata for ArmandDeviceDataErrorCode.EncodingErrorCodingKeys;
}

ValueMetadata *type metadata accessor for ArmandDeviceDataErrorCode.NotYetImplementedErrorCodingKeys()
{
  return &type metadata for ArmandDeviceDataErrorCode.NotYetImplementedErrorCodingKeys;
}

ValueMetadata *type metadata accessor for ArmandDeviceDataErrorCode.EmptyDictionaryCodingKeys()
{
  return &type metadata for ArmandDeviceDataErrorCode.EmptyDictionaryCodingKeys;
}

ValueMetadata *type metadata accessor for ArmandDeviceDataErrorCode.PacErrorCodingKeys()
{
  return &type metadata for ArmandDeviceDataErrorCode.PacErrorCodingKeys;
}

__n128 __swift_memcpy65_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

ValueMetadata *type metadata accessor for AccountsSource()
{
  return &type metadata for AccountsSource;
}

uint64_t initializeWithCopy for MobileGestaltSource(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v6 = *(_QWORD *)(a2 + 72);
  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MobileGestaltSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v4 = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v4;
  *(_BYTE *)(a1 + 81) = *(_BYTE *)(a2 + 81);
  return a1;
}

__n128 __swift_memcpy82_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for MobileGestaltSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for MobileGestaltSource(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 82))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MobileGestaltSource(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 80) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 82) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 82) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for MobileGestaltSource()
{
  return &type metadata for MobileGestaltSource;
}

uint64_t destroy for BaaSource()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for BaaSource(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for BaaSource(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;

  v4 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 9) = *((_BYTE *)a2 + 9);
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
  *(_QWORD *)(a1 + 40) = a2[5];
  *(_QWORD *)(a1 + 48) = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
  return a1;
}

uint64_t assignWithTake for BaaSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for BaaSource(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 57))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for BaaSource(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 57) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for BaaSource()
{
  return &type metadata for BaaSource;
}

ValueMetadata *type metadata accessor for NearFieldSource()
{
  return &type metadata for NearFieldSource;
}

ValueMetadata *type metadata accessor for IDSSource()
{
  return &type metadata for IDSSource;
}

uint64_t initializeWithCopy for CoreTelephonySource(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_WORD *)(a1 + 65) = *(_WORD *)(a2 + 65);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CoreTelephonySource(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  *(_BYTE *)(a1 + 66) = *(_BYTE *)(a2 + 66);
  return a1;
}

__n128 __swift_memcpy67_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 63) = *(_DWORD *)(a2 + 63);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for CoreTelephonySource(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_WORD *)(a1 + 65) = *(_WORD *)(a2 + 65);
  return a1;
}

uint64_t getEnumTagSinglePayload for CoreTelephonySource(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 67))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CoreTelephonySource(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 66) = 0;
    *(_WORD *)(result + 64) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 67) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 67) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for CoreTelephonySource()
{
  return &type metadata for CoreTelephonySource;
}

uint64_t initializeWithCopy for LocationSource(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  v4 = *(_QWORD *)(a2 + 56);
  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v4;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_WORD *)(a1 + 96) = *(_WORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LocationSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  v4 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  v5 = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  v6 = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v6;
  *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  v7 = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v7;
  *(_BYTE *)(a1 + 81) = *(_BYTE *)(a2 + 81);
  v8 = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = v8;
  *(_BYTE *)(a1 + 97) = *(_BYTE *)(a2 + 97);
  return a1;
}

__n128 __swift_memcpy98_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_WORD *)(a1 + 96) = *((_WORD *)a2 + 48);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for LocationSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  v5 = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v5;
  *(_BYTE *)(a1 + 81) = *(_BYTE *)(a2 + 81);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_WORD *)(a1 + 96) = *(_WORD *)(a2 + 96);
  return a1;
}

uint64_t getEnumTagSinglePayload for LocationSource(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 98))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for LocationSource(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 96) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 98) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 98) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationSource()
{
  return &type metadata for LocationSource;
}

uint64_t getEnumTagSinglePayload for TelephonyUtilitiesSource(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  int v7;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 65282 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65282 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65282;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65282;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65282;
  }
LABEL_17:
  v6 = *(unsigned __int8 *)a1;
  if (v6 >= 2)
    v7 = ((v6 + 2147483646) & 0x7FFFFFFF) - 1;
  else
    v7 = -2;
  if (v7 < 0)
    v7 = -1;
  return (v7 + 1);
}

uint64_t storeEnumTagSinglePayload for TelephonyUtilitiesSource(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65282 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65282 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_20A5964CC + 4 * byte_20A5D4960[v4]))();
  *a1 = a2 - 254;
  return ((uint64_t (*)(void))((char *)sub_20A596500 + 4 * byte_20A5D495B[v4]))();
}

uint64_t sub_20A596500(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_20A596508(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x20A596510);
  return result;
}

uint64_t sub_20A59651C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x20A596524);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_20A596528(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_20A596530(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TelephonyUtilitiesSource()
{
  return &type metadata for TelephonyUtilitiesSource;
}

uint64_t _s17CoreODIEssentials15NearFieldSourceVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s17CoreODIEssentials15NearFieldSourceVwca_0(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t _s17CoreODIEssentials15NearFieldSourceVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t _s17CoreODIEssentials15NearFieldSourceVwet_0(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s17CoreODIEssentials15NearFieldSourceVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for TimeZoneSource()
{
  return &type metadata for TimeZoneSource;
}

uint64_t initializeBufferWithCopyOfBuffer for CallerClientSource(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for CallerClientSource()
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for CallerClientSource(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for CallerClientSource(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for CallerClientSource(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 9))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CallerClientSource(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for CallerClientSource()
{
  return &type metadata for CallerClientSource;
}

uint64_t destroy for NameParserSource()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for NameParserSource(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v6 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v6;
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v7 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v7;
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  v8 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v8;
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  v9 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v9;
  *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
  v10 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = v10;
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  v11 = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = v11;
  *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
  v12 = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = v12;
  *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
  v13 = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = v13;
  *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
  v14 = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 272) = v14;
  *(_BYTE *)(a1 + 280) = *(_BYTE *)(a2 + 280);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for NameParserSource(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 280) = *(_BYTE *)(a2 + 280);
  return a1;
}

void *__swift_memcpy281_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x119uLL);
}

uint64_t assignWithTake for NameParserSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v7 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v8 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v8;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  v9 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v9;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  v10 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
  v11 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = v11;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  v12 = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = v12;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
  v13 = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = v13;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
  v14 = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = v14;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
  v15 = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 272) = v15;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 280) = *(_BYTE *)(a2 + 280);
  return a1;
}

uint64_t getEnumTagSinglePayload for NameParserSource(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 281))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for NameParserSource(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 280) = 0;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 281) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 281) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for NameParserSource()
{
  return &type metadata for NameParserSource;
}

uint64_t getEnumTagSinglePayload for DeviceSettingsSource(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && a1[34])
    return (*(_DWORD *)a1 + 254);
  v3 = *a1;
  if (v3 >= 2)
    v4 = ((v3 + 2147483646) & 0x7FFFFFFF) - 1;
  else
    v4 = -2;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DeviceSettingsSource(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_WORD *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 34) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 34) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceSettingsSource()
{
  return &type metadata for DeviceSettingsSource;
}

__n128 __swift_memcpy122_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_OWORD *)(a1 + 106) = *(__int128 *)((char *)a2 + 106);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for GeocoderSource(uint64_t a1, unsigned int a2)
{
  int v3;
  int v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x27 && *(_BYTE *)(a1 + 122))
    return (*(_DWORD *)a1 + 39);
  if (*(unsigned __int8 *)(a1 + 9) <= 0xD9u)
    v3 = 217;
  else
    v3 = *(unsigned __int8 *)(a1 + 9);
  v4 = v3 - 218;
  if (*(unsigned __int8 *)(a1 + 9) < 0xD1u)
    v5 = -1;
  else
    v5 = v4;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for GeocoderSource(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x26)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 120) = 0;
    *(_QWORD *)result = a2 - 39;
    if (a3 >= 0x27)
      *(_BYTE *)(result + 122) = 1;
  }
  else
  {
    if (a3 >= 0x27)
      *(_BYTE *)(result + 122) = 0;
    if (a2)
      *(_BYTE *)(result + 9) = a2 - 39;
  }
  return result;
}

ValueMetadata *type metadata accessor for GeocoderSource()
{
  return &type metadata for GeocoderSource;
}

uint64_t _s17CoreODIEssentials14AccountsSourceVwxx_0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s17CoreODIEssentials14AccountsSourceVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s17CoreODIEssentials14AccountsSourceVwca_0(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

uint64_t _s17CoreODIEssentials14AccountsSourceVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

uint64_t _s17CoreODIEssentials14AccountsSourceVwet_0(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 65))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s17CoreODIEssentials14AccountsSourceVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 64) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 65) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 65) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PhoneFormatterSource()
{
  return &type metadata for PhoneFormatterSource;
}

unint64_t sub_20A5972CC()
{
  unint64_t result;

  result = qword_2545FBE00;
  if (!qword_2545FBE00)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D4F28, &type metadata for PhoneFormatterSource);
    atomic_store(result, (unint64_t *)&qword_2545FBE00);
  }
  return result;
}

unint64_t sub_20A597314()
{
  unint64_t result;

  result = qword_2545FBE08;
  if (!qword_2545FBE08)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D4FE0, &type metadata for GeocoderSource);
    atomic_store(result, (unint64_t *)&qword_2545FBE08);
  }
  return result;
}

unint64_t sub_20A59735C()
{
  unint64_t result;

  result = qword_2545FBE10;
  if (!qword_2545FBE10)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D5098, &type metadata for DeviceSettingsSource);
    atomic_store(result, (unint64_t *)&qword_2545FBE10);
  }
  return result;
}

unint64_t sub_20A5973A4()
{
  unint64_t result;

  result = qword_2545FBE18;
  if (!qword_2545FBE18)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D5150, &type metadata for NameParserSource);
    atomic_store(result, (unint64_t *)&qword_2545FBE18);
  }
  return result;
}

unint64_t sub_20A5973EC()
{
  unint64_t result;

  result = qword_2545FBE20;
  if (!qword_2545FBE20)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D5208, &type metadata for CallerClientSource);
    atomic_store(result, (unint64_t *)&qword_2545FBE20);
  }
  return result;
}

unint64_t sub_20A597434()
{
  unint64_t result;

  result = qword_2545FBE28;
  if (!qword_2545FBE28)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D52C0, &type metadata for TimeZoneSource);
    atomic_store(result, (unint64_t *)&qword_2545FBE28);
  }
  return result;
}

unint64_t sub_20A59747C()
{
  unint64_t result;

  result = qword_2545FBE30;
  if (!qword_2545FBE30)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D5378, &type metadata for TelephonyUtilitiesSource);
    atomic_store(result, (unint64_t *)&qword_2545FBE30);
  }
  return result;
}

unint64_t sub_20A5974C4()
{
  unint64_t result;

  result = qword_2545FBE38;
  if (!qword_2545FBE38)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D5430, &type metadata for LocationSource);
    atomic_store(result, (unint64_t *)&qword_2545FBE38);
  }
  return result;
}

unint64_t sub_20A59750C()
{
  unint64_t result;

  result = qword_2545FBE40;
  if (!qword_2545FBE40)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D54E8, &type metadata for CoreTelephonySource);
    atomic_store(result, (unint64_t *)&qword_2545FBE40);
  }
  return result;
}

unint64_t sub_20A597554()
{
  unint64_t result;

  result = qword_2545FBE48;
  if (!qword_2545FBE48)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D55A0, &type metadata for IDSSource);
    atomic_store(result, (unint64_t *)&qword_2545FBE48);
  }
  return result;
}

unint64_t sub_20A59759C()
{
  unint64_t result;

  result = qword_2545FBE50;
  if (!qword_2545FBE50)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D5658, &type metadata for NearFieldSource);
    atomic_store(result, (unint64_t *)&qword_2545FBE50);
  }
  return result;
}

unint64_t sub_20A5975E4()
{
  unint64_t result;

  result = qword_2545FBE58;
  if (!qword_2545FBE58)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D5710, &type metadata for BaaSource);
    atomic_store(result, (unint64_t *)&qword_2545FBE58);
  }
  return result;
}

unint64_t sub_20A59762C()
{
  unint64_t result;

  result = qword_2545FBE60;
  if (!qword_2545FBE60)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D57C8, &type metadata for MobileGestaltSource);
    atomic_store(result, (unint64_t *)&qword_2545FBE60);
  }
  return result;
}

unint64_t sub_20A597674()
{
  unint64_t result;

  result = qword_2545FBE68;
  if (!qword_2545FBE68)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D5880, &type metadata for AccountsSource);
    atomic_store(result, (unint64_t *)&qword_2545FBE68);
  }
  return result;
}

unint64_t sub_20A5976BC()
{
  unint64_t result;

  result = qword_2545FBE70;
  if (!qword_2545FBE70)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D59C8, &type metadata for ArmandDeviceDataErrorCode.PacErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBE70);
  }
  return result;
}

unint64_t sub_20A597704()
{
  unint64_t result;

  result = qword_2545FBE78;
  if (!qword_2545FBE78)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D5D50, &type metadata for ArmandDeviceDataErrorCode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBE78);
  }
  return result;
}

unint64_t sub_20A59774C()
{
  unint64_t result;

  result = qword_2545FBE80;
  if (!qword_2545FBE80)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D5C70, &type metadata for ArmandDeviceDataErrorCode.NoErrCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBE80);
  }
  return result;
}

unint64_t sub_20A597794()
{
  unint64_t result;

  result = qword_2545FBE88;
  if (!qword_2545FBE88)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D5C98, &type metadata for ArmandDeviceDataErrorCode.NoErrCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBE88);
  }
  return result;
}

unint64_t sub_20A5977DC()
{
  unint64_t result;

  result = qword_2545FBE90;
  if (!qword_2545FBE90)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D5C20, &type metadata for ArmandDeviceDataErrorCode.UnsetValueCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBE90);
  }
  return result;
}

unint64_t sub_20A597824()
{
  unint64_t result;

  result = qword_2545FBE98;
  if (!qword_2545FBE98)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D5C48, &type metadata for ArmandDeviceDataErrorCode.UnsetValueCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBE98);
  }
  return result;
}

unint64_t sub_20A59786C()
{
  unint64_t result;

  result = qword_2545FBEA0;
  if (!qword_2545FBEA0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D5BD0, &type metadata for ArmandDeviceDataErrorCode.NilOptionalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBEA0);
  }
  return result;
}

unint64_t sub_20A5978B4()
{
  unint64_t result;

  result = qword_2545FBEA8;
  if (!qword_2545FBEA8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D5BF8, &type metadata for ArmandDeviceDataErrorCode.NilOptionalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBEA8);
  }
  return result;
}

unint64_t sub_20A5978FC()
{
  unint64_t result;

  result = qword_2545FBEB0;
  if (!qword_2545FBEB0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D5B80, &type metadata for ArmandDeviceDataErrorCode.DeniedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBEB0);
  }
  return result;
}

unint64_t sub_20A597944()
{
  unint64_t result;

  result = qword_2545FBEB8;
  if (!qword_2545FBEB8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D5BA8, &type metadata for ArmandDeviceDataErrorCode.DeniedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBEB8);
  }
  return result;
}

unint64_t sub_20A59798C()
{
  unint64_t result;

  result = qword_2545FBEC0;
  if (!qword_2545FBEC0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D5B30, &type metadata for ArmandDeviceDataErrorCode.UnexpectedErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBEC0);
  }
  return result;
}

unint64_t sub_20A5979D4()
{
  unint64_t result;

  result = qword_2545FBEC8;
  if (!qword_2545FBEC8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D5B58, &type metadata for ArmandDeviceDataErrorCode.UnexpectedErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBEC8);
  }
  return result;
}

unint64_t sub_20A597A1C()
{
  unint64_t result;

  result = qword_2545FBED0;
  if (!qword_2545FBED0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D5AE0, &type metadata for ArmandDeviceDataErrorCode.UnsupportedSourceFieldErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBED0);
  }
  return result;
}

unint64_t sub_20A597A64()
{
  unint64_t result;

  result = qword_2545FBED8;
  if (!qword_2545FBED8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D5B08, &type metadata for ArmandDeviceDataErrorCode.UnsupportedSourceFieldErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBED8);
  }
  return result;
}

unint64_t sub_20A597AAC()
{
  unint64_t result;

  result = qword_2545FBEE0;
  if (!qword_2545FBEE0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D5A90, &type metadata for ArmandDeviceDataErrorCode.EncodingErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBEE0);
  }
  return result;
}

unint64_t sub_20A597AF4()
{
  unint64_t result;

  result = qword_2545FBEE8;
  if (!qword_2545FBEE8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D5AB8, &type metadata for ArmandDeviceDataErrorCode.EncodingErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBEE8);
  }
  return result;
}

unint64_t sub_20A597B3C()
{
  unint64_t result;

  result = qword_2545FBEF0;
  if (!qword_2545FBEF0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D5A40, &type metadata for ArmandDeviceDataErrorCode.NotYetImplementedErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBEF0);
  }
  return result;
}

unint64_t sub_20A597B84()
{
  unint64_t result;

  result = qword_2545FBEF8;
  if (!qword_2545FBEF8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D5A68, &type metadata for ArmandDeviceDataErrorCode.NotYetImplementedErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBEF8);
  }
  return result;
}

unint64_t sub_20A597BCC()
{
  unint64_t result;

  result = qword_2545FBF00;
  if (!qword_2545FBF00)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D59F0, &type metadata for ArmandDeviceDataErrorCode.EmptyDictionaryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBF00);
  }
  return result;
}

unint64_t sub_20A597C14()
{
  unint64_t result;

  result = qword_2545FBF08;
  if (!qword_2545FBF08)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D5A18, &type metadata for ArmandDeviceDataErrorCode.EmptyDictionaryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBF08);
  }
  return result;
}

unint64_t sub_20A597C5C()
{
  unint64_t result;

  result = qword_2545FBF10;
  if (!qword_2545FBF10)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D5938, &type metadata for ArmandDeviceDataErrorCode.PacErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBF10);
  }
  return result;
}

unint64_t sub_20A597CA4()
{
  unint64_t result;

  result = qword_2545FBF18;
  if (!qword_2545FBF18)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D5960, &type metadata for ArmandDeviceDataErrorCode.PacErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBF18);
  }
  return result;
}

unint64_t sub_20A597CEC()
{
  unint64_t result;

  result = qword_2545FBF20;
  if (!qword_2545FBF20)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D5CC0, &type metadata for ArmandDeviceDataErrorCode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBF20);
  }
  return result;
}

unint64_t sub_20A597D34()
{
  unint64_t result;

  result = qword_2545FBF28;
  if (!qword_2545FBF28)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D5CE8, &type metadata for ArmandDeviceDataErrorCode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBF28);
  }
  return result;
}

uint64_t type metadata accessor for ODIKnownBinding()
{
  uint64_t result;

  result = qword_2545FC320;
  if (!qword_2545FC320)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_20A597DB4(unint64_t *a1, unint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_20A459574(255, a2);
    result = MEMORY[0x20BD26CEC](MEMORY[0x24BEE5BD8], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A597DF4(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  unsigned __int8 *v4;
  unsigned int v5;
  char v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  sub_20A59B890();
  result = sub_20A5B8C00();
  v7 = result;
  if (v2)
  {
    v4 = (unsigned __int8 *)(a1 + 32);
    do
    {
      v5 = *v4++;
      sub_20A57C63C(&v6, v5, (void (*)(uint64_t))sub_20A510E48, (uint64_t)&type metadata for GeocoderSource.AddressType, &qword_2545FB5C0, (uint64_t (*)(uint64_t))sub_20A5114DC);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_20A597EA4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7272456F6ELL && a2 == 0xE500000000000000;
  if (v2 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C61567465736E75 && a2 == 0xEA00000000006575 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F6974704F6C696ELL && a2 == 0xEB000000006C616ELL || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6465696E6564 && a2 == 0xE600000000000000 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7463657078656E75 && a2 == 0xEF726F7272456465 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x800000020A5E4DD0 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x676E69646F636E65 && a2 == 0xED0000726F727245 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000020A5E4DF0 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6369447974706D65 && a2 == 0xEF7972616E6F6974 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x726F727245636170 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    v6 = sub_20A5B91AC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 9;
    else
      return 10;
  }
}

unint64_t sub_20A598328()
{
  unint64_t result;

  result = qword_2545FBF50;
  if (!qword_2545FBF50)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D7230, &type metadata for AccountsSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBF50);
  }
  return result;
}

unint64_t sub_20A59836C()
{
  unint64_t result;

  result = qword_2545FBF80;
  if (!qword_2545FBF80)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D71E0, &type metadata for MobileGestaltSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBF80);
  }
  return result;
}

unint64_t sub_20A5983B0()
{
  unint64_t result;

  result = qword_2545FBFB0;
  if (!qword_2545FBFB0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D7190, &type metadata for BaaSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBFB0);
  }
  return result;
}

unint64_t sub_20A5983F4()
{
  unint64_t result;

  result = qword_2545FBFE0;
  if (!qword_2545FBFE0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D7140, &type metadata for NearFieldSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBFE0);
  }
  return result;
}

unint64_t sub_20A598438()
{
  unint64_t result;

  result = qword_2545FBFF8;
  if (!qword_2545FBFF8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D70F0, &type metadata for IDSSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FBFF8);
  }
  return result;
}

unint64_t sub_20A59847C()
{
  unint64_t result;

  result = qword_2545FC010;
  if (!qword_2545FC010)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D70A0, &type metadata for CoreTelephonySource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC010);
  }
  return result;
}

unint64_t sub_20A5984C0()
{
  unint64_t result;

  result = qword_2545FC040;
  if (!qword_2545FC040)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D7050, &type metadata for LocationSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC040);
  }
  return result;
}

unint64_t sub_20A598504()
{
  unint64_t result;

  result = qword_2545FC070;
  if (!qword_2545FC070)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D7000, &type metadata for TelephonyUtilitiesSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC070);
  }
  return result;
}

unint64_t sub_20A598548()
{
  unint64_t result;

  result = qword_2545FC088;
  if (!qword_2545FC088)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D6FB0, &type metadata for TimeZoneSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC088);
  }
  return result;
}

unint64_t sub_20A59858C()
{
  unint64_t result;

  result = qword_2545FC0A0;
  if (!qword_2545FC0A0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D6F60, &type metadata for CallerClientSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC0A0);
  }
  return result;
}

unint64_t sub_20A5985D0()
{
  unint64_t result;

  result = qword_2545FC0E8;
  if (!qword_2545FC0E8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D6F10, &type metadata for NameParserSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC0E8);
  }
  return result;
}

uint64_t sub_20A598614(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_20A5986EC()
{
  unint64_t result;

  result = qword_2545FC100;
  if (!qword_2545FC100)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D6EC0, &type metadata for DeviceSettingsSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC100);
  }
  return result;
}

unint64_t sub_20A598730()
{
  unint64_t result;

  result = qword_2545FC118;
  if (!qword_2545FC118)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D6E70, &type metadata for GeocoderSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC118);
  }
  return result;
}

unint64_t sub_20A598774()
{
  unint64_t result;

  result = qword_2545FC130;
  if (!qword_2545FC130)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D6E20, &type metadata for PhoneFormatterSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC130);
  }
  return result;
}

uint64_t sub_20A5987B8(uint64_t a1)
{
  uint64_t *v1;

  return sub_20A44AACC(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_20A5987C4(uint64_t a1)
{
  uint64_t v1;

  return sub_20A47D8BC(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_20A5987CC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C62756F44 && a2 == 0xE600000000000000;
  if (v2 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E69727453 && a2 == 0xE600000000000000 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 7630409 && a2 == 0xE300000000000000 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1702125892 && a2 == 0xE400000000000000 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1819242306 && a2 == 0xE400000000000000 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 1819047246 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_20A5B91AC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_20A5989FC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x645F73656E757469 && a2 == 0xEB00000000646973;
  if (v2 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x645F64756F6C6369 && a2 == 0xEB00000000646973 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4449656C707061 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_20A5B91AC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_20A598B7C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x726556646C697562 && a2 == 0xEC0000006E6F6973;
  if (v2 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6169726573 && a2 == 0xE600000000000000 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1684628597 && a2 == 0xE400000000000000 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1684628325 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_20A5B91AC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_20A598D20(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1684628325 && a2 == 0xE400000000000000;
  if (v2 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1684628851 && a2 == 0xE400000000000000 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F6973726556736FLL && a2 == 0xE90000000000006ELL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_20A5B91AC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_20A598E5C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7265626D756ELL && a2 == 0xE600000000000000;
  if (v2 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6469636369 && a2 == 0xE500000000000000 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1769172329 && a2 == 0xE400000000000000 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6572506D69537369 && a2 == 0xEC000000746E6573)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_20A5B91AC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_20A59900C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x61636F6C5F737067 && a2 == 0xEC0000006E6F6974;
  if (v2 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000020A5E57F0 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656475746974616CLL && a2 == 0xE800000000000000 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x64757469676E6F6CLL && a2 == 0xE900000000000065 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000020A5DA590 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000020A5DA5B0 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6564757469746C61 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_20A5B91AC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t sub_20A5992DC(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000011 && a2 == 0x800000020A5E5810)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_20A5B91AC();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_20A599360(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000010 && a2 == 0x800000020A5E5830)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_20A5B91AC();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_20A5993E4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6563697665447369 && a2 == 0xEE0064656B636F4CLL;
  if (v2 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000020A5DA730 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000020A5DA750 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x614C656369766564 && a2 == 0xEE0065676175676ELL)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_20A5B91AC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_20A5995D8(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000014 && a2 == 0x800000020A5DA780 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000020A5DA7A0 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000020A5DA7C0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_20A5B91AC();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_20A599718(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6974614C656D6F68 && a2 == 0xEC00000065647574;
  if (v2 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E6F4C656D6F68 && a2 == 0xED00006564757469 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000020A5E5850 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000020A5E5870 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4C676E696C6C6962 && a2 == 0xEF65647574697461 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000020A5E5890 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x746974614C636F64 && a2 == 0xEB00000000656475 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x69676E6F4C636F64 && a2 == 0xEC00000065647574)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_20A5B91AC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t sub_20A599AC8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x66657250656D616ELL && a2 == 0xEA00000000007869;
  if (v2 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x614E796C696D6166 && a2 == 0xEA0000000000656DLL || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D614E6E65766967 && a2 == 0xE900000000000065 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x614E656C6464696DLL && a2 == 0xEA0000000000656DLL || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x66667553656D616ELL && a2 == 0xEA00000000007869 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x656D616E6B63696ELL && a2 == 0xE800000000000000 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x656D614E72656570 && a2 == 0xEE00786966657250 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x696D614672656570 && a2 == 0xEE00656D614E796CLL || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6576694772656570 && a2 == 0xED0000656D614E6ELL || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6464694D72656570 && a2 == 0xEE00656D614E656CLL || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x656D614E72656570 && a2 == 0xEE00786966667553 || (sub_20A5B91AC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6B63694E72656570 && a2 == 0xEC000000656D616ELL)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    v6 = sub_20A5B91AC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 11;
    else
      return 12;
  }
}

uint64_t sub_20A59A090(void *a1)
{
  double v2;
  double v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  double v8;
  id v9;
  id v10;

  objc_msgSend(a1, sel_coordinate);
  v3 = v2;
  if (qword_2545F9968 != -1)
    swift_once();
  v4 = (void *)qword_2545FA530;
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, v3);
  v6 = objc_msgSend(v4, sel_stringFromNumber_, v5);

  if (v6)
  {
    sub_20A5B8900();

  }
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  sub_20A5B899C();
  objc_msgSend(a1, sel_coordinate);
  v7 = (void *)qword_2545FA530;
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, v8);
  v10 = objc_msgSend(v7, sel_stringFromNumber_, v9);

  if (v10)
  {
    sub_20A5B8900();

  }
  sub_20A5B899C();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_20A59A258()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_20A59A27C()
{
  return objectdestroy_79Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8], (void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t sub_20A59A290(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_20A45A37C;
  return sub_20A56D78C(a1, v4, v5, v6);
}

unint64_t sub_20A59A2F8()
{
  unint64_t result;

  result = qword_2545FC178;
  if (!qword_2545FC178)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D6DA0, &type metadata for PhoneFormatterSource.PhoneNumberType);
    atomic_store(result, &qword_2545FC178);
  }
  return result;
}

uint64_t sub_20A59A33C()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20A59A380(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;

  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 80);
  v6 = *(_QWORD *)(v1 + 88);
  v7 = *(_QWORD *)(v1 + 112);
  v8 = swift_task_alloc();
  v9 = *(_OWORD *)(v1 + 96);
  *(_QWORD *)(v2 + 16) = v8;
  *(_QWORD *)v8 = v2;
  *(_QWORD *)(v8 + 8) = sub_20A45A37C;
  *(_QWORD *)(v8 + 152) = v7;
  *(_OWORD *)(v8 + 136) = v9;
  *(_QWORD *)(v8 + 120) = v5;
  *(_QWORD *)(v8 + 128) = v6;
  *(_QWORD *)(v8 + 104) = v4;
  *(_QWORD *)(v8 + 112) = v1 + 40;
  *(_QWORD *)(v8 + 96) = a1;
  return swift_task_switch();
}

__n128 *sub_20A59A41C(__n128 *a1, __n128 *a2)
{
  __swift_memcpy17_8(a2, a1);
  return a2;
}

uint64_t sub_20A59A458(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_BYTE *)(a1 + 32);
  swift_bridgeObjectRetain();
  sub_20A45DDBC(v2, v3, v4);
  return a1;
}

uint64_t sub_20A59A4A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_BYTE *)(a1 + 32);
  swift_bridgeObjectRelease();
  sub_20A45DDCC(v2, v3, v4);
  return a1;
}

uint64_t sub_20A59A4E8()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  return swift_deallocObject();
}

uint64_t sub_20A59A52C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_20A45A37C;
  return sub_20A579E04(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_20A59A5D4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v9 = v1[6];
  v8 = v1[7];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_20A45A37C;
  return sub_20A5795AC(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t objectdestroy_97Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_20A59A698(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v9 = v1[6];
  v8 = v1[7];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_20A45A37C;
  return sub_20A57893C(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_20A59A724(uint64_t a1)
{
  sub_20A45DDBC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  return a1;
}

uint64_t sub_20A59A754(uint64_t a1)
{
  sub_20A45DDCC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  return a1;
}

uint64_t sub_20A59A784()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_20A59A7B8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;

  v2 = v0[4];
  v3 = v0[5];
  v4 = v0[6];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_20A45A37C;
  v5[5] = v3;
  v5[6] = v4;
  v6 = (_QWORD *)swift_task_alloc();
  v5[7] = v6;
  *v6 = v5;
  v6[1] = sub_20A5787EC;
  v6[5] = v2;
  return swift_task_switch();
}

uint64_t sub_20A59A84C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (uint64_t)(v1 + 4);
  v7 = v1[12];
  v8 = v1[13];
  v9 = v1[14];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_20A45A37C;
  return sub_20A5780B0(a1, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_20A59A8E0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (uint64_t)(v1 + 4);
  v7 = v1[12];
  v8 = v1[13];
  v9 = v1[14];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_20A45A37C;
  return sub_20A5779D8(a1, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_20A59A970()
{
  return objectdestroy_79Tm((void (*)(_QWORD))MEMORY[0x24BEE4F70], (void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_20A59A984(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_20A45A37C;
  return sub_20A5776E0(a1, v4, v5, v6);
}

uint64_t sub_20A59A9F0()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  sub_20A45DDCC(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_BYTE *)(v0 + 64));
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_20A59AA40()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v2 = v0 + 4;
  v3 = v0[12];
  v4 = v0 + 13;
  v6 = v0[18];
  v5 = v0[19];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v7;
  *v7 = v1;
  v7[1] = sub_20A45A37C;
  v7[25] = v6;
  v7[26] = v5;
  v7[23] = v3;
  v7[24] = v4;
  v7[22] = v2;
  return swift_task_switch();
}

uint64_t sub_20A59AAC8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (uint64_t)(v1 + 4);
  v7 = v1[12];
  v8 = v1[13];
  v9 = v1[14];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_20A45A37C;
  return sub_20A5768D8(a1, v4, v5, v6, v7, v8, v9);
}

uint64_t objectdestroy_109Tm()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  sub_20A45DDCC(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_BYTE *)(v0 + 64));
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_20A59ABA4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (uint64_t)(v1 + 4);
  v7 = v1[12];
  v8 = v1[13];
  v9 = v1[14];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_20A45A37C;
  return sub_20A5760CC(a1, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_20A59AC34()
{
  return objectdestroy_79Tm((void (*)(_QWORD))MEMORY[0x24BEE4F70], (void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t objectdestroy_79Tm(void (*a1)(_QWORD), void (*a2)(_QWORD))
{
  uint64_t v2;

  a1(*(_QWORD *)(v2 + 16));
  a2(*(_QWORD *)(v2 + 32));
  return swift_deallocObject();
}

uint64_t sub_20A59AC84(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_20A45A37C;
  return sub_20A575FC4(a1, v4, v5, v6);
}

uint64_t sub_20A59ACF0()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 48);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_20A59AD2C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = (uint64_t)(v1 + 6);
  v10 = v1[11];
  v9 = v1[12];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_20A45A37C;
  return sub_20A575924(a1, v4, v5, v6, v7, v8, v10, v9);
}

uint64_t sub_20A59ADC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_20A45A37C;
  return sub_20A575F60(a1, v4, v1 + 24);
}

uint64_t sub_20A59AE2C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_20A45A37C;
  v2[2] = v0;
  return swift_task_switch();
}

uint64_t sub_20A59AE88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_20A45A37C;
  return sub_20A576F90(a1, v1);
}

uint64_t objectdestroy_141Tm()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocObject();
}

uint64_t sub_20A59AF0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_20A45A37C;
  v3[5] = v2;
  v3[6] = v0 + 24;
  return swift_task_switch();
}

uint64_t sub_20A59AF70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_20A45A37C;
  return sub_20A578050(a1, v1);
}

uint64_t sub_20A59AFC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_20A45A37C;
  return sub_20A578728(a1, v1);
}

uint64_t sub_20A59B018(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_20A4597C0;
  return sub_20A579274(a1, v1);
}

uint64_t sub_20A59B068(uint64_t a1)
{
  return sub_20A4A30A4(a1, sub_20A505F94);
}

uint64_t sub_20A59B074()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_20A45A37C;
  v2[2] = v0;
  return swift_task_switch();
}

uint64_t sub_20A59B0D0()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  return swift_deallocObject();
}

uint64_t sub_20A59B104()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 24);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_20A45A37C;
  v4 = (_QWORD *)swift_task_alloc();
  v3[2] = v4;
  *v4 = v3;
  v4[1] = sub_20A4597C0;
  return sub_20A56CE1C(v2, v0 + 32);
}

uint64_t sub_20A59B184()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20A59B1C0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[7];
  v5 = v1[8];
  v6 = v1[9];
  v7 = v1[10];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_20A45A37C;
  return sub_20A575198(a1, (uint64_t)(v1 + 2), v4, v5, v6, v7);
}

unint64_t sub_20A59B250()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v0 = swift_bridgeObjectRetain();
  v1 = sub_20A597DF4(v0);
  swift_bridgeObjectRelease();
  v2 = sub_20A57C124(v1, &qword_2545FA080);
  swift_bridgeObjectRelease();
  v3 = sub_20A479B5C(MEMORY[0x24BEE4AF8]);
  v4 = v2;
  v5 = v3;
  if (*(_QWORD *)(v4 + 16))
    __asm { BR              X9 }
  swift_release();
  return v5;
}

unint64_t sub_20A59B890()
{
  unint64_t result;

  result = qword_2545FC310;
  if (!qword_2545FC310)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D6D60, &type metadata for GeocoderSource.AddressType);
    atomic_store(result, (unint64_t *)&qword_2545FC310);
  }
  return result;
}

uint64_t sub_20A59B8D4(uint64_t a1)
{
  int v1;
  unsigned int v2;

  if (*(unsigned __int8 *)(a1 + 9) <= 0xD9u)
    v1 = 217;
  else
    v1 = *(unsigned __int8 *)(a1 + 9);
  v2 = v1 - 217;
  if (*(unsigned __int8 *)(a1 + 9) >= 0xD1u)
    return v2;
  else
    return 0;
}

uint64_t sub_20A59B8F4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_20A59B908(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRetain();
  return result;
}

ValueMetadata *type metadata accessor for PhoneFormatterSource.PhoneNumberType()
{
  return &type metadata for PhoneFormatterSource.PhoneNumberType;
}

uint64_t getEnumTagSinglePayload for LocationProviderError(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 2;
  if (v4 >= 4)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for LocationProviderError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationProviderError()
{
  return &type metadata for LocationProviderError;
}

ValueMetadata *type metadata accessor for GeocoderSource.AddressType()
{
  return &type metadata for GeocoderSource.AddressType;
}

ValueMetadata *type metadata accessor for PhoneFormatterSource.CodingKeys()
{
  return &type metadata for PhoneFormatterSource.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for GeocoderSource.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_20A59BA5C + 4 * byte_20A5D496E[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_20A59BA90 + 4 * byte_20A5D4969[v4]))();
}

uint64_t sub_20A59BA90(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A59BA98(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A59BAA0);
  return result;
}

uint64_t sub_20A59BAAC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A59BAB4);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_20A59BAB8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A59BAC0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GeocoderSource.CodingKeys()
{
  return &type metadata for GeocoderSource.CodingKeys;
}

ValueMetadata *type metadata accessor for DeviceSettingsSource.CodingKeys()
{
  return &type metadata for DeviceSettingsSource.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for NameParserSource.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_20A59BB38 + 4 * byte_20A5D4978[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_20A59BB6C + 4 * byte_20A5D4973[v4]))();
}

uint64_t sub_20A59BB6C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A59BB74(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A59BB7CLL);
  return result;
}

uint64_t sub_20A59BB88(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A59BB90);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_20A59BB94(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A59BB9C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NameParserSource.CodingKeys()
{
  return &type metadata for NameParserSource.CodingKeys;
}

ValueMetadata *type metadata accessor for CallerClientSource.CodingKeys()
{
  return &type metadata for CallerClientSource.CodingKeys;
}

ValueMetadata *type metadata accessor for TimeZoneSource.CodingKeys()
{
  return &type metadata for TimeZoneSource.CodingKeys;
}

ValueMetadata *type metadata accessor for TelephonyUtilitiesSource.CodingKeys()
{
  return &type metadata for TelephonyUtilitiesSource.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for LocationSource.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_20A59BC34 + 4 * byte_20A5D4982[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_20A59BC68 + 4 * byte_20A5D497D[v4]))();
}

uint64_t sub_20A59BC68(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A59BC70(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A59BC78);
  return result;
}

uint64_t sub_20A59BC84(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A59BC8CLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_20A59BC90(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A59BC98(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LocationSource.CodingKeys()
{
  return &type metadata for LocationSource.CodingKeys;
}

ValueMetadata *type metadata accessor for CoreTelephonySource.CodingKeys()
{
  return &type metadata for CoreTelephonySource.CodingKeys;
}

ValueMetadata *type metadata accessor for IDSSource.CodingKeys()
{
  return &type metadata for IDSSource.CodingKeys;
}

ValueMetadata *type metadata accessor for NearFieldSource.CodingKeys()
{
  return &type metadata for NearFieldSource.CodingKeys;
}

ValueMetadata *type metadata accessor for BaaSource.CodingKeys()
{
  return &type metadata for BaaSource.CodingKeys;
}

uint64_t _s17CoreODIEssentials14GeocoderSourceV11AddressTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_20A59BD40 + 4 * byte_20A5D498C[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_20A59BD74 + 4 * byte_20A5D4987[v4]))();
}

uint64_t sub_20A59BD74(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A59BD7C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A59BD84);
  return result;
}

uint64_t sub_20A59BD90(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A59BD98);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_20A59BD9C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A59BDA4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MobileGestaltSource.CodingKeys()
{
  return &type metadata for MobileGestaltSource.CodingKeys;
}

uint64_t _s17CoreODIEssentials20PhoneFormatterSourceV15PhoneNumberTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_20A59BE0C + 4 * byte_20A5D4996[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_20A59BE40 + 4 * byte_20A5D4991[v4]))();
}

uint64_t sub_20A59BE40(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A59BE48(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A59BE50);
  return result;
}

uint64_t sub_20A59BE5C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A59BE64);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_20A59BE68(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A59BE70(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AccountsSource.CodingKeys()
{
  return &type metadata for AccountsSource.CodingKeys;
}

uint64_t *sub_20A59BE8C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      v10 = sub_20A5B8630();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
  }
  return a1;
}

uint64_t sub_20A59BF68(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 3)
  {
    v3 = sub_20A5B8630();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  else if ((_DWORD)result == 1)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *sub_20A59BFCC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    v8 = sub_20A5B8630();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_20A59C080(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_20A465AB4((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for ODIKnownBinding);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      v7 = sub_20A5B8630();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void *sub_20A59C154(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 3)
  {
    v6 = sub_20A5B8630();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_20A59C1E0(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_20A465AB4((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for ODIKnownBinding);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      v6 = sub_20A5B8630();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_20A59C284()
{
  uint64_t result;
  unint64_t v1;

  result = sub_20A5B8630();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_20A59C30C()
{
  return sub_20A498124(&qword_2545FC330, 255, (uint64_t (*)(uint64_t))type metadata accessor for ODIKnownBinding, (uint64_t)&unk_20A5D6248);
}

unint64_t sub_20A59C340()
{
  unint64_t result;

  result = qword_2545FC338;
  if (!qword_2545FC338)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D6390, &type metadata for AccountsSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC338);
  }
  return result;
}

unint64_t sub_20A59C388()
{
  unint64_t result;

  result = qword_2545FC340;
  if (!qword_2545FC340)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D6448, &type metadata for MobileGestaltSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC340);
  }
  return result;
}

unint64_t sub_20A59C3D0()
{
  unint64_t result;

  result = qword_2545FC348;
  if (!qword_2545FC348)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D6500, &type metadata for BaaSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC348);
  }
  return result;
}

unint64_t sub_20A59C418()
{
  unint64_t result;

  result = qword_2545FC350;
  if (!qword_2545FC350)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D65B8, &type metadata for NearFieldSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC350);
  }
  return result;
}

unint64_t sub_20A59C460()
{
  unint64_t result;

  result = qword_2545FC358;
  if (!qword_2545FC358)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D6670, &type metadata for IDSSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC358);
  }
  return result;
}

unint64_t sub_20A59C4A8()
{
  unint64_t result;

  result = qword_2545FC360;
  if (!qword_2545FC360)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D6728, &type metadata for CoreTelephonySource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC360);
  }
  return result;
}

unint64_t sub_20A59C4F0()
{
  unint64_t result;

  result = qword_2545FC368;
  if (!qword_2545FC368)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D67E0, &type metadata for LocationSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC368);
  }
  return result;
}

unint64_t sub_20A59C538()
{
  unint64_t result;

  result = qword_2545FC370;
  if (!qword_2545FC370)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D6898, &type metadata for TelephonyUtilitiesSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC370);
  }
  return result;
}

unint64_t sub_20A59C580()
{
  unint64_t result;

  result = qword_2545FC378;
  if (!qword_2545FC378)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D6950, &type metadata for TimeZoneSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC378);
  }
  return result;
}

unint64_t sub_20A59C5C8()
{
  unint64_t result;

  result = qword_2545FC380;
  if (!qword_2545FC380)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D6A08, &type metadata for CallerClientSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC380);
  }
  return result;
}

unint64_t sub_20A59C610()
{
  unint64_t result;

  result = qword_2545FC388;
  if (!qword_2545FC388)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D6AC0, &type metadata for NameParserSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC388);
  }
  return result;
}

unint64_t sub_20A59C658()
{
  unint64_t result;

  result = qword_2545FC390;
  if (!qword_2545FC390)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D6B78, &type metadata for DeviceSettingsSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC390);
  }
  return result;
}

unint64_t sub_20A59C6A0()
{
  unint64_t result;

  result = qword_2545FC398;
  if (!qword_2545FC398)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D6C30, &type metadata for GeocoderSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC398);
  }
  return result;
}

unint64_t sub_20A59C6E8()
{
  unint64_t result;

  result = qword_2545FC3A0;
  if (!qword_2545FC3A0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D6CE8, &type metadata for PhoneFormatterSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC3A0);
  }
  return result;
}

unint64_t sub_20A59C730()
{
  unint64_t result;

  result = qword_2545FC3A8;
  if (!qword_2545FC3A8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D6D10, &type metadata for GeocoderSource.AddressType);
    atomic_store(result, (unint64_t *)&qword_2545FC3A8);
  }
  return result;
}

unint64_t sub_20A59C778()
{
  unint64_t result;

  result = qword_2545FC3B0;
  if (!qword_2545FC3B0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D6D38, &type metadata for PhoneFormatterSource.PhoneNumberType);
    atomic_store(result, (unint64_t *)&qword_2545FC3B0);
  }
  return result;
}

unint64_t sub_20A59C7C0()
{
  unint64_t result;

  result = qword_2545FC3B8;
  if (!qword_2545FC3B8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D6C58, &type metadata for PhoneFormatterSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC3B8);
  }
  return result;
}

unint64_t sub_20A59C808()
{
  unint64_t result;

  result = qword_2545FC3C0;
  if (!qword_2545FC3C0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D6C80, &type metadata for PhoneFormatterSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC3C0);
  }
  return result;
}

unint64_t sub_20A59C850()
{
  unint64_t result;

  result = qword_2545FC3C8;
  if (!qword_2545FC3C8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D6BA0, &type metadata for GeocoderSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC3C8);
  }
  return result;
}

unint64_t sub_20A59C898()
{
  unint64_t result;

  result = qword_2545FC3D0;
  if (!qword_2545FC3D0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D6BC8, &type metadata for GeocoderSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC3D0);
  }
  return result;
}

unint64_t sub_20A59C8E0()
{
  unint64_t result;

  result = qword_2545FC3D8;
  if (!qword_2545FC3D8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D6AE8, &type metadata for DeviceSettingsSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC3D8);
  }
  return result;
}

unint64_t sub_20A59C928()
{
  unint64_t result;

  result = qword_2545FC3E0;
  if (!qword_2545FC3E0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D6B10, &type metadata for DeviceSettingsSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC3E0);
  }
  return result;
}

unint64_t sub_20A59C970()
{
  unint64_t result;

  result = qword_2545FC3E8;
  if (!qword_2545FC3E8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D6A30, &type metadata for NameParserSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC3E8);
  }
  return result;
}

unint64_t sub_20A59C9B8()
{
  unint64_t result;

  result = qword_2545FC3F0;
  if (!qword_2545FC3F0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D6A58, &type metadata for NameParserSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC3F0);
  }
  return result;
}

unint64_t sub_20A59CA00()
{
  unint64_t result;

  result = qword_2545FC3F8;
  if (!qword_2545FC3F8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D6978, &type metadata for CallerClientSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC3F8);
  }
  return result;
}

unint64_t sub_20A59CA48()
{
  unint64_t result;

  result = qword_2545FC400;
  if (!qword_2545FC400)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D69A0, &type metadata for CallerClientSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC400);
  }
  return result;
}

unint64_t sub_20A59CA90()
{
  unint64_t result;

  result = qword_2545FC408;
  if (!qword_2545FC408)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D68C0, &type metadata for TimeZoneSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC408);
  }
  return result;
}

unint64_t sub_20A59CAD8()
{
  unint64_t result;

  result = qword_2545FC410;
  if (!qword_2545FC410)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D68E8, &type metadata for TimeZoneSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC410);
  }
  return result;
}

unint64_t sub_20A59CB20()
{
  unint64_t result;

  result = qword_2545FC418;
  if (!qword_2545FC418)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D6808, &type metadata for TelephonyUtilitiesSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC418);
  }
  return result;
}

unint64_t sub_20A59CB68()
{
  unint64_t result;

  result = qword_2545FC420;
  if (!qword_2545FC420)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D6830, &type metadata for TelephonyUtilitiesSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC420);
  }
  return result;
}

unint64_t sub_20A59CBB0()
{
  unint64_t result;

  result = qword_2545FC428;
  if (!qword_2545FC428)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D6750, &type metadata for LocationSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC428);
  }
  return result;
}

unint64_t sub_20A59CBF8()
{
  unint64_t result;

  result = qword_2545FC430;
  if (!qword_2545FC430)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D6778, &type metadata for LocationSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC430);
  }
  return result;
}

unint64_t sub_20A59CC40()
{
  unint64_t result;

  result = qword_2545FC438;
  if (!qword_2545FC438)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D6698, &type metadata for CoreTelephonySource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC438);
  }
  return result;
}

unint64_t sub_20A59CC88()
{
  unint64_t result;

  result = qword_2545FC440;
  if (!qword_2545FC440)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D66C0, &type metadata for CoreTelephonySource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC440);
  }
  return result;
}

unint64_t sub_20A59CCD0()
{
  unint64_t result;

  result = qword_2545FC448;
  if (!qword_2545FC448)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D65E0, &type metadata for IDSSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC448);
  }
  return result;
}

unint64_t sub_20A59CD18()
{
  unint64_t result;

  result = qword_2545FC450;
  if (!qword_2545FC450)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D6608, &type metadata for IDSSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC450);
  }
  return result;
}

unint64_t sub_20A59CD60()
{
  unint64_t result;

  result = qword_2545FC458;
  if (!qword_2545FC458)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D6528, &type metadata for NearFieldSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC458);
  }
  return result;
}

unint64_t sub_20A59CDA8()
{
  unint64_t result;

  result = qword_2545FC460;
  if (!qword_2545FC460)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D6550, &type metadata for NearFieldSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC460);
  }
  return result;
}

unint64_t sub_20A59CDF0()
{
  unint64_t result;

  result = qword_2545FC468;
  if (!qword_2545FC468)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D6470, &type metadata for BaaSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC468);
  }
  return result;
}

unint64_t sub_20A59CE38()
{
  unint64_t result;

  result = qword_2545FC470;
  if (!qword_2545FC470)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D6498, &type metadata for BaaSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC470);
  }
  return result;
}

unint64_t sub_20A59CE80()
{
  unint64_t result;

  result = qword_2545FC478;
  if (!qword_2545FC478)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D63B8, &type metadata for MobileGestaltSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC478);
  }
  return result;
}

unint64_t sub_20A59CEC8()
{
  unint64_t result;

  result = qword_2545FC480;
  if (!qword_2545FC480)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D63E0, &type metadata for MobileGestaltSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC480);
  }
  return result;
}

unint64_t sub_20A59CF10()
{
  unint64_t result;

  result = qword_2545FC488;
  if (!qword_2545FC488)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D6300, &type metadata for AccountsSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC488);
  }
  return result;
}

unint64_t sub_20A59CF58()
{
  unint64_t result;

  result = qword_2545FC490;
  if (!qword_2545FC490)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D6328, &type metadata for AccountsSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC490);
  }
  return result;
}

unint64_t sub_20A59CF9C()
{
  unint64_t result;

  result = qword_2545FC4D0;
  if (!qword_2545FC4D0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D796C, &type metadata for ODIKnownBinding.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC4D0);
  }
  return result;
}

unint64_t sub_20A59CFE0()
{
  unint64_t result;

  result = qword_2545FC4D8;
  if (!qword_2545FC4D8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D791C, &type metadata for ODIKnownBinding.NullCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC4D8);
  }
  return result;
}

unint64_t sub_20A59D024()
{
  unint64_t result;

  result = qword_2545FC4E0;
  if (!qword_2545FC4E0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D78CC, &type metadata for ODIKnownBinding.BoolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC4E0);
  }
  return result;
}

unint64_t sub_20A59D068()
{
  unint64_t result;

  result = qword_2545FC4E8;
  if (!qword_2545FC4E8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D787C, &type metadata for ODIKnownBinding.DateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC4E8);
  }
  return result;
}

unint64_t sub_20A59D0AC()
{
  unint64_t result;

  result = qword_2545FC4F0;
  if (!qword_2545FC4F0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D782C, &type metadata for ODIKnownBinding.IntCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC4F0);
  }
  return result;
}

unint64_t sub_20A59D0F0()
{
  unint64_t result;

  result = qword_2545FC4F8;
  if (!qword_2545FC4F8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D77DC, &type metadata for ODIKnownBinding.StringCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC4F8);
  }
  return result;
}

unint64_t sub_20A59D134()
{
  unint64_t result;

  result = qword_2545FC500;
  if (!qword_2545FC500)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D778C, &type metadata for ODIKnownBinding.DoubleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC500);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ODIKnownBinding.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_20A59D1C4 + 4 * byte_20A5D49A0[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_20A59D1F8 + 4 * byte_20A5D499B[v4]))();
}

uint64_t sub_20A59D1F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A59D200(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20A59D208);
  return result;
}

uint64_t sub_20A59D214(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20A59D21CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_20A59D220(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20A59D228(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ODIKnownBinding.CodingKeys()
{
  return &type metadata for ODIKnownBinding.CodingKeys;
}

ValueMetadata *type metadata accessor for ODIKnownBinding.DoubleCodingKeys()
{
  return &type metadata for ODIKnownBinding.DoubleCodingKeys;
}

ValueMetadata *type metadata accessor for ODIKnownBinding.StringCodingKeys()
{
  return &type metadata for ODIKnownBinding.StringCodingKeys;
}

ValueMetadata *type metadata accessor for ODIKnownBinding.IntCodingKeys()
{
  return &type metadata for ODIKnownBinding.IntCodingKeys;
}

ValueMetadata *type metadata accessor for ODIKnownBinding.DateCodingKeys()
{
  return &type metadata for ODIKnownBinding.DateCodingKeys;
}

uint64_t _s17CoreODIEssentials25ArmandDeviceDataErrorCodeO18PacErrorCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_20A59D2C4 + 4 * byte_20A5D49A5[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_20A59D2E4 + 4 * byte_20A5D49AA[v4]))();
}

_BYTE *sub_20A59D2C4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_20A59D2E4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_20A59D2EC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_20A59D2F4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_20A59D2FC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_20A59D304(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ODIKnownBinding.BoolCodingKeys()
{
  return &type metadata for ODIKnownBinding.BoolCodingKeys;
}

ValueMetadata *type metadata accessor for ODIKnownBinding.NullCodingKeys()
{
  return &type metadata for ODIKnownBinding.NullCodingKeys;
}

unint64_t sub_20A59D334()
{
  unint64_t result;

  result = qword_2545FC540;
  if (!qword_2545FC540)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D73CC, &type metadata for ODIKnownBinding.BoolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC540);
  }
  return result;
}

unint64_t sub_20A59D37C()
{
  unint64_t result;

  result = qword_2545FC548;
  if (!qword_2545FC548)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D7484, &type metadata for ODIKnownBinding.DateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC548);
  }
  return result;
}

unint64_t sub_20A59D3C4()
{
  unint64_t result;

  result = qword_2545FC550;
  if (!qword_2545FC550)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D753C, &type metadata for ODIKnownBinding.IntCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC550);
  }
  return result;
}

unint64_t sub_20A59D40C()
{
  unint64_t result;

  result = qword_2545FC558;
  if (!qword_2545FC558)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D75F4, &type metadata for ODIKnownBinding.StringCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC558);
  }
  return result;
}

unint64_t sub_20A59D454()
{
  unint64_t result;

  result = qword_2545FC560;
  if (!qword_2545FC560)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D76AC, &type metadata for ODIKnownBinding.DoubleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC560);
  }
  return result;
}

unint64_t sub_20A59D49C()
{
  unint64_t result;

  result = qword_2545FC568;
  if (!qword_2545FC568)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D7764, &type metadata for ODIKnownBinding.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC568);
  }
  return result;
}

unint64_t sub_20A59D4E4()
{
  unint64_t result;

  result = qword_2545FC570;
  if (!qword_2545FC570)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D761C, &type metadata for ODIKnownBinding.DoubleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC570);
  }
  return result;
}

unint64_t sub_20A59D52C()
{
  unint64_t result;

  result = qword_2545FC578;
  if (!qword_2545FC578)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D7644, &type metadata for ODIKnownBinding.DoubleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC578);
  }
  return result;
}

unint64_t sub_20A59D574()
{
  unint64_t result;

  result = qword_2545FC580;
  if (!qword_2545FC580)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D7564, &type metadata for ODIKnownBinding.StringCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC580);
  }
  return result;
}

unint64_t sub_20A59D5BC()
{
  unint64_t result;

  result = qword_2545FC588;
  if (!qword_2545FC588)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D758C, &type metadata for ODIKnownBinding.StringCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC588);
  }
  return result;
}

unint64_t sub_20A59D604()
{
  unint64_t result;

  result = qword_2545FC590;
  if (!qword_2545FC590)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D74AC, &type metadata for ODIKnownBinding.IntCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC590);
  }
  return result;
}

unint64_t sub_20A59D64C()
{
  unint64_t result;

  result = qword_2545FC598;
  if (!qword_2545FC598)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D74D4, &type metadata for ODIKnownBinding.IntCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC598);
  }
  return result;
}

unint64_t sub_20A59D694()
{
  unint64_t result;

  result = qword_2545FC5A0;
  if (!qword_2545FC5A0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D73F4, &type metadata for ODIKnownBinding.DateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC5A0);
  }
  return result;
}

unint64_t sub_20A59D6DC()
{
  unint64_t result;

  result = qword_2545FC5A8;
  if (!qword_2545FC5A8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D741C, &type metadata for ODIKnownBinding.DateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC5A8);
  }
  return result;
}

unint64_t sub_20A59D724()
{
  unint64_t result;

  result = qword_2545FC5B0;
  if (!qword_2545FC5B0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D733C, &type metadata for ODIKnownBinding.BoolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC5B0);
  }
  return result;
}

unint64_t sub_20A59D76C()
{
  unint64_t result;

  result = qword_2545FC5B8;
  if (!qword_2545FC5B8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D7364, &type metadata for ODIKnownBinding.BoolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC5B8);
  }
  return result;
}

unint64_t sub_20A59D7B4()
{
  unint64_t result;

  result = qword_2545FC5C0;
  if (!qword_2545FC5C0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D72EC, &type metadata for ODIKnownBinding.NullCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC5C0);
  }
  return result;
}

unint64_t sub_20A59D7FC()
{
  unint64_t result;

  result = qword_2545FC5C8;
  if (!qword_2545FC5C8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D7314, &type metadata for ODIKnownBinding.NullCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC5C8);
  }
  return result;
}

unint64_t sub_20A59D844()
{
  unint64_t result;

  result = qword_2545FC5D0;
  if (!qword_2545FC5D0)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D76D4, &type metadata for ODIKnownBinding.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC5D0);
  }
  return result;
}

unint64_t sub_20A59D88C()
{
  unint64_t result;

  result = qword_2545FC5D8;
  if (!qword_2545FC5D8)
  {
    result = MEMORY[0x20BD26CEC](&unk_20A5D76FC, &type metadata for ODIKnownBinding.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2545FC5D8);
  }
  return result;
}

Swift::Bool __swiftcall NSUserDefaults.internalBool(forKey:)(Swift::String forKey)
{
  void *v1;
  void *v2;
  unsigned __int8 v3;

  if (qword_253EB4740 != -1)
    swift_once();
  if (byte_253EBC790 != 1)
    return 0;
  v2 = (void *)sub_20A5B88F4();
  v3 = objc_msgSend(v1, sel_BOOLForKey_, v2);

  return v3;
}

Swift::String_optional __swiftcall NSUserDefaults.internalString(forKey:)(Swift::String forKey)
{
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  Swift::String_optional result;

  if (qword_253EB4740 != -1)
    swift_once();
  if (byte_253EBC790 == 1
    && (v2 = (void *)sub_20A5B88F4(),
        v3 = objc_msgSend(v1, sel_stringForKey_, v2),
        v2,
        v3))
  {
    v4 = sub_20A5B8900();
    v6 = v5;

  }
  else
  {
    v4 = 0;
    v6 = 0;
  }
  v7 = v4;
  v8 = v6;
  result.value._object = v8;
  result.value._countAndFlagsBits = v7;
  return result;
}

uint64_t sub_20A59DA38()
{
  void **v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;

  v1 = *v0;
  if (qword_253EB4740 != -1)
    swift_once();
  if (byte_253EBC790 != 1)
    return 0;
  v2 = (void *)sub_20A5B88F4();
  v3 = objc_msgSend(v1, sel_stringForKey_, v2);

  if (!v3)
    return 0;
  v4 = sub_20A5B8900();

  return v4;
}

Swift::Int_optional __swiftcall NSUserDefaults.internalInt(forKey:)(Swift::String forKey)
{
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  Swift::Int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 *v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  unsigned __int8 *v24;
  unsigned int v25;
  uint64_t v26;
  char v27;
  _QWORD v28[3];
  Swift::Int_optional result;

  if (qword_253EB4740 != -1)
    swift_once();
  if (byte_253EBC790 == 1)
  {
    v2 = (void *)sub_20A5B88F4();
    v3 = objc_msgSend(v1, sel_stringForKey_, v2);

    if (v3)
    {
      v4 = sub_20A5B8900();
      v6 = v5;

      v8 = HIBYTE(v6) & 0xF;
      v9 = v4 & 0xFFFFFFFFFFFFLL;
      if ((v6 & 0x2000000000000000) != 0)
        v10 = HIBYTE(v6) & 0xF;
      else
        v10 = v4 & 0xFFFFFFFFFFFFLL;
      if (v10)
      {
        if ((v6 & 0x1000000000000000) != 0)
        {
          v12 = (uint64_t)sub_20A5252A4(v4, v6, 10);
          LOBYTE(v4) = v27;
LABEL_48:
          swift_bridgeObjectRelease();
          v23 = v4 & 1;
          if ((v4 & 1) != 0)
            v7 = 0;
          else
            v7 = v12;
          goto LABEL_59;
        }
        if ((v6 & 0x2000000000000000) == 0)
        {
          if ((v4 & 0x1000000000000000) != 0)
            v11 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
          else
            v11 = (unsigned __int8 *)sub_20A5B8EE8();
          v12 = (uint64_t)sub_20A525290(v11, v9, 10);
          LOBYTE(v4) = v13 & 1;
          goto LABEL_48;
        }
        v28[0] = v4;
        v28[1] = v6 & 0xFFFFFFFFFFFFFFLL;
        if (v4 == 43)
        {
          if (!v8)
            goto LABEL_63;
          if (v8 == 1 || (BYTE1(v4) - 48) > 9u)
            goto LABEL_35;
          v12 = (BYTE1(v4) - 48);
          if (v8 != 2)
          {
            if ((BYTE2(v4) - 48) > 9u)
              goto LABEL_35;
            v12 = 10 * (BYTE1(v4) - 48) + (BYTE2(v4) - 48);
            v14 = v8 - 3;
            if (v14)
            {
              v15 = (unsigned __int8 *)v28 + 3;
              while (1)
              {
                v16 = *v15 - 48;
                if (v16 > 9)
                  goto LABEL_35;
                v17 = 10 * v12;
                if ((unsigned __int128)(v12 * (__int128)10) >> 64 != (10 * v12) >> 63)
                  goto LABEL_35;
                v12 = v17 + v16;
                if (__OFADD__(v17, v16))
                  goto LABEL_35;
                LOBYTE(v4) = 0;
                ++v15;
                if (!--v14)
                  goto LABEL_48;
              }
            }
          }
        }
        else
        {
          if (v4 == 45)
          {
            if (v8)
            {
              if (v8 != 1 && (BYTE1(v4) - 48) <= 9u)
              {
                if (v8 == 2)
                {
                  LOBYTE(v4) = 0;
                  v12 = -(uint64_t)(BYTE1(v4) - 48);
                  goto LABEL_48;
                }
                if ((BYTE2(v4) - 48) <= 9u)
                {
                  v12 = -10 * (BYTE1(v4) - 48) - (BYTE2(v4) - 48);
                  v22 = v8 - 3;
                  if (!v22)
                    goto LABEL_47;
                  v24 = (unsigned __int8 *)v28 + 3;
                  while (1)
                  {
                    v25 = *v24 - 48;
                    if (v25 > 9)
                      break;
                    v26 = 10 * v12;
                    if ((unsigned __int128)(v12 * (__int128)10) >> 64 != (10 * v12) >> 63)
                      break;
                    v12 = v26 - v25;
                    if (__OFSUB__(v26, v25))
                      break;
                    LOBYTE(v4) = 0;
                    ++v24;
                    if (!--v22)
                      goto LABEL_48;
                  }
                }
              }
LABEL_35:
              v12 = 0;
              LOBYTE(v4) = 1;
              goto LABEL_48;
            }
            __break(1u);
LABEL_63:
            __break(1u);
            goto LABEL_64;
          }
          if (!v8 || (v4 - 48) > 9u)
            goto LABEL_35;
          v12 = (v4 - 48);
          if (v8 != 1)
          {
            if ((BYTE1(v4) - 48) > 9u)
              goto LABEL_35;
            v12 = 10 * (v4 - 48) + (BYTE1(v4) - 48);
            v18 = v8 - 2;
            if (v18)
            {
              v19 = (unsigned __int8 *)v28 + 2;
              while (1)
              {
                v20 = *v19 - 48;
                if (v20 > 9)
                  goto LABEL_35;
                v21 = 10 * v12;
                if ((unsigned __int128)(v12 * (__int128)10) >> 64 != (10 * v12) >> 63)
                  goto LABEL_35;
                v12 = v21 + v20;
                if (__OFADD__(v21, v20))
                  goto LABEL_35;
                LOBYTE(v4) = 0;
                ++v19;
                if (!--v18)
                  goto LABEL_48;
              }
            }
          }
        }
LABEL_47:
        LOBYTE(v4) = 0;
        goto LABEL_48;
      }
      swift_bridgeObjectRelease();
    }
  }
  v7 = 0;
  v23 = 1;
LABEL_59:
  LOBYTE(v9) = v23;
LABEL_64:
  result.is_nil = v9;
  result.value = v7;
  return result;
}

void __swiftcall NSUserDefaults.internalFloat(forKey:)(Swift::Float_optional *__return_ptr retstr, Swift::String forKey)
{
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _BYTE *v12;
  BOOL v13;
  uint64_t v14;
  _QWORD v15[4];
  _QWORD v16[3];
  char v17;
  int v18;

  if (qword_253EB4740 != -1)
    swift_once();
  if (byte_253EBC790 == 1)
  {
    v3 = (void *)sub_20A5B88F4();
    v4 = objc_msgSend(v2, sel_stringForKey_, v3);

    if (v4)
    {
      v5 = sub_20A5B8900();
      v7 = v6;

      v18 = 0;
      v10 = MEMORY[0x24BDAC7A8](v8, v9);
      v15[2] = &v18;
      if ((v7 & 0x1000000000000000) != 0 || !(v7 & 0x2000000000000000 | v5 & 0x1000000000000000))
      {
        sub_20A5B8E70();
      }
      else
      {
        MEMORY[0x24BDAC7A8](v10, v15);
        if ((v7 & 0x2000000000000000) != 0)
        {
          v16[0] = v5;
          v16[1] = v7 & 0xFFFFFFFFFFFFFFLL;
          v13 = (v5 > 0x20u || ((0x100003E01uLL >> v5) & 1) == 0)
             && (v12 = (_BYTE *)_swift_stdlib_strtof_clocale()) != 0
             && *v12 == 0;
          v17 = v13;
          swift_bridgeObjectRelease();
          goto LABEL_19;
        }
        if ((v5 & 0x1000000000000000) != 0)
        {
          ((void (*)(_QWORD *__return_ptr, uint64_t))sub_20A59E2AC)(v16, (v7 & 0xFFFFFFFFFFFFFFFLL) + 32);
        }
        else
        {
          v14 = sub_20A5B8EE8();
          ((void (*)(_QWORD *__return_ptr, uint64_t))sub_20A59E2AC)(v16, v14);
        }
        v17 = v16[0];
      }
      swift_bridgeObjectRelease();
LABEL_19:
      v11 = v17 ^ 1;
      goto LABEL_20;
    }
  }
  v11 = 1;
LABEL_20:
  LOBYTE(v16[0]) = v11;
}

uint64_t static NSUserDefaults.globalInternalBool(forKey:)(uint64_t a1, uint64_t a2)
{
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t result;
  unsigned __int8 v10;
  __int128 v11;
  __int128 v12;

  if (qword_253EB4740 != -1)
    swift_once();
  if (byte_253EBC790 != 1)
    return 0;
  v4 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v5 = objc_msgSend(v4, sel_persistentDomainForName_, *MEMORY[0x24BDD0D70]);

  if (!v5 || (v6 = sub_20A5B8888(), v5, !v6))
  {
    v11 = 0u;
    v12 = 0u;
    goto LABEL_15;
  }
  if (!*(_QWORD *)(v6 + 16))
  {
    v11 = 0u;
    v12 = 0u;
LABEL_14:
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  v7 = sub_20A47094C(a1, a2);
  if ((v8 & 1) == 0)
  {
    v11 = 0u;
    v12 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  sub_20A44FD78(*(_QWORD *)(v6 + 56) + 32 * v7, (uint64_t)&v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v12 + 1))
  {
LABEL_15:
    sub_20A44FDFC((uint64_t)&v11);
    return 0;
  }
  result = swift_dynamicCast();
  if ((_DWORD)result)
    return v10;
  return result;
}

uint64_t sub_20A59E21C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  uint64_t v3;
  char v4;
  uint64_t var2;

  if (a1)
  {
    a3(&var2);
    if (!v3)
      v4 = var2;
  }
  else
  {
    ((void (*)(uint64_t *__return_ptr, _QWORD, _QWORD))a3)((uint64_t *)((char *)&var2 + 1), 0, 0);
    if (!v3)
      v4 = BYTE1(var2);
  }
  return v4 & 1;
}

_QWORD *sub_20A59E270@<X0>(_QWORD *(*a1)(uint64_t *__return_ptr)@<X2>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;

  result = a1(&v5);
  if (!v2)
    *a2 = v5;
  return result;
}

_BYTE *sub_20A59E2AC@<X0>(_BYTE *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3;
  BOOL v4;
  uint64_t v5;
  BOOL v6;
  BOOL v7;

  v3 = *result;
  v4 = v3 > 0x20;
  v5 = (1 << v3) & 0x100003E01;
  v6 = v4 || v5 == 0;
  v7 = v6 && (result = (_BYTE *)_swift_stdlib_strtof_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

void sub_20A59FC70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_20A59FE48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_20A5A00F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;

  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_20A5A031C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_20A5A0530(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_20A5A0830(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 152));
  _Unwind_Resume(a1);
}

void sub_20A5A0A6C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_20A5A0D2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  id *v21;
  uint64_t v22;

  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Block_object_dispose((const void *)(v22 - 128), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose_(uint64_t a1)
{

}

void sub_20A5A0F4C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_20A5A12A4(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 88));
  _Unwind_Resume(a1);
}

void sub_20A5A1670(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_20A5A190C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_20A5A1AF4(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_20A5A1CD0(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_20A5A1EDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void bcgsyabc74vz12(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BOOL v3;
  int v4;

  if (a1)
    v3 = a3 == 0;
  else
    v3 = 1;
  v4 = !v3;
  __asm { BR              X8 }
}

uint64_t sub_20A5A25C8(uint64_t a1, unsigned int a2, _QWORD *a3)
{
  unint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD, uint64_t);
  void (*v7)(uint64_t, unint64_t *, uint64_t);
  uint64_t v8;
  BOOL v9;

  v6 = (uint64_t (*)(_QWORD, uint64_t))v4[20];
  STACK[0x4C8] = v3;
  *a3 = v6(a2, 3384187359);
  v7 = (void (*)(uint64_t, unint64_t *, uint64_t))(v4[3] - 12);
  v7(v4[16] - 4, &STACK[0x4D0], 16);
  v8 = ((uint64_t (*)(_QWORD, uint64_t, uint64_t))v7)(*v4, v5 - 144, 16);
  v9 = (unint64_t)&STACK[0x4E0] - v4[15] + 12 < 0x20;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x4C8]
                                                      + 8 * ((v9 ^ 0x15) & 1 | (32 * ((v9 ^ 0x15) & 1)) | 0x16u))
                                          - 8))(v8);
}

uint64_t sub_20A5A26A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;

  *(_OWORD *)&STACK[0x4E0] = xmmword_20A5D7A00;
  *(_OWORD *)&STACK[0x4F0] = xmmword_20A5D7A10;
  *(_OWORD *)&STACK[0x500] = xmmword_20A5D7A20;
  *(_OWORD *)&STACK[0x510] = xmmword_20A5D7A30;
  *(_OWORD *)&STACK[0x520] = xmmword_20A5D7A40;
  *(_OWORD *)&STACK[0x530] = xmmword_20A5D7A50;
  *(_OWORD *)&STACK[0x540] = xmmword_20A5D7A60;
  *(_OWORD *)&STACK[0x550] = xmmword_20A5D7A70;
  *(_OWORD *)&STACK[0x560] = xmmword_20A5D7A80;
  *(_OWORD *)&STACK[0x570] = xmmword_20A5D7A90;
  *(_OWORD *)&STACK[0x580] = xmmword_20A5D7AA0;
  *(_OWORD *)&STACK[0x590] = xmmword_20A5D7AB0;
  *(_OWORD *)&STACK[0x5A0] = xmmword_20A5D7AC0;
  *(_OWORD *)&STACK[0x5B0] = xmmword_20A5D7AD0;
  *(_OWORD *)&STACK[0x5C0] = xmmword_20A5D7AE0;
  *(_OWORD *)&STACK[0x5D0] = xmmword_20A5D7AF0;
  *(_OWORD *)&STACK[0x5E0] = xmmword_20A5D7B00;
  *(_OWORD *)&STACK[0x5F0] = xmmword_20A5D7B10;
  *(_OWORD *)&STACK[0x600] = xmmword_20A5D7B20;
  *(_OWORD *)&STACK[0x610] = xmmword_20A5D7B30;
  *(_OWORD *)&STACK[0x620] = xmmword_20A5D7B40;
  *(_OWORD *)&STACK[0x630] = xmmword_20A5D7B50;
  *(_OWORD *)&STACK[0x640] = xmmword_20A5D7B60;
  *(_OWORD *)&STACK[0x650] = xmmword_20A5D7B70;
  *(_OWORD *)&STACK[0x660] = xmmword_20A5D7B80;
  *(_OWORD *)&STACK[0x670] = xmmword_20A5D7B90;
  *(_OWORD *)&STACK[0x680] = xmmword_20A5D7BA0;
  *(_OWORD *)&STACK[0x690] = xmmword_20A5D7BB0;
  *(_OWORD *)&STACK[0x6A0] = 0u;
  *(_OWORD *)&STACK[0x6B0] = 0u;
  *(_OWORD *)&STACK[0x6C0] = 0u;
  *(_OWORD *)&STACK[0x6D0] = 0u;
  *(_OWORD *)&STACK[0x6E0] = 0u;
  *(_OWORD *)&STACK[0x6F0] = 0u;
  *(_DWORD *)(a1 + 544) = *(_DWORD *)(v1 + 544);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v3 + 21)) - ((v3 - 19) | 0xCu) + 7))();
}

uint64_t sub_20A5A2864()
{
  uint64_t v0;
  int v1;
  unint64_t *v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * (v1 ^ (29 * (&STACK[0x4D0] == v2)))) - 4))();
}

uint64_t sub_20A5A2888()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 144) = 0x951FAAEE1026D03;
  *(_QWORD *)(v3 - 136) = 0x9AAF552B875DE8C0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * (((((12 * (v1 ^ 0xD) + 25) ^ 0x38) + 39) * (v2 != 0)) ^ (12 * (v1 ^ 0xD))))
                            - 4))();
}

uint64_t sub_20A5A28E8()
{
  return 4294940294;
}

uint64_t sub_20A5A2AB8()
{
  int v0;
  char v1;
  _QWORD *v2;
  unint64_t v3;
  unsigned int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  int v11;
  unint64_t v12;
  unsigned int v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  _BOOL4 v25;

  STACK[0x4C0] = v3;
  LODWORD(STACK[0x250]) = v4;
  v5 = (v4 >> (v1 ^ 0xC)) ^ 0x1DC09FB4;
  v6 = v2[0xA88D4269 % v5];
  v7 = v6 - 1133730458;
  STACK[0x4B0] = v5;
  v8 = v5 - ((2 * (_DWORD)v5) & 0x36422CF2) + 0xFD213FFB211679;
  v6 += 928383084;
  v9 = v8 ^ 0xFD213FFB211679;
  LODWORD(v8) = (v6 + (v8 ^ 0xFF02DEC004DEE986) + 1) % (v8 ^ 0xFD213FFB211679uLL);
  v10 = (v8 ^ 0xCF7FE4FA) - 1248411648 + ((2 * v8) & 0x9EFFC9F4);
  if (v6 >= v9)
    v11 = v10;
  else
    v11 = v7;
  v12 = v2[(v2[(v2[v11 + 2062113542] + 3855038535) % v9] + 3865674970) % v9] + 578455804;
  STACK[0x460] = v9;
  v13 = v12 % v9;
  v14 = 0x758109B77F350519 * *v2 + 0x677F146CEA5ED0AALL - ((0xEB02136EFE6A0A32 * *v2) & 0xCEFE28D9D4BDA154);
  *(_QWORD *)STACK[0x4C0] = *v2 ^ 0x6D6D6D6D6D6D6D6DLL;
  v15 = (((v0 + 3) - 0x6E5F64EADF7E76BLL) ^ 0xA2E1F5149196B302 ^ v14)
      - 0x555115307B90BF2ELL
      - ((2 * (((v0 + 3) - 0x6E5F64EADF7E76BLL) ^ 0xA2E1F5149196B302 ^ v14)) & 0x555DD59F08DE81A4);
  v16 = (((HIDWORD(v15) ^ 0xAAAEEACF) - 0x555115307B90BF2ELL - ((2 * (HIDWORD(v15) ^ 0xAAAEEACF)) & 0x108DE81A4)) ^ v15)
      + 2 * ((HIDWORD(v15) ^ 0xAAAEEACF) & (v15 ^ 0xAAAEEACF846F40D2));
  v17 = v16 + (v16 >> 16) + ((v16 + (v16 >> 16)) >> 8);
  v18 = v17 + 1954684949 - ((2 * v17) & 0xE904402A);
  v19 = (v17 + 0x677F146CEA5ED0AALL - ((2 * v17) & 0xCEFE28D9D4BDA154)) ^ v14;
  v20 = v19 + HIDWORD(v19) + ((v19 + HIDWORD(v19)) >> 16);
  v21 = v20 + (v20 >> 8);
  v22 = ((v21 + 0x677F146CEA5ED0AALL - ((2 * v21) & 0xCEFE28D9D4BDA154)) ^ v14)
      + (((v21 + 0x677F146CEA5ED0AALL - ((2 * v21) & 0xCEFE28D9D4BDA154)) ^ v14) >> 32);
  v23 = v22 + (v22 >> 16) + ((v22 + (v22 >> 16)) >> 8);
  v24 = v23 - 1202272205 - ((2 * v23) & 0x70AD9066);
  v25 = v13 - 412949984 > 0xE762E221;
  if (v13 > 0x189D1DDF)
    v25 = 1;
  return (*(uint64_t (**)(unint64_t, unint64_t, uint64_t, unint64_t, _QWORD))(STACK[0x4C8] + 8 * ((!v25 | (4 * !v25)) ^ v0)))(0xCEFE28D9D4BDA154, 0xAAAEEACF846F40D2, 0x677F146CEA5ED0AALL, 0x9E651DDDB856C833, v18 ^ 0x64CF9DC3 ^ v21 ^ v24);
}

void sub_20A5A2E60()
{
  JUMPOUT(0x20A5A2CD8);
}

uint64_t sub_20A5A2E84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v6 + 8 * (v9 + v8)) = *(_QWORD *)(v10 + 8 * (v9 + v8)) ^ v7;
  return (*(uint64_t (**)(void))(v11 + 8 * ((50 * (STACK[0x4B0] <= v9 + 1 + v8)) ^ a6)))();
}

uint64_t sub_20A5A2F70(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  if (((*(_BYTE *)(STACK[0x4B8]
                  + ((*(_BYTE *)(STACK[0x4B8]
                               + ((*(_BYTE *)(STACK[0x4B8] + ((*(_BYTE *)(STACK[0x4B8] + 11) + 12) & 0xF)) + 2) & 0xF))
                    + 6) & 0xF))
       + 10) & 0xE) != 0)
    v3 = (*(_BYTE *)(STACK[0x4B8]
                   + ((*(_BYTE *)(STACK[0x4B8]
                                + ((*(_BYTE *)(STACK[0x4B8] + ((*(_BYTE *)(STACK[0x4B8] + 11) + 12) & 0xF)) + 2) & 0xF))
                     + 6) & 0xF))
        + 10) & 0xF;
  else
    v3 = 1;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * (((v3 != 1) | (8 * (v3 != 1))) ^ (7 * (a2 ^ 0x2F))))
                                          - 12))(1040154350);
}

uint64_t sub_20A5A31BC@<X0>(int a1@<W2>, unsigned int a2@<W3>, int a3@<W8>)
{
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((51 * ((a1 + a3 + 1) < 0x10)) ^ a2)) - 12))();
}

#error "20A5A6F74: call analysis failed (funcsize=3213)"

void sub_20A5A6F78()
{
  JUMPOUT(0x20A5A6CE0);
}

uint64_t sub_20A5A6F8C(uint64_t a1, uint64_t a2, int a3, int a4, int a5)
{
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  unint64_t v16;
  uint64_t v17;
  int v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  LODWORD(STACK[0x3CC]) = LODWORD(STACK[0x3F8]) + 1526920166;
  LODWORD(STACK[0x248]) = LODWORD(STACK[0x41C]) + 392542021;
  LODWORD(STACK[0x370]) = LODWORD(STACK[0x3E8]) ^ LODWORD(STACK[0x47C]) ^ (LODWORD(STACK[0x36C]) - LODWORD(STACK[0x370]));
  v7 = v5;
  v8 = *(_QWORD *)(STACK[0x4C0] + 8 * v5);
  v9 = ((v8 + (v8 ^ 0x9292929292929292) + 1) ^ 0xFFFFFFFFFFFFFFFELL) + v8;
  v10 = 0x418B018541479FA3 * v9
      - ((v9 * ((a4 ^ 0x12u) - 0x7CE9FCF57D70C0DBLL)) & 0xFFE890BCDC3D3DB4)
      - 0xBB7A191E16126;
  v11 = (v6 ^ 0x4020841F998A7835 ^ v10) + v7 - (((v6 ^ 0x4020841F998A7835 ^ v10) + v7) >> 32);
  v12 = v11 - (v11 >> 16) - ((v11 - (v11 >> 16)) >> 8);
  v13 = (v12 - 1664618190 - ((2 * (v12 - 1664618190) + 1512219598) & 0xACCF5440) - 2089223161) ^ a5;
  v14 = v12
      + 0x62668D3C9CC7F132
      - 2 * ((v12 + 0x62EA362A93B28632) & 0x64189079CF1C212 ^ (v12 + 0x62668D3C9CC7F132) & 0x10)
      - 0x493ACE0A6C23A8FELL;
  v15 = ((v14 ^ 0x9CF1C202) - 252409235 - ((2 * (v14 ^ 0x9CF1C202)) & 0xE1E914DA)) ^ a3;
  v16 = (v10 ^ 0xF9B5C159F2EF5CD8 ^ v14) + v7 - (((v10 ^ 0xF9B5C159F2EF5CD8 ^ v14) + v7) >> 32);
  v17 = v16 - (v16 >> 16) - ((v16 - (v16 >> 16)) >> 8) + 0x5401861DA34BF76;
  v18 = v13 ^ (v17 + 1873052579);
  v19 = v17 - ((2 * v17 + 0x1B543B9172FB8D78) & 0x900D2FD3E0A1AFFELL) + 0x55B0B5B2A9CE9EBBLL;
  v20 = (v10 ^ 0xB7F2DFB79E4E4925 ^ v19) + v7 - (((v10 ^ 0xB7F2DFB79E4E4925 ^ v19) + v7) >> 32);
  v21 = v20 - (v20 >> 16) - ((v20 - (v20 >> 16)) >> 8) + 0x7D2B4A3801DD0F3;
  return (*(uint64_t (**)(_QWORD, unint64_t, _QWORD))(STACK[0x4C8]
                                                                     + 8
                                                                     * (a4 ^ (8 * (v5 + 1 >= STACK[0x4B0])))))(v15 ^ ((_DWORD)v17 - ((2 * (_DWORD)v17 + 1929088376) & 0xE0A1AFFE) - 1446076741) ^ ((_DWORD)v21- ((2 * (_DWORD)v21+ 657025662) & 0xEF29CDDE)+ 187276334), 0xB7F2DFB79E4E4925, v18 ^ ((_DWORD)v20 - (v20 >> 16) - ((v20 - (v20 >> 16)) >> 8) + 1238975257));
}

void sub_20A5A72D8()
{
  JUMPOUT(0x20A5A70B0);
}

uint64_t sub_20A5A72FC(int a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  int v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  int v81;
  unint64_t v82;
  int v83;
  uint64_t v84;
  unsigned int v85;
  uint64_t v86;
  int v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  int v91;
  unint64_t v92;
  int v93;

  LODWORD(STACK[0x36C]) = LODWORD(STACK[0x474]) ^ LODWORD(STACK[0x29C]);
  v56 = a5
      - 0x3F0DEC20512E0ABELL
      + ((unint64_t)(a5 - 0x3F0DEC20512E0ABELL) >> 28)
      + ((a5 - 0x3F0DEC20512E0ABELL + ((unint64_t)(a5 - 0x3F0DEC20512E0ABELL) >> 28)) >> 11);
  v57 = v56 - (v56 >> 7) - ((2 * (v56 - (v56 >> 7))) & 0xD8E73A4232243FC4) - 0x138C62DEE6EDE01ELL;
  v58 = ((2 * ((v57 ^ 0xEC739D2119121FE2) - 0x13AFA5FA8FB17A6)) & 0xC3FD7ABDFFFBF7CELL)
      + (((v57 ^ 0xEC739D2119121FE2) - 0x13AFA5FA8FB17A6) ^ 0x61FEBD5EFFFDFBE7)
      - 0x61FEBD5EFFFDFBE7;
  v59 = v58 + (v58 >> 29) - ((v58 + (v58 >> 29)) >> 8);
  v60 = v59 + (v59 >> 6) - ((2 * (v59 + (v59 >> 6))) & 0xFC9B50453FD9B8CLL) + 0x7E4DA8229FECDC6;
  v61 = ((2 * ((v60 ^ 0x7E4DA8229FECDC6) + 0x47CBE9EA4DE0F1B7)) & 0xFFFFECB5DCEC4FC8)
      + (((v60 ^ 0x7E4DA8229FECDC6) + 0x47CBE9EA4DE0F1B7) ^ 0xFFFFF65AEE7627E4);
  v62 = v61
      - ((v61 + 0x9A51189D81CLL) >> 28)
      + 0x9A51189D81CLL
      + ((v61 - ((v61 + 0x9A51189D81CLL) >> 28) + 0x9A51189D81CLL) >> 8);
  v63 = v62 + (v62 >> 7) - ((2 * (v62 + (v62 >> 7))) & 0x549A9F3601A22D82) + 0x2A4D4F9B00D116C1;
  v64 = (v63 ^ 0x2A4D4F9B00D116C1)
      - ((2 * (v63 ^ 0x2A4D4F9B00D116C1) + 0x34D59D5DDD29F6ECLL) & 0x2C4968B8CC0D9A8ALL)
      + 0x708F830B549BC8BBLL;
  v65 = (v64 ^ 0x9624B458D7236FA6 ^ (v64 >> 29)) + 2 * (((v64 >> 29) ^ 0x4B125A2E3) & (v64 ^ 0x1624B45C6606CD45));
  v66 = v65 - (v65 >> 14) - ((v65 - (v65 >> 14)) >> 7);
  v67 = ((2
        * (((v66 - ((2 * v66) & 0xA1B5F7C311112426) - 0x2F25041E77776DEDLL) ^ 0xD0DAFBE188889213)
         - 0x10BF2422B96631C1)) & 0xEFFE977FFFEF7EE6)
      + ((((v66 - ((2 * v66) & 0xA1B5F7C311112426) - 0x2F25041E77776DEDLL) ^ 0xD0DAFBE188889213)
        - 0x10BF2422B96631C1) ^ 0x77FF4BBFFFF7BF73);
  v68 = v67
      - ((v67 - 0x77FF4BBFFFF7BF73) >> 28)
      - 0x77FF4BBFFFF7BF73
      + ((v67 - ((v67 - 0x77FF4BBFFFF7BF73) >> 28) - 0x77FF4BBFFFF7BF73) >> 8);
  v69 = v68 + (v68 >> 8) - ((2 * (v68 + (v68 >> 8))) & 0x2B0FB3A388ACF140) + 0x1587D9D1C45678A0;
  v70 = ((2 * (((v69 >> 26) ^ 0x3B2B8B89C9) + (v69 ^ 0xECAE2E2725BA676ELL))) & 0x7AFF7FE5FFDD7F72)
      + ((((v69 >> 26) ^ 0x3B2B8B89C9) + (v69 ^ 0xECAE2E2725BA676ELL)) ^ 0xBD7FBFF2FFEEBFB9)
      + 0x4280400D00114047;
  v71 = v70 + (v70 >> 14) + ((v70 + (v70 >> 14)) >> 6);
  v72 = v71 - ((2 * v71) & 0x50956B68B291B7C2) + 0x284AB5B45948DBE1;
  v73 = ((2 * ((v72 ^ 0x284AB5B45948DBE1) - 0x70FE5FCAA42AEA45)) & 0xFFD15EDCFD9FFEAALL)
      + (((v72 ^ 0x284AB5B45948DBE1) - 0x70FE5FCAA42AEA45) ^ 0x7FE8AF6E7ECFFF55);
  v74 = v73
      - ((v73 - 0x7FE8AF6E7ECFFF55) >> 26)
      - 0x7FE8AF6E7ECFFF55
      - ((v73 - ((v73 - 0x7FE8AF6E7ECFFF55) >> 26) - 0x7FE8AF6E7ECFFF55) >> 13);
  v75 = v74 - (v74 >> 3) - ((2 * (v74 - (v74 >> 3))) & 0xF777B9C8C849EE88) + 0x7BBBDCE46424F744;
  v76 = (v75 ^ 0x3374757BEBF5AE41) + ((v75 >> 28) ^ 0xFFFFFFFCC8B8A841) + 1;
  v77 = ((2 * v76) & 0x6F7FFE9EDFA8FEFCLL) + (v76 ^ 0x37BFFF4F6FD47F7ELL) - 0x37BFFF4F6FD47F7ELL;
  v78 = v77 - (v77 >> 11) + ((v77 - (v77 >> 11)) >> 4);
  v79 = v78 - ((2 * v78) & 0xEFA7AA312763242ELL) - 0x82C2AE76C4E6DE9;
  v80 = ((2 * ((v79 ^ 0xF7D3D51893B19217) - 0x59A32DF87660B188)) & 0x4FFFC5BBFFDE6BFELL)
      + (((v79 ^ 0xF7D3D51893B19217) - 0x59A32DF87660B188) ^ 0xA7FFE2DDFFEF35FFLL);
  v81 = a3 ^ ((v69 ^ v60 ^ 0xEDA8B566) - 2 * ((v69 ^ v60 ^ 0xEDA8B566) & 0x13B1921F ^ (v69 ^ v60) & 8) - 1817079273) ^ 0x115609E4 ^ v79;
  v82 = v80
      - ((v80 + 0x58001D220010CA01) >> 30)
      + 0x58001D220010CA01
      - ((v80 - ((v80 + 0x58001D220010CA01) >> 30) + 0x58001D220010CA01) >> 9);
  LODWORD(v82) = ((v82 >> 7) + v82 + 1497947105 - ((2 * ((v82 >> 7) + v82)) & 0xB291B7C2)) ^ v72;
  v83 = a1 ^ v63 ^ 0x5B126890 ^ (v82 - ((2 * v82) & 0x1A22D82) + 13702849);
  if (((*(_BYTE *)(STACK[0x4B8]
                  + ((*(_BYTE *)(STACK[0x4B8]
                               + ((*(_BYTE *)(STACK[0x4B8] + ((*(_BYTE *)(STACK[0x4B8] + 2) + 13) & 0xF)) + 2) & 0xF))
                    + 3) & 0xF))
       + 1) & 0xE) != 0)
    v84 = (*(_BYTE *)(STACK[0x4B8]
                    + ((*(_BYTE *)(STACK[0x4B8]
                                 + ((*(_BYTE *)(STACK[0x4B8] + ((*(_BYTE *)(STACK[0x4B8] + 2) + 13) & 0xF)) + 2) & 0xF))
                      + 3) & 0xF))
         + 1) & 0xF;
  else
    v84 = 1;
  v85 = (v55 - 2761266) & 0xFBFFB3D6;
  LODWORD(STACK[0x4A8]) = v85;
  v86 = v85 + 119427264;
  v87 = 1903817027 * *(unsigned __int8 *)STACK[0x4B8]
      - ((*(unsigned __int8 *)STACK[0x4B8] * (_DWORD)v86) & 0x13E3AF28)
      - 1980639340;
  v88 = v87 ^ 0x90D3B1DC;
  v89 = v88 >> 16;
  v90 = v88 + WORD1(v88);
  LODWORD(v88) = (v87 ^ 0x90D3B1DC) + ((v87 ^ 0x90D3B1DC) >> 16) + ((v88 + WORD1(v88)) >> 8);
  v91 = ((v87 ^ 0x90D3B1DC) - 651057517 + v89 + (v90 >> 8)) ^ v81;
  LODWORD(v89) = v89
               - 558323820
               + (v87 ^ 0x90D3B1DC)
               + (v90 >> 8)
               - 2 * ((v88 + 1919110438) & 0x2C555A6F ^ ((_BYTE)v88 + 124) & 1);
  LODWORD(v88) = v83 ^ 0x708303EE ^ v89;
  LODWORD(v89) = (v87 ^ 0xA5A48DFA ^ v89)
               + ((v87 ^ 0xA5A48DFA ^ v89) >> (v91 & 0x10) >> (v91 & 0x10 ^ 0x10));
  v92 = (unint64_t)v89 >> 8;
  v93 = v88 - ((2 * v88) & 0x382BB90C);
  LODWORD(v88) = v87 ^ 0x95E40B12 ^ (v92
                                   - 830920276
                                   + v89
                                   - ((2 * (v89 + (v89 >> 8)) + 1690737228) & 0x382BB90C));
  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t, _QWORD, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x4C8] + 8 * ((7 * (v84 == 1)) ^ v55)) - 8))(v84, ((_DWORD)v89 - 651057517 + (_DWORD)v92) ^ v91 ^ ((_DWORD)v88- 651057517+ WORD1(v88)+ ((v88 + WORD1(v88)) >> 8)), v84 - 1, 616995404, 0, v86, (v93 + 471194758), (_DWORD)v88 + ((v88 + WORD1(v88)) >> 8) + WORD1(v88), a9, a10, a11, a12, a13, a14, a15, a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55);
}

uint64_t sub_20A5A7C14(uint64_t a1)
{
  LODWORD(STACK[0x360]) = LODWORD(STACK[0x494]) + 1059696505;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x4C8]
                                        + 8
                                        * ((121 * ((unint64_t)(a1 + 1) > 0xF)) ^ (LODWORD(STACK[0x4A8]) + 69889656)))
                            - 8))();
}

void sub_20A5A7EA8()
{
  JUMPOUT(0x20A5A7CC8);
}

uint64_t sub_20A5A7EB8@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W8>)
{
  int v4;
  int v5;
  int v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  int v31;
  unsigned int v32;
  unsigned int v33;
  int v34;
  unsigned int v35;
  int v36;
  int v37;
  unint64_t v38;
  int v39;
  int v40;
  int v41;
  int v42;
  unsigned int v43;
  int v44;
  int v45;
  int v46;
  unsigned int v47;
  unsigned int v48;
  unsigned int v49;
  int v50;
  unsigned int v51;
  int v52;
  unsigned int v53;
  int v54;
  int v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unsigned int v59;
  _BOOL4 v60;

  v8 = v4 + ((a2 + a3 + ((a2 + a3) >> 16)) >> 8) + ((a2 + a3) >> 16) + 1376862134 + a1;
  v9 = (v8 ^ 0x50943741) + (v7 ^ 8) + ((v8 >> 13) ^ 0xFFFD7B5E) - 1;
  v10 = (v9 ^ 0x4FFD9BF7) - 1342020599 + ((2 * v9) & 0x9FFB37EE);
  v11 = v10 + (v10 >> 5) - ((2 * (v10 + (v10 >> 5))) & 0xE32E0788) + 1905722308;
  v12 = ((2 * ((v11 ^ 0x719703C4) - 107998449)) & 0x7EBCFFDE)
      + (((v11 ^ 0x719703C4) - 107998449) ^ 0xBF5E7FEF)
      + 1084325905;
  v13 = v12 - (v12 >> 10) - ((v12 - (v12 >> 10)) >> 2);
  v14 = v13 - ((2 * v13) & 0x6884ED8A) - 1270712635;
  v15 = ((((v14 >> 14) ^ 0x11D1C) + (v14 ^ 0x4747003C)) ^ 0xFFCEFFCF)
      + 3211313
      + ((2 * (((v14 >> 14) ^ 0x11D1C) + (v14 ^ 0x4747003C))) & 0xFF9DFF9E);
  v16 = v15 - (v15 >> 2) - ((2 * (v15 - (v15 >> 2))) & 0xE2C3FAEE) + 1902247287;
  v17 = ((2 * ((v16 ^ 0x7161FD77) + 511487013)) & 0x7FFFFEF0)
      + (((v16 ^ 0x7161FD77) + 511487013) ^ 0xBFFFFF78)
      + 1073741960;
  v18 = v17 + (v17 >> 15) + ((v17 + (v17 >> 15)) >> 3);
  v19 = v18 - ((2 * v18) & 0xA4301014) + 1377306634;
  v20 = (v19 ^ 0xB9DA625) + ((v19 >> 10) ^ 0xFFFD1896) + 1;
  v21 = (v20 ^ 0x69BFD377) - 1774179191 + ((2 * v20) & 0xD37FA6EE);
  v22 = v21 + (v21 >> 7) - ((2 * (v21 + (v21 >> 7))) & 0x715AB81E) - 1196598257;
  v23 = ((2 * ((v22 ^ 0xB8AD5C0F) - 787086048)) & 0x9FDBA734)
      + (((v22 ^ 0xB8AD5C0F) - 787086048) ^ 0x4FEDD39A)
      - 1340986266;
  v24 = v23 - (v23 >> 9) + ((v23 - (v23 >> 9)) >> 5);
  v25 = v24 - ((2 * v24) & 0xF9CF13D2) + 2095548905;
  v26 = ((2 * ((v25 ^ 0x7CE789E9) - 1168002143)) & 0xFCFD5B6E)
      + (((v25 ^ 0x7CE789E9) - 1168002143) ^ 0xFE7EADB7)
      + 25252425;
  v27 = v26 - (v26 >> 14) + ((v26 - (v26 >> 14)) >> 4);
  v28 = v27 - ((2 * v27) & 0xC2E9B770) + 1635048376;
  v29 = ((2 * ((v28 ^ 0x6174DBB8) - 879085134)) & 0xF957FE9E)
      + (((v28 ^ 0x6174DBB8) - 879085134) ^ 0x7CABFF4F)
      - 2091646799;
  v30 = v29 + (v29 >> 10) - ((v29 + (v29 >> 10)) >> 5);
  v31 = v30 - ((2 * v30) & 0x605ED6F0) + 808414072;
  v32 = ((2 * ((v31 ^ 0x302F6B78) + 1300749569)) & 0x7FBFDA7E)
      + (((v31 ^ 0x302F6B78) + 1300749569) ^ 0x3FDFED3F)
      - 1071639871;
  v33 = v32 - (v32 >> 9) - ((v32 - (v32 >> 9)) >> 4);
  v34 = v33 + 1557551489 + (~(2 * v33) | 0x46534CFF);
  v35 = v25 ^ v16 ^ ((v34 ^ v6) - ((2 * (v34 ^ v6)) & 0xE2C3FAEE) + 1902247287);
  v36 = v35 & 7;
  LODWORD(STACK[0x474]) = v35;
  v37 = (v35 ^ 5) + 1;
  LODWORD(STACK[0x2A0]) = v37;
  v38 = v37 & 7;
  LODWORD(STACK[0x268]) = v36;
  v39 = v36 ^ 2;
  if (v39)
    v40 = 255;
  else
    v40 = 0;
  STACK[0x350] = v38;
  LODWORD(STACK[0x41C]) = v39;
  v41 = v11 ^ v5;
  v42 = v14 ^ a4;
  v44 = (v40 << v38) - ((2 * (v40 << v38)) & 0x16A0) + 1425345360;
  v45 = v44 ^ 0xAF;
  if (!v39)
    v45 = 0;
  v43 = ((v41 ^ 0x813857E8 ^ v19) + (v19 ^ 0x5218080A) + 1) ^ ((v41 ^ 0xD3205FE2) + 1);
  v46 = v28 ^ (((v43 - ((2 * v43) & 0x59BF403A) + 752853021) ^ v41) + (v19 ^ 0x5218080A));
  v47 = v22 ^ ((v42 ^ 0xB44276C5) - 2 * ((v42 ^ 0xB44276C5) & 0x38AD5C1F ^ v42 & 0x10) - 1196598257) ^ v31;
  v48 = v46 ^ 0x3BC2E800 ^ ((v46 & 0x9A38B5A8 ^ 0x65F7DBFF)
                          - ((2 * (v46 & 0x9A38B5A8 ^ 0x65F7DBFF)) & 0x7EE2F3DA)
                          + 1064401389) | v46 ^ 0x6174DBBA;
  v49 = v48 - ((2 * v48) & 0x511578D4) - 1467302806;
  LODWORD(STACK[0x288]) = v46;
  v50 = (((2 * (v46 & 0xFE ^ 0x78)) & 0x78) - (v46 & 0xFE ^ 0x78) + 1409145794) ^ 0x13F75900;
  v51 = v50 - ((2 * v50) & 0x80110F4C) + 1167693735;
  LODWORD(STACK[0x2E8]) = v51;
  v52 = (((2 * (v44 ^ 0xB8)) & 0x90) - (v44 ^ 0xB8) + 2231) ^ 0x85F;
  v53 = 16843009 * v52 - ((33686018 * v52) & 0xB3E56970) - 638405448;
  LODWORD(STACK[0x2F8]) = (1929379840 * v52) & (v47 ^ 0x30000000);
  LODWORD(STACK[0x4A8]) = v45 & (v49 ^ 0x68);
  LODWORD(STACK[0x494]) = v49;
  v54 = (((BYTE1(v49) ^ BYTE2(v49) ^ 0x4B) - ((2 * (BYTE1(v49) ^ BYTE2(v49) ^ 0x4B)) & 0x70) - 72) ^ v49) ^ HIBYTE(v49) ^ 0x89;
  LODWORD(STACK[0x2A8]) = (33686018 * v54) & 0xE9F5E63A;
  LODWORD(STACK[0x278]) = 16843009 * v54 + 1962603293;
  LODWORD(STACK[0x29C]) = v47;
  v55 = (((BYTE1(v47) ^ BYTE2(v47) ^ 0x2D) - ((2 * (BYTE1(v47) ^ BYTE2(v47) ^ 0x2D)) & 0x3C) + 30) ^ v47) ^ HIBYTE(v47) ^ 0xAF;
  v56 = STACK[0x4C0];
  v57 = STACK[0x460];
  v58 = *(_QWORD *)(STACK[0x4C0]
                  + 8
                  * (((*(_QWORD *)(STACK[0x4C0] + 8 * (0xB4C2D96D % STACK[0x4B0])) ^ 0x6D6D6D6D6D6D6D6DuLL)
                    + 2986301921u)
                   % STACK[0x460]));
  LODWORD(STACK[0x300]) = 16843009 * v55 - ((33686018 * v55) & 0xAFEEB294) + 1475828042;
  v59 = ((*(_QWORD *)(v56
                    + 8
                    * (((*(_QWORD *)(v56 + 8 * (((v58 ^ 0x6D6D6D6D6D6D6D6DuLL) + 2923655298u) % v57)) ^ 0x6D6D6D6D6D6D6D6DuLL)
                      + 2008708959)
                     % v57)) ^ 0x6D6D6D6D6D6D6D6DuLL)
       + 3811120295u)
      % v57;
  LODWORD(STACK[0x3A4]) = 16843009 * (v51 ^ 0x59315A7) - ((33686018 * (v51 ^ 0x59315A7)) & 0x995BA082) + 1286459457;
  LODWORD(STACK[0x308]) = v53;
  LODWORD(STACK[0x3F8]) = v53 ^ 0x260D4B47;
  LODWORD(STACK[0x260]) = 2 * (v53 ^ 0x260D4B47);
  v60 = v59 > 0x3000275B;
  if (v59 <= 0x3000275B)
    v60 = v59 - 805316444 > 0xCFFFD8A5;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x4C8] + 8 * (v7 ^ 8 ^ (8 * v60))) - 8))();
}

void sub_20A5A89BC()
{
  JUMPOUT(0x20A5A8738);
}

uint64_t sub_20A5A89D0@<X0>(int a1@<W8>)
{
  int v1;

  LODWORD(STACK[0x2F0]) = LODWORD(STACK[0x478]) ^ 0x8941A8C7;
  LODWORD(STACK[0x2B8]) = STACK[0x494] & 0xFFFFFF01;
  LODWORD(STACK[0x260]) = ~LODWORD(STACK[0x260]);
  LODWORD(STACK[0x308]) ^= LODWORD(STACK[0x2F8]);
  LODWORD(STACK[0x2F8]) = LODWORD(STACK[0x278]) - LODWORD(STACK[0x2A8]);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x4C8] + 8 * ((45 * (STACK[0x4B0] <= v1 + 1)) ^ a1))
                            - 12))();
}

void sub_20A5A8D7C()
{
  JUMPOUT(0x20A5A8AE8);
}

uint64_t sub_20A5A8D94(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;
  int v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  int v35;
  uint64_t v36;
  int v37;
  unsigned int v38;
  unsigned int v39;
  unint64_t v40;
  unint64_t v41;
  unsigned int v42;

  v8 = a2 ^ 2;
  LODWORD(STACK[0x278]) = LODWORD(STACK[0x29C]) ^ 0xEAA5A0;
  LODWORD(STACK[0x3F8]) = (LODWORD(STACK[0x260]) + LODWORD(STACK[0x3F8])) ^ LODWORD(STACK[0x4A8]);
  v9 = ((2 * ((v7 ^ 0xFCB7ED34685A3616) - 0x4A256DA764C2BFFDLL)) & 0x3FE37AF3BBEFCA3ELL)
     + (((v7 ^ 0xFCB7ED34685A3616) - 0x4A256DA764C2BFFDLL) ^ 0x9FF1BD79DDF7E51FLL)
     + 0x600E428622081AE1;
  STACK[0x4A8] = (v8 - 8);
  v10 = v9 + (v9 >> ((v8 - 8) ^ 0x38u)) + ((v9 + (v9 >> ((v8 - 8) ^ 0x38u))) >> 11);
  v11 = v10 - (v10 >> 7) - ((2 * (v10 - (v10 >> 7))) & 0xB7BF16DEE7221792) - 0x242074908C6EF437;
  v12 = ((2 * ((v11 ^ 0xDBDF8B6F73910BC9) - 0x13AFA5FA8FB17A6)) & 0x6FFDFFF7EF1DF7F6)
      + (((v11 ^ 0xDBDF8B6F73910BC9) - 0x13AFA5FA8FB17A6) ^ 0xB7FEFFFBF78EFBFBLL)
      + 0x4801000408710405;
  v13 = v12 + (v12 >> 29) - ((v12 + (v12 >> 29)) >> 8);
  v14 = v13 + (v13 >> 6) - ((2 * (v13 + (v13 >> 6))) & 0xFFF52C49393268A6) + 0x7FFA96249C993453;
  v15 = ((2 * ((v14 ^ 0x7FFA96249C993453) + 0x47CBE9EA4DE0F1B7)) & 0xF7FBFBB6FD7EFAFELL)
      + (((v14 ^ 0x7FFA96249C993453) + 0x47CBE9EA4DE0F1B7) ^ 0xFBFDFDDB7EBF7D7FLL);
  v16 = v15
      - ((v15 + 0x402022481408281) >> 28)
      + 0x402022481408281
      + ((v15 - ((v15 + 0x402022481408281) >> 28) + 0x402022481408281) >> 8);
  v17 = v16 + (v16 >> 7) - ((2 * (v16 + (v16 >> 7))) & 0x962D840343CD5578) + 0x4B16C201A1E6AABCLL;
  v18 = ((2 * ((v17 ^ 0x4B16C201A1E6AABCLL) - 0x25953151116B048ALL)) & 0xEFDDFFFFBBFFEB7CLL)
      + (((v17 ^ 0x4B16C201A1E6AABCLL) - 0x25953151116B048ALL) ^ 0x77EEFFFFDDFFF5BELL)
      - 0x77EEFFFFDDFFF5BELL;
  v19 = v18 + (v18 >> 29) - ((v18 + (v18 >> 29)) >> 14);
  v20 = v19 - (v19 >> 7) - ((2 * (v19 - (v19 >> 7))) & 0x3846234F208FBC0) + 0x1C2311A79047DE0;
  v21 = ((2 * ((v20 ^ 0x1C2311A79047DE0) - 0x10BF2422B96631C1)) & 0xDFFBEFD1CF7FC5DELL)
      + (((v20 ^ 0x1C2311A79047DE0) - 0x10BF2422B96631C1) ^ 0xEFFDF7E8E7BFE2EFLL);
  v22 = v21
      - ((v21 + 0x1002081718401D11) >> 28)
      + 0x1002081718401D11
      + ((v21 - ((v21 + 0x1002081718401D11) >> 28) + 0x1002081718401D11) >> 8);
  v23 = v22 + (v22 >> 8) - ((2 * (v22 + (v22 >> 8))) & 0xDA5E41BA3F345234) + 0x6D2F20DD1F9A291ALL;
  v24 = ((v23 >> 26) ^ 0x2501B5CAFFLL)
      + (v23 ^ 0x9406D72BFE7636D4)
      - ((2 * (((v23 >> 26) ^ 0x2501B5CAFFLL) + (v23 ^ 0x9406D72BFE7636D4))) & 0x3BDAB82BDE326D6ELL)
      - 0x6212A3EA10E6C949;
  v25 = (v24 ^ 0x9DEF2BA09F4E8AD3 ^ (v24 >> 14))
      + 2 * (((v24 >> 14) ^ 0x277B57057BC64) & (v24 ^ 0x9DED5C15EF1936B7));
  v26 = v25 + (v25 >> 6) - ((2 * (v25 + (v25 >> 6))) & 0x5564F390E99F92D6) + 0x2AB279C874CFC96BLL;
  v27 = ((2 * ((v26 ^ 0x2AB279C874CFC96BLL) - 0x70FE5FCAA42AEA45)) & 0xF7F1BFEDBAA7DFB8)
      + (((v26 ^ 0x2AB279C874CFC96BLL) - 0x70FE5FCAA42AEA45) ^ 0xFBF8DFF6DD53EFDCLL);
  v28 = v27
      - ((v27 + 0x407200922AC1024) >> 26)
      + 0x407200922AC1024
      - ((v27 - ((v27 + 0x407200922AC1024) >> 26) + 0x407200922AC1024) >> 13);
  v29 = v28 - (v28 >> 3) - ((2 * (v28 - (v28 >> 3))) & 0xD27E29DB2D040A24) - 0x16C0EB12697DFAEELL;
  *((_QWORD *)&v31 + 1) = v29 ^ 0x93F14ED96820512;
  *(_QWORD *)&v31 = v29 ^ 0xE000000000000000;
  v30 = v31 >> 60;
  *((_QWORD *)&v31 + 1) = v30 ^ 0xC;
  *(_QWORD *)&v31 = v30 ^ 0x6C993897BE944870;
  v32 = ((v31 >> 4) ^ 0x8E063A16F4381D82) + (((unint64_t)(v31 >> 4) >> 28) ^ 0xFFFFFFF71F9C5E90) + 1;
  v33 = ((2 * v32) & 0x9B77F7FFFD3CFD7ELL) + (v32 ^ 0x4DBBFBFFFE9E7EBFLL) - 0x4DBBFBFFFE9E7EBFLL;
  v34 = v33 - (v33 >> 11) + ((v33 - (v33 >> 11)) >> 4);
  v35 = a7 ^ ((v14 ^ 0x83031D49 ^ v23) - ((2 * (v14 ^ 0x83031D49 ^ v23)) & 0xDC6966D0) + 1848947560) ^ 0xB3DF63AB ^ (v34 - ((2 * v34) & 0xDC6966D0) + 1848947560);
  if (((*(_BYTE *)(STACK[0x4B8]
                  + ((*(_BYTE *)(STACK[0x4B8]
                               + ((*(_BYTE *)(STACK[0x4B8]
                                            + ((*(unsigned __int8 *)(STACK[0x4B8] + 7) + 5) & 0xFLL))
                                 + 9) & 0xF))
                    + 9) & 0xF))
       + 7) & 0xE) != 0)
    v36 = (*(_BYTE *)(STACK[0x4B8]
                    + ((*(_BYTE *)(STACK[0x4B8]
                                 + ((*(_BYTE *)(STACK[0x4B8]
                                              + ((*(unsigned __int8 *)(STACK[0x4B8] + 7) + 5) & 0xFLL))
                                   + 9) & 0xF))
                      + 9) & 0xF))
         + 7) & 0xF;
  else
    v36 = 1;
  v37 = 1903817027 * *(unsigned __int8 *)STACK[0x4B8]
      - ((1660150406 * *(unsigned __int8 *)STACK[0x4B8]) & 0x61BC9796)
      - 1327608885;
  v38 = (v37 ^ 0xA9FC2D83)
      + (((v37 ^ 0xA9FC2D83) + (((v37 ^ 0xA9FC2D83) + v8 - 44) >> 16)) >> 8)
      + (((v37 ^ 0xA9FC2D83) + v8 - 44) >> 16);
  v39 = v37 ^ 0x36DD1478 ^ (v38 - ((2 * v38 - 1798923700) & 0xC06BF66) + 946253017);
  v40 = (unint64_t)v39 >> 16;
  v41 = (unint64_t)(v39 + HIWORD(v39)) >> 8;
  v42 = v37 ^ 0x2A97E66B ^ (v41 + v40 + 1286404806 + v39 - ((2 * (v39 + HIWORD(v39) + v41) + 1690737228) & 0x34935B40));
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0x4C8] + 8 * (int)(STACK[0x4A8] ^ (8 * (v36 != 1)))) - 8))(v35 ^ 0x3442B71F ^ (v38 - ((2 * v38 - 1302115034) & 0x68856E3E) + 225729970) ^ (v39 - 651057517 + (_DWORD)v40 + (_DWORD)v41) ^ (v42 - 651057517 + HIWORD(v42) + ((v42 + HIWORD(v42)) >> 8)));
}

void sub_20A5A9724()
{
  JUMPOUT(0x20A5A953CLL);
}

uint64_t sub_20A5A972C()
{
  int v0;
  int v1;

  v1 = STACK[0x4A8] - 69889630;
  LODWORD(STACK[0x260]) = STACK[0x474] & 0xFFFFFFF8;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x4C8] + 8 * ((30 * ((v0 + 1) > 0xF)) ^ (v1 + 69889599)))
                            - 8))();
}

void sub_20A5A99E4()
{
  JUMPOUT(0x20A5A97D8);
}

uint64_t sub_20A5A99F4(int a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  int v34;
  unsigned int v35;
  unsigned int v36;
  int v37;
  unint64_t v38;
  unsigned int v39;
  unsigned int v40;
  int v41;
  unsigned int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  unsigned int v47;
  int v48;
  unsigned int v49;
  int v50;
  int v51;
  unint64_t v52;
  int v53;
  char *v54;
  int v55;
  int v56;
  int v57;
  unint64_t v58;
  unint64_t v59;
  unsigned int v60;
  int v61;
  _BOOL4 v62;
  unsigned int v64;

  LODWORD(STACK[0x258]) = LODWORD(STACK[0x3F0]) ^ 0x719C22BA;
  v64 = LODWORD(STACK[0x344]) ^ 0xD65CF8CF;
  v11 = a3 + ((a1 + v8 + ((a1 + v8) >> 16)) >> 8) + ((a1 + v8) >> 16) + 1850249891 + v9;
  v12 = (v11 ^ 0x74DC80AE) + ((v11 >> 13) ^ 0xFFFC591B) + 1;
  v13 = (v12 ^ 0x78FCD3F6) - 2029835254 + ((2 * v12) & 0xF1F9A7EC);
  v14 = v13 + (v13 >> 5) - ((2 * (v13 + (v13 >> 5))) & 0xF8F19B38) - 59191908;
  v15 = ((2 * ((v14 ^ 0xFC78CD9C) - 107998449)) & 0x6F5FFFF6)
      + (((v14 ^ 0xFC78CD9C) - 107998449) ^ 0x37AFFFFB)
      - 934281211;
  v16 = v15 - (v15 >> 10) - ((v15 - (v15 >> 10)) >> 2);
  v17 = v16 + 1424499130 + (~(2 * v16) | 0x562FBC8B) + 1;
  v18 = ((((v17 >> 14) ^ 0x29FB5) + (v17 ^ 0xA7ED5743)) ^ 0x73917B73)
      - 1938914163
      + ((2 * (((v17 >> 14) ^ 0x29FB5) + (v17 ^ 0xA7ED5743))) & 0xE722F6E6);
  v19 = v18 - (v18 >> 2) - ((2 * (v18 - (v18 >> 2))) & 0x68E7C3C4) - 1267473950;
  v20 = ((2 * ((v19 ^ 0xB473E1E2) + 511487013)) & 0x7E7EDFEC)
      + (((v19 ^ 0xB473E1E2) + 511487013) ^ 0x3F3F6FF6)
      - 1061122038;
  v21 = v20 + (v20 >> 15) + ((v20 + (v20 >> 15)) >> 3);
  v22 = v21 - ((2 * v21) & 0x869DBEA6) - 1018241197;
  v23 = (v22 ^ 0x9ACB717C) + ((v22 >> 10) ^ 0xFFD94D23) + 1;
  v24 = (v23 ^ 0x1F6FAFB7) - 527413175 + ((2 * v23) & 0x3EDF5F6E);
  v25 = v24 + (v24 >> 7) - ((2 * (v24 + (v24 >> 7))) & 0x9BB39724) + 1306119058;
  v26 = ((2 * ((v25 ^ 0x4DD9CB92) - 787086048)) & 0x6B67FDDE)
      + (((v25 ^ 0x4DD9CB92) - 787086048) ^ 0xB5B3FEEF)
      + 1246494993;
  v27 = v26 - (v26 >> 9) + ((v26 - (v26 >> 9)) >> 5);
  v28 = v27 - ((2 * v27) & 0xE5BD02C4) + 1927184738;
  v29 = ((2 * ((v28 ^ 0x72DE8162) - 1168002143)) & 0xC9FBFAAE)
      + (((v28 ^ 0x72DE8162) - 1168002143) ^ 0xE4FDFD57)
      + 453116585;
  v30 = v29 - (v29 >> 14) + ((v29 - (v29 >> 14)) >> 4);
  v31 = v30 - ((2 * v30) & 0x92BAD1EC) - 916625162;
  v32 = ((2 * ((v31 ^ 0xC95D68F6) - 879085134)) & 0xDB6F75DA)
      + (((v31 ^ 0xC95D68F6) - 879085134) ^ 0x6DB7BAED)
      - 1840757485;
  v33 = v32 + (v32 >> 10) - ((v32 + (v32 >> 10)) >> 5);
  v34 = v33 - ((2 * v33) & 0x30BB2A6A) - 1738697419;
  v35 = ((2 * ((v34 ^ 0x985D9535) + 1300749569)) & 0xBEDC7FFE)
      + (((v34 ^ 0x985D9535) + 1300749569) ^ 0x5F6E3FFF)
      - 1601060863;
  v36 = v35 - (v35 >> 9) - ((v35 - (v35 >> 9)) >> 4);
  v37 = v28 ^ v19 ^ (((v36 - ((2 * v36) & 0x417194F8) - 1598502276) ^ v6)
                   - ((2 * ((v36 - ((2 * v36) & 0x417194F8) - 1598502276) ^ v6)) & 0x68E7C3C4)
                   - 1267473950);
  v38 = ((v37 ^ 3) + 1) & 7;
  v39 = v22 ^ ((a6 ^ 0xD0A6FDEA ^ v14) - ((2 * (a6 ^ 0xD0A6FDEA ^ v14)) & 0x869DBEA6) - 1018241197) ^ v31;
  v40 = v25 ^ ((v17 ^ v10 ^ 0x54E821BA) - 2 * ((v17 ^ v10 ^ 0x54E821BA) & 0x4DD9CB97 ^ (v17 ^ v10) & 5) + 1306119058) ^ v34;
  v41 = (((BYTE1(v39) ^ HIBYTE(v39) ^ BYTE2(v39) ^ 0xA5)
                         - 2
                         * ((BYTE1(v39) ^ HIBYTE(v39) ^ BYTE2(v39) ^ 0xA5) & 0x1F ^ (BYTE1(v39) ^ HIBYTE(v39) ^ BYTE2(v39)) & 8)
                         - 105) ^ v39) ^ 0xC9;
  v42 = (16843009 * v41) & 2 | (4 * ((((16843009 * v41) & 2u) >> 1) & 1)) | 0xFF7DD5F1;
  v43 = (((BYTE1(v40) ^ BYTE2(v40) ^ 0xA1)
                         - 2 * ((BYTE1(v40) ^ BYTE2(v40) ^ 0xA1) & 0x2D ^ (BYTE1(v40) ^ BYTE2(v40)) & 4)
                         + 41) ^ v40) ^ HIBYTE(v40) ^ 0x8F;
  v44 = 16843009 * v43 - ((33686018 * v43) & 0x1E981D32) + 256642713;
  v45 = STACK[0x3A4];
  v46 = ((STACK[0x3A4] & 0xFE ^ 0x48) - ((2 * (STACK[0x3A4] & 0xFE ^ 0x48)) & 0x3C) + 60929823) ^ 0x668C575D;
  v47 = v46 - ((2 * v46) & 0xC003FCD4) + 1921252971;
  v48 = v47 ^ 0x17AE1E21 | LODWORD(STACK[0x2B8]) ^ 0x562B9C01;
  v49 = 16843009 * (v39 & 0xFE ^ 0xE0) - ((33686018 * (v39 & 0xFE ^ 0xE0)) & 0xC0098EC4);
  v50 = 16843009 * v41 - ((33686018 * v41) & 0x121F10D0) - 1995470744;
  LODWORD(STACK[0x2B0]) = v50;
  v51 = (v42 ^ 4) + 1576790816;
  if (((v44 ^ 0xF4C0E98) & ((v42 ^ 4) + 8530445)) != 0)
    v51 = 1559729926 - (v42 ^ 4);
  LODWORD(STACK[0x2B8]) = v44;
  LODWORD(STACK[0x4A8]) = ((v44 ^ 0xF4C0E99) - 1568260371 + v51) ^ v50 & 0xFFFFFFFD;
  v52 = STACK[0x350];
  v53 = (STACK[0x350] & 0xFFFFFE3F | ((((v37 ^ 3) + 1) & 7) << 6)) ^ (STACK[0x350] << 6);
  LODWORD(STACK[0x2A8]) = v38 ^ LODWORD(STACK[0x434]) ^ (v53 - 2052301572 - ((2 * v53) & 0x1F8));
  LODWORD(STACK[0x3EC]) = (v49 - 536557726) ^ 0xE004C762;
  v54 = (char *)*(&off_24C31F2A0 + (v7 ^ 0xD)) - 4;
  LODWORD(STACK[0x344]) = v45 ^ 0x4CADD041;
  STACK[0x3F0] = v38;
  v55 = *(_DWORD *)&v54[4 * (((v37 ^ 3) + 1) & 7)]
      - ((2 * *(_DWORD *)&v54[4 * (((v37 ^ 3) + 1) & 7)] + 300042748) & 0x146E9144)
      - 1289196128;
  LODWORD(STACK[0x434]) = v64
                        + ((v52 - ((2 * LODWORD(STACK[0x2A0])) & 8) - 83252236) ^ 0x5CA9DF85 ^ *((_DWORD *)*(&off_24C31F2A0 + v7 + 14)
                                                                                               + v52
                                                                                               - 1))
                        + (v55 ^ 0x89892BD5 ^ (((16 * v55) ^ 0xA3748A20)
                                             - 2 * (((16 * v55) ^ 0xA3748A20) & 0xA3748B0 ^ (16 * v55) & 0x10)
                                             - 1976088414));
  v56 = LODWORD(STACK[0x300]) ^ LODWORD(STACK[0x2F8]);
  v57 = STACK[0x474];
  LODWORD(STACK[0x2C0]) = (v49 - 536557726) >> 1;
  LODWORD(STACK[0x2A0]) = v48 - 2 * (v48 & 0x37DC347B ^ v47 & 0xA) + 937178225;
  v58 = STACK[0x4C0];
  v59 = (*(_QWORD *)(STACK[0x4C0] + 8 * (0x63B017C8 % STACK[0x4B0])) ^ 0x6D6D6D6D6D6D6D6DLL) + 478045266;
  LODWORD(STACK[0x498]) = 1662096499 * ((v57 ^ 0x83187616) + (v37 ^ 0x3E282977)) + 1662096499;
  v60 = ((*(_QWORD *)(v58
                    + 8
                    * (((*(_QWORD *)(v58
                                   + 8
                                   * (((*(_QWORD *)(v58 + 8 * (v59 % STACK[0x460])) ^ 0x6D6D6D6D6D6D6D6DuLL) + 460756153)
                                    % STACK[0x460])) ^ 0x6D6D6D6D6D6D6D6DuLL)
                      + 3520911219u)
                     % STACK[0x460])) ^ 0x6D6D6D6D6D6D6D6DuLL)
       + 3569301573u)
      % STACK[0x460];
  LODWORD(STACK[0x404]) = v37 & 7 ^ 4;
  v61 = LODWORD(STACK[0x3A4]) ^ LODWORD(STACK[0x490]);
  LODWORD(STACK[0x2E8]) = v49 - 536557726;
  LODWORD(STACK[0x394]) = v61 ^ (v49 - 536557726);
  LODWORD(STACK[0x260]) = v37 ^ 0x2D472E34;
  LODWORD(STACK[0x434]) = v56;
  LODWORD(STACK[0x4A0]) = v39 & 0xFFFFFF01 | (2
                                            * (((v39 & 0xFE ^ 0xE0)
                                                               - ((2 * (v39 & 0xFE ^ 0xE0)) & 0xC4)
                                                               + 98) >> 1));
  v62 = v60 - 2132867975 > 0x80DF047A;
  if (v60 > 0x7F20FB86)
    v62 = 1;
  return ((uint64_t (*)(unint64_t))(*(_QWORD *)(STACK[0x4C8] + 8 * ((27 * !v62) ^ v7)) - 4))(0xF8334AA910DDDA1ALL);
}

void sub_20A5AAF4C()
{
  JUMPOUT(0x20A5AAAA0);
}

uint64_t sub_20A5AAF54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43,int a44,int a45,int a46,uint64_t a47,int a48,int a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,int a54,int a55,uint64_t a56,int a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,int a63)
{
  int a66;
  int v66;

  LODWORD(STACK[0x258]) = a63 - a66;
  LODWORD(STACK[0x490]) = a45 + (a57 ^ 0x13);
  LODWORD(STACK[0x270]) = LODWORD(STACK[0x474]) ^ LODWORD(STACK[0x390]);
  LODWORD(STACK[0x2A0]) ^= LODWORD(STACK[0x494]) ^ a48;
  LODWORD(STACK[0x280]) ^= LODWORD(STACK[0x260]) ^ (a43 - a44);
  LODWORD(STACK[0x390]) = a49 - a55;
  LODWORD(STACK[0x294]) ^= a46;
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(STACK[0x4C8]
                                                               + 8
                                                               * ((14 * (STACK[0x4B0] <= v66 + 1)) ^ a8))
                                                   - 4))(2097129484, 3745267350);
}

void sub_20A5AB4CC()
{
  JUMPOUT(0x20A5AB0D8);
}

uint64_t sub_20A5AB4E0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  uint64_t v53;
  int v54;
  int v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  int v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  int v85;
  unsigned int v86;
  uint64_t v87;
  unsigned int v88;
  unint64_t v89;
  int v90;
  unsigned int v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  int v95;

  HIDWORD(a52) = LODWORD(STACK[0x498]) + (LODWORD(STACK[0x298]) ^ 0x8D508511);
  v56 = ((v53 + ((unint64_t)(v53 + 0x5E00BFD7A3965722) >> 28) + 0x5E00BFD7A3965722) >> ((v55 - 17) ^ 0x3Bu))
      + v53
      + ((unint64_t)(v53 + 0x5E00BFD7A3965722) >> 28);
  v57 = (((v56 + 0x5E00BFD7A3965722) >> 6) & 0x1FFFFFF6D6FEFF2)
      + (((v56 + 0x5E00BFD7A3965722) >> 7) ^ 0x6EFFFFFFB6B7F7F9);
  v58 = v57
      + v56
      - 2 * v57
      - ((2 * (v57 + v56 - 2 * v57) + 0x1A017FAEB49C9E36) & 0x69DE6D329D4DBE82)
      + 0x1EFF670A8F52E5CLL;
  v59 = ((2 * ((v58 ^ 0x34EF36994EA6DF41) - 0x13AFA5FA8FB17A6)) & 0xFEBF936CC7976AFELL)
      + (((v58 ^ 0x34EF36994EA6DF41) - 0x13AFA5FA8FB17A6) ^ 0x7F5FC9B663CBB57FLL);
  v60 = v59
      + ((v59 - 0x7F5FC9B663CBB57FLL) >> 29)
      - ((v59 + ((v59 - 0x7F5FC9B663CBB57FLL) >> 29) - 0x7F5FC9B663CBB57FLL) >> 8);
  v61 = v60 + ((v60 - 0x7F5FC9B663CBB57FLL) >> 6);
  v62 = v61 - 715936216;
  v63 = v61 - 0x40CAD0B12AAC51D8 - ((v61 - 0x3793DFCC15EAC3C8) >> 28) + 0x936F0E514C18E10;
  v64 = v63 + (v63 >> 8);
  LODWORD(v63) = v62 - 958358439;
  v65 = v64 + (v64 >> 7) - ((2 * (v64 + (v64 >> 7))) & 0xA364981CFA8E6F8ALL) - 0x2E4DB3F182B8C83BLL;
  v66 = ((2 * ((v65 ^ 0xD1B24C0E7D4737C5) - 0x25953151116B048ALL)) & 0xB9F3FFF5B8BEE6FELL)
      + (((v65 ^ 0xD1B24C0E7D4737C5) - 0x25953151116B048ALL) ^ 0xDCF9FFFADC5F737FLL)
      + 0x2306000523A08C81;
  v67 = v66 + (v66 >> 29) - ((v66 + (v66 >> 29)) >> 14);
  v68 = v67 - (v67 >> 7) - ((2 * (v67 - (v67 >> 7))) & 0xAA8A265717712388) - 0x2ABAECD474476E3CLL;
  v69 = ((2 * ((v68 ^ 0xD545132B8BB891C4) - 0x10BF2422B96631C1)) & 0xF6FBFA5B87BED2ECLL)
      + (((v68 ^ 0xD545132B8BB891C4) - 0x10BF2422B96631C1) ^ 0x7B7DFD2DC3DF6976);
  v70 = v69
      - ((v69 - 0x7B7DFD2DC3DF6976) >> 28)
      - 0x7B7DFD2DC3DF6976
      + ((v69 - ((v69 - 0x7B7DFD2DC3DF6976) >> 28) - 0x7B7DFD2DC3DF6976) >> 8);
  v71 = v70 + (v70 >> 8) - ((2 * (v70 + (v70 >> 8))) & 0x73D925E1BC97BE4ALL) - 0x46136D0F21B420DBLL;
  v72 = ((2 * (((v71 >> 26) ^ 0x103159418FLL) + (v71 ^ 0x40C565063FA7C0EBLL))) & 0xEF47FBFA2DFFBFE0)
      + ((((v71 >> 26) ^ 0x103159418FLL) + (v71 ^ 0x40C565063FA7C0EBLL)) ^ 0xF7A3FDFD16FFDFF0)
      + 0x85C0202E9002010;
  v73 = v72 + (v72 >> 14) + ((v72 + (v72 >> 14)) >> 6);
  v74 = ((2
        * (((v73 - ((2 * v73) & 0xA2F3EFA3550EA5BALL) - 0x2E86082E5578AD23) ^ 0xD179F7D1AA8752DDLL)
         - 0x70FE5FCAA42AEA45)) & 0xFD57DFFEBFFFBFFELL)
      + ((((v73 - ((2 * v73) & 0xA2F3EFA3550EA5BALL) - 0x2E86082E5578AD23) ^ 0xD179F7D1AA8752DDLL)
        - 0x70FE5FCAA42AEA45) ^ 0xFEABEFFF5FFFDFFFLL);
  v75 = v74
      - ((v74 + 0x1541000A0002001) >> 26)
      + 0x1541000A0002001
      - ((v74 - ((v74 + 0x1541000A0002001) >> 26) + 0x1541000A0002001) >> 13);
  v76 = v75 - (v75 >> 3) - ((2 * (v75 - (v75 >> 3))) & 0x1CBE78B02DB41AFCLL) + 0xE5F3C5816DA0D7ELL;
  v77 = (v76 ^ 0x469095C7990B547BLL) + ((v76 >> 28) ^ 0xFFFFFFFB96F6A386) + 1;
  v78 = ((2 * v77) & 0xF5FBFFF7EE94DA8ELL) + (v77 ^ 0x7AFDFFFBF74A6D47) - 0x7AFDFFFBF74A6D47;
  v79 = v78 - (v78 >> 11) + ((v78 - (v78 >> 11)) >> 4);
  v80 = v79 - ((2 * v79) & 0xFA8014D526DD7C0ELL) - 0x2BFF5956C9141F9;
  LODWORD(STACK[0x298]) = LODWORD(STACK[0x4A8]) ^ LODWORD(STACK[0x2B8]);
  v81 = v54 ^ v63 ^ v71 ^ ((v71 ^ v63) >> 1) & 0x55DF6EBA ^ 0x3A2F4E8A ^ (((v80 >> 1) & a3 ^ 0x41974E02) - 2 * (((v80 >> 1) & a3 ^ 0x41974E02) & 0x114E2E22 ^ (v80 >> 1) & 0x20) - 1821458937) ^ v80;
  LODWORD(STACK[0x390]) = LODWORD(STACK[0x2A8]) ^ 0x85B62CCC;
  if (((*(_BYTE *)(STACK[0x4B8]
                  + ((*(_BYTE *)(STACK[0x4B8]
                               + ((*(_BYTE *)(STACK[0x4B8] + ((*(_BYTE *)(STACK[0x4B8] + 13) + 8) & 0xF)) + 6) & 0xF))
                    + 7) & 0xF))
       + 11) & 0xE) != 0)
    v82 = (*(_BYTE *)(STACK[0x4B8]
                    + ((*(_BYTE *)(STACK[0x4B8]
                                 + ((*(_BYTE *)(STACK[0x4B8] + ((*(_BYTE *)(STACK[0x4B8] + 13) + 8) & 0xF)) + 6) & 0xF))
                      + 7) & 0xF))
         + 11) & 0xF;
  else
    v82 = 1;
  v83 = (v55 - 855128947) & 0x32F83B37;
  v84 = 1903817027 * *(unsigned __int8 *)STACK[0x4B8]
      - ((49537670 * *(unsigned __int8 *)STACK[0x4B8]) & 0x1D7FEC92)
      + 247461449;
  v85 = (v83 ^ 0x179D9007 ^ v84)
      + (((v83 ^ 0x179D9007 ^ v84) + ((v83 ^ 0x179D9007 ^ v84) >> 16)) >> 8)
      + ((v83 ^ 0x179D9007 ^ v84) >> 16);
  v86 = v85 - ((2 * v85 - 1302115034) & 0x462AC0F4) - 62454003;
  v87 = v85 - ((2 * v85 + 1422301772) & 0xC60B57Au) + 949200867;
  v88 = v84 ^ 0x888FACF4 ^ v87;
  v89 = (unint64_t)(v88 + HIWORD(v88)) >> 8;
  v90 = v88 + HIWORD(v88) + v89;
  LODWORD(v89) = v89 + HIWORD(v88);
  v91 = v89 + 10468555 + v88 - 2 * ((v90 - 1724799341) & 0x276E163B ^ (v90 + 1682557199) & 3);
  v92 = v84 ^ 0xA2C689A5 ^ ((_DWORD)v89 + 1591528722 + v88 - ((2 * (v90 + 1682557199) + 473106478) & 0x58F2FFD8));
  v93 = (unint64_t)v92 >> 16;
  v94 = (unint64_t)(v92 + WORD1(v92)) >> 8;
  LODWORD(v89) = v92 + WORD1(v92) + v94;
  v95 = v89 + 977943715;
  LODWORD(v89) = v94 + v93 - 753633352 + v92 - 2 * ((v89 + 1496426131) & 0x79E2D127 ^ (v89 + 977943715) & 2);
  return ((uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x4C8] + 8 * ((113 * (v82 != 1)) ^ (v55 - 17))) - 4))(((((v86 >> 1) & 0x55DF6EBA ^ 0x118A2038)- 1587413187- ((2 * ((v86 >> 1) & 0x55DF6EBA ^ 0x118A2038)) & 0x282DC70)) ^ v81 ^ (v91 >> 1) & 0x55DF6EBA ^ v89 ^ (((v89 >> 1) & 0x55DF6EBA ^ 0x54D16892) - ((2 * ((v89 >> 1) & 0x55DF6EBA ^ 0x54D16892)) & 0xA3848040) - 102575835) ^ 0x11970A18) & 0x2315607B, (v91 >> 1) & 0x55DF6EBA, v87, v83, 1440706234, (_DWORD)v94 - 1082241499 + (_DWORD)v93 + v92 - ((2 * v95 + 271720710) & 0x1A360200) + 1, ((v87 >> 1) & 0x55DF6EBA ^ 0x41182C1A)+ 1086468696- ((2 * ((v87 >> 1) & 0x55DF6EBA ^ 0x41182C1A)) & 0x81844430), v92, a9, a10, a11, a12, a13, a14, a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53);
}

uint64_t sub_20A5AC0A0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49)
{
  int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  uint64_t v54;
  int v55;
  int v56;
  int v57;
  int v58;
  unsigned int v59;
  unint64_t v60;
  int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  unint64_t v65;
  int v66;
  unsigned int v67;
  int v68;
  unsigned int v69;
  unsigned int v70;

  LODWORD(STACK[0x498]) = v50;
  LODWORD(STACK[0x4A8]) = v53;
  LODWORD(STACK[0x4A0]) = v49;
  LODWORD(STACK[0x3A0]) = LODWORD(STACK[0x258]) ^ a49;
  LODWORD(STACK[0x268]) ^= LODWORD(STACK[0x3E8]) ^ LODWORD(STACK[0x490]);
  LODWORD(STACK[0x270]) ^= a48;
  v56 = (a4 + 6) | 2;
  v57 = *(unsigned __int8 *)(STACK[0x4B8] + v54);
  LODWORD(STACK[0x490]) = v56;
  v58 = v57 * (v56 + 1903817013) - ((1660150406 * v57) & 0x7FD15EEE) + 1072213879;
  v59 = (v51 + ((a8 + v55 + ((a8 + v55) >> 16)) >> 8)
             + ((a8 + v55) >> 16)
             - 1082241499
             + v52) ^ 0x32F3AE77 ^ v58;
  v60 = v59 + v54;
  v61 = v54
      + 1806274160
      + ((v60 + WORD1(v60)) >> 8)
      + (v60 >> 16)
      + v59
      - ((2 * (v59 + v54 + ((v59 + v54) >> 16) + ((v60 + WORD1(v60)) >> 8))) & 0xD7531CE0);
  v62 = (v61 ^ 0x6BA98E70) - ((2 * (v61 ^ 0x6BA98E70) - 1302115034) & 0xB575A664) - 1276347963;
  v63 = ((2 * v62) & 0xB2634D26 ^ 0xB0610424) + (v62 ^ 0x38B75A1);
  v64 = v58 ^ 0xDF2B4326 ^ (v63 - 524030895 - ((2 * v63) & 0xC187D8A2));
  v65 = (unint64_t)(v64 + (_DWORD)v54 + ((v64 + v54) >> 16)) >> 8;
  v66 = v64 + v54 + ((v64 + v54) >> 16) + v65;
  LODWORD(v65) = v54 + v65 + ((v64 + v54) >> 16);
  v67 = v65 + 1092181543 + v64 - ((2 * v66 - 1302115034) & 0xCFCF6F28);
  v68 = v58 ^ 0x86D10BB2 ^ (v65 + 1805447659 + v64 - ((2 * v66 - 456746420) & 0x7273498A));
  v69 = v54
      + ((v68 + (_DWORD)v54 + ((v68 + v54) >> 16)) >> 8)
      + ((v68 + v54) >> 16)
      - 85321469
      + v68
      - ((2
        * (v68 + v54 + ((v68 + v54) >> 16) + ((v68 + (_DWORD)v54 + ((v68 + v54) >> 16)) >> 8))
        + 845368614) & 0x4370E4E0);
  v70 = LODWORD(STACK[0x4A8]) ^ (((v62 >> 1) & 0x55DF6EBA ^ 0x455D6898)
                               - 1587413187
                               - ((2 * ((v62 >> 1) & 0x55DF6EBA ^ 0x455D6898)) & 0x282DC70)) ^ v67 ^ (((v67 >> 1) & 0x55DF6EBA ^ 0x11D34A8A) - ((2 * ((v67 >> 1) & 0x55DF6EBA ^ 0x11D34A8A)) & 0x8B8E4D20) + 1743239060) ^ 0x10DC2838 ^ (v69 >> 1) & 0x55DF6EBA;
  LODWORD(STACK[0x4A8]) = v62 ^ v69 ^ 0x80D98D4D ^ (v70 - 625290445 + ~((2 * v70) & 0xB575A664));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x4C8] + 8 * ((86 * ((unint64_t)(v54 + 1) > 0xF)) ^ a4)) - 12))();
}

void sub_20A5AC524()
{
  int v0;
  int v1;

  LODWORD(STACK[0x498]) = v1;
  LODWORD(STACK[0x4A0]) = v0;
  JUMPOUT(0x20A5AC130);
}

uint64_t sub_20A5AC534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,int a53,int a54,int a55,int a56,int a57,int a58)
{
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  int v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  int v90;
  unsigned int v91;
  int v92;
  unsigned int v93;
  unsigned int v94;
  int v95;
  unsigned int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  unsigned int v101;
  unsigned int v102;
  int v103;
  int v104;
  unsigned int v105;
  uint64_t v106;
  unint64_t v107;
  unint64_t v108;
  int v109;
  int v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  int v114;
  unint64_t v115;
  uint64_t v116;
  unint64_t v117;
  _BOOL4 v118;
  uint64_t (*v119)(unint64_t, uint64_t, uint64_t, _QWORD, unint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v63 = v59
      + ((v61 + v58 + ((v61 + v58) >> 16)) >> 8)
      + ((v61 + v58) >> 16)
      - 1082241499
      + v62;
  v64 = (v63 ^ 0xC222C4D0) + ((v63 >> 13) ^ 0xFFF9EEE9) + 1;
  v65 = (v64 ^ 0x75FF26FB) - 1979655931 + ((2 * v64) & 0xEBFE4DF6);
  v66 = v65 + (v65 >> 5) - ((2 * (v65 + (v65 >> 5))) & 0xE023A410) - 267267576;
  v67 = ((2 * ((v66 ^ 0xF011D208) - 107998449)) & 0x7EFFF3F8)
      + (((v66 ^ 0xF011D208) - 107998449) ^ 0xBF7FF9FC)
      + 1082131972;
  v68 = v67 - (v67 >> 10) - ((v67 - (v67 >> 10)) >> 2);
  v69 = v68 - ((2 * v68) & 0x25092BF8) + 310679036;
  v70 = ((((v69 >> 14) ^ 0x38607) + (v69 ^ 0xE181E305)) ^ 0x57FBC7D6)
      - 1476118486
      + ((2 * (((v69 >> 14) ^ 0x38607) + (v69 ^ 0xE181E305))) & 0xAFF78FAC);
  v71 = v70 - (v70 >> 2) + 126764935 + (~(2 * (v70 - (v70 >> 2))) | 0xF0E370F1) + 1;
  v72 = ((2 * ((v71 ^ 0x78E4787) + 511487013)) & 0xFFFFBDEC) + (((v71 ^ 0x78E4787) + 511487013) ^ 0xFFFFDEF6) + 8458;
  v73 = v72 + (v72 >> 15) + ((v72 + (v72 >> 15)) >> 3);
  v74 = v73 - ((2 * v73) & 0xCB9D6E5A) + 1708046125;
  v75 = (v74 ^ 0x3C4B1902) + ((v74 >> 10) ^ 0xFFF0ED39) + 1;
  v76 = (v75 ^ 0xFFFAF77E) + 329858 + ((2 * v75) & 0xFFF5EEFC);
  v77 = v76 + (v76 >> 7) - ((2 * (v76 + (v76 >> 7))) & 0xD0BDBED0) - 396435608;
  v78 = ((2 * ((v77 ^ 0xE85EDF68) - 787086048)) & 0xCFDFDB76)
      + (((v77 ^ 0xE85EDF68) - 787086048) ^ 0x67EFEDBB)
      - 1743777211;
  v79 = v78 - (v78 >> 9) + ((v78 - (v78 >> 9)) >> 5);
  v80 = ((2 * (((v79 - ((2 * v79) & 0x7936AC36) - 1130670565) ^ 0xBC9B561B) - 1168002143)) & 0xEFDF5174)
      + ((((v79 - ((2 * v79) & 0x7936AC36) - 1130670565) ^ 0xBC9B561B) - 1168002143) ^ 0xF7EFA8BA)
      + 135288646;
  v81 = v80 - (v80 >> 14) + ((v80 - (v80 >> 14)) >> 4);
  v82 = v81 - ((2 * v81) & 0x1AE5FEB6) + 225640283;
  v83 = ((2 * ((v82 ^ 0xD72FF5B) - 879085134)) & 0xEEEEFFBC)
      + (((v82 ^ 0xD72FF5B) - 879085134) ^ 0xF7777FDE)
      + 143163426;
  v84 = v83 + (v83 >> 10) - ((v83 + (v83 >> 10)) >> 5);
  v85 = v84 - ((2 * v84) & 0xE031F024) + 1880684562;
  v86 = LODWORD(STACK[0x484]) ^ LODWORD(STACK[0x288]) ^ 0x50D21D80;
  v87 = (((LODWORD(STACK[0x484]) >> 1) & 0x55DF6EBA ^ 0x111E2428)
       + 641559130
       - ((2 * ((LODWORD(STACK[0x484]) >> 1) & 0x55DF6EBA ^ 0x111E2428)) & 0x83AD434)) ^ LODWORD(STACK[0x484]) ^ ((v86 ^ LODWORD(STACK[0x488])) >> 1) & 0x55DF6EBA ^ a56 ^ a53;
  LODWORD(STACK[0x4A0]) = v82;
  v88 = v87 ^ ((v82 ^ ((v66 ^ 0x95DF6525 ^ v74) - ((2 * (v66 ^ 0x95DF6525 ^ v74)) & 0x1AE5FEB6) + 225640283)) >> 1) & 0x55DF6EBA;
  v89 = LODWORD(STACK[0x474]) ^ 0xFD5431F4 ^ ((v88 ^ 0x93458DD2)
                                            - 2 * ((v88 ^ 0x93458DD2) & 0x7F12981F ^ v88 & 1)
                                            + 2131925022);
  v90 = (v89 - ((2 * v89) & 0x2F3758C4) + 396078178) ^ v86;
  v91 = (v90 - ((2 * v90) & 0xE023A410) - 267267576) ^ v66;
  v92 = (v91 + a8 - ((2 * v91) & 0xD42CA8)) ^ v60;
  v93 = (v92 - ((2 * v92) & 0xCB9D6E5A) + 1708046125) ^ v74;
  LODWORD(STACK[0x498]) = v93 - ((2 * v93) & 0x1AE5FEB6) + 225640283;
  v94 = v85 ^ ((v77 ^ v69 ^ 0xFADA4A94) - 2 * ((v77 ^ v69 ^ 0xFADA4A94) & 0x7018F832 ^ (v77 ^ v69) & 0x20) + 1880684562);
  v95 = LODWORD(STACK[0x278]) ^ LODWORD(STACK[0x48C]);
  v96 = (v94 - ((2 * v94) & 0x446898D4) - 1573630870) ^ v95;
  v97 = (-2051658548 - (v96 & 0xB2C5910) + ((v96 >> 1) & 0x55DF6EBA)) ^ LODWORD(STACK[0x390]);
  v98 = (v97 - ((2 * v97) & 0x446898D4) - 1573630870) ^ v95;
  v99 = (v98 - 1587413187 - ((2 * v98) & 0x42C3FE7A)) ^ LODWORD(STACK[0x4A8]);
  v100 = (v99 - ((2 * v99) & 0x25092BF8) + 310679036) ^ v69;
  v101 = (v100 - ((2 * v100) & 0xD0BDBED0) - 396435608) ^ v77;
  v102 = (v101 - ((2 * v101) & 0xE031F024) + 1880684562) ^ v85;
  v103 = (v102 - 2017488746 - ((2 * v102) & 0xF7F212C)) ^ a58;
  v104 = (v103 - ((2 * v103) & 0x25E30564) - 1829666126) ^ LODWORD(STACK[0x48C]);
  LODWORD(STACK[0x4A8]) = v104 - 2051658548 - ((2 * v104) & 0xB6C5998);
  v105 = ((*(_QWORD *)(STACK[0x4C0]
                     + 8
                     * (((*(_QWORD *)(STACK[0x4C0]
                                    + 8
                                    * (((*(_QWORD *)(STACK[0x4C0]
                                                   + 8
                                                   * (((*(_QWORD *)(STACK[0x4C0]
                                                                  + 8 * (0x791DF2FA % STACK[0x4B0])) ^ 0x6D6D6D6D6D6D6D6DuLL)
                                                     + 2126161460)
                                                    % STACK[0x460])) ^ 0x6D6D6D6D6D6D6D6DuLL)
                                      + 2993841644u)
                                     % STACK[0x460])) ^ 0x6D6D6D6D6D6D6D6DuLL)
                       + 2220923829u)
                      % STACK[0x460])) ^ 0x6D6D6D6D6D6D6D6DuLL)
        + 1951303181)
       % STACK[0x460];
  v106 = 0x418B018541479FA3 * (*(_QWORD *)STACK[0x4C0] ^ 0x6D6D6D6D6D6D6D6DLL)
       - ((0x316030A828F3F46 * (*(_QWORD *)STACK[0x4C0] ^ 0x6D6D6D6D6D6D6D6DLL)) & ((LODWORD(STACK[0x490]) - 69889608)
                                                                                    + 0x31E9277A389A1F7ALL))
       - 0x670B6C4265C82760;
  v107 = (v106 ^ 0x8F8DD0FFDB7676ABLL)
       - ((v106 ^ 0x8F8DD0FFDB7676ABLL) >> 32)
       - (((v106 ^ 0x8F8DD0FFDB7676ABLL) - ((v106 ^ 0x8F8DD0FFDB7676ABLL) >> 32)) >> 16)
       - (((v106 ^ 0x8F8DD0FFDB7676ABLL)
         - ((v106 ^ 0x8F8DD0FFDB7676ABLL) >> 32)
         - (((v106 ^ 0x8F8DD0FFDB7676ABLL) - ((v106 ^ 0x8F8DD0FFDB7676ABLL) >> 32)) >> 16)) >> 8)
       + 0x932B57ECCE25EEFLL;
  v108 = v107 - ((2 * v107 + 0x136F01578DA04E86) & 0xB86B78AB92E3193CLL) - 0x1A12C2FE6FBE4C1FLL;
  v109 = (((v108 >> 1) & 0x37E0663F ^ 0x24A0460F)
        - 2 * (((v108 >> 1) & 0x37E0663F ^ 0x24A0460F) & 0x160043E ^ (v108 >> 1) & 0x20)
        - 915305314) ^ v108;
  v110 = v109 - 1564388464 - ((2 * v109) & 0x4582A720);
  v111 = (v106 ^ 0x44C12FE85346543ELL ^ v108) - ((v106 ^ 0x44C12FE85346543ELL ^ v108) >> 32);
  v112 = v111 - (v111 >> 16) - ((v111 - (v111 >> 16)) >> 8) + 0x6282ED7561EDEDDFLL;
  v113 = v112 - ((2 * v112 + 0x60CE916A638930A6) & 0x52FB4A2AEFA7FD2CLL) + 0x59E4EDCAA99896E9;
  v114 = (((v113 >> 1) & 0x37E0663F ^ 0x33E0660B)
        - ((2 * ((v113 >> 1) & 0x37E0663F ^ 0x33E0660B)) & 0x6F80CC2C)
        + 2010381974) ^ v113;
  v115 = (v106 ^ 0x318936A8EDE42636 ^ v113) - ((v106 ^ 0x318936A8EDE42636 ^ (unint64_t)v113) >> 32);
  v116 = v115 - (v115 >> 16) - ((v115 - (v115 >> 16)) >> 8) + 0x736AAC5A9E7F9007;
  v117 = v116 - ((2 * v116 + 0x3EFF139FEA65EC56) & 0x9BDD0C2C86B78978) - 0x1291F019C7714519;
  v118 = v105 - 1492263352 > 0xA70DDE49;
  if (v105 > 0x58F221B7)
    v118 = 1;
  v119 = (uint64_t (*)(unint64_t, uint64_t, uint64_t, _QWORD, unint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x4C8] + 8 * ((39 * !v118) ^ LODWORD(STACK[0x490]))) - 12);
  return v119(v117, 2426052677, 0x3EFF139FEA65EC56, LODWORD(STACK[0x478]) ^ 0x7AEED6B3 ^ v110 ^ v114 ^ (((v117 >> 1) & 0x37E0663F ^ 0x21A0621E)+ 1130087612- ((2* ((v117 >> 1) & 0x37E0663F ^ 0x21A0621E)) & 0x6808878)) ^ v117, 0xED6E0FE6388EBAE7, 3875586809, 39, v119, a9, a10, a11, a12, a13, a14, a15, a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47);
}

void sub_20A5AD298()
{
  JUMPOUT(0x20A5ACE1CLL);
}

uint64_t sub_20A5AD2A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  int v47;
  unsigned int v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;

  v49 = *(_QWORD *)(STACK[0x4C0] + 8 * v48) ^ 0x6D6D6D6D6D6D6D6DLL;
  v50 = 0x418B018541479FA3 * v49
      - ((v49 * ((v47 + 69889628) ^ 0x8316030A828F3F64)) & 0xE30058457C890E0CLL)
      + 0x71802C22BE448706;
  v51 = (a1 ^ 0x3C6EAA34FD1F43BALL ^ v50) + v48 - (((a1 ^ 0x3C6EAA34FD1F43BALL ^ v50) + v48) >> 32);
  v52 = v51 - (v51 >> 16) - ((v51 - (v51 >> 16)) >> 8) + 0x52B5C25E96D70DF0;
  v53 = v52 - ((2 * v52 + 0x68E797F9B6F084) & 0x8476F25C2A7E252) + 0x44582B5EDE2F696BLL;
  v54 = (v50 ^ 0xF5A39BB05F17762FLL ^ v53) + v48 - (((v50 ^ 0xF5A39BB05F17762FLL ^ v53) + v48) >> 32);
  v55 = v54 - (v54 >> 16) - ((v54 - (v54 >> 16)) >> 8) + 0x7BA84C0E8EC7FD17;
  v56 = v55 - ((2 * v55 + 0x2E83D43809D51236) & 0xB9F406F768D45F86) + 0x743BED97B954B8DELL;
  v57 = (v50 ^ 0xAD7A2F590A2EA8C5 ^ v56) + v48 - (((v50 ^ 0xAD7A2F590A2EA8C5 ^ v56) + v48) >> 32);
  v58 = v57 - (v57 >> 16) - ((v57 - (v57 >> 16)) >> 8);
  return ((uint64_t (*)(unint64_t, uint64_t, uint64_t, unint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x4C8] + 8 * ((26 * (STACK[0x4B0] <= v48 + 1)) ^ (v47 + 69889605))) - 8))(((v58 - 0xFD22630127B177FLL - ((2 * v58) & 0xE05BB39FDB09D102)) ^ 0xF02DD9CFED84E881)- ((2 * ((v58 - 0xFD22630127B177FLL - ((2 * v58) & 0xE05BB39FDB09D102)) ^ 0xF02DD9CFED84E881)+ 0x25D46C5527650C64) & 0x9BDD0C2C86B78978)+ 0x60D8BC40D70E4AEELL, 2061355656, 0x60D8BC40D70E4AEELL, (v58 - 0xFD22630127B177FLL - ((2 * v58) & 0xE05BB39FDB09D102)) ^ 0xF02DD9CFED84E881, 0, a6, 895509508, 2232604644, a9, a10, a11, a12, a13, a14, a15, a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47);
}

void sub_20A5AD854()
{
  JUMPOUT(0x20A5AD358);
}

uint64_t sub_20A5AD86C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  int v44;
  int v45;
  int v46;
  int v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  int v63;
  unsigned int v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unsigned int v74;
  unint64_t v75;
  unint64_t v76;
  char v77;
  unsigned int v78;
  uint64_t v79;
  int v80;
  unsigned int v81;
  unint64_t v82;
  int v83;
  int v84;
  unsigned int v85;
  uint64_t v86;
  unsigned int v87;
  unint64_t v88;
  int v89;
  unsigned int v90;
  unsigned int v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  unsigned int v95;
  uint64_t v96;
  uint64_t v97;
  int v98;

  v48 = ((2 * (a4 - 0x373B377CD11039CBLL)) & 0xFCFEFFFBFBFECB74)
      + ((a4 - 0x373B377CD11039CBLL) ^ 0x7E7F7FFDFDFF65BALL)
      - 0x7E7F7FFDFDFF65BALL;
  STACK[0x4A0] = (v46 - 34) | 8u;
  v49 = v48 + (v48 >> 28) + ((v48 + (v48 >> 28)) >> (((v46 - 34) | 8) ^ 3u));
  v50 = v49 - (v49 >> 7) - ((2 * (v49 - (v49 >> 7))) & 0x6634B4C76EF4C86ALL) + 0x331A5A63B77A6435;
  v51 = ((2 * ((v50 ^ 0x331A5A63B77A6435) - 0x13AFA5FA8FB17A6)) & 0xEE6FFE3FC759BBF6)
      + (((v50 ^ 0x331A5A63B77A6435) - 0x13AFA5FA8FB17A6) ^ 0x7737FF1FE3ACDDFBLL)
      - 0x7737FF1FE3ACDDFBLL;
  v52 = v51 + (v51 >> 29) - ((v51 + (v51 >> 29)) >> 8);
  v53 = v52 + (v52 >> 6) - ((2 * (v52 + (v52 >> 6))) & 0xAC57978FF9036246) - 0x29D43438037E4EDDLL;
  v54 = ((2 * ((v53 ^ 0xD62BCBC7FC81B123) + 0x47CBE9EA4DE0F1B7)) & 0x7FFBEF7F7E3DDF5ELL)
      + (((v53 ^ 0xD62BCBC7FC81B123) + 0x47CBE9EA4DE0F1B7) ^ 0xBFFDF7BFBF1EEFAFLL);
  v55 = v54
      - ((v54 + 0x4002084040E11051) >> 28)
      + 0x4002084040E11051
      + ((v54 - ((v54 + 0x4002084040E11051) >> 28) + 0x4002084040E11051) >> 8);
  v56 = v55 + (v55 >> 7) - ((2 * (v55 + (v55 >> 7))) & 0x74DE54DE57C68A28) + 0x3A6F2A6F2BE34514;
  v57 = ((2 * ((v56 ^ 0x3A6F2A6F2BE34514) - 0x25953151116B048ALL)) & 0x7BFBFEEFF176FFAELL)
      + (((v56 ^ 0x3A6F2A6F2BE34514) - 0x25953151116B048ALL) ^ 0xBDFDFF77F8BB7FD7)
      + 0x4202008807448029;
  v58 = v57 + (v57 >> 29) - ((v57 + (v57 >> 29)) >> 14);
  v59 = v58 - (v58 >> 7) - ((2 * (v58 - (v58 >> 7))) & 0xD11BCFE07A47B0BALL) + 0x688DE7F03D23D85DLL;
  v60 = ((2 * ((v59 ^ 0x688DE7F03D23D85DLL) - 0x10BF2422B96631C1)) & 0xB7EEBE5FBEFEFFBELL)
      + (((v59 ^ 0x688DE7F03D23D85DLL) - 0x10BF2422B96631C1) ^ 0x5BF75F2FDF7F7FDFLL);
  v61 = v60
      - ((v60 - 0x5BF75F2FDF7F7FDFLL) >> 28)
      - 0x5BF75F2FDF7F7FDFLL
      + ((v60 - ((v60 - 0x5BF75F2FDF7F7FDFLL) >> 28) - 0x5BF75F2FDF7F7FDFLL) >> 8);
  v62 = v61 + (v61 >> 8) - ((2 * (v61 + (v61 >> 8))) & 0x60D59EFCA9CBEA60) + 0x306ACF7E54E5F530;
  v63 = ((((v62 ^ v53) >> 1) & v45 ^ 0x14202209)
       + 1424356656
       - 2 * ((((v62 ^ v53) >> 1) & v45 ^ 0x14202209) & 0x14E06432 ^ ((v62 ^ v53) >> 1) & 2)) ^ v62;
  v64 = v63 - ((2 * v63) & 0xF9036246) - 58609373;
  v65 = ((2 * (((v62 >> 26) ^ 0x3250CE222DLL) + (v62 ^ 0xC9433888B509EAFELL))) & 0xFB63FDF3F7EC7FFALL)
      + ((((v62 >> 26) ^ 0x3250CE222DLL) + (v62 ^ 0xC9433888B509EAFELL)) ^ 0xFDB1FEF9FBF63FFDLL)
      + 0x24E01060409C003;
  v66 = v65 + (v65 >> 14) + ((v65 + (v65 >> 14)) >> 6);
  v67 = v66 - ((2 * v66) & 0xDB42ABEA27E38C08) - 0x125EAA0AEC0E39FCLL;
  v68 = ((2 * ((v67 ^ 0xEDA155F513F1C604) - 0x70FE5FCAA42AEA45)) & 0x9DBB7DB2DCFDFDDELL)
      + (((v67 ^ 0xEDA155F513F1C604) - 0x70FE5FCAA42AEA45) ^ 0xCEDDBED96E7EFEEFLL);
  v69 = v68
      - ((v68 + 0x3122412691810111) >> 26)
      + 0x3122412691810111
      - ((v68 - ((v68 + 0x3122412691810111) >> 26) + 0x3122412691810111) >> 13);
  v70 = v69 - (v69 >> 3) - ((2 * (v69 - (v69 >> 3))) & 0x1F6AE82C912F9CFELL) - 0x704A8BE9B7683181;
  v71 = (v70 ^ 0xC77ADD89C746977ALL) + ((v70 >> 28) ^ 0xFFFFFFF388522763) + 1;
  v72 = ((2 * v71) & 0xFE387FFF7EFF5FFELL)
      + (v71 ^ 0x7F1C3FFFBF7FAFFFLL)
      - ((((2 * v71) & 0xFE387FFF7EFF5FFELL) + (v71 ^ 0x7F1C3FFFBF7FAFFFLL) - 0x7F1C3FFFBF7FAFFFLL) >> 11);
  v73 = v72 + ((v72 - 0x7F1C3FFFBF7FAFFFLL) >> 4);
  v74 = v73 + 1082150913;
  v75 = v73 - 0x1C5C47731BA5D855 - ((v73 + 0x27409207CA1F9E79) >> 30) + 0x439CD97AE5C576CELL;
  LODWORD(STACK[0x4A8]) = v44 ^ v53 ^ v64 ^ v74 ^ 0xD51294F0 ^ (v74 >> 1) & 0x37E0663F;
  LODWORD(v53) = ((v75 - (v75 >> 9)) >> 7) + v75 - (v75 >> 9);
  LODWORD(v53) = v53 - 269846650 - ((2 * v53) & 0xDFD4EF0C);
  v76 = STACK[0x4B8];
  v77 = *(_BYTE *)(STACK[0x4B8] + 1);
  v78 = v53 ^ ((v56 ^ 0x38128310 ^ v67) - ((2 * (v56 ^ 0x38128310 ^ v67)) & 0x5FD4EF0C) - 269846650);
  LODWORD(v53) = (((-269846650 - (v78 & 0x4FC0CC0C) + (v45 & (v78 >> 1))) ^ v53)
                + 334611972
                - ((2 * ((-269846650 - (v78 & 0x4FC0CC0C) + (v45 & (v78 >> 1))) ^ v53)) & 0x27E38C08)) ^ v67;
  LODWORD(STACK[0x4B0]) = v47 ^ v56 ^ 0xA6723C37 ^ (v53 - ((2 * v53) & 0x57C68A28) + 736314644);
  if (((*(_BYTE *)(v76 + ((*(_BYTE *)(v76 + ((*(_BYTE *)(v76 + ((v77 + 14) & 0xF)) + 1) & 0xF)) + 6) & 0xF)) + 12) & 0xE) != 0)
    v79 = (*(_BYTE *)(v76 + ((*(_BYTE *)(v76 + ((*(_BYTE *)(v76 + ((v77 + 14) & 0xF)) + 1) & 0xF)) + 6) & 0xF)) + 12) & 0xF;
  else
    v79 = 1;
  STACK[0x498] = v79 - 1;
  v80 = 1903817027 * *(unsigned __int8 *)STACK[0x4B8]
      - ((-487333242 * *(unsigned __int8 *)STACK[0x4B8]) & (STACK[0x4A0] - 1042679522))
      - 521339757;
  v81 = v80 ^ 0xF9CE9ADB;
  v82 = (unint64_t)(v81 + HIWORD(v81)) >> 8;
  v83 = v81 + HIWORD(v81) + v82;
  v84 = v82 + ((v80 ^ 0xF9CE9ADB) >> 16);
  v85 = v84 - 1246690279 + (v80 ^ 0xF9CE9ADB) - ((2 * v83 - 1302115034) & 0xB8FEBB0C);
  v86 = v84 + 745241484 + (v80 ^ 0xF9CE9ADB) - ((2 * v83 + 1690737228) & 0xF4105CCC);
  v87 = v80 ^ 0x9AE4D2F5 ^ v86;
  v88 = (unint64_t)(v87 + HIWORD(v87)) >> 8;
  v89 = v87 + HIWORD(v87) + v88;
  LODWORD(v88) = v88 + HIWORD(v87);
  v90 = v88 + 1288793507 + v87 - ((2 * v89 - 1302115034) & 0xE73F8E20);
  v91 = v80 ^ 0xBDAA0BDA ^ (v88 + 262816879 + v87 - ((2 * v89 + 1690737228) & 0xBA8DEE92));
  v92 = (unint64_t)v91 >> 16;
  v93 = (unint64_t)(v91 + HIWORD(v91)) >> 8;
  v94 = 2 * (v91 + HIWORD(v91) + v93);
  v95 = v93 + 3986457 + v92 + v91 - ((v94 + 845368614) & 0x4E165B0C);
  v96 = v95 >> 1;
  v97 = (v90 >> 1) & 0x37E0663F;
  v98 = LODWORD(STACK[0x4A8]) ^ (((v85 >> 1) & 0x37E0663F ^ 0x26202603)
                               - 720202512
                               - ((2 * ((v85 >> 1) & 0x37E0663F ^ 0x26202603)) & 0x2A000860)) ^ v97 ^ v95 ^ 0x31C06208 ^ (((v95 >> 1) & 0x37E0663F ^ 0x13800603) - 2 * (((v95 >> 1) & 0x37E0663F ^ 0x13800603) & 0x27002426 ^ (v95 >> 1) & 0x20) + 655043974);
  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x4C8] + 8 * (int)((42 * (STACK[0x498] != 0)) ^ STACK[0x4A0])) - 4))(v97, (v93 - 2092591816 + v92), v96, v85 ^ v90 ^ 0xA68D53E0 ^ (v98 - ((2 * v98) & 0xB8FEBB0C) - 595632762), v93, v94, v92, v86, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44);
}

void sub_20A5AE408(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;

  LODWORD(STACK[0x4A8]) = a4;
  LODWORD(STACK[0x4B0]) = v4;
  JUMPOUT(0x20A5AE004);
}

uint64_t sub_20A5AE414()
{
  int v0;
  uint64_t v1;

  LODWORD(STACK[0x4B0]) = v0 - 8;
  LODWORD(STACK[0x4A8]) = LODWORD(STACK[0x394]) ^ 0xCE49165E;
  return (*(uint64_t (**)(void))(STACK[0x4C8]
                              + 8 * ((61 * ((unint64_t)(v1 + 1) < 0x10)) ^ (LODWORD(STACK[0x4B0]) + 69889594))))();
}

uint64_t sub_20A5AE854@<X0>(int a1@<W3>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int a44,int a45,int a46,int a47,int a48,int a49,int a50,int a51,int a52)
{
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  unint64_t v60;
  int v61;
  unsigned int v62;
  int v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  int v73;
  int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  unsigned int v79;
  unsigned int v80;
  int v81;
  unsigned int v82;
  int v83;
  unsigned int v84;
  unsigned int v85;
  int v86;
  int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  int v94;
  int v95;
  int v96;
  unsigned int v97;
  unsigned int v98;
  int v99;
  unsigned int v100;
  unsigned int v101;
  unsigned int v102;
  int v103;
  unsigned int v104;
  int v105;
  unsigned int v106;
  int v107;
  int v108;
  int v109;
  unsigned int v110;
  unsigned int v111;
  unsigned int v112;
  uint64_t v113;
  int v114;
  int v115;

  v60 = (v52 + v57);
  v61 = LODWORD(STACK[0x478]) ^ LODWORD(STACK[0x474]);
  LODWORD(STACK[0x3E8]) = LODWORD(STACK[0x258]) ^ ~a44;
  v62 = (v56 + 540261563) & 0xDFCC433F;
  LODWORD(STACK[0x4B0]) = v62;
  LODWORD(v60) = v53 + ((v60 + WORD1(v60)) >> 8) + (v60 >> 16) - 2092591816 + v58;
  LODWORD(v60) = (v60 ^ 0x1FDB8DC3) + (v62 ^ (v60 >> 13) ^ 0xFFFF0139) + 1;
  LODWORD(v60) = (v60 ^ 0xDFCD7BDB) + 540181541 + ((2 * v60) & 0xBF9AF7B6);
  v63 = v60 + (v60 >> 5) - ((2 * (v60 + (v60 >> 5))) & 0x1422CA52) - 1978571479;
  v64 = ((2 * ((v63 ^ 0x8A116529) - 107998449)) & 0xF79FFFDA)
      + (((v63 ^ 0x8A116529) - 107998449) ^ 0x7BCFFFED)
      - 2077229037;
  v65 = v64 - (v64 >> 10) - ((v64 - (v64 >> 10)) >> 2);
  v66 = v65 - ((2 * v65) & 0x35FD8FCE) + 452904935;
  v67 = ((((v66 >> 14) ^ 0x3A7EE) + (v66 ^ 0xE9FBB11E)) ^ 0xF1D0FFFA)
      + 237961222
      + ((2 * (((v66 >> 14) ^ 0x3A7EE) + (v66 ^ 0xE9FBB11E))) & 0xE3A1FFF4);
  v68 = v67 - (v67 >> 2) - ((2 * (v67 - (v67 >> 2))) & 0x8F938BC0) + 1204405728;
  v69 = ((2 * ((v68 ^ 0x47C9C5E0) + 511487013)) & 0xFD67B7EA)
      + (((v68 ^ 0x47C9C5E0) + 511487013) ^ 0xFEB3DBF5)
      + 21767179;
  v70 = v69 + (v69 >> 15) + ((v69 + (v69 >> 15)) >> 3);
  v71 = v70 - ((2 * v70) & 0x3A84B590) + 490887880;
  v72 = ((((v71 ^ v63) >> 1) & a2 ^ 0x3A00630)
       - 2 * ((((v71 ^ v63) >> 1) & a2 ^ 0x3A00630) & 0x1540420F ^ ((v71 ^ v63) >> 1) & 7)
       + 490887880) ^ v71;
  v73 = v63 ^ v54 ^ (v72 - ((2 * v72) & 0x1422CA52) - 1978571479);
  LODWORD(v60) = (v71 ^ 0x44C7F4E7) + ((v71 >> 10) ^ 0xFFEECE02) + 1;
  LODWORD(v60) = (v60 ^ 0x2F7EDAE9) - 796842729 + ((2 * v60) & 0x5EFDB5D2);
  v74 = v60 + (v60 >> 7) - ((2 * (v60 + (v60 >> 7))) & 0x5D17D99E) - 1366561585;
  v75 = ((2 * ((v74 ^ 0xAE8BECCF) - 787086048)) & 0xDB76FCDC)
      + (((v74 ^ 0xAE8BECCF) - 787086048) ^ 0xEDBB7E6E)
      + 306479506;
  v76 = v75 - (v75 >> 9) + ((v75 - (v75 >> 9)) >> 5);
  v77 = v76 - ((2 * v76) & 0xCA3293C4) - 451327518;
  v78 = ((2 * ((v77 ^ 0xE51949E2) - 1168002143)) & 0x67AB3F8E)
      + (((v77 ^ 0xE51949E2) - 1168002143) ^ 0xB3D59FC7)
      + 1277845561;
  v79 = v78 - (v78 >> 14) + ((v78 - (v78 >> 14)) >> 4);
  v80 = v73 ^ 0xC97F78D4;
  v81 = v73 ^ v59;
  v82 = v79 - 1337661611 + (~(2 * v79) | 0x9F763155) + 1;
  v83 = a2 & (v82 >> 1) ^ v82;
  v84 = ((2 * ((v82 ^ 0xB044E755) - 879085134)) & 0xFFFCF9BE)
      + (((v82 ^ 0xB044E755) - 879085134) ^ 0x7FFE7CDF)
      - 2147384543;
  v85 = v84 + (v84 >> 10) - ((v84 + (v84 >> 10)) >> 5);
  v86 = (v81 + (v80 ^ v83) + 1) ^ ((v83 ^ 0x5F9B7A80) + 1);
  v87 = v83 ^ 0x36C5F5CA ^ (v86 - ((2 * v86) & 0x2D42E16A) - 1767804747);
  v88 = v85 - ((2 * v85) & 0xF386504E) - 104650713;
  v89 = ((2 * ((v88 ^ 0xF9C32827) + 1300749569)) & 0xBFAAFFFC)
      + (((v88 ^ 0xF9C32827) + 1300749569) ^ 0x5FD57FFE)
      - 1607827454;
  v90 = v89 - (v89 >> 9) - ((v89 - (v89 >> 9)) >> 4);
  v91 = v90 - ((2 * v90) & 0x69C4BE9E);
  v92 = LODWORD(STACK[0x288]) ^ LODWORD(STACK[0x488]) ^ LODWORD(STACK[0x280]);
  v93 = a45 ^ a2 & (LODWORD(STACK[0x280]) >> 1) ^ a2 & (v92 >> 1) ^ 0xAFCDB417 ^ (v87 + v81);
  v94 = LODWORD(STACK[0x434]) ^ 0x74903940 ^ (v93 - ((2 * v93) & 0x7DE9F4FC) + 1056242302);
  v95 = (v94 - 1362576195 - ((2 * v94) & 0x5D91797A)) ^ LODWORD(STACK[0x398]);
  v96 = (v95 - 1603828836 - ((2 * v95) & 0x40CF0738)) ^ a46;
  v97 = v92 ^ 0xC7B36F25 ^ (v96 - ((2 * v96) & 0x8CA1BECE) - 967778457);
  v98 = LODWORD(STACK[0x280]) ^ 0x1264E3EE ^ (v97 - ((2 * v97) & 0x8EDEDC04) + 1198484994);
  LODWORD(STACK[0x498]) = v98 - ((2 * v98) & 0x6B39CC2C) + 899474966;
  v99 = STACK[0x29C];
  v100 = LODWORD(STACK[0x48C]) ^ LODWORD(STACK[0x47C]) ^ LODWORD(STACK[0x29C]);
  v101 = v61 ^ LODWORD(STACK[0x394]) ^ 0xFE2F8723;
  v102 = ((a2 & (LODWORD(STACK[0x47C]) >> 1) ^ 0x3340420D)
        + 1992066203
        - ((2 * (a2 & (LODWORD(STACK[0x47C]) >> 1) ^ 0x3340420D)) & 0x6D400836)) ^ LODWORD(STACK[0x47C]) ^ v100 ^ a47 ^ (((v100 >> 1) & a2 ^ 0x22202628) - 2 * (((v100 >> 1) & a2 ^ 0x22202628) & 0x14C0043C ^ (v100 >> 1) & 0x14) - 590277336) ^ ((((v74 ^ 0x3EB4DF4F) + (v74 & 0x903F3380 ^ 0xEFCBECFF) + 1) ^ v66 & 0x6FC0CC7E) >> 1) ^ ((v88 & 0x6FC0CC7F ^ 0x69C00827) >> (v76 & 1) >> !(v76 & 1));
  v103 = ((v102 ^ 0x24BC8045) - 2 * ((v102 ^ 0x24BC8045) & 0x79C3282F ^ v102 & 8) - 104650713) ^ v88;
  LODWORD(v60) = (v103 - ((2 * v103) & 0x5D17D99E) - 1366561585) ^ v74;
  LODWORD(v60) = (v60 - 720202512 - ((2 * v60) & 0xAA2529E0)) ^ a1;
  LODWORD(v60) = (v60 - ((2 * v60) & 0x35FD8FCE) + 452904935) ^ v66;
  LODWORD(v60) = (v60 - 305256640 - ((2 * v60) & 0xDB9C4E80)) ^ LODWORD(STACK[0x260]);
  LODWORD(v60) = (v60 - 579842559 - ((2 * v60) & 0xBAE09C02)) ^ LODWORD(STACK[0x3D8]);
  LODWORD(v60) = (v60 + 1698128202 - ((2 * v60) & 0xCA6EC294)) ^ a48;
  LODWORD(v60) = (v60 - ((2 * v60) & 0x618B9DB0) + 818269912) ^ LODWORD(STACK[0x278]);
  LODWORD(v60) = a52 ^ 0xDEA3E60 ^ (v60 - ((2 * v60) & 0x2B6F56AA) - 1783125163);
  LODWORD(STACK[0x490]) = v60 - 1829666126 - ((2 * v60) & 0x25E30564);
  v104 = (v91 + 887250767) ^ ((v77 ^ v68 ^ 0xA2D08C02)
                            - 2 * ((v77 ^ v68 ^ 0xA2D08C02) & 0x34E25F5F ^ (v77 ^ v68) & 0x10)
                            + 887250767);
  v105 = (v104 - ((2 * v104) & 0x51BB9C7C) - 1461858754) ^ v101;
  v106 = (v105 - ((2 * v105) & 0x2A3B40A6) - 719478701) ^ LODWORD(STACK[0x4A8]);
  v107 = ((a2 & (v106 >> 1)) - (v106 & 0x2A004026) - 719478701) ^ LODWORD(STACK[0x4A8]);
  LODWORD(v60) = (v107 - ((2 * v107) & 0x69C4BE9E) + 887250767) ^ (v91 + 887250767);
  LODWORD(v60) = (v60 - ((2 * v60) & 0xCA3293C4) - 451327518) ^ v77;
  LODWORD(v60) = (v60 - ((2 * v60) & 0x8F938BC0) + 1204405728) ^ v68;
  LODWORD(v60) = (v60 - 1502462921 - ((2 * v60) & 0x4CE4786E)) ^ v55;
  LODWORD(v60) = (v60 - ((2 * v60) & 0x51BB9C7C) - 1461858754) ^ v101;
  LODWORD(v60) = (v60 - 1507231780 - ((2 * v60) & 0x4C52EFB8)) ^ LODWORD(STACK[0x2C8]);
  LODWORD(STACK[0x4A0]) = v60 - 1207902658 - ((2 * v60) & 0x7001BC7C);
  v108 = LODWORD(STACK[0x3A0]) ^ 0xD2;
  v109 = STACK[0x4B0];
  LODWORD(STACK[0x3D8]) = (LODWORD(STACK[0x4B0]) + 1984069411) & 0x89BD80F7;
  v110 = *((_DWORD *)*(&off_24C31F2A0 + v109 - 19) + 235) ^ 0x9B67EC4D;
  v111 = (((v110 ^ ((v110 & STACK[0x3EC]) >> 1)) & STACK[0x3F8]) >> STACK[0x3F0]) | (((v110 ^ ((v110 & STACK[0x3EC]) >> 1)) & STACK[0x3E8]) << LODWORD(STACK[0x404]));
  v112 = a51 ^ 0x1615ABCB ^ (v111 - ((2 * v111) & 0xBE91867A) - 548879555);
  v113 = 4
       * ((LODWORD(STACK[0x3D8]) + 9) ^ LODWORD(STACK[0x434]) ^ (((v108 & 0x6E802500u) >> STACK[0x3F0])
                                                                                + (1853891840 << LODWORD(STACK[0x41C]))));
  *(_DWORD *)(STACK[0x408] + v113) = a52 ^ 0xEDE719DF ^ (v112 - 1783125163 - ((2 * v112) & 0x2B6F56AA));
  v114 = *((unsigned __int16 *)*(&off_24C31F2A0 + (v109 ^ 0x1B)) + 67) ^ 0xE3D5;
  v115 = (v114 - 1467302806 - ((2 * v114) & 0x178D4)) ^ LODWORD(STACK[0x494]);
  *(_DWORD *)(STACK[0x410] + v113) = v99 ^ 0x574DFF46 ^ (v115 + 818269912 - ((2 * v115) & 0x618B9DB0));
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x4C8] + 8 * (v109 | 5)) - 12))(1853882368);
}

#error "20A5B799C: call analysis failed (funcsize=7682)"

void sub_20A5B79A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a67;
  int a68;
  int a69;
  int a70;
  int a71;
  int a72;
  int a73;
  int a74;
  int v74;
  int v75;
  int v77;

  LODWORD(STACK[0x360]) = (((a71 - 53) | 3) ^ 0xEFF5FDBE) + a8;
  LODWORD(STACK[0x32C]) = a67 ^ 0xD52D1F2A;
  LODWORD(STACK[0x328]) = a70 ^ 0x27CEBC7A;
  LODWORD(STACK[0x320]) = a68 ^ 0x294A2058;
  LODWORD(STACK[0x324]) = a69 ^ 0xC4F07114;
  v74 = STACK[0x4B8];
  if ((STACK[0x4B8] & 1) != 0)
    v75 = a74;
  else
    v75 = STACK[0x35C];
  if ((v74 & 1) != 0)
    a72 = a73;
  if ((v74 & 2) != 0)
    v77 = a72;
  else
    v77 = v75;
  LODWORD(STACK[0x35C]) = v77;
  JUMPOUT(0x20A5B2F78);
}

char *sub_20A5B7A64(char *result, char *a2, unint64_t a3)
{
  unint64_t v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  BOOL v11;
  char v12;
  unint64_t v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;

  if (((a2 ^ result) & 7) != 0)
  {
    if ((a3 + 7) >= 8)
      return (char *)((uint64_t (*)(void))((char *)&loc_20A5B7B38 + 4 * byte_20A5D84E0[a3 & 7]))();
  }
  else
  {
    v3 = -(int)result & 7;
    switch((int)v3)
    {
      case 1:
        goto LABEL_11;
      case 2:
        goto LABEL_10;
      case 3:
        goto LABEL_9;
      case 4:
        goto LABEL_8;
      case 5:
        goto LABEL_7;
      case 6:
        goto LABEL_6;
      case 7:
        v4 = *result++;
        *a2++ = v4;
LABEL_6:
        v5 = *result++;
        *a2++ = v5;
LABEL_7:
        v6 = *result++;
        *a2++ = v6;
LABEL_8:
        v7 = *result++;
        *a2++ = v7;
LABEL_9:
        v8 = *result++;
        *a2++ = v8;
LABEL_10:
        v9 = *result++;
        *a2++ = v9;
LABEL_11:
        v10 = *result++;
        *a2++ = v10;
        break;
      default:
        break;
    }
    v11 = a3 >= v3;
    v12 = a3 - v3;
    if (!v11)
      v12 = 0;
    v13 = v12 & 7;
    switch(v13)
    {
      case 0uLL:
        return result;
      case 1uLL:
        goto LABEL_24;
      case 2uLL:
        goto LABEL_23;
      case 3uLL:
        goto LABEL_22;
      case 4uLL:
        goto LABEL_21;
      case 5uLL:
        goto LABEL_20;
      case 6uLL:
        goto LABEL_19;
      case 7uLL:
        v14 = *result++;
        *a2++ = v14;
LABEL_19:
        v15 = *result++;
        *a2++ = v15;
LABEL_20:
        v16 = *result++;
        *a2++ = v16;
LABEL_21:
        v17 = *result++;
        *a2++ = v17;
LABEL_22:
        v18 = *result++;
        *a2++ = v18;
LABEL_23:
        v19 = *result++;
        *a2++ = v19;
LABEL_24:
        *a2 = *result;
        break;
      default:
        result = (char *)((uint64_t (*)(void))((char *)&loc_20A5B7B84 + 4 * byte_20A5D84EF[(v13 >> 3) & 7]))();
        break;
    }
  }
  return result;
}

BOOL __isOSVersionAtLeast(int a1, int a2, int a3)
{
  BOOL v6;

  if (qword_253EBA4E0 == -1)
  {
    v6 = _MergedGlobals < a1;
    if (_MergedGlobals > a1)
      return 1;
  }
  else
  {
    dispatch_once_f(&qword_253EBA4E0, 0, (dispatch_function_t)compatibilityInitializeAvailabilityCheck);
    v6 = _MergedGlobals < a1;
    if (_MergedGlobals > a1)
      return 1;
  }
  if (v6)
    return 0;
  if (dword_253EBA4D4 > a2)
    return 1;
  return dword_253EBA4D4 >= a2 && dword_253EBA4D8 >= a3;
}

uint64_t compatibilityInitializeAvailabilityCheck()
{
  return _initializeAvailabilityCheck(1);
}

uint64_t __isPlatformVersionAtLeast(uint64_t a1, int a2, int a3, int a4)
{
  BOOL v8;

  if (qword_253EBA4E8 == -1)
  {
    if (qword_253EBA4F0)
      return _availability_version_check();
  }
  else
  {
    dispatch_once_f(&qword_253EBA4E8, 0, (dispatch_function_t)initializeAvailabilityCheck);
    if (qword_253EBA4F0)
      return _availability_version_check();
  }
  if (qword_253EBA4E0 == -1)
  {
    v8 = _MergedGlobals < a2;
    if (_MergedGlobals > a2)
      return 1;
  }
  else
  {
    dispatch_once_f(&qword_253EBA4E0, 0, (dispatch_function_t)compatibilityInitializeAvailabilityCheck);
    v8 = _MergedGlobals < a2;
    if (_MergedGlobals > a2)
      return 1;
  }
  if (v8)
    return 0;
  if (dword_253EBA4D4 > a3)
    return 1;
  return dword_253EBA4D4 >= a3 && dword_253EBA4D8 >= a4;
}

uint64_t initializeAvailabilityCheck()
{
  return _initializeAvailabilityCheck(0);
}

uint64_t _initializeAvailabilityCheck(uint64_t result)
{
  uint64_t (*v1)(void);
  BOOL v2;
  unsigned __int8 *v4;
  uint64_t (*v5)(_QWORD);
  unint64_t v6;
  uint64_t (*v7)(_QWORD, uint64_t, _QWORD, _QWORD);
  uint64_t (*v8)(_QWORD, const char *, uint64_t, unsigned __int8 *);
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t (*v10)(uint64_t);
  uint64_t (*v11)(void);
  FILE *v12;
  FILE *v13;
  uint64_t v14;
  size_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  FILE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  FILE *v27;
  unsigned int (*v28)(uint64_t, char *, uint64_t, uint64_t);
  char v29[32];
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  v1 = (uint64_t (*)(void))qword_253EBA4F0;
  if (qword_253EBA4F0)
    v2 = (_DWORD)result == 0;
  else
    v2 = 0;
  if (!v2)
  {
    if (MEMORY[0x24BDAC970])
    {
      qword_253EBA4F0 = (uint64_t)MEMORY[0x24BDAC970];
      v1 = MEMORY[0x24BDAC970];
    }
    if (!v1 || (_DWORD)result != 0)
    {
      result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "kCFAllocatorNull");
      if (result)
      {
        v4 = *(unsigned __int8 **)result;
        result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFDataCreateWithBytesNoCopy");
        if (result)
        {
          v5 = (uint64_t (*)(_QWORD))result;
          v6 = (unint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFPropertyListCreateWithData");
          result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFPropertyListCreateFromXMLData");
          if (v6 | result)
          {
            v7 = (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD))result;
            result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringCreateWithCStringNoCopy");
            if (result)
            {
              v8 = (uint64_t (*)(_QWORD, const char *, uint64_t, unsigned __int8 *))result;
              result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFDictionaryGetValue");
              if (result)
              {
                v9 = (uint64_t (*)(uint64_t, uint64_t))result;
                result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFGetTypeID");
                if (result)
                {
                  v10 = (uint64_t (*)(uint64_t))result;
                  result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringGetTypeID");
                  if (result)
                  {
                    v11 = (uint64_t (*)(void))result;
                    result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringGetCString");
                    v28 = (unsigned int (*)(uint64_t, char *, uint64_t, uint64_t))result;
                    if (result)
                    {
                      result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFRelease");
                      if (result)
                      {
                        v12 = (FILE *)result;
                        result = (uint64_t)fopen("/System/Library/CoreServices/SystemVersion.plist", "r");
                        if (result)
                        {
                          v13 = (FILE *)result;
                          v27 = v12;
                          fseek((FILE *)result, 0, 2);
                          v14 = MEMORY[0x20BD26758](v13);
                          if (v14 < 0)
                          {
                            v16 = 0;
                          }
                          else
                          {
                            v15 = v14;
                            rewind(v13);
                            v16 = malloc(v15);
                            if (v16)
                            {
                              v26 = v16;
                              if (fread(v16, 1uLL, v15, v13) == v15)
                              {
                                v17 = v5(0);
                                if (v17)
                                {
                                  v18 = v17;
                                  v19 = v13;
                                  if (v6)
                                    v20 = ((uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD, _QWORD))v6)(0, v17, 0, 0, 0);
                                  else
                                    v20 = v7(0, v17, 0, 0);
                                  v21 = v20;
                                  if (v20)
                                  {
                                    v22 = v8(0, "ProductVersion", 1536, v4);
                                    if (v22)
                                    {
                                      v23 = v22;
                                      v24 = v9(v21, v22);
                                      ((void (*)(uint64_t))v27)(v23);
                                      if (v24)
                                      {
                                        v25 = v10(v24);
                                        if (v25 == v11())
                                        {
                                          if (v28(v24, v29, 32, 134217984))
                                            sscanf(v29, "%d.%d.%d", &_MergedGlobals, &dword_253EBA4D4, &dword_253EBA4D8);
                                        }
                                      }
                                    }
                                    ((void (*)(uint64_t))v27)(v21);
                                    v19 = v13;
                                  }
                                  ((void (*)(uint64_t))v27)(v18);
                                }
                                else
                                {
                                  v19 = v13;
                                }
                                v16 = v26;
                              }
                              else
                              {
                                v16 = v26;
                                v19 = v13;
                              }
                              goto LABEL_41;
                            }
                          }
                          v19 = v13;
LABEL_41:
                          free(v16);
                          return fclose(v19);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_20A5B81D4()
{
  return MEMORY[0x24BDCAFF0]();
}

uint64_t sub_20A5B81E0()
{
  return MEMORY[0x24BDCB028]();
}

uint64_t sub_20A5B81EC()
{
  return MEMORY[0x24BDCB030]();
}

uint64_t sub_20A5B81F8()
{
  return MEMORY[0x24BDCB040]();
}

uint64_t sub_20A5B8204()
{
  return MEMORY[0x24BDCB068]();
}

uint64_t sub_20A5B8210()
{
  return MEMORY[0x24BDCB070]();
}

uint64_t sub_20A5B821C()
{
  return MEMORY[0x24BDCB088]();
}

uint64_t sub_20A5B8228()
{
  return MEMORY[0x24BDCB098]();
}

uint64_t sub_20A5B8234()
{
  return MEMORY[0x24BDCB0A0]();
}

uint64_t sub_20A5B8240()
{
  return MEMORY[0x24BDCB0C0]();
}

uint64_t sub_20A5B824C()
{
  return MEMORY[0x24BDCB220]();
}

uint64_t sub_20A5B8258()
{
  return MEMORY[0x24BDCB260]();
}

uint64_t sub_20A5B8264()
{
  return MEMORY[0x24BDCB268]();
}

uint64_t sub_20A5B8270()
{
  return MEMORY[0x24BDCB3B8]();
}

uint64_t sub_20A5B827C()
{
  return MEMORY[0x24BDCB400]();
}

uint64_t sub_20A5B8288()
{
  return MEMORY[0x24BDCB410]();
}

uint64_t sub_20A5B8294()
{
  return MEMORY[0x24BDCB6C0]();
}

uint64_t sub_20A5B82A0()
{
  return MEMORY[0x24BDCB750]();
}

uint64_t sub_20A5B82AC()
{
  return MEMORY[0x24BDCB958]();
}

uint64_t sub_20A5B82B8()
{
  return MEMORY[0x24BDCB988]();
}

uint64_t sub_20A5B82C4()
{
  return MEMORY[0x24BDCBA48]();
}

uint64_t sub_20A5B82D0()
{
  return MEMORY[0x24BDCBA60]();
}

uint64_t sub_20A5B82DC()
{
  return MEMORY[0x24BDCBAB0]();
}

uint64_t sub_20A5B82E8()
{
  return MEMORY[0x24BDCBAC0]();
}

uint64_t sub_20A5B82F4()
{
  return MEMORY[0x24BDCBAD0]();
}

uint64_t sub_20A5B8300()
{
  return MEMORY[0x24BDCBB28]();
}

uint64_t sub_20A5B830C()
{
  return MEMORY[0x24BDCBB68]();
}

uint64_t sub_20A5B8318()
{
  return MEMORY[0x24BDCBB78]();
}

uint64_t sub_20A5B8324()
{
  return MEMORY[0x24BDCBBA0]();
}

uint64_t sub_20A5B8330()
{
  return MEMORY[0x24BDCBBB0]();
}

uint64_t sub_20A5B833C()
{
  return MEMORY[0x24BDCBBC8]();
}

uint64_t sub_20A5B8348()
{
  return MEMORY[0x24BDCBBD0]();
}

uint64_t sub_20A5B8354()
{
  return MEMORY[0x24BDCBBD8]();
}

uint64_t sub_20A5B8360()
{
  return MEMORY[0x24BDCBBF0]();
}

uint64_t sub_20A5B836C()
{
  return MEMORY[0x24BDCBC10]();
}

uint64_t sub_20A5B8378()
{
  return MEMORY[0x24BDCBD60]();
}

uint64_t sub_20A5B8384()
{
  return MEMORY[0x24BDCBD70]();
}

uint64_t sub_20A5B8390()
{
  return MEMORY[0x24BDCBDA8]();
}

uint64_t sub_20A5B839C()
{
  return MEMORY[0x24BDCBDE0]();
}

uint64_t sub_20A5B83A8()
{
  return MEMORY[0x24BDCC1E0]();
}

uint64_t sub_20A5B83B4()
{
  return MEMORY[0x24BDCCB20]();
}

uint64_t sub_20A5B83C0()
{
  return MEMORY[0x24BDCCB30]();
}

uint64_t sub_20A5B83CC()
{
  return MEMORY[0x24BDCCB40]();
}

uint64_t sub_20A5B83D8()
{
  return MEMORY[0x24BDCCB60]();
}

uint64_t sub_20A5B83E4()
{
  return MEMORY[0x24BDCCB70]();
}

uint64_t sub_20A5B83F0()
{
  return MEMORY[0x24BDCCBD0]();
}

uint64_t sub_20A5B83FC()
{
  return MEMORY[0x24BDCCBD8]();
}

uint64_t sub_20A5B8408()
{
  return MEMORY[0x24BDCCC10]();
}

uint64_t sub_20A5B8414()
{
  return MEMORY[0x24BDCD2F0]();
}

uint64_t sub_20A5B8420()
{
  return MEMORY[0x24BDCD2F8]();
}

uint64_t sub_20A5B842C()
{
  return MEMORY[0x24BDCD760]();
}

uint64_t sub_20A5B8438()
{
  return MEMORY[0x24BDCD7B8]();
}

uint64_t sub_20A5B8444()
{
  return MEMORY[0x24BDCD820]();
}

uint64_t sub_20A5B8450()
{
  return MEMORY[0x24BDCD830]();
}

uint64_t sub_20A5B845C()
{
  return MEMORY[0x24BDCD870]();
}

uint64_t sub_20A5B8468()
{
  return MEMORY[0x24BDCD898]();
}

uint64_t sub_20A5B8474()
{
  return MEMORY[0x24BDCD8D0]();
}

uint64_t sub_20A5B8480()
{
  return MEMORY[0x24BDCD928]();
}

uint64_t sub_20A5B848C()
{
  return MEMORY[0x24BDCD9C0]();
}

uint64_t sub_20A5B8498()
{
  return MEMORY[0x24BDCDA28]();
}

uint64_t sub_20A5B84A4()
{
  return MEMORY[0x24BDCDA68]();
}

uint64_t sub_20A5B84B0()
{
  return MEMORY[0x24BDCDA70]();
}

uint64_t sub_20A5B84BC()
{
  return MEMORY[0x24BDCDAA0]();
}

uint64_t sub_20A5B84C8()
{
  return MEMORY[0x24BDCDAA8]();
}

uint64_t sub_20A5B84D4()
{
  return MEMORY[0x24BDCDAC0]();
}

uint64_t sub_20A5B84E0()
{
  return MEMORY[0x24BDCDB60]();
}

uint64_t sub_20A5B84EC()
{
  return MEMORY[0x24BDCDBE0]();
}

uint64_t sub_20A5B84F8()
{
  return MEMORY[0x24BDCDBF8]();
}

uint64_t sub_20A5B8504()
{
  return MEMORY[0x24BDCDC08]();
}

uint64_t sub_20A5B8510()
{
  return MEMORY[0x24BDCDC10]();
}

uint64_t sub_20A5B851C()
{
  return MEMORY[0x24BDCDC28]();
}

uint64_t sub_20A5B8528()
{
  return MEMORY[0x24BDCDC40]();
}

uint64_t sub_20A5B8534()
{
  return MEMORY[0x24BDCDC58]();
}

uint64_t sub_20A5B8540()
{
  return MEMORY[0x24BDCDCA0]();
}

uint64_t sub_20A5B854C()
{
  return MEMORY[0x24BDCDCA8]();
}

uint64_t sub_20A5B8558()
{
  return MEMORY[0x24BDCDCD8]();
}

uint64_t sub_20A5B8564()
{
  return MEMORY[0x24BDCDCE0]();
}

uint64_t sub_20A5B8570()
{
  return MEMORY[0x24BDCDD40]();
}

uint64_t sub_20A5B857C()
{
  return MEMORY[0x24BDCDD68]();
}

uint64_t sub_20A5B8588()
{
  return MEMORY[0x24BDCDD78]();
}

uint64_t sub_20A5B8594()
{
  return MEMORY[0x24BDCDE90]();
}

uint64_t sub_20A5B85A0()
{
  return MEMORY[0x24BDCE330]();
}

uint64_t sub_20A5B85AC()
{
  return MEMORY[0x24BDCE468]();
}

uint64_t sub_20A5B85B8()
{
  return MEMORY[0x24BDCE5D8]();
}

uint64_t sub_20A5B85C4()
{
  return MEMORY[0x24BDCE5E8]();
}

uint64_t sub_20A5B85D0()
{
  return MEMORY[0x24BDCE5F0]();
}

uint64_t sub_20A5B85DC()
{
  return MEMORY[0x24BDCE608]();
}

uint64_t sub_20A5B85E8()
{
  return MEMORY[0x24BDCE628]();
}

uint64_t sub_20A5B85F4()
{
  return MEMORY[0x24BDCE780]();
}

uint64_t sub_20A5B8600()
{
  return MEMORY[0x24BDCE858]();
}

uint64_t sub_20A5B860C()
{
  return MEMORY[0x24BDCE878]();
}

uint64_t sub_20A5B8618()
{
  return MEMORY[0x24BDCE880]();
}

uint64_t sub_20A5B8624()
{
  return MEMORY[0x24BDCE8F8]();
}

uint64_t sub_20A5B8630()
{
  return MEMORY[0x24BDCE900]();
}

uint64_t sub_20A5B863C()
{
  return MEMORY[0x24BDCE9B0]();
}

uint64_t sub_20A5B8648()
{
  return MEMORY[0x24BDCE9E0]();
}

uint64_t sub_20A5B8654()
{
  return MEMORY[0x24BDCE9F8]();
}

uint64_t sub_20A5B8660()
{
  return MEMORY[0x24BDCEA40]();
}

uint64_t sub_20A5B866C()
{
  return MEMORY[0x24BDCEA58]();
}

uint64_t sub_20A5B8678()
{
  return MEMORY[0x24BDCEB18]();
}

uint64_t sub_20A5B8684()
{
  return MEMORY[0x24BDCEB50]();
}

uint64_t sub_20A5B8690()
{
  return MEMORY[0x24BDCEB60]();
}

uint64_t sub_20A5B869C()
{
  return MEMORY[0x24BDCEC90]();
}

uint64_t sub_20A5B86A8()
{
  return MEMORY[0x24BDCECE0]();
}

uint64_t sub_20A5B86B4()
{
  return MEMORY[0x24BDCECF0]();
}

uint64_t sub_20A5B86C0()
{
  return MEMORY[0x24BDCED08]();
}

uint64_t sub_20A5B86CC()
{
  return MEMORY[0x24BDCED50]();
}

uint64_t sub_20A5B86D8()
{
  return MEMORY[0x24BDCED58]();
}

uint64_t sub_20A5B86E4()
{
  return MEMORY[0x24BDCEDE0]();
}

uint64_t sub_20A5B86F0()
{
  return MEMORY[0x24BDCEE28]();
}

uint64_t sub_20A5B86FC()
{
  return MEMORY[0x24BDCEE60]();
}

uint64_t sub_20A5B8708()
{
  return MEMORY[0x24BDCEEA8]();
}

uint64_t sub_20A5B8714()
{
  return MEMORY[0x24BDCF050]();
}

uint64_t sub_20A5B8720()
{
  return MEMORY[0x24BDCF150]();
}

uint64_t sub_20A5B872C()
{
  return MEMORY[0x24BDCF1B0]();
}

uint64_t sub_20A5B8738()
{
  return MEMORY[0x24BDCF290]();
}

uint64_t sub_20A5B8744()
{
  return MEMORY[0x24BDCF2D8]();
}

uint64_t sub_20A5B8750()
{
  return MEMORY[0x24BDCF4A0]();
}

uint64_t sub_20A5B875C()
{
  return MEMORY[0x24BDCF4C8]();
}

uint64_t sub_20A5B8768()
{
  return MEMORY[0x24BDCF4D8]();
}

uint64_t sub_20A5B8774()
{
  return MEMORY[0x24BDCF500]();
}

uint64_t sub_20A5B8780()
{
  return MEMORY[0x24BDCF510]();
}

uint64_t sub_20A5B878C()
{
  return MEMORY[0x24BEE5118]();
}

uint64_t sub_20A5B8798()
{
  return MEMORY[0x24BEE5120]();
}

uint64_t sub_20A5B87A4()
{
  return MEMORY[0x24BEE5130]();
}

uint64_t sub_20A5B87B0()
{
  return MEMORY[0x24BEE76E8]();
}

uint64_t sub_20A5B87BC()
{
  return MEMORY[0x24BEE76F8]();
}

uint64_t sub_20A5B87C8()
{
  return MEMORY[0x24BEE7700]();
}

uint64_t sub_20A5B87D4()
{
  return MEMORY[0x24BEE7718]();
}

uint64_t sub_20A5B87E0()
{
  return MEMORY[0x24BEE7758]();
}

uint64_t sub_20A5B87EC()
{
  return MEMORY[0x24BEE78A8]();
}

uint64_t sub_20A5B87F8()
{
  return MEMORY[0x24BEE78C0]();
}

uint64_t sub_20A5B8804()
{
  return MEMORY[0x24BEE78D8]();
}

uint64_t sub_20A5B8810()
{
  return MEMORY[0x24BEE5428]();
}

uint64_t sub_20A5B881C()
{
  return MEMORY[0x24BEE5458]();
}

uint64_t sub_20A5B8828()
{
  return MEMORY[0x24BEE54B0]();
}

uint64_t sub_20A5B8834()
{
  return MEMORY[0x24BEE54C8]();
}

uint64_t sub_20A5B8840()
{
  return MEMORY[0x24BEE5500]();
}

uint64_t sub_20A5B884C()
{
  return MEMORY[0x24BEE5558]();
}

uint64_t sub_20A5B8858()
{
  return MEMORY[0x24BEE5570]();
}

uint64_t sub_20A5B8864()
{
  return MEMORY[0x24BEE5590]();
}

uint64_t sub_20A5B8870()
{
  return MEMORY[0x24BEE5620]();
}

uint64_t sub_20A5B887C()
{
  return MEMORY[0x24BDCF808]();
}

uint64_t sub_20A5B8888()
{
  return MEMORY[0x24BDCF830]();
}

uint64_t sub_20A5B8894()
{
  return MEMORY[0x24BEE0270]();
}

uint64_t sub_20A5B88A0()
{
  return MEMORY[0x24BEE02A8]();
}

uint64_t sub_20A5B88AC()
{
  return MEMORY[0x24BEE02C0]();
}

uint64_t sub_20A5B88B8()
{
  return MEMORY[0x24BEE0610]();
}

uint64_t sub_20A5B88C4()
{
  return MEMORY[0x24BEE0618]();
}

uint64_t sub_20A5B88D0()
{
  return MEMORY[0x24BEE06C8]();
}

uint64_t sub_20A5B88DC()
{
  return MEMORY[0x24BEE07D0]();
}

uint64_t sub_20A5B88E8()
{
  return MEMORY[0x24BEE0980]();
}

uint64_t sub_20A5B88F4()
{
  return MEMORY[0x24BDCF9E0]();
}

uint64_t sub_20A5B8900()
{
  return MEMORY[0x24BDCFA28]();
}

uint64_t sub_20A5B890C()
{
  return MEMORY[0x24BDCFA38]();
}

uint64_t sub_20A5B8918()
{
  return MEMORY[0x24BDCFA48]();
}

uint64_t sub_20A5B8924()
{
  return MEMORY[0x24BDCFA50]();
}

uint64_t sub_20A5B8930()
{
  return MEMORY[0x24BDCFA78]();
}

uint64_t sub_20A5B893C()
{
  return MEMORY[0x24BDCFAC8]();
}

uint64_t sub_20A5B8948()
{
  return MEMORY[0x24BDCFAD8]();
}

uint64_t sub_20A5B8954()
{
  return MEMORY[0x24BDCFAF8]();
}

uint64_t sub_20A5B8960()
{
  return MEMORY[0x24BEE09F0]();
}

uint64_t sub_20A5B896C()
{
  return MEMORY[0x24BEE0AD8]();
}

uint64_t sub_20A5B8978()
{
  return MEMORY[0x24BEE0B20]();
}

uint64_t sub_20A5B8984()
{
  return MEMORY[0x24BEE0B68]();
}

uint64_t sub_20A5B8990()
{
  return MEMORY[0x24BEE0B70]();
}

uint64_t sub_20A5B899C()
{
  return MEMORY[0x24BEE0BC0]();
}

uint64_t sub_20A5B89A8()
{
  return MEMORY[0x24BEE0C00]();
}

uint64_t sub_20A5B89B4()
{
  return MEMORY[0x24BEE0C10]();
}

uint64_t sub_20A5B89C0()
{
  return MEMORY[0x24BEE0C18]();
}

uint64_t sub_20A5B89CC()
{
  return MEMORY[0x24BEE0C30]();
}

uint64_t sub_20A5B89D8()
{
  return MEMORY[0x24BEE0C38]();
}

uint64_t sub_20A5B89E4()
{
  return MEMORY[0x24BEE0C40]();
}

uint64_t sub_20A5B89F0()
{
  return MEMORY[0x24BEE0CA0]();
}

uint64_t sub_20A5B89FC()
{
  return MEMORY[0x24BEE0CD8]();
}

uint64_t sub_20A5B8A08()
{
  return MEMORY[0x24BEE0CE8]();
}

uint64_t sub_20A5B8A14()
{
  return MEMORY[0x24BEE0D98]();
}

uint64_t sub_20A5B8A20()
{
  return MEMORY[0x24BEE0DD0]();
}

uint64_t sub_20A5B8A2C()
{
  return MEMORY[0x24BEE0DE0]();
}

uint64_t sub_20A5B8A38()
{
  return MEMORY[0x24BEE1000]();
}

uint64_t sub_20A5B8A44()
{
  return MEMORY[0x24BEE1018]();
}

uint64_t sub_20A5B8A50()
{
  return MEMORY[0x24BEE1068]();
}

uint64_t sub_20A5B8A5C()
{
  return MEMORY[0x24BEE1070]();
}

uint64_t sub_20A5B8A68()
{
  return MEMORY[0x24BEE1078]();
}

uint64_t sub_20A5B8A74()
{
  return MEMORY[0x24BEE1080]();
}

uint64_t sub_20A5B8A80()
{
  return MEMORY[0x24BEE1098]();
}

uint64_t sub_20A5B8A8C()
{
  return MEMORY[0x24BEE1110]();
}

uint64_t sub_20A5B8A98()
{
  return MEMORY[0x24BDCFBA8]();
}

uint64_t sub_20A5B8AA4()
{
  return MEMORY[0x24BDCFBC8]();
}

uint64_t sub_20A5B8AB0()
{
  return MEMORY[0x24BEE1120]();
}

uint64_t sub_20A5B8ABC()
{
  return MEMORY[0x24BEE1128]();
}

uint64_t sub_20A5B8AC8()
{
  return MEMORY[0x24BEE1160]();
}

uint64_t sub_20A5B8AD4()
{
  return MEMORY[0x24BEE1190]();
}

uint64_t sub_20A5B8AE0()
{
  return MEMORY[0x24BEE11B8]();
}

uint64_t sub_20A5B8AEC()
{
  return MEMORY[0x24BDCFC08]();
}

uint64_t sub_20A5B8AF8()
{
  return MEMORY[0x24BEE6800]();
}

uint64_t sub_20A5B8B04()
{
  return MEMORY[0x24BEE6820]();
}

uint64_t sub_20A5B8B10()
{
  return MEMORY[0x24BEE6828]();
}

uint64_t sub_20A5B8B1C()
{
  return MEMORY[0x24BEE6830]();
}

uint64_t sub_20A5B8B28()
{
  return MEMORY[0x24BEE68C8]();
}

uint64_t sub_20A5B8B34()
{
  return MEMORY[0x24BEE6968]();
}

uint64_t sub_20A5B8B40()
{
  return MEMORY[0x24BEE6970]();
}

uint64_t sub_20A5B8B4C()
{
  return MEMORY[0x24BEE6980]();
}

uint64_t sub_20A5B8B58()
{
  return MEMORY[0x24BEE6988]();
}

uint64_t sub_20A5B8B64()
{
  return MEMORY[0x24BEE6990]();
}

uint64_t sub_20A5B8B70()
{
  return MEMORY[0x24BEE6AD0]();
}

uint64_t sub_20A5B8B7C()
{
  return MEMORY[0x24BEE6B00]();
}

uint64_t sub_20A5B8B88()
{
  return MEMORY[0x24BEE6B10]();
}

uint64_t sub_20A5B8B94()
{
  return MEMORY[0x24BEE6B20]();
}

uint64_t sub_20A5B8BA0()
{
  return MEMORY[0x24BEE6B28]();
}

uint64_t sub_20A5B8BAC()
{
  return MEMORY[0x24BEE6B98]();
}

uint64_t sub_20A5B8BB8()
{
  return MEMORY[0x24BEE6BA0]();
}

uint64_t sub_20A5B8BC4()
{
  return MEMORY[0x24BEE6BB0]();
}

uint64_t sub_20A5B8BD0()
{
  return MEMORY[0x24BDCFC58]();
}

uint64_t sub_20A5B8BDC()
{
  return MEMORY[0x24BEE13A8]();
}

uint64_t sub_20A5B8BE8()
{
  return MEMORY[0x24BEE1460]();
}

uint64_t sub_20A5B8BF4()
{
  return MEMORY[0x24BDCFC80]();
}

uint64_t sub_20A5B8C00()
{
  return MEMORY[0x24BEE15D8]();
}

uint64_t sub_20A5B8C0C()
{
  return MEMORY[0x24BEE1678]();
}

uint64_t sub_20A5B8C18()
{
  return MEMORY[0x24BDCFD28]();
}

uint64_t sub_20A5B8C24()
{
  return MEMORY[0x24BDCFDC0]();
}

uint64_t sub_20A5B8C30()
{
  return MEMORY[0x24BDCFED8]();
}

uint64_t sub_20A5B8C3C()
{
  return MEMORY[0x24BEE78F0]();
}

uint64_t sub_20A5B8C48()
{
  return MEMORY[0x24BEE7908]();
}

uint64_t sub_20A5B8C54()
{
  return MEMORY[0x24BEE7910]();
}

uint64_t sub_20A5B8C60()
{
  return MEMORY[0x24BEE7920]();
}

uint64_t sub_20A5B8C6C()
{
  return MEMORY[0x24BEE7928]();
}

uint64_t sub_20A5B8C78()
{
  return MEMORY[0x24BEE5650]();
}

uint64_t sub_20A5B8C84()
{
  return MEMORY[0x24BEE5678]();
}

uint64_t sub_20A5B8C90()
{
  return MEMORY[0x24BEE5688]();
}

uint64_t sub_20A5B8C9C()
{
  return MEMORY[0x24BEE5760]();
}

uint64_t sub_20A5B8CA8()
{
  return MEMORY[0x24BEE5780]();
}

uint64_t sub_20A5B8CB4()
{
  return MEMORY[0x24BEE5790]();
}

uint64_t sub_20A5B8CC0()
{
  return MEMORY[0x24BEE57A0]();
}

uint64_t sub_20A5B8CCC()
{
  return MEMORY[0x24BEE57B0]();
}

uint64_t sub_20A5B8CD8()
{
  return MEMORY[0x24BEE58B8]();
}

uint64_t sub_20A5B8CE4()
{
  return MEMORY[0x24BEE58D0]();
}

uint64_t sub_20A5B8CF0()
{
  return MEMORY[0x24BEE7940]();
}

uint64_t sub_20A5B8CFC()
{
  return MEMORY[0x24BEE7948]();
}

uint64_t sub_20A5B8D08()
{
  return MEMORY[0x24BEE5BB8]();
}

uint64_t sub_20A5B8D14()
{
  return MEMORY[0x24BEE5BC0]();
}

uint64_t sub_20A5B8D20()
{
  return MEMORY[0x24BEE79A0]();
}

uint64_t sub_20A5B8D2C()
{
  return MEMORY[0x24BEE1C58]();
}

uint64_t sub_20A5B8D38()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t sub_20A5B8D44()
{
  return MEMORY[0x24BEE1C80]();
}

uint64_t sub_20A5B8D50()
{
  return MEMORY[0x24BEE1F00]();
}

uint64_t sub_20A5B8D5C()
{
  return MEMORY[0x24BEE1F48]();
}

uint64_t sub_20A5B8D68()
{
  return MEMORY[0x24BDD0548]();
}

uint64_t sub_20A5B8D74()
{
  return MEMORY[0x24BDD0568]();
}

uint64_t sub_20A5B8D80()
{
  return MEMORY[0x24BDD0580]();
}

uint64_t sub_20A5B8D8C()
{
  return MEMORY[0x24BDD0620]();
}

uint64_t sub_20A5B8D98()
{
  return MEMORY[0x24BEE2090]();
}

uint64_t sub_20A5B8DA4()
{
  return MEMORY[0x24BEE20A8]();
}

uint64_t sub_20A5B8DB0()
{
  return MEMORY[0x24BEE22C0]();
}

uint64_t sub_20A5B8DBC()
{
  return MEMORY[0x24BEE22D0]();
}

uint64_t sub_20A5B8DC8()
{
  return MEMORY[0x24BEE22E0]();
}

uint64_t sub_20A5B8DD4()
{
  return MEMORY[0x24BEE2300]();
}

uint64_t sub_20A5B8DE0()
{
  return MEMORY[0x24BEE2330]();
}

uint64_t sub_20A5B8DEC()
{
  return MEMORY[0x24BEE2340]();
}

uint64_t sub_20A5B8DF8()
{
  return MEMORY[0x24BEE2358]();
}

uint64_t sub_20A5B8E04()
{
  return MEMORY[0x24BEE2360]();
}

uint64_t sub_20A5B8E10()
{
  return MEMORY[0x24BEE23A0]();
}

uint64_t sub_20A5B8E1C()
{
  return MEMORY[0x24BEE23A8]();
}

uint64_t sub_20A5B8E28()
{
  return MEMORY[0x24BEE23B8]();
}

uint64_t sub_20A5B8E34()
{
  return MEMORY[0x24BEE23E8]();
}

uint64_t sub_20A5B8E40()
{
  return MEMORY[0x24BEE24B8]();
}

uint64_t sub_20A5B8E4C()
{
  return MEMORY[0x24BEE24C0]();
}

uint64_t sub_20A5B8E58()
{
  return MEMORY[0x24BEE24C8]();
}

uint64_t sub_20A5B8E64()
{
  return MEMORY[0x24BEE24D0]();
}

uint64_t sub_20A5B8E70()
{
  return MEMORY[0x24BEE24F0]();
}

uint64_t sub_20A5B8E7C()
{
  return MEMORY[0x24BEE2500]();
}

uint64_t sub_20A5B8E88()
{
  return MEMORY[0x24BEE2508]();
}

uint64_t sub_20A5B8E94()
{
  return MEMORY[0x24BEE2510]();
}

uint64_t sub_20A5B8EA0()
{
  return MEMORY[0x24BEE2518]();
}

uint64_t sub_20A5B8EAC()
{
  return MEMORY[0x24BEE2658]();
}

uint64_t sub_20A5B8EB8()
{
  return MEMORY[0x24BEE2660]();
}

uint64_t sub_20A5B8EC4()
{
  return MEMORY[0x24BEE26E8]();
}

uint64_t sub_20A5B8ED0()
{
  return MEMORY[0x24BEE2710]();
}

uint64_t sub_20A5B8EDC()
{
  return MEMORY[0x24BEE2750]();
}

uint64_t sub_20A5B8EE8()
{
  return MEMORY[0x24BEE2838]();
}

uint64_t sub_20A5B8EF4()
{
  return MEMORY[0x24BEE2840]();
}

uint64_t sub_20A5B8F00()
{
  return MEMORY[0x24BEE6D68]();
}

uint64_t sub_20A5B8F0C()
{
  return MEMORY[0x24BEE2908]();
}

uint64_t sub_20A5B8F18()
{
  return MEMORY[0x24BEE2938]();
}

uint64_t sub_20A5B8F24()
{
  return MEMORY[0x24BEE2958]();
}

uint64_t sub_20A5B8F30()
{
  return MEMORY[0x24BEE2980]();
}

uint64_t sub_20A5B8F3C()
{
  return MEMORY[0x24BEE2988]();
}

uint64_t sub_20A5B8F48()
{
  return MEMORY[0x24BEE6D88]();
}

uint64_t sub_20A5B8F54()
{
  return MEMORY[0x24BEE6DA8]();
}

uint64_t sub_20A5B8F60()
{
  return MEMORY[0x24BEE6DC0]();
}

uint64_t sub_20A5B8F6C()
{
  return MEMORY[0x24BEE6DC8]();
}

uint64_t sub_20A5B8F78()
{
  return MEMORY[0x24BEE6E08]();
}

uint64_t sub_20A5B8F84()
{
  return MEMORY[0x24BEE6E10]();
}

uint64_t sub_20A5B8F90()
{
  return MEMORY[0x24BEE2AE0]();
}

uint64_t sub_20A5B8F9C()
{
  return MEMORY[0x24BEE2BE0]();
}

uint64_t sub_20A5B8FA8()
{
  return MEMORY[0x24BEE2F40]();
}

uint64_t sub_20A5B8FB4()
{
  return MEMORY[0x24BEE2F48]();
}

uint64_t sub_20A5B8FC0()
{
  return MEMORY[0x24BEE2F58]();
}

uint64_t sub_20A5B8FCC()
{
  return MEMORY[0x24BEE3068]();
}

uint64_t sub_20A5B8FD8()
{
  return MEMORY[0x24BEE3080]();
}

uint64_t sub_20A5B8FE4()
{
  return MEMORY[0x24BEE3088]();
}

uint64_t sub_20A5B8FF0()
{
  return MEMORY[0x24BEE3098]();
}

uint64_t sub_20A5B8FFC()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t sub_20A5B9008()
{
  return MEMORY[0x24BEE3290]();
}

uint64_t sub_20A5B9014()
{
  return MEMORY[0x24BEE6FA8]();
}

uint64_t sub_20A5B9020()
{
  return MEMORY[0x24BEE32B8]();
}

uint64_t sub_20A5B902C()
{
  return MEMORY[0x24BEE32C0]();
}

uint64_t sub_20A5B9038()
{
  return MEMORY[0x24BEE32D8]();
}

uint64_t sub_20A5B9044()
{
  return MEMORY[0x24BEE32E0]();
}

uint64_t sub_20A5B9050()
{
  return MEMORY[0x24BEE32E8]();
}

uint64_t sub_20A5B905C()
{
  return MEMORY[0x24BEE32F8]();
}

uint64_t sub_20A5B9068()
{
  return MEMORY[0x24BEE3308]();
}

uint64_t sub_20A5B9074()
{
  return MEMORY[0x24BEE3350]();
}

uint64_t sub_20A5B9080()
{
  return MEMORY[0x24BEE3358]();
}

uint64_t sub_20A5B908C()
{
  return MEMORY[0x24BEE3360]();
}

uint64_t sub_20A5B9098()
{
  return MEMORY[0x24BEE3370]();
}

uint64_t sub_20A5B90A4()
{
  return MEMORY[0x24BEE3380]();
}

uint64_t sub_20A5B90B0()
{
  return MEMORY[0x24BEE33C8]();
}

uint64_t sub_20A5B90BC()
{
  return MEMORY[0x24BEE33E0]();
}

uint64_t sub_20A5B90C8()
{
  return MEMORY[0x24BEE3408]();
}

uint64_t sub_20A5B90D4()
{
  return MEMORY[0x24BEE3428]();
}

uint64_t sub_20A5B90E0()
{
  return MEMORY[0x24BEE3430]();
}

uint64_t sub_20A5B90EC()
{
  return MEMORY[0x24BEE3438]();
}

uint64_t sub_20A5B90F8()
{
  return MEMORY[0x24BEE3448]();
}

uint64_t sub_20A5B9104()
{
  return MEMORY[0x24BEE3458]();
}

uint64_t sub_20A5B9110()
{
  return MEMORY[0x24BEE34A0]();
}

uint64_t sub_20A5B911C()
{
  return MEMORY[0x24BEE34A8]();
}

uint64_t sub_20A5B9128()
{
  return MEMORY[0x24BEE34B0]();
}

uint64_t sub_20A5B9134()
{
  return MEMORY[0x24BEE34C0]();
}

uint64_t sub_20A5B9140()
{
  return MEMORY[0x24BEE34D0]();
}

uint64_t sub_20A5B914C()
{
  return MEMORY[0x24BEE3520]();
}

uint64_t sub_20A5B9158()
{
  return MEMORY[0x24BEE3540]();
}

uint64_t sub_20A5B9164()
{
  return MEMORY[0x24BEE3548]();
}

uint64_t sub_20A5B9170()
{
  return MEMORY[0x24BEE3568]();
}

uint64_t sub_20A5B917C()
{
  return MEMORY[0x24BEE7040]();
}

uint64_t sub_20A5B9188()
{
  return MEMORY[0x24BEE3638]();
}

uint64_t sub_20A5B9194()
{
  return MEMORY[0x24BEE3668]();
}

uint64_t sub_20A5B91A0()
{
  return MEMORY[0x24BEE3A20]();
}

uint64_t sub_20A5B91AC()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t sub_20A5B91B8()
{
  return MEMORY[0x24BEE7098]();
}

uint64_t sub_20A5B91C4()
{
  return MEMORY[0x24BEE3A88]();
}

uint64_t sub_20A5B91D0()
{
  return MEMORY[0x24BEE3B90]();
}

uint64_t sub_20A5B91DC()
{
  return MEMORY[0x24BEE3B98]();
}

uint64_t sub_20A5B91E8()
{
  return MEMORY[0x24BEE3BB8]();
}

uint64_t sub_20A5B91F4()
{
  return MEMORY[0x24BEE3D50]();
}

uint64_t sub_20A5B9200()
{
  return MEMORY[0x24BEE70E0]();
}

uint64_t sub_20A5B920C()
{
  return MEMORY[0x24BEE3ED0]();
}

uint64_t sub_20A5B9218()
{
  return MEMORY[0x24BEE3ED8]();
}

uint64_t sub_20A5B9224()
{
  return MEMORY[0x24BEE7110]();
}

uint64_t sub_20A5B9230()
{
  return MEMORY[0x24BEE7118]();
}

uint64_t sub_20A5B923C()
{
  return MEMORY[0x24BDD0708]();
}

uint64_t sub_20A5B9248()
{
  return MEMORY[0x24BEE3EE8]();
}

uint64_t sub_20A5B9254()
{
  return MEMORY[0x24BEE3EF0]();
}

uint64_t sub_20A5B9260()
{
  return MEMORY[0x24BEE3EF8]();
}

uint64_t sub_20A5B926C()
{
  return MEMORY[0x24BEE3F00]();
}

uint64_t sub_20A5B9278()
{
  return MEMORY[0x24BEE3F08]();
}

uint64_t sub_20A5B9284()
{
  return MEMORY[0x24BEE3F10]();
}

uint64_t sub_20A5B9290()
{
  return MEMORY[0x24BEE42D8]();
}

uint64_t sub_20A5B929C()
{
  return MEMORY[0x24BEE42E0]();
}

uint64_t sub_20A5B92A8()
{
  return MEMORY[0x24BEE42F8]();
}

uint64_t sub_20A5B92B4()
{
  return MEMORY[0x24BEE4300]();
}

uint64_t sub_20A5B92C0()
{
  return MEMORY[0x24BEE4318]();
}

uint64_t sub_20A5B92CC()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t sub_20A5B92D8()
{
  return MEMORY[0x24BEE45F0]();
}

uint64_t sub_20A5B92E4()
{
  return MEMORY[0x24BEE45F8]();
}

uint64_t sub_20A5B92F0()
{
  return MEMORY[0x24BEE4608]();
}

uint64_t sub_20A5B92FC()
{
  return MEMORY[0x24BEE4638]();
}

uint64_t sub_20A5B9308()
{
  return MEMORY[0x24BEE4828]();
}

uint64_t sub_20A5B9314()
{
  return MEMORY[0x24BEE4A08]();
}

uint64_t sub_20A5B9320()
{
  return MEMORY[0x24BEE4A10]();
}

uint64_t sub_20A5B932C()
{
  return MEMORY[0x24BEE4A98]();
}

uint64_t AnalyticsSendEventLazy()
{
  return MEMORY[0x24BE1A1C8]();
}

uint64_t CCCryptorGCMOneshotDecrypt()
{
  return MEMORY[0x24BDAC158]();
}

uint64_t CCCryptorGCMOneshotEncrypt()
{
  return MEMORY[0x24BDAC160]();
}

unsigned __int8 *__cdecl CC_SHA256(const void *data, CC_LONG len, unsigned __int8 *md)
{
  return (unsigned __int8 *)MEMORY[0x24BDAC358](data, *(_QWORD *)&len, md);
}

const UInt8 *__cdecl CFDataGetBytePtr(CFDataRef theData)
{
  return (const UInt8 *)MEMORY[0x24BDBBCE0](theData);
}

CFIndex CFDataGetLength(CFDataRef theData)
{
  return MEMORY[0x24BDBBCF8](theData);
}

CFStringRef CFErrorCopyDescription(CFErrorRef err)
{
  return (CFStringRef)MEMORY[0x24BDBBE70](err);
}

uint64_t CFPhoneNumberCreate()
{
  return MEMORY[0x24BE1FA98]();
}

uint64_t CFPhoneNumberCreateString()
{
  return MEMORY[0x24BE1FAA0]();
}

void CFRelease(CFTypeRef cf)
{
  MEMORY[0x24BDBC298](cf);
}

uint64_t MGCopyAnswer()
{
  return MEMORY[0x24BED8448]();
}

uint64_t MGGetBoolAnswer()
{
  return MEMORY[0x24BED8470]();
}

uint64_t MKBGetDeviceLockState()
{
  return MEMORY[0x24BE67168]();
}

SecAccessControlRef SecAccessControlCreateWithFlags(CFAllocatorRef allocator, CFTypeRef protection, SecAccessControlCreateFlags flags, CFErrorRef *error)
{
  return (SecAccessControlRef)MEMORY[0x24BDE87A0](allocator, protection, flags, error);
}

CFDataRef SecCertificateCopyData(SecCertificateRef certificate)
{
  return (CFDataRef)MEMORY[0x24BDE8850](certificate);
}

uint64_t SecCertificateCopyExtensionValue()
{
  return MEMORY[0x24BDE8868]();
}

SecKeyRef SecCertificateCopyKey(SecCertificateRef certificate)
{
  return (SecKeyRef)MEMORY[0x24BDE8888](certificate);
}

uint64_t SecCertificateCopySubjectPublicKeyInfoSHA256Digest()
{
  return MEMORY[0x24BDE88E8]();
}

SecCertificateRef SecCertificateCreateWithData(CFAllocatorRef allocator, CFDataRef data)
{
  return (SecCertificateRef)MEMORY[0x24BDE8918](allocator, data);
}

uint64_t SecCopyEncryptedToServer()
{
  return MEMORY[0x24BDE89E8]();
}

CFStringRef SecCopyErrorMessageString(OSStatus status, void *reserved)
{
  return (CFStringRef)MEMORY[0x24BDE89F0](*(_QWORD *)&status, reserved);
}

OSStatus SecItemDelete(CFDictionaryRef query)
{
  return MEMORY[0x24BDE8A80](query);
}

CFDataRef SecKeyCopyExternalRepresentation(SecKeyRef key, CFErrorRef *error)
{
  return (CFDataRef)MEMORY[0x24BDE8AA8](key, error);
}

CFDataRef SecKeyCopyKeyExchangeResult(SecKeyRef privateKey, SecKeyAlgorithm algorithm, SecKeyRef publicKey, CFDictionaryRef parameters, CFErrorRef *error)
{
  return (CFDataRef)MEMORY[0x24BDE8AB0](privateKey, algorithm, publicKey, parameters, error);
}

SecKeyRef SecKeyCopyPublicKey(SecKeyRef key)
{
  return (SecKeyRef)MEMORY[0x24BDE8AC8](key);
}

uint64_t SecKeyCopySystemKey()
{
  return MEMORY[0x24BDE8AD8]();
}

uint64_t SecKeyCreateAttestation()
{
  return MEMORY[0x24BDE8AE0]();
}

uint64_t SecKeyCreateEncryptedDataWithParameters()
{
  return MEMORY[0x24BDE8B08]();
}

SecKeyRef SecKeyCreateRandomKey(CFDictionaryRef parameters, CFErrorRef *error)
{
  return (SecKeyRef)MEMORY[0x24BDE8B30](parameters, error);
}

uint64_t SecKeySetParameter()
{
  return MEMORY[0x24BDE8BA0]();
}

Boolean SecKeyVerifySignature(SecKeyRef key, SecKeyAlgorithm algorithm, CFDataRef signedData, CFDataRef signature, CFErrorRef *error)
{
  return MEMORY[0x24BDE8BA8](key, algorithm, signedData, signature, error);
}

uint64_t SecPolicyCreateApplePayModelSigning()
{
  return MEMORY[0x24BDE8C10]();
}

uint64_t SecPolicyCreateApplePinned()
{
  return MEMORY[0x24BDE8C18]();
}

uint64_t SecPolicyCreateMDLTerminalAuth()
{
  return MEMORY[0x24BDE8C50]();
}

SecPolicyRef SecPolicyCreateRevocation(CFOptionFlags revocationFlags)
{
  return (SecPolicyRef)MEMORY[0x24BDE8C68](revocationFlags);
}

int SecRandomCopyBytes(SecRandomRef rnd, size_t count, void *bytes)
{
  return MEMORY[0x24BDE8CC8](rnd, count, bytes);
}

SecKeyRef SecTrustCopyKey(SecTrustRef trust)
{
  return (SecKeyRef)MEMORY[0x24BDE8DC0](trust);
}

OSStatus SecTrustCreateWithCertificates(CFTypeRef certificates, CFTypeRef policies, SecTrustRef *trust)
{
  return MEMORY[0x24BDE8DD8](certificates, policies, trust);
}

BOOL SecTrustEvaluateWithError(SecTrustRef trust, CFErrorRef *error)
{
  return MEMORY[0x24BDE8DF0](trust, error);
}

OSStatus SecTrustGetTrustResult(SecTrustRef trust, SecTrustResultType *result)
{
  return MEMORY[0x24BDE8E08](trust, result);
}

OSStatus SecTrustSetAnchorCertificates(SecTrustRef trust, CFArrayRef anchorCertificates)
{
  return MEMORY[0x24BDE8E28](trust, anchorCertificates);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x24BDAC720](aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
  MEMORY[0x24BDAC730](a1, *(_QWORD *)&a2);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x24BDAC738](aBlock);
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
  MEMORY[0x24BDAC780](exception_object);
}

uint64_t _availability_version_check()
{
  return MEMORY[0x24BDAC970]();
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x24BEE4B38]();
}

uint64_t _swift_stdlib_strtod_clocale()
{
  return MEMORY[0x24BEE4B48]();
}

uint64_t _swift_stdlib_strtof_clocale()
{
  return MEMORY[0x24BEE4B50]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

uint64_t ccder_decode_len()
{
  return MEMORY[0x24BDAD470]();
}

uint64_t ccder_decode_sequence_tl()
{
  return MEMORY[0x24BDAD480]();
}

uint64_t ccder_decode_tag()
{
  return MEMORY[0x24BDAD488]();
}

uint64_t ccder_encode_constructed_tl()
{
  return MEMORY[0x24BDAD4B0]();
}

uint64_t ccder_encode_integer()
{
  return MEMORY[0x24BDAD4C0]();
}

uint64_t ccder_sizeof()
{
  return MEMORY[0x24BDAD4E0]();
}

uint64_t ccder_sizeof_integer()
{
  return MEMORY[0x24BDAD4F8]();
}

__uint64_t clock_gettime_nsec_np(clockid_t __clock_id)
{
  return MEMORY[0x24BDAD9C0](*(_QWORD *)&__clock_id);
}

uint64_t container_system_group_path_for_identifier()
{
  return MEMORY[0x24BDADBA8]();
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x24BDADDC8]();
}

void dispatch_group_enter(dispatch_group_t group)
{
  MEMORY[0x24BDADDD0](group);
}

void dispatch_group_leave(dispatch_group_t group)
{
  MEMORY[0x24BDADDD8](group);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
  MEMORY[0x24BDADE98](predicate, block);
}

void dispatch_once_f(dispatch_once_t *predicate, void *context, dispatch_function_t function)
{
  MEMORY[0x24BDADEA0](predicate, context, function);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return (dispatch_queue_t)MEMORY[0x24BDADED0](label, attr);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x24BDADFE8](queue, block);
}

void *__cdecl dlopen(const char *__path, int __mode)
{
  return (void *)MEMORY[0x24BDAE070](__path, *(_QWORD *)&__mode);
}

void *__cdecl dlsym(void *__handle, const char *__symbol)
{
  return (void *)MEMORY[0x24BDAE088](__handle, __symbol);
}

int fclose(FILE *a1)
{
  return MEMORY[0x24BDAE2E0](a1);
}

FILE *__cdecl fopen(const char *__filename, const char *__mode)
{
  return (FILE *)MEMORY[0x24BDAE410](__filename, __mode);
}

size_t fread(void *__ptr, size_t __size, size_t __nitems, FILE *__stream)
{
  return MEMORY[0x24BDAE448](__ptr, __size, __nitems, __stream);
}

void free(void *a1)
{
  MEMORY[0x24BDAE450](a1);
}

int fseek(FILE *a1, uint64_t a2, int a3)
{
  return MEMORY[0x24BDAE4D8](a1, a2, *(_QWORD *)&a3);
}

uint64_t ftell(FILE *a1)
{
  return MEMORY[0x24BDAE530](a1);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x24BDAED08](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

void *__cdecl malloc_type_malloc(size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x24BDAED78](size, type_id);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x24BDAEE78](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

errno_t memset_s(void *__s, rsize_t __smax, int __c, rsize_t __n)
{
  return MEMORY[0x24BDAEEC8](__s, __smax, *(_QWORD *)&__c, __n);
}

int mlock(const void *a1, size_t a2)
{
  return MEMORY[0x24BDAEFA0](a1, a2);
}

int munlock(const void *a1, size_t a2)
{
  return MEMORY[0x24BDAEFE8](a1, a2);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x24BEDCF68](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x24BEDCF88]();
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDCFD0](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x24BEDCFE8]();
}

void objc_copyWeak(id *to, id *from)
{
  MEMORY[0x24BEDD030](to, from);
}

void objc_destroyWeak(id *location)
{
  MEMORY[0x24BEDD038](location);
}

void objc_enumerationMutation(id obj)
{
  MEMORY[0x24BEDD068](obj);
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return (id)MEMORY[0x24BEDD0B0](self, _cmd, offset, atomic);
}

id objc_initWeak(id *location, id val)
{
  return (id)MEMORY[0x24BEDD0C0](location, val);
}

id objc_loadWeakRetained(id *location)
{
  return (id)MEMORY[0x24BEDD0E8](location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD108](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD120](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x24BEDD130]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x24BEDD138]();
}

uint64_t objc_opt_new()
{
  return MEMORY[0x24BEDD148]();
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x24BEDD2A8](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

id objc_retainBlock(id a1)
{
  return (id)MEMORY[0x24BEDD2C0](a1);
}

void objc_storeStrong(id *location, id obj)
{
  MEMORY[0x24BEDD410](location, obj);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

uint64_t os_variant_allows_internal_security_policies()
{
  return MEMORY[0x24BDAF4B0]();
}

void rewind(FILE *a1)
{
  MEMORY[0x24BDAFB98](a1);
}

int sscanf(const char *a1, const char *a2, ...)
{
  return MEMORY[0x24BDAFEA0](a1, a2);
}

uint64_t strtol(const char *__str, char **__endptr, int __base)
{
  return MEMORY[0x24BDB0000](__str, __endptr, *(_QWORD *)&__base);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x24BEE4B58]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x24BEE4B68]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x24BEE4B78]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x24BEE4B80]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x24BEE4BA8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x24BEE4BB0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x24BEE4BE0]();
}

uint64_t swift_continuation_await()
{
  return MEMORY[0x24BEE71B8]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x24BEE71C0]();
}

uint64_t swift_continuation_resume()
{
  return MEMORY[0x24BEE71C8]();
}

uint64_t swift_continuation_throwingResume()
{
  return MEMORY[0x24BEE71D0]();
}

uint64_t swift_continuation_throwingResumeWithError()
{
  return MEMORY[0x24BEE71D8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x24BEE4C18]();
}

uint64_t swift_defaultActor_deallocate()
{
  return MEMORY[0x24BEE71E0]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x24BEE71E8]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x24BEE71F0]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x24BEE4C40]();
}

uint64_t swift_dynamicCastMetatype()
{
  return MEMORY[0x24BEE4C50]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x24BEE4C60]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x24BEE4C98]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x24BEE4CA8]();
}

uint64_t swift_getDynamicType()
{
  return MEMORY[0x24BEE4D00]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x24BEE4D08]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x24BEE4D18]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x24BEE4D40]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x24BEE4D80]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x24BEE4D98]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x24BEE4DA0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x24BEE4DF8]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x24BEE4E10]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x24BEE4E18]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x24BEE4E28]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x24BEE4E30]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x24BEE4E48]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isUniquelyReferenced_native()
{
  return MEMORY[0x24BEE4E80]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x24BEE4E90]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x24BEE4EA8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x24BEE4EB0]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x24BEE4F00]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x24BEE4F10]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x24BEE4F30]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x24BEE4F48]();
}

uint64_t swift_stdlib_random()
{
  return MEMORY[0x24BEE4F50]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x24BEE4F58]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_taskGroup_wait_next_throwing()
{
  return MEMORY[0x24BEE7218]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x24BEE7228]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x24BEE7230]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x24BEE7238]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x24BEE7278]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x24BEE4F68]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x24BEE4F78]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x24BEE4F88]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x24BEE4FB0]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x24BEE4FC8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x24BEE4FD0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x24BEE4FD8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x24BEE5008]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x24BEE5028]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x24BEE5030]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x24BEE5038]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x24BEE5050]();
}

void xpc_set_event_stream_handler(const char *stream, dispatch_queue_t targetq, xpc_handler_t handler)
{
  MEMORY[0x24BDB0B58](stream, targetq, handler);
}

