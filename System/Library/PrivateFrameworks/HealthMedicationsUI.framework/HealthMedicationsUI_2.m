uint64_t sub_1BC210C44(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  double v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  void (*v39)(char *, uint64_t);
  _QWORD v40[4];
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;

  v2 = sub_1BC2B23F0();
  v42 = *(_QWORD *)(v2 - 8);
  v43 = v2;
  MEMORY[0x1E0C80A78](v2);
  v41 = (char *)v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1BC2B50CC();
    type metadata accessor for MedicationsDoseLogViewModel(0);
    sub_1BC0E519C(&qword_1EF3FFBE0, type metadata accessor for MedicationsDoseLogViewModel, (uint64_t)&protocol conformance descriptor for MedicationsDoseLogViewModel);
    result = sub_1BC2B47E4();
    a1 = v50;
    v5 = v51;
    v6 = v52;
    v7 = v53;
    v8 = v54;
  }
  else
  {
    v9 = -1 << *(_BYTE *)(a1 + 32);
    v5 = a1 + 56;
    v6 = ~v9;
    v10 = -v9;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v8 = v11 & *(_QWORD *)(a1 + 56);
    result = swift_bridgeObjectRetain();
    v7 = 0;
  }
  v45 = a1 & 0x7FFFFFFFFFFFFFFFLL;
  v40[1] = v6;
  v46 = (unint64_t)(v6 + 64) >> 6;
  v12 = &unk_1EDA0F000;
  v44 = MEMORY[0x1E0DEE9B0] + 8;
  while (1)
  {
    v13 = v8;
    v14 = v7;
    if ((a1 & 0x8000000000000000) == 0)
      break;
    v17 = sub_1BC2B512C();
    v18 = v17;
    if (!v17)
      goto LABEL_43;
    v48 = v17;
    type metadata accessor for MedicationsDoseLogViewModel(0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v19 = v49;
    swift_unknownObjectRelease();
    if (!v19)
      goto LABEL_42;
LABEL_32:
    v23 = *(_QWORD *)(v19 + 48);
    if (v23 != *(_QWORD *)(v19 + v12[266]))
    {
      swift_release();
LABEL_41:
      v18 = 1;
      goto LABEL_43;
    }
    v24 = *(void **)(v19 + 24);
    if (v24 && (v23 & 0xFFFFFFFFFFFFFFFELL) == 4)
    {
      v25 = v24;
      v26 = objc_msgSend(v25, sel_doseQuantity);
      if (!v26
        || (v27 = v26, objc_msgSend(v26, sel_doubleValue), v29 = v28, v27, v29 != *(double *)(v19 + 40)))
      {
        swift_release();

        goto LABEL_41;
      }
      v40[2] = v14;
      v40[3] = v13;
      v30 = v5;
      v31 = v19 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_logDate;
      swift_beginAccess();
      v47 = v8;
      v32 = v12;
      v33 = a1;
      v35 = v41;
      v34 = v42;
      v36 = v31;
      v5 = v30;
      v37 = v43;
      (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v41, v36, v43);
      sub_1BC0E519C(&qword_1EF3FCC08, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
      v38 = sub_1BC2B4424();

      v39 = *(void (**)(char *, uint64_t))(v34 + 8);
      a1 = v33;
      v12 = v32;
      v8 = v47;
      v39(v35, v37);
      result = swift_release();
      if ((v38 & 1) == 0)
      {
        v18 = 1;
        goto LABEL_43;
      }
    }
    else
    {
      result = swift_release();
    }
  }
  if (v8)
  {
    v15 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v16 = v15 | (v7 << 6);
LABEL_31:
    v19 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v16);
    swift_retain();
    if (!v19)
      goto LABEL_42;
    goto LABEL_32;
  }
  v20 = v7 + 1;
  if (!__OFADD__(v7, 1))
  {
    if (v20 >= v46)
      goto LABEL_42;
    v21 = *(_QWORD *)(v5 + 8 * v20);
    ++v7;
    if (!v21)
    {
      v7 = v14 + 2;
      if (v14 + 2 >= v46)
        goto LABEL_42;
      v21 = *(_QWORD *)(v5 + 8 * v7);
      if (!v21)
      {
        v7 = v14 + 3;
        if (v14 + 3 >= v46)
          goto LABEL_42;
        v21 = *(_QWORD *)(v5 + 8 * v7);
        if (!v21)
        {
          v7 = v14 + 4;
          if (v14 + 4 >= v46)
            goto LABEL_42;
          v21 = *(_QWORD *)(v5 + 8 * v7);
          if (!v21)
          {
            v7 = v14 + 5;
            if (v14 + 5 >= v46)
              goto LABEL_42;
            v21 = *(_QWORD *)(v5 + 8 * v7);
            if (!v21)
            {
              v22 = v14 + 6;
              while (v46 != v22)
              {
                v21 = *(_QWORD *)(v5 + 8 * v22++);
                if (v21)
                {
                  v7 = v22 - 1;
                  goto LABEL_30;
                }
              }
LABEL_42:
              v18 = 0;
LABEL_43:
              sub_1BC1061A8();
              return v18;
            }
          }
        }
      }
    }
LABEL_30:
    v8 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v7 << 6);
    goto LABEL_31;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC211090()
{
  char *v0;
  int *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[3];

  v1 = (int *)type metadata accessor for MedicationDoseRecordAllItem(0);
  v2 = *((_QWORD *)v1 - 1);
  result = MEMORY[0x1E0C80A78](v1);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)&v0[qword_1EDA0F8E8])
  {
    v6 = *(_QWORD *)&v0[qword_1EDA0F8C0];
    if (v6)
    {
      v7 = *(_QWORD *)&v0[qword_1EDA0F890];
      if (v7)
      {
        v8 = *(_QWORD *)(v7 + 16);
        if (v8 >> 62)
        {
          swift_retain();
          swift_retain();
          swift_retain();
          swift_bridgeObjectRetain();
          v9 = sub_1BC2B52D0();
          swift_bridgeObjectRelease();
        }
        else
        {
          v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_retain();
          swift_retain();
          swift_retain();
        }
        v22[1] = v7;
        v10 = &v0[qword_1EDA0F8B8];
        swift_beginAccess();
        if ((*(_QWORD *)v10 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain();
          v11 = sub_1BC2B5108();
          swift_bridgeObjectRelease();
          if (v11 < v9)
            goto LABEL_8;
        }
        else if (*(_QWORD *)(*(_QWORD *)v10 + 16) < v9)
        {
LABEL_8:
          v12 = swift_bridgeObjectRetain();
          v13 = sub_1BC20CF38(v12);
          swift_bridgeObjectRelease();
          swift_release();
          v14 = v13 == 0;
          if (v14 == *(unsigned __int8 *)(v6 + 16))
            goto LABEL_14;
          goto LABEL_13;
        }
        if ((*(_BYTE *)(v6 + 16) & 1) == 0)
        {
LABEL_14:
          swift_release();
          swift_release();
          return swift_release();
        }
        LOBYTE(v14) = 0;
LABEL_13:
        *(_BYTE *)(v6 + 16) = v14;
        sub_1BC0E7998(0, (unint64_t *)&unk_1EDA0FE60, type metadata accessor for MedicationDoseRecordAllItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
        v15 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
        v16 = swift_allocObject();
        *(_OWORD *)(v16 + 16) = xmmword_1BC2B92D0;
        v17 = v16 + v15;
        swift_retain();
        v18 = v0;
        sub_1BC2B242C();
        v19 = (uint64_t *)&v5[v1[5]];
        type metadata accessor for MedicationDoseRecordAllCell();
        sub_1BC0E519C(&qword_1EDA0F9F0, (uint64_t (*)(uint64_t))type metadata accessor for MedicationDoseRecordAllCell, (uint64_t)&unk_1BC2C2890);
        *v19 = sub_1BC2B2930();
        v19[1] = v20;
        *(_QWORD *)&v5[v1[7] + 8] = 0;
        v21 = swift_unknownObjectWeakInit();
        *(_QWORD *)&v5[v1[6]] = v6;
        *(_QWORD *)(v21 + 8) = &off_1E74B8718;
        swift_unknownObjectWeakAssign();

        sub_1BC0F1B94((uint64_t)v5, v17, type metadata accessor for MedicationDoseRecordAllItem);
        sub_1BC0F7F78(v16);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        sub_1BC2B2C24();
        swift_bridgeObjectRelease();
        goto LABEL_14;
      }
    }
  }
  return result;
}

uint64_t sub_1BC2113BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  char v6;
  id v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v13[4];

  v2 = v1;
  if (*(_QWORD *)(a1 + 48) == 1)
  {
    v4 = (uint64_t *)(v2 + qword_1EDA0F8B8);
    swift_beginAccess();
    v5 = *v4;
    swift_bridgeObjectRetain();
    v6 = sub_1BC211548(a1, v5);
    swift_bridgeObjectRelease();
    if ((v6 & 1) == 0)
      goto LABEL_6;
    swift_beginAccess();
    sub_1BC217300();
  }
  else
  {
    swift_beginAccess();
    swift_retain();
    sub_1BC213EA8(v13, a1);
  }
  swift_endAccess();
  swift_release();
LABEL_6:
  v7 = sub_1BC20E4E4();
  swift_beginAccess();
  v8 = swift_bridgeObjectRetain();
  v9 = sub_1BC210C44(v8);
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
  {
    v10 = 1;
  }
  else
  {
    v11 = swift_bridgeObjectRetain();
    v10 = sub_1BC20D26C(v11);
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v7, sel_setEnabled_, v10 & 1);

  return sub_1BC211090();
}

uint64_t sub_1BC211548(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)(a2 + 16))
    {
      sub_1BC2B5450();
      sub_1BC236B0C();
      sub_1BC2B44D8();
      swift_bridgeObjectRelease();
      v4 = sub_1BC2B548C();
      v5 = -1 << *(_BYTE *)(a2 + 32);
      v6 = v4 & ~v5;
      v7 = a2 + 56;
      if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
      {
        swift_retain();
        v8 = sub_1BC236B0C();
        v10 = v9;
        if (v8 == sub_1BC236B0C() && v10 == v11)
        {
LABEL_19:
          swift_release();
          swift_bridgeObjectRelease_n();
          goto LABEL_20;
        }
        v13 = sub_1BC2B53CC();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v13 & 1) != 0)
        {
LABEL_20:
          v3 = 1;
          return v3 & 1;
        }
        v14 = ~v5;
        v15 = (v6 + 1) & v14;
        if (((*(_QWORD *)(v7 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
        {
          while (1)
          {
            swift_retain();
            v16 = sub_1BC236B0C();
            v18 = v17;
            if (v16 == sub_1BC236B0C() && v18 == v19)
              break;
            v3 = sub_1BC2B53CC();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v3 & 1) == 0)
            {
              v15 = (v15 + 1) & v14;
              if (((*(_QWORD *)(v7 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
                continue;
            }
            return v3 & 1;
          }
          goto LABEL_19;
        }
      }
    }
    v3 = 0;
    return v3 & 1;
  }
  swift_retain();
  v3 = sub_1BC2B5138();
  swift_release();
  return v3 & 1;
}

uint64_t sub_1BC211774(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  BOOL v20;

  if (!*(_QWORD *)(a5 + 16))
    return 0;
  sub_1BC2B5450();
  sub_1BC2B44D8();
  sub_1BC2B44D8();
  v10 = sub_1BC2B548C();
  v11 = -1 << *(_BYTE *)(a5 + 32);
  v12 = v10 & ~v11;
  v13 = a5 + 56;
  if (((*(_QWORD *)(a5 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
    return 0;
  v14 = ~v11;
  v15 = *(_QWORD *)(a5 + 48);
  while (1)
  {
    v16 = (_QWORD *)(v15 + 32 * v12);
    v17 = v16[2];
    v18 = v16[3];
    v19 = *v16 == a1 && v16[1] == a2;
    if (v19 || (sub_1BC2B53CC() & 1) != 0)
    {
      v20 = v17 == a3 && v18 == a4;
      if (v20 || (sub_1BC2B53CC() & 1) != 0)
        break;
    }
    v12 = (v12 + 1) & v14;
    if (((*(_QWORD *)(v13 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      return 0;
  }
  return 1;
}

uint64_t sub_1BC2118B4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1[18] = v0;
  v1[19] = swift_getObjectType();
  v2 = sub_1BC2B39E0();
  v1[20] = v2;
  v1[21] = *(_QWORD *)(v2 - 8);
  v1[22] = swift_task_alloc();
  v3 = sub_1BC2B3614();
  v1[23] = v3;
  v1[24] = *(_QWORD *)(v3 - 8);
  v1[25] = swift_task_alloc();
  v4 = sub_1BC2B23F0();
  v1[26] = v4;
  v1[27] = *(_QWORD *)(v4 - 8);
  v1[28] = swift_task_alloc();
  v1[29] = swift_task_alloc();
  sub_1BC2B4658();
  v1[30] = sub_1BC2B464C();
  v1[31] = sub_1BC2B461C();
  v1[32] = v5;
  return swift_task_switch();
}

uint64_t sub_1BC2119B4()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  double v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t);
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t *v38;
  uint64_t *v39;
  int64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;

  v1 = (uint64_t *)(v0[18] + qword_1EDA0F8B8);
  swift_beginAccess();
  v2 = *v1;
  v43 = v0;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1BC2B50CC();
    type metadata accessor for MedicationsDoseLogViewModel(0);
    sub_1BC0E519C(&qword_1EF3FFBE0, type metadata accessor for MedicationsDoseLogViewModel, (uint64_t)&protocol conformance descriptor for MedicationsDoseLogViewModel);
    result = sub_1BC2B47E4();
    v2 = v0[2];
    v41 = v0[3];
    v4 = v0[4];
    v5 = v0[5];
    v6 = v0[6];
  }
  else
  {
    v7 = -1 << *(_BYTE *)(v2 + 32);
    v41 = v2 + 56;
    v4 = ~v7;
    v8 = -v7;
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v6 = v9 & *(_QWORD *)(v2 + 56);
    result = swift_bridgeObjectRetain();
    v5 = 0;
  }
  v38 = v0 + 17;
  v39 = v0 + 16;
  v42 = v0[27];
  v36 = v0[24];
  v40 = (unint64_t)(v4 + 64) >> 6;
  v10 = MEMORY[0x1E0DEE9D8];
LABEL_8:
  v37 = v10;
  v0[33] = v10;
  while (1)
  {
    v11 = v5;
    if ((v2 & 0x8000000000000000) == 0)
      break;
    v14 = sub_1BC2B512C();
    if (!v14)
      goto LABEL_44;
    *v38 = v14;
    type metadata accessor for MedicationsDoseLogViewModel(0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v15 = *v39;
    swift_unknownObjectRelease();
    if (!v15)
      goto LABEL_44;
LABEL_32:
    v19 = *(void **)(v15 + 24);
    if (v19)
    {
      v20 = v19;
      if (objc_msgSend(v20, sel_status) != *(id *)(v15 + 48)
        || (v21 = objc_msgSend(v20, sel_doseQuantity)) == 0
        || (v22 = v21, objc_msgSend(v21, sel_doubleValue), v24 = v23, v22, v24 != *(double *)(v15 + 40)))
      {

LABEL_39:
        sub_1BC236E38((uint64_t *)v43[25]);
        v10 = v37;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v10 = sub_1BC0FB354(0, *(_QWORD *)(v37 + 16) + 1, 1, v37);
        v32 = *(_QWORD *)(v10 + 16);
        v31 = *(_QWORD *)(v10 + 24);
        if (v32 >= v31 >> 1)
          v10 = sub_1BC0FB354(v31 > 1, v32 + 1, 1, v10);
        v0 = v43;
        v33 = v43[25];
        v34 = v43[23];
        *(_QWORD *)(v10 + 16) = v32 + 1;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v36 + 32))(v10+ ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ *(_QWORD *)(v36 + 72) * v32, v33, v34);
        result = swift_release();
        goto LABEL_8;
      }
      v25 = v43[28];
      v26 = v43[29];
      v27 = v43[26];
      v28 = objc_msgSend(v20, sel_startDate);
      sub_1BC2B23A8();

      v29 = v15 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_logDate;
      swift_beginAccess();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 16))(v25, v29, v27);
      sub_1BC0E519C(&qword_1EF3FCC08, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
      LOBYTE(v29) = sub_1BC2B4424();

      v30 = *(void (**)(uint64_t, uint64_t))(v42 + 8);
      v30(v25, v27);
      v30(v26, v27);
      if ((v29 & 1) == 0)
        goto LABEL_39;
    }
    else if (*(_QWORD *)(v15 + 48) != *(_QWORD *)(v15
                                                 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_initialStatus))
    {
      goto LABEL_39;
    }
    result = swift_release();
  }
  if (v6)
  {
    v12 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    v13 = v12 | (v5 << 6);
    goto LABEL_31;
  }
  v16 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return result;
  }
  if (v16 >= v40)
    goto LABEL_44;
  v17 = *(_QWORD *)(v41 + 8 * v16);
  ++v5;
  if (v17)
    goto LABEL_30;
  v5 = v11 + 2;
  if (v11 + 2 >= v40)
    goto LABEL_44;
  v17 = *(_QWORD *)(v41 + 8 * v5);
  if (v17)
    goto LABEL_30;
  v5 = v11 + 3;
  if (v11 + 3 >= v40)
    goto LABEL_44;
  v17 = *(_QWORD *)(v41 + 8 * v5);
  if (v17)
    goto LABEL_30;
  v5 = v11 + 4;
  if (v11 + 4 >= v40)
    goto LABEL_44;
  v17 = *(_QWORD *)(v41 + 8 * v5);
  if (v17)
  {
LABEL_30:
    v6 = (v17 - 1) & v17;
    v13 = __clz(__rbit64(v17)) + (v5 << 6);
LABEL_31:
    v15 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v13);
    swift_retain();
    if (!v15)
      goto LABEL_44;
    goto LABEL_32;
  }
  v18 = v11 + 5;
  while (v40 != v18)
  {
    v17 = *(_QWORD *)(v41 + 8 * v18++);
    if (v17)
    {
      v5 = v18 - 1;
      goto LABEL_30;
    }
  }
LABEL_44:
  sub_1BC1061A8();
  if (*(_QWORD *)(v37 + 16))
  {
    v35 = (_QWORD *)swift_task_alloc();
    v43[34] = v35;
    *v35 = v43;
    v35[1] = sub_1BC211F7C;
    return sub_1BC2B34E8();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return ((uint64_t (*)(void))v43[1])();
  }
}

uint64_t sub_1BC211F7C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 280) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_1BC212000()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC212060()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(void **)(v0 + 280);
  swift_release();
  swift_bridgeObjectRelease();
  sub_1BC2B39C8();
  v2 = v1;
  v3 = v1;
  v4 = sub_1BC2B39D4();
  v5 = sub_1BC2B48C8();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 280);
    v7 = *(_QWORD *)(v0 + 168);
    v20 = *(_QWORD *)(v0 + 160);
    v21 = *(_QWORD *)(v0 + 176);
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    v22 = v9;
    *(_DWORD *)v8 = 136315394;
    v10 = sub_1BC2B54F8();
    *(_QWORD *)(v0 + 120) = sub_1BC12540C(v10, v11, &v22);
    sub_1BC2B4FD0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2080;
    *(_QWORD *)(v0 + 104) = v6;
    v12 = v6;
    sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0FEA0);
    v13 = sub_1BC2B4478();
    *(_QWORD *)(v0 + 112) = sub_1BC12540C(v13, v14, &v22);
    sub_1BC2B4FD0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BC0DC000, v4, v5, "[%s] Error saving medication dose event samples %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v9, -1, -1);
    MEMORY[0x1BCCEF3A0](v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v21, v20);
  }
  else
  {
    v15 = *(void **)(v0 + 280);
    v17 = *(_QWORD *)(v0 + 168);
    v16 = *(_QWORD *)(v0 + 176);
    v18 = *(_QWORD *)(v0 + 160);

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC2122D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[2];
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;

  v1 = sub_1BC2B23F0();
  v51 = *(_QWORD *)(v1 - 8);
  v52 = v1;
  MEMORY[0x1E0C80A78](v1);
  v50 = (char *)v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = (uint64_t *)(v0 + qword_1EDA0F8B8);
  swift_beginAccess();
  v4 = *v3;
  v36 = (*v3 & 0xC000000000000001) == 0;
  v45 = v0;
  if (v36)
  {
    v10 = -1 << *(_BYTE *)(v4 + 32);
    v11 = *(_QWORD *)(v4 + 56);
    v49 = v4 + 56;
    v7 = ~v10;
    v12 = -v10;
    if (v12 < 64)
      v13 = ~(-1 << v12);
    else
      v13 = -1;
    v9 = v13 & v11;
    result = swift_bridgeObjectRetain();
    v8 = 0;
    v6 = result;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1BC2B50CC();
    type metadata accessor for MedicationsDoseLogViewModel(0);
    sub_1BC0E519C(&qword_1EF3FFBE0, type metadata accessor for MedicationsDoseLogViewModel, (uint64_t)&protocol conformance descriptor for MedicationsDoseLogViewModel);
    result = sub_1BC2B47E4();
    v6 = v57;
    v49 = v58;
    v7 = v59;
    v8 = v60;
    v9 = v61;
  }
  v44[1] = v7;
  v14 = 0;
  v15 = 0;
  v16 = 0;
  v54 = 0;
  v17 = 0;
  v47 = v6 & 0x7FFFFFFFFFFFFFFFLL;
  v48 = (unint64_t)(v7 + 64) >> 6;
  v46 = MEMORY[0x1E0DEE9B0] + 8;
  v53 = v6;
  while (v6 < 0)
  {
    v22 = sub_1BC2B512C();
    if (!v22)
      goto LABEL_97;
    v55 = v22;
    type metadata accessor for MedicationsDoseLogViewModel(0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v23 = v56;
    swift_unknownObjectRelease();
    v21 = v8;
    v19 = v9;
    v6 = v53;
    if (!v23)
      goto LABEL_97;
LABEL_32:
    if ((v54 & 0x100000000) != 0)
    {
      if ((v17 & 1) != 0)
      {
        if ((v54 & 1) != 0)
        {
          if (v16)
          {
            if (v15)
            {
              if (v14)
              {
                result = swift_release();
                v14 = 1;
                v15 = 1;
                v16 = 1;
                v54 = 0x100000001;
                v17 = 1;
                goto LABEL_10;
              }
              v15 = 1;
              v16 = 1;
              v54 = 0x100000001;
              v17 = 1;
LABEL_9:
              v18 = *(_QWORD *)(v23 + 48);
              result = swift_release();
              v14 = v18 == 5;
              goto LABEL_10;
            }
            v16 = 1;
            v54 = 0x100000001;
LABEL_85:
            v17 = 1;
            goto LABEL_86;
          }
          v54 = 0x100000001;
LABEL_68:
          v17 = 1;
          goto LABEL_69;
        }
        v17 = 1;
        HIDWORD(v54) = 1;
        goto LABEL_54;
      }
      HIDWORD(v54) = 1;
    }
    else
    {
      HIDWORD(v54) = *(double *)(v23
                               + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_initialDoseAmount) != *(double *)(v23 + 40);
      if ((v17 & 1) != 0)
      {
        if ((v54 & 1) != 0)
        {
          if (v16)
          {
            if (v15)
            {
              if (!v14)
              {
                v15 = 1;
                v16 = 1;
                LODWORD(v54) = 1;
                v17 = 1;
                goto LABEL_9;
              }
              result = swift_release();
              v14 = 1;
              v15 = 1;
              v16 = 1;
              LODWORD(v54) = 1;
              v17 = 1;
              goto LABEL_10;
            }
            v16 = 1;
            LODWORD(v54) = 1;
            goto LABEL_85;
          }
          LODWORD(v54) = 1;
          goto LABEL_68;
        }
        v17 = 1;
LABEL_54:
        if (*(_QWORD *)(v23 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_initialStatus) == 4)
        {
          LODWORD(v54) = *(_QWORD *)(v23 + 48) == 5;
          if (!v16)
            goto LABEL_69;
          if (!v15)
          {
            v16 = 1;
            goto LABEL_86;
          }
          if (!v14)
            goto LABEL_94;
          result = swift_release();
        }
        else
        {
          if (!v16)
          {
            LODWORD(v54) = 0;
            goto LABEL_69;
          }
          if (!v15)
          {
            LODWORD(v54) = 0;
            v16 = 1;
            goto LABEL_86;
          }
          if (!v14)
          {
            LODWORD(v54) = 0;
LABEL_94:
            v15 = 1;
            v16 = 1;
            goto LABEL_9;
          }
          result = swift_release();
          LODWORD(v54) = 0;
        }
        v14 = 1;
        v15 = 1;
        v16 = 1;
        goto LABEL_10;
      }
    }
    v27 = v23 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_logDate;
    swift_beginAccess();
    v29 = v50;
    v28 = v51;
    v30 = v27;
    v31 = v52;
    (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v50, v30, v52);
    sub_1BC0E519C(&qword_1EF3FCC08, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
    v32 = sub_1BC2B4424();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v31);
    v17 = v32 ^ 1;
    if ((v54 & 1) == 0)
    {
      v6 = v53;
      goto LABEL_54;
    }
    v6 = v53;
    if (v16)
    {
      if (v15)
      {
        if (!v14)
        {
          v15 = 1;
          v16 = 1;
          LODWORD(v54) = 1;
          goto LABEL_9;
        }
        result = swift_release();
        v14 = 1;
        v15 = 1;
        v16 = 1;
        LODWORD(v54) = 1;
        goto LABEL_10;
      }
      v16 = 1;
      LODWORD(v54) = 1;
      goto LABEL_86;
    }
    LODWORD(v54) = 1;
LABEL_69:
    if (*(_QWORD *)(v23 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_initialStatus) == 5)
    {
      v16 = *(_QWORD *)(v23 + 48) == 4;
      if (v15)
      {
        if (!v14)
        {
          v15 = 1;
          goto LABEL_9;
        }
        result = swift_release();
        goto LABEL_76;
      }
    }
    else
    {
      if (v15)
      {
        if (!v14)
        {
          v16 = 0;
          v15 = 1;
          goto LABEL_9;
        }
        result = swift_release();
        v16 = 0;
LABEL_76:
        v14 = 1;
        v15 = 1;
        goto LABEL_10;
      }
      v16 = 0;
    }
LABEL_86:
    if ((*(_QWORD *)(v23 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_initialStatus) & 0xFFFFFFFFFFFFFFFELL) == 4)
    {
      v15 = *(_QWORD *)(v23 + 48) == 6;
      if (!v14)
        goto LABEL_9;
      result = swift_release();
    }
    else
    {
      if (!v14)
      {
        v15 = 0;
        goto LABEL_9;
      }
      result = swift_release();
      v15 = 0;
    }
    v14 = 1;
LABEL_10:
    v8 = v21;
    v9 = v19;
  }
  if (v9)
  {
    v19 = (v9 - 1) & v9;
    v20 = __clz(__rbit64(v9)) | (v8 << 6);
    v21 = v8;
    goto LABEL_31;
  }
  v24 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    return result;
  }
  if (v24 >= v48)
    goto LABEL_97;
  v25 = *(_QWORD *)(v49 + 8 * v24);
  v21 = v8 + 1;
  if (v25)
    goto LABEL_30;
  v21 = v8 + 2;
  if (v8 + 2 >= v48)
    goto LABEL_97;
  v25 = *(_QWORD *)(v49 + 8 * v21);
  if (v25)
    goto LABEL_30;
  v21 = v8 + 3;
  if (v8 + 3 >= v48)
    goto LABEL_97;
  v25 = *(_QWORD *)(v49 + 8 * v21);
  if (v25)
    goto LABEL_30;
  v21 = v8 + 4;
  if (v8 + 4 >= v48)
    goto LABEL_97;
  v25 = *(_QWORD *)(v49 + 8 * v21);
  if (v25)
  {
LABEL_30:
    v19 = (v25 - 1) & v25;
    v20 = __clz(__rbit64(v25)) + (v21 << 6);
LABEL_31:
    v23 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v20);
    swift_retain();
    if (!v23)
      goto LABEL_97;
    goto LABEL_32;
  }
  v26 = v8 + 5;
  while (v48 != v26)
  {
    v25 = *(_QWORD *)(v49 + 8 * v26++);
    if (v25)
    {
      v21 = v26 - 1;
      goto LABEL_30;
    }
  }
LABEL_97:
  result = sub_1BC1061A8();
  v33 = v45;
  if ((v54 & 0x100000000) != 0)
  {
    v34 = qword_1EDA0F900;
    v35 = *(_QWORD *)(v45 + qword_1EDA0F900);
    if ((v35 & 8) == 0)
    {
      v35 |= 8uLL;
      *(_QWORD *)(v45 + qword_1EDA0F900) = v35;
    }
    v36 = *(_QWORD *)(v33 + qword_1EDA0F908) == 3 && (v35 & 0x100) == 0;
    if (v36)
      *(_QWORD *)(v33 + v34) = v35 | 0x100;
  }
  if ((v17 & 1) != 0)
  {
    v37 = qword_1EDA0F900;
    v38 = *(_QWORD *)(v33 + qword_1EDA0F900);
    if ((v38 & 0x10) == 0)
    {
      v38 |= 0x10uLL;
      *(_QWORD *)(v33 + qword_1EDA0F900) = v38;
    }
    if (*(_QWORD *)(v33 + qword_1EDA0F908) == 3 && (v38 & 0x80) == 0)
      *(_QWORD *)(v33 + v37) = v38 | 0x80;
  }
  if ((v54 & 1) != 0)
  {
    v40 = *(_QWORD *)(v33 + qword_1EDA0F900);
    if ((v40 & 0x200) == 0)
      *(_QWORD *)(v33 + qword_1EDA0F900) = v40 | 0x200;
  }
  if (v16)
  {
    v41 = *(_QWORD *)(v33 + qword_1EDA0F900);
    if ((v41 & 0x400) == 0)
      *(_QWORD *)(v33 + qword_1EDA0F900) = v41 | 0x400;
  }
  if (v15)
  {
    v42 = *(_QWORD *)(v33 + qword_1EDA0F900);
    if ((v42 & 0x800) == 0)
      *(_QWORD *)(v33 + qword_1EDA0F900) = v42 | 0x800;
  }
  if (v14)
  {
    v43 = *(_QWORD *)(v33 + qword_1EDA0F900);
    if ((v43 & 0x40) == 0)
      *(_QWORD *)(v33 + qword_1EDA0F900) = v43 | 0x40;
  }
  return result;
}

uint64_t sub_1BC212A64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  unint64_t v36;
  unint64_t v37;
  char v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, unint64_t, uint64_t);
  char *v43;
  double v44;
  double v45;
  void (*v46)(char *, unint64_t);
  double v47;
  uint64_t v48;
  id v49;
  char *v50;
  double v51;
  double v52;
  double v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  unint64_t v58;
  uint64_t v59;
  char *v60;
  double v61;
  double v62;
  uint64_t result;
  double v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  id v68;
  uint64_t v69;
  id v70;
  id v71;
  id v72;
  id v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  char v81;
  uint64_t v82;
  int64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  char v87;
  uint64_t v88;
  int64_t v89;
  char v90;
  id v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  void (*v100)(uint64_t *, _QWORD);
  uint64_t v101;
  uint64_t v102;
  void *v103;
  void *v104;
  void *v105;
  void *v106;
  void *v107;
  void *v108;
  char *v109;
  void *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  id v117;
  int64_t v118;
  _QWORD *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  char *v124;
  id v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  id v129;
  uint64_t v130;
  uint64_t v131[4];
  uint64_t v132;
  uint64_t v133;
  char v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD *v137;
  uint64_t v138;
  unint64_t v139;
  unint64_t v140;

  v123 = sub_1BC2B23F0();
  v120 = *(_QWORD *)(v123 - 8);
  v3 = MEMORY[0x1E0C80A78](v123);
  v111 = (char *)&v111 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v3);
  v122 = (char *)&v111 - v6;
  MEMORY[0x1E0C80A78](v5);
  v124 = (char *)&v111 - v7;
  v8 = qword_1EDA0F900;
  v9 = *(_QWORD *)(v1 + qword_1EDA0F900);
  if ((a1 & ~v9) != 0)
    *(_QWORD *)(v1 + qword_1EDA0F900) = v9 | a1;
  sub_1BC2122D4();
  sub_1BC2B23B4();
  v115 = v1;
  v10 = v1 + qword_1EDA0F8B8;
  swift_beginAccess();
  v11 = *(_QWORD *)v10;
  if ((*(_QWORD *)v10 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v12 = sub_1BC2B5108();
    swift_bridgeObjectRelease();
    v11 = *(_QWORD *)v10;
  }
  else
  {
    v12 = *(_QWORD *)(v11 + 16);
  }
  v13 = v12 != 0;
  if ((v11 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v14 = sub_1BC2B5108();
    swift_bridgeObjectRelease();
    v11 = *(_QWORD *)v10;
  }
  else
  {
    v14 = *(_QWORD *)(v11 + 16);
  }
  if (v14)
    v15 = 0x7FFFFFFFFFFFFFFFLL;
  else
    v15 = 0;
  v112 = v8;
  if ((v11 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v16 = sub_1BC2B5108();
    swift_bridgeObjectRelease();
    v11 = *(_QWORD *)v10;
  }
  else
  {
    v16 = *(_QWORD *)(v11 + 16);
  }
  v17 = v16 != 0;
  if ((v11 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v18 = sub_1BC2B5108();
    swift_bridgeObjectRelease();
    v11 = *(_QWORD *)v10;
  }
  else
  {
    v18 = *(_QWORD *)(v11 + 16);
  }
  v19 = 0x7FFFFFFFFFFFFFFFLL;
  if (!v18)
    v19 = 0;
  v127 = v19;
  v129 = (id)v15;
  if ((v11 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v20 = sub_1BC2B5108();
    swift_bridgeObjectRelease();
    v11 = *(_QWORD *)v10;
  }
  else
  {
    v20 = *(_QWORD *)(v11 + 16);
  }
  v21 = v20 != 0;
  v114 = v10;
  if ((v11 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v22 = sub_1BC2B5108();
    swift_bridgeObjectRelease();
    v11 = *(_QWORD *)v10;
  }
  else
  {
    v22 = *(_QWORD *)(v11 + 16);
  }
  v128 = v13 << 63;
  v126 = v17 << 63;
  v121 = v21 << 63;
  if (v22)
    v23 = 0x7FFFFFFFFFFFFFFFLL;
  else
    v23 = 0;
  if ((v11 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1BC2B50CC();
    type metadata accessor for MedicationsDoseLogViewModel(0);
    sub_1BC0E519C(&qword_1EF3FFBE0, type metadata accessor for MedicationsDoseLogViewModel, (uint64_t)&protocol conformance descriptor for MedicationsDoseLogViewModel);
    sub_1BC2B47E4();
    v11 = v136;
    v119 = v137;
    v24 = v138;
    v25 = v139;
    v26 = v140;
  }
  else
  {
    v27 = -1 << *(_BYTE *)(v11 + 32);
    v28 = *(_QWORD *)(v11 + 56);
    v119 = (_QWORD *)(v11 + 56);
    v24 = ~v27;
    v29 = -v27;
    if (v29 < 64)
      v30 = ~(-1 << v29);
    else
      v30 = -1;
    v26 = v30 & v28;
    swift_bridgeObjectRetain();
    v25 = 0;
  }
  v130 = 0;
  v117 = (id)(v11 & 0x7FFFFFFFFFFFFFFFLL);
  v113 = v24;
  v118 = (unint64_t)(v24 + 64) >> 6;
  v116 = MEMORY[0x1E0DEE9B0] + 8;
  while (v11 < 0)
  {
    v33 = sub_1BC2B512C();
    if (!v33)
      goto LABEL_87;
    v132 = v33;
    type metadata accessor for MedicationsDoseLogViewModel(0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v34 = v131[0];
    swift_unknownObjectRelease();
    v10 = v25;
    v31 = v26;
    if (!v34)
      goto LABEL_87;
LABEL_57:
    v38 = sub_1BC23713C();
    v39 = __OFADD__(v130, v38 & 1);
    v130 += v38 & 1;
    if (v39)
    {
      __break(1u);
LABEL_96:
      __break(1u);
LABEL_97:
      __break(1u);
LABEL_98:
      __break(1u);
LABEL_99:
      __break(1u);
LABEL_100:
      __break(1u);
LABEL_101:
      __break(1u);
LABEL_102:
      __break(1u);
      goto LABEL_103;
    }
    v125 = (id)v31;
    v40 = v11;
    v25 = v34 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_logDate;
    swift_beginAccess();
    v41 = v120;
    v42 = *(void (**)(char *, unint64_t, uint64_t))(v120 + 16);
    v43 = v122;
    v26 = v123;
    v42(v122, v25, v123);
    sub_1BC2B2348();
    v45 = v44;
    v46 = *(void (**)(char *, unint64_t))(v41 + 8);
    v46(v43, v26);
    v47 = v45 / 3600.0;
    if ((~COERCE__INT64(v45 / 3600.0) & 0x7FF0000000000000) == 0)
      goto LABEL_96;
    if (v47 <= -9.22337204e18)
      goto LABEL_97;
    if (v47 >= 9.22337204e18)
      goto LABEL_98;
    v48 = v128;
    if (v128 <= (uint64_t)v47)
      v48 = (uint64_t)v47;
    v128 = v48;
    v49 = v129;
    if ((uint64_t)v129 >= (uint64_t)v47)
      v49 = (id)(uint64_t)v47;
    v129 = v49;
    v26 = *(_QWORD *)(v34 + 32);
    if (!v26)
    {
      v127 &= v127 >> 63;
      v126 &= ~(v126 >> 63);
      goto LABEL_81;
    }
    swift_retain();
    v50 = v122;
    sub_1BC2B32E4();
    sub_1BC2B2348();
    v52 = v51;
    swift_release();
    v46(v50, v123);
    v53 = v52 / 3600.0;
    if ((~COERCE__INT64(v52 / 3600.0) & 0x7FF0000000000000) == 0)
      goto LABEL_99;
    if (v53 <= -9.22337204e18)
      goto LABEL_100;
    if (v53 >= 9.22337204e18)
      goto LABEL_101;
    v54 = v126;
    if (v126 <= (uint64_t)v53)
      v54 = (uint64_t)v53;
    v55 = *(_QWORD *)(v34 + 32);
    v56 = v127;
    if ((uint64_t)v53 < v127)
      v56 = (uint64_t)v53;
    v127 = v56;
    v126 = v54;
    if (v55)
    {
      v57 = v122;
      v58 = v25;
      v59 = v123;
      v42(v122, v58, v123);
      swift_retain();
      v60 = v111;
      sub_1BC2B32E4();
      sub_1BC2B2348();
      v62 = v61;
      swift_release();
      v46(v60, v59);
      v46(v57, v59);
      result = swift_release();
      v64 = v62 / 3600.0;
      if ((~COERCE__INT64(v62 / 3600.0) & 0x7FF0000000000000) == 0)
        goto LABEL_130;
      if (v64 <= -9.22337204e18)
        goto LABEL_131;
      if (v64 >= 9.22337204e18)
        goto LABEL_132;
      v11 = v40;
      v65 = (uint64_t)v64;
      v66 = v121;
      if (v121 <= (uint64_t)v64)
        v66 = (uint64_t)v64;
      v121 = v66;
LABEL_84:
      v25 = v10;
      v26 = (unint64_t)v125;
      if (v65 < v23)
        v23 = v65;
    }
    else
    {
LABEL_81:
      swift_release();
      v11 = v40;
      if (v121 < 0)
      {
        v121 = 0;
        v65 = 0;
        goto LABEL_84;
      }
      v23 &= v23 >> 63;
      v25 = v10;
      v26 = (unint64_t)v125;
    }
  }
  if (v26)
  {
    v31 = (v26 - 1) & v26;
    v32 = __clz(__rbit64(v26)) | (v25 << 6);
    v10 = v25;
    goto LABEL_56;
  }
  v35 = v25 + 1;
  if (__OFADD__(v25, 1))
    goto LABEL_102;
  if (v35 >= v118)
    goto LABEL_87;
  v36 = v119[v35];
  v10 = v25 + 1;
  if (v36)
    goto LABEL_55;
  v10 = v25 + 2;
  if ((uint64_t)(v25 + 2) >= v118)
    goto LABEL_87;
  v36 = v119[v10];
  if (v36)
    goto LABEL_55;
  v10 = v25 + 3;
  if ((uint64_t)(v25 + 3) >= v118)
    goto LABEL_87;
  v36 = v119[v10];
  if (v36)
    goto LABEL_55;
  v10 = v25 + 4;
  if ((uint64_t)(v25 + 4) >= v118)
    goto LABEL_87;
  v36 = v119[v10];
  if (v36)
  {
LABEL_55:
    v31 = (v36 - 1) & v36;
    v32 = __clz(__rbit64(v36)) + (v10 << 6);
LABEL_56:
    v34 = *(_QWORD *)(*(_QWORD *)(v11 + 48) + 8 * v32);
    swift_retain();
    if (!v34)
      goto LABEL_87;
    goto LABEL_57;
  }
  v37 = v25 + 5;
  while (v118 != v37)
  {
    v36 = v119[v37++];
    if (v36)
    {
      v10 = v37 - 1;
      goto LABEL_55;
    }
  }
LABEL_87:
  sub_1BC1061A8();
  v25 = 0x1E0CB3000uLL;
  v67 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
  v125 = objc_msgSend(v67, sel_initWithInteger_, v128);
  v68 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
  v122 = (char *)objc_msgSend(v68, sel_initWithInteger_, v129);
  v69 = v115;
  v26 = *(_QWORD *)(v115 + qword_1EDA0F908);
  if (v26 == 1)
  {
    v70 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
    v126 = (uint64_t)objc_msgSend(v70, sel_initWithInteger_, v126);
    v71 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
    v119 = objc_msgSend(v71, sel_initWithInteger_, v127);
    v72 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
    v121 = (uint64_t)objc_msgSend(v72, sel_initWithInteger_, v121);
    v73 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, v23);
    v69 = v115;
  }
  else
  {
    v73 = 0;
    v121 = 0;
    v119 = 0;
    v126 = 0;
  }
  v10 = v114;
  v74 = *(_QWORD *)(v69 + qword_1EDA0F890);
  v118 = (int64_t)v73;
  if (!v74)
  {
    v117 = 0;
    goto LABEL_106;
  }
  v75 = *(_QWORD *)(v74 + 16);
  if (v75 >> 62)
  {
LABEL_103:
    swift_retain();
    swift_bridgeObjectRetain();
    v76 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
    if (v26 == 1)
      goto LABEL_93;
    goto LABEL_104;
  }
  v76 = *(_QWORD *)((v75 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_retain();
  if (v26 == 1)
  {
LABEL_93:
    v117 = objc_msgSend(objc_allocWithZone(*(Class *)(v25 + 2024)), sel_initWithBool_, v76 != v130);
    goto LABEL_105;
  }
LABEL_104:
  v117 = 0;
LABEL_105:
  swift_release();
LABEL_106:
  v127 = v26;
  v77 = *(_QWORD *)v10;
  v129 = (id)(*(_QWORD *)v10 & 0xC000000000000001);
  if (v129)
  {
    swift_bridgeObjectRetain();
    v78 = sub_1BC2B5108();
    if (v78)
      goto LABEL_108;
LABEL_111:
    swift_bridgeObjectRelease();
LABEL_128:
    v129 = (id)objc_opt_self();
    v101 = *(_QWORD *)(v115 + qword_1EDA0F8D0);
    v128 = *(_QWORD *)(v115 + v112);
    v102 = *(_QWORD *)(v115 + qword_1EDA0F8C8);
    v103 = (void *)sub_1BC2B4580();
    swift_bridgeObjectRelease();
    v104 = v117;
    v105 = (void *)v118;
    v106 = (void *)v121;
    v107 = v119;
    v108 = (void *)v126;
    v109 = v122;
    v110 = v125;
    objc_msgSend(v129, sel_submitLogMetricWithHealthStore_actions_provenance_context_medicationIdentifiers_loggingMultipleMeds_hoursAgoLoggedForMax_hoursAgoLoggedForMin_hoursFromScheduledTimeLoggedMax_hoursFromScheduledTimeLoggedMin_hoursFromScheduledToTakenOrSkippedMax_hoursFromScheduledToTakenOrSkippedMin_isPartiallyLoggingScheduledMeds_dataSource_, v101, v128, v102, v127, v103, v130 > 1, v125, v122, v126, v119, v121, v118, v117, v101);

    return (*(uint64_t (**)(char *, uint64_t))(v120 + 8))(v124, v123);
  }
  v78 = *(_QWORD *)(v77 + 16);
  swift_bridgeObjectRetain();
  if (!v78)
    goto LABEL_111;
LABEL_108:
  v135 = MEMORY[0x1E0DEE9D8];
  sub_1BC125B54(0, v78 & ~(v78 >> 63), 0);
  if (v129)
  {
    result = sub_1BC2B50C0();
    v80 = 1;
  }
  else
  {
    result = sub_1BC2180C0(v77);
    v80 = v81 & 1;
  }
  v132 = result;
  v133 = v79;
  v134 = v80;
  if ((v78 & 0x8000000000000000) == 0)
  {
    v82 = v77 & 0xFFFFFFFFFFFFFF8;
    if (v77 < 0)
      v82 = v77;
    v128 = v82;
    do
    {
      while (1)
      {
        v89 = v132;
        v88 = v133;
        v90 = v134;
        v91 = objc_msgSend(*(id *)(sub_1BC217B20(v132, v133, v134, v77) + 16), sel_semanticIdentifier);
        v92 = objc_msgSend(v91, sel_stringValue);

        v93 = sub_1BC2B4460();
        v95 = v94;
        swift_release();

        v96 = v135;
        result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          result = sub_1BC125B54(0, *(_QWORD *)(v96 + 16) + 1, 1);
          v96 = v135;
        }
        v98 = *(_QWORD *)(v96 + 16);
        v97 = *(_QWORD *)(v96 + 24);
        if (v98 >= v97 >> 1)
        {
          result = sub_1BC125B54(v97 > 1, v98 + 1, 1);
          v96 = v135;
        }
        *(_QWORD *)(v96 + 16) = v98 + 1;
        v99 = v96 + 16 * v98;
        *(_QWORD *)(v99 + 32) = v93;
        *(_QWORD *)(v99 + 40) = v95;
        if (v129)
          break;
        v83 = sub_1BC217A28(v89, v88, v90, v77);
        v85 = v84;
        v87 = v86;
        sub_1BC1648A8(v89, v88, v90);
        v132 = v83;
        v133 = v85;
        v134 = v87 & 1;
        if (!--v78)
          goto LABEL_127;
      }
      if ((v90 & 1) == 0)
        goto LABEL_133;
      if (sub_1BC2B50D8())
        swift_isUniquelyReferenced_nonNull_native();
      sub_1BC2185D4(0, &qword_1EF3FFBE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEB2B0]);
      v100 = (void (*)(uint64_t *, _QWORD))sub_1BC2B47CC();
      sub_1BC2B5150();
      v100(v131, 0);
      --v78;
    }
    while (v78);
LABEL_127:
    sub_1BC1648A8(v132, v133, v134);
    swift_bridgeObjectRelease();
    goto LABEL_128;
  }
  __break(1u);
LABEL_130:
  __break(1u);
LABEL_131:
  __break(1u);
LABEL_132:
  __break(1u);
LABEL_133:
  __break(1u);
  return result;
}

void MedicationsLogViewController.__allocating_init(dataSource:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void MedicationsLogViewController.init(dataSource:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id MedicationsLogViewController.__allocating_init(collectionViewLayout:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCollectionViewLayout_, a1);

  return v3;
}

void MedicationsLogViewController.init(collectionViewLayout:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1BC213A04(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1BC213A34()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_release();
  swift_release();

}

id MedicationsLogViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationsLogViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1BC213B34(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_release();
  swift_release();

}

uint64_t sub_1BC213C0C(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  char isUniquelyReferenced_nonNull_native;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_1BC2B5114();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1BC0E1D38(0, &qword_1EDA0FDE8);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      result = 0;
      *a1 = v26;
      return result;
    }
    result = sub_1BC2B5108();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_1BC2146EC(v7, result + 1);
    v27 = v21;
    if (*(_QWORD *)(v21 + 24) <= *(_QWORD *)(v21 + 16))
    {
      v25 = v8;
      sub_1BC214D68();
      v22 = v27;
    }
    else
    {
      v22 = v21;
      v23 = v8;
    }
    sub_1BC21599C((uint64_t)v8, v22);
    *v3 = v22;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_1BC2B4D78();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      sub_1BC0E1D38(0, &qword_1EDA0FDE8);
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_1BC2B4D84();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_1BC2B4D84();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v28 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_1BC215A1C((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *v2 = v28;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1BC213EA8(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v27;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) == 0)
  {
    sub_1BC2B5450();
    swift_bridgeObjectRetain();
    sub_1BC236B0C();
    sub_1BC2B44D8();
    swift_bridgeObjectRelease();
    v9 = sub_1BC2B548C();
    v10 = -1 << *(_BYTE *)(v6 + 32);
    v11 = v9 & ~v10;
    if (((*(_QWORD *)(v6 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
    {
      swift_retain();
      v12 = sub_1BC236B0C();
      v14 = v13;
      if (v12 == sub_1BC236B0C() && v14 == v15)
      {
LABEL_29:
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease_n();
        goto LABEL_30;
      }
      v17 = sub_1BC2B53CC();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v17 & 1) != 0)
      {
LABEL_13:
        swift_release();
        swift_bridgeObjectRelease();
LABEL_30:
        *a1 = *(_QWORD *)(*(_QWORD *)(*v2 + 48) + 8 * v11);
        swift_retain();
        return 0;
      }
      v21 = ~v10;
      while (1)
      {
        v11 = (v11 + 1) & v21;
        if (((*(_QWORD *)(v6 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
          break;
        swift_retain();
        v22 = sub_1BC236B0C();
        v24 = v23;
        if (v22 == sub_1BC236B0C() && v24 == v25)
          goto LABEL_29;
        v27 = sub_1BC2B53CC();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v27 & 1) != 0)
          goto LABEL_13;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v33 = *v2;
    *v2 = 0x8000000000000000;
    v29 = swift_retain();
    sub_1BC215BA0(v29, v11, isUniquelyReferenced_nonNull_native);
    *v2 = v33;
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  if (v6 < 0)
    v7 = *v2;
  else
    v7 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  swift_retain();
  v8 = sub_1BC2B5114();
  swift_release();
  if (!v8)
  {
    result = sub_1BC2B5108();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v19 = sub_1BC2148FC(v7, result + 1);
    v32 = v19;
    if (*(_QWORD *)(v19 + 24) <= *(_QWORD *)(v19 + 16))
    {
      swift_retain();
      sub_1BC21500C();
      v20 = v32;
    }
    else
    {
      v20 = v19;
      swift_retain();
    }
    sub_1BC2158E0(a2, v20);
    *v3 = v20;
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  swift_bridgeObjectRelease();
  swift_release();
  type metadata accessor for MedicationsDoseLogViewModel(0);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  *a1 = v31;
  swift_unknownObjectRelease();
  return 0;
}

uint64_t sub_1BC21422C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  BOOL v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t *v28;
  uint64_t v30;

  v10 = *v5;
  sub_1BC2B5450();
  swift_bridgeObjectRetain();
  sub_1BC2B44D8();
  sub_1BC2B44D8();
  v11 = sub_1BC2B548C();
  v12 = -1 << *(_BYTE *)(v10 + 32);
  v13 = v11 & ~v12;
  v14 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v15 = ~v12;
    v16 = *(_QWORD *)(v10 + 48);
    while (1)
    {
      v17 = (_QWORD *)(v16 + 32 * v13);
      v18 = v17[2];
      v19 = v17[3];
      v20 = *v17 == a2 && v17[1] == a3;
      if (v20 || (sub_1BC2B53CC() & 1) != 0)
      {
        v21 = v18 == a4 && v19 == a5;
        if (v21 || (sub_1BC2B53CC() & 1) != 0)
          break;
      }
      v13 = (v13 + 1) & v15;
      if (((*(_QWORD *)(v14 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
        goto LABEL_15;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v22 = (uint64_t *)(*(_QWORD *)(*v28 + 48) + 32 * v13);
    v23 = v22[1];
    v24 = v22[2];
    v25 = v22[3];
    *a1 = *v22;
    a1[1] = v23;
    a1[2] = v24;
    a1[3] = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return 0;
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = *v28;
    *v28 = 0x8000000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BC215DFC(a2, a3, a4, a5, v13, isUniquelyReferenced_nonNull_native);
    *v28 = v30;
    swift_bridgeObjectRelease();
    *a1 = a2;
    a1[1] = a3;
    result = 1;
    a1[2] = a4;
    a1[3] = a5;
  }
  return result;
}

uint64_t sub_1BC214430(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_1BC2B5114();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1BC2B5108();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_1BC214B28(v7, result + 1);
    v29 = v21;
    v22 = *(_QWORD *)(v21 + 16);
    if (*(_QWORD *)(v21 + 24) <= v22)
    {
      v26 = v22 + 1;
      v27 = v8;
      sub_1BC215624(v26, &qword_1EF3FFC08, (unint64_t *)&qword_1EDA0FDA0, 0x1E0D2C4D8, (unint64_t *)&qword_1EDA0FDA8);
      v23 = v29;
    }
    else
    {
      v23 = v21;
      v24 = v8;
    }
    sub_1BC21599C((uint64_t)v8, v23);
    *v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_1BC2B4D78();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_1BC2B4D84();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_1BC2B4D84();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_1BC215FC0((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1BC2146EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (a2)
  {
    sub_1BC2186EC(0, &qword_1EF3FFC00, &qword_1EDA0FDE8, 0x1E0CB37E8, (unint64_t *)&qword_1EDA0FDF0);
    v2 = sub_1BC2B5198();
    v14 = v2;
    sub_1BC2B50CC();
    if (sub_1BC2B512C())
    {
      sub_1BC0E1D38(0, &qword_1EDA0FDE8);
      do
      {
        swift_dynamicCast();
        v2 = v14;
        if (*(_QWORD *)(v14 + 24) <= *(_QWORD *)(v14 + 16))
        {
          sub_1BC214D68();
          v2 = v14;
        }
        result = sub_1BC2B4D78();
        v4 = v2 + 56;
        v5 = -1 << *(_BYTE *)(v2 + 32);
        v6 = result & ~v5;
        v7 = v6 >> 6;
        if (((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          v8 = __clz(__rbit64((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v9 = 0;
          v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v11 = v7 == v10;
            if (v7 == v10)
              v7 = 0;
            v9 |= v11;
            v12 = *(_QWORD *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(_QWORD *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v8) = v13;
        ++*(_QWORD *)(v2 + 16);
      }
      while (sub_1BC2B512C());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E8];
  }
  return v2;
}

uint64_t sub_1BC2148FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (a2)
  {
    sub_1BC2185D4(0, &qword_1EF3FFBF0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEC268]);
    v2 = sub_1BC2B5198();
    v14 = v2;
    sub_1BC2B50CC();
    if (sub_1BC2B512C())
    {
      type metadata accessor for MedicationsDoseLogViewModel(0);
      do
      {
        swift_dynamicCast();
        v2 = v14;
        if (*(_QWORD *)(v14 + 24) <= *(_QWORD *)(v14 + 16))
        {
          sub_1BC21500C();
          v2 = v14;
        }
        sub_1BC2B5450();
        sub_1BC236B0C();
        sub_1BC2B44D8();
        swift_bridgeObjectRelease();
        result = sub_1BC2B548C();
        v4 = v2 + 56;
        v5 = -1 << *(_BYTE *)(v2 + 32);
        v6 = result & ~v5;
        v7 = v6 >> 6;
        if (((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          v8 = __clz(__rbit64((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v9 = 0;
          v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v11 = v7 == v10;
            if (v7 == v10)
              v7 = 0;
            v9 |= v11;
            v12 = *(_QWORD *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(_QWORD *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v8) = v13;
        ++*(_QWORD *)(v2 + 16);
      }
      while (sub_1BC2B512C());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E8];
  }
  return v2;
}

uint64_t sub_1BC214B28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (a2)
  {
    sub_1BC2186EC(0, &qword_1EF3FFC08, (unint64_t *)&qword_1EDA0FDA0, 0x1E0D2C4D8, (unint64_t *)&qword_1EDA0FDA8);
    v2 = sub_1BC2B5198();
    v15 = v2;
    sub_1BC2B50CC();
    if (sub_1BC2B512C())
    {
      sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
      do
      {
        swift_dynamicCast();
        v2 = v15;
        v9 = *(_QWORD *)(v15 + 16);
        if (*(_QWORD *)(v15 + 24) <= v9)
        {
          sub_1BC215624(v9 + 1, &qword_1EF3FFC08, (unint64_t *)&qword_1EDA0FDA0, 0x1E0D2C4D8, (unint64_t *)&qword_1EDA0FDA8);
          v2 = v15;
        }
        result = sub_1BC2B4D78();
        v4 = v2 + 56;
        v5 = -1 << *(_BYTE *)(v2 + 32);
        v6 = result & ~v5;
        v7 = v6 >> 6;
        if (((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          v8 = __clz(__rbit64((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v10 = 0;
          v11 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v11 && (v10 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v12 = v7 == v11;
            if (v7 == v11)
              v7 = 0;
            v10 |= v12;
            v13 = *(_QWORD *)(v4 + 8 * v7);
          }
          while (v13 == -1);
          v8 = __clz(__rbit64(~v13)) + (v7 << 6);
        }
        *(_QWORD *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v8) = v14;
        ++*(_QWORD *)(v2 + 16);
      }
      while (sub_1BC2B512C());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E8];
  }
  return v2;
}

uint64_t sub_1BC214D68()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;

  v1 = v0;
  v2 = *v0;
  sub_1BC2186EC(0, &qword_1EF3FFC00, &qword_1EDA0FDE8, 0x1E0CB37E8, (unint64_t *)&qword_1EDA0FDF0);
  v3 = sub_1BC2B518C();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v28 = v0;
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v6 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v7 = ~(-1 << v5);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v9 = (unint64_t)(v5 + 63) >> 6;
    v10 = v3 + 56;
    result = swift_retain();
    v12 = 0;
    while (1)
    {
      if (v8)
      {
        v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v15 = v14 | (v12 << 6);
      }
      else
      {
        v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
          return result;
        }
        if (v16 >= v9)
          goto LABEL_31;
        v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          v12 = v16 + 1;
          if (v16 + 1 >= v9)
            goto LABEL_31;
          v17 = v6[v12];
          if (!v17)
          {
            v18 = v16 + 2;
            if (v18 >= v9)
            {
LABEL_31:
              swift_release();
              v1 = v28;
              v27 = 1 << *(_BYTE *)(v2 + 32);
              if (v27 > 63)
                bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v6 = -1 << v27;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v17 = v6[v18];
            if (!v17)
            {
              while (1)
              {
                v12 = v18 + 1;
                if (__OFADD__(v18, 1))
                  goto LABEL_37;
                if (v12 >= v9)
                  goto LABEL_31;
                v17 = v6[v12];
                ++v18;
                if (v17)
                  goto LABEL_21;
              }
            }
            v12 = v18;
          }
        }
LABEL_21:
        v8 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      v19 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
      result = sub_1BC2B4D78();
      v20 = -1 << *(_BYTE *)(v4 + 32);
      v21 = result & ~v20;
      v22 = v21 >> 6;
      if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_36;
          }
          v25 = v22 == v24;
          if (v22 == v24)
            v22 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v13) = v19;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1BC21500C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = *v0;
  sub_1BC2185D4(0, &qword_1EF3FFBF0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEC268]);
  v3 = sub_1BC2B518C();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v6 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v7 = ~(-1 << v5);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v9 = (unint64_t)(v5 + 63) >> 6;
    v10 = v3 + 56;
    result = swift_retain();
    v12 = 0;
    while (1)
    {
      if (v8)
      {
        v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v15 = v14 | (v12 << 6);
      }
      else
      {
        v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9)
          goto LABEL_33;
        v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          v12 = v16 + 1;
          if (v16 + 1 >= v9)
            goto LABEL_33;
          v17 = v6[v12];
          if (!v17)
          {
            v12 = v16 + 2;
            if (v16 + 2 >= v9)
              goto LABEL_33;
            v17 = v6[v12];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v27 = 1 << *(_BYTE *)(v2 + 32);
                if (v27 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v27;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  v12 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v12 >= v9)
                    goto LABEL_33;
                  v17 = v6[v12];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v12 = v18;
            }
          }
        }
LABEL_23:
        v8 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      v19 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
      sub_1BC2B5450();
      sub_1BC236B0C();
      sub_1BC2B44D8();
      swift_bridgeObjectRelease();
      result = sub_1BC2B548C();
      v20 = -1 << *(_BYTE *)(v4 + 32);
      v21 = result & ~v20;
      v22 = v21 >> 6;
      if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v25 = v22 == v24;
          if (v22 == v24)
            v22 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v13) = v19;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1BC2152EC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  _QWORD *v33;

  v1 = v0;
  v2 = *v0;
  sub_1BC1E970C();
  v3 = sub_1BC2B518C();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v33 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v32 = (unint64_t)(v5 + 63) >> 6;
    v8 = v3 + 56;
    result = swift_retain();
    v10 = 0;
    while (1)
    {
      if (v7)
      {
        v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v14 = v13 | (v10 << 6);
      }
      else
      {
        v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v32)
          goto LABEL_33;
        v16 = v33[v15];
        ++v10;
        if (!v16)
        {
          v10 = v15 + 1;
          if (v15 + 1 >= v32)
            goto LABEL_33;
          v16 = v33[v10];
          if (!v16)
          {
            v10 = v15 + 2;
            if (v15 + 2 >= v32)
              goto LABEL_33;
            v16 = v33[v10];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v32)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v31 = 1 << *(_BYTE *)(v2 + 32);
                if (v31 > 63)
                  bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v33 = -1 << v31;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v33[v17];
              if (!v16)
              {
                while (1)
                {
                  v10 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v10 >= v32)
                    goto LABEL_33;
                  v16 = v33[v10];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v10 = v17;
            }
          }
        }
LABEL_23:
        v7 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v10 << 6);
      }
      v18 = v2;
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 32 * v14);
      v20 = *v19;
      v21 = v19[1];
      v22 = v19[2];
      v23 = v19[3];
      sub_1BC2B5450();
      sub_1BC2B44D8();
      sub_1BC2B44D8();
      result = sub_1BC2B548C();
      v24 = -1 << *(_BYTE *)(v4 + 32);
      v25 = result & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v8 + 8 * (v25 >> 6))) != 0)
      {
        v11 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v8 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v8 + 8 * v26);
        }
        while (v30 == -1);
        v11 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      v12 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 32 * v11);
      *v12 = v20;
      v12[1] = v21;
      v12[2] = v22;
      v12[3] = v23;
      ++*(_QWORD *)(v4 + 16);
      v2 = v18;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1BC215600(uint64_t a1)
{
  return sub_1BC215624(a1, &qword_1EDA0FE28, (unint64_t *)&qword_1EDA0FD88, 0x1E0D2C460, (unint64_t *)&unk_1EDA0FD90);
}

uint64_t sub_1BC215624(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;

  v6 = v5;
  v7 = *v5;
  sub_1BC2186EC(0, a2, a3, a4, a5);
  v8 = sub_1BC2B518C();
  v9 = v8;
  if (*(_QWORD *)(v7 + 16))
  {
    v33 = v5;
    v10 = 1 << *(_BYTE *)(v7 + 32);
    v11 = (_QWORD *)(v7 + 56);
    if (v10 < 64)
      v12 = ~(-1 << v10);
    else
      v12 = -1;
    v13 = v12 & *(_QWORD *)(v7 + 56);
    v14 = (unint64_t)(v10 + 63) >> 6;
    v15 = v8 + 56;
    result = swift_retain();
    v17 = 0;
    while (1)
    {
      if (v13)
      {
        v19 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v20 = v19 | (v17 << 6);
      }
      else
      {
        v21 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v21 >= v14)
          goto LABEL_33;
        v22 = v11[v21];
        ++v17;
        if (!v22)
        {
          v17 = v21 + 1;
          if (v21 + 1 >= v14)
            goto LABEL_33;
          v22 = v11[v17];
          if (!v22)
          {
            v17 = v21 + 2;
            if (v21 + 2 >= v14)
              goto LABEL_33;
            v22 = v11[v17];
            if (!v22)
            {
              v23 = v21 + 3;
              if (v23 >= v14)
              {
LABEL_33:
                swift_release();
                v6 = v33;
                v32 = 1 << *(_BYTE *)(v7 + 32);
                if (v32 > 63)
                  bzero((void *)(v7 + 56), ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v11 = -1 << v32;
                *(_QWORD *)(v7 + 16) = 0;
                break;
              }
              v22 = v11[v23];
              if (!v22)
              {
                while (1)
                {
                  v17 = v23 + 1;
                  if (__OFADD__(v23, 1))
                    goto LABEL_39;
                  if (v17 >= v14)
                    goto LABEL_33;
                  v22 = v11[v17];
                  ++v23;
                  if (v22)
                    goto LABEL_23;
                }
              }
              v17 = v23;
            }
          }
        }
LABEL_23:
        v13 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v17 << 6);
      }
      v24 = *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v20);
      result = sub_1BC2B4D78();
      v25 = -1 << *(_BYTE *)(v9 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v15 + 8 * (v26 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v15 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v15 + 8 * v27);
        }
        while (v31 == -1);
        v18 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v18) = v24;
      ++*(_QWORD *)(v9 + 16);
    }
  }
  result = swift_release();
  *v6 = v9;
  return result;
}

uint64_t sub_1BC2158BC(uint64_t a1)
{
  return sub_1BC215624(a1, &qword_1EF3FEAE8, (unint64_t *)&qword_1EDA0FD68, 0x1E0D2C420, &qword_1EDA0FD70);
}

unint64_t sub_1BC2158E0(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  sub_1BC2B5450();
  sub_1BC236B0C();
  sub_1BC2B44D8();
  swift_bridgeObjectRelease();
  sub_1BC2B548C();
  result = sub_1BC2B50B4();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

unint64_t sub_1BC21599C(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  sub_1BC2B4D78();
  result = sub_1BC2B50B4();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

void sub_1BC215A1C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_1BC214D68();
  }
  else
  {
    if (v7 > v6)
    {
      sub_1BC216168();
      goto LABEL_14;
    }
    sub_1BC216854();
  }
  v8 = *v3;
  v9 = sub_1BC2B4D78();
  v10 = -1 << *(_BYTE *)(v8 + 32);
  a2 = v9 & ~v10;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    sub_1BC0E1D38(0, &qword_1EDA0FDE8);
    v11 = *(id *)(*(_QWORD *)(v8 + 48) + 8 * a2);
    v12 = sub_1BC2B4D84();

    if ((v12 & 1) != 0)
    {
LABEL_13:
      sub_1BC2B53E4();
      __break(1u);
    }
    else
    {
      v13 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v14 = *(id *)(*(_QWORD *)(v8 + 48) + 8 * a2);
        v15 = sub_1BC2B4D84();

        if ((v15 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v16 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v16 + 48) + 8 * a2) = a1;
  v17 = *(_QWORD *)(v16 + 16);
  v18 = __OFADD__(v17, 1);
  v19 = v17 + 1;
  if (v18)
    __break(1u);
  else
    *(_QWORD *)(v16 + 16) = v19;
}

uint64_t sub_1BC215BA0(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_22;
  if ((a3 & 1) != 0)
  {
    sub_1BC21500C();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_1BC21631C();
LABEL_22:
      v23 = *v3;
      *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
      *(_QWORD *)(*(_QWORD *)(v23 + 48) + 8 * a2) = v5;
      v24 = *(_QWORD *)(v23 + 16);
      v25 = __OFADD__(v24, 1);
      v26 = v24 + 1;
      if (!v25)
      {
        *(_QWORD *)(v23 + 16) = v26;
        return result;
      }
      __break(1u);
      goto LABEL_25;
    }
    sub_1BC216AD4();
  }
  v8 = *v3;
  sub_1BC2B5450();
  sub_1BC236B0C();
  sub_1BC2B44D8();
  swift_bridgeObjectRelease();
  result = sub_1BC2B548C();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
    goto LABEL_22;
  type metadata accessor for MedicationsDoseLogViewModel(0);
  swift_retain();
  v10 = sub_1BC236B0C();
  v12 = v11;
  if (v10 == sub_1BC236B0C() && v12 == v13)
  {
LABEL_25:
    swift_release();
    swift_bridgeObjectRelease_n();
    goto LABEL_26;
  }
  v15 = sub_1BC2B53CC();
  swift_release();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v15 & 1) == 0)
  {
    v16 = ~v9;
    do
    {
      a2 = (a2 + 1) & v16;
      if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
        goto LABEL_22;
      swift_retain();
      v17 = sub_1BC236B0C();
      v19 = v18;
      if (v17 == sub_1BC236B0C() && v19 == v20)
        goto LABEL_25;
      v22 = sub_1BC2B53CC();
      swift_release();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
    }
    while ((v22 & 1) == 0);
  }
LABEL_26:
  result = sub_1BC2B53E4();
  __break(1u);
  return result;
}

uint64_t sub_1BC215DFC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, char a6)
{
  uint64_t *v6;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;

  v11 = result;
  v12 = *(_QWORD *)(*v6 + 16);
  v13 = *(_QWORD *)(*v6 + 24);
  if (v13 > v12 && (a6 & 1) != 0)
    goto LABEL_22;
  if ((a6 & 1) != 0)
  {
    sub_1BC2152EC();
  }
  else
  {
    if (v13 > v12)
    {
      result = (uint64_t)sub_1BC2164D0();
      goto LABEL_22;
    }
    sub_1BC216D88();
  }
  v14 = *v6;
  sub_1BC2B5450();
  sub_1BC2B44D8();
  sub_1BC2B44D8();
  result = sub_1BC2B548C();
  v15 = -1 << *(_BYTE *)(v14 + 32);
  a5 = result & ~v15;
  v16 = v14 + 56;
  if (((*(_QWORD *)(v14 + 56 + ((a5 >> 3) & 0xFFFFFFFFFFFFF8)) >> a5) & 1) != 0)
  {
    v17 = ~v15;
    v18 = *(_QWORD *)(v14 + 48);
    while (1)
    {
      v19 = (_QWORD *)(v18 + 32 * a5);
      v20 = v19[2];
      v21 = v19[3];
      v22 = *v19 == v11 && v19[1] == a2;
      if (v22 || (result = sub_1BC2B53CC(), (result & 1) != 0))
      {
        if (v20 == a3 && v21 == a4)
          break;
        result = sub_1BC2B53CC();
        if ((result & 1) != 0)
          break;
      }
      a5 = (a5 + 1) & v17;
      if (((*(_QWORD *)(v16 + ((a5 >> 3) & 0xFFFFFFFFFFFFF8)) >> a5) & 1) == 0)
        goto LABEL_22;
    }
    result = sub_1BC2B53E4();
    __break(1u);
  }
LABEL_22:
  v24 = *v29;
  *(_QWORD *)(*v29 + 8 * (a5 >> 6) + 56) |= 1 << a5;
  v25 = (uint64_t *)(*(_QWORD *)(v24 + 48) + 32 * a5);
  *v25 = v11;
  v25[1] = a2;
  v25[2] = a3;
  v25[3] = a4;
  v26 = *(_QWORD *)(v24 + 16);
  v27 = __OFADD__(v26, 1);
  v28 = v26 + 1;
  if (v27)
    __break(1u);
  else
    *(_QWORD *)(v24 + 16) = v28;
  return result;
}

void sub_1BC215FC0(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_1BC215624(v6 + 1, &qword_1EF3FFC08, (unint64_t *)&qword_1EDA0FDA0, 0x1E0D2C4D8, (unint64_t *)&qword_1EDA0FDA8);
  }
  else
  {
    if (v7 > v6)
    {
      sub_1BC21668C();
      goto LABEL_14;
    }
    sub_1BC21706C();
  }
  v8 = *v3;
  v9 = sub_1BC2B4D78();
  v10 = -1 << *(_BYTE *)(v8 + 32);
  a2 = v9 & ~v10;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
    v11 = *(id *)(*(_QWORD *)(v8 + 48) + 8 * a2);
    v12 = sub_1BC2B4D84();

    if ((v12 & 1) != 0)
    {
LABEL_13:
      sub_1BC2B53E4();
      __break(1u);
    }
    else
    {
      v13 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v14 = *(id *)(*(_QWORD *)(v8 + 48) + 8 * a2);
        v15 = sub_1BC2B4D84();

        if ((v15 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v16 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v16 + 48) + 8 * a2) = a1;
  v17 = *(_QWORD *)(v16 + 16);
  v18 = __OFADD__(v17, 1);
  v19 = v17 + 1;
  if (v18)
    __break(1u);
  else
    *(_QWORD *)(v16 + 16) = v19;
}

id sub_1BC216168()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  sub_1BC2186EC(0, &qword_1EF3FFC00, &qword_1EDA0FDE8, 0x1E0CB37E8, (unint64_t *)&qword_1EDA0FDF0);
  v2 = *v0;
  v3 = sub_1BC2B5180();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_23:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v6 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v8 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v9 = 1 << *(_BYTE *)(v2 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(v2 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v8 << 6);
      goto LABEL_9;
    }
    v17 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v17 >= v12)
      goto LABEL_23;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v8;
    if (!v18)
    {
      v8 = v17 + 1;
      if (v17 + 1 >= v12)
        goto LABEL_23;
      v18 = *(_QWORD *)(v6 + 8 * v8);
      if (!v18)
        break;
    }
LABEL_22:
    v11 = (v18 - 1) & v18;
    v14 = __clz(__rbit64(v18)) + (v8 << 6);
LABEL_9:
    v15 = 8 * v14;
    v16 = *(void **)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v15) = v16;
    result = v16;
  }
  v19 = v17 + 2;
  if (v19 >= v12)
    goto LABEL_23;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v8 = v19;
    goto LABEL_22;
  }
  while (1)
  {
    v8 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v8 >= v12)
      goto LABEL_23;
    v18 = *(_QWORD *)(v6 + 8 * v8);
    ++v19;
    if (v18)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_1BC21631C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  sub_1BC2185D4(0, &qword_1EF3FFBF0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEC268]);
  v2 = *v0;
  v3 = sub_1BC2B5180();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    result = (void *)swift_retain();
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1BC2164D0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  sub_1BC1E970C();
  v2 = *v0;
  v3 = sub_1BC2B5180();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_28;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_28;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
      {
        v9 = v22 + 2;
        if (v22 + 2 >= v13)
          goto LABEL_28;
        v23 = *(_QWORD *)(v6 + 8 * v9);
        if (!v23)
          break;
      }
    }
LABEL_27:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 32 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = v17[2];
    v20 = v17[3];
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    v21[2] = v19;
    v21[3] = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 3;
  if (v24 >= v13)
    goto LABEL_28;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1BC21668C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  sub_1BC2186EC(0, &qword_1EF3FFC08, (unint64_t *)&qword_1EDA0FDA0, 0x1E0D2C4D8, (unint64_t *)&qword_1EDA0FDA8);
  v2 = *v0;
  v3 = sub_1BC2B5180();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_25:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v6 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v8 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v9 = 1 << *(_BYTE *)(v2 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(v2 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v8 << 6);
      goto LABEL_9;
    }
    v17 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v17 >= v12)
      goto LABEL_25;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v8;
    if (!v18)
    {
      v8 = v17 + 1;
      if (v17 + 1 >= v12)
        goto LABEL_25;
      v18 = *(_QWORD *)(v6 + 8 * v8);
      if (!v18)
      {
        v8 = v17 + 2;
        if (v17 + 2 >= v12)
          goto LABEL_25;
        v18 = *(_QWORD *)(v6 + 8 * v8);
        if (!v18)
          break;
      }
    }
LABEL_24:
    v11 = (v18 - 1) & v18;
    v14 = __clz(__rbit64(v18)) + (v8 << 6);
LABEL_9:
    v15 = 8 * v14;
    v16 = *(void **)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v15) = v16;
    result = v16;
  }
  v19 = v17 + 3;
  if (v19 >= v12)
    goto LABEL_25;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v8 = v19;
    goto LABEL_24;
  }
  while (1)
  {
    v8 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v8 >= v12)
      goto LABEL_25;
    v18 = *(_QWORD *)(v6 + 8 * v8);
    ++v19;
    if (v18)
      goto LABEL_24;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1BC216854()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t *v27;

  v1 = v0;
  v2 = *v0;
  sub_1BC2186EC(0, &qword_1EF3FFC00, &qword_1EDA0FDE8, 0x1E0CB37E8, (unint64_t *)&qword_1EDA0FDF0);
  v3 = sub_1BC2B518C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_32:
    *v1 = v4;
    return result;
  }
  v27 = v0;
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v9 = (unint64_t)(v5 + 63) >> 6;
  v10 = v3 + 56;
  result = swift_retain_n();
  v12 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v12 << 6);
      goto LABEL_21;
    }
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    if (v16 >= v9)
      goto LABEL_30;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      v12 = v16 + 1;
      if (v16 + 1 >= v9)
        goto LABEL_30;
      v17 = *(_QWORD *)(v6 + 8 * v12);
      if (!v17)
      {
        v18 = v16 + 2;
        if (v18 >= v9)
        {
LABEL_30:
          result = swift_release_n();
          v1 = v27;
          goto LABEL_32;
        }
        v17 = *(_QWORD *)(v6 + 8 * v18);
        v12 = v18;
        if (!v17)
          break;
      }
    }
LABEL_20:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_21:
    v19 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    result = sub_1BC2B4D78();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_33;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v13) = v19;
    ++*(_QWORD *)(v4 + 16);
  }
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v9)
      goto LABEL_30;
    v17 = *(_QWORD *)(v6 + 8 * v12);
    ++v18;
    if (v17)
      goto LABEL_20;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1BC216AD4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  sub_1BC2185D4(0, &qword_1EF3FFBF0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEC268]);
  v3 = sub_1BC2B518C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v9 = (unint64_t)(v5 + 63) >> 6;
  v10 = v3 + 56;
  result = swift_retain();
  v12 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      v12 = v16 + 1;
      if (v16 + 1 >= v9)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v12);
      if (!v17)
      {
        v12 = v16 + 2;
        if (v16 + 2 >= v9)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v12);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    v19 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    sub_1BC2B5450();
    swift_retain();
    sub_1BC236B0C();
    sub_1BC2B44D8();
    swift_bridgeObjectRelease();
    result = sub_1BC2B548C();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v13) = v19;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v9)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v12);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1BC216D88()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;

  v1 = v0;
  v2 = *v0;
  sub_1BC1E970C();
  v3 = sub_1BC2B518C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v30 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v31 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  result = swift_retain();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v14 = v13 | (v10 << 6);
      goto LABEL_24;
    }
    v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v31)
      goto LABEL_33;
    v16 = *(_QWORD *)(v30 + 8 * v15);
    ++v10;
    if (!v16)
    {
      v10 = v15 + 1;
      if (v15 + 1 >= v31)
        goto LABEL_33;
      v16 = *(_QWORD *)(v30 + 8 * v10);
      if (!v16)
      {
        v10 = v15 + 2;
        if (v15 + 2 >= v31)
          goto LABEL_33;
        v16 = *(_QWORD *)(v30 + 8 * v10);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v7 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v10 << 6);
LABEL_24:
    v18 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 32 * v14);
    v19 = *v18;
    v20 = v18[1];
    v21 = v18[2];
    v22 = v18[3];
    sub_1BC2B5450();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BC2B44D8();
    sub_1BC2B44D8();
    result = sub_1BC2B548C();
    v23 = -1 << *(_BYTE *)(v4 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v8 + 8 * (v24 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v8 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v8 + 8 * v25);
      }
      while (v29 == -1);
      v11 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    v12 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 32 * v11);
    *v12 = v19;
    v12[1] = v20;
    v12[2] = v21;
    v12[3] = v22;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v31)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v30 + 8 * v17);
  if (v16)
  {
    v10 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v10 >= v31)
      goto LABEL_33;
    v16 = *(_QWORD *)(v30 + 8 * v10);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1BC21706C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t *v27;

  v1 = v0;
  v2 = *v0;
  sub_1BC2186EC(0, &qword_1EF3FFC08, (unint64_t *)&qword_1EDA0FDA0, 0x1E0D2C4D8, (unint64_t *)&qword_1EDA0FDA8);
  v3 = sub_1BC2B518C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v27 = v0;
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v9 = (unint64_t)(v5 + 63) >> 6;
  v10 = v3 + 56;
  result = swift_retain();
  v12 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      v12 = v16 + 1;
      if (v16 + 1 >= v9)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v12);
      if (!v17)
      {
        v12 = v16 + 2;
        if (v16 + 2 >= v9)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v12);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    v19 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    result = sub_1BC2B4D78();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v13) = v19;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v27;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v9)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v12);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1BC217300()
{
  uint64_t *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v21;
  uint64_t v23;

  v1 = *v0;
  if ((*v0 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    v2 = sub_1BC2B5138();
    swift_release();
    if ((v2 & 1) != 0)
    {
      v3 = sub_1BC2175A0();
LABEL_24:
      swift_bridgeObjectRelease();
      return v3;
    }
  }
  else
  {
    sub_1BC2B5450();
    swift_bridgeObjectRetain();
    sub_1BC236B0C();
    sub_1BC2B44D8();
    swift_bridgeObjectRelease();
    v4 = sub_1BC2B548C();
    v5 = -1 << *(_BYTE *)(v1 + 32);
    v6 = v4 & ~v5;
    if (((*(_QWORD *)(v1 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
    {
      swift_retain();
      v7 = sub_1BC236B0C();
      v9 = v8;
      if (v7 == sub_1BC236B0C() && v9 == v10)
      {
LABEL_20:
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v12 = sub_1BC2B53CC();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v12 & 1) == 0)
        {
          v13 = ~v5;
          do
          {
            v6 = (v6 + 1) & v13;
            if (((*(_QWORD *)(v1 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
              goto LABEL_19;
            swift_retain();
            v14 = sub_1BC236B0C();
            v16 = v15;
            if (v14 == sub_1BC236B0C() && v16 == v17)
              goto LABEL_20;
            v19 = sub_1BC2B53CC();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          while ((v19 & 1) == 0);
        }
        swift_bridgeObjectRelease();
      }
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v21 = *v0;
      v23 = *v0;
      *v0 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_1BC21631C();
        v21 = v23;
      }
      v3 = *(_QWORD *)(*(_QWORD *)(v21 + 48) + 8 * v6);
      sub_1BC21784C(v6);
      *v0 = v23;
      goto LABEL_24;
    }
  }
LABEL_19:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1BC2175A0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v26;
  uint64_t result;
  uint64_t v28;

  swift_bridgeObjectRelease();
  v1 = sub_1BC2B5108();
  v2 = swift_unknownObjectRetain();
  v3 = sub_1BC2148FC(v2, v1);
  v28 = v3;
  sub_1BC2B5450();
  swift_retain();
  sub_1BC236B0C();
  sub_1BC2B44D8();
  swift_bridgeObjectRelease();
  v4 = sub_1BC2B548C();
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = v4 & ~v5;
  if (((*(_QWORD *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    swift_retain();
    v7 = sub_1BC236B0C();
    v9 = v8;
    if (v7 == sub_1BC236B0C() && v9 == v10)
    {
LABEL_15:
      swift_release();
      swift_release();
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v12 = sub_1BC2B53CC();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0)
      {
        v13 = ~v5;
        while (1)
        {
          v6 = (v6 + 1) & v13;
          if (((*(_QWORD *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
            break;
          swift_retain();
          v14 = sub_1BC236B0C();
          v16 = v15;
          if (v14 == sub_1BC236B0C() && v16 == v17)
            goto LABEL_15;
          v19 = sub_1BC2B53CC();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v19 & 1) != 0)
            goto LABEL_14;
        }
        swift_release();
        __break(1u);
        goto LABEL_25;
      }
LABEL_14:
      swift_release();
    }
    v20 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v6);
    sub_1BC21784C(v6);
    v21 = sub_1BC236B0C();
    v23 = v22;
    if (v21 != sub_1BC236B0C() || v23 != v24)
    {
      v26 = sub_1BC2B53CC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v26 & 1) != 0)
      {
LABEL_23:
        *v0 = v28;
        return v20;
      }
      __break(1u);
    }
    swift_bridgeObjectRelease_n();
    goto LABEL_23;
  }
LABEL_25:
  result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_1BC21784C(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_1BC2B50A8();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        sub_1BC2B5450();
        swift_retain();
        sub_1BC236B0C();
        sub_1BC2B44D8();
        swift_bridgeObjectRelease();
        v10 = sub_1BC2B548C();
        swift_release();
        v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9)
            goto LABEL_5;
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(v3 + 48);
          v13 = (_QWORD *)(v12 + 8 * v2);
          v14 = (_QWORD *)(v12 + 8 * v6);
          if (v2 != v6 || (v2 = v6, v13 >= v14 + 1))
          {
            *v13 = *v14;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v15 = *(_QWORD *)(v3 + 16);
  v16 = __OFSUB__(v15, 1);
  v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

int64_t sub_1BC217A28(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    v11 = *(_QWORD *)(v6 + 8 * v9);
    if (v11)
      return __clz(__rbit64(v11)) + (v9 << 6);
    v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      v11 = *(_QWORD *)(v6 + 8 * v9);
      if (v11)
        return __clz(__rbit64(v11)) + (v9 << 6);
      while (v10 - 3 != v5)
      {
        v11 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

void sub_1BC217B0C(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_1BC217E5C(a1, a2, a3, a4, &qword_1EF3FB3F8);
}

uint64_t sub_1BC217B20(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v22;
  uint64_t v23;

  v5 = result;
  if ((a4 & 0xC000000000000001) == 0)
  {
    if ((a3 & 1) != 0)
      goto LABEL_13;
    if (result < 0 || 1 << *(_BYTE *)(a4 + 32) <= result)
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> result) & 1) != 0)
    {
      if (*(_DWORD *)(a4 + 36) == (_DWORD)a2)
        goto LABEL_29;
      __break(1u);
LABEL_13:
      if (sub_1BC2B50F0() == *(_DWORD *)(a4 + 36))
      {
        sub_1BC2B50FC();
        type metadata accessor for MedicationsDoseLogViewModel(0);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        swift_unknownObjectRelease();
        sub_1BC2B5450();
        sub_1BC236B0C();
        sub_1BC2B44D8();
        swift_bridgeObjectRelease();
        v8 = sub_1BC2B548C();
        v9 = -1 << *(_BYTE *)(a4 + 32);
        v5 = v8 & ~v9;
        if (((*(_QWORD *)(a4 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
        {
          swift_retain();
          v10 = sub_1BC236B0C();
          v12 = v11;
          if (v10 == sub_1BC236B0C() && v12 == v13)
          {
LABEL_28:
            swift_release();
            swift_release();
            swift_bridgeObjectRelease_n();
          }
          else
          {
            v15 = sub_1BC2B53CC();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v15 & 1) == 0)
            {
              v16 = ~v9;
              do
              {
                v5 = (v5 + 1) & v16;
                if (((*(_QWORD *)(a4 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
                  goto LABEL_34;
                swift_retain();
                v17 = sub_1BC236B0C();
                v19 = v18;
                if (v17 == sub_1BC236B0C() && v19 == v20)
                  goto LABEL_28;
                v22 = sub_1BC2B53CC();
                swift_release();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              while ((v22 & 1) == 0);
            }
            swift_release();
          }
LABEL_29:
          v7 = *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * v5);
          swift_retain();
          return v7;
        }
LABEL_34:
        result = swift_release();
        __break(1u);
        goto LABEL_35;
      }
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    __break(1u);
    goto LABEL_33;
  }
  if ((a3 & 1) != 0)
  {
    if (a4 < 0)
      v6 = a4;
    else
      v6 = a4 & 0xFFFFFFFFFFFFFF8;
    MEMORY[0x1BCCEE89C](result, a2, v6);
    type metadata accessor for MedicationsDoseLogViewModel(0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v7 = v23;
    swift_unknownObjectRelease();
    return v7;
  }
LABEL_35:
  __break(1u);
  return result;
}

void sub_1BC217E48(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_1BC217E5C(a1, a2, a3, a4, (unint64_t *)&qword_1EDA0FD68);
}

void sub_1BC217E5C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unint64_t *a5)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  id v14;
  char v15;
  id v16;
  unint64_t *v17;

  v7 = a1;
  if ((a4 & 0xC000000000000001) == 0)
  {
    if ((a3 & 1) != 0)
      goto LABEL_13;
    if (a1 < 0 || 1 << *(_BYTE *)(a4 + 32) <= a1)
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(a4 + (((unint64_t)a1 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> a1) & 1) != 0)
    {
      if (*(_DWORD *)(a4 + 36) == (_DWORD)a2)
        goto LABEL_20;
      __break(1u);
LABEL_13:
      if (sub_1BC2B50F0() == *(_DWORD *)(a4 + 36))
      {
        sub_1BC2B50FC();
        sub_1BC0E1D38(0, a5);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        a5 = v17;
        swift_unknownObjectRelease();
        v9 = sub_1BC2B4D78();
        v10 = -1 << *(_BYTE *)(a4 + 32);
        v7 = v9 & ~v10;
        if (((*(_QWORD *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
        {
          v11 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v7);
          v12 = sub_1BC2B4D84();

          if ((v12 & 1) == 0)
          {
            v13 = ~v10;
            do
            {
              v7 = (v7 + 1) & v13;
              if (((*(_QWORD *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
                goto LABEL_24;
              v14 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v7);
              v15 = sub_1BC2B4D84();

            }
            while ((v15 & 1) == 0);
          }

LABEL_20:
          v16 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v7);
          return;
        }
LABEL_24:

        __break(1u);
        goto LABEL_25;
      }
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    __break(1u);
    goto LABEL_23;
  }
  if ((a3 & 1) == 0)
  {
LABEL_25:
    __break(1u);
    return;
  }
  if (a4 < 0)
    v8 = a4;
  else
    v8 = a4 & 0xFFFFFFFFFFFFFF8;
  MEMORY[0x1BCCEE89C](a1, a2, v8);
  sub_1BC0E1D38(0, a5);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  swift_unknownObjectRelease();
}

uint64_t sub_1BC2180C0(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 72);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_1BC218148(unint64_t a1, uint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = a1;
  if (a1 >> 62)
    goto LABEL_15;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v5 = MEMORY[0x1E0DEE9D8];
    if (!v4)
      return v5;
    v19 = MEMORY[0x1E0DEE9D8];
    result = sub_1BC125C9C(0, v4 & ~(v4 >> 63), 0);
    if (v4 < 0)
      break;
    v5 = v19;
    v14 = v3 & 0xC000000000000001;
    type metadata accessor for MedicationDoseLogMedicationCell();
    v7 = 0;
    v8 = (char *)a2 + qword_1EDA0F7F8;
    a2 = &v17;
    v15 = v3;
    while (v4 != v7)
    {
      if (v14)
      {
        v9 = MEMORY[0x1BCCEE950](v7, v3);
      }
      else
      {
        v9 = *(_QWORD *)(v3 + 8 * v7 + 32);
        swift_retain();
      }
      MEMORY[0x1BCCEF478](v8);
      v10 = *((_QWORD *)v8 + 1);
      sub_1BC0E519C(&qword_1EDA0F7D8, (uint64_t (*)(uint64_t))type metadata accessor for MedicationDoseLogMedicationCell, (uint64_t)&unk_1BC2BB5B0);
      swift_retain();
      v16[0] = sub_1BC2B2930();
      v16[1] = v11;
      v18 = 0;
      swift_unknownObjectWeakInit();
      v16[2] = v9;
      v18 = v10;
      swift_unknownObjectWeakAssign();
      swift_release();
      swift_unknownObjectRelease();
      v19 = v5;
      v13 = *(_QWORD *)(v5 + 16);
      v12 = *(_QWORD *)(v5 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1BC125C9C(v12 > 1, v13 + 1, 1);
        v5 = v19;
      }
      ++v7;
      *(_QWORD *)(v5 + 16) = v13 + 1;
      sub_1BC12ECD4((uint64_t)v16, v5 + 40 * v13 + 32);
      v3 = v15;
      if (v4 == v7)
        return v5;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v4 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for MedicationsLogViewController()
{
  uint64_t result;

  result = qword_1EDA0F918;
  if (!qword_1EDA0F918)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC218394()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for MedicationsLogViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicationsLogViewController.__allocating_init(medicationDoseLogList:asNeededMedicationDoseLogList:healthStore:showRecordAll:provenance:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, char a8)
{
  uint64_t v8;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, _QWORD))(class metadata base offset for MedicationsLogViewController + v8 + 288))(a1, a2, a3, a4, a5, a6 & 1, a7, a8 & 1);
}

uint64_t sub_1BC21845C()
{
  return type metadata accessor for MedicationsLogViewController();
}

uint64_t sub_1BC218468()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1BC0FEBF4;
  return sub_1BC20F180();
}

void sub_1BC2184D4()
{
  char *v0;
  char *v1;

  *(_QWORD *)&v0[qword_1EDA0F8B8] = MEMORY[0x1E0DEE9E8];
  v1 = &v0[qword_1EDA0F8F0];
  *(int64x2_t *)v1 = vdupq_n_s64(0x4040000000000000uLL);
  *((_OWORD *)v1 + 1) = xmmword_1BC2C2E80;
  *(_QWORD *)&v0[qword_1EDA0F8D8] = 0x4049000000000000;
  *(_QWORD *)&v0[qword_1EDA0F898] = 0;
  *(_QWORD *)&v0[qword_1EDA0F888] = 0;
  *(_QWORD *)&v0[qword_1EDA0F8E8] = 0;
  *(_QWORD *)&v0[qword_1EDA0F8C0] = 0;
  *(_QWORD *)&v0[qword_1EDA0F900] = 0;
  *(_QWORD *)&v0[qword_1EDA0F8F8] = 0;
  *(_QWORD *)&v0[qword_1EDA0F8B0] = 0;
  *(_QWORD *)&v0[qword_1EDA0F8A8] = 0;

  sub_1BC2B52B8();
  __break(1u);
}

void sub_1BC2185D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v6 = type metadata accessor for MedicationsDoseLogViewModel(255);
    v7 = sub_1BC0E519C(&qword_1EF3FFBE0, type metadata accessor for MedicationsDoseLogViewModel, (uint64_t)&protocol conformance descriptor for MedicationsDoseLogViewModel);
    v8 = a3(a1, v6, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t objectdestroyTm_0()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1BC218680()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1BC0FEB64;
  return sub_1BC20F180();
}

void sub_1BC2186EC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    sub_1BC0E1D38(255, a3);
    sub_1BC1093B4(a5, a3);
    v8 = sub_1BC2B51B0();
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_1BC218774@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  BOOL *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  void (*v56)(char *, uint64_t);
  void (*v57)(char *, uint64_t);
  void (*v59)(BOOL *, BOOL *, uint64_t);
  void (*v60)(char *, uint64_t);
  void (*v61)(BOOL *, BOOL *, uint64_t);
  uint64_t v62;
  BOOL *v63;
  BOOL *v64;
  void (*v65)(char *, char *, uint64_t);
  char v66;
  void (*v67)(BOOL *, char *, uint64_t);
  BOOL *v68;
  char v69;
  BOOL *v70;
  BOOL v71;
  char v72;
  void (*v73)(BOOL *, char *, uint64_t);
  uint64_t v74;
  BOOL *v75;
  char v76;
  char v77;
  uint64_t v78;
  BOOL *v79;
  char v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  void (*v84)(char *, uint64_t);
  char v85;
  uint64_t v86;
  char *v87;
  char v88;
  char v89;
  uint64_t v90;
  uint64_t *v91;
  char v92;
  uint64_t v93;
  BOOL *v94;
  BOOL *v95;
  BOOL v96;
  void (*v97)(BOOL *, BOOL *, uint64_t);
  char v98;
  BOOL *v99;
  BOOL *v100;
  char v101;
  BOOL *v102;
  BOOL v103;
  void (*v104)(char *, char *, uint64_t);
  uint64_t v105;
  BOOL *v106;
  BOOL *v107;
  BOOL *v108;
  BOOL *v109;
  uint64_t v110;
  BOOL *v111;
  char v112;
  BOOL *v113;
  BOOL v114;
  BOOL *v115;
  BOOL *v116;
  void (*v117)(BOOL *, uint64_t, uint64_t);
  BOOL v118;
  BOOL *v119;
  char *v120;
  BOOL *v121;
  void (*v122)(char *, BOOL *, uint64_t);
  BOOL *v123;
  uint64_t v124;
  BOOL *v125;
  _QWORD v126[2];
  uint64_t v127;
  char *v128;
  BOOL *v129;
  char *v130;
  char *v131;
  char *v132;
  BOOL *v133;
  BOOL *v134;
  char *v135;
  char *v136;
  BOOL *v137;
  BOOL *v138;
  uint64_t v139;
  BOOL *v140;
  BOOL *v141;
  void (*v142)(char *, char *, uint64_t);
  BOOL *v143;
  BOOL *v144;
  char *v145;
  BOOL *v146;
  BOOL *v147;
  char *v148;
  _QWORD *v149;
  void (*v150)(char *, uint64_t);
  BOOL *v151;
  char *v152;
  uint64_t v153;
  unsigned int (*v154)(char *, uint64_t, uint64_t);
  uint64_t v155;
  char *v156;
  uint64_t v157;
  void (*v158)(BOOL *, BOOL *, uint64_t);
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;

  v153 = a1;
  sub_1BC147578();
  v155 = v3;
  v4 = MEMORY[0x1E0C80A78](v3);
  v133 = (BOOL *)v126 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v4);
  v129 = (BOOL *)v126 - v7;
  v8 = MEMORY[0x1E0C80A78](v6);
  v132 = (char *)v126 - v9;
  v10 = MEMORY[0x1E0C80A78](v8);
  v136 = (char *)v126 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v138 = (BOOL *)v126 - v13;
  v14 = MEMORY[0x1E0C80A78](v12);
  v141 = (BOOL *)v126 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  v144 = (BOOL *)v126 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v151 = (BOOL *)v126 - v19;
  MEMORY[0x1E0C80A78](v18);
  v147 = (BOOL *)v126 - v20;
  sub_1BC1474E8();
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)v126 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_1BC2B38E4();
  v25 = *(_QWORD **)(v24 - 8);
  v26 = MEMORY[0x1E0C80A78](v24);
  v131 = (char *)v126 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x1E0C80A78](v26);
  v134 = (BOOL *)v126 - v29;
  v30 = MEMORY[0x1E0C80A78](v28);
  v128 = (char *)v126 - v31;
  v32 = MEMORY[0x1E0C80A78](v30);
  v130 = (char *)v126 - v33;
  v34 = MEMORY[0x1E0C80A78](v32);
  v135 = (char *)v126 - v35;
  v36 = MEMORY[0x1E0C80A78](v34);
  v137 = (char *)v126 - v37;
  v38 = MEMORY[0x1E0C80A78](v36);
  v140 = (char *)v126 - v39;
  v40 = MEMORY[0x1E0C80A78](v38);
  v143 = (char *)v126 - v41;
  v42 = MEMORY[0x1E0C80A78](v40);
  v146 = (char *)v126 - v43;
  v44 = MEMORY[0x1E0C80A78](v42);
  v46 = (char *)v126 - v45;
  v47 = MEMORY[0x1E0C80A78](v44);
  v49 = (char *)v126 - v48;
  MEMORY[0x1E0C80A78](v47);
  v51 = (char *)v126 - v50;
  sub_1BC219588();
  v53 = v52;
  v139 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52);
  v55 = (char *)v126 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  v159 = 0;
  sub_1BC139040(&qword_1EDA0FAC0, MEMORY[0x1E0D2CC20]);
  v152 = a2;
  sub_1BC2B54EC();
  sub_1BC2B3890();
  sub_1BC2B54E0();
  v56 = (void (*)(char *, uint64_t))v25[1];
  v56(v51, v24);
  v156 = v55;
  v157 = v53;
  v57 = v56;
  sub_1BC2B4310();
  v154 = (unsigned int (*)(char *, uint64_t, uint64_t))v25[6];
  if (v154(v23, 1, v24) != 1)
  {
    v59 = (void (*)(BOOL *, BOOL *, uint64_t))v25[4];
    v148 = v23;
    v149 = v25;
    v150 = v56;
    v145 = v46;
    v158 = v59;
    v59((BOOL *)v49, (BOOL *)v23, v24);
    while (1)
    {
      v65 = (void (*)(char *, char *, uint64_t))v25[2];
      v65(v46, v49, v24);
      sub_1BC2B3878();
      sub_1BC139040(&qword_1EDA0FAB8, MEMORY[0x1E0D2CC08]);
      v66 = sub_1BC2B4424();
      v57(v51, v24);
      if ((v66 & 1) != 0)
      {
        v57(v46, v24);
        if ((v153 & 0x40) != 0)
        {
          v67 = (void (*)(BOOL *, char *, uint64_t))v65;
          v65(v51, v152, v24);
          sub_1BC139040(&qword_1EF3FA2A8, MEMORY[0x1E0D2CC18]);
          v68 = (BOOL *)v146;
          sub_1BC2B503C();
          v69 = sub_1BC2B4424();
          v70 = &v147[*(int *)(v155 + 48)];
          v71 = (v69 & 1) == 0;
          *v147 = v71;
          if ((v69 & 1) != 0)
          {
            v61 = v158;
            v158(v70, v68, v24);
            v23 = v148;
            v46 = v145;
            goto LABEL_25;
          }
          v60 = v150;
          v150((char *)v68, v24);
          v67(v70, v49, v24);
          v67((BOOL *)v51, v49, v24);
          v57 = v60;
          sub_1BC2B5078();
          v23 = v148;
          v46 = v145;
          goto LABEL_5;
        }
      }
      else
      {
        sub_1BC2B386C();
        v72 = sub_1BC2B4424();
        v57(v51, v24);
        if ((v72 & 1) != 0)
        {
          v57(v46, v24);
          if ((v153 & 1) != 0)
          {
            v73 = (void (*)(BOOL *, char *, uint64_t))v65;
            v65(v51, v152, v24);
            v74 = sub_1BC139040(&qword_1EF3FA2A8, MEMORY[0x1E0D2CC18]);
            v75 = (BOOL *)v143;
            v142 = (void (*)(char *, char *, uint64_t))v74;
            sub_1BC2B503C();
            v76 = sub_1BC2B4424();
            v77 = ~v76;
            v78 = *(int *)(v155 + 48);
            v79 = v144;
            goto LABEL_23;
          }
        }
        else
        {
          sub_1BC2B3884();
          v80 = sub_1BC2B4424();
          v57(v51, v24);
          if ((v80 & 1) != 0)
          {
            v57(v46, v24);
            if ((v153 & 2) != 0)
            {
              v73 = (void (*)(BOOL *, char *, uint64_t))v65;
              v65(v51, v152, v24);
              v81 = sub_1BC139040(&qword_1EF3FA2A8, MEMORY[0x1E0D2CC18]);
              v75 = (BOOL *)v140;
              v142 = (void (*)(char *, char *, uint64_t))v81;
              sub_1BC2B503C();
              v76 = sub_1BC2B4424();
              v77 = ~v76;
              v78 = *(int *)(v155 + 48);
              v79 = v141;
              goto LABEL_23;
            }
          }
          else
          {
            sub_1BC2B38D8();
            v82 = sub_1BC2B4424();
            v57(v51, v24);
            if ((v82 & 1) != 0)
            {
              v57(v46, v24);
              if ((v153 & 4) != 0)
              {
                v73 = (void (*)(BOOL *, char *, uint64_t))v65;
                v65(v51, v152, v24);
                v83 = sub_1BC139040(&qword_1EF3FA2A8, MEMORY[0x1E0D2CC18]);
                v75 = (BOOL *)v137;
                v142 = (void (*)(char *, char *, uint64_t))v83;
                sub_1BC2B503C();
                v76 = sub_1BC2B4424();
                v77 = ~v76;
                v78 = *(int *)(v155 + 48);
                v79 = v138;
LABEL_23:
                v70 = &v79[v78];
                v71 = (v76 & 1) == 0;
                *v79 = v71;
                if ((v77 & 1) == 0)
                {
                  v61 = v158;
                  v158(v70, v75, v24);
                  v23 = v148;
LABEL_25:
                  v57 = v150;
LABEL_6:
                  v62 = *(int *)(v155 + 48);
                  v63 = v151;
                  v64 = &v151[v62];
                  *v151 = v71;
                  v61(&v63[v62], v70, v24);
LABEL_7:
                  v25 = v149;
                  v57((char *)v64, v24);
                  goto LABEL_8;
                }
                v84 = v150;
                v150((char *)v75, v24);
                v73(v70, v49, v24);
                v73((BOOL *)v51, v49, v24);
                v57 = v84;
                sub_1BC2B5078();
                v23 = v148;
LABEL_5:
                v61 = v158;
                goto LABEL_6;
              }
            }
            else
            {
              sub_1BC2B38B4();
              v85 = sub_1BC2B4424();
              v57(v51, v24);
              if ((v85 & 1) != 0)
              {
                v57(v46, v24);
                if ((v153 & 8) == 0)
                  goto LABEL_8;
                v142 = v65;
                v65(v51, v152, v24);
                v86 = sub_1BC139040(&qword_1EF3FA2A8, MEMORY[0x1E0D2CC18]);
                v87 = v135;
                v127 = v86;
                sub_1BC2B503C();
                v88 = sub_1BC2B4424();
                v89 = ~v88;
                v90 = *(int *)(v155 + 48);
                v91 = &v161;
LABEL_33:
                v94 = (BOOL *)*(v91 - 32);
                v95 = &v94[v90];
                v96 = (v88 & 1) == 0;
                *v94 = v96;
                if ((v89 & 1) != 0)
                {
                  v150(v87, v24);
                  v104 = v142;
                  v142((char *)v95, v49, v24);
                  v104(v51, v49, v24);
                  sub_1BC2B5078();
                  v97 = v158;
                }
                else
                {
                  v97 = v158;
                  v158(v95, (BOOL *)v87, v24);
                }
                v105 = *(int *)(v155 + 48);
                v106 = v151;
                v107 = &v151[v105];
                *v151 = v96;
                v108 = &v106[v105];
                v109 = v95;
LABEL_41:
                v97(v108, v109, v24);
                v25 = v149;
                v57 = v150;
                v46 = v145;
                v150((char *)v107, v24);
                goto LABEL_8;
              }
              sub_1BC2B3860();
              v92 = sub_1BC2B4424();
              v57(v51, v24);
              if ((v92 & 1) != 0)
              {
                v57(v46, v24);
                if ((v153 & 0x10) == 0)
                  goto LABEL_8;
                v142 = v65;
                v65(v51, v152, v24);
                v93 = sub_1BC139040(&qword_1EF3FA2A8, MEMORY[0x1E0D2CC18]);
                v87 = v130;
                v127 = v93;
                sub_1BC2B503C();
                v88 = sub_1BC2B4424();
                v89 = ~v88;
                v90 = *(int *)(v155 + 48);
                v91 = &v160;
                goto LABEL_33;
              }
              sub_1BC2B38A8();
              v98 = sub_1BC2B4424();
              v57(v51, v24);
              v57(v46, v24);
              if ((v98 & 1) == 0)
              {
                sub_1BC2B3854();
                v142 = v65;
                v65(v51, v152, v24);
                v110 = sub_1BC139040(&qword_1EF3FA2A8, MEMORY[0x1E0D2CC18]);
                v111 = v131;
                v126[1] = v110;
                sub_1BC2B503C();
                v112 = sub_1BC2B4424();
                v113 = &v133[*(int *)(v155 + 48)];
                v114 = (v112 & 1) == 0;
                *v133 = v114;
                v127 = (uint64_t)v113;
                if ((v112 & 1) != 0)
                {
                  v115 = v113;
                  v116 = (BOOL *)v111;
                  v117 = (void (*)(BOOL *, uint64_t, uint64_t))v158;
                  v118 = v114;
                  v158(v115, v116, v24);
                  v119 = v134;
                }
                else
                {
                  v120 = v111;
                  v118 = v114;
                  v57(v120, v24);
                  v121 = v113;
                  v119 = v134;
                  v122 = (void (*)(char *, BOOL *, uint64_t))v142;
                  v142((char *)v121, (char *)v134, v24);
                  v122(v51, v119, v24);
                  sub_1BC2B5078();
                  v117 = (void (*)(BOOL *, uint64_t, uint64_t))v158;
                }
                v123 = &v151[*(int *)(v155 + 48)];
                *v151 = v118;
                v117(v123, v127, v24);
                v57((char *)v123, v24);
                v64 = v119;
                goto LABEL_7;
              }
              if ((v153 & 0x20) != 0)
              {
                v65(v51, v152, v24);
                sub_1BC139040(&qword_1EF3FA2A8, MEMORY[0x1E0D2CC18]);
                v99 = v128;
                sub_1BC2B503C();
                v100 = (BOOL *)v99;
                v101 = sub_1BC2B4424();
                v102 = &v129[*(int *)(v155 + 48)];
                v103 = (v101 & 1) == 0;
                *v129 = v103;
                if ((v101 & 1) != 0)
                {
                  v97 = v158;
                  v158(v102, v100, v24);
                }
                else
                {
                  v150((char *)v100, v24);
                  v65((char *)v102, v49, v24);
                  v65(v51, v49, v24);
                  sub_1BC2B5078();
                  v97 = v158;
                }
                v124 = *(int *)(v155 + 48);
                v125 = v151;
                v107 = &v151[v124];
                *v151 = v103;
                v108 = &v125[v124];
                v109 = v102;
                goto LABEL_41;
              }
            }
          }
        }
      }
LABEL_8:
      v57(v49, v24);
      sub_1BC2B4310();
      if (v154(v23, 1, v24) == 1)
        return (*(uint64_t (**)(char *, uint64_t))(v139 + 8))(v156, v157);
      v158((BOOL *)v49, (BOOL *)v23, v24);
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v139 + 8))(v156, v157);
}

void sub_1BC219588()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FFC10)
  {
    sub_1BC2B38E4();
    sub_1BC139040(&qword_1EDA0FAC0, MEMORY[0x1E0D2CC20]);
    v0 = sub_1BC2B431C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FFC10);
  }
}

id MedicationsRecordDoseDataSource.healthStore.getter()
{
  uint64_t v0;

  return *(id *)(v0 + qword_1EDA0F940);
}

void MedicationsRecordDoseDataSource.context.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t MedicationsRecordDoseDataSource.__allocating_init(healthStore:listManager:medication:incompatibilityCache:didTapRecordDoseHandler:)(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  swift_allocObject();
  return MedicationsRecordDoseDataSource.init(healthStore:listManager:medication:incompatibilityCache:didTapRecordDoseHandler:)(a1, a2, a3, a4, a5, a6);
}

uint64_t MedicationsRecordDoseDataSource.init(healthStore:listManager:medication:incompatibilityCache:didTapRecordDoseHandler:)(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t *v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[2];

  v7 = v6;
  v28 = a6;
  v13 = sub_1BC2B2438();
  v32 = *(_QWORD *)(v13 - 8);
  v33 = v13;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v7 + qword_1EF3FFC18) = 0;
  *(_QWORD *)(v7 + qword_1EF3FFC20) = 0;
  *(_QWORD *)(v7 + qword_1EF3FFC28) = 0;
  v16 = (uint64_t *)(v7 + qword_1EF3FFC30);
  *v16 = 0;
  v16[1] = 0;
  *(_QWORD *)(v7 + qword_1EF3FFC38) = 0;
  *(_QWORD *)(v7 + qword_1EF3FFC40) = 0;
  *(_QWORD *)(v7 + qword_1EDA0F940) = a1;
  *(_QWORD *)(v7 + qword_1EF3FFC48) = a3;
  *(_QWORD *)(v7 + qword_1EF3FFC50) = a2;
  v30 = a4;
  v31 = a2;
  *(_QWORD *)(v7 + qword_1EF3FFC58) = a4;
  objc_allocWithZone((Class)type metadata accessor for MedicationScheduleObserver());
  v17 = a1;
  swift_retain();
  v18 = a3;
  swift_retain();
  swift_retain();
  v19 = sub_1BC0FDF70(v17);

  *(_QWORD *)(v7 + qword_1EF3FFC60) = v19;
  type metadata accessor for MedicationDoseEventDataSource();
  v20 = swift_allocObject();
  v21 = v17;
  v29 = v18;
  swift_defaultActor_initialize();
  *(_QWORD *)(v20 + 112) = v21;
  *(_QWORD *)(v20 + 120) = v18;
  *(_QWORD *)(v7 + qword_1EF3FFC68) = v20;
  v22 = *v16;
  v23 = v28;
  *v16 = a5;
  v16[1] = v23;
  sub_1BC0F2690(a5);
  sub_1BC0F2600(v22);
  v24 = (_QWORD *)(v7 + qword_1EF3FFC70);
  v25 = MEMORY[0x1E0DEE9D8];
  *v24 = MEMORY[0x1E0DEE9D8];
  v24[1] = v25;
  swift_release();
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8C50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BC2B2BC4();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BC2B92C0;
  sub_1BC2B2BAC();
  sub_1BC2B2BAC();
  v34[0] = 0;
  v34[1] = 0xE000000000000000;
  sub_1BC2B51BC();
  swift_bridgeObjectRelease();
  strcpy((char *)v34, "MutableArray<");
  HIWORD(v34[1]) = -4864;
  sub_1BC2B242C();
  sub_1BC2B23FC();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v15, v33);
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  sub_1BC2B44FC();
  v26 = sub_1BC2B2C00();
  swift_retain();
  sub_1BC219A18();
  sub_1BC219B70();
  sub_1BC0F2600(a5);
  swift_release();

  swift_release();
  swift_release();
  return v26;
}

uint64_t sub_1BC219A18()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;

  v1 = *v0;
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F9218, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v10 - v3;
  v5 = qword_1EF3FFC28;
  if (*(uint64_t *)((char *)v0 + qword_1EF3FFC28))
  {
    sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0FEA0);
    swift_retain();
    sub_1BC2B46C4();
    swift_release();
  }
  v6 = sub_1BC2B467C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v4, 1, 1, v6);
  v7 = swift_allocObject();
  swift_weakInit();
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = v7;
  v8[5] = v1;
  *(uint64_t *)((char *)v0 + v5) = sub_1BC0FD8CC((uint64_t)v4, (uint64_t)&unk_1EF3FFCF0, (uint64_t)v8);
  return swift_release();
}

uint64_t sub_1BC219B70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v21;
  id v22;

  v1 = v0;
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0FCC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v21 - v3;
  v5 = sub_1BC2B4A84();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1F30];
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC21F4E0();
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  sub_1BC2B4A90();

  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FFF0);
  v22 = (id)sub_1BC2B4A0C();
  v16 = sub_1BC2B49C4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v4, 1, 1, v16);
  sub_1BC0E519C((unint64_t *)&qword_1EF3FFCC8, v6, MEMORY[0x1E0CB1F20]);
  sub_1BC1019D8();
  sub_1BC2B4064();
  sub_1BC0F2444((uint64_t)v4, (unint64_t *)&qword_1EDA0FCC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868]);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
  swift_allocObject();
  swift_weakInit();
  sub_1BC0E519C(&qword_1EF3FFCD0, (uint64_t (*)(uint64_t))sub_1BC21F4E0, MEMORY[0x1E0C95CB8]);
  v17 = sub_1BC2B40A0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  *(_QWORD *)(v1 + qword_1EF3FFC38) = v17;
  swift_release();
  swift_retain();
  v18 = (void *)sub_1BC28C998();
  swift_release();
  v22 = v18;
  swift_allocObject();
  swift_weakInit();
  sub_1BC21F5C8();
  sub_1BC0E519C((unint64_t *)&qword_1EF3F9DE0, (uint64_t (*)(uint64_t))sub_1BC21F5C8, MEMORY[0x1E0C95D90]);
  v19 = sub_1BC2B40A0();
  swift_release();
  swift_release();
  *(_QWORD *)(v1 + qword_1EF3FFC40) = v19;
  return swift_release();
}

uint64_t sub_1BC219EAC()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1BC219A18();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC219F00()
{
  uint64_t v0;

  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1BC0F2600(*(_QWORD *)(v0 + qword_1EF3FFC30));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t MedicationsRecordDoseDataSource.deinit()
{
  uint64_t v0;
  uint64_t v1;

  if (*(_QWORD *)(v0 + qword_1EF3FFC18))
  {
    sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0FEA0);
    swift_retain();
    sub_1BC2B46C4();
    swift_release();
  }
  if (*(_QWORD *)(v0 + qword_1EF3FFC20))
  {
    sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0FEA0);
    swift_retain();
    sub_1BC2B46C4();
    swift_release();
  }
  if (*(_QWORD *)(v0 + qword_1EF3FFC28))
  {
    sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0FEA0);
    swift_retain();
    sub_1BC2B46C4();
    swift_release();
  }
  v1 = sub_1BC2B2C60();

  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1BC0F2600(*(_QWORD *)(v1 + qword_1EF3FFC30));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v1;
}

uint64_t MedicationsRecordDoseDataSource.__deallocating_deinit()
{
  MedicationsRecordDoseDataSource.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC21A218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[16] = a4;
  v5[17] = a5;
  v6 = sub_1BC2B39E0();
  v5[18] = v6;
  v5[19] = *(_QWORD *)(v6 - 8);
  v5[20] = swift_task_alloc();
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F9218, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v5[21] = swift_task_alloc();
  sub_1BC21FB5C(0, &qword_1EF3FFCF8, MEMORY[0x1E0DF0AD0]);
  v5[22] = v7;
  v5[23] = *(_QWORD *)(v7 - 8);
  v5[24] = swift_task_alloc();
  sub_1BC21FB5C(0, &qword_1EF3FFD00, MEMORY[0x1E0DF0AB0]);
  v5[25] = v8;
  v5[26] = *(_QWORD *)(v8 - 8);
  v5[27] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BC21A320()
{
  uint64_t v0;
  uint64_t Strong;
  _QWORD *v2;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 224) = Strong;
  if (Strong)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 232) = v2;
    *v2 = v0;
    v2[1] = sub_1BC21A3E8;
    return sub_1BC21AF64(*(_QWORD *)(v0 + 192));
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1BC21A3E8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 240) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BC21A44C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0[23];
  v1 = v0[24];
  v3 = v0[22];
  sub_1BC2B46A0();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v0[31] = qword_1EF3FFC70;
  v4 = (_QWORD *)swift_task_alloc();
  v0[32] = v4;
  *v4 = v0;
  v4[1] = sub_1BC21A4F8;
  return sub_1BC2B470C();
}

uint64_t sub_1BC21A4F8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BC21A55C()
{
  uint64_t v0;
  int v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;

  v1 = *(unsigned __int8 *)(v0 + 80);
  if (v1 == 255)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 208) + 8))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 200));
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v3 = *(_QWORD *)(v0 + 224);
  v4 = *(_QWORD *)(v0 + 168);
  if ((v1 & 1) != 0)
    v5 = (_QWORD *)(v3 + *(_QWORD *)(v0 + 248) + 8);
  else
    v5 = (_QWORD *)(v3 + *(_QWORD *)(v0 + 248));
  *v5 = *(_QWORD *)(v0 + 72);
  swift_bridgeObjectRelease();
  v6 = sub_1BC2B467C();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v4, 1, 1, v6);
  v8 = swift_allocObject();
  swift_weakInit();
  sub_1BC2B4658();
  swift_retain();
  v9 = sub_1BC2B464C();
  v10 = (_QWORD *)swift_allocObject();
  v11 = MEMORY[0x1E0DF06E8];
  v10[2] = v9;
  v10[3] = v11;
  v10[4] = v8;
  swift_release();
  v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6);
  v13 = *(_QWORD *)(v0 + 168);
  if (v12 != 1)
  {
    sub_1BC2B4670();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v13, v6);
    if (v10[2])
      goto LABEL_8;
LABEL_10:
    v14 = 0;
    v16 = 0;
    goto LABEL_11;
  }
  sub_1BC0F2444(*(_QWORD *)(v0 + 168), (unint64_t *)&qword_1EF3F9218, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750]);
  if (!v9)
    goto LABEL_10;
LABEL_8:
  swift_getObjectType();
  swift_unknownObjectRetain();
  v14 = sub_1BC2B461C();
  v16 = v15;
  swift_unknownObjectRelease();
LABEL_11:
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = &unk_1EF3FFD18;
  *(_QWORD *)(v17 + 24) = v10;
  sub_1BC0E2130(0, &qword_1EF3FFD30, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  if (v16 | v14)
  {
    *(_QWORD *)(v0 + 16) = 0;
    *(_QWORD *)(v0 + 24) = 0;
    *(_QWORD *)(v0 + 32) = v14;
    *(_QWORD *)(v0 + 40) = v16;
  }
  swift_task_create();
  swift_release();
  v18 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 264) = v18;
  *v18 = v0;
  v18[1] = sub_1BC21A840;
  return sub_1BC2B470C();
}

uint64_t sub_1BC21A840()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BC21A8A4()
{
  uint64_t v0;
  uint64_t result;
  void *v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  *(_QWORD *)(v0 + 104) = *(_QWORD *)(v0 + 240);
  sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0FEA0);
  sub_1BC0E1D38(0, &qword_1EF3FD030);
  result = swift_dynamicCast();
  if ((_DWORD)result)
  {
    v2 = *(void **)(v0 + 88);
    sub_1BC2B39C8();
    v3 = v2;
    v4 = sub_1BC2B39D4();
    v5 = sub_1BC2B48C8();
    v6 = os_log_type_enabled(v4, v5);
    v8 = *(_QWORD *)(v0 + 152);
    v7 = *(_QWORD *)(v0 + 160);
    v9 = *(_QWORD *)(v0 + 144);
    if (v6)
    {
      v20 = *(_QWORD *)(v0 + 152);
      v10 = swift_slowAlloc();
      v18 = swift_slowAlloc();
      v21 = v18;
      *(_DWORD *)v10 = 136315394;
      v19 = v9;
      v11 = sub_1BC2B54F8();
      *(_QWORD *)(v0 + 96) = sub_1BC12540C(v11, v12, &v21);
      sub_1BC2B4FD0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v10 + 12) = 2080;
      v13 = v3;
      v14 = objc_msgSend(v13, sel_description);
      v15 = sub_1BC2B4460();
      v17 = v16;

      *(_QWORD *)(v0 + 120) = sub_1BC12540C(v15, v17, &v21);
      sub_1BC2B4FD0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v4, v5, "[%s] Error fetching dose events and schedule items %s", (uint8_t *)v10, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v18, -1, -1);
      MEMORY[0x1BCCEF3A0](v10, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v7, v19);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    }
    if (objc_msgSend(v3, sel_hk_isDatabaseAccessibilityError))
    {
      sub_1BC2B26CC();
      sub_1BC2B26C0();
      swift_allocObject();
      swift_weakInit();
      swift_retain();
      sub_1BC2B26B4();
      swift_release();
      swift_release_n();
    }
    swift_release();

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  return result;
}

uint64_t sub_1BC21ABFC()
{
  uint64_t v0;
  uint64_t result;
  void *v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 208) + 8))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 200));
  *(_QWORD *)(v0 + 104) = *(_QWORD *)(v0 + 112);
  sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0FEA0);
  sub_1BC0E1D38(0, &qword_1EF3FD030);
  result = swift_dynamicCast();
  if ((_DWORD)result)
  {
    v2 = *(void **)(v0 + 88);
    sub_1BC2B39C8();
    v3 = v2;
    v4 = sub_1BC2B39D4();
    v5 = sub_1BC2B48C8();
    v6 = os_log_type_enabled(v4, v5);
    v8 = *(_QWORD *)(v0 + 152);
    v7 = *(_QWORD *)(v0 + 160);
    v9 = *(_QWORD *)(v0 + 144);
    if (v6)
    {
      v20 = *(_QWORD *)(v0 + 152);
      v10 = swift_slowAlloc();
      v18 = swift_slowAlloc();
      v21 = v18;
      *(_DWORD *)v10 = 136315394;
      v19 = v9;
      v11 = sub_1BC2B54F8();
      *(_QWORD *)(v0 + 96) = sub_1BC12540C(v11, v12, &v21);
      sub_1BC2B4FD0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v10 + 12) = 2080;
      v13 = v3;
      v14 = objc_msgSend(v13, sel_description);
      v15 = sub_1BC2B4460();
      v17 = v16;

      *(_QWORD *)(v0 + 120) = sub_1BC12540C(v15, v17, &v21);
      sub_1BC2B4FD0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v4, v5, "[%s] Error fetching dose events and schedule items %s", (uint8_t *)v10, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v18, -1, -1);
      MEMORY[0x1BCCEF3A0](v10, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v7, v19);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    }
    if (objc_msgSend(v3, sel_hk_isDatabaseAccessibilityError))
    {
      sub_1BC2B26CC();
      sub_1BC2B26C0();
      swift_allocObject();
      swift_weakInit();
      swift_retain();
      sub_1BC2B26B4();
      swift_release();
      swift_release_n();
    }
    swift_release();

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  return result;
}

uint64_t sub_1BC21AF64(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[2] = a1;
  v2[3] = v1;
  sub_1BC21FB5C(0, &qword_1EF3FFD38, MEMORY[0x1E0DF0A58]);
  v2[4] = v3;
  v2[5] = *(_QWORD *)(v3 - 8);
  v2[6] = swift_task_alloc();
  v4 = sub_1BC2B2024();
  v2[7] = v4;
  v2[8] = *(_QWORD *)(v4 - 8);
  v2[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BC21AFFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 24);
  if (*(_QWORD *)(v1 + qword_1EF3FFC20))
  {
    sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0FEA0);
    swift_retain();
    sub_1BC2B46C4();
    swift_release();
    v1 = *(_QWORD *)(v0 + 24);
  }
  if (*(_QWORD *)(v1 + qword_1EF3FFC18))
  {
    sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0FEA0);
    swift_retain();
    sub_1BC2B46C4();
    swift_release();
  }
  v3 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 56);
  v6 = *(_QWORD *)(v0 + 32);
  v7 = *(_QWORD *)(v0 + 40);
  sub_1BC2B1FD0();
  v8 = swift_allocObject();
  swift_weakInit();
  v9 = swift_task_alloc();
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v2;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 104))(v4, *MEMORY[0x1E0DF0A50], v6);
  sub_1BC2B4718();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v5);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC21B1B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[5] = a1;
  v4[6] = a4;
  sub_1BC2B4658();
  v4[7] = sub_1BC2B464C();
  sub_1BC2B461C();
  return swift_task_switch();
}

uint64_t sub_1BC21B224()
{
  uint64_t v0;
  uint64_t Strong;

  swift_release();
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_1BC21B2A0(1);
    swift_release();
  }
  **(_BYTE **)(v0 + 40) = Strong == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC21B2A0(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  unint64_t v23;
  unint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  void *v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t (**v34)();
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t inited;
  uint64_t v43;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v45;
  uint64_t v46;
  __int128 v48;
  uint64_t v49;
  __int128 *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v2 = v1;
  v70 = *MEMORY[0x1E0C80C00];
  v62 = sub_1BC2B2FA8();
  v60 = *(_QWORD *)(v62 - 8);
  MEMORY[0x1E0C80A78](v62);
  v63 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_1BC2B2C6C();
  v57 = *(_QWORD *)(v59 - 8);
  MEMORY[0x1E0C80A78](v59);
  v61 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC0E7998(0, &qword_1EDA0FAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v58 = (char *)&v48 - v8;
  sub_1BC0E7998(0, &qword_1EDA0FAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1C58], v6);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v48 - v10;
  v54 = sub_1BC2B3AB8();
  v53 = *(_QWORD *)(v54 - 8);
  MEMORY[0x1E0C80A78](v54);
  v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = sub_1BC2B3A7C();
  v55 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1BC2B2D98();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v64 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1BC2B3140();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0)
    return sub_1BC2B2C18();
  v51 = v17;
  v52 = v16;
  v23 = *(_QWORD *)(v2 + qword_1EF3FFC70);
  v24 = *(_QWORD *)(v2 + qword_1EF3FFC70 + 8);
  v50 = (__int128 *)(v2 + qword_1EF3FFC70);
  v25 = *(void **)(v2 + qword_1EDA0F940);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v26 = v25;
  sub_1BC2B3134();
  v27 = sub_1BC21BC78((uint64_t)v22, v23, v24);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_retain();
  v49 = sub_1BC21F62C(v27);
  swift_release();
  swift_bridgeObjectRelease();
  v68 = sub_1BC2B3CD4();
  v69 = MEMORY[0x1E0DC2398];
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v67);
  sub_1BC2B3CC8();
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v28 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();

  swift_bridgeObjectRelease();
  sub_1BC2B3C98();
  sub_1BC0E7998(0, (unint64_t *)&unk_1EDA0FE70, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1D38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BC2B3AD0();
  v29 = swift_allocObject();
  v48 = xmmword_1BC2B92D0;
  *(_OWORD *)(v29 + 16) = xmmword_1BC2B92D0;
  sub_1BC0E1D38(0, &qword_1EF3F90D8);
  _sSo7UIImageC19HealthMedicationsUIE26collectionViewCellPlusSignABvgZ_0();
  v30 = (void *)sub_1BC2B4DA8();
  sub_1BC0E1D38(0, &qword_1EDA0FE08);
  v31 = v30;
  v32 = (void *)sub_1BC2B4EF8();
  objc_msgSend(v32, sel_setUserInteractionEnabled_, 0);
  sub_1BC16A32C();
  v34 = (uint64_t (**)())&v13[*(int *)(v33 + 48)];
  v35 = *MEMORY[0x1E0DC1C20];
  v36 = sub_1BC2B3A34();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 104))(v13, v35, v36);
  *v34 = sub_1BC10E2F8;
  v34[1] = 0;
  (*(void (**)(char *, _QWORD, uint64_t))(v53 + 104))(v13, *MEMORY[0x1E0DC1D18], v54);
  v37 = sub_1BC2B3A40();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v11, 1, 1, v37);
  v38 = v32;
  sub_1BC2B3A70();

  sub_1BC2B39F8();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v15, v56);
  swift_allocObject();
  swift_weakInit();
  v39 = sub_1BC2B3B48();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v58, 1, 1, v39);
  v65 = sub_1BC2B4460();
  v66 = v40;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_retain();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, _QWORD, uint64_t))(v57 + 104))(v61, *MEMORY[0x1E0D2B170], v59);
  (*(void (**)(char *, _QWORD, uint64_t))(v60 + 104))(v63, *MEMORY[0x1E0D2B8C8], v62);
  v41 = v64;
  sub_1BC2B2D8C();
  swift_release();
  sub_1BC1187A4(0, (unint64_t *)&qword_1EDA0FE38, (unint64_t *)&qword_1EDA0F7C0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = v48;
  v43 = v52;
  *(_QWORD *)(inited + 56) = v52;
  *(_QWORD *)(inited + 64) = sub_1BC0E519C((unint64_t *)&qword_1EF3F8CE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B350], MEMORY[0x1E0D2B340]);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 32));
  v45 = v51;
  (*(void (**)(uint64_t *, char *, uint64_t))(v51 + 16))(boxed_opaque_existential_1, v41, v43);
  *(_QWORD *)&v67 = v49;
  sub_1BC130FBC(inited);
  v67 = *v50;
  v46 = DayScheduleProvider.makeHistoryItems(ungrouped:)(1);
  sub_1BC267820(v46);
  swift_bridgeObjectRelease();
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8C50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BC2B2BC4();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BC2B92C0;
  sub_1BC2B2BAC();
  sub_1BC2B2BAC();
  sub_1BC2B2C18();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v41, v43);
}

uint64_t sub_1BC21BC24()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1BC219A18();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC21BC78(uint64_t a1, unint64_t a2, unint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  swift_bridgeObjectRetain();
  v6 = sub_1BC2211DC(a2);
  swift_bridgeObjectRelease();
  v7 = swift_bridgeObjectRetain();
  v8 = sub_1BC22105C(v7);
  v9 = sub_1BC2214F0(v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = sub_1BC21E938(a1, a2, a3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = swift_bridgeObjectRetain();
  v12 = sub_1BC225E58(v11, v9, v10, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  v13 = sub_1BC2216F4(v6);
  swift_bridgeObjectRelease();
  sub_1BC131764(v12);
  return v13;
}

uint64_t sub_1BC21BD88(void *a1)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1BC21BDE4(a1);
    return swift_release();
  }
  return result;
}

void sub_1BC21BDE4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  _QWORD *v17;
  uint64_t *v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  void (*v23)(uint64_t);
  uint64_t v24;
  id v25;
  void *v26;

  v2 = v1;
  v25 = a1;
  v3 = sub_1BC2B23F0();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v25 - v8;
  sub_1BC2B23B4();
  v26 = *(void **)(v1 + qword_1EF3FFC48);
  v10 = v26;
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
  v11 = sub_1BC2B3758();
  v13 = v12;
  sub_1BC0E2130(0, (unint64_t *)&qword_1EDA0FEF0, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1BC2B7770;
  v15 = v10;
  sub_1BC2B23B4();
  type metadata accessor for MedicationsDoseLogViewModel(0);
  swift_allocObject();
  *(_QWORD *)(v14 + 32) = MedicationsDoseLogViewModel.init(medication:doseEvent:scheduleItem:logDate:dosage:index:)(v15, 0, 0, v7, 0, 1.0);
  v26 = (void *)v14;
  sub_1BC2B45A4();
  v16 = v26;
  type metadata accessor for MedicationDoseLogListViewModel(0);
  v17 = (_QWORD *)swift_allocObject();
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))((uint64_t)v17 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationDoseLogListViewModel_date, v9, v3);
  v18 = (_QWORD *)((char *)v17 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationDoseLogListViewModel_title);
  *v18 = v11;
  v18[1] = v13;
  v17[2] = v16;
  v19 = *(void **)(v2 + qword_1EDA0F940);
  v20 = objc_allocWithZone((Class)type metadata accessor for MedicationsLogViewController());
  swift_retain();
  v21 = (void *)MedicationsLogViewController.init(medicationDoseLogList:asNeededMedicationDoseLogList:healthStore:showRecordAll:provenance:context:)(v17, 0, v19, 0, 3, 0, 2, 0);
  v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F7B8]), sel_initWithRootViewController_, v21);
  objc_msgSend(v22, sel_setModalPresentationStyle_, 2);
  objc_msgSend(v22, sel_setModalInPresentation_, 1);
  objc_msgSend(v25, sel_presentViewController_animated_completion_, v22, 1, 0);

  v23 = *(void (**)(uint64_t))(v2 + qword_1EF3FFC30);
  if (v23)
  {
    v24 = swift_retain();
    v23(v24);
    swift_release();
    sub_1BC0F2600((uint64_t)v23);

  }
  else
  {

    swift_release();
  }
}

uint64_t sub_1BC21C0B4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;
  _QWORD v10[2];
  char v11;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v10[0] = a3;
    v10[1] = a4;
    v11 = a5 & 1;
    sub_1BC21C140((uint64_t)v10, a1);
    return swift_release();
  }
  return result;
}

void sub_1BC21C140(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  void (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  char v29;

  v26 = a2;
  v4 = sub_1BC2B23F0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  LOBYTE(a1) = *(_BYTE *)(a1 + 16);
  sub_1BC2B23B4();
  v27 = *(_QWORD *)(v2 + qword_1EF3FFC48);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
  v10 = sub_1BC2B3758();
  v12 = v11;
  sub_1BC0E2130(0, (unint64_t *)&qword_1EDA0FEF0, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1BC2B7770;
  v27 = v9;
  v28 = v8;
  v29 = a1;
  *(_QWORD *)(v13 + 32) = LoggableDose.makeLoggingViewModel(index:)(0);
  v27 = v13;
  sub_1BC2B45A4();
  v14 = v27;
  type metadata accessor for MedicationDoseLogListViewModel(0);
  v15 = (_QWORD *)swift_allocObject();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))((uint64_t)v15 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationDoseLogListViewModel_date, v7, v4);
  v16 = (_QWORD *)((char *)v15 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationDoseLogListViewModel_title);
  *v16 = v10;
  v16[1] = v12;
  v15[2] = v14;
  v17 = v25;
  v18 = *(void **)(v25 + qword_1EDA0F940);
  v19 = objc_allocWithZone((Class)type metadata accessor for MedicationsLogViewController());
  swift_retain();
  v20 = (void *)MedicationsLogViewController.init(medicationDoseLogList:asNeededMedicationDoseLogList:healthStore:showRecordAll:provenance:context:)(v15, 0, v18, 0, 3, 0, 1, 0);
  v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F7B8]), sel_initWithRootViewController_, v20);
  objc_msgSend(v21, sel_setModalPresentationStyle_, 2);
  objc_msgSend(v21, sel_setModalInPresentation_, 1);
  objc_msgSend(v26, sel_presentViewController_animated_completion_, v21, 1, 0);

  v22 = *(void (**)(uint64_t))(v17 + qword_1EF3FFC30);
  if (v22)
  {
    v23 = swift_retain();
    v22(v23);
    swift_release();
    sub_1BC0F2600((uint64_t)v22);

  }
  else
  {

    swift_release();
  }
}

uint64_t sub_1BC21C3C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t Strong;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  unint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char *v36;
  unint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;

  v49 = a3;
  sub_1BC21FB5C(0, &qword_1EF3FFD40, MEMORY[0x1E0DF0A78]);
  v5 = v4;
  v43 = *(_QWORD *)(v4 - 8);
  v46 = *(_QWORD *)(v43 + 64);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v39 - v6;
  v45 = sub_1BC2B2024();
  v48 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  v42 = v8;
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F9218, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v39 - v11;
  swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  v41 = v5;
  v47 = a1;
  sub_1BC2B46DC();
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  v44 = v9;
  v50 = v12;
  if (Strong)
  {
    v14 = Strong;
    v15 = sub_1BC2B467C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v12, 1, 1, v15);
    v40 = swift_allocObject();
    swift_beginAccess();
    swift_weakLoadStrong();
    swift_weakInit();
    swift_release();
    v16 = v48;
    v17 = v45;
    (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v9, v49, v45);
    v18 = v43;
    v19 = v41;
    (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v7, v47, v41);
    v20 = (*(unsigned __int8 *)(v16 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    v21 = v7;
    v22 = (v42 + v20 + *(unsigned __int8 *)(v18 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
    v23 = (char *)swift_allocObject();
    *((_QWORD *)v23 + 2) = 0;
    *((_QWORD *)v23 + 3) = 0;
    *((_QWORD *)v23 + 4) = v40;
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(&v23[v20], v44, v17);
    v24 = &v23[v22];
    v7 = v21;
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v24, v21, v19);
    *(_QWORD *)(v14 + qword_1EF3FFC20) = sub_1BC0FD8CC((uint64_t)v50, (uint64_t)&unk_1EF3FFD50, (uint64_t)v23);
    swift_release();
    swift_release();
  }
  v26 = v48;
  v25 = v49;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v28 = result;
    v29 = sub_1BC2B467C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v50, 1, 1, v29);
    v40 = swift_allocObject();
    swift_beginAccess();
    swift_weakLoadStrong();
    swift_weakInit();
    swift_release();
    v30 = v44;
    v31 = v25;
    v32 = v45;
    (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v44, v31, v45);
    v33 = v43;
    v34 = v41;
    (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v7, v47, v41);
    v35 = (*(unsigned __int8 *)(v26 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
    v36 = v7;
    v37 = (v42 + v35 + *(unsigned __int8 *)(v33 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
    v38 = (char *)swift_allocObject();
    *((_QWORD *)v38 + 2) = 0;
    *((_QWORD *)v38 + 3) = 0;
    *((_QWORD *)v38 + 4) = v40;
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(&v38[v35], v30, v32);
    (*(void (**)(char *, char *, uint64_t))(v33 + 32))(&v38[v37], v36, v34);
    *(_QWORD *)(v28 + qword_1EF3FFC18) = sub_1BC0FD8CC((uint64_t)v50, (uint64_t)&unk_1EF3FFD60, (uint64_t)v38);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC21C89C()
{
  uint64_t Strong;
  uint64_t result;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    if (*(_QWORD *)(Strong + qword_1EF3FFC20))
    {
      swift_retain();
      swift_release();
      sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0FEA0);
      sub_1BC2B46C4();
    }
    swift_release();
  }
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    if (*(_QWORD *)(result + qword_1EF3FFC18))
    {
      swift_retain();
      swift_release();
      sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0FEA0);
      sub_1BC2B46C4();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC21C9D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[13] = a5;
  v6[14] = a6;
  v6[12] = a4;
  sub_1BC21FB5C(0, &qword_1EF3FFD68, MEMORY[0x1E0DF0A30]);
  v6[15] = v7;
  v6[16] = *(_QWORD *)(v7 - 8);
  v6[17] = swift_task_alloc();
  sub_1BC220018();
  v6[18] = swift_task_alloc();
  sub_1BC106304(0, &qword_1EF3FFD90, &qword_1EF3FF000, 0x1E0CB6AD8, MEMORY[0x1E0CB43F0]);
  v6[19] = v8;
  v6[20] = *(_QWORD *)(v8 - 8);
  v6[21] = swift_task_alloc();
  sub_1BC106304(0, &qword_1EF3FFD98, &qword_1EF3FF000, 0x1E0CB6AD8, MEMORY[0x1E0CB43E0]);
  v6[22] = v9;
  v6[23] = *(_QWORD *)(v9 - 8);
  v6[24] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BC21CAFC()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  void *v3;
  id v4;
  _QWORD *v5;

  if ((sub_1BC2B46D0() & 1) == 0)
  {
    swift_beginAccess();
    Strong = swift_weakLoadStrong();
    if (Strong)
    {
      *(_QWORD *)(v0 + 200) = *(_QWORD *)(Strong + qword_1EF3FFC68);
      swift_retain();
      swift_release();
      swift_beginAccess();
      v2 = swift_weakLoadStrong();
      if (v2)
      {
        v3 = *(void **)(v2 + qword_1EF3FFC48);
        *(_QWORD *)(v0 + 208) = v3;
        v4 = v3;
        swift_release();
        v5 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 216) = v5;
        *v5 = v0;
        v5[1] = sub_1BC21CC40;
        return sub_1BC1F6CF0(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 104));
      }
      swift_release();
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC21CC40()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 224) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BC21CCA4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0[20];
  v1 = v0[21];
  v3 = v0[19];
  sub_1BC2B4388();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v0[29] = sub_1BC22008C();
  v4 = (_QWORD *)swift_task_alloc();
  v0[30] = v4;
  *v4 = v0;
  v4[1] = sub_1BC21CD38;
  return sub_1BC2B4640();
}

uint64_t sub_1BC21CD38()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    *(_QWORD *)(v2 + 248) = v0;
  return swift_task_switch();
}

uint64_t sub_1BC21CD9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 144);
  sub_1BC106304(0, &qword_1EF3FFD88, &qword_1EF3FF000, 0x1E0CB6AD8, MEMORY[0x1E0CB43D0]);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(v1, 1, v2) == 1)
  {
    v3 = *(void **)(v0 + 208);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 8))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 176));
    swift_release();

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 256) = v5;
    *v5 = v0;
    v5[1] = sub_1BC21CF90;
    return sub_1BC1F64B4(*(_QWORD *)(v0 + 104));
  }
}

uint64_t sub_1BC21CEA4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 80) = *(_QWORD *)(v0 + 248);
  sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0FEA0);
  swift_willThrowTypedImpl();
  return swift_task_switch();
}

uint64_t sub_1BC21CF10()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void **)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 192);
  v4 = *(_QWORD *)(v0 + 176);
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC21CF90(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 264) = a1;
  *(_QWORD *)(v3 + 272) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BC21CFFC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  void **v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;

  v1 = *(_QWORD *)(v0 + 264);
  if (!(v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v2)
      goto LABEL_3;
LABEL_12:
    swift_bridgeObjectRelease();
    v13 = MEMORY[0x1E0DEE9D8];
LABEL_13:
    v15 = *(_QWORD *)(v0 + 136);
    v14 = *(_QWORD *)(v0 + 144);
    v16 = *(_QWORD *)(v0 + 120);
    v17 = *(_QWORD *)(v0 + 128);
    *(_QWORD *)(v0 + 64) = v13;
    *(_BYTE *)(v0 + 72) = 0;
    sub_1BC21FB5C(0, &qword_1EF3FFD40, MEMORY[0x1E0DF0A78]);
    sub_1BC2B46E8();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
    sub_1BC2200F4(v14);
    v18 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 280) = v18;
    *v18 = v0;
    v18[1] = sub_1BC21D25C;
    return sub_1BC2B4640();
  }
  swift_bridgeObjectRetain();
  v2 = sub_1BC2B52D0();
  swift_bridgeObjectRelease();
  if (!v2)
    goto LABEL_12;
LABEL_3:
  *(_QWORD *)(v0 + 88) = MEMORY[0x1E0DEE9D8];
  result = sub_1BC2B5228();
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      v4 = 0;
      do
      {
        v5 = *(void **)(v0 + 208);
        v6 = v4 + 1;
        MEMORY[0x1BCCEE950]();
        sub_1BC2B33B0();
        swift_allocObject();
        v7 = v5;
        sub_1BC2B33BC();
        sub_1BC2B5204();
        sub_1BC2B5234();
        sub_1BC2B5240();
        sub_1BC2B5210();
        v4 = v6;
      }
      while (v2 != v6);
    }
    else
    {
      v8 = (void **)(*(_QWORD *)(v0 + 264) + 32);
      sub_1BC2B33B0();
      do
      {
        v9 = *(void **)(v0 + 208);
        v10 = *v8++;
        swift_allocObject();
        v11 = v9;
        v12 = v10;
        sub_1BC2B33BC();
        sub_1BC2B5204();
        sub_1BC2B5234();
        sub_1BC2B5240();
        sub_1BC2B5210();
        --v2;
      }
      while (v2);
    }
    v13 = *(_QWORD *)(v0 + 88);
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC21D25C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    *(_QWORD *)(v2 + 248) = v0;
  return swift_task_switch();
}

uint64_t sub_1BC21D2C0()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC21D32C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void **)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 192);
  v4 = *(_QWORD *)(v0 + 176);
  v5 = *(_QWORD *)(v0 + 144);
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_1BC2200F4(v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC21D3C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[15] = a5;
  v6[16] = a6;
  v6[14] = a4;
  sub_1BC21FB5C(0, &qword_1EF3FFD68, MEMORY[0x1E0DF0A30]);
  v6[17] = v7;
  v6[18] = *(_QWORD *)(v7 - 8);
  v6[19] = swift_task_alloc();
  sub_1BC21FFA0(0, &qword_1EF3FFD70, MEMORY[0x1E0DF0838]);
  v6[20] = v8;
  v6[21] = *(_QWORD *)(v8 - 8);
  v6[22] = swift_task_alloc();
  sub_1BC21FFA0(0, &qword_1EF3FFD78, MEMORY[0x1E0DF0820]);
  v6[23] = v9;
  v6[24] = *(_QWORD *)(v9 - 8);
  v6[25] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BC21D4A4()
{
  uint64_t v0;
  uint64_t Strong;
  void *v2;
  _QWORD *v3;

  if ((sub_1BC2B46D0() & 1) != 0 || (swift_beginAccess(), (Strong = swift_weakLoadStrong()) == 0))
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v2 = *(void **)(Strong + qword_1EF3FFC60);
    *(_QWORD *)(v0 + 208) = v2;
    v2;
    swift_release();
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 216) = v3;
    *v3 = v0;
    v3[1] = sub_1BC21D584;
    return sub_1BC0FCDC4(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 120));
  }
}

uint64_t sub_1BC21D584()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 224) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BC21D5E8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0[21];
  v1 = v0[22];
  v3 = v0[20];
  sub_1BC2B46A0();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_beginAccess();
  v0[29] = v0[28];
  v4 = (_QWORD *)swift_task_alloc();
  v0[30] = v4;
  *v4 = v0;
  v4[1] = sub_1BC21D6A8;
  return sub_1BC2B46AC();
}

uint64_t sub_1BC21D6A8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BC21D6FC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  void *v4;
  uint64_t *v5;
  uint64_t v6;
  id v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  unint64_t v14;
  id v15;
  unint64_t v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;

  v1 = *(_QWORD *)(v0 + 104);
  if (!v1)
  {
    v19 = *(void **)(v0 + 208);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 192) + 8))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 184));
LABEL_22:

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    v19 = *(void **)(v0 + 208);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 192) + 8))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 184));
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  v3 = Strong;
  v4 = *(void **)(Strong + qword_1EF3FFC48);
  v5 = (uint64_t *)(v0 + 88);
  *(_QWORD *)(v0 + 88) = MEMORY[0x1E0DEE9D8];
  v29 = v4;
  if (v1 >> 62)
  {
    v22 = v4;
    swift_bridgeObjectRetain();
    result = sub_1BC2B52D0();
    v6 = result;
    if (result)
      goto LABEL_5;
LABEL_24:
    swift_bridgeObjectRelease();
    v21 = v0;
    v10 = *(_QWORD *)(v0 + 232);
    v20 = MEMORY[0x1E0DEE9D8];
LABEL_25:
    v24 = *(_QWORD *)(v21 + 144);
    v23 = *(_QWORD *)(v21 + 152);
    v25 = *(_QWORD *)(v21 + 136);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v21 + 64) = v20;
    *(_BYTE *)(v21 + 72) = 1;
    sub_1BC21FB5C(0, &qword_1EF3FFD40, MEMORY[0x1E0DF0A78]);
    sub_1BC2B46E8();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
    *(_QWORD *)(v21 + 232) = v10;
    v26 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v21 + 240) = v26;
    *v26 = v21;
    v26[1] = sub_1BC21D6A8;
    return sub_1BC2B46AC();
  }
  v6 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v7 = v4;
  result = swift_bridgeObjectRetain();
  if (!v6)
    goto LABEL_24;
LABEL_5:
  if (v6 >= 1)
  {
    v27 = v3;
    v28 = v0;
    v9 = 0;
    v10 = *(_QWORD *)(v0 + 232);
    while (1)
    {
      if ((v1 & 0xC000000000000001) != 0)
        v11 = (id)MEMORY[0x1BCCEE950](v9, v1);
      else
        v11 = *(id *)(v1 + 8 * v9 + 32);
      v12 = v11;
      v13 = objc_msgSend(v11, sel_doses, v27, v28);
      sub_1BC0E1D38(0, &qword_1EF3FFCE0);
      v14 = sub_1BC2B458C();

      v15 = v29;
      v16 = sub_1BC21F1C0(v14, v15);
      swift_bridgeObjectRelease();

      if (v16 >> 62)
      {
        if (sub_1BC2B52D0())
        {
LABEL_14:
          v17 = v15;
          v18 = v12;
          sub_1BC21F810(v16, v18, v17);
          swift_bridgeObjectRelease();

          sub_1BC2B344C();
          swift_allocObject();
          sub_1BC2B3458();

          MEMORY[0x1BCCEDCF0]();
          if (*(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1BC2B45C8();
          sub_1BC2B4604();
          sub_1BC2B45A4();
          goto LABEL_8;
        }
      }
      else if (*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_14;
      }

      swift_bridgeObjectRelease();
LABEL_8:
      if (v6 == ++v9)
      {
        swift_bridgeObjectRelease();
        v20 = *v5;
        v21 = v28;
        goto LABEL_25;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC21DACC()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 208);
  *(_QWORD *)(v0 + 80) = *(_QWORD *)(v0 + 224);
  sub_1BC21FB5C(0, &qword_1EF3FFD40, MEMORY[0x1E0DF0A78]);
  sub_1BC2B46F4();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void MedicationsRecordDoseDataSource.__allocating_init(arrangedSections:identifier:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void MedicationsRecordDoseDataSource.init(arrangedSections:identifier:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id sub_1BC21DBB4()
{
  uint64_t v0;

  return *(id *)(v0 + qword_1EDA0F940);
}

Swift::Void __swiftcall MedicationsRecordDoseDataSource.registerCells(for:)(UICollectionView *a1)
{
  type metadata accessor for ScheduledDetailItemCell();
  sub_1BC0E519C(&qword_1EF3FFC78, (uint64_t (*)(uint64_t))type metadata accessor for ScheduledDetailItemCell, (uint64_t)&unk_1BC2C4948);
  sub_1BC2B497C();
  sub_1BC2B3038();
  sub_1BC2B497C();
  sub_1BC2B28DC();
  sub_1BC2B4988();
  sub_1BC2B2D5C();
  sub_1BC2B4994();
  type metadata accessor for MedicationsDayHistoryCell();
  sub_1BC0E519C(&qword_1EF3FFC80, (uint64_t (*)(uint64_t))type metadata accessor for MedicationsDayHistoryCell, (uint64_t)&unk_1BC2C6AEC);
  sub_1BC2B497C();
  type metadata accessor for MedicationsDayHistoryHeaderCell();
  sub_1BC0E519C(&qword_1EF3F81B0, (uint64_t (*)(uint64_t))type metadata accessor for MedicationsDayHistoryHeaderCell, (uint64_t)&unk_1BC2B89C0);
  sub_1BC2B497C();
}

uint64_t sub_1BC21DCD0()
{
  type metadata accessor for ScheduledDetailItemCell();
  sub_1BC0E519C(&qword_1EF3FFC78, (uint64_t (*)(uint64_t))type metadata accessor for ScheduledDetailItemCell, (uint64_t)&unk_1BC2C4948);
  sub_1BC2B497C();
  sub_1BC2B3038();
  sub_1BC2B497C();
  sub_1BC2B28DC();
  sub_1BC2B4988();
  sub_1BC2B2D5C();
  sub_1BC2B4994();
  type metadata accessor for MedicationsDayHistoryCell();
  sub_1BC0E519C(&qword_1EF3FFC80, (uint64_t (*)(uint64_t))type metadata accessor for MedicationsDayHistoryCell, (uint64_t)&unk_1BC2C6AEC);
  sub_1BC2B497C();
  type metadata accessor for MedicationsDayHistoryHeaderCell();
  sub_1BC0E519C(&qword_1EF3F81B0, (uint64_t (*)(uint64_t))type metadata accessor for MedicationsDayHistoryHeaderCell, (uint64_t)&unk_1BC2B89C0);
  return sub_1BC2B497C();
}

uint64_t MedicationsRecordDoseDataSource.layout(for:environment:)(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;

  v2 = sub_1BC2B2D20();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - v7;
  result = sub_1BC2B2A5C();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(result + 16) > a1)
  {
    v10 = result + 16 * a1;
    v12 = *(_QWORD *)(v10 + 32);
    v11 = *(_QWORD *)(v10 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (v12 == 0x656C756465686373 && v11 == 0xE900000000000064)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v14 = sub_1BC2B53CC();
      swift_bridgeObjectRelease();
      if ((v14 & 1) == 0)
      {
        sub_1BC2B2CC0();
        v8 = v6;
LABEL_14:
        v16 = sub_1BC2B2D14();
        (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
        return v16;
      }
    }
    v15 = (void *)sub_1BC2B3224();
    if (v15)
    {

      sub_1BC2B2C9C();
      sub_1BC2B2C90();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    }
    else
    {
      sub_1BC2B2C9C();
    }
    sub_1BC2B2CD8();
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC21DFBC(unint64_t a1)
{
  return MedicationsRecordDoseDataSource.layout(for:environment:)(a1);
}

uint64_t sub_1BC21DFDC()
{
  sub_1BC0E519C(&qword_1EF3FFCB8, (uint64_t (*)(uint64_t))type metadata accessor for MedicationsRecordDoseDataSource, (uint64_t)&protocol conformance descriptor for MedicationsRecordDoseDataSource);
  return sub_1BC2B3074();
}

void MedicationsRecordDoseDataSource.supplementaryItem(ofKind:at:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v16;
  char v18;
  id v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t);
  uint64_t v22;
  void *v23;
  id v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t);
  void *v43;
  uint64_t v44;
  void *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  void *v51;
  uint64_t v52;
  id v53;
  id v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v61)(uint64_t);
  uint64_t *v62;
  _QWORD v63[2];
  id v64;
  _QWORD *v65;
  char *v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;

  v6 = sub_1BC2B2FA8();
  v69 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, &qword_1EF3FFC88, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2AA40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v63 - v10;
  v12 = sub_1BC2B3CD4();
  MEMORY[0x1E0C80A78](v12);
  if (sub_1BC2B4460() == a1 && v13 == a2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  v68 = v6;
  v15 = sub_1BC2B53CC();
  swift_bridgeObjectRelease();
  if ((v15 & 1) != 0)
  {
LABEL_13:
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v19 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();
    swift_bridgeObjectRelease();

    sub_1BC2B3C68();
    v20 = sub_1BC2B28F4();
    v21 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2A8B8];
    swift_allocObject();
    v22 = sub_1BC2B28E8();
    a3[3] = v20;
    a3[4] = sub_1BC0E519C((unint64_t *)&qword_1EF3F96B8, v21, MEMORY[0x1E0D2A8A0]);
    *a3 = v22;
    return;
  }
  if (sub_1BC2B4460() == a1 && v16 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v18 = sub_1BC2B53CC();
    swift_bridgeObjectRelease();
    if ((v18 & 1) == 0)
      goto LABEL_30;
  }
  v23 = (void *)sub_1BC2B3224();
  if (!v23)
  {
LABEL_30:
    v41 = sub_1BC2B296C();
    v42 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2AB30];
    a3[3] = v41;
    a3[4] = sub_1BC0E519C(&qword_1EF3F8B68, v42, MEMORY[0x1E0D2AB20]);
    __swift_allocate_boxed_opaque_existential_1(a3);
    sub_1BC2B2960();
    return;
  }
  v64 = v23;
  v24 = objc_msgSend(v23, sel_incompatibleDevices);
  sub_1BC0E1D38(0, &qword_1EF3F9650);
  v25 = sub_1BC2B458C();

  if (v25 >> 62)
  {
    swift_bridgeObjectRetain();
    v26 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v26 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v66 = v8;
  v67 = a3;
  v65 = v11;
  if (v26)
  {
    v70 = MEMORY[0x1E0DEE9D8];
    sub_1BC125B54(0, v26 & ~(v26 >> 63), 0);
    if (v26 < 0)
    {
      __break(1u);
      return;
    }
    v27 = 0;
    v28 = v70;
    do
    {
      if ((v25 & 0xC000000000000001) != 0)
        v29 = (id)MEMORY[0x1BCCEE950](v27, v25);
      else
        v29 = *(id *)(v25 + 8 * v27 + 32);
      v30 = v29;
      v31 = objc_msgSend(v29, sel_deviceName);
      v32 = sub_1BC2B4460();
      v34 = v33;

      v35 = sub_1BC1F3134(v32, v34);
      v37 = v36;

      swift_bridgeObjectRelease();
      v70 = v28;
      v39 = *(_QWORD *)(v28 + 16);
      v38 = *(_QWORD *)(v28 + 24);
      if (v39 >= v38 >> 1)
      {
        sub_1BC125B54(v38 > 1, v39 + 1, 1);
        v28 = v70;
      }
      ++v27;
      *(_QWORD *)(v28 + 16) = v39 + 1;
      v40 = v28 + 16 * v39;
      *(_QWORD *)(v40 + 32) = v35;
      *(_QWORD *)(v40 + 40) = v37;
    }
    while (v26 != v27);
  }
  swift_bridgeObjectRelease();
  v43 = (void *)objc_opt_self();
  v44 = MEMORY[0x1E0DEA968];
  v45 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  v46 = objc_msgSend(v43, sel_localizedStringByJoiningStrings_, v45);

  v47 = sub_1BC2B4460();
  v49 = v48;

  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v50 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  v63[1] = sub_1BC2B2144();
  swift_bridgeObjectRelease();

  v51 = (void *)qword_1EDA0FEF8;
  sub_1BC1187A4(0, qword_1EDA0ED40, (unint64_t *)&qword_1EDA0FED0);
  v52 = swift_allocObject();
  *(_OWORD *)(v52 + 16) = xmmword_1BC2B92D0;
  *(_QWORD *)(v52 + 56) = v44;
  *(_QWORD *)(v52 + 64) = sub_1BC0F2748();
  *(_QWORD *)(v52 + 32) = v47;
  *(_QWORD *)(v52 + 40) = v49;
  v53 = v51;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  sub_1BC2B443C();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v54 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  v70 = 9011426;
  v71 = 0xA300000000000000;
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  sub_1BC2B44FC();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  sub_1BC2B44FC();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  sub_1BC2B44FC();
  sub_1BC0E2130(0, (unint64_t *)&qword_1EDA0FEF0, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v55 = swift_allocObject();
  *(_OWORD *)(v55 + 16) = xmmword_1BC2B7770;
  *(_QWORD *)(v55 + 32) = objc_msgSend((id)objc_opt_self(), sel_systemGrayColor);
  v70 = v55;
  sub_1BC2B45A4();
  v56 = v65;
  *v65 = 0xC000000000000000;
  v57 = *MEMORY[0x1E0D2AA38];
  v58 = sub_1BC2B2948();
  v59 = *(_QWORD *)(v58 - 8);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v59 + 104))(v56, v57, v58);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
  (*(void (**)(char *, _QWORD, uint64_t))(v69 + 104))(v66, *MEMORY[0x1E0D2B8C8], v68);
  v60 = sub_1BC2B2954();
  v61 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2AA48];
  v62 = v67;
  v67[3] = v60;
  v62[4] = sub_1BC0E519C(&qword_1EF3FFC90, v61, MEMORY[0x1E0D2AA28]);
  __swift_allocate_boxed_opaque_existential_1(v62);
  sub_1BC2B293C();

}

void sub_1BC21E918(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  MedicationsRecordDoseDataSource.supplementaryItem(ofKind:at:)(a1, a2, a3);
}

uint64_t sub_1BC21E938(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  char v20;
  char v21;
  unsigned int (**v22)(_QWORD, _QWORD, _QWORD);
  uint64_t v23;
  char *v24;
  char v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BOOL4 v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  void *v36;
  char *v37;
  void (*v38)(char *, uint64_t);
  id v39;
  id v40;
  id v41;
  void *v42;
  void *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  id v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  _BOOL4 v72;
  unint64_t v73;
  uint64_t v74;
  void (*v75)(char *, uint64_t);
  unint64_t v76;
  char *v77;
  char *v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  unsigned int (**v84)(_QWORD, _QWORD, _QWORD);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;

  v76 = a3;
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v68 - v4;
  v6 = sub_1BC2B23F0();
  v84 = *(unsigned int (***)(_QWORD, _QWORD, _QWORD))(v6 - 8);
  v7 = MEMORY[0x1E0C80A78](v6);
  v78 = (char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v77 = (char *)&v68 - v10;
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v68 - v12;
  MEMORY[0x1E0C80A78](v11);
  v70 = (char *)&v68 - v14;
  v15 = sub_1BC2B25B8();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B3140();
  sub_1BC2B3368();
  v19 = (id)sub_1BC2B3374();
  v21 = v20;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  if ((v21 & 1) != 0)
    return MEMORY[0x1E0DEE9E8];
  sub_1BC2B335C();
  v22 = v84;
  if (((unsigned int (**)(char *, uint64_t, uint64_t))v84)[6](v5, 1, v6) == 1)
  {
    sub_1BC0F2444((uint64_t)v5, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    return MEMORY[0x1E0DEE9E8];
  }
  v23 = v6;
  v24 = v70;
  ((void (*)(void))v22[4])();
  sub_1BC2B23E4();
  sub_1BC0E519C(qword_1EDA0EA98, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
  v25 = sub_1BC2B4418();
  v26 = (void (*)(char *, uint64_t))v22[1];
  v26(v13, v6);
  if ((v25 & 1) != 0)
  {
    v26(v24, v6);
    return MEMORY[0x1E0DEE9E8];
  }
  v75 = v26;
  v87 = MEMORY[0x1E0DEE9D8];
  v29 = v76;
  if (v76 >> 62)
    goto LABEL_43;
  v30 = *(_QWORD *)((v76 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  v74 = v30;
  if (v30)
  {
LABEL_10:
    v31 = 0;
    v32 = (uint64_t)v19 < 0;
    if (!__OFSUB__(0, v19))
      v32 = 0;
    v72 = v32;
    v73 = v29 & 0xC000000000000001;
    v69 = (char *)(v29 + 32);
    v71 = v23;
    while (1)
    {
      if (v73)
      {
        v33 = MEMORY[0x1BCCEE950](v31, v76);
      }
      else
      {
        v33 = *(_QWORD *)&v69[8 * v31];
        swift_retain();
      }
      v29 = (unint64_t)v78;
      v34 = __OFADD__(v31, 1);
      v35 = v31 + 1;
      if (v34)
      {
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        swift_bridgeObjectRetain_n();
        v74 = sub_1BC2B52D0();
        if (!v74)
          break;
        goto LABEL_10;
      }
      v36 = (void *)sub_1BC2B3434();
      v19 = objc_msgSend(v36, sel_scheduledDateTime);
      sub_1BC2B23A8();

      if (v72)
        goto LABEL_42;
      v80 = v33;
      v81 = v35;
      v37 = v77;
      sub_1BC2B2354();
      v38 = v75;
      v75((char *)v29, v23);
      v39 = objc_msgSend(v36, sel_notificationSent);
      v79 = v36;
      v40 = objc_msgSend(v36, sel_doses);
      v19 = (id)sub_1BC0E1D38(0, &qword_1EF3FFCE0);
      sub_1BC2B458C();

      v41 = objc_allocWithZone(MEMORY[0x1E0D2C4A8]);
      v42 = (void *)sub_1BC2B2360();
      v43 = (void *)sub_1BC2B4580();
      swift_bridgeObjectRelease();
      v29 = (unint64_t)objc_msgSend(v41, sel_initWithScheduledDateTime_notificationSent_doses_, v42, v39, v43);

      v38(v37, v23);
      v84 = (unsigned int (**)(_QWORD, _QWORD, _QWORD))v29;
      v44 = objc_msgSend((id)v29, sel_doses);
      v45 = sub_1BC2B458C();

      if ((unint64_t)v45 >> 62)
      {
        if (v45 < 0)
          v19 = (id)v45;
        else
          v19 = (id)(v45 & 0xFFFFFFFFFFFFFF8);
        swift_bridgeObjectRetain();
        v23 = sub_1BC2B52D0();
        swift_bridgeObjectRelease();
        if (!v23)
        {
LABEL_34:
          swift_bridgeObjectRelease();
          v47 = MEMORY[0x1E0DEE9D8];
          goto LABEL_35;
        }
      }
      else
      {
        v23 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (!v23)
          goto LABEL_34;
      }
      v85 = MEMORY[0x1E0DEE9D8];
      sub_1BC125CB8(0, v23 & ~(v23 >> 63), 0);
      if (v23 < 0)
        goto LABEL_41;
      v46 = 0;
      v47 = v85;
      v82 = v45 & 0xC000000000000001;
      v83 = v45;
      do
      {
        if (v82)
          v48 = (id)MEMORY[0x1BCCEE950](v46, v45);
        else
          v48 = *(id *)(v45 + 8 * v46 + 32);
        v49 = v48;
        v50 = objc_msgSend(v84, sel_identifier);
        v51 = sub_1BC2B4460();
        v53 = v52;

        v54 = objc_msgSend(v49, sel_medicationIdentifier);
        v55 = sub_1BC2B4460();
        v57 = v56;

        v85 = v47;
        v59 = *(_QWORD *)(v47 + 16);
        v58 = *(_QWORD *)(v47 + 24);
        if (v59 >= v58 >> 1)
        {
          sub_1BC125CB8(v58 > 1, v59 + 1, 1);
          v47 = v85;
        }
        ++v46;
        *(_QWORD *)(v47 + 16) = v59 + 1;
        v60 = (_QWORD *)(v47 + 32 * v59);
        v60[4] = v55;
        v60[5] = v57;
        v60[6] = v51;
        v60[7] = v53;
        v45 = v83;
      }
      while (v23 != v46);
      swift_bridgeObjectRelease();
LABEL_35:
      v19 = *(id *)(v47 + 16);
      sub_1BC1CD974();
      v86 = sub_1BC2B47C0();
      v61 = *(_QWORD *)(v47 + 16);
      if (v61)
      {
        v62 = (uint64_t *)(v47 + 56);
        do
        {
          v19 = (id)*(v62 - 3);
          v63 = *(v62 - 2);
          v64 = *(v62 - 1);
          v65 = *v62;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BC21422C(&v85, (uint64_t)v19, v63, v64, v65);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v62 += 4;
          --v61;
        }
        while (v61);
      }

      swift_bridgeObjectRelease();
      swift_release();

      sub_1BC13134C(v86);
      v31 = v81;
      v23 = v71;
      if (v81 == v74)
      {
        swift_bridgeObjectRelease_n();
        v66 = v87;
        goto LABEL_45;
      }
    }
  }
  swift_bridgeObjectRelease_n();
  v66 = MEMORY[0x1E0DEE9D8];
LABEL_45:
  v67 = v70;
  v27 = sub_1BC1CCE6C(v66);
  swift_bridgeObjectRelease();
  v75(v67, v23);
  return v27;
}

uint64_t sub_1BC21F0AC(char *a1)
{
  char v1;
  uint64_t result;

  v1 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1BC21B2A0(v1);
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC21F108(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 16) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = v2;
  v3[1] = sub_1BC21F170;
  return v5(v2 + 32);
}

uint64_t sub_1BC21F170()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_BYTE **)(*v0 + 16);
  v4 = *v0;
  swift_task_dealloc();
  *v2 = *(_BYTE *)(v1 + 32);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_1BC21F1C0(unint64_t a1, void *a2)
{
  uint64_t v3;
  unint64_t v4;
  id v5;
  void *v6;
  unint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  uint64_t v20;
  uint64_t v22;

  v22 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_22;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      v20 = v3;
      v4 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v5 = (id)MEMORY[0x1BCCEE950](v4, a1);
LABEL_9:
        v6 = v5;
        v7 = v4 + 1;
        if (__OFADD__(v4, 1))
          goto LABEL_21;
        v8 = objc_msgSend(v5, sel_medicationIdentifier);
        v9 = sub_1BC2B4460();
        v11 = v10;

        v12 = objc_msgSend(a2, sel_semanticIdentifier);
        v13 = objc_msgSend(v12, sel_stringValue);

        v14 = sub_1BC2B4460();
        v16 = v15;

        if (v9 == v14 && v11 == v16)
        {
          swift_bridgeObjectRelease_n();
LABEL_17:
          sub_1BC2B5204();
          sub_1BC2B5234();
          sub_1BC2B5240();
          sub_1BC2B5210();
          goto LABEL_5;
        }
        v18 = sub_1BC2B53CC();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v18 & 1) != 0)
          goto LABEL_17;

LABEL_5:
        ++v4;
        if (v7 == v20)
          return v22;
      }
      if (v4 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      v3 = sub_1BC2B52D0();
      if (!v3)
        return MEMORY[0x1E0DEE9D8];
    }
    v5 = *(id *)(a1 + 8 * v4 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1BC21F3C8()
{
  return sub_1BC0E519C((unint64_t *)&unk_1EF3FFC98, (uint64_t (*)(uint64_t))type metadata accessor for MedicationsRecordDoseDataSource, (uint64_t)&protocol conformance descriptor for MedicationsRecordDoseDataSource);
}

uint64_t type metadata accessor for MedicationsRecordDoseDataSource()
{
  uint64_t result;

  result = qword_1EDA0F948;
  if (!qword_1EDA0F948)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC21F430()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for MedicationsRecordDoseDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicationsRecordDoseDataSource.__allocating_init(healthStore:listManager:medication:incompatibilityCache:didTapRecordDoseHandler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(class metadata base offset for MedicationsRecordDoseDataSource + v0 + 104))();
}

uint64_t sub_1BC21F4D8()
{
  return type metadata accessor for MedicationsRecordDoseDataSource();
}

void sub_1BC21F4E0()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EF3FFCC0)
  {
    sub_1BC2B4A84();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1F30];
    sub_1BC0E1D38(255, (unint64_t *)&qword_1EDA0FFF0);
    sub_1BC0E519C((unint64_t *)&qword_1EF3FFCC8, v0, MEMORY[0x1E0CB1F20]);
    sub_1BC1019D8();
    v1 = sub_1BC2B3E60();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EF3FFCC0);
  }
}

uint64_t sub_1BC21F594()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC21F5B8()
{
  return sub_1BC219EAC();
}

uint64_t sub_1BC21F5C0(char *a1)
{
  return sub_1BC21F0AC(a1);
}

void sub_1BC21F5C8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3F9DD8)
  {
    v0 = sub_1BC2B3E78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3F9DD8);
  }
}

uint64_t sub_1BC21F62C(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  char *v4;
  void *v5;
  void *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  int64_t v17;
  __int128 v18;
  ValueMetadata *v19;
  unint64_t v20;
  uint64_t v21;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v21 = MEMORY[0x1E0DEE9D8];
    sub_1BC125B04(0, v1, 0);
    v2 = v21;
    type metadata accessor for ScheduledDetailItemCell();
    v4 = (char *)(a1 + 48);
    do
    {
      v6 = (void *)*((_QWORD *)v4 - 2);
      v5 = (void *)*((_QWORD *)v4 - 1);
      v7 = *v4;
      v8 = swift_allocObject();
      swift_weakInit();
      v9 = swift_allocObject();
      *(_QWORD *)(v9 + 16) = v8;
      *(_QWORD *)(v9 + 24) = v6;
      *(_QWORD *)(v9 + 32) = v5;
      *(_BYTE *)(v9 + 40) = v7;
      sub_1BC0FA444(v6, v5, v7);
      sub_1BC0FA444(v6, v5, v7);
      sub_1BC0E519C(&qword_1EF3FFC78, (uint64_t (*)(uint64_t))type metadata accessor for ScheduledDetailItemCell, (uint64_t)&unk_1BC2C4948);
      v10 = sub_1BC2B2930();
      v21 = v2;
      v12 = *(_QWORD *)(v2 + 16);
      v11 = *(_QWORD *)(v2 + 24);
      v16 = v13;
      v17 = v12 + 1;
      if (v12 >= v11 >> 1)
      {
        sub_1BC125B04(v11 > 1, v17, 1);
        v2 = v21;
      }
      v4 += 24;
      v19 = &type metadata for ScheduledDetailItem;
      v20 = sub_1BC21FA60();
      v14 = swift_allocObject();
      *(_QWORD *)&v18 = v14;
      *(_QWORD *)(v14 + 16) = v6;
      *(_QWORD *)(v14 + 24) = v5;
      *(_BYTE *)(v14 + 32) = v7;
      *(_QWORD *)(v14 + 40) = sub_1BC21FA50;
      *(_QWORD *)(v14 + 48) = v9;
      *(_QWORD *)(v14 + 56) = v10;
      *(_QWORD *)(v14 + 64) = v16;
      *(_QWORD *)(v2 + 16) = v17;
      sub_1BC0F2730(&v18, v2 + 40 * v12 + 32);
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1BC21F810(unint64_t a1, void *a2, void *a3)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;

  v4 = v3;
  v23 = a2;
  v24 = a3;
  v22 = sub_1BC2B356C();
  v6 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
    goto LABEL_15;
  v9 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v10 = MEMORY[0x1E0DEE9D8];
    if (!v9)
      return v10;
    v25 = MEMORY[0x1E0DEE9D8];
    result = sub_1BC125DD8(0, v9 & ~(v9 >> 63), 0);
    if (v9 < 0)
      break;
    v12 = 0;
    v10 = v25;
    v19 = v4;
    v20 = a1 & 0xC000000000000001;
    v21 = a1;
    while (v9 != v12)
    {
      if (v20)
        v13 = (id)MEMORY[0x1BCCEE950](v12, a1);
      else
        v13 = *(id *)(a1 + 8 * v12 + 32);
      v14 = v13;
      v15 = objc_msgSend(v23, sel_identifier);
      sub_1BC2B4460();

      v16 = v24;
      sub_1BC2B3578();

      v25 = v10;
      v18 = *(_QWORD *)(v10 + 16);
      v17 = *(_QWORD *)(v10 + 24);
      v4 = v18 + 1;
      if (v18 >= v17 >> 1)
      {
        sub_1BC125DD8(v17 > 1, v18 + 1, 1);
        v10 = v25;
      }
      ++v12;
      *(_QWORD *)(v10 + 16) = v4;
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v18, v8, v22);
      a1 = v21;
      if (v9 == v12)
        return v10;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v9 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC21FA18(void *a1)
{
  return sub_1BC21BD88(a1);
}

uint64_t sub_1BC21FA20()
{
  uint64_t v0;

  swift_release();
  sub_1BC0FA484(*(void **)(v0 + 24), *(void **)(v0 + 32), *(_BYTE *)(v0 + 40));
  return swift_deallocObject();
}

uint64_t sub_1BC21FA50(void *a1)
{
  uint64_t v1;

  return sub_1BC21C0B4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_BYTE *)(v1 + 40));
}

unint64_t sub_1BC21FA60()
{
  unint64_t result;

  result = qword_1EF3FFCD8;
  if (!qword_1EF3FFCD8)
  {
    result = MEMORY[0x1BCCEF2BC](&unk_1BC2C49EC, &type metadata for ScheduledDetailItem);
    atomic_store(result, (unint64_t *)&qword_1EF3FFCD8);
  }
  return result;
}

uint64_t sub_1BC21FAA4()
{
  uint64_t v0;

  sub_1BC0FA484(*(void **)(v0 + 16), *(void **)(v0 + 24), *(_BYTE *)(v0 + 32));
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC21FADC()
{
  return objectdestroy_14Tm_1();
}

uint64_t sub_1BC21FAE4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1BC0FEB64;
  return sub_1BC21A218(a1, v4, v5, v7, v6);
}

void sub_1BC21FB5C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, uint64_t, _QWORD))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BC0E7AD8(255, (unint64_t *)&qword_1EDA0FEA0);
    v7 = a3(a1, &type metadata for MedicationsRecordDoseDataSource.UpdateOperationResult, v6, MEMORY[0x1E0DEDB38]);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BC21FBD4()
{
  return sub_1BC21BC24();
}

uint64_t sub_1BC21FBDC()
{
  return objectdestroy_14Tm_1();
}

uint64_t objectdestroy_14Tm_1()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC21FC1C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1BC0FEB64;
  return sub_1BC21B1B8(a1, v4, v5, v6);
}

uint64_t sub_1BC21FC88()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC21FCAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1BC0FEBF4;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EF3FFD20 + dword_1EF3FFD20))(a1, v4);
}

uint64_t sub_1BC21FD1C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC21C3C4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1BC21FD24()
{
  return sub_1BC21C89C();
}

uint64_t sub_1BC21FD30(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v4 = *(_QWORD *)(sub_1BC2B2024() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v5 + *(_QWORD *)(v4 + 64);
  sub_1BC21FB5C(0, &qword_1EF3FFD40, MEMORY[0x1E0DF0A78]);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(v7 - 8) + 80);
  v9 = (v6 + v8) & ~v8;
  v10 = v1[2];
  v11 = v1[3];
  v12 = v1[4];
  v13 = (uint64_t)v1 + v5;
  v14 = (uint64_t)v1 + v9;
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v15;
  *v15 = v2;
  v15[1] = sub_1BC0FEBF4;
  return sub_1BC21C9D8(a1, v10, v11, v12, v13, v14);
}

uint64_t objectdestroy_34Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v1 = sub_1BC2B2024();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v3 + *(_QWORD *)(v2 + 64);
  sub_1BC21FB5C(0, &qword_1EF3FFD40, MEMORY[0x1E0DF0A78]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  v8 = (v4 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v0 + v8, v6);
  return swift_deallocObject();
}

uint64_t sub_1BC21FED4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v4 = *(_QWORD *)(sub_1BC2B2024() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v5 + *(_QWORD *)(v4 + 64);
  sub_1BC21FB5C(0, &qword_1EF3FFD40, MEMORY[0x1E0DF0A78]);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(v7 - 8) + 80);
  v9 = (v6 + v8) & ~v8;
  v10 = v1[2];
  v11 = v1[3];
  v12 = v1[4];
  v13 = (uint64_t)v1 + v5;
  v14 = (uint64_t)v1 + v9;
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v15;
  *v15 = v2;
  v15[1] = sub_1BC0FEBF4;
  return sub_1BC21D3C0(a1, v10, v11, v12, v13, v14);
}

void sub_1BC21FFA0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_1BC106304(255, (unint64_t *)&qword_1EF3F9258, &qword_1EF3F9260, 0x1E0D2C4A8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_1BC220018()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FFD80)
  {
    sub_1BC106304(255, &qword_1EF3FFD88, &qword_1EF3FF000, 0x1E0CB6AD8, MEMORY[0x1E0CB43D0]);
    v0 = sub_1BC2B4FA0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FFD80);
  }
}

unint64_t sub_1BC22008C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3FFDA0;
  if (!qword_1EF3FFDA0)
  {
    sub_1BC106304(255, &qword_1EF3FFD98, &qword_1EF3FF000, 0x1E0CB6AD8, MEMORY[0x1E0CB43E0]);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0CB43E8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF3FFDA0);
  }
  return result;
}

uint64_t sub_1BC2200F4(uint64_t a1)
{
  uint64_t v2;

  sub_1BC220018();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t initializeBufferWithCopyOfBuffer for MedicationsRecordDoseDataSource.UpdateOperationResult(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for MedicationsRecordDoseDataSource.UpdateOperationResult()
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for MedicationsRecordDoseDataSource.UpdateOperationResult(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MedicationsRecordDoseDataSource.UpdateOperationResult(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for MedicationsRecordDoseDataSource.UpdateOperationResult()
{
  return &type metadata for MedicationsRecordDoseDataSource.UpdateOperationResult;
}

uint64_t sub_1BC2201FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(BOOL, unint64_t, uint64_t), uint64_t (*a4)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = MEMORY[0x1E0DEE9D8];
  if (!v4)
    return v5;
  v28 = MEMORY[0x1E0DEE9D8];
  a3(0, v4, 0);
  v5 = v28;
  result = a4(a1);
  v10 = result;
  v11 = 0;
  v12 = a1 + 64;
  v25 = v4;
  v26 = v9;
  v27 = a1 + 64;
  while ((v10 & 0x8000000000000000) == 0 && v10 < 1 << *(_BYTE *)(a1 + 32))
  {
    v15 = (unint64_t)v10 >> 6;
    if ((*(_QWORD *)(v12 + 8 * ((unint64_t)v10 >> 6)) & (1 << v10)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(a1 + 36) != v9)
      goto LABEL_24;
    v16 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v10);
    v17 = *(_QWORD *)(v28 + 16);
    v18 = *(_QWORD *)(v28 + 24);
    result = swift_bridgeObjectRetain();
    if (v17 >= v18 >> 1)
      result = a3(v18 > 1, v17 + 1, 1);
    *(_QWORD *)(v28 + 16) = v17 + 1;
    *(_QWORD *)(v28 + 8 * v17 + 32) = v16;
    v13 = 1 << *(_BYTE *)(a1 + 32);
    if (v10 >= v13)
      goto LABEL_25;
    v12 = a1 + 64;
    v19 = *(_QWORD *)(v27 + 8 * v15);
    if ((v19 & (1 << v10)) == 0)
      goto LABEL_26;
    v9 = v26;
    if (*(_DWORD *)(a1 + 36) != v26)
      goto LABEL_27;
    v20 = v19 & (-2 << (v10 & 0x3F));
    if (v20)
    {
      v13 = __clz(__rbit64(v20)) | v10 & 0xFFFFFFFFFFFFFFC0;
      v14 = v25;
    }
    else
    {
      v21 = v15 + 1;
      v22 = (unint64_t)(v13 + 63) >> 6;
      v14 = v25;
      if (v15 + 1 < v22)
      {
        v23 = *(_QWORD *)(v27 + 8 * v21);
        if (v23)
        {
LABEL_20:
          v13 = __clz(__rbit64(v23)) + (v21 << 6);
        }
        else
        {
          while (v22 - 2 != v15)
          {
            v23 = *(_QWORD *)(a1 + 80 + 8 * v15++);
            if (v23)
            {
              v21 = v15 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v11;
    v10 = v13;
    if (v11 == v14)
      return v5;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1BC220404(void (*a1)(_QWORD *__return_ptr, uint64_t *), uint64_t a2, unint64_t isUniquelyReferenced_nonNull_native, uint64_t a4, unint64_t a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t *v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t (*v29)();
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t i;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t result;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  _BYTE v47[16];
  uint64_t v48[4];
  _QWORD v49[2];
  uint64_t v50;
  uint64_t v51;

  v5 = a5;
  v51 = MEMORY[0x1E0DEE9E0];
  if (a5 >> 62)
  {
LABEL_32:
    swift_bridgeObjectRetain();
    v8 = sub_1BC2B52D0();
    if (v8)
      goto LABEL_3;
  }
  else
  {
    v8 = *(_QWORD *)((a5 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8)
    {
LABEL_3:
      v42 = isUniquelyReferenced_nonNull_native;
      v43 = a4;
      v44 = v5;
      v45 = v5 & 0xC000000000000001;
      v9 = 4;
      while (1)
      {
        v10 = v9 - 4;
        if (v45)
        {
          v11 = MEMORY[0x1BCCEE950](v9 - 4, v5);
          v12 = v9 - 3;
          if (__OFADD__(v10, 1))
            goto LABEL_29;
        }
        else
        {
          v11 = *(_QWORD *)(v5 + 8 * v9);
          swift_retain();
          v12 = v9 - 3;
          if (__OFADD__(v10, 1))
          {
LABEL_29:
            __break(1u);
LABEL_30:
            __break(1u);
LABEL_31:
            __break(1u);
            goto LABEL_32;
          }
        }
        v50 = v11;
        a1(v49, &v50);
        v5 = v51;
        v14 = v49[0];
        v13 = v49[1];
        if (!*(_QWORD *)(v51 + 16))
          break;
        swift_bridgeObjectRetain();
        sub_1BC107DA4(v14, v13);
        v16 = v15;
        swift_bridgeObjectRelease();
        if ((v16 & 1) == 0)
          break;
LABEL_25:
        swift_bridgeObjectRetain();
        v29 = sub_1BC220CF8(v48, v14, v13);
        if (*v28)
        {
          v30 = v28;
          a4 = v50;
          v31 = swift_retain();
          MEMORY[0x1BCCEDCF0](v31);
          isUniquelyReferenced_nonNull_native = *(_QWORD *)((*v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (isUniquelyReferenced_nonNull_native >= *(_QWORD *)((*v30 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1BC2B45C8();
          sub_1BC2B4604();
          sub_1BC2B45A4();
        }
        ((void (*)(uint64_t *, _QWORD))v29)(v48, 0);
        v5 = v44;
        swift_bridgeObjectRelease_n();
        swift_release();
        ++v9;
        if (v12 == v8)
        {
          swift_bridgeObjectRelease();
          isUniquelyReferenced_nonNull_native = v42;
          a4 = v43;
          goto LABEL_34;
        }
      }
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v48[0] = v5;
      v18 = sub_1BC107DA4(v14, v13);
      v19 = *(_QWORD *)(v5 + 16);
      v20 = (v17 & 1) == 0;
      v21 = v19 + v20;
      if (__OFADD__(v19, v20))
        goto LABEL_30;
      a4 = v17;
      if (*(_QWORD *)(v5 + 24) < v21)
      {
        sub_1BC15AAA8(v21, isUniquelyReferenced_nonNull_native);
        v22 = sub_1BC107DA4(v14, v13);
        if ((a4 & 1) != (v23 & 1))
        {
          sub_1BC2B53F0();
          __break(1u);
          result = swift_release();
          __break(1u);
          return result;
        }
        v18 = v22;
        v5 = v48[0];
        if ((a4 & 1) == 0)
          goto LABEL_22;
LABEL_20:
        a4 = *(_QWORD *)(v5 + 56);
        swift_bridgeObjectRelease();
        *(_QWORD *)(a4 + 8 * v18) = MEMORY[0x1E0DEE9D8];
LABEL_24:
        v51 = v5;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_25;
      }
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v5 = v48[0];
        if ((v17 & 1) != 0)
          goto LABEL_20;
      }
      else
      {
        sub_1BC15BC60();
        v5 = v48[0];
        if ((a4 & 1) != 0)
          goto LABEL_20;
      }
LABEL_22:
      *(_QWORD *)(v5 + 8 * (v18 >> 6) + 64) |= 1 << v18;
      v24 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v18);
      *v24 = v14;
      v24[1] = v13;
      *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v18) = MEMORY[0x1E0DEE9D8];
      v25 = *(_QWORD *)(v5 + 16);
      v26 = __OFADD__(v25, 1);
      v27 = v25 + 1;
      if (v26)
        goto LABEL_31;
      *(_QWORD *)(v5 + 16) = v27;
      swift_bridgeObjectRetain();
      goto LABEL_24;
    }
  }
  swift_bridgeObjectRelease();
LABEL_34:
  v32 = swift_bridgeObjectRetain();
  v33 = sub_1BC2201FC(v32, (uint64_t)v47, (uint64_t (*)(BOOL, unint64_t, uint64_t))sub_1BC125CD4, sub_1BC282F04);
  swift_bridgeObjectRelease();
  v48[0] = v33;
  swift_bridgeObjectRetain();
  sub_1BC225DC8(v48, isUniquelyReferenced_nonNull_native, a4, (uint64_t (*)(uint64_t))sub_1BC26E268, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_1BC224738);
  swift_bridgeObjectRelease();
  v34 = v48[0];
  v35 = *(_QWORD *)(v48[0] + 16);
  if (v35)
  {
    swift_retain();
    v36 = sub_1BC0FAEF4(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    for (i = 0; i != v35; ++i)
    {
      v38 = *(_QWORD *)(v34 + 8 * i + 32);
      v39 = v36[2];
      v40 = v36[3];
      swift_bridgeObjectRetain();
      if (v39 >= v40 >> 1)
        v36 = sub_1BC0FAEF4((_QWORD *)(v40 > 1), v39 + 1, 1, v36);
      v36[2] = v39 + 1;
      v36[v39 + 4] = v38;
    }
    swift_release_n();
  }
  else
  {
    swift_release();
    v36 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v36;
}

uint64_t sub_1BC22087C(void (*a1)(_QWORD *__return_ptr, void **), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v9;
  void *v10;
  void *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  char isUniquelyReferenced_nonNull_native;
  char v19;
  unint64_t v20;
  uint64_t v21;
  _BOOL8 v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  char v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  _QWORD **v33;
  uint64_t (*v34)();
  _QWORD *v35;
  _QWORD *v36;
  void *v37;
  void *v38;
  char v39;
  char v40;
  unint64_t v41;
  unint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t i;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t result;
  void *v57;
  void *v58;
  char v59;
  _BYTE v60[16];
  uint64_t v61[4];
  _QWORD v62[2];
  void *v63;
  void *v64;
  char v65;
  _QWORD *v66;

  v5 = a4;
  v6 = a3;
  v7 = *(_QWORD *)(a5 + 16);
  v66 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  if (!v7)
  {
LABEL_26:
    v44 = swift_bridgeObjectRetain();
    v45 = sub_1BC2201FC(v44, (uint64_t)v60, (uint64_t (*)(BOOL, unint64_t, uint64_t))sub_1BC125D6C, sub_1BC282F04);
    swift_bridgeObjectRelease();
    v61[0] = v45;
    swift_bridgeObjectRetain();
    sub_1BC225DC8(v61, v6, v5, (uint64_t (*)(uint64_t))sub_1BC26E27C, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_1BC225534);
    swift_bridgeObjectRelease();
    v46 = v61[0];
    v47 = *(_QWORD *)(v61[0] + 16);
    if (v47)
    {
      swift_retain();
      v48 = sub_1BC0FB140(0, 1, 1, MEMORY[0x1E0DEE9D8]);
      for (i = 0; i != v47; ++i)
      {
        v50 = *(_QWORD *)(v46 + 8 * i + 32);
        v51 = v48[2];
        v52 = v48[3];
        swift_bridgeObjectRetain();
        if (v51 >= v52 >> 1)
          v48 = sub_1BC0FB140((_QWORD *)(v52 > 1), v51 + 1, 1, v48);
        v48[2] = v51 + 1;
        v48[v51 + 4] = v50;
      }
      swift_release_n();
    }
    else
    {
      swift_release();
      v48 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    return (uint64_t)v48;
  }
  swift_bridgeObjectRetain();
  v9 = (char *)(a5 + 48);
  while (1)
  {
    v11 = (void *)*((_QWORD *)v9 - 2);
    v10 = (void *)*((_QWORD *)v9 - 1);
    v12 = *v9;
    v63 = v11;
    v64 = v10;
    v65 = v12;
    v59 = v12;
    sub_1BC0FA444(v11, v10, v12);
    a1(v62, &v63);
    v13 = (uint64_t)v66;
    v14 = v62[0];
    v15 = v62[1];
    if (v66[2])
    {
      swift_bridgeObjectRetain();
      sub_1BC107DA4(v14, v15);
      v17 = v16;
      swift_bridgeObjectRelease();
      if ((v17 & 1) != 0)
        goto LABEL_19;
    }
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v61[0] = v13;
    v20 = sub_1BC107DA4(v14, v15);
    v21 = *(_QWORD *)(v13 + 16);
    v22 = (v19 & 1) == 0;
    v23 = v21 + v22;
    if (__OFADD__(v21, v22))
      break;
    v24 = v19;
    if (*(_QWORD *)(v13 + 24) >= v23)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v27 = (_QWORD *)v61[0];
        if ((v19 & 1) == 0)
          goto LABEL_16;
      }
      else
      {
        sub_1BC15BF98();
        v27 = (_QWORD *)v61[0];
        if ((v24 & 1) == 0)
          goto LABEL_16;
      }
    }
    else
    {
      sub_1BC15B080(v23, isUniquelyReferenced_nonNull_native);
      v25 = sub_1BC107DA4(v14, v15);
      if ((v24 & 1) != (v26 & 1))
        goto LABEL_36;
      v20 = v25;
      v27 = (_QWORD *)v61[0];
      if ((v24 & 1) == 0)
      {
LABEL_16:
        v27[(v20 >> 6) + 8] |= 1 << v20;
        v29 = (uint64_t *)(v27[6] + 16 * v20);
        *v29 = v14;
        v29[1] = v15;
        *(_QWORD *)(v27[7] + 8 * v20) = MEMORY[0x1E0DEE9D8];
        v30 = v27[2];
        v31 = __OFADD__(v30, 1);
        v32 = v30 + 1;
        if (v31)
          goto LABEL_35;
        v27[2] = v32;
        swift_bridgeObjectRetain();
        goto LABEL_18;
      }
    }
    v28 = v27[7];
    swift_bridgeObjectRelease();
    *(_QWORD *)(v28 + 8 * v20) = MEMORY[0x1E0DEE9D8];
LABEL_18:
    v66 = v27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_19:
    v58 = v10;
    swift_bridgeObjectRetain();
    v34 = sub_1BC220D68(v61, v14, v15);
    v35 = *v33;
    if (*v33)
    {
      v36 = v33;
      v57 = v11;
      v37 = v63;
      v38 = v64;
      v39 = v65;
      sub_1BC0FA444(v63, v64, v65);
      v40 = swift_isUniquelyReferenced_nonNull_native();
      *v36 = v35;
      if ((v40 & 1) == 0)
      {
        v35 = sub_1BC0FADA4(0, v35[2] + 1, 1, v35);
        *v36 = v35;
      }
      v42 = v35[2];
      v41 = v35[3];
      if (v42 >= v41 >> 1)
      {
        v35 = sub_1BC0FADA4((_QWORD *)(v41 > 1), v42 + 1, 1, v35);
        *v36 = v35;
      }
      v10 = v58;
      v35[2] = v42 + 1;
      v43 = &v35[3 * v42];
      v43[4] = v37;
      v43[5] = v38;
      *((_BYTE *)v43 + 48) = v39;
      ((void (*)(uint64_t *, _QWORD))v34)(v61, 0);
      v11 = v57;
    }
    else
    {
      ((void (*)(uint64_t *, _QWORD))v34)(v61, 0);
    }
    v9 += 24;
    swift_bridgeObjectRelease_n();
    sub_1BC0FA484(v11, v10, v59);
    if (!--v7)
    {
      swift_bridgeObjectRelease();
      v6 = a3;
      v5 = a4;
      goto LABEL_26;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  sub_1BC2B53F0();
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t (*sub_1BC220CF8(_QWORD *a1, uint64_t a2, uint64_t a3))()
{
  _QWORD *v6;

  v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = a3;
  swift_bridgeObjectRetain();
  v6[5] = sub_1BC22328C(v6, a2, a3);
  return sub_1BC220D64;
}

uint64_t (*sub_1BC220D68(_QWORD *a1, uint64_t a2, uint64_t a3))()
{
  _QWORD *v6;

  v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = a3;
  swift_bridgeObjectRetain();
  v6[5] = sub_1BC223320(v6, a2, a3);
  return sub_1BC220D64;
}

void sub_1BC220DD4(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 40))(*a1, 0);
  swift_bridgeObjectRelease();
  free(v1);
}

uint64_t sub_1BC220E0C(unint64_t a1, unint64_t a2, uint64_t (*a3)(uint64_t *, uint64_t *))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;

  if (!(a1 >> 62))
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  if (!sub_1BC2B52D0())
    goto LABEL_13;
LABEL_3:
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_14:
    v7 = MEMORY[0x1BCCEE950](0, a1);
    goto LABEL_6;
  }
  if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_16;
  }
  v7 = *(_QWORD *)(a1 + 32);
  swift_retain();
LABEL_6:
  swift_bridgeObjectRelease();
  v13 = v7;
  if (!(a2 >> 62))
  {
    v8 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v8)
      goto LABEL_8;
LABEL_17:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_18;
  }
LABEL_16:
  swift_bridgeObjectRetain();
  result = sub_1BC2B52D0();
  if (!result)
    goto LABEL_17;
LABEL_8:
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_18:
    v10 = MEMORY[0x1BCCEE950](0, a2);
    goto LABEL_11;
  }
  if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v10 = *(_QWORD *)(a2 + 32);
    swift_retain();
LABEL_11:
    swift_bridgeObjectRelease();
    v12 = v10;
    v11 = a3(&v13, &v12);
    swift_release();
    swift_release();
    return v11 & 1;
  }
  __break(1u);
  return result;
}

id sub_1BC220F98(id result, uint64_t a2, uint64_t (*a3)(void **, void **))
{
  void *v5;
  char v6;
  void *v7;
  char v8;
  char v9;
  void *v10;
  void *v11;
  unsigned __int8 v12;
  void *v13;
  void *v14;
  unsigned __int8 v15;

  if (!*((_QWORD *)result + 2)
    || (v5 = (void *)*((_QWORD *)result + 5),
        v6 = *((_BYTE *)result + 48),
        v13 = (void *)*((_QWORD *)result + 4),
        v14 = v5,
        v15 = v6,
        result = sub_1BC0FA444(v13, v5, v6),
        v15 == 255))
  {
    __break(1u);
  }
  else if (*(_QWORD *)(a2 + 16))
  {
    v7 = *(void **)(a2 + 40);
    v8 = *(_BYTE *)(a2 + 48);
    v10 = *(void **)(a2 + 32);
    v11 = v7;
    v12 = v8;
    result = sub_1BC0FA444(v10, v7, v8);
    if (v12 != 255)
    {
      v9 = a3(&v13, &v10);
      sub_1BC0FA484(v10, v11, v12);
      sub_1BC0FA484(v13, v14, v15);
      return (id)(v9 & 1);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC22105C(unint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t i;
  void *v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;

  v9 = MEMORY[0x1E0DEE9D8];
  if (!(a1 >> 62))
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v2)
      goto LABEL_3;
LABEL_15:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRetain();
  result = sub_1BC2B52D0();
  v2 = result;
  if (!result)
    goto LABEL_15;
LABEL_3:
  if (v2 < 1)
  {
    __break(1u);
  }
  else
  {
    for (i = 0; i != v2; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
        MEMORY[0x1BCCEE950](i, a1);
      else
        swift_retain();
      v5 = (void *)sub_1BC2B3398();
      v6 = objc_msgSend(v5, sel_status);

      if (v6 == (id)4
        || (v7 = (void *)sub_1BC2B3398(), v8 = objc_msgSend(v7, sel_status), v7, v8 == (id)5))
      {
        sub_1BC2B5204();
        sub_1BC2B5234();
        sub_1BC2B5240();
        sub_1BC2B5210();
      }
      else
      {
        swift_release();
      }
    }
    swift_bridgeObjectRelease();
    return v9;
  }
  return result;
}

uint64_t sub_1BC2211DC(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  BOOL v24;
  uint64_t v25;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;

  v2 = sub_1BC2B23F0();
  v3 = *(_QWORD *)(v2 - 8);
  v28 = v2;
  v29 = v3;
  MEMORY[0x1E0C80A78](v2);
  v27 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v27 - v7;
  v32 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
  {
LABEL_24:
    swift_bridgeObjectRetain();
    v9 = sub_1BC2B52D0();
    if (v9)
      goto LABEL_3;
  }
  else
  {
    v9 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v9)
    {
LABEL_3:
      v10 = 0;
      v30 = a1 & 0xFFFFFFFFFFFFFF8;
      v31 = a1 & 0xC000000000000001;
      while (1)
      {
        if (v31)
        {
          v11 = a1;
          MEMORY[0x1BCCEE950](v10, a1);
          v12 = v10 + 1;
          if (__OFADD__(v10, 1))
          {
LABEL_21:
            __break(1u);
LABEL_22:
            v25 = v32;
            goto LABEL_26;
          }
        }
        else
        {
          if (v10 >= *(_QWORD *)(v30 + 16))
          {
            __break(1u);
            goto LABEL_24;
          }
          v11 = a1;
          swift_retain();
          v12 = v10 + 1;
          if (__OFADD__(v10, 1))
            goto LABEL_21;
        }
        v13 = (void *)sub_1BC2B3398();
        v14 = objc_msgSend(v13, sel_scheduleItemIdentifier);

        if (!v14)
          goto LABEL_15;

        v15 = (void *)sub_1BC2B3398();
        v16 = objc_msgSend(v15, sel_scheduledDate);

        if (!v16)
          break;
        v17 = v27;
        sub_1BC2B23A8();

        v19 = v28;
        v18 = v29;
        (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v8, v17, v28);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v8, 0, 1, v19);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v8, 1, v19) == 1)
          goto LABEL_14;
        sub_1BC0F8D88((uint64_t)v8);
        v20 = (void *)sub_1BC2B3398();
        v21 = objc_msgSend(v20, sel_status);

        if (v21 == (id)4)
          goto LABEL_15;
        v22 = (void *)sub_1BC2B3398();
        v23 = objc_msgSend(v22, byte_1E74CA848);

        if (v23 == (id)5)
          goto LABEL_15;
        sub_1BC2B5204();
        sub_1BC2B5234();
        sub_1BC2B5240();
        sub_1BC2B5210();
LABEL_16:
        ++v10;
        v24 = v12 == v9;
        a1 = v11;
        if (v24)
          goto LABEL_22;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56))(v8, 1, 1, v28);
LABEL_14:
      sub_1BC0F8D88((uint64_t)v8);
LABEL_15:
      swift_release();
      goto LABEL_16;
    }
  }
  v25 = MEMORY[0x1E0DEE9D8];
LABEL_26:
  swift_bridgeObjectRelease();
  return v25;
}

uint64_t sub_1BC2214F0(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;

  v1 = a1;
  if (!(a1 >> 62))
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v2)
      goto LABEL_3;
LABEL_17:
    v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_18:
    swift_bridgeObjectRelease();
    v20 = sub_1BC1CCE6C((uint64_t)v5);
    swift_bridgeObjectRelease();
    return v20;
  }
  swift_bridgeObjectRetain();
  result = sub_1BC2B52D0();
  v2 = result;
  if (!result)
    goto LABEL_17;
LABEL_3:
  if (v2 >= 1)
  {
    v4 = 0;
    v22 = v1 & 0xC000000000000001;
    v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v21 = v1;
    do
    {
      if (v22)
        MEMORY[0x1BCCEE950](v4, v1);
      else
        swift_retain();
      v6 = (void *)sub_1BC2B3398();
      v7 = objc_msgSend(v6, sel_scheduleItemIdentifier);
      if (v7)
      {
        v8 = v7;
        v9 = v2;
        v10 = sub_1BC2B4460();
        v12 = v11;

        v13 = objc_msgSend(v6, sel_medicationIdentifier);
        v14 = sub_1BC2B4460();
        v16 = v15;
        swift_release();

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v5 = sub_1BC0FAC84(0, v5[2] + 1, 1, v5);
        v18 = v5[2];
        v17 = v5[3];
        if (v18 >= v17 >> 1)
          v5 = sub_1BC0FAC84((_QWORD *)(v17 > 1), v18 + 1, 1, v5);
        v5[2] = v18 + 1;
        v19 = &v5[4 * v18];
        v19[4] = v14;
        v19[5] = v16;
        v19[6] = v10;
        v19[7] = v12;
        v2 = v9;
        v1 = v21;
      }
      else
      {
        swift_release();

      }
      ++v4;
    }
    while (v2 != v4);
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC2216F4(unint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;

  if (!(a1 >> 62))
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v2)
      goto LABEL_3;
LABEL_17:
    v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_18:
    swift_bridgeObjectRelease();
    return (uint64_t)v5;
  }
  swift_bridgeObjectRetain();
  result = sub_1BC2B52D0();
  v2 = result;
  if (!result)
    goto LABEL_17;
LABEL_3:
  if (v2 >= 1)
  {
    v4 = 0;
    v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        MEMORY[0x1BCCEE950](v4, a1);
      else
        swift_retain();
      v6 = sub_1BC2B33A4();
      if (v6)
      {
        v7 = v6;
        v8 = sub_1BC2B3398();
        swift_release();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v5 = sub_1BC0FADA4(0, v5[2] + 1, 1, v5);
        v10 = v5[2];
        v9 = v5[3];
        if (v10 >= v9 >> 1)
          v5 = sub_1BC0FADA4((_QWORD *)(v9 > 1), v10 + 1, 1, v5);
        v5[2] = v10 + 1;
        v11 = &v5[3 * v10];
        v11[4] = v8;
        v11[5] = v7;
        *((_BYTE *)v11 + 48) = 1;
      }
      else
      {
        swift_release();
      }
      ++v4;
    }
    while (v2 != v4);
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC22187C(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11[2];
  uint64_t v12;

  v12 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
  {
LABEL_12:
    swift_bridgeObjectRetain();
    v2 = sub_1BC2B52D0();
    if (v2)
      goto LABEL_3;
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      v3 = 4;
      while (1)
      {
        v4 = v3 - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          v5 = MEMORY[0x1BCCEE950](v3 - 4, a1);
          v6 = __OFADD__(v4, 1);
          v7 = v3 - 3;
          if (v6)
            goto LABEL_11;
        }
        else
        {
          v5 = *(_QWORD *)(a1 + 8 * v3);
          swift_retain();
          v6 = __OFADD__(v4, 1);
          v7 = v3 - 3;
          if (v6)
          {
LABEL_11:
            __break(1u);
            goto LABEL_12;
          }
        }
        v11[1] = v5;
        sub_1BC1AFA6C(v11);
        swift_release();
        sub_1BC1318C8(v11[0]);
        ++v3;
        if (v7 == v2)
        {
          swift_bridgeObjectRelease();
          v8 = v12;
          goto LABEL_14;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  v8 = MEMORY[0x1E0DEE9D8];
LABEL_14:
  v9 = sub_1BC1CCE6C(v8);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t DayScheduleProvider.init(doseEvents:scheduleItems:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t DayScheduleProvider.makeLoggableItems<A>(using:)()
{
  unint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v0 = swift_bridgeObjectRetain();
  v1 = sub_1BC2211DC(v0);
  swift_bridgeObjectRelease();
  v2 = swift_bridgeObjectRetain();
  v3 = sub_1BC22105C(v2);
  v4 = sub_1BC2214F0(v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = sub_1BC221DC4();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = swift_bridgeObjectRetain();
  v7 = sub_1BC225E58(v6, v4, v5, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  v8 = sub_1BC2216F4(v1);
  swift_bridgeObjectRelease();
  sub_1BC131764(v7);
  return v8;
}

uint64_t DayScheduleProvider.makeHistoryItems(ungrouped:)(char a1)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _UNKNOWN **v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  unint64_t v25;
  _QWORD v26[3];
  uint64_t v27;
  _UNKNOWN **v28;
  uint64_t v29;

  v2 = swift_bridgeObjectRetain();
  v3 = sub_1BC22105C(v2);
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
  {
    v22 = sub_1BC220404((void (*)(_QWORD *__return_ptr, uint64_t *))sub_1BC190DF0, 0, (unint64_t)sub_1BC190F78, 0, v3);
    swift_bridgeObjectRelease();
    v23 = sub_1BC0F7FC0(v22);
    swift_bridgeObjectRelease();
    return v23;
  }
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    v4 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
    if (v4)
      goto LABEL_4;
LABEL_16:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    goto LABEL_16;
LABEL_4:
  v29 = MEMORY[0x1E0DEE9D8];
  result = sub_1BC125CF0(0, v4 & ~(v4 >> 63), 0);
  if (v4 < 0)
  {
    __break(1u);
    return result;
  }
  v6 = 0;
  v7 = v29;
  v25 = v3 & 0xC000000000000001;
  v8 = MEMORY[0x1E0DEE9B0] + 8;
  v24 = xmmword_1BC2B7770;
  do
  {
    if (v25)
    {
      v9 = MEMORY[0x1BCCEE950](v6, v3);
    }
    else
    {
      v9 = *(_QWORD *)(v3 + 8 * v6 + 32);
      swift_retain();
    }
    sub_1BC0E2130(0, (unint64_t *)&qword_1EDA0FEF0, v8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = v24;
    *(_QWORD *)(v10 + 32) = v9;
    v26[0] = v10;
    sub_1BC2B45A4();
    v11 = v26[0];
    sub_1BC0E7998(0, &qword_1EF3F91A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v27 = v12;
    v28 = &protocol witness table for <A> [A];
    v26[0] = v11;
    v29 = v7;
    v14 = *(_QWORD *)(v7 + 16);
    v13 = *(_QWORD *)(v7 + 24);
    if (v14 >= v13 >> 1)
    {
      v16 = v3;
      sub_1BC125CF0(v13 > 1, v14 + 1, 1);
      v15 = v27;
      v17 = v28;
    }
    else
    {
      v15 = v12;
      v16 = v3;
      v17 = &protocol witness table for <A> [A];
    }
    ++v6;
    v18 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v26, v15);
    MEMORY[0x1E0C80A78](v18);
    v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v21 + 16))(v20);
    sub_1BC2241D0(v14, (uint64_t)v20, &v29, v15, (uint64_t)v17);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v26);
    v7 = v29;
    v3 = v16;
  }
  while (v4 != v6);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1BC221DC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char v17;
  char v18;
  unsigned int (**v19)(_QWORD, _QWORD, _QWORD);
  uint64_t v20;
  void *v21;
  char v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  _BOOL4 v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  id v32;
  char *v33;
  void (*v34)(char *, uint64_t);
  id v35;
  id v36;
  id v37;
  void *v38;
  void *v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  id v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _BOOL4 v69;
  unint64_t v70;
  void (*v71)(char *, uint64_t);
  unint64_t v72;
  char *v73;
  char *v74;
  char *v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  unsigned int (**v81)(_QWORD, _QWORD, _QWORD);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;

  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v65 - v2;
  v4 = sub_1BC2B23F0();
  v81 = *(unsigned int (***)(_QWORD, _QWORD, _QWORD))(v4 - 8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v74 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v73 = (char *)&v65 - v8;
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v65 - v10;
  MEMORY[0x1E0C80A78](v9);
  v75 = (char *)&v65 - v12;
  v13 = sub_1BC2B25B8();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = *(_QWORD *)(v0 + 8);
  sub_1BC2B3368();
  v80 = sub_1BC2B3374();
  v18 = v17;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  if ((v18 & 1) != 0)
    return MEMORY[0x1E0DEE9E8];
  sub_1BC2B335C();
  v19 = v81;
  if (((unsigned int (**)(char *, uint64_t, uint64_t))v81)[6](v3, 1, v4) == 1)
  {
    sub_1BC0F8D88((uint64_t)v3);
    return MEMORY[0x1E0DEE9E8];
  }
  v20 = v4;
  v21 = v75;
  ((unsigned int (**)(char *, char *, uint64_t))v19)[4](v75, v3, v4);
  sub_1BC2B23E4();
  sub_1BC226280();
  v22 = sub_1BC2B4418();
  v23 = (unint64_t)v19[1];
  ((void (*)(char *, uint64_t))v23)(v11, v4);
  if ((v22 & 1) != 0)
  {
    ((void (*)(void *, uint64_t))v23)(v21, v4);
    return MEMORY[0x1E0DEE9E8];
  }
  v84 = MEMORY[0x1E0DEE9D8];
  if (v72 >> 62)
    goto LABEL_40;
  v26 = *(_QWORD *)((v72 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  if (v26)
  {
LABEL_10:
    v27 = 0;
    v28 = v80 < 0;
    if (!__OFSUB__(0, v80))
      v28 = 0;
    v69 = v28;
    v70 = v72 & 0xC000000000000001;
    v71 = (void (*)(char *, uint64_t))v23;
    v66 = v72 + 32;
    v68 = v20;
    v67 = v26;
    while (1)
    {
      if (v70)
      {
        v29 = MEMORY[0x1BCCEE950](v27, v72);
      }
      else
      {
        v29 = *(_QWORD *)(v66 + 8 * v27);
        swift_retain();
      }
      v23 = (unint64_t)v74;
      v30 = __OFADD__(v27, 1);
      v31 = v27 + 1;
      if (v30)
      {
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        swift_bridgeObjectRetain_n();
        v26 = sub_1BC2B52D0();
        if (!v26)
          break;
        goto LABEL_10;
      }
      v21 = (void *)sub_1BC2B3434();
      v32 = objc_msgSend(v21, sel_scheduledDateTime);
      sub_1BC2B23A8();

      if (v69)
        goto LABEL_39;
      v77 = v29;
      v78 = v31;
      v33 = v73;
      sub_1BC2B2354();
      v34 = v71;
      v71((char *)v23, v20);
      v35 = objc_msgSend(v21, sel_notificationSent);
      v76 = v21;
      v36 = objc_msgSend(v21, sel_doses);
      sub_1BC2262C8();
      v21 = (void *)sub_1BC2B458C();

      v37 = objc_allocWithZone(MEMORY[0x1E0D2C4A8]);
      v38 = (void *)sub_1BC2B2360();
      v39 = (void *)sub_1BC2B4580();
      swift_bridgeObjectRelease();
      v40 = objc_msgSend(v37, sel_initWithScheduledDateTime_notificationSent_doses_, v38, v35, v39);

      v34(v33, v20);
      v81 = (unsigned int (**)(_QWORD, _QWORD, _QWORD))v40;
      v41 = objc_msgSend(v40, sel_doses);
      v23 = sub_1BC2B458C();

      if (v23 >> 62)
      {
        swift_bridgeObjectRetain();
        v42 = sub_1BC2B52D0();
        swift_bridgeObjectRelease();
        if (!v42)
        {
LABEL_31:
          swift_bridgeObjectRelease();
          v44 = MEMORY[0x1E0DEE9D8];
          goto LABEL_32;
        }
      }
      else
      {
        v42 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (!v42)
          goto LABEL_31;
      }
      v82 = MEMORY[0x1E0DEE9D8];
      sub_1BC125CB8(0, v42 & ~(v42 >> 63), 0);
      if (v42 < 0)
        goto LABEL_38;
      v43 = 0;
      v44 = v82;
      v79 = v23 & 0xC000000000000001;
      v80 = v23;
      do
      {
        if (v79)
          v45 = (id)MEMORY[0x1BCCEE950](v43, v23);
        else
          v45 = *(id *)(v23 + 8 * v43 + 32);
        v46 = v45;
        v47 = objc_msgSend(v81, sel_identifier);
        v48 = sub_1BC2B4460();
        v50 = v49;

        v51 = objc_msgSend(v46, sel_medicationIdentifier);
        v52 = sub_1BC2B4460();
        v54 = v53;

        v82 = v44;
        v56 = *(_QWORD *)(v44 + 16);
        v55 = *(_QWORD *)(v44 + 24);
        if (v56 >= v55 >> 1)
        {
          sub_1BC125CB8(v55 > 1, v56 + 1, 1);
          v44 = v82;
        }
        ++v43;
        *(_QWORD *)(v44 + 16) = v56 + 1;
        v57 = (_QWORD *)(v44 + 32 * v56);
        v57[4] = v52;
        v57[5] = v54;
        v57[6] = v48;
        v57[7] = v50;
        v23 = v80;
      }
      while (v42 != v43);
      swift_bridgeObjectRelease();
LABEL_32:
      sub_1BC1CD974();
      v83 = sub_1BC2B47C0();
      v58 = *(_QWORD *)(v44 + 16);
      if (v58)
      {
        v59 = (uint64_t *)(v44 + 56);
        do
        {
          v60 = *(v59 - 3);
          v61 = *(v59 - 2);
          v62 = *(v59 - 1);
          v63 = *v59;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BC21422C(&v82, v60, v61, v62, v63);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v59 += 4;
          --v58;
        }
        while (v58);
      }

      swift_bridgeObjectRelease();
      swift_release();

      sub_1BC13134C(v83);
      v27 = v78;
      v20 = v68;
      v21 = v75;
      if (v78 == v67)
      {
        swift_bridgeObjectRelease_n();
        v64 = v84;
        v23 = (unint64_t)v71;
        goto LABEL_42;
      }
    }
  }
  swift_bridgeObjectRelease_n();
  v64 = MEMORY[0x1E0DEE9D8];
LABEL_42:
  v24 = sub_1BC1CCE6C(v64);
  swift_bridgeObjectRelease();
  ((void (*)(void *, uint64_t))v23)(v21, v20);
  return v24;
}

uint64_t DayScheduleProvider.isDoneForToday.getter()
{
  unint64_t *v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *v0;
  v2 = v0[1];
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v13 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
    if (!v13)
      goto LABEL_5;
  }
  else if (!*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_5;
  }
  if (!(v1 >> 62))
  {
    if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_5;
LABEL_13:
    v11 = 0;
    return v11 & 1;
  }
  swift_bridgeObjectRetain();
  v14 = sub_1BC2B52D0();
  swift_bridgeObjectRelease();
  if (!v14)
    goto LABEL_13;
LABEL_5:
  v3 = swift_bridgeObjectRetain();
  v4 = sub_1BC22187C(v3);
  swift_bridgeObjectRelease();
  v5 = swift_bridgeObjectRetain();
  v6 = sub_1BC22105C(v5);
  v7 = sub_1BC2214F0(v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8 = swift_bridgeObjectRetain();
  v9 = sub_1BC2211DC(v8);
  v10 = sub_1BC2214F0(v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v7 + 16) && !*(_QWORD *)(v10 + 16))
  {
    v12 = sub_1BC222670(v10, v7);
    v11 = sub_1BC22378C(v12, v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v11 = 0;
  }
  swift_bridgeObjectRelease();
  return v11 & 1;
}

uint64_t sub_1BC222670(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = result;
  v3 = 0;
  v20 = a2;
  v4 = result + 56;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(result + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v16 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v16 >= v8)
      goto LABEL_23;
    v17 = *(_QWORD *)(v4 + 8 * v16);
    ++v3;
    if (!v17)
    {
      v3 = v16 + 1;
      if (v16 + 1 >= v8)
        goto LABEL_23;
      v17 = *(_QWORD *)(v4 + 8 * v3);
      if (!v17)
      {
        v3 = v16 + 2;
        if (v16 + 2 >= v8)
          goto LABEL_23;
        v17 = *(_QWORD *)(v4 + 8 * v3);
        if (!v17)
        {
          v3 = v16 + 3;
          if (v16 + 3 >= v8)
            goto LABEL_23;
          v17 = *(_QWORD *)(v4 + 8 * v3);
          if (!v17)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v17 - 1) & v17;
    v10 = __clz(__rbit64(v17)) + (v3 << 6);
LABEL_5:
    v11 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 32 * v10);
    v12 = *v11;
    v13 = v11[1];
    v14 = v11[2];
    v15 = v11[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BC21422C(&v19, v12, v13, v14, v15);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  v18 = v16 + 4;
  if (v18 >= v8)
  {
LABEL_23:
    swift_release();
    return v20;
  }
  v17 = *(_QWORD *)(v4 + 8 * v18);
  if (v17)
  {
    v3 = v18;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v17 = *(_QWORD *)(v4 + 8 * v3);
    ++v18;
    if (v17)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1BC222810@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, uint64_t, uint64_t);
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  void *v37;
  id v38;
  void *v39;
  id v40;
  void *v41;
  uint64_t v42;
  _QWORD v43[5];
  uint64_t v44;
  uint64_t v45;

  v44 = a3;
  v43[3] = a5;
  v43[4] = a4;
  v45 = a2;
  v8 = sub_1BC2B23F0();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BC2B356C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v43[2] = a1;
  v15(v14, a1, v11);
  v16 = (void *)sub_1BC2B3560();
  v17 = objc_msgSend(v16, sel_semanticIdentifier);

  v18 = objc_msgSend(v17, sel_stringValue);
  v19 = sub_1BC2B4460();
  v21 = v20;

  v22 = sub_1BC2B3548();
  v24 = v23;
  v25 = v11;
  v26 = v45;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v25);
  if ((sub_1BC211774(v19, v21, v22, v24, v26) & 1) != 0)
  {
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    *(_QWORD *)a6 = 0;
    *(_QWORD *)(a6 + 8) = 0;
    *(_BYTE *)(a6 + 16) = -1;
    return result;
  }
  v43[1] = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v28 = swift_bridgeObjectRetain();
  v29 = sub_1BC224404(v28, v19, v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v30 = *(_QWORD *)(sub_1BC223AA4(v44, v29) + 16);
  swift_release();
  if (v30)
  {
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
LABEL_6:
    *(_QWORD *)a6 = 0;
    *(_QWORD *)(a6 + 8) = 0;
    *(_BYTE *)(a6 + 16) = -1;
    return result;
  }
  v31 = swift_bridgeObjectRetain();
  v32 = sub_1BC2211DC(v31);
  v33 = sub_1BC2214F0(v32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v34 = sub_1BC211774(v19, v21, v22, v24, v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v34 & 1) != 0)
    goto LABEL_6;
  v45 = sub_1BC2B3548();
  v35 = (void *)sub_1BC2B3434();
  v36 = objc_msgSend(v35, sel_scheduledDateTime);

  sub_1BC2B23A8();
  v37 = (void *)sub_1BC2B3554();
  v38 = objc_msgSend(v37, sel_medicationIdentifier);

  sub_1BC2B4460();
  v39 = (void *)sub_1BC2B3554();
  v40 = objc_msgSend(v39, sel_dose);

  sub_1BC2B4724();
  v41 = (void *)sub_1BC2B3554();
  objc_msgSend(v41, sel_isLastScheduledDose);

  sub_1BC2B32F0();
  swift_allocObject();
  v42 = sub_1BC2B32CC();
  result = sub_1BC2B3560();
  *(_QWORD *)a6 = v42;
  *(_QWORD *)(a6 + 8) = result;
  *(_BYTE *)(a6 + 16) = 0;
  return result;
}

void sub_1BC222BC8(unint64_t a1, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v3 = a1;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    v8 = sub_1BC2B50A8();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v6);
        v11 = sub_1BC2B4D78();

        v12 = v11 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v3 >= (uint64_t)v12)
          {
LABEL_16:
            v15 = *(_QWORD *)(a2 + 48);
            v16 = (_QWORD *)(v15 + 8 * v3);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v3 != v6 || v16 >= v17 + 1)
              *v16 = *v17;
            v18 = *(_QWORD *)(a2 + 56);
            v19 = (_QWORD *)(v18 + 8 * v3);
            v20 = (_QWORD *)(v18 + 8 * v6);
            if (v3 != v6 || (v3 = v6, v19 >= v20 + 1))
            {
              *v19 = *v20;
              v3 = v6;
            }
          }
        }
        else if (v12 >= v9 || v3 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    v23 = *v21;
    v22 = (-1 << a1) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_1BC222D78(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1BC2B50A8();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1BC2B5450();
        swift_bridgeObjectRetain();
        sub_1BC2B44D8();
        v9 = sub_1BC2B548C();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_QWORD *)(v14 + 8 * v3);
          v16 = (_QWORD *)(v14 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_1BC222F4C(unint64_t *__src, unint64_t *a2, unint64_t a3, unint64_t *__dst, uint64_t (*a5)(uint64_t *, uint64_t *))
{
  uint64_t v5;
  unint64_t *v7;
  unint64_t *v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  char v19;
  char v20;
  unint64_t *v21;
  uint64_t v22;
  unint64_t *v23;
  unint64_t *v24;
  unint64_t *v25;
  unint64_t *v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  unint64_t *v32;
  unint64_t *v33;
  uint64_t result;
  unint64_t *v35;
  unint64_t *v36;
  unint64_t *v38;
  unint64_t *v39;
  unint64_t *v40;

  v7 = a2;
  v8 = __src;
  v9 = (char *)a2 - (char *)__src;
  v10 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v10 = (char *)a2 - (char *)__src;
  v11 = v10 >> 3;
  v12 = a3 - (_QWORD)a2;
  v13 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v13 = a3 - (_QWORD)a2;
  v14 = v13 >> 3;
  v40 = __src;
  v39 = __dst;
  v36 = __dst;
  if (v11 >= v13 >> 3)
  {
    if (v12 >= -7)
    {
      v22 = v5;
      if (__dst != a2 || &a2[v14] <= __dst)
      {
        memmove(__dst, a2, 8 * v14);
        __dst = v36;
      }
      v23 = &__dst[v14];
      v38 = v23;
      v40 = v7;
      if (v8 >= v7 || v12 < 8)
        goto LABEL_47;
      v24 = (unint64_t *)(a3 - 8);
      v25 = v7;
      v35 = v8;
      while (1)
      {
        v26 = v23;
        v28 = *--v23;
        v27 = v28;
        v29 = *--v25;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v30 = sub_1BC220E0C(v27, v29, a5);
        if (v22)
          goto LABEL_46;
        v31 = v30;
        v32 = v24 + 1;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v31 & 1) != 0)
        {
          v33 = v36;
          if (v32 != v7 || v24 >= v7)
            *v24 = *v25;
          v40 = v25;
          v22 = 0;
          v23 = v26;
        }
        else
        {
          v38 = v23;
          v33 = v36;
          if (v32 < v26 || v24 >= v26 || v32 != v26)
            *v24 = *v23;
          v25 = v7;
          v22 = 0;
        }
        if (v25 > v35)
        {
          --v24;
          v7 = v25;
          if (v23 > v33)
            continue;
        }
        goto LABEL_47;
      }
    }
  }
  else if (v9 >= -7)
  {
    if (__dst != __src || &__src[v11] <= __dst)
    {
      memmove(__dst, __src, 8 * v11);
      __dst = v36;
    }
    v15 = &__dst[v11];
    v38 = v15;
    if ((unint64_t)v7 >= a3 || v9 < 8)
      goto LABEL_47;
    while (1)
    {
      v16 = *v7;
      v17 = __dst;
      v18 = *__dst;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v19 = sub_1BC220E0C(v16, v18, a5);
      if (v5)
        break;
      v20 = v19;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v20 & 1) != 0)
      {
        v21 = v7 + 1;
        if (v8 < v7 || v8 >= v21 || v8 != v7)
          *v8 = *v7;
        __dst = v17;
      }
      else
      {
        if (v8 != v17)
          *v8 = *v17;
        __dst = v17 + 1;
        v39 = v17 + 1;
        v21 = v7;
      }
      v40 = ++v8;
      if (__dst < v15)
      {
        v7 = v21;
        if ((unint64_t)v21 < a3)
          continue;
      }
      goto LABEL_47;
    }
LABEL_46:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_47:
    sub_1BC26E078(&v40, &v39, &v38);
    return 1;
  }
  result = sub_1BC2B5318();
  __break(1u);
  return result;
}

uint64_t (*sub_1BC22328C(_QWORD *a1, uint64_t a2, uint64_t a3))()
{
  _QWORD *v6;
  char isUniquelyReferenced_nonNull_native;

  v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  swift_bridgeObjectRetain();
  v6[9] = sub_1BC2236A4(v6);
  v6[10] = sub_1BC223400(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_1BC22331C;
}

uint64_t (*sub_1BC223320(_QWORD *a1, uint64_t a2, uint64_t a3))()
{
  _QWORD *v6;
  char isUniquelyReferenced_nonNull_native;

  v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  swift_bridgeObjectRetain();
  v6[9] = sub_1BC2236C4(v6);
  v6[10] = sub_1BC223538(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_1BC22331C;
}

void sub_1BC2233B0(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 72);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 80))(*(_QWORD *)a1 + 32, 0);
  swift_bridgeObjectRelease();
  v2(v1, 0);
  free(v1);
}

void (*sub_1BC223400(_QWORD *a1, uint64_t a2, uint64_t a3, char a4))(_QWORD *a1, uint64_t a2)
{
  uint64_t *v4;
  uint64_t *v5;
  _QWORD *v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  void (*result)(_QWORD *, uint64_t);

  v5 = v4;
  v10 = malloc(0x30uLL);
  *a1 = v10;
  v10[2] = a3;
  v10[3] = v5;
  v10[1] = a2;
  v11 = *v5;
  v13 = sub_1BC107DA4(a2, a3);
  *((_BYTE *)v10 + 40) = v12 & 1;
  v14 = *(_QWORD *)(v11 + 16);
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    v17 = v12;
    v18 = *(_QWORD *)(v11 + 24);
    if (v18 >= v16 && (a4 & 1) != 0)
    {
LABEL_7:
      v10[4] = v13;
      if ((v17 & 1) != 0)
      {
LABEL_8:
        v19 = *(_QWORD *)(*(_QWORD *)(*v5 + 56) + 8 * v13);
LABEL_12:
        *v10 = v19;
        return sub_1BC22352C;
      }
LABEL_11:
      v19 = 0;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a4 & 1) == 0)
    {
      sub_1BC15BC60();
      goto LABEL_7;
    }
    sub_1BC15AAA8(v16, a4 & 1);
    v20 = sub_1BC107DA4(a2, a3);
    if ((v17 & 1) == (v21 & 1))
    {
      v13 = v20;
      v10[4] = v20;
      if ((v17 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  result = (void (*)(_QWORD *, uint64_t))sub_1BC2B53F0();
  __break(1u);
  return result;
}

void sub_1BC22352C(_QWORD *a1, uint64_t a2)
{
  sub_1BC223664(a1, a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC2236F0);
}

void (*sub_1BC223538(_QWORD *a1, uint64_t a2, uint64_t a3, char a4))(_QWORD *a1, uint64_t a2)
{
  uint64_t *v4;
  uint64_t *v5;
  _QWORD *v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  void (*result)(_QWORD *, uint64_t);

  v5 = v4;
  v10 = malloc(0x30uLL);
  *a1 = v10;
  v10[2] = a3;
  v10[3] = v5;
  v10[1] = a2;
  v11 = *v5;
  v13 = sub_1BC107DA4(a2, a3);
  *((_BYTE *)v10 + 40) = v12 & 1;
  v14 = *(_QWORD *)(v11 + 16);
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    v17 = v12;
    v18 = *(_QWORD *)(v11 + 24);
    if (v18 >= v16 && (a4 & 1) != 0)
    {
LABEL_7:
      v10[4] = v13;
      if ((v17 & 1) != 0)
      {
LABEL_8:
        v19 = *(_QWORD *)(*(_QWORD *)(*v5 + 56) + 8 * v13);
LABEL_12:
        *v10 = v19;
        return sub_1BC22352C;
      }
LABEL_11:
      v19 = 0;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a4 & 1) == 0)
    {
      sub_1BC15BF98();
      goto LABEL_7;
    }
    sub_1BC15B080(v16, a4 & 1);
    v20 = sub_1BC107DA4(a2, a3);
    if ((v17 & 1) == (v21 & 1))
    {
      v13 = v20;
      v10[4] = v20;
      if ((v17 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  result = (void (*)(_QWORD *, uint64_t))sub_1BC2B53F0();
  __break(1u);
  return result;
}

void sub_1BC223664(_QWORD *a1, uint64_t a2, void (*a3)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  void *v3;

  v3 = (void *)*a1;
  a3(*a1, *(unsigned __int8 *)(*a1 + 40), *(_QWORD *)(*a1 + 24), *(_QWORD *)(*a1 + 32), *(_QWORD *)(*a1 + 8), *(_QWORD *)(*a1 + 16));
  swift_bridgeObjectRelease();
  free(v3);
}

uint64_t (*sub_1BC2236A4(_QWORD *a1))()
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_1BC226304;
}

uint64_t (*sub_1BC2236C4(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_1BC2236E4;
}

uint64_t sub_1BC2236E4(uint64_t result)
{
  **(_QWORD **)(result + 8) = *(_QWORD *)result;
  return result;
}

uint64_t sub_1BC2236F0(uint64_t *a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;

  v8 = *a1;
  if (*a1)
  {
    if ((a2 & 1) != 0)
    {
      *(_QWORD *)(*(_QWORD *)(*a3 + 56) + 8 * a4) = v8;
    }
    else
    {
      sub_1BC1B8F20(a4, a5, a6, v8, *a3);
      swift_bridgeObjectRetain();
    }
  }
  else if ((a2 & 1) != 0)
  {
    swift_arrayDestroy();
    sub_1BC222D78(a4, *a3);
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC22378C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  BOOL v31;
  int64_t v32;
  uint64_t v33;
  unint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;

  if (*(_QWORD *)(a1 + 16) < *(_QWORD *)(a2 + 16))
    return 0;
  v3 = a2;
  v4 = a1;
  v36 = a2 + 56;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  if (-v5 < 64)
    v6 = ~(-1 << -(char)v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(a2 + 56);
  v32 = (unint64_t)(63 - v5) >> 6;
  v8 = a1 + 56;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  v33 = v3;
  v37 = v4;
  if (!v7)
    goto LABEL_9;
LABEL_7:
  v11 = (v7 - 1) & v7;
  v12 = __clz(__rbit64(v7)) | (v10 << 6);
  v13 = v10;
  if (!*(_QWORD *)(v4 + 16))
  {
LABEL_41:
    v2 = 0;
LABEL_39:
    sub_1BC1061A8();
    return v2;
  }
  while (1)
  {
    v34 = v11;
    v35 = v13;
    v17 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 32 * v12);
    v19 = *v17;
    v18 = v17[1];
    v20 = v17[2];
    v21 = v17[3];
    sub_1BC2B5450();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BC2B44D8();
    sub_1BC2B44D8();
    v22 = sub_1BC2B548C();
    v23 = -1 << *(_BYTE *)(v4 + 32);
    v24 = v22 & ~v23;
    if (((*(_QWORD *)(v8 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) == 0)
    {
LABEL_38:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v2 = 0;
      goto LABEL_39;
    }
    v25 = ~v23;
    v26 = *(_QWORD *)(v37 + 48);
    while (1)
    {
      v27 = (_QWORD *)(v26 + 32 * v24);
      v28 = v27[2];
      v29 = v27[3];
      v30 = *v27 == v19 && v27[1] == v18;
      if (v30 || (sub_1BC2B53CC() & 1) != 0)
      {
        v31 = v28 == v20 && v29 == v21;
        if (v31 || (sub_1BC2B53CC() & 1) != 0)
          break;
      }
      v24 = (v24 + 1) & v25;
      if (((*(_QWORD *)(v8 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) == 0)
        goto LABEL_38;
    }
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    v7 = v34;
    v10 = v35;
    v3 = v33;
    v4 = v37;
    if (v34)
      goto LABEL_7;
LABEL_9:
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_44;
    }
    if (v14 >= v32)
      goto LABEL_42;
    v15 = *(_QWORD *)(v36 + 8 * v14);
    v13 = v10 + 1;
    if (!v15)
    {
      v13 = v10 + 2;
      if (v10 + 2 >= v32)
        goto LABEL_42;
      v15 = *(_QWORD *)(v36 + 8 * v13);
      if (!v15)
      {
        v13 = v10 + 3;
        if (v10 + 3 >= v32)
          goto LABEL_42;
        v15 = *(_QWORD *)(v36 + 8 * v13);
        if (!v15)
          break;
      }
    }
LABEL_22:
    v11 = (v15 - 1) & v15;
    v12 = __clz(__rbit64(v15)) + (v13 << 6);
    if (!*(_QWORD *)(v4 + 16))
      goto LABEL_41;
  }
  v16 = v10 + 4;
  if (v10 + 4 >= v32)
  {
LABEL_42:
    v2 = 1;
    goto LABEL_39;
  }
  v15 = *(_QWORD *)(v36 + 8 * v16);
  if (v15)
  {
    v13 = v10 + 4;
    goto LABEL_22;
  }
  while (1)
  {
    v13 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v13 >= v32)
      goto LABEL_42;
    v15 = *(_QWORD *)(v36 + 8 * v13);
    ++v16;
    if (v15)
      goto LABEL_22;
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_1BC223AA4(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3;
  char v4;
  unint64_t v5;
  size_t v6;
  uint64_t v7;
  void *v8;
  _QWORD v10[2];

  v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x1E0C80C00];
  v4 = *(_BYTE *)(a2 + 32);
  v5 = (unint64_t)((1 << v4) + 63) >> 6;
  v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    v7 = sub_1BC223C24((uint64_t)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v5, a2, v3);
    swift_release();
  }
  else
  {
    v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    v7 = sub_1BC223C24((uint64_t)v8, v5, a2, v3);
    swift_release();
    MEMORY[0x1BCCEF3A0](v8, -1, -1);
  }
  return v7;
}

uint64_t sub_1BC223C24(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  BOOL v29;
  BOOL v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  int64_t v36;
  unint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  BOOL v53;
  BOOL v54;
  uint64_t v56;
  uint64_t v57;
  int64_t v58;
  unint64_t *v59;
  int64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int64_t v65;
  int64_t v66;
  uint64_t v69;
  uint64_t v70;

  v4 = a4;
  v5 = a3;
  v59 = (unint64_t *)result;
  if (*(_QWORD *)(a4 + 16) < *(_QWORD *)(a3 + 16))
  {
    v6 = 0;
    v57 = a4 + 56;
    v7 = 1 << *(_BYTE *)(a4 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(a4 + 56);
    v60 = (unint64_t)(v7 + 63) >> 6;
    v62 = 0;
    v69 = a3 + 56;
    do
    {
      while (1)
      {
        if (v9)
        {
          v63 = (v9 - 1) & v9;
          v65 = v6;
          v10 = __clz(__rbit64(v9)) | (v6 << 6);
        }
        else
        {
          v11 = v6 + 1;
          if (__OFADD__(v6, 1))
          {
            __break(1u);
LABEL_78:
            __break(1u);
            goto LABEL_79;
          }
          if (v11 >= v60)
            goto LABEL_76;
          v12 = *(_QWORD *)(v57 + 8 * v11);
          v13 = v6 + 1;
          if (!v12)
          {
            v13 = v6 + 2;
            if (v6 + 2 >= v60)
              goto LABEL_76;
            v12 = *(_QWORD *)(v57 + 8 * v13);
            if (!v12)
            {
              v13 = v6 + 3;
              if (v6 + 3 >= v60)
                goto LABEL_76;
              v12 = *(_QWORD *)(v57 + 8 * v13);
              if (!v12)
              {
                v14 = v6 + 4;
                if (v6 + 4 >= v60)
                {
LABEL_76:
                  swift_retain();
                  return sub_1BC1E8F14(v59, a2, v62, v5);
                }
                v12 = *(_QWORD *)(v57 + 8 * v14);
                if (!v12)
                {
                  while (1)
                  {
                    v13 = v14 + 1;
                    if (__OFADD__(v14, 1))
                      break;
                    if (v13 >= v60)
                      goto LABEL_76;
                    v12 = *(_QWORD *)(v57 + 8 * v13);
                    ++v14;
                    if (v12)
                      goto LABEL_22;
                  }
LABEL_79:
                  __break(1u);
                  goto LABEL_80;
                }
                v13 = v6 + 4;
              }
            }
          }
LABEL_22:
          v63 = (v12 - 1) & v12;
          v65 = v13;
          v10 = __clz(__rbit64(v12)) + (v13 << 6);
        }
        v15 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 32 * v10);
        v16 = *v15;
        v17 = v15[1];
        v18 = v15[2];
        v19 = v15[3];
        sub_1BC2B5450();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BC2B44D8();
        sub_1BC2B44D8();
        v20 = sub_1BC2B548C();
        v21 = -1 << *(_BYTE *)(v5 + 32);
        v22 = v20 & ~v21;
        if (((*(_QWORD *)(v69 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) != 0)
          break;
LABEL_6:
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        v4 = a4;
        v5 = a3;
        v9 = v63;
        v6 = v65;
      }
      v23 = ~v21;
      v24 = *(_QWORD *)(a3 + 48);
      while (1)
      {
        v25 = (_QWORD *)(v24 + 32 * v22);
        v26 = v25[2];
        v27 = v25[3];
        v28 = *v25 == v16 && v25[1] == v17;
        if (v28 || (sub_1BC2B53CC() & 1) != 0)
        {
          v29 = v26 == v18 && v27 == v19;
          if (v29 || (sub_1BC2B53CC() & 1) != 0)
            break;
        }
        v22 = (v22 + 1) & v23;
        if (((*(_QWORD *)(v69 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) == 0)
          goto LABEL_6;
      }
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      *(unint64_t *)((char *)v59 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      v9 = v63;
      v30 = __OFADD__(v62++, 1);
      v4 = a4;
      v5 = a3;
      v6 = v65;
    }
    while (!v30);
    __break(1u);
  }
  v62 = 0;
  v31 = 0;
  v56 = v5 + 56;
  v32 = 1 << *(_BYTE *)(v5 + 32);
  if (v32 < 64)
    v33 = ~(-1 << v32);
  else
    v33 = -1;
  v34 = v33 & *(_QWORD *)(v5 + 56);
  v58 = (unint64_t)(v32 + 63) >> 6;
  v70 = v4 + 56;
  while (v34)
  {
    v64 = (v34 - 1) & v34;
    v66 = v31;
    v35 = __clz(__rbit64(v34)) | (v31 << 6);
LABEL_60:
    v61 = v35;
    v40 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 32 * v35);
    v41 = *v40;
    v42 = v40[1];
    v43 = v40[2];
    v44 = v40[3];
    sub_1BC2B5450();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BC2B44D8();
    sub_1BC2B44D8();
    v45 = sub_1BC2B548C();
    v46 = -1 << *(_BYTE *)(v4 + 32);
    v47 = v45 & ~v46;
    if (((*(_QWORD *)(v70 + ((v47 >> 3) & 0xFFFFFFFFFFFFF8)) >> v47) & 1) != 0)
    {
      v48 = ~v46;
      v49 = *(_QWORD *)(a4 + 48);
      while (1)
      {
        v50 = (_QWORD *)(v49 + 32 * v47);
        v51 = v50[2];
        v52 = v50[3];
        v53 = *v50 == v41 && v50[1] == v42;
        if (v53 || (sub_1BC2B53CC() & 1) != 0)
        {
          v54 = v51 == v43 && v52 == v44;
          if (v54 || (sub_1BC2B53CC() & 1) != 0)
            break;
        }
        v47 = (v47 + 1) & v48;
        if (((*(_QWORD *)(v70 + ((v47 >> 3) & 0xFFFFFFFFFFFFF8)) >> v47) & 1) == 0)
          goto LABEL_43;
      }
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      *(unint64_t *)((char *)v59 + ((v61 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v61;
      v34 = v64;
      v30 = __OFADD__(v62++, 1);
      v4 = a4;
      v5 = a3;
      v31 = v66;
      if (v30)
      {
        __break(1u);
        goto LABEL_76;
      }
    }
    else
    {
LABEL_43:
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      v4 = a4;
      v5 = a3;
      v34 = v64;
      v31 = v66;
    }
  }
  v36 = v31 + 1;
  if (__OFADD__(v31, 1))
    goto LABEL_78;
  if (v36 >= v58)
    goto LABEL_76;
  v37 = *(_QWORD *)(v56 + 8 * v36);
  v38 = v31 + 1;
  if (v37)
    goto LABEL_59;
  v38 = v31 + 2;
  if (v31 + 2 >= v58)
    goto LABEL_76;
  v37 = *(_QWORD *)(v56 + 8 * v38);
  if (v37)
    goto LABEL_59;
  v38 = v31 + 3;
  if (v31 + 3 >= v58)
    goto LABEL_76;
  v37 = *(_QWORD *)(v56 + 8 * v38);
  if (v37)
  {
LABEL_59:
    v64 = (v37 - 1) & v37;
    v66 = v38;
    v35 = __clz(__rbit64(v37)) + (v38 << 6);
    goto LABEL_60;
  }
  v39 = v31 + 4;
  if (v31 + 4 >= v58)
    goto LABEL_76;
  v37 = *(_QWORD *)(v56 + 8 * v39);
  if (v37)
  {
    v38 = v31 + 4;
    goto LABEL_59;
  }
  while (1)
  {
    v38 = v39 + 1;
    if (__OFADD__(v39, 1))
      break;
    if (v38 >= v58)
      goto LABEL_76;
    v37 = *(_QWORD *)(v56 + 8 * v38);
    ++v39;
    if (v37)
      goto LABEL_59;
  }
LABEL_80:
  __break(1u);
  return result;
}

uint64_t sub_1BC2241D0(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = a4;
  v14 = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(boxed_opaque_existential_1, a2, a4);
  v10 = *a3;
  *(_QWORD *)(v10 + 16) = a1 + 1;
  return sub_1BC0F2730(&v12, v10 + 40 * a1 + 32);
}

uint64_t sub_1BC224248(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  unint64_t *v24;

  v24 = (unint64_t *)result;
  v8 = 0;
  v9 = 0;
  v10 = a3 + 56;
  v11 = 1 << *(_BYTE *)(a3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(a3 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (v13)
  {
    v16 = __clz(__rbit64(v13));
    v13 &= v13 - 1;
    v17 = v16 | (v9 << 6);
LABEL_21:
    v21 = (uint64_t *)(*(_QWORD *)(a3 + 48) + 32 * v17);
    result = *v21;
    if (*v21 != a4 || v21[1] != a5)
    {
      result = sub_1BC2B53CC();
      if ((result & 1) == 0)
        continue;
    }
    *(unint64_t *)((char *)v24 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    if (__OFADD__(v8++, 1))
      goto LABEL_30;
  }
  v18 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v18 >= v14)
    goto LABEL_27;
  v19 = *(_QWORD *)(v10 + 8 * v18);
  ++v9;
  if (v19)
    goto LABEL_20;
  v9 = v18 + 1;
  if (v18 + 1 >= v14)
    goto LABEL_27;
  v19 = *(_QWORD *)(v10 + 8 * v9);
  if (v19)
    goto LABEL_20;
  v9 = v18 + 2;
  if (v18 + 2 >= v14)
    goto LABEL_27;
  v19 = *(_QWORD *)(v10 + 8 * v9);
  if (v19)
  {
LABEL_20:
    v13 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v9 << 6);
    goto LABEL_21;
  }
  v20 = v18 + 3;
  if (v20 >= v14)
  {
LABEL_27:
    swift_retain();
    return sub_1BC1E8F14(v24, a2, v8, a3);
  }
  v19 = *(_QWORD *)(v10 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_20;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v14)
      goto LABEL_27;
    v19 = *(_QWORD *)(v10 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_20;
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1BC224404(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v7;
  unsigned int v8;
  unint64_t v9;
  size_t v10;
  uint64_t isStackAllocationSafe;
  uint64_t v12;
  void *v13;
  _QWORD v15[2];

  v15[1] = *MEMORY[0x1E0C80C00];
  v7 = *(_BYTE *)(a1 + 32);
  v8 = v7 & 0x3F;
  v9 = (unint64_t)((1 << v7) + 63) >> 6;
  v10 = 8 * v9;
  swift_bridgeObjectRetain_n();
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v8 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v15 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0), v10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = sub_1BC224248((uint64_t)v15 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0), v9, a1, a2, a3);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v3)
      swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = (void *)swift_slowAlloc();
    bzero(v13, v10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = sub_1BC224248((uint64_t)v13, v9, a1, a2, a3);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    MEMORY[0x1BCCEF3A0](v13, -1, -1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1BC22463C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(uint64_t *, uint64_t *))
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t *v17;

  if (a3 != a2)
  {
    v7 = a3;
    v8 = result;
    v9 = *a4;
    v10 = (unint64_t *)(*a4 + 8 * a3 - 8);
    v15 = result;
LABEL_4:
    v11 = *(_QWORD *)(v9 + 8 * v7);
    v17 = v10;
    while (1)
    {
      v12 = *v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v13 = sub_1BC220E0C(v11, v12, a5);
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      if (v5)
        break;
      if ((v13 & 1) != 0)
      {
        if (!v9)
        {
          __break(1u);
          return result;
        }
        v14 = *v10;
        v11 = v10[1];
        *v10 = v11;
        v10[1] = v14;
        --v10;
        if (v7 != ++v8)
          continue;
      }
      ++v7;
      v10 = v17 + 1;
      v8 = v15;
      if (v7 != a2)
        goto LABEL_4;
      return result;
    }
  }
  return result;
}

uint64_t sub_1BC224738(uint64_t *a1, uint64_t (*a2)(uint64_t *, uint64_t *))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int v17;
  int v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  char v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  unint64_t v96;
  char *v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t *__dst;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v111;
  uint64_t v112;

  v3 = v2;
  v5 = a1[1];
  result = sub_1BC2B5390();
  if (result >= v5)
  {
    if (v5 < 0)
      goto LABEL_154;
    if (v5)
      return sub_1BC22463C(0, v5, 1, a1, a2);
  }
  else
  {
    if (v5 >= 0)
      v7 = v5;
    else
      v7 = v5 + 1;
    if (v5 < -1)
    {
LABEL_165:
      result = sub_1BC2B52AC();
      __break(1u);
      return result;
    }
    v105 = v5;
    v101 = result;
    v98 = a1;
    if (v5 >= 2)
    {
      v8 = v7 >> 1;
      sub_1BC0E7998(0, &qword_1EF3F91A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      v9 = sub_1BC2B45F8();
      *(_QWORD *)(v9 + 16) = v8;
      v102 = v9;
      __dst = (unint64_t *)(v9 + 32);
LABEL_12:
      v11 = 0;
      v12 = *a1;
      v99 = *a1 - 8;
      v100 = *a1 + 16;
      v10 = (char *)MEMORY[0x1E0DEE9D8];
      v13 = v5;
      v109 = *a1;
      while (1)
      {
        v14 = v11++;
        v104 = v14;
        if (v11 < v13)
        {
          v15 = *(_QWORD *)(v12 + 8 * v11);
          v16 = *(_QWORD *)(v12 + 8 * v14);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v17 = sub_1BC220E0C(v15, v16, a2);
          if (v3)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_129;
          }
          v18 = v17;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v11 = v14 + 2;
          if (v14 + 2 < v105)
          {
            v19 = (unint64_t *)(v100 + 8 * v14);
            while (1)
            {
              v20 = *(v19 - 1);
              v21 = *v19;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v22 = sub_1BC220E0C(v21, v20, a2);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (((v18 ^ v22) & 1) != 0)
                break;
              ++v11;
              ++v19;
              if (v105 == v11)
              {
                v11 = v105;
                break;
              }
            }
            v14 = v104;
          }
          v12 = v109;
          if ((v18 & 1) != 0)
          {
            if (v11 < v14)
              goto LABEL_158;
            v13 = v105;
            if (v14 < v11)
            {
              v23 = (uint64_t *)(v99 + 8 * v11);
              v24 = v11;
              v25 = v14;
              v26 = (uint64_t *)(v109 + 8 * v14);
              do
              {
                if (v25 != --v24)
                {
                  if (!v109)
                    goto LABEL_163;
                  v27 = *v26;
                  *v26 = *v23;
                  *v23 = v27;
                }
                ++v25;
                --v23;
                ++v26;
              }
              while (v25 < v24);
            }
          }
          else
          {
            v13 = v105;
          }
        }
        if (v11 >= v13)
          goto LABEL_64;
        if (__OFSUB__(v11, v14))
          goto LABEL_155;
        if (v11 - v14 >= v101)
          goto LABEL_64;
        if (__OFADD__(v14, v101))
          goto LABEL_156;
        if (v14 + v101 >= v13)
          v28 = v13;
        else
          v28 = v14 + v101;
        if (v28 < v14)
          goto LABEL_157;
        if (v11 == v28)
          goto LABEL_64;
        v97 = v10;
        v107 = v3;
        v29 = (unint64_t *)(v99 + 8 * v11);
        v103 = v28;
        while (2)
        {
          v30 = *(_QWORD *)(v12 + 8 * v11);
          v31 = v29;
          while (1)
          {
            v32 = *v29;
            if (v30 >> 62)
            {
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain();
              if (!sub_1BC2B52D0())
                goto LABEL_159;
            }
            else
            {
              v33 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain();
              if (!v33)
                goto LABEL_159;
            }
            if ((v30 & 0xC000000000000001) != 0)
            {
              v34 = MEMORY[0x1BCCEE950](0, v30);
            }
            else
            {
              if (!*(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10))
              {
                __break(1u);
LABEL_133:
                __break(1u);
LABEL_134:
                __break(1u);
LABEL_135:
                __break(1u);
LABEL_136:
                __break(1u);
LABEL_137:
                __break(1u);
LABEL_138:
                __break(1u);
LABEL_139:
                __break(1u);
LABEL_140:
                __break(1u);
LABEL_141:
                __break(1u);
LABEL_142:
                __break(1u);
LABEL_143:
                __break(1u);
LABEL_144:
                __break(1u);
LABEL_145:
                __break(1u);
LABEL_146:
                __break(1u);
LABEL_147:
                __break(1u);
LABEL_148:
                __break(1u);
                goto LABEL_149;
              }
              v34 = *(_QWORD *)(v30 + 32);
              swift_retain();
            }
            swift_bridgeObjectRelease();
            v112 = v34;
            if (v32 >> 62)
            {
              swift_bridgeObjectRetain();
              if (!sub_1BC2B52D0())
                goto LABEL_160;
            }
            else
            {
              v35 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain();
              if (!v35)
                goto LABEL_160;
            }
            if ((v32 & 0xC000000000000001) != 0)
            {
              v36 = MEMORY[0x1BCCEE950](0, v32);
            }
            else
            {
              if (!*(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_133;
              v36 = *(_QWORD *)(v32 + 32);
              swift_retain();
            }
            swift_bridgeObjectRelease();
            v111 = v36;
            v37 = a2(&v112, &v111);
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            if ((v37 & 1) == 0)
              break;
            v12 = v109;
            if (!v109)
              goto LABEL_161;
            v38 = *v29;
            v30 = v29[1];
            *v29 = v30;
            v29[1] = v38;
            --v29;
            if (v11 == ++v14)
              goto LABEL_41;
          }
          v12 = v109;
LABEL_41:
          ++v11;
          v29 = v31 + 1;
          v14 = v104;
          if (v11 != v103)
            continue;
          break;
        }
        v11 = v103;
        v3 = v107;
        v10 = v97;
LABEL_64:
        if (v11 < v14)
          goto LABEL_153;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v10 = sub_1BC26DEB8(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
        v40 = *((_QWORD *)v10 + 2);
        v39 = *((_QWORD *)v10 + 3);
        v41 = v40 + 1;
        v12 = v109;
        v108 = v3;
        if (v40 >= v39 >> 1)
        {
          v90 = sub_1BC26DEB8((char *)(v39 > 1), v40 + 1, 1, v10);
          v12 = v109;
          v10 = v90;
        }
        *((_QWORD *)v10 + 2) = v41;
        v42 = v10 + 32;
        v43 = &v10[16 * v40 + 32];
        *(_QWORD *)v43 = v104;
        *((_QWORD *)v43 + 1) = v11;
        if (v40)
        {
          while (1)
          {
            v44 = v41 - 1;
            if (v41 >= 4)
            {
              v49 = &v42[16 * v41];
              v50 = *((_QWORD *)v49 - 8);
              v51 = *((_QWORD *)v49 - 7);
              v55 = __OFSUB__(v51, v50);
              v52 = v51 - v50;
              if (v55)
                goto LABEL_138;
              v54 = *((_QWORD *)v49 - 6);
              v53 = *((_QWORD *)v49 - 5);
              v55 = __OFSUB__(v53, v54);
              v47 = v53 - v54;
              v48 = v55;
              if (v55)
                goto LABEL_139;
              v56 = v41 - 2;
              v57 = &v42[16 * v41 - 32];
              v59 = *(_QWORD *)v57;
              v58 = *((_QWORD *)v57 + 1);
              v55 = __OFSUB__(v58, v59);
              v60 = v58 - v59;
              if (v55)
                goto LABEL_141;
              v55 = __OFADD__(v47, v60);
              v61 = v47 + v60;
              if (v55)
                goto LABEL_144;
              if (v61 >= v52)
              {
                v79 = &v42[16 * v44];
                v81 = *(_QWORD *)v79;
                v80 = *((_QWORD *)v79 + 1);
                v55 = __OFSUB__(v80, v81);
                v82 = v80 - v81;
                if (v55)
                  goto LABEL_148;
                v72 = v47 < v82;
                goto LABEL_101;
              }
            }
            else
            {
              if (v41 != 3)
              {
                v73 = *((_QWORD *)v10 + 4);
                v74 = *((_QWORD *)v10 + 5);
                v55 = __OFSUB__(v74, v73);
                v66 = v74 - v73;
                v67 = v55;
                goto LABEL_95;
              }
              v46 = *((_QWORD *)v10 + 4);
              v45 = *((_QWORD *)v10 + 5);
              v55 = __OFSUB__(v45, v46);
              v47 = v45 - v46;
              v48 = v55;
            }
            if ((v48 & 1) != 0)
              goto LABEL_140;
            v56 = v41 - 2;
            v62 = &v42[16 * v41 - 32];
            v64 = *(_QWORD *)v62;
            v63 = *((_QWORD *)v62 + 1);
            v65 = __OFSUB__(v63, v64);
            v66 = v63 - v64;
            v67 = v65;
            if (v65)
              goto LABEL_143;
            v68 = &v42[16 * v44];
            v70 = *(_QWORD *)v68;
            v69 = *((_QWORD *)v68 + 1);
            v55 = __OFSUB__(v69, v70);
            v71 = v69 - v70;
            if (v55)
              goto LABEL_146;
            if (__OFADD__(v66, v71))
              goto LABEL_147;
            if (v66 + v71 >= v47)
            {
              v72 = v47 < v71;
LABEL_101:
              if (v72)
                v44 = v56;
              goto LABEL_103;
            }
LABEL_95:
            if ((v67 & 1) != 0)
              goto LABEL_142;
            v75 = &v42[16 * v44];
            v77 = *(_QWORD *)v75;
            v76 = *((_QWORD *)v75 + 1);
            v55 = __OFSUB__(v76, v77);
            v78 = v76 - v77;
            if (v55)
              goto LABEL_145;
            if (v78 < v66)
              goto LABEL_112;
LABEL_103:
            v83 = v44 - 1;
            if (v44 - 1 >= v41)
              goto LABEL_134;
            if (!v12)
              goto LABEL_162;
            v84 = v10;
            v85 = &v42[16 * v83];
            v86 = *(_QWORD *)v85;
            v87 = &v42[16 * v44];
            v88 = *((_QWORD *)v87 + 1);
            sub_1BC222F4C((unint64_t *)(v12 + 8 * *(_QWORD *)v85), (unint64_t *)(v12 + 8 * *(_QWORD *)v87), v12 + 8 * v88, __dst, a2);
            if (v108)
              goto LABEL_129;
            if (v88 < v86)
              goto LABEL_135;
            if (v44 > *((_QWORD *)v84 + 2))
              goto LABEL_136;
            *(_QWORD *)v85 = v86;
            *(_QWORD *)&v42[16 * v83 + 8] = v88;
            v89 = *((_QWORD *)v84 + 2);
            if (v44 >= v89)
              goto LABEL_137;
            v10 = v84;
            v41 = v89 - 1;
            memmove(&v42[16 * v44], v87 + 16, 16 * (v89 - 1 - v44));
            *((_QWORD *)v84 + 2) = v89 - 1;
            v12 = v109;
            if (v89 <= 2)
              goto LABEL_112;
          }
        }
        v41 = 1;
LABEL_112:
        v13 = v105;
        v3 = v108;
        if (v11 >= v105)
          goto LABEL_116;
      }
    }
    v10 = (char *)MEMORY[0x1E0DEE9D8];
    __dst = (unint64_t *)(MEMORY[0x1E0DEE9D8] + 32);
    v102 = MEMORY[0x1E0DEE9D8];
    if (v5 == 1)
      goto LABEL_12;
    v41 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_116:
    if (v41 >= 2)
    {
      v91 = *v98;
      while (1)
      {
        v92 = v41 - 2;
        if (v41 < 2)
          break;
        if (!v91)
          goto LABEL_164;
        v93 = *(_QWORD *)&v10[16 * v92 + 32];
        v94 = *(_QWORD *)&v10[16 * v41 + 24];
        sub_1BC222F4C((unint64_t *)(v91 + 8 * v93), (unint64_t *)(v91 + 8 * *(_QWORD *)&v10[16 * v41 + 16]), v91 + 8 * v94, __dst, a2);
        if (v3)
          goto LABEL_129;
        if (v94 < v93)
          goto LABEL_150;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v10 = sub_1BC26E1A0((uint64_t)v10);
        if (v92 >= *((_QWORD *)v10 + 2))
          goto LABEL_151;
        v95 = &v10[16 * v92 + 32];
        *(_QWORD *)v95 = v93;
        *((_QWORD *)v95 + 1) = v94;
        v96 = *((_QWORD *)v10 + 2);
        if (v41 > v96)
          goto LABEL_152;
        memmove(&v10[16 * v41 + 16], &v10[16 * v41 + 32], 16 * (v96 - v41));
        *((_QWORD *)v10 + 2) = v96 - 1;
        v41 = v96 - 1;
        v3 = 0;
        if (v96 <= 2)
          goto LABEL_129;
      }
LABEL_149:
      __break(1u);
LABEL_150:
      __break(1u);
LABEL_151:
      __break(1u);
LABEL_152:
      __break(1u);
LABEL_153:
      __break(1u);
LABEL_154:
      __break(1u);
LABEL_155:
      __break(1u);
LABEL_156:
      __break(1u);
LABEL_157:
      __break(1u);
LABEL_158:
      __break(1u);
LABEL_159:
      swift_bridgeObjectRelease();
      __break(1u);
LABEL_160:
      swift_bridgeObjectRelease();
      __break(1u);
LABEL_161:
      __break(1u);
LABEL_162:
      __break(1u);
LABEL_163:
      __break(1u);
LABEL_164:
      __break(1u);
      goto LABEL_165;
    }
LABEL_129:
    swift_bridgeObjectRelease();
    *(_QWORD *)(v102 + 16) = 0;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BC224FF4(char *a1, char *__src, unint64_t a3, char *a4, uint64_t (*a5)(void **, void **))
{
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  char v20;
  void *v21;
  char v22;
  char v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void *v31;
  char v32;
  char *v33;
  unint64_t v34;
  void *v35;
  char v36;
  char v37;
  char *v38;
  uint64_t result;
  char *v43;
  void *v44;
  void *v45;
  unsigned __int8 v46;
  void *v47;
  void *v48;
  unsigned __int8 v49;
  char *v50;
  char *v51;
  char *v52;

  v5 = __src;
  v6 = __src - a1;
  v7 = __src - a1 + 7;
  if (__src - a1 >= 0)
    v7 = __src - a1;
  v8 = v7 >> 3;
  v10 = a3 - (_QWORD)__src;
  v11 = a3 - (_QWORD)__src + 7;
  if ((uint64_t)(a3 - (_QWORD)__src) >= 0)
    v11 = a3 - (_QWORD)__src;
  v12 = v11 >> 3;
  v52 = a1;
  v51 = a4;
  if (v8 >= v11 >> 3)
  {
    if (v10 >= -7)
    {
      if (a4 != __src || &__src[8 * v12] <= a4)
        memmove(a4, __src, 8 * v12);
      v25 = &a4[8 * v12];
      v50 = v25;
      v52 = v5;
      if (a1 < v5 && v10 >= 8)
      {
        v26 = (char *)(a3 - 8);
        while (1)
        {
          v27 = v25 - 8;
          v28 = *((_QWORD *)v25 - 1);
          if (!*(_QWORD *)(v28 + 16))
            break;
          v29 = v5 - 8;
          v30 = *((_QWORD *)v5 - 1);
          v31 = *(void **)(v28 + 40);
          v32 = *(_BYTE *)(v28 + 48);
          v47 = *(void **)(v28 + 32);
          v48 = v31;
          v49 = v32;
          sub_1BC0FA444(v47, v31, v32);
          if (v49 == 255)
            break;
          if (!*(_QWORD *)(v30 + 16))
            goto LABEL_53;
          v33 = v5;
          v34 = (unint64_t)v25;
          v35 = *(void **)(v30 + 40);
          v36 = *(_BYTE *)(v30 + 48);
          v44 = *(void **)(v30 + 32);
          v45 = v35;
          v46 = v36;
          sub_1BC0FA444(v44, v35, v36);
          if (v46 == 255)
            goto LABEL_53;
          v43 = v26 + 8;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v37 = a5(&v47, &v44);
          sub_1BC0FA484(v44, v45, v46);
          sub_1BC0FA484(v47, v48, v49);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v37 & 1) != 0)
          {
            if (v43 != v33 || v26 >= v33)
              *(_QWORD *)v26 = *(_QWORD *)v29;
            v52 = v29;
            v38 = a4;
            v25 = (char *)v34;
          }
          else
          {
            v50 = v27;
            if ((unint64_t)v43 < v34 || (unint64_t)v26 >= v34 || v43 != (char *)v34)
              *(_QWORD *)v26 = *(_QWORD *)v27;
            v29 = v33;
            v25 = v27;
            v38 = a4;
          }
          if (v29 > a1)
          {
            v26 -= 8;
            v5 = v29;
            if (v25 > v38)
              continue;
          }
          goto LABEL_51;
        }
        __break(1u);
LABEL_53:
        __break(1u);
        goto LABEL_54;
      }
LABEL_51:
      sub_1BC26E078(&v52, &v51, &v50);
      return 1;
    }
  }
  else if (v6 >= -7)
  {
    v13 = a4;
    if (a4 != a1 || &a1[8 * v8] <= a4)
      memmove(a4, a1, 8 * v8);
    v15 = &a4[8 * v8];
    v50 = v15;
    if ((unint64_t)v5 < a3 && v6 >= 8)
    {
      v16 = a1;
      while (1)
      {
        v17 = *(_QWORD *)v5;
        if (!*(_QWORD *)(*(_QWORD *)v5 + 16))
          break;
        v18 = *(_QWORD *)v13;
        v19 = *(void **)(v17 + 40);
        v20 = *(_BYTE *)(v17 + 48);
        v47 = *(void **)(v17 + 32);
        v48 = v19;
        v49 = v20;
        sub_1BC0FA444(v47, v19, v20);
        if (v49 == 255)
          break;
        if (!*(_QWORD *)(v18 + 16))
          goto LABEL_55;
        v21 = *(void **)(v18 + 40);
        v22 = *(_BYTE *)(v18 + 48);
        v44 = *(void **)(v18 + 32);
        v45 = v21;
        v46 = v22;
        sub_1BC0FA444(v44, v21, v22);
        if (v46 == 255)
          goto LABEL_55;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v23 = a5(&v47, &v44);
        sub_1BC0FA484(v44, v45, v46);
        sub_1BC0FA484(v47, v48, v49);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v23 & 1) != 0)
        {
          v24 = v5 + 8;
          if (v16 < v5 || v16 >= v24 || v16 != v5)
            *(_QWORD *)v16 = *(_QWORD *)v5;
        }
        else
        {
          if (v16 != v13)
            *(_QWORD *)v16 = *(_QWORD *)v13;
          v13 += 8;
          v51 = v13;
          v24 = v5;
        }
        v16 += 8;
        if (v13 < v15)
        {
          v5 = v24;
          if ((unint64_t)v24 < a3)
            continue;
        }
        v52 = v16;
        goto LABEL_51;
      }
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
      goto LABEL_56;
    }
    goto LABEL_51;
  }
LABEL_56:
  result = sub_1BC2B5318();
  __break(1u);
  return result;
}

uint64_t sub_1BC2253D8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(void **, void **))
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  char v13;
  void *v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v19;
  void *v20;
  void *v21;
  unsigned __int8 v22;
  void *v23;
  void *v24;
  unsigned __int8 v25;
  _QWORD *v26;

  v19 = result;
  if (a3 != a2)
  {
    v6 = a3;
    v7 = *a4;
    v8 = (_QWORD *)(*a4 + 8 * a3 - 8);
LABEL_5:
    v9 = *(_QWORD *)(v7 + 8 * v6);
    v10 = v19;
    v26 = v8;
    while (*(_QWORD *)(v9 + 16))
    {
      v11 = *v8;
      v12 = *(void **)(v9 + 40);
      v13 = *(_BYTE *)(v9 + 48);
      v23 = *(void **)(v9 + 32);
      v24 = v12;
      v25 = v13;
      result = (uint64_t)sub_1BC0FA444(v23, v12, v13);
      if (v25 == 255)
        break;
      if (!*(_QWORD *)(v11 + 16))
        goto LABEL_15;
      v14 = *(void **)(v11 + 40);
      v15 = *(_BYTE *)(v11 + 48);
      v20 = *(void **)(v11 + 32);
      v21 = v14;
      v22 = v15;
      result = (uint64_t)sub_1BC0FA444(v20, v14, v15);
      if (v22 == 255)
        goto LABEL_15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v16 = a5(&v23, &v20);
      sub_1BC0FA484(v20, v21, v22);
      sub_1BC0FA484(v23, v24, v25);
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      if ((v16 & 1) != 0)
      {
        if (!v7)
          goto LABEL_16;
        v17 = *v8;
        v9 = v8[1];
        *v8 = v9;
        v8[1] = v17;
        --v8;
        if (v6 != ++v10)
          continue;
      }
      ++v6;
      v8 = v26 + 1;
      if (v6 == a2)
        return result;
      goto LABEL_5;
    }
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC225534(uint64_t *a1, uint64_t (*a2)(void **, void **))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t (*v14)(void **, void **);
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  unsigned int v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  char v26;
  void *v27;
  char v28;
  int v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  void *v42;
  char v43;
  void *v44;
  char v45;
  char v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  char *v51;
  char *v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  BOOL v64;
  unint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  BOOL v74;
  uint64_t v75;
  char v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  BOOL v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  unint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  unint64_t v106;
  char *v107;
  uint64_t *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  void *v121;
  void *v122;
  unsigned __int8 v123;
  void *v124;
  void *v125;
  unsigned __int8 v126;
  uint64_t v127;

  v3 = v2;
  v5 = a1[1];
  result = sub_1BC2B5390();
  if (result >= v5)
  {
    if (v5 < 0)
      goto LABEL_146;
    if (v5)
      return sub_1BC2253D8(0, v5, 1, a1, a2);
    return result;
  }
  if (v5 >= 0)
    v7 = v5;
  else
    v7 = v5 + 1;
  if (v5 < -1)
    goto LABEL_158;
  v112 = result;
  v108 = a1;
  if (v5 < 2)
  {
    v10 = MEMORY[0x1E0DEE9D8];
    v118 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v5 != 1)
    {
      v50 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v13 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_111:
      v100 = v13;
      v111 = v10;
      if (v50 >= 2)
      {
        v101 = *v108;
        do
        {
          v102 = v50 - 2;
          if (v50 < 2)
            goto LABEL_140;
          if (!v101)
            goto LABEL_157;
          v103 = *(_QWORD *)&v100[16 * v102 + 32];
          v104 = *(_QWORD *)&v100[16 * v50 + 24];
          sub_1BC224FF4((char *)(v101 + 8 * v103), (char *)(v101 + 8 * *(_QWORD *)&v100[16 * v50 + 16]), v101 + 8 * v104, v118, a2);
          if (v3)
            break;
          if (v104 < v103)
            goto LABEL_142;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v100 = sub_1BC26E1A0((uint64_t)v100);
          if (v102 >= *((_QWORD *)v100 + 2))
            goto LABEL_143;
          v105 = &v100[16 * v102 + 32];
          *(_QWORD *)v105 = v103;
          *((_QWORD *)v105 + 1) = v104;
          v106 = *((_QWORD *)v100 + 2);
          if (v50 > v106)
            goto LABEL_144;
          memmove(&v100[16 * v50 + 16], &v100[16 * v50 + 32], 16 * (v106 - v50));
          *((_QWORD *)v100 + 2) = v106 - 1;
          v50 = v106 - 1;
        }
        while (v106 > 2);
      }
LABEL_122:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v111 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v111 = MEMORY[0x1E0DEE9D8];
    v119 = v2;
  }
  else
  {
    v119 = v2;
    v8 = v7 >> 1;
    sub_1BC0E2130(0, (unint64_t *)&qword_1EF3F91B8, (uint64_t)&type metadata for LoggableDose, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v9 = sub_1BC2B45F8();
    *(_QWORD *)(v9 + 16) = v8;
    v111 = v9;
    v118 = (char *)(v9 + 32);
  }
  v11 = 0;
  v12 = *a1;
  v109 = *a1 + 16;
  v110 = *a1 - 8;
  v13 = (char *)MEMORY[0x1E0DEE9D8];
  v14 = a2;
  v117 = v5;
  v127 = *a1;
  while (1)
  {
    v15 = v11;
    v16 = v11 + 1;
    if (v11 + 1 >= v5)
      goto LABEL_37;
    v17 = *(void **)(v12 + 8 * v16);
    v18 = *(_QWORD *)(v12 + 8 * v11);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v19 = sub_1BC220F98(v17, v18, v14);
    if (v119)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_122;
    }
    v20 = v19;
    v119 = 0;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v16 = v15 + 2;
    v5 = v117;
    if (v15 + 2 >= v117)
    {
      v14 = a2;
      v12 = v127;
      if ((v20 & 1) == 0)
        goto LABEL_37;
    }
    else
    {
      v114 = v15;
      v21 = v109 + 8 * v15;
      v14 = a2;
      while (1)
      {
        v22 = v16;
        v23 = *(_QWORD *)v21;
        if (!*(_QWORD *)(*(_QWORD *)v21 + 16))
          goto LABEL_153;
        v24 = *(_QWORD *)(v21 - 8);
        v25 = *(void **)(v23 + 40);
        v26 = *(_BYTE *)(v23 + 48);
        v124 = *(void **)(v23 + 32);
        v125 = v25;
        v126 = v26;
        sub_1BC0FA444(v124, v25, v26);
        if (v126 == 255)
          goto LABEL_153;
        if (!*(_QWORD *)(v24 + 16))
          goto LABEL_154;
        v27 = *(void **)(v24 + 40);
        v28 = *(_BYTE *)(v24 + 48);
        v121 = *(void **)(v24 + 32);
        v122 = v27;
        v123 = v28;
        sub_1BC0FA444(v121, v27, v28);
        if (v123 == 255)
          goto LABEL_154;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v29 = a2(&v124, &v121);
        sub_1BC0FA484(v121, v122, v123);
        sub_1BC0FA484(v124, v125, v126);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (((v20 ^ v29) & 1) != 0)
          break;
        v16 = v22 + 1;
        v21 += 8;
        v5 = v117;
        if (v117 == v22 + 1)
        {
          v16 = v117;
          goto LABEL_28;
        }
      }
      v5 = v117;
      v16 = v22;
LABEL_28:
      v15 = v114;
      v12 = v127;
      if ((v20 & 1) == 0)
        goto LABEL_37;
    }
    if (v16 < v15)
      goto LABEL_151;
    if (v15 < v16)
    {
      v30 = (uint64_t *)(v110 + 8 * v16);
      v31 = v16;
      v32 = v15;
      v33 = (uint64_t *)(v12 + 8 * v15);
      do
      {
        if (v32 != --v31)
        {
          if (!v12)
            goto LABEL_156;
          v34 = *v33;
          *v33 = *v30;
          *v30 = v34;
        }
        ++v32;
        --v30;
        ++v33;
      }
      while (v32 < v31);
    }
LABEL_37:
    if (v16 < v5)
    {
      if (__OFSUB__(v16, v15))
        goto LABEL_145;
      if (v16 - v15 < v112)
        break;
    }
LABEL_59:
    if (v16 < v15)
      goto LABEL_141;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v13 = sub_1BC26DEB8(0, *((_QWORD *)v13 + 2) + 1, 1, v13);
    v49 = *((_QWORD *)v13 + 2);
    v48 = *((_QWORD *)v13 + 3);
    v50 = v49 + 1;
    v12 = v127;
    if (v49 >= v48 >> 1)
    {
      v99 = sub_1BC26DEB8((char *)(v48 > 1), v49 + 1, 1, v13);
      v12 = v127;
      v13 = v99;
    }
    *((_QWORD *)v13 + 2) = v50;
    v51 = v13 + 32;
    v52 = &v13[16 * v49 + 32];
    *(_QWORD *)v52 = v15;
    *((_QWORD *)v52 + 1) = v16;
    v116 = v16;
    if (v49)
    {
      while (1)
      {
        v53 = v50 - 1;
        if (v50 >= 4)
        {
          v58 = &v51[16 * v50];
          v59 = *((_QWORD *)v58 - 8);
          v60 = *((_QWORD *)v58 - 7);
          v64 = __OFSUB__(v60, v59);
          v61 = v60 - v59;
          if (v64)
            goto LABEL_129;
          v63 = *((_QWORD *)v58 - 6);
          v62 = *((_QWORD *)v58 - 5);
          v64 = __OFSUB__(v62, v63);
          v56 = v62 - v63;
          v57 = v64;
          if (v64)
            goto LABEL_130;
          v65 = v50 - 2;
          v66 = &v51[16 * v50 - 32];
          v68 = *(_QWORD *)v66;
          v67 = *((_QWORD *)v66 + 1);
          v64 = __OFSUB__(v67, v68);
          v69 = v67 - v68;
          if (v64)
            goto LABEL_132;
          v64 = __OFADD__(v56, v69);
          v70 = v56 + v69;
          if (v64)
            goto LABEL_135;
          if (v70 >= v61)
          {
            v88 = &v51[16 * v53];
            v90 = *(_QWORD *)v88;
            v89 = *((_QWORD *)v88 + 1);
            v64 = __OFSUB__(v89, v90);
            v91 = v89 - v90;
            if (v64)
              goto LABEL_139;
            v81 = v56 < v91;
            goto LABEL_96;
          }
        }
        else
        {
          if (v50 != 3)
          {
            v82 = *((_QWORD *)v13 + 4);
            v83 = *((_QWORD *)v13 + 5);
            v64 = __OFSUB__(v83, v82);
            v75 = v83 - v82;
            v76 = v64;
            goto LABEL_90;
          }
          v55 = *((_QWORD *)v13 + 4);
          v54 = *((_QWORD *)v13 + 5);
          v64 = __OFSUB__(v54, v55);
          v56 = v54 - v55;
          v57 = v64;
        }
        if ((v57 & 1) != 0)
          goto LABEL_131;
        v65 = v50 - 2;
        v71 = &v51[16 * v50 - 32];
        v73 = *(_QWORD *)v71;
        v72 = *((_QWORD *)v71 + 1);
        v74 = __OFSUB__(v72, v73);
        v75 = v72 - v73;
        v76 = v74;
        if (v74)
          goto LABEL_134;
        v77 = &v51[16 * v53];
        v79 = *(_QWORD *)v77;
        v78 = *((_QWORD *)v77 + 1);
        v64 = __OFSUB__(v78, v79);
        v80 = v78 - v79;
        if (v64)
          goto LABEL_137;
        if (__OFADD__(v75, v80))
          goto LABEL_138;
        if (v75 + v80 >= v56)
        {
          v81 = v56 < v80;
LABEL_96:
          if (v81)
            v53 = v65;
          goto LABEL_98;
        }
LABEL_90:
        if ((v76 & 1) != 0)
          goto LABEL_133;
        v84 = &v51[16 * v53];
        v86 = *(_QWORD *)v84;
        v85 = *((_QWORD *)v84 + 1);
        v64 = __OFSUB__(v85, v86);
        v87 = v85 - v86;
        if (v64)
          goto LABEL_136;
        if (v87 < v75)
          goto LABEL_107;
LABEL_98:
        v92 = v53 - 1;
        if (v53 - 1 >= v50)
        {
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
          goto LABEL_148;
        }
        if (!v12)
          goto LABEL_155;
        v93 = v13;
        v94 = &v51[16 * v92];
        v95 = *(_QWORD *)v94;
        v96 = &v51[16 * v53];
        v97 = *((_QWORD *)v96 + 1);
        sub_1BC224FF4((char *)(v12 + 8 * *(_QWORD *)v94), (char *)(v12 + 8 * *(_QWORD *)v96), v12 + 8 * v97, v118, a2);
        if (v119)
          goto LABEL_122;
        if (v97 < v95)
          goto LABEL_126;
        if (v53 > *((_QWORD *)v93 + 2))
          goto LABEL_127;
        *(_QWORD *)v94 = v95;
        *(_QWORD *)&v51[16 * v92 + 8] = v97;
        v98 = *((_QWORD *)v93 + 2);
        if (v53 >= v98)
          goto LABEL_128;
        v13 = v93;
        v50 = v98 - 1;
        memmove(&v51[16 * v53], v96 + 16, 16 * (v98 - 1 - v53));
        *((_QWORD *)v93 + 2) = v98 - 1;
        v14 = a2;
        v12 = v127;
        if (v98 <= 2)
          goto LABEL_107;
      }
    }
    v50 = 1;
LABEL_107:
    v11 = v116;
    v5 = v117;
    if (v116 >= v117)
    {
      v3 = v119;
      v10 = v111;
      goto LABEL_111;
    }
  }
  if (__OFADD__(v15, v112))
    goto LABEL_147;
  if (v15 + v112 >= v5)
    v35 = v5;
  else
    v35 = v15 + v112;
  if (v35 >= v15)
  {
    if (v16 != v35)
    {
      v113 = v35;
      v115 = v15;
      v107 = v13;
      v36 = (uint64_t *)(v110 + 8 * v16);
      do
      {
        v37 = v16;
        v38 = *(_QWORD *)(v12 + 8 * v16);
        v39 = v115;
        v40 = v36;
        while (1)
        {
          if (!*(_QWORD *)(v38 + 16))
            goto LABEL_150;
          v41 = *v40;
          v42 = *(void **)(v38 + 40);
          v43 = *(_BYTE *)(v38 + 48);
          v124 = *(void **)(v38 + 32);
          v125 = v42;
          v126 = v43;
          sub_1BC0FA444(v124, v42, v43);
          if (v126 == 255)
            goto LABEL_150;
          if (!*(_QWORD *)(v41 + 16))
            goto LABEL_149;
          v44 = *(void **)(v41 + 40);
          v45 = *(_BYTE *)(v41 + 48);
          v121 = *(void **)(v41 + 32);
          v122 = v44;
          v123 = v45;
          sub_1BC0FA444(v121, v44, v45);
          if (v123 == 255)
            goto LABEL_149;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v46 = v14(&v124, &v121);
          sub_1BC0FA484(v121, v122, v123);
          sub_1BC0FA484(v124, v125, v126);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v46 & 1) == 0)
            break;
          v12 = v127;
          if (!v127)
            goto LABEL_152;
          v47 = *v40;
          v38 = v40[1];
          *v40 = v38;
          v40[1] = v47;
          --v40;
          if (v37 == ++v39)
            goto LABEL_48;
        }
        v12 = v127;
LABEL_48:
        v16 = v37 + 1;
        ++v36;
      }
      while (v37 + 1 != v113);
      v16 = v113;
      v13 = v107;
      v15 = v115;
    }
    goto LABEL_59;
  }
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  __break(1u);
LABEL_151:
  __break(1u);
LABEL_152:
  __break(1u);
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  result = sub_1BC2B52AC();
  __break(1u);
  return result;
}

uint64_t sub_1BC225DC8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(_QWORD *, uint64_t, uint64_t))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _QWORD v13[2];

  v10 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v10 = a4(v10);
  v11 = *(_QWORD *)(v10 + 16);
  v13[0] = v10 + 32;
  v13[1] = v11;
  result = a5(v13, a2, a3);
  *a1 = v10;
  return result;
}

uint64_t sub_1BC225E58(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  unsigned __int8 v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v32;
  unsigned __int8 v33;
  uint64_t v34;

  v6 = a1;
  v34 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
  {
LABEL_23:
    swift_bridgeObjectRetain();
    v7 = sub_1BC2B52D0();
    if (v7)
      goto LABEL_3;
  }
  else
  {
    v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v7)
    {
LABEL_3:
      v8 = 0;
      v25 = v6;
      v26 = v6 & 0xC000000000000001;
      v23 = v6 + 32;
      v24 = v7;
      v28 = a3;
      v29 = a4;
      while (1)
      {
        if (v26)
        {
          v9 = MEMORY[0x1BCCEE950](v8, v6);
          v10 = __OFADD__(v8++, 1);
          if (v10)
            goto LABEL_22;
        }
        else
        {
          v9 = *(_QWORD *)(v23 + 8 * v8);
          swift_retain();
          v10 = __OFADD__(v8++, 1);
          if (v10)
          {
LABEL_22:
            __break(1u);
            goto LABEL_23;
          }
        }
        v11 = sub_1BC2B3440();
        v12 = *(_QWORD *)(v11 + 16);
        if (v12)
        {
          v13 = v11;
          v27 = v8;
          v14 = *(_QWORD *)(sub_1BC2B356C() - 8);
          v15 = v13 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
          v16 = *(_QWORD *)(v14 + 72);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          v17 = (_QWORD *)MEMORY[0x1E0DEE9D8];
          do
          {
            sub_1BC222810(v15, a2, a3, a4, v9, (uint64_t)&v32);
            v19 = v33;
            if (v33 != 255)
            {
              v30 = v32;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v17 = sub_1BC0FADA4(0, v17[2] + 1, 1, v17);
              v21 = v17[2];
              v20 = v17[3];
              if (v21 >= v20 >> 1)
                v17 = sub_1BC0FADA4((_QWORD *)(v20 > 1), v21 + 1, 1, v17);
              v17[2] = v21 + 1;
              v18 = &v17[3 * v21];
              *((_OWORD *)v18 + 2) = v30;
              *((_BYTE *)v18 + 48) = v19 & 1;
              a3 = v28;
              a4 = v29;
            }
            v15 += v16;
            --v12;
          }
          while (v12);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          v7 = v24;
          v6 = v25;
          v8 = v27;
        }
        else
        {
          v17 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        }
        swift_release();
        swift_bridgeObjectRelease();
        sub_1BC131764((uint64_t)v17);
        if (v8 == v7)
        {
          swift_bridgeObjectRelease();
          return v34;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

uint64_t destroy for DayScheduleProvider()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s19HealthMedicationsUI19DayScheduleProviderVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for DayScheduleProvider(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for DayScheduleProvider(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DayScheduleProvider(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DayScheduleProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DayScheduleProvider()
{
  return &type metadata for DayScheduleProvider;
}

unint64_t sub_1BC226280()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDA0EA98[0];
  if (!qword_1EDA0EA98[0])
  {
    v1 = sub_1BC2B23F0();
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0CB08B0], v1);
    atomic_store(result, qword_1EDA0EA98);
  }
  return result;
}

unint64_t sub_1BC2262C8()
{
  unint64_t result;

  result = qword_1EF3FFCE0;
  if (!qword_1EF3FFCE0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, &qword_1EF3FFCE0);
  }
  return result;
}

_QWORD *sub_1BC226308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v11;

  sub_1BC2B3278();
  sub_1BC2B326C();
  sub_1BC2B3248();
  swift_release();
  sub_1BC1D75CC();
  sub_1BC2B48EC();
  sub_1BC2B31F4();
  swift_allocObject();
  v11 = sub_1BC2B314C();
  v5[2] = a1;
  v5[3] = a2;
  v5[4] = a3;
  v5[5] = a4;
  v5[6] = a5;
  v5[7] = v11;
  return v5;
}

uint64_t sub_1BC2263C4()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for InteractionSummaryOverviewDataSourceProvider()
{
  return objc_opt_self();
}

_QWORD *sub_1BC226428()
{
  return sub_1BC22665C();
}

uint64_t sub_1BC226448(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;

  v3 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v3)
  {
    v19 = MEMORY[0x1E0DEE9D8];
    sub_1BC2B5228();
    v6 = (uint64_t *)(a1 + 32);
    v7 = a2[3];
    v8 = a2[5];
    v17 = (void *)a2[4];
    v18 = (void *)a2[2];
    v16 = a2[6];
    type metadata accessor for InteractionSeverityDataSource();
    do
    {
      v9 = *v6++;
      v10 = swift_allocObject();
      *(_QWORD *)(v10 + qword_1EF3FDFE0) = 0;
      *(_QWORD *)(v10 + qword_1EF3FDFE8) = 0;
      v11 = v10 + qword_1EF3FDFF0;
      *(_OWORD *)v11 = 0u;
      *(_OWORD *)(v11 + 16) = 0u;
      *(_QWORD *)(v11 + 32) = 0;
      *(_QWORD *)(v10 + qword_1EF3FDFF8) = MEMORY[0x1E0DEE9E8];
      *(_QWORD *)(v10 + qword_1EF3FE000) = v9;
      *(_QWORD *)(v10 + qword_1EF3FDFC0) = v18;
      *(_QWORD *)(v10 + qword_1EF3FDFC8) = v7;
      *(_QWORD *)(v10 + qword_1EF3FDFD0) = v17;
      *(_QWORD *)(v10 + qword_1EF3FDFD8) = v8;
      *(_QWORD *)(v10 + qword_1EF3FE010) = v16;
      v12 = v18;
      swift_retain_n();
      v13 = v17;
      swift_retain_n();
      v14 = v12;
      v15 = v13;
      sub_1BC2B2750();
      swift_retain();
      sub_1BC1C8E60();
      swift_release();

      swift_release();
      swift_release();
      sub_1BC2B5204();
      sub_1BC2B5234();
      sub_1BC2B5240();
      sub_1BC2B5210();
      --v3;
    }
    while (v3);
    return v19;
  }
  return result;
}

_QWORD *sub_1BC22665C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t inited;
  _QWORD *result;
  void *v4;
  unsigned int v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;

  v1 = v0;
  sub_1BC2268D0();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC2B9600;
  *(_OWORD *)(inited + 32) = xmmword_1BC2B92D0;
  *(_QWORD *)(inited + 48) = 3;
  if ((sub_1BC2B3170() & 1) != 0)
  {
    result = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
    if (!result)
    {
      __break(1u);
      return result;
    }
    v4 = result;
    v5 = objc_msgSend(result, sel_isAppleInternalInstall);

    if (v5)
    {
      v6 = sub_1BC0FB014((_QWORD *)1, 4, 1, (_QWORD *)inited);
      v6[2] = 4;
      v6[7] = 4;
    }
  }
  v7 = v1[6];
  type metadata accessor for InteractionFactorsDataSource();
  swift_allocObject();
  v8 = swift_retain();
  v9 = sub_1BC1AA958(v8, v7);
  v10 = sub_1BC0FA658(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v12 = v10[2];
  v11 = v10[3];
  if (v12 >= v11 >> 1)
    v10 = sub_1BC0FA658((_QWORD *)(v11 > 1), v12 + 1, 1, v10);
  v13 = sub_1BC1D94E0(&qword_1EF3FFE78, (uint64_t (*)(uint64_t))type metadata accessor for InteractionFactorsDataSource);
  v10[2] = v12 + 1;
  v14 = &v10[2 * v12];
  v14[4] = v9;
  v14[5] = v13;
  type metadata accessor for InteractionSeperatorLineDataSource();
  swift_allocObject();
  v15 = InteractionSeperatorLineDataSource.init()();
  v17 = v10[2];
  v16 = v10[3];
  if (v17 >= v16 >> 1)
    v10 = sub_1BC0FA658((_QWORD *)(v16 > 1), v17 + 1, 1, v10);
  v18 = sub_1BC1D94E0(&qword_1EF3FFE80, (uint64_t (*)(uint64_t))type metadata accessor for InteractionSeperatorLineDataSource);
  v10[2] = v17 + 1;
  v19 = &v10[2 * v17];
  v19[4] = v15;
  v19[5] = v18;
  swift_retain();
  v20 = swift_bridgeObjectRetain();
  v21 = sub_1BC226448(v20, v1);
  swift_bridgeObjectRelease_n();
  swift_release();
  v22 = sub_1BC0F8914(v21);
  swift_bridgeObjectRelease();
  sub_1BC131A18(v22);
  return v10;
}

void sub_1BC2268D0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3F91C8)
  {
    type metadata accessor for HKDrugInteractionSeverityLevel(255);
    v0 = sub_1BC2B53A8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3F91C8);
  }
}

id MedmojiPickerViewController.__allocating_init(config:)(uint64_t a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return MedmojiPickerViewController.init(config:)(a1);
}

id sub_1BC226954()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController____lazy_storage___medicationView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController____lazy_storage___medicationView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController____lazy_storage___medicationView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)sub_1BC2B3320()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC2269E8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController____lazy_storage___medmojiCategorySelectionView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController____lazy_storage___medmojiCategorySelectionView);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController____lazy_storage___medmojiCategorySelectionView);
  }
  else
  {
    v4 = sub_1BC229AB8(*(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton), *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton));
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC226A70()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController____lazy_storage___shapeSelectionViewController;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController____lazy_storage___shapeSelectionViewController);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController____lazy_storage___shapeSelectionViewController);
  }
  else
  {
    v4 = (void *)sub_1BC226AD0(v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t sub_1BC226AD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v1 = *(_QWORD *)(a1 + OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapePublisher);
  *(_QWORD *)((char *)objc_allocWithZone((Class)type metadata accessor for ShapeSelectionViewController())
            + qword_1EF3FC8F8) = v1;
  sub_1BC2B2DEC();
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF400100, (uint64_t (*)(uint64_t))sub_1BC0FFFBC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BC2B92D0;
  v8 = 1;
  type metadata accessor for VisualizationShapeDataSource();
  swift_allocObject();
  v3 = swift_retain_n();
  v4 = sub_1BC14AF34(v3, &v8);
  v5 = MEMORY[0x1E0D2B148];
  *(_QWORD *)(v2 + 32) = v4;
  *(_QWORD *)(v2 + 40) = v5;
  sub_1BC2B2E10();
  v6 = sub_1BC2B2FE4();
  swift_release();
  return v6;
}

id sub_1BC226BD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v14;

  v1 = v0;
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0ECC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v14 - v3;
  v5 = OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController____lazy_storage___colorSelectionViewController;
  v6 = *(void **)(v1
                + OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController____lazy_storage___colorSelectionViewController);
  if (v6)
  {
    v7 = *(id *)(v1
               + OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController____lazy_storage___colorSelectionViewController);
  }
  else
  {
    v8 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_config;
    swift_beginAccess();
    sub_1BC118700(v8, (uint64_t)v4, (unint64_t *)&qword_1EDA0ECC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950]);
    v9 = objc_allocWithZone((Class)type metadata accessor for ColorSelectionViewController());
    v10 = (void *)sub_1BC164954((uint64_t)v4);
    v11 = *(void **)(v1 + v5);
    *(_QWORD *)(v1 + v5) = v10;
    v7 = v10;

    v6 = 0;
  }
  v12 = v6;
  return v7;
}

id MedmojiPickerViewController.init(config:)(uint64_t a1)
{
  char *v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t inited;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  id v35;
  id v36;
  uint64_t v37;
  void *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  objc_class *v56;
  id v57;
  uint64_t v58;
  _QWORD v60[2];
  void (*v61)(char *, uint64_t);
  void (*v62)(char *, char *, uint64_t);
  uint64_t v63;
  void (*v64)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  id v67;
  void (*v68)(char *, char *, uint64_t);
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  __int128 v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  objc_super v87;

  v83 = a1;
  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0ECC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v82 = (uint64_t)v60 - v4;
  sub_1BC0E7998(0, &qword_1EF3F8958, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C6F0], v2);
  MEMORY[0x1E0C80A78](v5);
  v84 = (char *)v60 - v6;
  sub_1BC0E7998(0, (unint64_t *)&unk_1EDA0F7B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF240], v2);
  MEMORY[0x1E0C80A78](v7);
  v80 = (char *)v60 - v8;
  v86 = sub_1BC2B215C();
  v72 = *(_QWORD *)(v86 - 8);
  v9 = MEMORY[0x1E0C80A78](v86);
  v79 = (char *)v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v71 = (char *)v60 - v11;
  v85 = sub_1BC2B4EC8();
  v12 = *(_QWORD *)(v85 - 8);
  v13 = MEMORY[0x1E0C80A78](v85);
  v77 = (char *)v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v60 - v15;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController____lazy_storage___medicationView] = 0;
  v76 = OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton;
  v17 = qword_1EDA0FEE8;
  v78 = (uint64_t)v1;
  v81 = v1;
  if (v17 != -1)
    swift_once();
  v18 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  v20 = v19;
  swift_bridgeObjectRelease();

  sub_1BC2B4E8C();
  v75 = (id)objc_opt_self();
  v21 = objc_msgSend(v75, sel_labelColor);
  sub_1BC2B4E44();
  sub_1BC2B4DF0();
  sub_1BC0E7998(0, (unint64_t *)&unk_1EDA0FE80, (uint64_t (*)(uint64_t))sub_1BC1306C0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v74 = v22;
  inited = swift_initStackObject();
  v73 = xmmword_1BC2B92D0;
  *(_OWORD *)(inited + 16) = xmmword_1BC2B92D0;
  v24 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  v25 = sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
  v66 = v25;
  v70 = *MEMORY[0x1E0DC4A88];
  v69 = *MEMORY[0x1E0DC1448];
  v67 = v24;
  v26 = sub_1BC2B4C64();
  *(_QWORD *)(inited + 64) = v25;
  *(_QWORD *)(inited + 40) = v26;
  sub_1BC1069C0(inited);
  v27 = v71;
  sub_1BC2B2168();
  v28 = v72;
  v68 = *(void (**)(char *, char *, uint64_t))(v72 + 16);
  v29 = v79;
  v68(v79, v27, v86);
  v60[1] = v20;
  swift_bridgeObjectRetain();
  v30 = v80;
  sub_1BC2B2138();
  v65 = sub_1BC2B212C();
  v64 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56);
  v64(v30, 0, 1, v65);
  sub_1BC2B4E20();
  v63 = sub_1BC0E1D38(0, &qword_1EDA0FE08);
  v62 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  v31 = v77;
  v32 = v85;
  v62(v77, v16, v85);
  v33 = (void *)sub_1BC2B4ED4();
  objc_msgSend(v33, sel_setContentHorizontalAlignment_, 4);
  objc_msgSend(v33, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v72 = *(_QWORD *)(v28 + 8);
  v34 = v86;
  ((void (*)(char *, uint64_t))v72)(v27, v86);
  v61 = *(void (**)(char *, uint64_t))(v12 + 8);
  v61(v16, v32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v78 + v76) = v33;
  v78 = OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton;
  v35 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  v76 = sub_1BC2B2144();
  swift_bridgeObjectRelease();

  sub_1BC2B4E8C();
  v36 = objc_msgSend(v75, sel_labelColor);
  sub_1BC2B4E44();
  sub_1BC2B4DF0();
  v37 = swift_initStackObject();
  *(_OWORD *)(v37 + 16) = v73;
  v38 = v67;
  *(_QWORD *)(v37 + 32) = v67;
  v39 = v38;
  v40 = v66;
  v41 = sub_1BC2B4C64();
  *(_QWORD *)(v37 + 64) = v40;
  *(_QWORD *)(v37 + 40) = v41;
  sub_1BC1069C0(v37);
  sub_1BC2B2168();
  v68(v29, v27, v34);
  swift_bridgeObjectRetain();
  sub_1BC2B2138();
  v64(v30, 0, 1, v65);
  sub_1BC2B4E20();
  v42 = v85;
  v62(v31, v16, v85);
  v43 = (void *)sub_1BC2B4ED4();
  objc_msgSend(v43, sel_setContentHorizontalAlignment_, 4);
  objc_msgSend(v43, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  ((void (*)(char *, uint64_t))v72)(v27, v34);
  v61(v16, v42);
  swift_bridgeObjectRelease();
  v44 = v81;
  *(_QWORD *)&v81[v78] = v43;
  *(_QWORD *)&v44[OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController____lazy_storage___medmojiCategorySelectionView] = 0;
  *(_QWORD *)&v44[OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController____lazy_storage___shapeSelectionViewController] = 0;
  *(_QWORD *)&v44[OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController____lazy_storage___colorSelectionViewController] = 0;
  *(_QWORD *)&v44[OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v44[OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_cancellables] = MEMORY[0x1E0DEE9E8];
  v45 = &v44[OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_config];
  v46 = sub_1BC2B3608();
  v47 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950];
  v48 = *(_QWORD *)(v46 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v48 + 56))(v45, 1, 1, v46);
  v49 = v83;
  v50 = v82;
  sub_1BC118700(v83, v82, (unint64_t *)&qword_1EDA0ECC0, v47);
  v51 = v49;
  v52 = v50;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v50, 1, v46) == 1)
  {
    sub_1BC0F2444(v50, (unint64_t *)&qword_1EDA0ECC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950]);
    v53 = sub_1BC2B3350();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v84, 1, 1, v53);
  }
  else
  {
    v54 = v84;
    sub_1BC2B35FC();
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v52, v46);
    v55 = sub_1BC2B3350();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v54, 0, 1, v55);
  }
  sub_1BC2299C0(0, (unint64_t *)&qword_1EF3F8978, &qword_1EF3F8958, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C6F0]);
  swift_allocObject();
  *(_QWORD *)&v44[OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapePublisher] = sub_1BC2B3EF0();

  v56 = (objc_class *)type metadata accessor for MedmojiPickerViewController();
  v87.receiver = v44;
  v87.super_class = v56;
  v57 = objc_msgSendSuper2(&v87, sel_initWithNibName_bundle_, 0, 0);
  v58 = (uint64_t)v57 + OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_config;
  swift_beginAccess();
  sub_1BC1A5974(v51, v58);
  swift_endAccess();
  return v57;
}

uint64_t type metadata accessor for MedmojiPickerViewController()
{
  uint64_t result;

  result = qword_1EF3FFF00;
  if (!qword_1EF3FFF00)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BC227708()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  objc_super v14;

  v14.receiver = v0;
  v14.super_class = (Class)type metadata accessor for MedmojiPickerViewController();
  objc_msgSendSuper2(&v14, sel_viewDidLoad);
  v1 = objc_msgSend(v0, sel_view);
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend((id)objc_opt_self(), sel_systemBackgroundColor);
    objc_msgSend(v2, sel_setBackgroundColor_, v3);

    v4 = objc_msgSend(v0, sel_navigationItem);
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithBarButtonSystemItem_target_action_, 0, v0, sel_doneButtonTappped_);
    objc_msgSend(v4, sel_setRightBarButtonItem_, v5);

    v6 = objc_msgSend(v0, sel_navigationItem);
    v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithBarButtonSystemItem_target_action_, 1, v0, sel_cancelButtonTappped_);
    objc_msgSend(v6, sel_setLeftBarButtonItem_, v7);

    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v8 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();
    swift_bridgeObjectRelease();

    v9 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    objc_msgSend(v0, sel_setTitle_, v9, 0xE000000000000000);

    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton], sel_addTarget_action_forControlEvents_, v0, sel_shapeButtonTappped_, 64);
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton], sel_addTarget_action_forControlEvents_, v0, sel_colorButtonTappped_, 64);
    v10 = sub_1BC226A70();
    objc_msgSend(v0, sel_addChildViewController_, v10);

    v11 = sub_1BC226A70();
    objc_msgSend(v11, sel_didMoveToParentViewController_, v0);

    v12 = sub_1BC226A70();
    v13 = objc_msgSend(v12, sel_collectionView);

    if (v13)
    {
      objc_msgSend(v13, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

      sub_1BC2286D8();
      sub_1BC227A58();
      sub_1BC227B78();
      sub_1BC228024();
      sub_1BC229404();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1BC227A58()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;

  v1 = objc_msgSend(v0, sel_view);
  if (!v1)
  {
    __break(1u);
    goto LABEL_7;
  }
  v2 = v1;
  v3 = sub_1BC226954();
  objc_msgSend(v2, sel_addSubview_, v3);

  v4 = objc_msgSend(v0, sel_view);
  if (!v4)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v5 = v4;
  v6 = sub_1BC2269E8();
  objc_msgSend(v5, sel_addSubview_, v6);

  v7 = objc_msgSend(v0, sel_view);
  if (!v7)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v8 = v7;
  v9 = sub_1BC226A70();
  v10 = objc_msgSend(v9, sel_collectionView);

  if (v10)
  {
    objc_msgSend(v8, sel_addSubview_, v10);

    return;
  }
LABEL_9:
  __break(1u);
}

void sub_1BC227B78()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  void *v38;
  id v39;
  id v40;
  void *v41;

  v1 = v0;
  v2 = sub_1BC226BD4();
  objc_msgSend(v1, sel_addChildViewController_, v2);

  v3 = sub_1BC226BD4();
  objc_msgSend(v3, sel_didMoveToParentViewController_, v1);

  v4 = sub_1BC226BD4();
  v5 = objc_msgSend(v4, sel_collectionView);

  if (!v5)
  {
    __break(1u);
    goto LABEL_14;
  }
  objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  v6 = sub_1BC226BD4();
  v7 = objc_msgSend(v6, sel_collectionView);

  if (!v7)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  objc_msgSend(v7, sel_setHidden_, 1);

  v8 = objc_msgSend(v1, sel_view);
  if (!v8)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v9 = v8;
  v10 = sub_1BC226BD4();
  v11 = objc_msgSend(v10, sel_collectionView);

  if (!v11)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  objc_msgSend(v9, sel_addSubview_, v11);

  sub_1BC0E7940();
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1BC2BA730;
  v13 = sub_1BC226BD4();
  v14 = objc_msgSend(v13, sel_collectionView);

  if (!v14)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v15 = objc_msgSend(v14, sel_topAnchor);

  v16 = sub_1BC2269E8();
  v17 = objc_msgSend(v16, sel_bottomAnchor);

  v18 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v17);
  *(_QWORD *)(v12 + 32) = v18;
  v19 = sub_1BC226BD4();
  v20 = objc_msgSend(v19, sel_collectionView);

  if (!v20)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v21 = objc_msgSend(v20, sel_leadingAnchor);

  v22 = objc_msgSend(v1, sel_view);
  if (!v22)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v23 = v22;
  v24 = objc_msgSend(v22, sel_leadingAnchor);

  v25 = objc_msgSend(v21, sel_constraintEqualToAnchor_, v24);
  *(_QWORD *)(v12 + 40) = v25;
  v26 = sub_1BC226BD4();
  v27 = objc_msgSend(v26, sel_collectionView);

  if (!v27)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v28 = objc_msgSend(v27, sel_trailingAnchor);

  v29 = objc_msgSend(v1, sel_view);
  if (!v29)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v30 = v29;
  v31 = objc_msgSend(v29, sel_trailingAnchor);

  v32 = objc_msgSend(v28, sel_constraintEqualToAnchor_, v31);
  *(_QWORD *)(v12 + 48) = v32;
  v33 = sub_1BC226BD4();
  v34 = objc_msgSend(v33, sel_collectionView);

  if (!v34)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v35 = objc_msgSend(v34, sel_bottomAnchor);

  v36 = objc_msgSend(v1, sel_view);
  if (v36)
  {
    v37 = v36;
    v38 = (void *)objc_opt_self();
    v39 = objc_msgSend(v37, sel_bottomAnchor);

    v40 = objc_msgSend(v35, sel_constraintEqualToAnchor_, v39);
    *(_QWORD *)(v12 + 56) = v40;
    sub_1BC2B45A4();
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
    v41 = (void *)sub_1BC2B4580();
    swift_bridgeObjectRelease();
    objc_msgSend(v38, sel_activateConstraints_, v41);

    sub_1BC228CCC();
    return;
  }
LABEL_23:
  __break(1u);
}

void sub_1BC228024()
{
  void *v0;
  uint64_t v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  void *v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  void *v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  void *v62;
  void *v63;
  id v64;
  id v65;
  id v66;

  sub_1BC0E7940();
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1BC2B92A0;
  v2 = sub_1BC226954();
  v3 = objc_msgSend(v2, sel_heightAnchor);

  v4 = objc_msgSend(v3, sel_constraintEqualToConstant_, 104.0);
  *(_QWORD *)(v1 + 32) = v4;
  v5 = sub_1BC226954();
  v6 = objc_msgSend(v5, sel_widthAnchor);

  v7 = objc_msgSend(v6, sel_constraintEqualToConstant_, 104.0);
  *(_QWORD *)(v1 + 40) = v7;
  v8 = sub_1BC226954();
  v9 = objc_msgSend(v8, sel_topAnchor);

  v10 = objc_msgSend(v0, sel_view);
  if (!v10)
  {
    __break(1u);
    goto LABEL_14;
  }
  v11 = v10;
  v12 = objc_msgSend(v10, sel_safeAreaLayoutGuide);

  v13 = objc_msgSend(v12, sel_topAnchor);
  v14 = objc_msgSend(v9, sel_constraintEqualToAnchor_constant_, v13, 20.0);

  *(_QWORD *)(v1 + 48) = v14;
  v15 = sub_1BC226954();
  v16 = objc_msgSend(v15, sel_centerXAnchor);

  v17 = objc_msgSend(v0, sel_view);
  if (!v17)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v17;
  v19 = objc_msgSend(v17, sel_centerXAnchor);

  v20 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v19);
  *(_QWORD *)(v1 + 56) = v20;
  v21 = sub_1BC2269E8();
  v22 = objc_msgSend(v21, sel_topAnchor);

  v23 = sub_1BC226954();
  v24 = objc_msgSend(v23, sel_bottomAnchor);

  v25 = objc_msgSend(v22, sel_constraintEqualToAnchor_constant_, v24, 30.0);
  *(_QWORD *)(v1 + 64) = v25;
  v26 = sub_1BC2269E8();
  v27 = objc_msgSend(v26, sel_leadingAnchor);

  v28 = objc_msgSend(v0, sel_view);
  if (!v28)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v29 = v28;
  v30 = objc_msgSend(v28, sel_leadingAnchor);

  v31 = objc_msgSend(v27, sel_constraintEqualToAnchor_, v30);
  *(_QWORD *)(v1 + 72) = v31;
  v32 = sub_1BC2269E8();
  v33 = objc_msgSend(v32, sel_trailingAnchor);

  v34 = objc_msgSend(v0, (SEL)&selRef_removeFromSuperview);
  if (!v34)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v35 = v34;
  v36 = objc_msgSend(v34, sel_trailingAnchor);

  v37 = objc_msgSend(v33, sel_constraintEqualToAnchor_, v36);
  *(_QWORD *)(v1 + 80) = v37;
  v38 = sub_1BC226A70();
  v39 = objc_msgSend(v38, sel_collectionView);

  if (!v39)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v40 = objc_msgSend(v39, sel_topAnchor);

  v41 = sub_1BC2269E8();
  v42 = objc_msgSend(v41, sel_bottomAnchor);

  v43 = objc_msgSend(v40, sel_constraintEqualToAnchor_, v42);
  *(_QWORD *)(v1 + 88) = v43;
  v44 = sub_1BC226A70();
  v45 = objc_msgSend(v44, sel_collectionView);

  if (!v45)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v46 = objc_msgSend(v45, sel_leadingAnchor);

  v47 = objc_msgSend(v0, sel_view);
  if (!v47)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v48 = v47;
  v49 = objc_msgSend(v47, sel_leadingAnchor);

  v50 = objc_msgSend(v46, sel_constraintEqualToAnchor_, v49);
  *(_QWORD *)(v1 + 96) = v50;
  v51 = sub_1BC226A70();
  v52 = objc_msgSend(v51, sel_collectionView);

  if (!v52)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v53 = objc_msgSend(v52, sel_trailingAnchor);

  v54 = objc_msgSend(v0, sel_view);
  if (!v54)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v55 = v54;
  v56 = objc_msgSend(v54, sel_trailingAnchor);

  v57 = objc_msgSend(v53, sel_constraintEqualToAnchor_, v56);
  *(_QWORD *)(v1 + 104) = v57;
  v58 = sub_1BC226A70();
  v59 = objc_msgSend(v58, sel_collectionView);

  if (!v59)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v60 = objc_msgSend(v59, sel_bottomAnchor);

  v61 = objc_msgSend(v0, sel_view);
  if (v61)
  {
    v62 = v61;
    v63 = (void *)objc_opt_self();
    v64 = objc_msgSend(v62, sel_bottomAnchor);

    v65 = objc_msgSend(v60, sel_constraintEqualToAnchor_, v64);
    *(_QWORD *)(v1 + 112) = v65;
    sub_1BC2B45A4();
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
    v66 = (id)sub_1BC2B4580();
    swift_bridgeObjectRelease();
    objc_msgSend(v63, sel_activateConstraints_, v66);

    return;
  }
LABEL_23:
  __break(1u);
}

uint64_t sub_1BC2286D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  _QWORD v12[3];
  id v13;

  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0FCC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v12 - v2;
  sub_1BC14CA80();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = *(_QWORD *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapePublisher);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FFF0);
  swift_retain();
  v13 = (id)sub_1BC2B4A0C();
  v9 = sub_1BC2B49C4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v3, 1, 1, v9);
  v10 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C6F0];
  sub_1BC2299C0(0, (unint64_t *)&qword_1EF3F8978, &qword_1EF3F8958, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C6F0]);
  sub_1BC22AAEC(&qword_1EF3FAF90, (unint64_t *)&qword_1EF3F8978, &qword_1EF3F8958, v10);
  sub_1BC1019D8();
  sub_1BC2B4064();
  sub_1BC0F2444((uint64_t)v3, (unint64_t *)&qword_1EDA0FCC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868]);

  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC22AB34(&qword_1EF3FAF98, (uint64_t (*)(uint64_t))sub_1BC14CA80);
  sub_1BC2B40A0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BC228944(uint64_t a1, uint64_t a2)
{
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t result;
  void *v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  id v28;
  uint64_t (*v29)(uint64_t);
  id v30;
  char *v31;

  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0ECC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)&v31 - v10;
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v31 - v12;
  sub_1BC0E7998(0, &qword_1EF3F8958, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C6F0], v4);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v31 - v15;
  v17 = sub_1BC2B3350();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = MEMORY[0x1BCCEF478](a2 + 16);
  if (result)
  {
    v22 = (void *)result;
    v31 = v8;
    v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48);
    objc_msgSend(*(id *)(result + OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton), sel_setEnabled_, v23(a1, 1, v17) != 1);
    sub_1BC118700(a1, (uint64_t)v16, &qword_1EF3F8958, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C6F0]);
    if (v23((uint64_t)v16, 1, v17) == 1)
    {

      return sub_1BC0F2444((uint64_t)v16, &qword_1EF3F8958, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C6F0]);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v17);
      v24 = (uint64_t)v22 + OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_config;
      swift_beginAccess();
      sub_1BC118700(v24, (uint64_t)v13, (unint64_t *)&qword_1EDA0ECC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950]);
      v25 = sub_1BC2B3608();
      v26 = *(_QWORD *)(v25 - 8);
      v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48))(v13, 1, v25);
      sub_1BC0F2444((uint64_t)v13, (unint64_t *)&qword_1EDA0ECC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950]);
      if (v27 == 1)
      {
        MedicationShape.previewConfig.getter((uint64_t)v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v11, 0, 1, v25);
        swift_beginAccess();
        sub_1BC229A5C((uint64_t)v11, v24);
        swift_endAccess();
        v28 = sub_1BC226954();
        v29 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950];
        sub_1BC118700(v24, (uint64_t)v31, (unint64_t *)&qword_1EDA0ECC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950]);
        sub_1BC2B3308();

        sub_1BC0F2444((uint64_t)v11, (unint64_t *)&qword_1EDA0ECC0, v29);
      }
      v30 = sub_1BC226BD4();
      swift_retain();

      sub_1BC2B3EC0();
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    }
  }
  return result;
}

uint64_t sub_1BC228CCC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  _QWORD v13[3];
  id v14;

  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0FCC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)v13 - v1;
  sub_1BC166634();
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (char *)sub_1BC226BD4();
  v9 = *(_QWORD *)&v8[qword_1EF3FB4A8];
  swift_retain();

  v13[0] = v9;
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FFF0);
  v14 = (id)sub_1BC2B4A0C();
  v10 = sub_1BC2B49C4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v2, 1, 1, v10);
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950];
  sub_1BC2299C0(0, &qword_1EF3FB540, (unint64_t *)&qword_1EDA0ECC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950]);
  sub_1BC22AAEC((unint64_t *)&qword_1EF3FB550, &qword_1EF3FB540, (unint64_t *)&qword_1EDA0ECC0, v11);
  sub_1BC1019D8();
  sub_1BC2B4064();
  sub_1BC0F2444((uint64_t)v2, (unint64_t *)&qword_1EDA0FCC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868]);

  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC22AB34(&qword_1EF3FB558, (uint64_t (*)(uint64_t))sub_1BC166634);
  sub_1BC2B40A0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BC228F48(uint64_t a1, uint64_t a2)
{
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t result;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t (*v26)(uint64_t);
  _BYTE v27[24];

  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC0E7998(0, &qword_1EF3F8958, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C6F0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = &v27[-v6];
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0ECC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950], v4);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = &v27[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = &v27[-v13];
  MEMORY[0x1E0C80A78](v12);
  v16 = &v27[-v15];
  v17 = sub_1BC2B3608();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = &v27[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  result = MEMORY[0x1BCCEF478](a2 + 16);
  if (result)
  {
    v22 = (void *)result;
    sub_1BC118700(a1, (uint64_t)v16, (unint64_t *)&qword_1EDA0ECC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950]);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
    {

      return sub_1BC0F2444((uint64_t)v16, (unint64_t *)&qword_1EDA0ECC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950]);
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v18 + 32))(v20, v16, v17);
      swift_retain();
      sub_1BC2B3ED8();
      swift_release();
      v23 = sub_1BC2B3350();
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v7, 1, v23) == 1)
      {

        sub_1BC0F2444((uint64_t)v7, &qword_1EF3F8958, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C6F0]);
      }
      else
      {
        sub_1BC0F2444((uint64_t)v7, &qword_1EF3F8958, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C6F0]);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v18 + 16))(v14, v20, v17);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v14, 0, 1, v17);
        v24 = (uint64_t)v22 + OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_config;
        swift_beginAccess();
        sub_1BC229A5C((uint64_t)v14, v24);
        swift_endAccess();
        v25 = sub_1BC226954();
        v26 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950];
        sub_1BC118700(v24, (uint64_t)v11, (unint64_t *)&qword_1EDA0ECC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950]);
        sub_1BC2B3308();

        sub_1BC0F2444((uint64_t)v14, (unint64_t *)&qword_1EDA0ECC0, v26);
      }
      return (*(uint64_t (**)(_BYTE *, uint64_t))(v18 + 8))(v20, v17);
    }
  }
  return result;
}

void sub_1BC229404()
{
  sub_1BC22943C((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1);
}

void sub_1BC229420()
{
  sub_1BC22943C((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0);
}

void sub_1BC22943C(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t (*v16)(uint64_t);
  id v17;
  uint64_t (*v18)(uint64_t);
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  int v24;
  int v25;
  uint64_t v26;

  v24 = a4;
  v25 = a3;
  sub_1BC0E7998(0, &qword_1EDA0FE00, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC3228], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)&v24 - v10;
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v24 - v12;
  v26 = v4;
  sub_1BC2B4EE0();
  v14 = sub_1BC2B4EC8();
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48);
  if (v15(v13, 1, v14))
  {
    v16 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DC3228];
    sub_1BC118700((uint64_t)v13, (uint64_t)v8, &qword_1EDA0FE00, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC3228]);
    sub_1BC2B4EEC();
    sub_1BC0F2444((uint64_t)v13, &qword_1EDA0FE00, v16);
  }
  else
  {
    v17 = objc_msgSend((id)objc_opt_self(), sel_systemBlueColor);
    sub_1BC2B4E44();
    sub_1BC2B4EEC();
  }
  sub_1BC2B4EE0();
  if (v15(v11, 1, v14))
  {
    v18 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DC3228];
    sub_1BC118700((uint64_t)v11, (uint64_t)v8, &qword_1EDA0FE00, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC3228]);
    sub_1BC2B4EEC();
    sub_1BC0F2444((uint64_t)v11, &qword_1EDA0FE00, v18);
  }
  else
  {
    v19 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
    sub_1BC2B4E44();
    sub_1BC2B4EEC();
  }
  v20 = sub_1BC226A70();
  v21 = objc_msgSend(v20, sel_collectionView);

  if (v21)
  {
    objc_msgSend(v21, sel_setHidden_, v25 & 1);

    v22 = sub_1BC226BD4();
    v23 = objc_msgSend(v22, sel_collectionView);

    if (v23)
    {
      objc_msgSend(v23, sel_setHidden_, v24 & 1);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id MedmojiPickerViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void MedmojiPickerViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id MedmojiPickerViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedmojiPickerViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t dispatch thunk of MedmojiPickerDelegate.didPickMedmojiWithConfig(config:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of MedmojiPickerDelegate.didCancelMemojiPicking()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1BC2298D8()
{
  return type metadata accessor for MedmojiPickerViewController();
}

void sub_1BC2298E0()
{
  unint64_t v0;

  sub_1BC0E7998(319, (unint64_t *)&qword_1EDA0ECC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for MedmojiPickerViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedmojiPickerViewController.__allocating_init(config:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 344))();
}

void sub_1BC2299C0(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_1BC0E7998(255, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v5 = sub_1BC2B3EE4();
    if (!v6)
      atomic_store(v5, a2);
  }
}

uint64_t sub_1BC229A30()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC229A54(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC228F48(a1, v1);
}

uint64_t sub_1BC229A5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0ECC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

id sub_1BC229AB8(void *a1, void *a2)
{
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  void *v43;
  id v47;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v3 = (void *)objc_opt_self();
  v4 = objc_msgSend(v3, sel_secondarySystemBackgroundColor);
  objc_msgSend(v2, sel_setBackgroundColor_, v4);

  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F848]), sel_init);
  HKUIOnePixel();
  objc_msgSend(v5, sel_setSeparatorThickness_);
  v6 = objc_msgSend(v3, sel_separatorColor);
  objc_msgSend(v5, sel_setColor_, v6);

  objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F848]), sel_init);
  HKUIOnePixel();
  objc_msgSend(v7, sel_setSeparatorThickness_);
  v8 = objc_msgSend(v3, sel_separatorColor);
  objc_msgSend(v7, sel_setColor_, v8);

  objc_msgSend(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  sub_1BC0E7940();
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BC2B92B0;
  *(_QWORD *)(v9 + 32) = a1;
  *(_QWORD *)(v9 + 40) = a2;
  sub_1BC2B45A4();
  v10 = objc_allocWithZone(MEMORY[0x1E0DC3CA8]);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDD0);
  v11 = a1;
  v12 = a2;
  v13 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v10, sel_initWithArrangedSubviews_, v13);

  objc_msgSend(v14, sel_setAxis_, 0);
  objc_msgSend(v14, sel_setAlignment_, 3);
  objc_msgSend(v14, sel_setDistribution_, 0);
  objc_msgSend(v14, sel_setSpacing_, 24.0);
  objc_msgSend(v14, (SEL)&FieldCell.base_prots, 0);
  objc_msgSend(v2, sel_addSubview_, v5);
  objc_msgSend(v2, sel_addSubview_, v7);
  objc_msgSend(v2, sel_addSubview_, v14);
  v47 = (id)objc_opt_self();
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1BC2C2BF0;
  v16 = objc_msgSend(v5, sel_leadingAnchor);
  v17 = objc_msgSend(v2, sel_leadingAnchor);
  v18 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v17);

  *(_QWORD *)(v15 + 32) = v18;
  v19 = objc_msgSend(v5, sel_trailingAnchor);
  v20 = objc_msgSend(v2, sel_trailingAnchor);
  v21 = objc_msgSend(v19, sel_constraintEqualToAnchor_, v20);

  *(_QWORD *)(v15 + 40) = v21;
  v22 = objc_msgSend(v7, sel_leadingAnchor);
  v23 = objc_msgSend(v2, sel_leadingAnchor);
  v24 = objc_msgSend(v22, (SEL)&selRef_sharedBehavior + 6, v23);

  *(_QWORD *)(v15 + 48) = v24;
  v25 = objc_msgSend(v7, sel_trailingAnchor);
  v26 = objc_msgSend(v2, sel_trailingAnchor);
  v27 = objc_msgSend(v25, (SEL)&selRef_sharedBehavior + 6, v26);

  *(_QWORD *)(v15 + 56) = v27;
  v28 = objc_msgSend(v14, sel_centerXAnchor);
  v29 = objc_msgSend(v2, sel_centerXAnchor);
  v30 = objc_msgSend(v28, (SEL)&selRef_sharedBehavior + 6, v29);

  *(_QWORD *)(v15 + 64) = v30;
  v31 = objc_msgSend(v5, sel_topAnchor);
  v32 = objc_msgSend(v2, sel_topAnchor);
  v33 = objc_msgSend(v31, (SEL)&selRef_sharedBehavior + 6, v32);

  *(_QWORD *)(v15 + 72) = v33;
  v34 = objc_msgSend(v14, sel_topAnchor);
  v35 = objc_msgSend(v5, sel_bottomAnchor);
  v36 = objc_msgSend(v34, (SEL)&selRef_sharedBehavior + 6, v35);

  *(_QWORD *)(v15 + 80) = v36;
  v37 = objc_msgSend(v7, sel_topAnchor);
  v38 = objc_msgSend(v14, sel_bottomAnchor);
  v39 = objc_msgSend(v37, (SEL)&selRef_sharedBehavior + 6, v38);

  *(_QWORD *)(v15 + 88) = v39;
  v40 = objc_msgSend(v7, sel_bottomAnchor);
  v41 = objc_msgSend(v2, sel_bottomAnchor);
  v42 = objc_msgSend(v40, (SEL)&selRef_sharedBehavior + 6, v41);

  *(_QWORD *)(v15 + 96) = v42;
  sub_1BC2B45A4();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
  v43 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  objc_msgSend(v47, sel_activateConstraints_, v43);

  return v2;
}

void sub_1BC22A174()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t inited;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void *v31;
  void (*v32)(char *, uint64_t);
  void (*v33)(char *, uint64_t);
  char *v34;
  id v35;
  char *v36;
  id v37;
  uint64_t v38;
  void *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  void *v45;
  char *v46;
  uint64_t v47;
  _QWORD v48[2];
  char *v49;
  void (*v50)(char *, char *, uint64_t);
  uint64_t v51;
  void (*v52)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  id v55;
  void (*v56)(char *, char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;

  sub_1BC0E7998(0, (unint64_t *)&unk_1EDA0F7B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF240], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v67 = (char *)v48 - v2;
  v71 = sub_1BC2B215C();
  v60 = *(_QWORD *)(v71 - 8);
  v3 = MEMORY[0x1E0C80A78](v71);
  v70 = (char *)v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v48 - v6;
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v48 - v8;
  v68 = sub_1BC2B4EC8();
  v66 = *(_QWORD *)(v68 - 8);
  v10 = MEMORY[0x1E0C80A78](v68);
  v69 = (char *)v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v59 = (char *)v48 - v13;
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v48 - v14;
  v65 = v0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController____lazy_storage___medicationView] = 0;
  v64 = OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton;
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v16 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  v18 = v17;
  swift_bridgeObjectRelease();

  sub_1BC2B4E8C();
  v63 = (id)objc_opt_self();
  v19 = objc_msgSend(v63, sel_labelColor);
  sub_1BC2B4E44();
  sub_1BC2B4DF0();
  sub_1BC0E7998(0, (unint64_t *)&unk_1EDA0FE80, (uint64_t (*)(uint64_t))sub_1BC1306C0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v62 = v20;
  inited = swift_initStackObject();
  v61 = xmmword_1BC2B92D0;
  *(_OWORD *)(inited + 16) = xmmword_1BC2B92D0;
  v22 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  v23 = sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
  v58 = *MEMORY[0x1E0DC4A88];
  v57 = *MEMORY[0x1E0DC1448];
  v55 = v22;
  v54 = v23;
  v24 = sub_1BC2B4C64();
  *(_QWORD *)(inited + 64) = v23;
  *(_QWORD *)(inited + 40) = v24;
  sub_1BC1069C0(inited);
  sub_1BC2B2168();
  v25 = v60;
  v56 = *(void (**)(char *, char *, uint64_t))(v60 + 16);
  v49 = v7;
  v26 = v71;
  v56(v7, v9, v71);
  v48[1] = v18;
  swift_bridgeObjectRetain();
  v27 = v67;
  sub_1BC2B2138();
  v53 = sub_1BC2B212C();
  v52 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56);
  v52(v27, 0, 1, v53);
  sub_1BC2B4E20();
  v51 = sub_1BC0E1D38(0, &qword_1EDA0FE08);
  v28 = v66;
  v50 = *(void (**)(char *, char *, uint64_t))(v66 + 16);
  v29 = v59;
  v30 = v68;
  v50(v59, v15, v68);
  v31 = (void *)sub_1BC2B4ED4();
  objc_msgSend(v31, sel_setContentHorizontalAlignment_, 4);
  objc_msgSend(v31, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v60 = *(_QWORD *)(v25 + 8);
  ((void (*)(char *, uint64_t))v60)(v9, v26);
  v32 = *(void (**)(char *, uint64_t))(v28 + 8);
  v32(v15, v30);
  v33 = v32;
  swift_bridgeObjectRelease();
  v34 = v65;
  *(_QWORD *)&v65[v64] = v31;
  v66 = OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton;
  v35 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  v64 = sub_1BC2B2144();
  swift_bridgeObjectRelease();

  v36 = v69;
  sub_1BC2B4E8C();
  v37 = objc_msgSend(v63, sel_labelColor);
  sub_1BC2B4E44();
  sub_1BC2B4DF0();
  v38 = swift_initStackObject();
  *(_OWORD *)(v38 + 16) = v61;
  v39 = v55;
  *(_QWORD *)(v38 + 32) = v55;
  v40 = v39;
  v41 = v54;
  v42 = sub_1BC2B4C64();
  *(_QWORD *)(v38 + 64) = v41;
  *(_QWORD *)(v38 + 40) = v42;
  sub_1BC1069C0(v38);
  v43 = v70;
  sub_1BC2B2168();
  v44 = v71;
  v56(v49, v43, v71);
  swift_bridgeObjectRetain();
  sub_1BC2B2138();
  v52(v27, 0, 1, v53);
  sub_1BC2B4E20();
  v50(v29, v36, v30);
  v45 = (void *)sub_1BC2B4ED4();
  objc_msgSend(v45, sel_setContentHorizontalAlignment_, 4);
  objc_msgSend(v45, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  ((void (*)(char *, uint64_t))v60)(v43, v44);
  v33(v36, v30);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v34[v66] = v45;
  *(_QWORD *)&v34[OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController____lazy_storage___medmojiCategorySelectionView] = 0;
  *(_QWORD *)&v34[OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController____lazy_storage___shapeSelectionViewController] = 0;
  *(_QWORD *)&v34[OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController____lazy_storage___colorSelectionViewController] = 0;
  *(_QWORD *)&v34[OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v34[OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_cancellables] = MEMORY[0x1E0DEE9E8];
  v46 = &v34[OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_config];
  v47 = sub_1BC2B3608();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v46, 1, 1, v47);

  sub_1BC2B52B8();
  __break(1u);
}

id sub_1BC22A974()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  char *v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v14;

  v1 = v0;
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0ECC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v14 - v3;
  v5 = sub_1BC2B3608();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC226954();
  sub_1BC2B32FC();

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1BC0F2444((uint64_t)v4, (unint64_t *)&qword_1EDA0ECC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950]);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    v10 = &v1[OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_delegate];
    if (MEMORY[0x1BCCEF478](&v1[OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_delegate]))
    {
      v11 = *((_QWORD *)v10 + 1);
      ObjectType = swift_getObjectType();
      (*(void (**)(char *, uint64_t, uint64_t))(v11 + 8))(v8, ObjectType, v11);
      swift_unknownObjectRelease();
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return objc_msgSend(v1, sel_dismissViewControllerAnimated_completion_, 1, 0);
}

uint64_t sub_1BC22AAEC(unint64_t *a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    sub_1BC2299C0(255, a2, a3, a4);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C95FB8], v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BC22AB2C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC228944(a1, v1);
}

uint64_t sub_1BC22AB34(unint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = a2(255);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C95CB8], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t SelectionEntryItem.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1BC2B2438();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

BOOL static SelectionEntryItem.SwitchStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t SelectionEntryItem.SwitchStyle.hash(into:)()
{
  return sub_1BC2B545C();
}

uint64_t SelectionEntryItem.SwitchStyle.hashValue.getter()
{
  sub_1BC2B5450();
  sub_1BC2B545C();
  return sub_1BC2B548C();
}

uint64_t SelectionEntryItem.listContentProvider.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for SelectionEntryItem() + 20);
  return sub_1BC0E79F0(v3, a1);
}

uint64_t type metadata accessor for SelectionEntryItem()
{
  uint64_t result;

  result = qword_1EF3FFFA8;
  if (!qword_1EF3FFFA8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t SelectionEntryItem.isEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for SelectionEntryItem() + 24));
}

uint64_t SelectionEntryItem.isEnabled.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SelectionEntryItem();
  *(_BYTE *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*SelectionEntryItem.isEnabled.modify())()
{
  type metadata accessor for SelectionEntryItem();
  return nullsub_1;
}

void *SelectionEntryItem.leadingImage.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + *(int *)(type metadata accessor for SelectionEntryItem() + 28));
  v2 = v1;
  return v1;
}

uint64_t SelectionEntryItem.switchStyle.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SelectionEntryItem();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t SelectionEntryItem.selectionHandler.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for SelectionEntryItem() + 36));
  swift_retain();
  return v1;
}

uint64_t SelectionEntryItem.init(listContentProvider:leadingImage:switchStyle:isEnabled:selectionHandler:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  char v13;
  int *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  _QWORD *v19;

  v13 = *a3;
  sub_1BC2B242C();
  v14 = (int *)type metadata accessor for SelectionEntryItem();
  v15 = (uint64_t *)(a7 + v14[10]);
  type metadata accessor for SelectionOptionsCell();
  sub_1BC0E008C(&qword_1EF3FD520, v16, (uint64_t (*)(uint64_t))type metadata accessor for SelectionOptionsCell, (uint64_t)&protocol conformance descriptor for SelectionOptionsCell);
  *v15 = sub_1BC2B2930();
  v15[1] = v17;
  result = sub_1BC0F2730(a1, a7 + v14[5]);
  *(_QWORD *)(a7 + v14[7]) = a2;
  *(_BYTE *)(a7 + v14[6]) = a4;
  *(_BYTE *)(a7 + v14[8]) = v13;
  v19 = (_QWORD *)(a7 + v14[9]);
  *v19 = a5;
  v19[1] = a6;
  return result;
}

uint64_t type metadata accessor for SelectionOptionsCell()
{
  return objc_opt_self();
}

uint64_t SelectionEntryItem.reuseIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for SelectionEntryItem() + 40));
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t SelectionEntryItem.uniqueIdentifier.getter()
{
  sub_1BC2B51BC();
  swift_bridgeObjectRelease();
  sub_1BC2B23FC();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  return 0xD000000000000013;
}

uint64_t SelectionEntryItem.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;

  v1 = type metadata accessor for SelectionEntryItem();
  __swift_project_boxed_opaque_existential_0((_QWORD *)(v0 + *(int *)(v1 + 20)), *(_QWORD *)(v0 + *(int *)(v1 + 20) + 24));
  sub_1BC2B43F4();
  return sub_1BC2B5468();
}

uint64_t SelectionEntryItem.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  sub_1BC2B5450();
  v1 = type metadata accessor for SelectionEntryItem();
  __swift_project_boxed_opaque_existential_0((_QWORD *)(v0 + *(int *)(v1 + 20)), *(_QWORD *)(v0 + *(int *)(v1 + 20) + 24));
  sub_1BC2B43F4();
  sub_1BC2B5468();
  return sub_1BC2B548C();
}

uint64_t sub_1BC22B05C(uint64_t a1)
{
  uint64_t v1;

  sub_1BC2B5450();
  __swift_project_boxed_opaque_existential_0((_QWORD *)(v1 + *(int *)(a1 + 20)), *(_QWORD *)(v1 + *(int *)(a1 + 20) + 24));
  sub_1BC2B43F4();
  sub_1BC2B5468();
  return sub_1BC2B548C();
}

uint64_t sub_1BC22B0E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  __swift_project_boxed_opaque_existential_0((_QWORD *)(v2 + *(int *)(a2 + 20)), *(_QWORD *)(v2 + *(int *)(a2 + 20) + 24));
  sub_1BC2B43F4();
  return sub_1BC2B5468();
}

uint64_t sub_1BC22B14C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BC2B5450();
  __swift_project_boxed_opaque_existential_0((_QWORD *)(v2 + *(int *)(a2 + 20)), *(_QWORD *)(v2 + *(int *)(a2 + 20) + 24));
  sub_1BC2B43F4();
  sub_1BC2B5468();
  return sub_1BC2B548C();
}

uint64_t sub_1BC22B1D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 40));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1BC22B208(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _BYTE v5[40];

  sub_1BC118700(a1, (uint64_t)v5, (unint64_t *)&qword_1EDA0F7D0, (uint64_t (*)(uint64_t))sub_1BC0E1B94);
  v3 = *a2 + OBJC_IVAR____TtC19HealthMedicationsUI20SelectionOptionsCell_item;
  swift_beginAccess();
  sub_1BC0F3E44((uint64_t)v5, v3);
  swift_endAccess();
  sub_1BC22B650();
  return sub_1BC0F2444((uint64_t)v5, (unint64_t *)&qword_1EDA0F7D0, (uint64_t (*)(uint64_t))sub_1BC0E1B94);
}

uint64_t sub_1BC22B2A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI20SelectionOptionsCell_item;
  swift_beginAccess();
  return sub_1BC118700(v3, a1, (unint64_t *)&qword_1EDA0F7D0, (uint64_t (*)(uint64_t))sub_1BC0E1B94);
}

uint64_t sub_1BC22B300(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI20SelectionOptionsCell_item;
  swift_beginAccess();
  sub_1BC0F3E44(a1, v3);
  swift_endAccess();
  sub_1BC22B650();
  return sub_1BC0F2444(a1, (unint64_t *)&qword_1EDA0F7D0, (uint64_t (*)(uint64_t))sub_1BC0E1B94);
}

uint64_t (*sub_1BC22B37C(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC22B3C4;
}

uint64_t sub_1BC22B3C4(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_1BC22B650();
  return result;
}

id sub_1BC22B3F4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI20SelectionOptionsCell____lazy_storage___cellSwitch;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI20SelectionOptionsCell____lazy_storage___cellSwitch);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI20SelectionOptionsCell____lazy_storage___cellSwitch);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3D18]), sel_init);
    objc_msgSend(v4, sel_addTarget_action_forControlEvents_, v0, sel_switchValueChanged_, 4096);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void sub_1BC22B484()
{
  sub_1BC22B4C4(&OBJC_IVAR____TtC19HealthMedicationsUI20SelectionOptionsCell____lazy_storage___selectedImage);
}

void sub_1BC22B4A8()
{
  sub_1BC22B4C4(&OBJC_IVAR____TtC19HealthMedicationsUI20SelectionOptionsCell____lazy_storage___notSelectedImage);
}

void sub_1BC22B4C4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;

  v2 = *a1;
  v3 = *(void **)(v1 + *a1);
  if (v3)
    goto LABEL_4;
  v4 = objc_msgSend((id)objc_opt_self(), sel_configurationWithTextStyle_, *MEMORY[0x1E0DC4B50]);
  v5 = (void *)sub_1BC2B4430();
  v6 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_withConfiguration_, v5, v4);

  if (v6)
  {
    v7 = *(void **)(v1 + v2);
    *(_QWORD *)(v1 + v2) = v6;
    v6;

    v3 = 0;
LABEL_4:
    v8 = v3;
    return;
  }
  __break(1u);
}

id sub_1BC22B5A8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI20SelectionOptionsCell____lazy_storage___accessoryImageView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI20SelectionOptionsCell____lazy_storage___accessoryImageView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI20SelectionOptionsCell____lazy_storage___accessoryImageView);
  }
  else
  {
    sub_1BC22B4A8();
    v5 = v4;
    v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3890]), sel_initWithImage_, v4);

    v7 = *MEMORY[0x1E0DC4660];
    v3 = v6;
    objc_msgSend(v3, sel_setAccessibilityTraits_, v7);
    v8 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v3;

    v2 = 0;
  }
  v9 = v2;
  return v3;
}

uint64_t sub_1BC22B650()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t);
  char *v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  id v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint8_t *v45;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint8_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54[3];
  uint8_t *v55;
  uint64_t v56;

  v1 = v0;
  v2 = sub_1BC2B39E0();
  v51 = *(_QWORD *)(v2 - 8);
  v52 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BC2B3CD4();
  v49 = *(_QWORD *)(v5 - 8);
  v50 = (uint8_t *)v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC0E7998(0, &qword_1EDA0FAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v48 - v13;
  sub_1BC0E7998(0, &qword_1EF400020, (uint64_t (*)(uint64_t))type metadata accessor for SelectionEntryItem, v8);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v48 - v16;
  v18 = (int *)type metadata accessor for SelectionEntryItem();
  v19 = *((_QWORD *)v18 - 1);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = (uint64_t)&v1[OBJC_IVAR____TtC19HealthMedicationsUI20SelectionOptionsCell_item];
  swift_beginAccess();
  sub_1BC118700(v22, (uint64_t)v54, (unint64_t *)&qword_1EDA0F7D0, (uint64_t (*)(uint64_t))sub_1BC0E1B94);
  if (v55)
  {
    sub_1BC0E1B94();
    v23 = swift_dynamicCast();
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v19 + 56))(v17, v23 ^ 1u, 1, v18);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v19 + 48))(v17, 1, v18) != 1)
    {
      sub_1BC22D5E4((uint64_t)v17, (uint64_t)v21);
      sub_1BC2B3B24();
      v24 = sub_1BC2B3B48();
      v25 = *(_QWORD *)(v24 - 8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v14, 0, 1, v24);
      v26 = MEMORY[0x1BCCEE23C](v14);
      MEMORY[0x1BCCEE230](v26);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v12, 1, v24))
      {
        v27 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130];
        sub_1BC118700((uint64_t)v12, (uint64_t)v14, &qword_1EDA0FAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130]);
        MEMORY[0x1BCCEE23C](v14);
        sub_1BC0F2444((uint64_t)v12, &qword_1EDA0FAF0, v27);
      }
      else
      {
        v36 = *(id *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI20SelectionOptionsCell_defaultBackgroundColor];
        sub_1BC2B3B18();
        MEMORY[0x1BCCEE23C](v12);
      }
      v37 = &v21[v18[5]];
      v38 = *((_QWORD *)v37 + 3);
      v39 = *((_QWORD *)v37 + 4);
      __swift_project_boxed_opaque_existential_0(v37, v38);
      (*(void (**)(uint64_t, uint64_t))(v39 + 16))(v38, v39);
      v40 = *(id *)&v21[v18[7]];
      sub_1BC2B3CA4();
      sub_1BC0E7998(0, (unint64_t *)&unk_1EDA0FE70, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1D38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v41 = *(unsigned __int8 *)(*(_QWORD *)(sub_1BC2B3AD0() - 8) + 80);
      v42 = (v41 + 32) & ~v41;
      v43 = swift_allocObject();
      *(_OWORD *)(v43 + 16) = xmmword_1BC2B92D0;
      v44 = v43 + v42;
      LOBYTE(v54[0]) = v21[v18[8]];
      LOBYTE(v42) = v54[0];
      sub_1BC22BE38(v54, v44);
      sub_1BC2B4AFC();
      v45 = v50;
      v55 = v50;
      v56 = MEMORY[0x1E0DC2398];
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v54);
      v47 = v49;
      (*(void (**)(uint64_t *, char *, uint8_t *))(v49 + 16))(boxed_opaque_existential_1, v7, v45);
      MEMORY[0x1BCCEE224](v54);
      LOBYTE(v54[0]) = v42;
      sub_1BC22C014((unsigned __int8 *)v54);
      (*(void (**)(char *, uint8_t *))(v47 + 8))(v7, v45);
      return sub_1BC22D66C((uint64_t)v21);
    }
  }
  else
  {
    sub_1BC0F2444((uint64_t)v54, (unint64_t *)&qword_1EDA0F7D0, (uint64_t (*)(uint64_t))sub_1BC0E1B94);
    (*(void (**)(char *, uint64_t, uint64_t, int *))(v19 + 56))(v17, 1, 1, v18);
  }
  sub_1BC0F2444((uint64_t)v17, &qword_1EF400020, (uint64_t (*)(uint64_t))type metadata accessor for SelectionEntryItem);
  sub_1BC2B39A4();
  v28 = v1;
  v29 = sub_1BC2B39D4();
  v30 = sub_1BC2B48C8();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = (uint8_t *)swift_slowAlloc();
    v32 = swift_slowAlloc();
    v53 = v32;
    *(_DWORD *)v31 = 136446210;
    v50 = v31 + 4;
    sub_1BC118700(v22, (uint64_t)v54, (unint64_t *)&qword_1EDA0F7D0, (uint64_t (*)(uint64_t))sub_1BC0E1B94);
    sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0F7D0, (uint64_t (*)(uint64_t))sub_1BC0E1B94, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v33 = sub_1BC2B4490();
    v54[0] = sub_1BC12540C(v33, v34, &v53);
    sub_1BC2B4FD0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC0DC000, v29, v30, "Incorrect view model for SelectionOptionsCell: %{public}s", v31, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v32, -1, -1);
    MEMORY[0x1BCCEF3A0](v31, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v4, v52);
}

uint64_t sub_1BC22BC38()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  void *v8;
  objc_class *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  id v13;
  objc_super v14;

  v1 = v0;
  sub_1BC0E7998(0, &qword_1EDA0FAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v14 - v6;
  v8 = (void *)sub_1BC2B3AE8();
  v9 = (objc_class *)type metadata accessor for SelectionOptionsCell();
  v14.receiver = v1;
  v14.super_class = v9;
  objc_msgSendSuper2(&v14, sel__bridgedUpdateConfigurationUsingState_, v8);

  MEMORY[0x1BCCEE230]();
  v10 = sub_1BC2B3B48();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v7, 1, v10))
  {
    v11 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130];
    sub_1BC118700((uint64_t)v7, (uint64_t)v5, &qword_1EDA0FAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130]);
    MEMORY[0x1BCCEE23C](v5);
    return sub_1BC0F2444((uint64_t)v7, &qword_1EDA0FAF0, v11);
  }
  else
  {
    v13 = *(id *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI20SelectionOptionsCell_defaultBackgroundColor];
    sub_1BC2B3B18();
    return MEMORY[0x1BCCEE23C](v7);
  }
}

uint64_t sub_1BC22BE38@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (**v18)();
  uint64_t v19;
  _QWORD v21[2];

  v21[1] = a2;
  sub_1BC0E7998(0, &qword_1EDA0FAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1C58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v21 - v4;
  v6 = sub_1BC2B3AB8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BC2B3A7C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*a1 & 1) != 0)
    sub_1BC22B5A8();
  else
    sub_1BC22B3F4();
  sub_1BC16A32C();
  v15 = *(_DWORD *)(v14 + 48);
  v16 = *MEMORY[0x1E0DC1C20];
  v17 = sub_1BC2B3A34();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v9, v16, v17);
  v18 = (uint64_t (**)())&v9[v15];
  *v18 = sub_1BC10E2F8;
  v18[1] = 0;
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DC1D18], v6);
  v19 = sub_1BC2B3A40();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v5, 1, 1, v19);
  sub_1BC2B3A70();
  sub_1BC2B39F8();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

void sub_1BC22C014(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  void *v14;
  char **v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  _BYTE v21[24];
  uint64_t v22;

  sub_1BC0E7998(0, &qword_1EF400020, (uint64_t (*)(uint64_t))type metadata accessor for SelectionEntryItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = v21 - v4 + 22;
  v6 = *a1;
  v7 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI20SelectionOptionsCell_item;
  swift_beginAccess();
  sub_1BC118700(v7, (uint64_t)v21, (unint64_t *)&qword_1EDA0F7D0, (uint64_t (*)(uint64_t))sub_1BC0E1B94);
  if (!v22)
  {
    sub_1BC0F2444((uint64_t)v21, (unint64_t *)&qword_1EDA0F7D0, (uint64_t (*)(uint64_t))sub_1BC0E1B94);
    v16 = type metadata accessor for SelectionEntryItem();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v5, 1, 1, v16);
    goto LABEL_7;
  }
  sub_1BC0E1B94();
  v8 = type metadata accessor for SelectionEntryItem();
  v9 = swift_dynamicCast();
  v10 = *(_QWORD *)(v8 - 8);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v5, v9 ^ 1u, 1, v8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v5, 1, v8) == 1)
  {
LABEL_7:
    sub_1BC0F2444((uint64_t)v5, &qword_1EF400020, (uint64_t (*)(uint64_t))type metadata accessor for SelectionEntryItem);
    if (v6)
    {
      v12 = sub_1BC22B5A8();
      goto LABEL_9;
    }
    v11 = 0;
LABEL_12:
    v19 = sub_1BC22B3F4();
    objc_msgSend(v19, sel_setOn_, v11);
    goto LABEL_13;
  }
  v11 = v5[*(int *)(v8 + 24)];
  sub_1BC22D66C((uint64_t)v5);
  if ((v6 & 1) == 0)
    goto LABEL_12;
  v12 = sub_1BC22B5A8();
  if (!(_DWORD)v11)
  {
LABEL_9:
    sub_1BC22B4A8();
    v14 = v17;
    v15 = &selRef_secondarySystemFillColor;
    goto LABEL_10;
  }
  sub_1BC22B484();
  v14 = v13;
  v15 = &selRef_tintColor;
LABEL_10:
  objc_msgSend(v12, sel_setImage_, v14);

  v18 = sub_1BC22B5A8();
  v19 = objc_msgSend((id)objc_opt_self(), *v15);
  objc_msgSend(v18, sel_setTintColor_, v19);

LABEL_13:
}

uint64_t sub_1BC22C264()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  int v14;
  void (*v15)(char *, _BOOL8);
  uint64_t v16;
  char *v17;
  char v18;
  _BOOL8 v19;
  uint64_t *boxed_opaque_existential_1;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32[3];
  uint64_t v33[3];
  int *v34;
  uint64_t v35;

  v1 = v0;
  v2 = sub_1BC2B39E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, &qword_1EF400020, (uint64_t (*)(uint64_t))type metadata accessor for SelectionEntryItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v29 - v7;
  v9 = (int *)type metadata accessor for SelectionEntryItem();
  v10 = *((_QWORD *)v9 - 1);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI20SelectionOptionsCell_item;
  swift_beginAccess();
  sub_1BC118700(v13, (uint64_t)v33, (unint64_t *)&qword_1EDA0F7D0, (uint64_t (*)(uint64_t))sub_1BC0E1B94);
  if (v34)
  {
    sub_1BC0E1B94();
    v14 = swift_dynamicCast();
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v10 + 56))(v8, v14 ^ 1u, 1, v9);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v10 + 48))(v8, 1, v9) != 1)
    {
      sub_1BC22D5E4((uint64_t)v8, (uint64_t)v12);
      v15 = *(void (**)(char *, _BOOL8))&v12[v9[9]];
      v16 = v9[6];
      v17 = &v12[v9[5]];
      v18 = v12[v16];
      swift_retain();
      v19 = (v18 & 1) == 0;
      v15(v17, v19);
      swift_release();
      v12[v16] = v19;
      v34 = v9;
      v35 = sub_1BC0E008C(&qword_1EF400028, 255, (uint64_t (*)(uint64_t))type metadata accessor for SelectionEntryItem, (uint64_t)&protocol conformance descriptor for SelectionEntryItem);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v33);
      sub_1BC22D628((uint64_t)v12, (uint64_t)boxed_opaque_existential_1);
      swift_beginAccess();
      sub_1BC0F3E44((uint64_t)v33, v13);
      swift_endAccess();
      sub_1BC22B650();
      sub_1BC0F2444((uint64_t)v33, (unint64_t *)&qword_1EDA0F7D0, (uint64_t (*)(uint64_t))sub_1BC0E1B94);
      return sub_1BC22D66C((uint64_t)v12);
    }
  }
  else
  {
    sub_1BC0F2444((uint64_t)v33, (unint64_t *)&qword_1EDA0F7D0, (uint64_t (*)(uint64_t))sub_1BC0E1B94);
    (*(void (**)(char *, uint64_t, uint64_t, int *))(v10 + 56))(v8, 1, 1, v9);
  }
  sub_1BC0F2444((uint64_t)v8, &qword_1EF400020, (uint64_t (*)(uint64_t))type metadata accessor for SelectionEntryItem);
  sub_1BC2B39A4();
  v22 = v1;
  v23 = sub_1BC2B39D4();
  v24 = sub_1BC2B48C8();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = (uint8_t *)swift_slowAlloc();
    v26 = swift_slowAlloc();
    v31 = v2;
    v32[0] = v26;
    *(_DWORD *)v25 = 136446210;
    v29 = v25 + 4;
    v30 = v3;
    sub_1BC118700(v13, (uint64_t)v33, (unint64_t *)&qword_1EDA0F7D0, (uint64_t (*)(uint64_t))sub_1BC0E1B94);
    sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0F7D0, (uint64_t (*)(uint64_t))sub_1BC0E1B94, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v27 = sub_1BC2B4490();
    v33[0] = sub_1BC12540C(v27, v28, v32);
    sub_1BC2B4FD0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC0DC000, v23, v24, "Incorrect view model for SelectionOptionsCell: %{public}s", v25, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v26, -1, -1);
    MEMORY[0x1BCCEF3A0](v25, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v5, v31);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

id SelectionOptionsCell.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

id SelectionOptionsCell.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  uint64_t v10;
  void *v11;
  char *v12;
  objc_super v14;

  v9 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI20SelectionOptionsCell_item];
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_QWORD *)v9 + 4) = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI20SelectionOptionsCell____lazy_storage___cellSwitch] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI20SelectionOptionsCell____lazy_storage___selectedImage] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI20SelectionOptionsCell____lazy_storage___notSelectedImage] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI20SelectionOptionsCell____lazy_storage___accessoryImageView] = 0;
  v10 = OBJC_IVAR____TtC19HealthMedicationsUI20SelectionOptionsCell_defaultBackgroundColor;
  v11 = (void *)objc_opt_self();
  v12 = v4;
  *(_QWORD *)&v4[v10] = objc_msgSend(v11, sel_tertiarySystemBackgroundColor);

  v14.receiver = v12;
  v14.super_class = (Class)type metadata accessor for SelectionOptionsCell();
  return objc_msgSendSuper2(&v14, sel_initWithFrame_, a1, a2, a3, a4);
}

id SelectionOptionsCell.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id SelectionOptionsCell.init(coder:)(void *a1)
{
  char *v1;
  char *v3;
  uint64_t v4;
  void *v5;
  char *v6;
  id v7;
  objc_super v9;

  v3 = &v1[OBJC_IVAR____TtC19HealthMedicationsUI20SelectionOptionsCell_item];
  *(_OWORD *)v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((_QWORD *)v3 + 4) = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI20SelectionOptionsCell____lazy_storage___cellSwitch] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI20SelectionOptionsCell____lazy_storage___selectedImage] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI20SelectionOptionsCell____lazy_storage___notSelectedImage] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI20SelectionOptionsCell____lazy_storage___accessoryImageView] = 0;
  v4 = OBJC_IVAR____TtC19HealthMedicationsUI20SelectionOptionsCell_defaultBackgroundColor;
  v5 = (void *)objc_opt_self();
  v6 = v1;
  *(_QWORD *)&v1[v4] = objc_msgSend(v5, sel_tertiarySystemBackgroundColor);

  v9.receiver = v6;
  v9.super_class = (Class)type metadata accessor for SelectionOptionsCell();
  v7 = objc_msgSendSuper2(&v9, sel_initWithCoder_, a1);

  return v7;
}

id SelectionOptionsCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SelectionOptionsCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t SelectionOptionsCell.deselectionBehavior.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = 1;
  v2 = *MEMORY[0x1E0D2B168];
  v3 = sub_1BC2B2C6C();
  return (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_1BC22CAA4()
{
  return _s19HealthMedicationsUI20SelectionOptionsCellC09didSelectF0_2inySo6UIViewC_So0J10ControllerCtF_0();
}

uint64_t _s19HealthMedicationsUI18SelectionEntryItemV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  uint64_t v17;

  v4 = type metadata accessor for SelectionEntryItem();
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v17 - v9;
  __swift_project_boxed_opaque_existential_0((_QWORD *)(a1 + *(int *)(v8 + 20)), *(_QWORD *)(a1 + *(int *)(v8 + 20) + 24));
  v11 = sub_1BC2B4400();
  __swift_project_boxed_opaque_existential_0((_QWORD *)(a2 + *(int *)(v4 + 20)), *(_QWORD *)(a2 + *(int *)(v4 + 20) + 24));
  v12 = sub_1BC2B4400();
  sub_1BC22D628(a1, (uint64_t)v10);
  sub_1BC22D628(a2, (uint64_t)v7);
  if (v11 == v12)
  {
    v13 = v10[*(int *)(v4 + 24)];
    sub_1BC22D66C((uint64_t)v10);
    v14 = v7[*(int *)(v4 + 24)];
    sub_1BC22D66C((uint64_t)v7);
    v15 = v13 ^ v14 ^ 1;
  }
  else
  {
    sub_1BC22D66C((uint64_t)v7);
    sub_1BC22D66C((uint64_t)v10);
    v15 = 0;
  }
  return v15 & 1;
}

uint64_t _s19HealthMedicationsUI20SelectionOptionsCellC09didSelectF0_2inySo6UIViewC_So0J10ControllerCtF_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t result;
  uint64_t v10;
  _BYTE v12[24];
  uint64_t v13;

  sub_1BC0E7998(0, &qword_1EF400020, (uint64_t (*)(uint64_t))type metadata accessor for SelectionEntryItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v3 = v12 - v2 + 22;
  v4 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI20SelectionOptionsCell_item;
  swift_beginAccess();
  sub_1BC118700(v4, (uint64_t)v12, (unint64_t *)&qword_1EDA0F7D0, (uint64_t (*)(uint64_t))sub_1BC0E1B94);
  if (!v13)
  {
    sub_1BC0F2444((uint64_t)v12, (unint64_t *)&qword_1EDA0F7D0, (uint64_t (*)(uint64_t))sub_1BC0E1B94);
    v10 = type metadata accessor for SelectionEntryItem();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v3, 1, 1, v10);
    return sub_1BC0F2444((uint64_t)v3, &qword_1EF400020, (uint64_t (*)(uint64_t))type metadata accessor for SelectionEntryItem);
  }
  sub_1BC0E1B94();
  v5 = type metadata accessor for SelectionEntryItem();
  v6 = swift_dynamicCast();
  v7 = *(_QWORD *)(v5 - 8);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v3, v6 ^ 1u, 1, v5);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48))(v3, 1, v5) == 1)
    return sub_1BC0F2444((uint64_t)v3, &qword_1EF400020, (uint64_t (*)(uint64_t))type metadata accessor for SelectionEntryItem);
  v8 = v3[*(int *)(v5 + 32)];
  result = sub_1BC22D66C((uint64_t)v3);
  if (v8 == 1)
    return sub_1BC22C264();
  return result;
}

unint64_t sub_1BC22CDA4()
{
  unint64_t result;

  result = qword_1EF3FFF40;
  if (!qword_1EF3FFF40)
  {
    result = MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for SelectionEntryItem.SwitchStyle, &type metadata for SelectionEntryItem.SwitchStyle);
    atomic_store(result, (unint64_t *)&qword_1EF3FFF40);
  }
  return result;
}

uint64_t sub_1BC22CDE8()
{
  return sub_1BC0E008C(&qword_1EF3FFF48, 255, (uint64_t (*)(uint64_t))type metadata accessor for SelectionEntryItem, (uint64_t)&protocol conformance descriptor for SelectionEntryItem);
}

uint64_t sub_1BC22CE18@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI20SelectionOptionsCell_item;
  swift_beginAccess();
  return sub_1BC118700(v3, a2, (unint64_t *)&qword_1EDA0F7D0, (uint64_t (*)(uint64_t))sub_1BC0E1B94);
}

_QWORD *initializeBufferWithCopyOfBuffer for SelectionEntryItem(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1BC2B2438();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = *(_OWORD *)((char *)a2 + v8 + 24);
    *(_OWORD *)((char *)a1 + v8 + 24) = v9;
    (**(void (***)(void))(v9 - 8))();
    v10 = a3[7];
    *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    v11 = *(void **)((char *)a2 + v10);
    *(_QWORD *)((char *)a1 + v10) = v11;
    v12 = a3[9];
    *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    v13 = (_QWORD *)((char *)a1 + v12);
    v14 = (_QWORD *)((char *)a2 + v12);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = a3[10];
    v17 = (_QWORD *)((char *)a1 + v16);
    v18 = (_QWORD *)((char *)a2 + v16);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = v11;
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SelectionEntryItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  __swift_destroy_boxed_opaque_existential_0(a1 + *(int *)(a2 + 20));

  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SelectionEntryItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  id v19;

  v6 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(_OWORD *)(a2 + v7 + 24);
  *(_OWORD *)(a1 + v7 + 24) = v8;
  (**(void (***)(void))(v8 - 8))();
  v9 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v10 = *(void **)(a2 + v9);
  *(_QWORD *)(a1 + v9) = v10;
  v11 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[10];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  v19 = v10;
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SelectionEntryItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;

  v6 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[5]), (uint64_t *)(a2 + a3[5]));
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v7 = a3[7];
  v8 = *(void **)(a1 + v7);
  v9 = *(void **)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v9;
  v10 = v9;

  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v11 = a3[9];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  swift_retain();
  swift_release();
  v15 = a3[10];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for SelectionEntryItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  *(_QWORD *)(v9 + 32) = *(_QWORD *)(v10 + 32);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v12 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v12) = *(_BYTE *)(a2 + v12);
  v13 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  return a1;
}

uint64_t assignWithTake for SelectionEntryItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  __swift_destroy_boxed_opaque_existential_0(a1 + v7);
  v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  v11 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v12 = *(void **)(a1 + v11);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);

  v13 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  swift_release();
  v14 = a3[10];
  v15 = (_QWORD *)(a1 + v14);
  v16 = (uint64_t *)(a2 + v14);
  v18 = *v16;
  v17 = v16[1];
  *v15 = v18;
  v15[1] = v17;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SelectionEntryItem()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC22D310(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1BC2B2438();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 24);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for SelectionEntryItem()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC22D39C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1BC2B2438();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  return result;
}

uint64_t sub_1BC22D418()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC2B2438();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SelectionEntryItem.SwitchStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BC22D504 + 4 * byte_1BC2C31D5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BC22D538 + 4 * byte_1BC2C31D0[v4]))();
}

uint64_t sub_1BC22D538(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC22D540(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC22D548);
  return result;
}

uint64_t sub_1BC22D554(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC22D55CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BC22D560(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC22D568(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SelectionEntryItem.SwitchStyle()
{
  return &type metadata for SelectionEntryItem.SwitchStyle;
}

uint64_t method lookup function for SelectionOptionsCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SelectionOptionsCell.item.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of SelectionOptionsCell.item.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of SelectionOptionsCell.item.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t sub_1BC22D5E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SelectionEntryItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC22D628(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SelectionEntryItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC22D66C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SelectionEntryItem();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t Set<>.severities(filtering:includeMinorInteractions:)(void *a1, char a2)
{
  id v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;

  v4 = a1;
  v5 = swift_bridgeObjectRetain();
  sub_1BC22E34C(v5, a1);
  v7 = v6;

  v8 = sub_1BC22D840(v7);
  result = swift_release();
  v13 = MEMORY[0x1E0DEE9D8];
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1BC2B52D0();
    result = swift_bridgeObjectRelease();
    if (v10)
      goto LABEL_3;
LABEL_15:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  v10 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v10)
    goto LABEL_15;
LABEL_3:
  if (v10 >= 1)
  {
    v11 = 0;
    while (1)
    {
      if ((v8 & 0xC000000000000001) != 0)
      {
        v12 = (id)MEMORY[0x1BCCEE950](v11, v8);
        if ((a2 & 1) != 0)
          goto LABEL_5;
      }
      else
      {
        v12 = *(id *)(v8 + 8 * v11 + 32);
        if ((a2 & 1) != 0)
          goto LABEL_5;
      }
      if (objc_msgSend(v12, sel_severityLevel, v13) == (id)4)
      {

        goto LABEL_6;
      }
LABEL_5:
      sub_1BC2B5204();
      sub_1BC2B5234();
      sub_1BC2B5240();
      sub_1BC2B5210();
LABEL_6:
      if (v10 == ++v11)
      {
        swift_bridgeObjectRelease();
        return v13;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC22D840(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t result;
  uint64_t v5;
  int64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  id v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  char *v19;
  _QWORD *v20;
  unint64_t v21;
  id v22[6];
  uint64_t v23;

  v2 = v1;
  v3 = a1;
  v23 = MEMORY[0x1E0DEE9D8];
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1BC2B50CC();
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FD88);
    sub_1BC1093B4((unint64_t *)&unk_1EDA0FD90, (unint64_t *)&qword_1EDA0FD88);
    result = sub_1BC2B47E4();
    v3 = (unint64_t)v22[1];
    v20 = v22[2];
    v5 = (uint64_t)v22[3];
    v6 = (int64_t)v22[4];
    v7 = (unint64_t)v22[5];
  }
  else
  {
    v8 = -1 << *(_BYTE *)(a1 + 32);
    v20 = (_QWORD *)(a1 + 56);
    v5 = ~v8;
    v9 = -v8;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v7 = v10 & *(_QWORD *)(a1 + 56);
    result = swift_bridgeObjectRetain();
    v6 = 0;
  }
  v11 = (unint64_t)(v5 + 64) >> 6;
  if ((v3 & 0x8000000000000000) == 0)
    goto LABEL_11;
LABEL_8:
  v12 = sub_1BC2B512C();
  if (!v12)
    goto LABEL_35;
  v21 = v12;
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FD88);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  v13 = v22[0];
  swift_unknownObjectRelease();
  v14 = v6;
  v15 = v7;
  if (!v13)
    goto LABEL_35;
  while (1)
  {
    v22[0] = v13;
    sub_1BC22DB58(v22, &v21);

    if (v2)
    {
      sub_1BC1061A8();
      return swift_bridgeObjectRelease();
    }
    result = sub_1BC1318BC(v21);
    v6 = v14;
    v7 = v15;
    if ((v3 & 0x8000000000000000) != 0)
      goto LABEL_8;
LABEL_11:
    if (!v7)
      break;
    v15 = (v7 - 1) & v7;
    v16 = __clz(__rbit64(v7)) | (v6 << 6);
    v14 = v6;
LABEL_24:
    v13 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v16);
    if (!v13)
      goto LABEL_35;
  }
  v14 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    return result;
  }
  if (v14 >= v11)
    goto LABEL_35;
  v17 = v20[v14];
  if (v17)
  {
LABEL_23:
    v15 = (v17 - 1) & v17;
    v16 = __clz(__rbit64(v17)) + (v14 << 6);
    goto LABEL_24;
  }
  v18 = v6 + 2;
  if (v6 + 2 >= v11)
    goto LABEL_35;
  v17 = v20[v18];
  if (v17)
    goto LABEL_22;
  v18 = v6 + 3;
  if (v6 + 3 >= v11)
    goto LABEL_35;
  v17 = v20[v18];
  if (v17)
    goto LABEL_22;
  v18 = v6 + 4;
  if (v6 + 4 >= v11)
    goto LABEL_35;
  v17 = v20[v18];
  if (v17)
  {
LABEL_22:
    v14 = v18;
    goto LABEL_23;
  }
  v14 = v6 + 5;
  if (v6 + 5 >= v11)
    goto LABEL_35;
  v17 = v20[v14];
  if (v17)
    goto LABEL_23;
  v19 = (char *)(v6 + 6);
  while ((char *)v11 != v19)
  {
    v17 = v20[(_QWORD)v19++];
    if (v17)
    {
      v14 = (int64_t)(v19 - 1);
      goto LABEL_23;
    }
  }
LABEL_35:
  sub_1BC1061A8();
  return v23;
}

uint64_t sub_1BC22DB58@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t result;
  void (*v21)(_BYTE *, _QWORD);
  uint64_t v22;
  _BYTE v24[32];
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 v27;
  uint64_t v28;

  v2 = objc_msgSend(*a1, sel_interactions);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FD68);
  sub_1BC1093B4(&qword_1EDA0FD70, (unint64_t *)&qword_1EDA0FD68);
  v3 = sub_1BC2B47B4();

  if ((v3 & 0xC000000000000001) != 0)
  {
    v4 = sub_1BC2B5108();
    if (!v4)
      goto LABEL_15;
    v5 = v4;
    v28 = MEMORY[0x1E0DEE9D8];
    sub_1BC2B5228();
    v25 = sub_1BC2B50C0();
    v26 = v6;
    v27 = 1;
    if ((v5 & 0x8000000000000000) == 0)
      goto LABEL_9;
    __break(1u);
  }
  v5 = *(_QWORD *)(v3 + 16);
  if (!v5)
  {
LABEL_15:
    result = swift_bridgeObjectRelease();
    v22 = MEMORY[0x1E0DEE9D8];
LABEL_16:
    *a2 = v22;
    return result;
  }
  v28 = MEMORY[0x1E0DEE9D8];
  sub_1BC2B5228();
  v25 = sub_1BC2180BC(v3);
  v26 = v7;
  v27 = v8 & 1;
  while (1)
  {
LABEL_9:
    while (1)
    {
      v14 = v25;
      v15 = v26;
      v16 = v27;
      sub_1BC217E48(v25, v26, v27, v3);
      v18 = v17;
      v19 = objc_msgSend(v17, sel_severity);

      sub_1BC2B5204();
      sub_1BC2B5234();
      sub_1BC2B5240();
      result = sub_1BC2B5210();
      if ((v3 & 0xC000000000000001) != 0)
        break;
      v9 = sub_1BC217A24(v14, v15, v16, v3);
      v11 = v10;
      v13 = v12;
      sub_1BC1648A8(v14, v15, v16);
      v25 = v9;
      v26 = v11;
      v27 = v13 & 1;
      if (!--v5)
        goto LABEL_14;
    }
    if ((v16 & 1) == 0)
      break;
    if (sub_1BC2B50D8())
      swift_isUniquelyReferenced_nonNull_native();
    sub_1BC22E728();
    v21 = (void (*)(_BYTE *, _QWORD))sub_1BC2B47CC();
    sub_1BC2B5150();
    v21(v24, 0);
    if (!--v5)
    {
LABEL_14:
      sub_1BC1648A8(v25, v26, v27);
      v22 = v28;
      result = swift_bridgeObjectRelease();
      goto LABEL_16;
    }
  }
  __break(1u);
  return result;
}

void sub_1BC22DDF4(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  void *v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  unint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  char v32;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  unint64_t v41;
  unint64_t v42;
  int64_t v43;

  v34 = a2;
  v4 = a4;
  v36 = 0;
  v5 = 0;
  v8 = *(_QWORD *)(a3 + 56);
  v6 = a3 + 56;
  v7 = v8;
  v9 = 1 << *(_BYTE *)(v6 - 24);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & v7;
  v37 = v6;
  v38 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    while (v11)
    {
      v12 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v13 = v12 | (v5 << 6);
      if (!v4)
        goto LABEL_42;
LABEL_22:
      v17 = *(id *)(*(_QWORD *)(a3 + 48) + 8 * v13);
      v18 = objc_msgSend(v4, sel_firstConceptIdentifier, v34);
      if (!v18)
      {
        v19 = v17;
        goto LABEL_41;
      }
      v19 = v18;
      v20 = objc_msgSend(v17, sel_conceptIdentifiers);
      sub_1BC0E1D38(0, (unint64_t *)&qword_1EF3F8E20);
      v21 = sub_1BC2B458C();

      v43 = v5;
      v41 = v13;
      v42 = v11;
      if (v21 >> 62)
      {
        swift_bridgeObjectRetain();
        v22 = sub_1BC2B52D0();
        if (!v22)
          goto LABEL_4;
      }
      else
      {
        v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v22)
          goto LABEL_4;
      }
      if ((v21 & 0xC000000000000001) != 0)
        v23 = (id)MEMORY[0x1BCCEE950](0, v21);
      else
        v23 = *(id *)(v21 + 32);
      v24 = v23;
      v25 = sub_1BC2B4D84();

      if ((v25 & 1) != 0)
      {
LABEL_40:
        swift_bridgeObjectRelease_n();

        v4 = a4;
        v5 = v43;
        v13 = v41;
        v11 = v42;
LABEL_41:

        goto LABEL_42;
      }
      if (v22 != 1)
      {
        if ((v21 & 0xC000000000000001) != 0)
        {
          v26 = 1;
          while (1)
          {
            MEMORY[0x1BCCEE950](v26, v21);
            v27 = v26 + 1;
            if (__OFADD__(v26, 1))
              break;
            v28 = sub_1BC2B4D84();
            swift_unknownObjectRelease();
            if ((v28 & 1) != 0)
              goto LABEL_40;
            ++v26;
            if (v27 == v22)
              goto LABEL_4;
          }
          __break(1u);
        }
        else
        {
          v29 = 5;
          while (1)
          {
            v30 = v29 - 3;
            if (__OFADD__(v29 - 4, 1))
              break;
            v31 = *(id *)(v21 + 8 * v29);
            v32 = sub_1BC2B4D84();

            if ((v32 & 1) != 0)
              goto LABEL_40;
            ++v29;
            if (v30 == v22)
              goto LABEL_4;
          }
        }
        __break(1u);
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
        goto LABEL_54;
      }
LABEL_4:
      swift_bridgeObjectRelease_n();

      v4 = a4;
      v5 = v43;
      v11 = v42;
    }
    v14 = v5 + 1;
    if (__OFADD__(v5, 1))
      goto LABEL_52;
    if (v14 >= v38)
    {
LABEL_49:
      swift_retain();
      sub_1BC1E8C64(a1, v34, v36, a3);
      return;
    }
    v15 = *(_QWORD *)(v37 + 8 * v14);
    ++v5;
    if (!v15)
    {
      v5 = v14 + 1;
      if (v14 + 1 >= v38)
        goto LABEL_49;
      v15 = *(_QWORD *)(v37 + 8 * v5);
      if (!v15)
      {
        v5 = v14 + 2;
        if (v14 + 2 >= v38)
          goto LABEL_49;
        v15 = *(_QWORD *)(v37 + 8 * v5);
        if (!v15)
          break;
      }
    }
LABEL_21:
    v11 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v5 << 6);
    if (v4)
      goto LABEL_22;
LABEL_42:
    *(unint64_t *)((char *)a1 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    if (__OFADD__(v36++, 1))
      goto LABEL_53;
  }
  v16 = v14 + 3;
  if (v16 >= v38)
    goto LABEL_49;
  v15 = *(_QWORD *)(v37 + 8 * v16);
  if (v15)
  {
    v5 = v16;
    goto LABEL_21;
  }
  while (1)
  {
    v5 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v5 >= v38)
      goto LABEL_49;
    v15 = *(_QWORD *)(v37 + 8 * v5);
    ++v16;
    if (v15)
      goto LABEL_21;
  }
LABEL_54:
  __break(1u);
}

uint64_t sub_1BC22E19C(uint64_t a1, void *a2)
{
  uint64_t v2;
  char v5;
  unsigned int v6;
  unint64_t v7;
  uint64_t isStackAllocationSafe;
  void *v9;
  char *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  _QWORD v18[2];

  v18[1] = *MEMORY[0x1E0C80C00];
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v7 = (unint64_t)((1 << v5) + 63) >> 6;
  isStackAllocationSafe = a2;
  v9 = (void *)isStackAllocationSafe;
  if (v6 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    v10 = (char *)v18 - ((8 * v7 + 15) & 0x3FFFFFFFFFFFFFF0);
    bzero(v10, 8 * v7);
    v11 = v9;
    sub_1BC22DDF4((unint64_t *)v10, v7, a1, a2);
    v13 = v12;
    swift_release();

    if (v2)
      swift_willThrow();

  }
  else
  {
    v14 = (void *)swift_slowAlloc();
    bzero(v14, 8 * v7);
    v15 = v9;
    sub_1BC22DDF4((unint64_t *)v14, v7, a1, a2);
    v13 = v16;
    swift_release();

    MEMORY[0x1BCCEF3A0](v14, -1, -1);
  }
  return v13;
}

void sub_1BC22E34C(uint64_t a1, void *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  id v9;
  void *v10;
  id v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  unint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  char v29;
  void *v30;
  id v31;
  void *v32;
  uint64_t v33;

  v2 = a2;
  if ((a1 & 0xC000000000000001) == 0)
  {
    sub_1BC22E19C(a1, a2);
    return;
  }
  v33 = MEMORY[0x1E0DEE9E8];
  v31 = a2;
  sub_1BC2B50CC();
  if (!sub_1BC2B512C())
  {
LABEL_42:

    swift_release();
    return;
  }
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FD88);
  v30 = v2;
  while (1)
  {
    swift_dynamicCast();
    if (!v2)
      goto LABEL_16;
    v9 = objc_msgSend(v31, sel_firstConceptIdentifier);
    if (!v9)
      goto LABEL_16;
    v10 = v9;
    v11 = objc_msgSend(v32, sel_conceptIdentifiers);
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EF3F8E20);
    v12 = sub_1BC2B458C();

    if (v12 >> 62)
    {
      swift_bridgeObjectRetain();
      v13 = sub_1BC2B52D0();
      if (!v13)
        goto LABEL_37;
    }
    else
    {
      v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v13)
        goto LABEL_37;
    }
    if ((v12 & 0xC000000000000001) != 0)
      v14 = (id)MEMORY[0x1BCCEE950](0, v12);
    else
      v14 = *(id *)(v12 + 32);
    v15 = v14;
    v16 = sub_1BC2B4D84();

    if ((v16 & 1) != 0)
    {
LABEL_15:

      swift_bridgeObjectRelease_n();
      v2 = v30;
LABEL_16:
      v17 = v33;
      v18 = *(_QWORD *)(v33 + 16);
      if (*(_QWORD *)(v33 + 24) <= v18)
      {
        sub_1BC215600(v18 + 1);
        v17 = v33;
      }
      v3 = sub_1BC2B4D78();
      v4 = v17 + 56;
      v5 = -1 << *(_BYTE *)(v17 + 32);
      v6 = v3 & ~v5;
      v7 = v6 >> 6;
      if (((-1 << v6) & ~*(_QWORD *)(v17 + 56 + 8 * (v6 >> 6))) != 0)
      {
        v8 = __clz(__rbit64((-1 << v6) & ~*(_QWORD *)(v17 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v19 = 0;
        v20 = (unint64_t)(63 - v5) >> 6;
        do
        {
          if (++v7 == v20 && (v19 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          v21 = v7 == v20;
          if (v7 == v20)
            v7 = 0;
          v19 |= v21;
          v22 = *(_QWORD *)(v4 + 8 * v7);
        }
        while (v22 == -1);
        v8 = __clz(__rbit64(~v22)) + (v7 << 6);
      }
      *(_QWORD *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
      *(_QWORD *)(*(_QWORD *)(v17 + 48) + 8 * v8) = v32;
      ++*(_QWORD *)(v17 + 16);
      goto LABEL_7;
    }
    if (v13 != 1)
      break;
LABEL_37:

    swift_bridgeObjectRelease_n();
    v2 = v30;
LABEL_7:
    if (!sub_1BC2B512C())
      goto LABEL_42;
  }
  if ((v12 & 0xC000000000000001) != 0)
  {
    v23 = 1;
    while (1)
    {
      MEMORY[0x1BCCEE950](v23, v12);
      v24 = v23 + 1;
      if (__OFADD__(v23, 1))
        break;
      v25 = sub_1BC2B4D84();
      swift_unknownObjectRelease();
      if ((v25 & 1) != 0)
        goto LABEL_15;
      ++v23;
      if (v24 == v13)
        goto LABEL_37;
    }
LABEL_43:
    __break(1u);
  }
  else
  {
    v26 = 5;
    while (1)
    {
      v27 = v26 - 3;
      if (__OFADD__(v26 - 4, 1))
        break;
      v28 = *(id *)(v12 + 8 * v26);
      v29 = sub_1BC2B4D84();

      if ((v29 & 1) != 0)
        goto LABEL_15;
      ++v26;
      if (v27 == v13)
        goto LABEL_37;
    }
  }
  __break(1u);
}

void sub_1BC22E728()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDA0FC88)
  {
    sub_1BC0E1D38(255, (unint64_t *)&qword_1EDA0FD68);
    sub_1BC1093B4(&qword_1EDA0FD70, (unint64_t *)&qword_1EDA0FD68);
    v0 = sub_1BC2B47D8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDA0FC88);
  }
}

uint64_t static UIButton.makeCriticalInteractionButton()()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v0 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  v1 = sub_1BC2B2144();
  v3 = v2;
  swift_bridgeObjectRelease();

  _sSo8UIButtonC19HealthMedicationsUIE21makeExclamationButton5title29accessibilityIdentifierSuffixABSS_SStFZ_0(v1, v3, 0xD000000000000014, 0x80000001BC2C76D0);
  v5 = v4;
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t static UIButton.makeCriticalPregnancyInteractionButton()()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (qword_1EF3F8148 != -1)
    swift_once();
  v0 = (id)qword_1EF3FE7F0;
  swift_bridgeObjectRetain();
  v1 = sub_1BC2B2144();
  v3 = v2;
  swift_bridgeObjectRelease();

  _sSo8UIButtonC19HealthMedicationsUIE21makeExclamationButton5title29accessibilityIdentifierSuffixABSS_SStFZ_0(v1, v3, 0xD000000000000012, 0x80000001BC2CC3A0);
  v5 = v4;
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t static UIButton.makeCriticalLactationInteractionButton()()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (qword_1EF3F8148 != -1)
    swift_once();
  v0 = (id)qword_1EF3FE7F0;
  swift_bridgeObjectRetain();
  v1 = sub_1BC2B2144();
  v3 = v2;
  swift_bridgeObjectRelease();

  _sSo8UIButtonC19HealthMedicationsUIE21makeExclamationButton5title29accessibilityIdentifierSuffixABSS_SStFZ_0(v1, v3, 0xD000000000000012, 0x80000001BC2CC3F0);
  v5 = v4;
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t static UIButton.makeCriticalButton()()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (qword_1EF3F8148 != -1)
    swift_once();
  v0 = (id)qword_1EF3FE7F0;
  swift_bridgeObjectRetain();
  v1 = sub_1BC2B2144();
  v3 = v2;
  swift_bridgeObjectRelease();

  _sSo8UIButtonC19HealthMedicationsUIE21makeExclamationButton5title29accessibilityIdentifierSuffixABSS_SStFZ_0(v1, v3, 0x616369746972432ELL, 0xE90000000000006CLL);
  v5 = v4;
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1BC22EB98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1BC2B215C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
  sub_1BC2B4C64();
  sub_1BC22F2D8();
  return sub_1BC2B2150();
}

uint64_t sub_1BC22EC74()
{
  sub_1BC22F3B0();
  return sub_1BC2B4424() & 1;
}

void _sSo8UIButtonC19HealthMedicationsUIE21makeExclamationButton5title29accessibilityIdentifierSuffixABSS_SStFZ_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  id v21;
  id v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;
  uint64_t v27;
  void *v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  id v38;
  double v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  id v43;
  void *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;

  v49 = a3;
  v50 = a4;
  sub_1BC22F268();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BC2B4E68();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BC2B4DCC();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1BC2B4EC8();
  v47 = *(_QWORD *)(v15 - 8);
  v48 = v15;
  v16 = MEMORY[0x1E0C80A78](v15);
  v46 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v45 - v18;
  sub_1BC2B4EA4();
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E0DC3060], v11);
  sub_1BC2B4DD8();
  v20 = (void *)objc_opt_self();
  v21 = objc_msgSend(v20, sel_hk_alertHeaderForegroundColor);
  sub_1BC2B4E44();
  v22 = objc_msgSend(v20, sel_hk_alertHeaderBackgroundColor);
  sub_1BC2B4E38();
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DC3190], v7);
  sub_1BC2B4DC0();
  v51 = 9011426;
  v52 = 0xA300000000000000;
  sub_1BC2B44FC();
  sub_1BC2B4E98();
  sub_1BC2B3D58();
  v23 = sub_1BC2B3D4C();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v6, 0, 1, v23);
  sub_1BC2B4E5C();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
  v24 = (void *)sub_1BC2B4C64();
  v25 = (void *)objc_opt_self();
  v26 = objc_msgSend(v25, sel_configurationWithFont_scale_, v24, 1);

  sub_1BC0E7940();
  v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1BC2B92B0;
  *(_QWORD *)(v27 + 32) = objc_msgSend(v20, sel_systemYellowColor);
  *(_QWORD *)(v27 + 40) = objc_msgSend(v20, sel_systemBlackColor);
  v51 = v27;
  sub_1BC2B45A4();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDE0);
  v28 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  v29 = objc_msgSend(v25, sel_configurationWithPaletteColors_, v28);

  v30 = v26;
  v31 = (void *)sub_1BC2B4430();
  v32 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_withConfiguration_, v31, v30);

  if (v32)
  {
    v33 = objc_msgSend(v32, sel_imageByApplyingSymbolConfiguration_, v29);

    v34 = v33;
    sub_1BC2B4E80();
    sub_1BC0E1D38(0, &qword_1EDA0FE08);
    v35 = v47;
    v36 = v48;
    (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v46, v19, v48);
    v37 = (void *)sub_1BC2B4ED4();
    objc_msgSend(v37, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v38 = objc_msgSend(v37, sel_titleLabel);
    objc_msgSend(v38, sel_setAdjustsFontForContentSizeCategory_, 1);

    LODWORD(v39) = 1148846080;
    objc_msgSend(v37, sel_setContentHuggingPriority_forAxis_, 0, v39);
    objc_msgSend(v37, sel_setUserInteractionEnabled_, 0);
    v51 = sub_1BC2B4460();
    v52 = v40;
    swift_bridgeObjectRetain();
    sub_1BC2B44FC();
    v41 = v51;
    v42 = v52;
    v43 = v37;
    swift_bridgeObjectRelease();
    v51 = v41;
    v52 = v42;
    swift_bridgeObjectRetain();
    sub_1BC2B44FC();
    swift_bridgeObjectRelease();
    v44 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    objc_msgSend(v43, sel_setAccessibilityIdentifier_, v44);

    (*(void (**)(char *, uint64_t))(v35 + 8))(v19, v36);
  }
  else
  {
    __break(1u);
  }
}

void sub_1BC22F268()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF400030)
  {
    sub_1BC2B3D4C();
    v0 = sub_1BC2B4FA0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF400030);
  }
}

void sub_1BC22F2BC()
{
  sub_1BC2B2114();
  __break(1u);
}

unint64_t sub_1BC22F2D8()
{
  unint64_t result;

  result = qword_1EF400038;
  if (!qword_1EF400038)
  {
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0DC1948], MEMORY[0x1E0DC1958]);
    atomic_store(result, (unint64_t *)&qword_1EF400038);
  }
  return result;
}

void sub_1BC22F31C()
{
  sub_1BC22F2D8();
  sub_1BC2B21C8();
  __break(1u);
}

uint64_t sub_1BC22F340()
{
  return 8;
}

uint64_t sub_1BC22F34C()
{
  return swift_release();
}

uint64_t sub_1BC22F354(_QWORD *a1, _QWORD *a2)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_1BC22F364()
{
  sub_1BC22F3B0();
  return sub_1BC2B4400();
}

_QWORD *sub_1BC22F3A4(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

void sub_1BC22F3B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF400040)
  {
    sub_1BC2B2120();
    v0 = sub_1BC2B54BC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF400040);
  }
}

uint64_t type metadata accessor for ManaulFormsDataSource()
{
  uint64_t result;

  result = qword_1EF400048;
  if (!qword_1EF400048)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC22F448()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1BC22F49C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1BC26E22C(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_1BC230140(v5);
  *a1 = v2;
  return result;
}

_QWORD *sub_1BC22F504(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;

  swift_allocObject();
  v4 = sub_1BC230FB0(a1, a2);
  swift_release();
  return v4;
}

uint64_t sub_1BC22F55C(uint64_t a1)
{
  id v1;
  uint64_t v2;

  if (a1 == 2)
  {
    if (qword_1EDA0FEE8 == -1)
      goto LABEL_6;
LABEL_9:
    swift_once();
    goto LABEL_6;
  }
  if (a1)
    return 0;
  if (qword_1EDA0FEE8 != -1)
    goto LABEL_9;
LABEL_6:
  v1 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  v2 = sub_1BC2B2144();
  swift_bridgeObjectRelease();

  return v2;
}

uint64_t sub_1BC22F6AC()
{
  uint64_t v0;
  uint64_t v1;

  swift_retain();
  v0 = swift_bridgeObjectRetain();
  v1 = sub_1BC230E4C(v0);
  swift_bridgeObjectRelease();
  swift_release();
  return v1;
}

uint64_t sub_1BC22F718@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  id v32;
  void (*v33)(uint64_t *, _QWORD);
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  int EnumCaseMultiPayload;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  char *v50;
  id v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;

  v3 = v2;
  v72 = a2;
  v56 = *v2;
  v5 = sub_1BC2B2FA8();
  v69 = *(_QWORD *)(v5 - 8);
  v70 = v5;
  MEMORY[0x1E0C80A78](v5);
  v71 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC0E7998(0, &qword_1EDA0FAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v68 = (char *)&v56 - v9;
  v10 = sub_1BC2B2C6C();
  v65 = *(_QWORD *)(v10 - 8);
  v66 = v10;
  MEMORY[0x1E0C80A78](v10);
  v67 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_1BC2B3A34();
  v57 = *(_QWORD *)(v58 - 8);
  MEMORY[0x1E0C80A78](v58);
  v64 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, &qword_1EDA0FAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1C58], v7);
  MEMORY[0x1E0C80A78](v13);
  v60 = (char *)&v56 - v14;
  v15 = sub_1BC2B3A58();
  v62 = *(_QWORD *)(v15 - 8);
  v63 = v15;
  MEMORY[0x1E0C80A78](v15);
  v61 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for FormStepResult();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v56 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v56 - v22;
  sub_1BC0E7998(0, &qword_1EF3FB840, v24, v7);
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v56 - v26;
  v28 = sub_1BC2B3CD4();
  v74 = *(_QWORD *)(v28 - 8);
  v75 = v28;
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&v56 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B3C80();
  v31 = a1;
  sub_1BC2B4C10();
  sub_1BC2B3C98();
  v59 = (id)objc_opt_self();
  v32 = objc_msgSend(v59, sel_labelColor, v56);
  v73 = v30;
  v33 = (void (*)(uint64_t *, _QWORD))sub_1BC2B3BE4();
  sub_1BC2B3BB4();
  v33(&v78, 0);
  v34 = v3;
  sub_1BC2B3ED8();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v27, 1, v17))
  {
    sub_1BC0F2444((uint64_t)v27, &qword_1EF3FB840, (uint64_t (*)(uint64_t))type metadata accessor for FormStepResult);
    v35 = v31;
    v36 = v3;
    v37 = v58;
    v38 = v57;
  }
  else
  {
    sub_1BC18E854((uint64_t)v27, (uint64_t)v23);
    sub_1BC0F2444((uint64_t)v27, &qword_1EF3FB840, (uint64_t (*)(uint64_t))type metadata accessor for FormStepResult);
    sub_1BC18E854((uint64_t)v23, (uint64_t)v21);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v35 = v31;
    v37 = v58;
    v38 = v57;
    if (EnumCaseMultiPayload != 1)
      sub_1BC231198((uint64_t)v21);
    sub_1BC231198((uint64_t)v23);
    v36 = v34;
  }
  v78 = sub_1BC2B54F8();
  v79 = v40;
  sub_1BC2B44FC();
  v76 = v35;
  sub_1BC2B539C();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v58 = v78;
  v57 = v79;
  v41 = v75;
  v80 = v75;
  v81 = MEMORY[0x1E0DC2398];
  v42 = __swift_allocate_boxed_opaque_existential_1(&v78);
  (*(void (**)(uint64_t *, char *, uint64_t))(v74 + 16))(v42, v73, v41);
  sub_1BC0E7998(0, (unint64_t *)&unk_1EDA0FE70, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1D38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BC2B3AD0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BC2B92D0;
  v43 = sub_1BC2B3A40();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v60, 1, 1, v43);
  v44 = v61;
  sub_1BC2B3A4C();
  v45 = v64;
  (*(void (**)(char *, _QWORD, uint64_t))(v38 + 104))(v64, *MEMORY[0x1E0DC1C20], v37);
  sub_1BC2B3AC4();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v45, v37);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v44, v63);
  v46 = swift_allocObject();
  swift_weakInit();
  v47 = swift_allocObject();
  *(_QWORD *)(v47 + 16) = v46;
  *(_QWORD *)(v47 + 24) = v35;
  v48 = v66;
  v49 = v67;
  *v67 = 1;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v65 + 104))(v49, *MEMORY[0x1E0D2B168], v48);
  swift_retain();
  v50 = v68;
  sub_1BC2B3B24();
  v51 = objc_msgSend(v59, sel_secondarySystemBackgroundColor);
  sub_1BC2B3B18();
  v52 = sub_1BC2B3B48();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v50, 0, 1, v52);
  v54 = *(_QWORD *)((char *)v36 + qword_1EF402A38);
  v53 = *(_QWORD *)((char *)v36 + qword_1EF402A38 + 8);
  v76 = 46;
  v77 = 0xE100000000000000;
  sub_1BC2B4C10();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v76 = v54;
  v77 = v53;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, _QWORD, uint64_t))(v69 + 104))(v71, *MEMORY[0x1E0D2B8C8], v70);
  sub_1BC2B2D8C();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v73, v75);
  return swift_release();
}

uint64_t sub_1BC22FE84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v1 = MEMORY[0x1BCCEE3A4]();
  swift_retain();
  v2 = sub_1BC230CF4(v1, v0);
  swift_bridgeObjectRelease();
  swift_release();
  v6 = v2;
  swift_bridgeObjectRetain();
  sub_1BC22F49C(&v6);
  swift_bridgeObjectRelease();
  v3 = v6;
  swift_retain();
  v4 = sub_1BC230E4C(v3);
  swift_release();
  swift_release();
  return v4;
}

uint64_t sub_1BC22FF40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  sub_1BC0E7998(0, &qword_1EF3FB840, (uint64_t (*)(uint64_t))type metadata accessor for FormStepResult, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (uint64_t *)((char *)&v9 - v5);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    *v6 = a3;
    v8 = type metadata accessor for FormStepResult();
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v6, 0, 1, v8);
    sub_1BC2B3EC0();
    swift_release();
    return sub_1BC0F2444((uint64_t)v6, &qword_1EF3FB840, (uint64_t (*)(uint64_t))type metadata accessor for FormStepResult);
  }
  return result;
}

uint64_t sub_1BC23006C()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC23009C()
{
  uint64_t v0;

  v0 = sub_1BC2B2C60();
  swift_release();
  sub_1BC0F2444(v0 + qword_1EF4026C0, (unint64_t *)&qword_1EF3F8980, type metadata accessor for MedicationSearchItem);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC230138()
{
  return type metadata accessor for ManaulFormsDataSource();
}

uint64_t sub_1BC230140(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  char v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  unint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  char *v93;
  uint64_t v94;
  unint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;

  v2 = v1;
  v4 = a1[1];
  result = sub_1BC2B5390();
  if (result >= v4)
  {
    if (v4 < 0)
      goto LABEL_153;
    if (v4)
      return sub_1BC2308C4(0, v4, 1, a1);
    return result;
  }
  if (v4 >= 0)
    v6 = v4;
  else
    v6 = v4 + 1;
  if (v4 < -1)
    goto LABEL_161;
  v105 = result;
  v102 = a1;
  if (v4 < 2)
  {
    v9 = (char *)MEMORY[0x1E0DEE9D8];
    v110 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    v104 = MEMORY[0x1E0DEE9D8];
    if (v4 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_119:
      v93 = v9;
      if (v12 >= 2)
      {
        v94 = *v102;
        do
        {
          v95 = v12 - 2;
          if (v12 < 2)
            goto LABEL_148;
          if (!v94)
            goto LABEL_160;
          v96 = v93;
          v97 = *(_QWORD *)&v93[16 * v95 + 32];
          v98 = *(_QWORD *)&v93[16 * v12 + 24];
          sub_1BC2309C8((char *)(v94 + 8 * v97), (char *)(v94 + 8 * *(_QWORD *)&v93[16 * v12 + 16]), v94 + 8 * v98, v110);
          if (v2)
            break;
          if (v98 < v97)
            goto LABEL_149;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v96 = sub_1BC26E1A0((uint64_t)v96);
          if (v95 >= *((_QWORD *)v96 + 2))
            goto LABEL_150;
          v99 = &v96[16 * v95 + 32];
          *(_QWORD *)v99 = v97;
          *((_QWORD *)v99 + 1) = v98;
          v100 = *((_QWORD *)v96 + 2);
          if (v12 > v100)
            goto LABEL_151;
          memmove(&v96[16 * v12 + 16], &v96[16 * v12 + 32], 16 * (v100 - v12));
          v93 = v96;
          *((_QWORD *)v96 + 2) = v100 - 1;
          v12 = v100 - 1;
        }
        while (v100 > 2);
      }
LABEL_116:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v111 = v1;
  }
  else
  {
    v111 = v1;
    v7 = v6 >> 1;
    type metadata accessor for HKMedicationFreeTextFormTypeCode(0);
    v8 = sub_1BC2B45F8();
    *(_QWORD *)(v8 + 16) = v7;
    v104 = v8;
    v110 = (char *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v103 = *a1 + 16;
  v101 = *a1 - 8;
  v9 = (char *)MEMORY[0x1E0DEE9D8];
  v107 = v4;
  while (1)
  {
    v13 = v10++;
    v108 = v13;
    if (v10 >= v4)
      goto LABEL_46;
    v14 = sub_1BC2B4C10();
    v16 = v15;
    if (v14 == sub_1BC2B4C10() && v16 == v17)
      v19 = 0;
    else
      v19 = sub_1BC2B53CC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v10 = v13 + 2;
    if (v13 + 2 >= v4)
      goto LABEL_36;
    v20 = v103 + 8 * v13;
    while (1)
    {
      v22 = sub_1BC2B4C10();
      v24 = v23;
      if (v22 == sub_1BC2B4C10() && v24 == v25)
      {
        swift_bridgeObjectRelease_n();
        if ((v19 & 1) != 0)
        {
          v4 = v107;
          goto LABEL_37;
        }
        goto LABEL_26;
      }
      v21 = sub_1BC2B53CC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (((v19 ^ v21) & 1) != 0)
        break;
LABEL_26:
      v20 += 8;
      if (v107 == ++v10)
      {
        v4 = v107;
        v10 = v107;
        goto LABEL_36;
      }
    }
    v4 = v107;
LABEL_36:
    if ((v19 & 1) != 0)
    {
LABEL_37:
      if (v10 < v13)
        goto LABEL_154;
      if (v13 < v10)
      {
        v27 = v10 - 1;
        v28 = v13;
        do
        {
          if (v28 != v27)
          {
            if (!v11)
              goto LABEL_159;
            v29 = *(_QWORD *)(v11 + 8 * v28);
            *(_QWORD *)(v11 + 8 * v28) = *(_QWORD *)(v11 + 8 * v27);
            *(_QWORD *)(v11 + 8 * v27) = v29;
          }
          v72 = ++v28 < v27--;
        }
        while (v72);
      }
    }
LABEL_46:
    if (v10 < v4)
    {
      if (__OFSUB__(v10, v13))
        goto LABEL_152;
      if (v10 - v13 < v105)
        break;
    }
LABEL_68:
    if (v10 < v13)
      goto LABEL_147;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v9 = sub_1BC26DEB8(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
    v41 = *((_QWORD *)v9 + 2);
    v40 = *((_QWORD *)v9 + 3);
    v12 = v41 + 1;
    if (v41 >= v40 >> 1)
      v9 = sub_1BC26DEB8((char *)(v40 > 1), v41 + 1, 1, v9);
    *((_QWORD *)v9 + 2) = v12;
    v42 = v9 + 32;
    v43 = &v9[16 * v41 + 32];
    *(_QWORD *)v43 = v13;
    *((_QWORD *)v43 + 1) = v10;
    if (v41)
    {
      v109 = v10;
      while (1)
      {
        v44 = v12 - 1;
        if (v12 >= 4)
        {
          v49 = &v42[16 * v12];
          v50 = *((_QWORD *)v49 - 8);
          v51 = *((_QWORD *)v49 - 7);
          v55 = __OFSUB__(v51, v50);
          v52 = v51 - v50;
          if (v55)
            goto LABEL_136;
          v54 = *((_QWORD *)v49 - 6);
          v53 = *((_QWORD *)v49 - 5);
          v55 = __OFSUB__(v53, v54);
          v47 = v53 - v54;
          v48 = v55;
          if (v55)
            goto LABEL_137;
          v56 = v12 - 2;
          v57 = &v42[16 * v12 - 32];
          v59 = *(_QWORD *)v57;
          v58 = *((_QWORD *)v57 + 1);
          v55 = __OFSUB__(v58, v59);
          v60 = v58 - v59;
          if (v55)
            goto LABEL_139;
          v55 = __OFADD__(v47, v60);
          v61 = v47 + v60;
          if (v55)
            goto LABEL_142;
          if (v61 >= v52)
          {
            v79 = &v42[16 * v44];
            v81 = *(_QWORD *)v79;
            v80 = *((_QWORD *)v79 + 1);
            v55 = __OFSUB__(v80, v81);
            v82 = v80 - v81;
            if (v55)
              goto LABEL_146;
            v72 = v47 < v82;
            goto LABEL_106;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v73 = *((_QWORD *)v9 + 4);
            v74 = *((_QWORD *)v9 + 5);
            v55 = __OFSUB__(v74, v73);
            v66 = v74 - v73;
            v67 = v55;
            goto LABEL_100;
          }
          v46 = *((_QWORD *)v9 + 4);
          v45 = *((_QWORD *)v9 + 5);
          v55 = __OFSUB__(v45, v46);
          v47 = v45 - v46;
          v48 = v55;
        }
        if ((v48 & 1) != 0)
          goto LABEL_138;
        v56 = v12 - 2;
        v62 = &v42[16 * v12 - 32];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v65 = __OFSUB__(v63, v64);
        v66 = v63 - v64;
        v67 = v65;
        if (v65)
          goto LABEL_141;
        v68 = &v42[16 * v44];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        v55 = __OFSUB__(v69, v70);
        v71 = v69 - v70;
        if (v55)
          goto LABEL_144;
        if (__OFADD__(v66, v71))
          goto LABEL_145;
        if (v66 + v71 >= v47)
        {
          v72 = v47 < v71;
LABEL_106:
          if (v72)
            v44 = v56;
          goto LABEL_108;
        }
LABEL_100:
        if ((v67 & 1) != 0)
          goto LABEL_140;
        v75 = &v42[16 * v44];
        v77 = *(_QWORD *)v75;
        v76 = *((_QWORD *)v75 + 1);
        v55 = __OFSUB__(v76, v77);
        v78 = v76 - v77;
        if (v55)
          goto LABEL_143;
        if (v78 < v66)
          goto LABEL_15;
LABEL_108:
        v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
          goto LABEL_156;
        }
        v84 = v11;
        if (!v11)
          goto LABEL_158;
        v85 = v9;
        v86 = &v42[16 * v83];
        v87 = *(_QWORD *)v86;
        v88 = v44;
        v89 = &v42[16 * v44];
        v90 = *((_QWORD *)v89 + 1);
        v91 = v84;
        sub_1BC2309C8((char *)(v84 + 8 * *(_QWORD *)v86), (char *)(v84 + 8 * *(_QWORD *)v89), v84 + 8 * v90, v110);
        if (v111)
          goto LABEL_116;
        if (v90 < v87)
          goto LABEL_133;
        if (v88 > *((_QWORD *)v85 + 2))
          goto LABEL_134;
        *(_QWORD *)v86 = v87;
        *(_QWORD *)&v42[16 * v83 + 8] = v90;
        v92 = *((_QWORD *)v85 + 2);
        if (v88 >= v92)
          goto LABEL_135;
        v9 = v85;
        v12 = v92 - 1;
        memmove(v89, v89 + 16, 16 * (v92 - 1 - v88));
        *((_QWORD *)v85 + 2) = v92 - 1;
        v11 = v91;
        v10 = v109;
        if (v92 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v4 = v107;
    if (v10 >= v107)
    {
      v2 = v111;
      goto LABEL_119;
    }
  }
  if (__OFADD__(v13, v105))
    goto LABEL_155;
  if (v13 + v105 >= v4)
    v30 = v4;
  else
    v30 = v13 + v105;
  if (v30 >= v13)
  {
    if (v10 != v30)
    {
      v31 = (uint64_t *)(v101 + 8 * v10);
      v106 = v30;
      do
      {
        v32 = v31;
        while (1)
        {
          v33 = sub_1BC2B4C10();
          v35 = v34;
          if (v33 == sub_1BC2B4C10() && v35 == v36)
            break;
          v38 = sub_1BC2B53CC();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v38 & 1) == 0)
            goto LABEL_57;
          if (!v11)
            goto LABEL_157;
          v39 = *v32;
          *v32 = v32[1];
          v32[1] = v39;
          --v32;
          if (v10 == ++v13)
            goto LABEL_57;
        }
        swift_bridgeObjectRelease_n();
LABEL_57:
        ++v10;
        ++v31;
        v13 = v108;
      }
      while (v10 != v106);
      v10 = v106;
    }
    goto LABEL_68;
  }
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  __break(1u);
LABEL_161:
  result = sub_1BC2B52AC();
  __break(1u);
  return result;
}

uint64_t sub_1BC2308C4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v16;
  uint64_t v17;

  v17 = result;
  if (a3 != a2)
  {
    v4 = a3;
    v6 = *a4;
    v7 = *a4 + 8 * a3 - 8;
LABEL_6:
    v8 = v17;
    v9 = (uint64_t *)v7;
    while (1)
    {
      v10 = sub_1BC2B4C10();
      v12 = v11;
      if (v10 == sub_1BC2B4C10() && v12 == v13)
      {
        result = swift_bridgeObjectRelease_n();
LABEL_5:
        ++v4;
        v7 += 8;
        if (v4 == a2)
          return result;
        goto LABEL_6;
      }
      v15 = sub_1BC2B53CC();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      if ((v15 & 1) == 0)
        goto LABEL_5;
      if (!v6)
        break;
      v16 = *v9;
      result = v9[1];
      *v9 = result;
      v9[1] = v16;
      --v9;
      if (v4 == ++v8)
        goto LABEL_5;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC2309C8(char *a1, char *__src, unint64_t a3, char *a4)
{
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v30;
  uint64_t result;
  char *v34;
  char *v35;
  char *v36;

  v36 = a1;
  v5 = __src;
  v6 = __src - a1;
  v7 = __src - a1 + 7;
  if (__src - a1 >= 0)
    v7 = __src - a1;
  v8 = v7 >> 3;
  v9 = a3 - (_QWORD)__src;
  v10 = a3 - (_QWORD)__src + 7;
  if ((uint64_t)(a3 - (_QWORD)__src) >= 0)
    v10 = a3 - (_QWORD)__src;
  v11 = v10 >> 3;
  v35 = a4;
  if (v8 >= v10 >> 3)
  {
    if (v9 < -7)
      goto LABEL_54;
    if (a4 != __src || &__src[8 * v11] <= a4)
      memmove(a4, __src, 8 * v11);
    v21 = &a4[8 * v11];
    v34 = v21;
    v36 = v5;
    if (a1 >= v5 || v9 < 8)
    {
LABEL_53:
      sub_1BC26DFC4((void **)&v36, (const void **)&v35, &v34);
      return 1;
    }
    v22 = (char *)(a3 - 8);
    v23 = v5;
    while (1)
    {
      v24 = v22 + 8;
      v23 -= 8;
      v25 = sub_1BC2B4C10();
      v27 = v26;
      if (v25 == sub_1BC2B4C10() && v27 == v28)
        break;
      v30 = sub_1BC2B53CC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v30 & 1) == 0)
        goto LABEL_46;
      if (v24 != v5 || v22 >= v5)
        *(_QWORD *)v22 = *(_QWORD *)v23;
      v36 = v23;
LABEL_51:
      if (v23 > a1)
      {
        v22 -= 8;
        v5 = v23;
        if (v21 > a4)
          continue;
      }
      goto LABEL_53;
    }
    swift_bridgeObjectRelease_n();
LABEL_46:
    v34 = v21 - 8;
    if (v24 < v21 || v22 >= v21 || v24 != v21)
      *(_QWORD *)v22 = *((_QWORD *)v21 - 1);
    v23 = v5;
    v21 -= 8;
    goto LABEL_51;
  }
  if (v6 >= -7)
  {
    if (a4 != a1 || &a1[8 * v8] <= a4)
      memmove(a4, a1, 8 * v8);
    v34 = &a4[8 * v8];
    if ((unint64_t)v5 < a3 && v6 >= 8)
    {
      v12 = a4;
      v13 = a1;
      while (1)
      {
        v14 = sub_1BC2B4C10();
        v16 = v15;
        if (v14 == sub_1BC2B4C10() && v16 == v17)
          break;
        v19 = sub_1BC2B53CC();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v19 & 1) == 0)
          goto LABEL_23;
        v20 = v5 + 8;
        if (v13 < v5 || v13 >= v20 || v13 != v5)
          *(_QWORD *)v13 = *(_QWORD *)v5;
LABEL_26:
        v13 += 8;
        if (v12 < &a4[8 * v8])
        {
          v5 = v20;
          if ((unint64_t)v20 < a3)
            continue;
        }
        v36 = v13;
        goto LABEL_53;
      }
      swift_bridgeObjectRelease_n();
LABEL_23:
      if (v13 != v12)
        *(_QWORD *)v13 = *(_QWORD *)v12;
      v12 += 8;
      v35 = v12;
      v20 = v5;
      goto LABEL_26;
    }
    goto LABEL_53;
  }
LABEL_54:
  result = sub_1BC2B5318();
  __break(1u);
  return result;
}

uint64_t sub_1BC230CF4(uint64_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;

  v2 = *(_QWORD *)(result + 16);
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
  v4 = 0;
  v5 = qword_1EF402A30;
  v6 = result + 32;
  v7 = MEMORY[0x1E0DEE9D8];
  do
  {
    if (v4 <= v2)
      v8 = v2;
    else
      v8 = v4;
    while (1)
    {
      if (v4 == v8)
        goto LABEL_24;
      v9 = *(_QWORD *)(v6 + 8 * v4++);
      v10 = *(_QWORD *)(a2 + v5);
      v11 = *(_QWORD *)(v10 + 16);
      if (!v11)
        goto LABEL_15;
      if (*(_QWORD *)(v10 + 32) != v9)
        break;
LABEL_6:
      if (v4 == v2)
        return v7;
    }
    if (v11 != 1)
    {
      v12 = 5;
      while (1)
      {
        v13 = v12 - 3;
        if (__OFADD__(v12 - 4, 1))
          break;
        if (*(_QWORD *)(v10 + 8 * v12) == v9)
          goto LABEL_6;
        ++v12;
        if (v13 == v11)
          goto LABEL_15;
      }
      __break(1u);
LABEL_24:
      __break(1u);
      return result;
    }
LABEL_15:
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
      result = sub_1BC125B70(0, *(_QWORD *)(v7 + 16) + 1, 1);
    v15 = *(_QWORD *)(v7 + 16);
    v14 = *(_QWORD *)(v7 + 24);
    if (v15 >= v14 >> 1)
      result = sub_1BC125B70(v14 > 1, v15 + 1, 1);
    *(_QWORD *)(v7 + 16) = v15 + 1;
    *(_QWORD *)(v7 + 8 * v15 + 32) = v9;
  }
  while (v4 != v2);
  return v7;
}

uint64_t sub_1BC230E4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v14;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;

  v3 = sub_1BC2B2D98();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = MEMORY[0x1E0DEE9D8];
  if (v7)
  {
    v16 = v1;
    v20 = MEMORY[0x1E0DEE9D8];
    sub_1BC125B04(0, v7, 0);
    v8 = v20;
    v9 = (uint64_t *)(a1 + 32);
    do
    {
      v10 = *v9++;
      sub_1BC22F718(v10, (uint64_t)v6);
      v20 = v8;
      v12 = *(_QWORD *)(v8 + 16);
      v11 = *(_QWORD *)(v8 + 24);
      if (v12 >= v11 >> 1)
        sub_1BC125B04(v11 > 1, v12 + 1, 1);
      v18 = v3;
      v19 = sub_1BC231100();
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v17);
      (*(void (**)(uint64_t *, char *, uint64_t))(v4 + 16))(boxed_opaque_existential_1, v6, v3);
      v14 = v20;
      *(_QWORD *)(v20 + 16) = v12 + 1;
      sub_1BC0F2730(&v17, v14 + 40 * v12 + 32);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      v8 = v20;
      --v7;
    }
    while (v7);
  }
  return v8;
}

_QWORD *sub_1BC230FB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;

  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8980, type metadata accessor for MedicationSearchItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v14 - v6;
  *(_QWORD *)(v2 + qword_1EF402A30) = &unk_1E74AFA38;
  v8 = (uint64_t *)(v2 + qword_1EF402A38);
  v14 = sub_1BC2B4460();
  v15 = v9;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  v10 = v14;
  v11 = v15;
  swift_retain();
  swift_bridgeObjectRelease();
  *v8 = v10;
  v8[1] = v11;
  swift_release();
  sub_1BC0E8644(a1, (uint64_t)v7);
  v12 = sub_1BC26ECC8((uint64_t)v7, a2);
  sub_1BC0F2444(a1, (unint64_t *)&qword_1EF3F8980, type metadata accessor for MedicationSearchItem);
  return v12;
}

unint64_t sub_1BC231100()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3F8CE8;
  if (!qword_1EF3F8CE8)
  {
    v1 = sub_1BC2B2D98();
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0D2B340], v1);
    atomic_store(result, (unint64_t *)&qword_1EF3F8CE8);
  }
  return result;
}

uint64_t sub_1BC231148()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC23116C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC231190(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC22FF40(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1BC231198(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FormStepResult();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BC2311D4(uint64_t a1, int a2, void *a3)
{
  uint64_t result;
  _QWORD *v5;
  id v6;

  if (a2)
    return swift_continuation_throwingResume();
  if (a3)
  {
    sub_1BC0E8778(0, (unint64_t *)&qword_1EDA0FEA0);
    swift_allocError();
    *v5 = a3;
    v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC231260(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

id sub_1BC23129C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = qword_1EF4000B8;
  v2 = *(void **)(v0 + qword_1EF4000B8);
  if (v2)
  {
    v3 = *(id *)(v0 + qword_1EF4000B8);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB69B8]), sel_initWithHealthStore_, *(_QWORD *)(v0 + qword_1EF4000E8));
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t NewMedicationOnboardingViewController.listManager.getter()
{
  return swift_retain();
}

uint64_t NewMedicationOnboardingViewController.analyticsContext.getter()
{
  return swift_retain();
}

uint64_t sub_1BC23133C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = (_QWORD *)(*a2 + qword_1EF4000B0);
  swift_beginAccess();
  *v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC2313A4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + qword_1EF4000B0);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1BC2313F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + qword_1EF4000B0);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1BC231454())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

id sub_1BC231498()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = qword_1EF4000C8;
  v2 = *(void **)(v0 + qword_1EF4000C8);
  if (v2)
  {
    v3 = *(id *)(v0 + qword_1EF4000C8);
  }
  else
  {
    v4 = sub_1BC2314F8(v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC2314F8(uint64_t a1)
{
  id v2;
  id v3;
  void *v4;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3C38]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v2, sel_setDelegate_, a1);
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v3 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  v4 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setPlaceholder_, v4, 0xE000000000000000);

  objc_msgSend(v2, sel_setAutocorrectionType_, 1);
  objc_msgSend(v2, sel_setSpellCheckingType_, 1);
  return v2;
}

id sub_1BC23165C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = qword_1EF4000D0;
  v2 = *(void **)(v0 + qword_1EF4000D0);
  if (v2)
  {
    v3 = *(id *)(v0 + qword_1EF4000D0);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithBarButtonSystemItem_target_action_, 1, v0, sel_cancelTapped_);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC2316E0()
{
  id v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v31;
  unint64_t v32;

  v0 = objc_msgSend((id)objc_opt_self(), sel_searchConfiguration);
  v1 = sub_1BC231498();
  v2 = objc_msgSend(v1, sel_text);

  if (v2)
  {
    v3 = sub_1BC2B4460();
    v5 = v4;

    v6 = sub_1BC1F3134(v3, v5);
    v8 = v7;
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = sub_1BC1F3134(0, 0xE000000000000000);
    v8 = v9;
  }
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v10 = (void *)qword_1EDA0FEF8;
  sub_1BC127B70(0, qword_1EDA0ED40, (unint64_t *)&qword_1EDA0FED0);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1BC2B92D0;
  *(_QWORD *)(v11 + 56) = MEMORY[0x1E0DEA968];
  v32 = sub_1BC0F2748();
  *(_QWORD *)(v11 + 64) = v32;
  *(_QWORD *)(v11 + 32) = v6;
  *(_QWORD *)(v11 + 40) = v8;
  v31 = v6;
  v12 = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  sub_1BC2B443C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v13 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setSecondaryText_, v13, 0xE000000000000000);

  v14 = objc_msgSend(v0, sel_buttonProperties);
  v15 = objc_msgSend((id)objc_opt_self(), sel_tintedButtonConfiguration);
  objc_msgSend(v14, sel_setConfiguration_, v15);

  v16 = objc_msgSend(v0, sel_buttonProperties);
  v17 = objc_msgSend(v16, sel_configuration);

  objc_msgSend(v17, sel_setCornerStyle_, 4);
  v18 = objc_msgSend(v0, sel_buttonProperties);
  v19 = objc_msgSend(v18, sel_configuration);

  v20 = objc_msgSend((id)objc_opt_self(), sel_systemGrayColor);
  objc_msgSend(v19, sel_setBaseBackgroundColor_, v20);

  v21 = objc_msgSend(v0, sel_buttonProperties);
  sub_1BC0E1D38(0, &qword_1EF3F90D8);
  v22 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v23 = (void *)sub_1BC2B4DA8();
  objc_msgSend(v21, sel_setPrimaryAction_, v23, 0, 0, 0, sub_1BC236464, v22);

  v24 = objc_msgSend(v0, sel_buttonProperties);
  v25 = objc_msgSend(v24, sel_configuration);

  v26 = (void *)qword_1EDA0FEF8;
  v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1BC2B92D0;
  *(_QWORD *)(v27 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v27 + 64) = v32;
  *(_QWORD *)(v27 + 32) = v31;
  *(_QWORD *)(v27 + 40) = v8;
  v28 = v26;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  sub_1BC2B443C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v29 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v25, sel_setTitle_, v29, 0xE000000000000000);

  return v0;
}

void sub_1BC231BF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1BCCEF478](v2);
  if (v3)
  {
    v4 = (void *)v3;
    sub_1BC232F60();

  }
}

char *NewMedicationOnboardingViewController.__allocating_init(healthStore:listManager:analyticsContext:)(void *a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  return NewMedicationOnboardingViewController.init(healthStore:listManager:analyticsContext:)(a1, a2, a3);
}

char *NewMedicationOnboardingViewController.init(healthStore:listManager:analyticsContext:)(void *a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v21;
  uint64_t v22;

  *(_QWORD *)&v3[qword_1EF4000B8] = 0;
  v7 = (uint64_t *)&v3[qword_1EF4000B0];
  v21 = sub_1BC2B4460();
  v22 = v8;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  v9 = v3;
  swift_bridgeObjectRelease();
  *v7 = v21;
  v7[1] = v22;
  *(_QWORD *)&v9[qword_1EF4000C0] = 0x4046000000000000;
  *(_QWORD *)&v9[qword_1EF4000C8] = 0;
  *(_QWORD *)&v9[qword_1EF4000D0] = 0;
  *(_QWORD *)&v9[qword_1EF4000D8] = 0;
  *(_QWORD *)&v9[qword_1EF4000E0] = 0;
  *(_QWORD *)&v9[qword_1EF4000E8] = a1;
  *(_QWORD *)&v9[qword_1EF4000A0] = a2;
  sub_1BC2B36F8();
  swift_allocObject();
  v10 = a1;
  swift_retain();
  v11 = sub_1BC2B36EC();
  *(_QWORD *)&v9[qword_1EF4000F0] = v11;
  type metadata accessor for NewMedicationsOnboardingDataSource();
  v12 = swift_allocObject();
  v13 = v10;
  swift_retain();
  swift_retain();
  v14 = sub_1BC2357E4(a2, v11, v13, v12);

  swift_release();
  v15 = qword_1EF4000F8;
  *(_QWORD *)&v9[qword_1EF4000F8] = v14;
  *(_QWORD *)&v9[qword_1EF4000A8] = a3;
  swift_retain();

  sub_1BC2B2DEC();
  sub_1BC127B70(0, (unint64_t *)&qword_1EF400100, (unint64_t *)&qword_1EF3F8998);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1BC2B92D0;
  v17 = MEMORY[0x1E0D2B148];
  *(_QWORD *)(v16 + 32) = *(_QWORD *)&v9[v15];
  *(_QWORD *)(v16 + 40) = v17;
  swift_retain();
  sub_1BC2B2E10();
  v18 = (char *)sub_1BC2B2FE4();
  *(_QWORD *)(*(_QWORD *)&v18[qword_1EF4000F8] + qword_1EF3F8B80 + 8) = &off_1E74B8D98;
  swift_unknownObjectWeakAssign();
  v19 = v18;
  sub_1BC2321B8();
  swift_release();
  swift_release();

  return v19;
}

void sub_1BC231F2C(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_1BC235CBC();
}

id sub_1BC231F50()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;

  v1 = qword_1EF4000E0;
  v2 = *(void **)(v0 + qword_1EF4000E0);
  if (v2)
  {
    v3 = *(id *)(v0 + qword_1EF4000E0);
  }
  else
  {
    v4 = objc_allocWithZone(MEMORY[0x1E0D651B8]);
    v5 = (void *)sub_1BC2B4430();
    v6 = objc_msgSend(v4, sel_initWithTitle_detailText_icon_, v5, 0, 0);

    v7 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v6;
    v3 = v6;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

void sub_1BC231FEC()
{
  char *v0;
  id v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  objc_super v12;

  sub_1BC2324FC();
  v12.receiver = v0;
  v12.super_class = (Class)type metadata accessor for NewMedicationOnboardingViewController();
  objc_msgSendSuper2(&v12, sel_viewDidLoad);
  v1 = sub_1BC231498();
  objc_msgSend(v1, sel_setHidden_, 1);

  v2 = sub_1BC231498();
  objc_msgSend(v2, sel_setAlpha_, 0.0);

  v3 = objc_msgSend(v0, sel_collectionView);
  if (!v3)
  {
    __break(1u);
    goto LABEL_8;
  }
  v4 = v3;
  objc_msgSend(v3, sel_setPreservesSuperviewLayoutMargins_, 1);

  v5 = objc_msgSend(v0, sel_collectionView);
  if (!v5)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v6 = v5;
  v7 = objc_msgSend((id)objc_opt_self(), sel_systemBackgroundColor);
  objc_msgSend(v6, sel_setBackgroundColor_, v7);

  v8 = objc_msgSend(v0, sel_traitCollection);
  v9 = objc_msgSend(v8, sel_horizontalSizeClass);

  if (v9 != (id)2)
    return;
  v10 = objc_msgSend(v0, sel_collectionView);
  if (!v10)
  {
LABEL_9:
    __break(1u);
    return;
  }
  v11 = v10;
  objc_msgSend(v10, sel_setDirectionalLayoutMargins_, 0.0, *(double *)&v0[qword_1EF4000C0], 0.0, *(double *)&v0[qword_1EF4000C0]);

}

void sub_1BC232184(void *a1)
{
  id v1;

  v1 = a1;
  sub_1BC231FEC();

}

uint64_t sub_1BC2321B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  id v20;

  v1 = v0;
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0FCC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v19 - v3;
  v5 = MEMORY[0x1E0DEAFA0];
  sub_1BC0E2130(0, &qword_1EDA0FC10, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0C96180]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v19 - v9;
  sub_1BC2365F4();
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_1BC0E2130(0, &qword_1EDA0FC20, v5, MEMORY[0x1E0C96198]);
  sub_1BC2B3F68();
  swift_endAccess();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FFF0);
  v20 = (id)sub_1BC2B4A0C();
  v16 = sub_1BC2B49C4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v4, 1, 1, v16);
  sub_1BC1A514C();
  sub_1BC1019D8();
  sub_1BC2B4064();
  sub_1BC101BB8((uint64_t)v4);

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC0E519C(&qword_1EF4001C8, (uint64_t (*)(uint64_t))sub_1BC2365F4, MEMORY[0x1E0C95CB8]);
  v17 = sub_1BC2B40A0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  *(_QWORD *)(v1 + qword_1EF4000D8) = v17;
  return swift_release();
}

void sub_1BC23244C(unsigned __int8 *a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1BCCEF478](v3);
  if (v4)
  {
    v5 = (void *)v4;
    if (v2 && (swift_beginAccess(), (v6 = MEMORY[0x1BCCEF478](v3)) != 0))
    {
      v7 = (void *)v6;
      v8 = sub_1BC2316E0();

    }
    else
    {
      v8 = 0;
    }
    objc_msgSend(v5, sel__setContentUnavailableConfiguration_, v8);

  }
}

id sub_1BC2324FC()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  double v6;
  double v7;
  double v8;
  double v9;

  v1 = objc_msgSend(v0, sel_navigationItem);
  v2 = sub_1BC231498();
  objc_msgSend(v1, sel_setTitleView_, v2);

  v3 = objc_msgSend(v0, sel_navigationItem);
  v4 = sub_1BC23165C();
  objc_msgSend(v3, sel_setRightBarButtonItem_, v4);

  objc_msgSend(v0, sel_setModalInPresentation_, 1);
  v5 = sub_1BC231F50();
  objc_msgSend(v5, sel_preferredContentSize);
  v7 = v6;
  v9 = v8;

  return objc_msgSend(v0, sel_setPreferredContentSize_, v7, v9);
}

id sub_1BC2325E8(void *a1)
{
  return objc_msgSend(a1, sel_dismissViewControllerAnimated_completion_, 1, 0);
}

void sub_1BC2325FC(void *a1)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  __int128 v6[2];
  uint64_t v7;
  id v8;
  _QWORD v9[4];

  v2 = (void *)sub_1BC2B25C4();
  objc_msgSend(a1, sel_deselectItemAtIndexPath_animated_, v2, 1);

  v3 = (void *)sub_1BC2B25C4();
  v4 = objc_msgSend(a1, sel_cellForItemAtIndexPath_, v3);

  if (v4)
  {
    v8 = v4;
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EF400110);
    sub_1BC0E8778(0, &qword_1EF3F9B08);
    v5 = v4;
    if ((swift_dynamicCast() & 1) != 0)
    {
      sub_1BC0F2730(v6, (uint64_t)v9);
      __swift_project_boxed_opaque_existential_0(v9, v9[3]);
      sub_1BC2B2B28();

      __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
    }
    else
    {
      v7 = 0;
      memset(v6, 0, sizeof(v6));

      sub_1BC0E8594((uint64_t)v6, (uint64_t (*)(_QWORD))sub_1BC148598);
    }
  }
}

uint64_t sub_1BC232754(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v12;

  v5 = sub_1BC2B2600();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B25D0();
  v9 = a3;
  v10 = a1;
  sub_1BC2325FC(v9);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1BC232804(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  UIViewController_optional *v35;
  void *v36;
  void *v37;
  void *v38;
  id v39;
  void *v40;
  char *v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  _QWORD v54[2];
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  unsigned __int8 v61[24];
  uint64_t v62;
  uint64_t v63;

  v2 = v1;
  v54[1] = swift_getObjectType();
  v56 = type metadata accessor for MedicationSearchItem(0);
  v4 = MEMORY[0x1E0C80A78](v56);
  v55 = (uint64_t)v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v57 = (uint64_t)v54 - v6;
  v7 = sub_1BC2B39E0();
  v58 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v59 = (char *)v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MedicationOnboardingFlowManager(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MedicationSearchItem.Source(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (id *)((char *)v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = type metadata accessor for MedicationOnboardingFlowManager.EntryMode(0);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v54 - v19;
  sub_1BC0FC574(a1, (uint64_t)v14, type metadata accessor for MedicationSearchItem.Source);
  LODWORD(v60) = swift_getEnumCaseMultiPayload();
  if ((_DWORD)v60 == 1)
  {
    swift_beginAccess();
    sub_1BC2B365C();
    sub_1BC0FC574(a1, (uint64_t)v20, type metadata accessor for MedicationSearchItem);
    swift_storeEnumTagMultiPayload();
    sub_1BC0E8594((uint64_t)v14, type metadata accessor for MedicationSearchItem.Source);
    v21 = 4;
  }
  else
  {

    sub_1BC0F223C();
    v23 = (char *)v14 + *(int *)(v22 + 48);
    sub_1BC0FC574(a1, (uint64_t)v20, type metadata accessor for MedicationSearchItem);
    swift_storeEnumTagMultiPayload();
    v24 = sub_1BC231498();
    objc_msgSend(v24, sel_setHidden_, 1);

    v25 = sub_1BC231498();
    objc_msgSend(v25, sel_setAlpha_, 0.0);

    v26 = sub_1BC2B3530();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v23, v26);
    v21 = 0;
  }
  v27 = sub_1BC1C2964();
  if (!v27)
  {
LABEL_8:
    sub_1BC0FC574((uint64_t)v20, (uint64_t)v18, type metadata accessor for MedicationOnboardingFlowManager.EntryMode);
    v34 = *(_QWORD *)&v2[qword_1EF4000A8];
    v61[0] = 64;
    swift_retain();
    MedicationOnboardingFlowManager.init(entryMode:currentStep:didShowLifeStyleFactors:analyticsContext:analyticsEntryMode:)((uint64_t)v18, v61, 0, v34, v21, (uint64_t)v11);
    v35 = (UIViewController_optional *)v60;
    if ((_DWORD)v60 != 1)
    {
      swift_beginAccess();
      v36 = *(void **)&v2[qword_1EF4000E8];
      sub_1BC2B3638();
      swift_allocObject();
      swift_retain();
      v36;
      sub_1BC2B362C();
      sub_1BC2B36D4();
      sub_1BC2B36C8();
      swift_release();
    }
    MedicationOnboardingFlowManager.makeNextViewControllerForStep()(v35);
    if (v37)
    {
      v38 = v37;
      v39 = objc_msgSend(v2, sel_navigationController);
      if (v39)
      {
        v40 = v39;
        objc_msgSend(v39, sel_pushViewController_animated_, v38, 1);

      }
    }
    else
    {
      v41 = v59;
      sub_1BC2B39A4();
      v42 = v57;
      sub_1BC0FC574(a1, v57, type metadata accessor for MedicationSearchItem);
      v43 = sub_1BC2B39D4();
      v44 = sub_1BC2B48C8();
      if (os_log_type_enabled(v43, v44))
      {
        v45 = swift_slowAlloc();
        v46 = swift_slowAlloc();
        v60 = v7;
        v47 = v46;
        v63 = v46;
        *(_DWORD *)v45 = 136315394;
        v54[0] = v11;
        v48 = sub_1BC2B54F8();
        v62 = sub_1BC12540C(v48, v49, &v63);
        sub_1BC2B4FD0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v45 + 12) = 2080;
        sub_1BC0FC574(v42, v55, type metadata accessor for MedicationSearchItem);
        v50 = sub_1BC2B4478();
        v62 = sub_1BC12540C(v50, v51, &v63);
        sub_1BC2B4FD0();
        swift_bridgeObjectRelease();
        sub_1BC0E8594(v42, type metadata accessor for MedicationSearchItem);
        _os_log_impl(&dword_1BC0DC000, v43, v44, "[%s] MedicationOnboardingFlowManager wasn't able to find next ViewController! Encountered unexpected medication concept type: %s", (uint8_t *)v45, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1BCCEF3A0](v47, -1, -1);
        MEMORY[0x1BCCEF3A0](v45, -1, -1);

        (*(void (**)(char *, uint64_t))(v58 + 8))(v59, v60);
        v52 = v54[0];
LABEL_18:
        sub_1BC0E8594(v52, type metadata accessor for MedicationOnboardingFlowManager);
        return sub_1BC0E8594((uint64_t)v20, type metadata accessor for MedicationOnboardingFlowManager.EntryMode);
      }

      sub_1BC0E8594(v42, type metadata accessor for MedicationSearchItem);
      (*(void (**)(char *, uint64_t))(v58 + 8))(v41, v7);
    }
    v52 = (uint64_t)v11;
    goto LABEL_18;
  }
  v28 = (void *)v27;
  v54[0] = a1;
  v29 = v7;
  v30 = v11;
  v31 = *(_QWORD *)&v2[qword_1EF4000A0];
  v32 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  v33 = _sSo17UIAlertControllerC19HealthMedicationsUIE27makeAlertForExsitingConcept7concept11listManager11showHandlerABSgSo9HKConceptC_0C22RecordsConceptsSupport04ListjM0CySo022HKMedicationUserDomainJ0CctFZ_0((uint64_t)v28, v31, (uint64_t)sub_1BC11D334, v32);
  swift_release_n();
  if (!v33)
  {

    v11 = v30;
    v7 = v29;
    a1 = v54[0];
    goto LABEL_8;
  }
  objc_msgSend(v2, sel_presentViewController_animated_completion_, v33, 1, 0);

  return sub_1BC0E8594((uint64_t)v20, type metadata accessor for MedicationOnboardingFlowManager.EntryMode);
}

uint64_t sub_1BC232F60()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  UIViewController_optional *v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t ObjectType;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v1 = v0;
  ObjectType = swift_getObjectType();
  v2 = sub_1BC2B39E0();
  v31 = *(_QWORD *)(v2 - 8);
  v32 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&ObjectType - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MedicationOnboardingFlowManager.EntryMode(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (uint64_t *)((char *)&ObjectType - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for MedicationOnboardingFlowManager(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&ObjectType - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v11 = *(_QWORD *)&v0[qword_1EF4000A8];
  v12 = *(void **)&v0[qword_1EF4000E8];
  sub_1BC2B3638();
  swift_allocObject();
  swift_retain();
  v12;
  sub_1BC2B362C();
  sub_1BC2B36D4();
  sub_1BC2B36C8();
  v13 = sub_1BC231498();
  v14 = objc_msgSend(v13, sel_text, ObjectType);

  if (v14)
  {
    v15 = sub_1BC2B4460();
    v17 = v16;

  }
  else
  {
    v15 = 0;
    v17 = 0;
  }
  *v7 = v15;
  v7[1] = v17;
  swift_storeEnumTagMultiPayload();
  LOBYTE(v34) = 64;
  swift_retain();
  MedicationOnboardingFlowManager.init(entryMode:currentStep:didShowLifeStyleFactors:analyticsContext:analyticsEntryMode:)((uint64_t)v7, (unsigned __int8 *)&v34, 0, v11, 1, (uint64_t)v10);
  MedicationOnboardingFlowManager.makeNextViewControllerForStep()(v18);
  if (!v19)
  {
    sub_1BC2B39A4();
    v23 = sub_1BC2B39D4();
    v24 = sub_1BC2B48C8();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      v34 = v26;
      *(_DWORD *)v25 = 136315138;
      v27 = sub_1BC2B54F8();
      v33 = sub_1BC12540C(v27, v28, &v34);
      sub_1BC2B4FD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v23, v24, "[%s] MedicationOnboardingFlowManager wasn't able to find next ViewController", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v26, -1, -1);
      MEMORY[0x1BCCEF3A0](v25, -1, -1);
    }
    swift_release();

    (*(void (**)(char *, uint64_t))(v31 + 8))(v4, v32);
    return sub_1BC0E8594((uint64_t)v10, type metadata accessor for MedicationOnboardingFlowManager);
  }
  v20 = v19;
  v21 = objc_msgSend(v1, sel_navigationController);
  if (v21)
  {
    v22 = v21;
    objc_msgSend(v21, sel_pushViewController_animated_, v20, 1);
    swift_release();

    return sub_1BC0E8594((uint64_t)v10, type metadata accessor for MedicationOnboardingFlowManager);
  }
  sub_1BC0E8594((uint64_t)v10, type metadata accessor for MedicationOnboardingFlowManager);

  return swift_release();
}

uint64_t sub_1BC2333F8()
{
  uint64_t v0;
  void *v1;

  swift_beginAccess();
  v1 = *(void **)(v0 + qword_1EF4000E8);
  sub_1BC2B3638();
  swift_allocObject();
  swift_retain();
  v1;
  sub_1BC2B362C();
  sub_1BC2B36D4();
  sub_1BC2B36C8();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  sub_1BC2B28AC();
  swift_release_n();
  return swift_release();
}

void sub_1BC23355C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char *v4;
  void *v5;
  void *v6;
  id v7;
  char *v8;
  id v9;

  v3 = a2 + 16;
  swift_beginAccess();
  v4 = (char *)MEMORY[0x1BCCEF478](v3);
  if (v4)
  {
    v5 = v4;
    if (a1 == 2)
    {
      v8 = v4;
      sub_1BC2B28B8();
    }
    else
    {
      if (a1 != 3)
      {
LABEL_7:

        return;
      }
      v6 = *(void **)&v4[qword_1EF4000E8];
      objc_allocWithZone((Class)sub_1BC2B3128());
      v7 = v6;
      swift_retain();
      v8 = (char *)sub_1BC2B3110();
      sub_1BC0E519C(&qword_1EF4001A8, (uint64_t (*)(uint64_t))type metadata accessor for NewMedicationOnboardingViewController, (uint64_t)&protocol conformance descriptor for NewMedicationOnboardingViewController);
      v9 = v5;
      sub_1BC2B311C();
      objc_msgSend(v9, sel_presentViewController_animated_completion_, v8, 1, 0);
    }

    goto LABEL_7;
  }
}

void sub_1BC233678(void *a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint8_t *v21;
  id v22;
  id v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v3 = v2;
  swift_getObjectType();
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F9218, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v29 - v7;
  v9 = sub_1BC2B39E0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B39A4();
  v13 = sub_1BC2B39D4();
  v14 = sub_1BC2B48C8();
  if (os_log_type_enabled(v13, v14))
  {
    v31 = a1;
    v15 = swift_slowAlloc();
    v32 = a2;
    v16 = (uint8_t *)v15;
    v17 = swift_slowAlloc();
    v30 = v9;
    v18 = v17;
    v34 = v17;
    *(_DWORD *)v16 = 136315138;
    v29 = v10;
    v19 = sub_1BC2B54F8();
    v33 = sub_1BC12540C(v19, v20, &v34);
    sub_1BC2B4FD0();
    a1 = v31;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC0DC000, v13, v14, "[%s] start search", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v18, -1, -1);
    v21 = v16;
    a2 = v32;
    MEMORY[0x1BCCEF3A0](v21, -1, -1);

    (*(void (**)(char *, uint64_t))(v29 + 8))(v12, v30);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  v22 = sub_1BC231498();
  objc_msgSend(v22, sel_setHidden_, 1);

  v23 = sub_1BC231498();
  objc_msgSend(v23, sel_setAlpha_, 0.0);

  v24 = sub_1BC2B467C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v8, 1, 1, v24);
  sub_1BC2B4658();
  v25 = v3;
  v26 = sub_1BC2B464C();
  v27 = (_QWORD *)swift_allocObject();
  v28 = MEMORY[0x1E0DF06E8];
  v27[2] = v26;
  v27[3] = v28;
  v27[4] = v25;
  sub_1BC1393A8((uint64_t)v8, (uint64_t)&unk_1EF400198, (uint64_t)v27);
  swift_release();
  sub_1BC233964(a1, a2);
}

void sub_1BC233964(void *a1, uint64_t a2)
{
  void *v2;
  id v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  id v24;
  id v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  _QWORD *v47;
  void *v48;
  id v49;
  _QWORD *v50;
  void *v51;
  id v52;
  id v53;
  void *v54;
  id v55;
  id v56;
  uint64_t aBlock;
  uint64_t v58;
  void *v59;
  void *v60;
  void *v61;
  _QWORD *v62;

  v55 = sub_1BC231498();
  v5 = objc_msgSend(a1, sel_snapshotViewAfterScreenUpdates_, 1);
  if (!v5)
  {
    v54 = v55;
LABEL_9:

    return;
  }
  v56 = v5;
  v6 = objc_msgSend(v2, sel_navigationItem);
  v7 = objc_msgSend(v6, sel_titleView);

  if (!v7)
  {

    v54 = v56;
    goto LABEL_9;
  }
  v8 = objc_msgSend(v2, sel_view);
  if (v8)
  {
    v9 = v8;
    objc_msgSend(v56, sel_frame);
    objc_msgSend(v9, sel_convertRect_fromCoordinateSpace_, a2);
    v11 = v10;
    v13 = v12;
    v15 = v14;
    v17 = v16;

    objc_msgSend(v56, sel_setFrame_, v11, v13, v15, v17);
    objc_msgSend(a1, sel_setAlpha_, 0.0);
    v18 = objc_msgSend(v2, sel_view);
    if (v18)
    {
      v19 = v18;
      objc_msgSend(v18, sel_addSubview_, v56);

      v20 = objc_msgSend(v2, sel_collectionView);
      if (v20)
      {
        v21 = v20;
        v22 = objc_msgSend(v20, sel_visibleCells);

        sub_1BC0E1D38(0, (unint64_t *)&qword_1EF400110);
        v23 = sub_1BC2B458C();

        v24 = sub_1BC231498();
        v25 = objc_msgSend(v24, sel_searchTextField);

        objc_msgSend(v25, sel_frame);
        v27 = v26;
        v29 = v28;
        v31 = v30;
        v33 = v32;

        v34 = objc_msgSend(v2, sel_view);
        objc_msgSend(v7, sel_convertRect_toView_, v34, v27, v29, v31, v33);
        v36 = v35;
        v38 = v37;
        v40 = v39;
        v42 = v41;

        v43 = (void *)objc_opt_self();
        v44 = swift_allocObject();
        *(_QWORD *)(v44 + 16) = v23;
        v61 = sub_1BC2362D0;
        v62 = (_QWORD *)v44;
        v45 = MEMORY[0x1E0C809B0];
        aBlock = MEMORY[0x1E0C809B0];
        v58 = 1107296256;
        v59 = sub_1BC1AEAE4;
        v60 = &block_descriptor_22;
        v46 = _Block_copy(&aBlock);
        swift_release();
        objc_msgSend(v43, sel_animateWithDuration_animations_, v46, 0.1);
        _Block_release(v46);
        v47 = (_QWORD *)swift_allocObject();
        v47[2] = v56;
        v47[3] = v36;
        v47[4] = v38;
        v47[5] = v40;
        v47[6] = v42;
        v61 = sub_1BC2362FC;
        v62 = v47;
        aBlock = v45;
        v58 = 1107296256;
        v59 = sub_1BC1AEAE4;
        v60 = &block_descriptor_13_0;
        v48 = _Block_copy(&aBlock);
        v49 = v56;
        swift_release();
        v50 = (_QWORD *)swift_allocObject();
        v50[2] = 0x3FD999999999999ALL;
        v50[3] = v55;
        v50[4] = v49;
        v61 = sub_1BC236340;
        v62 = v50;
        aBlock = v45;
        v58 = 1107296256;
        v59 = sub_1BC231260;
        v60 = &block_descriptor_19;
        v51 = _Block_copy(&aBlock);
        v52 = v49;
        v53 = v55;
        swift_release();
        objc_msgSend(v43, sel_animateWithDuration_animations_completion_, v48, v51, 0.36);
        _Block_release(v51);
        _Block_release(v48);

        return;
      }
      goto LABEL_12;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_12:
  __break(1u);
}

uint64_t sub_1BC233DE0(unint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t i;
  id v5;
  void *v6;

  if (!(a1 >> 62))
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v2)
      goto LABEL_3;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  result = sub_1BC2B52D0();
  v2 = result;
  if (!result)
    return swift_bridgeObjectRelease();
LABEL_3:
  if (v2 >= 1)
  {
    for (i = 0; i != v2; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v5 = (id)MEMORY[0x1BCCEE950](i, a1);
      else
        v5 = *(id *)(a1 + 8 * i + 32);
      v6 = v5;
      objc_msgSend(v5, sel_setAlpha_, 0.0);

    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void sub_1BC233EAC(double a1, uint64_t a2, void *a3, void *a4)
{
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;

  v7 = (void *)objc_opt_self();
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a3;
  *(_QWORD *)(v8 + 24) = a4;
  v20 = sub_1BC236378;
  v21 = v8;
  v9 = MEMORY[0x1E0C809B0];
  v16 = MEMORY[0x1E0C809B0];
  v17 = 1107296256;
  v18 = sub_1BC1AEAE4;
  v19 = &block_descriptor_25;
  v10 = _Block_copy(&v16);
  v11 = a3;
  v12 = a4;
  swift_release();
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v12;
  v20 = sub_1BC2363A4;
  v21 = v13;
  v16 = v9;
  v17 = 1107296256;
  v18 = sub_1BC231260;
  v19 = &block_descriptor_31;
  v14 = _Block_copy(&v16);
  v15 = v12;
  swift_release();
  objc_msgSend(v7, sel_animateWithDuration_animations_completion_, v10, v14, a1 * 0.1);
  _Block_release(v14);
  _Block_release(v10);
}

uint64_t sub_1BC234008(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t (*v16)(uint64_t);
  _QWORD aBlock[6];

  v4 = sub_1BC2B42E0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BC2B4304();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(a1, sel_setHidden_, 0);
  objc_msgSend(a1, sel_setAlpha_, 1.0);
  objc_msgSend(a2, sel_setAlpha_, 0.1);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FFF0);
  v12 = (void *)sub_1BC2B4A0C();
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a1;
  aBlock[4] = sub_1BC2363B4;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC1AEAE4;
  aBlock[3] = &block_descriptor_37;
  v14 = _Block_copy(aBlock);
  v15 = a1;
  swift_release();
  sub_1BC2B42F8();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  v16 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1BC0E519C((unint64_t *)&qword_1EDA0FFC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0FFD0, v16, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC17219C();
  sub_1BC2B509C();
  MEMORY[0x1BCCEE194](0, v11, v7, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1BC23424C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[34] = a4;
  v5 = sub_1BC2B39E0();
  v4[35] = v5;
  v4[36] = *(_QWORD *)(v5 - 8);
  v4[37] = swift_task_alloc();
  v4[38] = swift_task_alloc();
  sub_1BC2B4658();
  v4[39] = sub_1BC2B464C();
  v4[40] = sub_1BC2B461C();
  v4[41] = v6;
  return swift_task_switch();
}

uint64_t sub_1BC2342F0()
{
  _QWORD *v0;
  void *v1;
  id v2;
  NSObject *v3;
  os_log_type_t v4;
  void *v5;
  uint8_t *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = (void *)v0[34];
  sub_1BC2B39A4();
  v2 = v1;
  v3 = sub_1BC2B39D4();
  v4 = sub_1BC2B48B0();
  if (os_log_type_enabled(v3, v4))
  {
    v20 = v0[36];
    v5 = (void *)v0[34];
    v21 = v0[35];
    v22 = v0[38];
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v23 = v7;
    *(_DWORD *)v6 = 136446210;
    v0[32] = v5;
    type metadata accessor for NewMedicationOnboardingViewController();
    v8 = v5;
    v9 = sub_1BC2B4490();
    v0[33] = sub_1BC12540C(v9, v10, &v23);
    sub_1BC2B4FD0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC0DC000, v3, v4, "[%{public}s] Marking medication education/interaction shards as required during add medication flow", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v7, -1, -1);
    MEMORY[0x1BCCEF3A0](v6, -1, -1);

    v11 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
    v11(v22, v21);
  }
  else
  {
    v12 = v0[38];
    v13 = v0[35];
    v14 = v0[36];
    v15 = (void *)v0[34];

    v11 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v11(v12, v13);
  }
  v0[42] = v11;
  v16 = sub_1BC23129C();
  v0[43] = v16;
  v0[2] = v0;
  v0[3] = sub_1BC234530;
  v17 = swift_continuation_init();
  v0[18] = MEMORY[0x1E0C809B0];
  v18 = v0 + 18;
  v18[1] = 0x40000000;
  v18[2] = sub_1BC2311D4;
  v18[3] = &block_descriptor_42;
  v18[4] = v17;
  objc_msgSend(v16, sel_markMedsEducationAsRequiredWithCompletion_, v18);
  return swift_continuation_await();
}

uint64_t sub_1BC234530()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 352) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1BC23458C()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = sub_1BC23129C();
  *(_QWORD *)(v0 + 360) = v1;
  *(_QWORD *)(v0 + 80) = v0;
  *(_QWORD *)(v0 + 88) = sub_1BC23462C;
  v2 = swift_continuation_init();
  *(_QWORD *)(v0 + 184) = MEMORY[0x1E0C809B0];
  v3 = (_QWORD *)(v0 + 184);
  v3[1] = 0x40000000;
  v3[2] = sub_1BC2311D4;
  v3[3] = &block_descriptor_43;
  v3[4] = v2;
  objc_msgSend(v1, sel_markInteractionsShardAsRequiredWithCompletion_, v3);
  return swift_continuation_await();
}

uint64_t sub_1BC23462C()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 368) = *(_QWORD *)(*(_QWORD *)v0 + 112);
  return swift_task_switch();
}

uint64_t sub_1BC234688()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 360);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC2346D0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26[2];

  swift_release();
  swift_willThrow();
  v1 = *(void **)(v0 + 352);
  v2 = *(void **)(v0 + 272);

  sub_1BC2B39A4();
  v3 = v2;
  v4 = v1;
  v5 = v3;
  v6 = v1;
  v7 = sub_1BC2B39D4();
  v8 = sub_1BC2B48C8();
  if (os_log_type_enabled(v7, v8))
  {
    v24 = *(_QWORD *)(v0 + 296);
    v25 = *(void (**)(uint64_t, uint64_t))(v0 + 336);
    v9 = *(void **)(v0 + 272);
    v23 = *(_QWORD *)(v0 + 280);
    v10 = swift_slowAlloc();
    v22 = swift_slowAlloc();
    v26[0] = v22;
    *(_DWORD *)v10 = 136446466;
    *(_QWORD *)(v0 + 248) = v9;
    type metadata accessor for NewMedicationOnboardingViewController();
    v11 = v9;
    v12 = sub_1BC2B4490();
    *(_QWORD *)(v0 + 240) = sub_1BC12540C(v12, v13, v26);
    sub_1BC2B4FD0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2082;
    *(_QWORD *)(v0 + 224) = v1;
    v14 = v1;
    sub_1BC0E8778(0, (unint64_t *)&qword_1EDA0FEA0);
    v15 = sub_1BC2B4478();
    *(_QWORD *)(v0 + 232) = sub_1BC12540C(v15, v16, v26);
    sub_1BC2B4FD0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BC0DC000, v7, v8, "[%{public}s] Could not mark medication education/interaction shards as required: %{public}s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v22, -1, -1);
    MEMORY[0x1BCCEF3A0](v10, -1, -1);

    v25(v24, v23);
  }
  else
  {
    v17 = *(void (**)(uint64_t, uint64_t))(v0 + 336);
    v18 = *(_QWORD *)(v0 + 296);
    v20 = *(void **)(v0 + 272);
    v19 = *(_QWORD *)(v0 + 280);

    v17(v18, v19);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC234970()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26[2];

  swift_release();
  swift_willThrow();
  v1 = *(void **)(v0 + 368);
  v2 = *(void **)(v0 + 272);

  sub_1BC2B39A4();
  v3 = v2;
  v4 = v1;
  v5 = v3;
  v6 = v1;
  v7 = sub_1BC2B39D4();
  v8 = sub_1BC2B48C8();
  if (os_log_type_enabled(v7, v8))
  {
    v24 = *(_QWORD *)(v0 + 296);
    v25 = *(void (**)(uint64_t, uint64_t))(v0 + 336);
    v9 = *(void **)(v0 + 272);
    v23 = *(_QWORD *)(v0 + 280);
    v10 = swift_slowAlloc();
    v22 = swift_slowAlloc();
    v26[0] = v22;
    *(_DWORD *)v10 = 136446466;
    *(_QWORD *)(v0 + 248) = v9;
    type metadata accessor for NewMedicationOnboardingViewController();
    v11 = v9;
    v12 = sub_1BC2B4490();
    *(_QWORD *)(v0 + 240) = sub_1BC12540C(v12, v13, v26);
    sub_1BC2B4FD0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2082;
    *(_QWORD *)(v0 + 224) = v1;
    v14 = v1;
    sub_1BC0E8778(0, (unint64_t *)&qword_1EDA0FEA0);
    v15 = sub_1BC2B4478();
    *(_QWORD *)(v0 + 232) = sub_1BC12540C(v15, v16, v26);
    sub_1BC2B4FD0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BC0DC000, v7, v8, "[%{public}s] Could not mark medication education/interaction shards as required: %{public}s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v22, -1, -1);
    MEMORY[0x1BCCEF3A0](v10, -1, -1);

    v25(v24, v23);
  }
  else
  {
    v17 = *(void (**)(uint64_t, uint64_t))(v0 + 336);
    v18 = *(_QWORD *)(v0 + 296);
    v20 = *(void **)(v0 + 272);
    v19 = *(_QWORD *)(v0 + 280);

    v17(v18, v19);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1BC234C10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;

  v4 = sub_1BC2B39E0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v8 = sub_1BC231498();
    v16 = a1;
    v17 = a2;
    swift_bridgeObjectRetain();
    sub_1BC2B44FC();
    v9 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    objc_msgSend(v8, sel_setAccessibilityIdentifier_, v9);

    v10 = sub_1BC23165C();
    v16 = a1;
    v17 = a2;
    swift_bridgeObjectRetain();
    sub_1BC2B44FC();
    v15 = (id)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    objc_msgSend(v10, sel_setAccessibilityIdentifier_, v15);

  }
  else
  {
    sub_1BC2B39A4();
    v11 = sub_1BC2B39D4();
    v12 = sub_1BC2B48C8();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_1BC0DC000, v11, v12, "Unable to set automation identifiers as there is no base identifier.", v13, 2u);
      MEMORY[0x1BCCEF3A0](v13, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

void NewMedicationOnboardingViewController.__allocating_init(dataSource:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void NewMedicationOnboardingViewController.init(dataSource:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id NewMedicationOnboardingViewController.__allocating_init(collectionViewLayout:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCollectionViewLayout_, a1);

  return v3;
}

void NewMedicationOnboardingViewController.init(collectionViewLayout:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1BC234ED0(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1BC234F00()
{
  uint64_t v0;

  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
}

id NewMedicationOnboardingViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NewMedicationOnboardingViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1BC234FF4(uint64_t a1)
{
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
}

void sub_1BC2350C0(uint64_t a1, uint64_t a2)
{
  sub_1BC234C10(a1, a2);
}

uint64_t sub_1BC2350E0()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(*v0 + qword_1EF4000B0);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1BC235138(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v5;

  v5 = (_QWORD *)(*v2 + qword_1EF4000B0);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1BC235198())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t NewMedicationOnboardingViewController.medicationDataScanner(scanner:didRecognizeSingle:fromSession:analyticsContext:analyticsEntryMode:)(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1BC235DD0(a1, a2, a3, a5);
}

void sub_1BC2351E8(uint64_t a1, char *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  char *v20;
  void *v21;
  id v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  UIViewController_optional *v28;
  void *v29;
  void *v30;
  id v31;
  void *v32;
  void *v33;
  void *v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;

  v43 = a6;
  v46 = a4;
  v47 = a5;
  v44 = sub_1BC2B39E0();
  v9 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = type metadata accessor for MedicationOnboardingFlowManager.EntryMode(0);
  MEMORY[0x1E0C80A78](v45);
  v13 = (uint64_t *)((char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = type metadata accessor for MedicationOnboardingFlowManager(0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)&a2[qword_1EF4000A0];
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a3;
  *(_QWORD *)(v18 + 24) = a2;
  v19 = a3;
  v20 = a2;
  v21 = (void *)a1;
  v48 = _sSo17UIAlertControllerC19HealthMedicationsUIE27makeAlertForExsitingConcept7concept11listManager11showHandlerABSgSo9HKConceptC_0C22RecordsConceptsSupport04ListjM0CySo022HKMedicationUserDomainJ0CctFZ_0(a1, v17, (uint64_t)sub_1BC236558, v18);
  swift_release();
  if (v48)
  {
    objc_msgSend(v19, sel_presentViewController_animated_completion_, v48, 1, 0, v43);

  }
  else
  {
    v22 = v19;
    sub_1BC236560();
    v24 = (char *)v13 + *(int *)(v23 + 48);
    *v13 = v21;
    v25 = sub_1BC2B2438();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v24, v46, v25);
    swift_storeEnumTagMultiPayload();
    v26 = *(_QWORD *)&v20[qword_1EF4000A8];
    LOBYTE(v50) = 64;
    v27 = v21;
    swift_retain();
    MedicationOnboardingFlowManager.init(entryMode:currentStep:didShowLifeStyleFactors:analyticsContext:analyticsEntryMode:)((uint64_t)v13, (unsigned __int8 *)&v50, 0, v26, v47, (uint64_t)v16);
    MedicationOnboardingFlowManager.makeNextViewControllerForStep()(v28);
    if (v29)
    {
      v30 = v29;
      v31 = objc_msgSend(v20, sel_navigationController, v43);
      if (v31)
      {
        v32 = v31;
        objc_msgSend(v31, sel_pushViewController_animated_, v30, 1);

      }
      else
      {

      }
      v33 = v19;
    }
    else
    {
      v34 = v11;
      sub_1BC2B39A4();
      v35 = sub_1BC2B39D4();
      v36 = sub_1BC2B48C8();
      v37 = v9;
      v33 = v22;
      if (os_log_type_enabled(v35, v36))
      {
        v38 = swift_slowAlloc();
        v48 = v34;
        v39 = (uint8_t *)v38;
        v40 = swift_slowAlloc();
        v50 = v40;
        *(_DWORD *)v39 = 136315138;
        v41 = sub_1BC2B54F8();
        v49 = sub_1BC12540C(v41, v42, &v50);
        sub_1BC2B4FD0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BC0DC000, v35, v36, "[%s] MedicationOnboardingFlowManager wasn't able to find next ViewController!", v39, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCEF3A0](v40, -1, -1);
        MEMORY[0x1BCCEF3A0](v39, -1, -1);

        (*(void (**)(id, uint64_t))(v37 + 8))(v48, v44);
      }
      else
      {

        (*(void (**)(void *, uint64_t))(v9 + 8))(v34, v44);
      }
    }
    objc_msgSend(v33, sel_dismissViewControllerAnimated_completion_, 1, 0, v43);
    sub_1BC0E8594((uint64_t)v16, type metadata accessor for MedicationOnboardingFlowManager);
  }
}

void sub_1BC2355C4(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5;
  void *v6;
  id v7;
  _QWORD v8[6];

  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a3;
  v8[4] = sub_1BC2365DC;
  v8[5] = v5;
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 1107296256;
  v8[2] = sub_1BC1AEAE4;
  v8[3] = &block_descriptor_60;
  v6 = _Block_copy(v8);
  v7 = a3;
  swift_release();
  objc_msgSend(a2, sel_dismissViewControllerAnimated_completion_, 1, v6);
  _Block_release(v6);
}

id NewMedicationOnboardingViewController.medicationDataScannerDidFinishWithoutResult(scanner:)(void *a1)
{
  return objc_msgSend(a1, sel_dismissViewControllerAnimated_completion_, 1, 0);
}

uint64_t sub_1BC235694(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1BC235DD0(a1, a2, a3, a5);
}

Swift::Void __swiftcall NewMedicationOnboardingViewController.searchBar(_:textDidChange:)(UISearchBar *_, Swift::String textDidChange)
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BC2B3F98();
}

uint64_t sub_1BC235728()
{
  sub_1BC2B4460();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_1BC2B3F98();
}

Swift::Void __swiftcall NewMedicationOnboardingViewController.searchBarCancelButtonClicked(_:)(UISearchBar *a1)
{
  void *v1;

  objc_msgSend(v1, sel_dismissViewControllerAnimated_completion_, 0, 0);
}

id sub_1BC2357D0(void *a1)
{
  return objc_msgSend(a1, sel_dismissViewControllerAnimated_completion_, 0, 0);
}

uint64_t sub_1BC2357E4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(_QWORD, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  void *v28;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[2];
  _QWORD v36[5];

  v31 = a3;
  v32 = a1;
  v6 = sub_1BC2B2438();
  v33 = *(_QWORD *)(v6 - 8);
  v34 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0C96198];
  sub_1BC0E2130(0, &qword_1EDA0FC20, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0C96198]);
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v30 - v13;
  sub_1BC0E2130(0, (unint64_t *)&unk_1EF4001D0, MEMORY[0x1E0DEA968], v9);
  v16 = v15;
  v17 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v30 - v18;
  v36[3] = sub_1BC2B36F8();
  v36[4] = MEMORY[0x1E0D2CA40];
  v36[0] = a2;
  *(_QWORD *)(a4 + qword_1EF3F8B80 + 8) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(a4 + qword_1EF3F8B98) = 0;
  *(_QWORD *)(a4 + qword_1EF3F8BA0) = 0;
  *(_QWORD *)(a4 + qword_1EF3F8BA8) = 0;
  *(_QWORD *)(a4 + qword_1EF3F8BB0) = 0;
  *(_QWORD *)(a4 + qword_1EF3F8BB8) = 0;
  *(_QWORD *)(a4 + qword_1EF3F8BC0) = 0;
  *(_BYTE *)(a4 + qword_1EF3F8BE8) = 1;
  v20 = a4 + qword_1EF3F8B50;
  v35[0] = 0;
  v35[1] = 0xE000000000000000;
  swift_retain();
  sub_1BC2B3F5C();
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v20, v19, v16);
  v21 = a4 + qword_1EF3F8B60;
  LOBYTE(v35[0]) = 0;
  sub_1BC2B3F5C();
  v22 = *(void (**)(uint64_t, char *, uint64_t))(v12 + 32);
  v22(v21, v14, v11);
  v23 = a4 + qword_1EF3F8B70;
  LOBYTE(v35[0]) = 0;
  sub_1BC2B3F5C();
  v22(v23, v14, v11);
  *(_QWORD *)(a4 + qword_1EF3F8BD0) = MEMORY[0x1E0DEE9E8];
  *(_BYTE *)(a4 + qword_1EF3F8BF0) = 0;
  v24 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a4 + qword_1EF4024B8) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a4 + qword_1EF3F8BD8) = v24;
  v25 = v31;
  *(_QWORD *)(a4 + qword_1EF3F8BC8) = v31;
  sub_1BC0E79F0((uint64_t)v36, a4 + qword_1EF3F8B88);
  *(_QWORD *)(a4 + qword_1EF3F8B90) = v32;
  v26 = v25;
  swift_retain();
  swift_release();
  v35[0] = 0;
  v35[1] = 0xE000000000000000;
  sub_1BC2B51BC();
  swift_bridgeObjectRelease();
  strcpy((char *)v35, "MutableArray<");
  HIWORD(v35[1]) = -4864;
  sub_1BC2B242C();
  sub_1BC2B23FC();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v8, v34);
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  sub_1BC2B44FC();
  v27 = sub_1BC2B2C00();
  swift_retain();
  sub_1BC0E96D4();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FFF0);
  swift_retain();
  v28 = (void *)sub_1BC2B4A0C();
  sub_1BC2B40DC();
  swift_release();

  swift_allocObject();
  swift_weakInit();
  swift_retain();
  swift_retain();
  sub_1BC0F2690((uint64_t)sub_1BC2366D0);
  sub_1BC2B40D0();
  swift_release();
  swift_release();
  swift_release_n();
  sub_1BC0EC64C();
  sub_1BC0ED5AC();
  sub_1BC0EC104();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v36);
  return v27;
}

uint64_t type metadata accessor for NewMedicationOnboardingViewController()
{
  uint64_t result;

  result = qword_1EF400138;
  if (!qword_1EF400138)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC235C98()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BC235CBC()
{
  char *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)&v0[qword_1EF4000B8] = 0;
  v1 = (uint64_t *)&v0[qword_1EF4000B0];
  v3 = sub_1BC2B4460();
  v4 = v2;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  *v1 = v3;
  v1[1] = v4;
  *(_QWORD *)&v0[qword_1EF4000C0] = 0x4046000000000000;
  *(_QWORD *)&v0[qword_1EF4000C8] = 0;
  *(_QWORD *)&v0[qword_1EF4000D0] = 0;
  *(_QWORD *)&v0[qword_1EF4000D8] = 0;
  *(_QWORD *)&v0[qword_1EF4000E0] = 0;

  sub_1BC2B52B8();
  __break(1u);
}

uint64_t sub_1BC235DD0(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  unint64_t v16;
  char *v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  char *v23;
  uint64_t (*v24)(uint64_t);
  uint64_t v25;
  char *v26;
  void *v27;
  void *v29;
  uint64_t ObjectType;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD aBlock[6];

  v5 = v4;
  v32 = a4;
  v29 = a1;
  ObjectType = swift_getObjectType();
  v35 = sub_1BC2B42E0();
  v38 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v34 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC2B4304();
  v36 = *(_QWORD *)(v9 - 8);
  v37 = v9;
  MEMORY[0x1E0C80A78](v9);
  v31 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BC2B2438();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FFF0);
  v33 = sub_1BC2B4A0C();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a3, v11);
  v15 = (*(unsigned __int8 *)(v12 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v16 = (v13 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  v17 = (char *)swift_allocObject();
  *((_QWORD *)v17 + 2) = a2;
  *((_QWORD *)v17 + 3) = v5;
  v18 = v29;
  *((_QWORD *)v17 + 4) = v29;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v17[v15], v14, v11);
  *(_QWORD *)&v17[v16] = v32;
  *(_QWORD *)&v17[(v16 + 15) & 0xFFFFFFFFFFFFFFF8] = ObjectType;
  aBlock[4] = sub_1BC236504;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC1AEAE4;
  aBlock[3] = &block_descriptor_51;
  v19 = _Block_copy(aBlock);
  v20 = a2;
  v21 = v5;
  v22 = v18;
  swift_release();
  v23 = v31;
  sub_1BC2B42F8();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  v24 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1BC0E519C((unint64_t *)&qword_1EDA0FFC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0FFD0, v24, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC17219C();
  v26 = v34;
  v25 = v35;
  sub_1BC2B509C();
  v27 = (void *)v33;
  MEMORY[0x1BCCEE194](0, v23, v26, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v38 + 8))(v26, v25);
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v23, v37);
}

uint64_t sub_1BC2360B4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(*a1 + qword_1EF4000B0);
  swift_beginAccess();
  v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC23610C()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for NewMedicationOnboardingViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of NewMedicationOnboardingViewController.baseIdentifier.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for NewMedicationOnboardingViewController
                              + (*MEMORY[0x1E0DEEDD8] & *v0)
                              + 120))();
}

uint64_t dispatch thunk of NewMedicationOnboardingViewController.baseIdentifier.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for NewMedicationOnboardingViewController
                              + (*MEMORY[0x1E0DEEDD8] & *v0)
                              + 128))();
}

uint64_t dispatch thunk of NewMedicationOnboardingViewController.baseIdentifier.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for NewMedicationOnboardingViewController
                              + (*MEMORY[0x1E0DEEDD8] & *v0)
                              + 136))();
}

uint64_t dispatch thunk of NewMedicationOnboardingViewController.__allocating_init(healthStore:listManager:analyticsContext:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(class metadata base offset for NewMedicationOnboardingViewController + v0 + 224))();
}

uint64_t dispatch thunk of NewMedicationOnboardingViewController.didSelectRootMedication(item:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for NewMedicationOnboardingViewController
                              + (*MEMORY[0x1E0DEEDD8] & *v0)
                              + 280))();
}

uint64_t dispatch thunk of NewMedicationOnboardingViewController.didStartManualEntry(hadSearchResults:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for NewMedicationOnboardingViewController
                              + (*MEMORY[0x1E0DEEDD8] & *v0)
                              + 288))();
}

uint64_t dispatch thunk of NewMedicationOnboardingViewController.updateAutomationIdentifiers(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for NewMedicationOnboardingViewController
                              + (*MEMORY[0x1E0DEEDD8] & *v0)
                              + 336))();
}

uint64_t sub_1BC2362A4()
{
  return type metadata accessor for NewMedicationOnboardingViewController();
}

uint64_t sub_1BC2362AC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC2362D0()
{
  uint64_t v0;

  return sub_1BC233DE0(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1BC2362D8()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1BC2362FC()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_setFrame_, *(double *)(v0 + 24), *(double *)(v0 + 32), *(double *)(v0 + 40), *(double *)(v0 + 48));
}

uint64_t sub_1BC236314()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1BC236340(uint64_t a1)
{
  uint64_t v1;

  sub_1BC233EAC(*(double *)(v1 + 16), a1, *(void **)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_1BC23634C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BC236378()
{
  uint64_t v0;

  return sub_1BC234008(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1BC236380()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1BC2363A4()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_removeFromSuperview);
}

id sub_1BC2363B4()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_becomeFirstResponder);
}

uint64_t sub_1BC2363C4()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1BC2363F0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1BC0FEB64;
  return sub_1BC23424C(a1, v4, v5, v6);
}

void sub_1BC23645C(uint64_t a1)
{
  uint64_t v1;

  sub_1BC23355C(a1, v1);
}

void sub_1BC236464(uint64_t a1)
{
  uint64_t v1;

  sub_1BC231BF8(a1, v1);
}

uint64_t sub_1BC23646C()
{
  id *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1BC2B2438();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(char *, uint64_t))(v2 + 8))((char *)v0 + v3, v1);
  return swift_deallocObject();
}

void sub_1BC236504()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(sub_1BC2B2438() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1BC2351E8(*(_QWORD *)(v0 + 16), *(char **)(v0 + 24), *(void **)(v0 + 32), v0 + v2, *(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFF8)));
}

void sub_1BC236558(uint64_t a1)
{
  uint64_t v1;

  sub_1BC2355C4(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

void sub_1BC236560()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF4001B0)
  {
    sub_1BC0E1D38(255, (unint64_t *)&qword_1EF400130);
    sub_1BC2B2438();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF4001B0);
  }
}

id sub_1BC2365DC()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_dismissViewControllerAnimated_completion_, 1, 0);
}

void sub_1BC2365F4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF4001B8)
  {
    sub_1BC0E2130(255, &qword_1EDA0FC10, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0C96180]);
    sub_1BC0E1D38(255, (unint64_t *)&qword_1EDA0FFF0);
    sub_1BC1A514C();
    sub_1BC1019D8();
    v0 = sub_1BC2B3E60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF4001B8);
  }
}

void sub_1BC2366A4(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_1BC23244C(a1, v1);
}

uint64_t sub_1BC2366AC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC2366D0()
{
  return sub_1BC23DBC0();
}

uint64_t MedicationsDoseLogViewModel.__allocating_init(medication:doseEvent:scheduleItem:logDate:dosage:index:)(void *a1, void *a2, uint64_t a3, char *a4, uint64_t a5, double a6)
{
  uint64_t v12;

  v12 = swift_allocObject();
  MedicationsDoseLogViewModel.init(medication:doseEvent:scheduleItem:logDate:dosage:index:)(a1, a2, a3, a4, a5, a6);
  return v12;
}

uint64_t MedicationDoseLogListViewModel.__allocating_init(date:title:medicationDoses:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v8 = swift_allocObject();
  v9 = v8 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationDoseLogListViewModel_date;
  v10 = sub_1BC2B23F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9, a1, v10);
  v11 = (_QWORD *)(v8 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationDoseLogListViewModel_title);
  *v11 = a2;
  v11[1] = a3;
  *(_QWORD *)(v8 + 16) = a4;
  return v8;
}

double *MedicationsDoseLogViewModel.init(medication:doseEvent:scheduleItem:logDate:dosage:index:)(void *a1, void *a2, uint64_t a3, char *a4, uint64_t a5, double a6)
{
  double *v6;
  double *v7;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  char v25;
  id v26;
  void (*v27)(char *, char *, uint64_t);
  id v28;
  char *v29;
  _QWORD v31[2];
  char *v32;
  id v33;
  char *v34;
  uint64_t v35;

  v7 = v6;
  v35 = a5;
  v13 = sub_1BC2B23F0();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v34 = (char *)v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v31 - v17;
  *((_QWORD *)v7 + 2) = a1;
  *((_QWORD *)v7 + 3) = a2;
  *((_QWORD *)v7 + 4) = a3;
  v33 = a1;
  v19 = a2;
  swift_retain();
  swift_release();
  if (a2
    && ((v20 = objc_msgSend(v19, sel_doseQuantity)) != 0
     || (v20 = objc_msgSend(v19, sel_scheduledDoseQuantity)) != 0))
  {
    objc_msgSend(v20, sel_doubleValue);
    v22 = v21;

    *((_QWORD *)v7 + 5) = v22;
  }
  else
  {
    if (a3)
    {
      sub_1BC2B32C0();
      a6 = v23;
    }
    v7[5] = a6;
    if (!a2)
    {
      v24 = 1;
      *((_QWORD *)v7 + 6) = 1;
      goto LABEL_9;
    }
  }
  *((_QWORD *)v7 + 6) = objc_msgSend(v19, sel_status);
  v24 = (uint64_t)objc_msgSend(v19, sel_status);
LABEL_9:
  v31[1] = a3;
  *(_QWORD *)((char *)v7 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_initialStatus) = v24;
  v25 = sub_1BC23E1CC(*((_QWORD *)v7 + 6), (uint64_t)&unk_1E74AFDA8);
  v32 = a4;
  if (a2 && (v25 & 1) != 0)
  {
    v26 = objc_msgSend(v19, sel_startDate);
    sub_1BC2B23A8();

  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v18, a4, v13);
  }
  v27 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v27((char *)v7 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_logDate, v18, v13);
  if ((sub_1BC23E1CC(*((_QWORD *)v7 + 6), (uint64_t)&unk_1E74AFDA8) & 1) != 0 && a2)
  {
    v28 = objc_msgSend(v19, (SEL)&selRef_setEnabled_);
    v29 = v34;
    sub_1BC2B23A8();

    swift_release();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v32, v13);
  }
  else
  {

    swift_release();
    v29 = v34;
    v27(v34, v32, v13);
  }
  v27((char *)v7 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_initialLogDate, v29, v13);
  *(double *)((char *)v7 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_initialDoseAmount) = v7[5];
  *(_QWORD *)((char *)v7 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_index) = v35;
  return v7;
}

uint64_t sub_1BC236B0C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v15;
  __int128 v16;
  __int128 v17;

  v1 = v0;
  v2 = *(void **)(v0 + 24);
  if (!v2)
    goto LABEL_11;
  v3 = v2;
  v4 = objc_msgSend(v3, sel_metadata);
  if (!v4)
  {

    v16 = 0u;
    v17 = 0u;
    goto LABEL_10;
  }
  v5 = v4;
  v6 = sub_1BC2B43B8();

  v7 = sub_1BC2B4460();
  if (!*(_QWORD *)(v6 + 16) || (v9 = sub_1BC107DA4(v7, v8), (v10 & 1) == 0))
  {
    v16 = 0u;
    v17 = 0u;
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_1BC127E34(*(_QWORD *)(v6 + 56) + 32 * v9, (uint64_t)&v16);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v17 + 1))
  {
LABEL_10:
    sub_1BC10BA60((uint64_t)&v16);
    goto LABEL_11;
  }
  if (!swift_dynamicCast())
  {
LABEL_11:
    v12 = objc_msgSend(*(id *)(v1 + 16), sel_semanticIdentifier);
    v13 = objc_msgSend(v12, sel_stringValue);

    v11 = sub_1BC2B4460();
    return v11;
  }
  return v15;
}

BOOL sub_1BC236C98()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 24);
  if (v1)
    return objc_msgSend(v1, sel_logOrigin) == (id)2;
  else
    return *(_QWORD *)(v0 + 32) != 0;
}

uint64_t sub_1BC236CD8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_1BC237854();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void **)(v1 + 24);
  if (v6)
  {
    v7 = v6;
    v8 = objc_msgSend(v7, sel_scheduledDate);
    if (v8)
    {
      v9 = v8;
      sub_1BC2B23A8();

      v10 = sub_1BC2B23F0();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v5, 0, 1, v10);
    }
    else
    {

      v13 = sub_1BC2B23F0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v5, 1, 1, v13);
    }
    return sub_1BC141D44((uint64_t)v5, a1);
  }
  else if (*(_QWORD *)(v1 + 32))
  {
    swift_retain();
    sub_1BC2B32E4();
    swift_release();
    v11 = sub_1BC2B23F0();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a1, 0, 1, v11);
  }
  else
  {
    v14 = sub_1BC2B23F0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a1, 1, 1, v14);
  }
}

uint64_t sub_1BC236E38@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  unsigned int *v11;
  uint64_t v12;
  int *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int *v26;
  int *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;

  sub_1BC237854();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void **)(v1 + 24);
  if (v6)
  {
    v7 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_logDate;
    swift_beginAccess();
    v8 = sub_1BC2B23F0();
    v9 = *(_QWORD *)(v8 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v5, v7, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
    v10 = v6;
    sub_1BC2B3620();
    v11 = (unsigned int *)MEMORY[0x1E0D2C970];
  }
  else
  {
    v12 = *(_QWORD *)(v1 + 32);
    if (v12)
    {
      sub_1BC237C48();
      v14 = (char *)a1 + v13[16];
      v15 = v13[20];
      v16 = (char *)a1 + v13[24];
      v17 = *(void **)(v1 + 16);
      swift_retain();
      v18 = objc_msgSend(v17, sel_semanticIdentifier);
      v19 = objc_msgSend(v18, sel_stringValue);

      v20 = sub_1BC2B4460();
      v22 = v21;

      *a1 = v20;
      a1[1] = v22;
      a1[2] = v12;
      v23 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_logDate;
      swift_beginAccess();
      v24 = sub_1BC2B23F0();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v14, v23, v24);
      v25 = *(_QWORD *)(v1 + 40);
      *(uint64_t *)((char *)a1 + v15) = *(_QWORD *)(v1 + 48);
      *(_QWORD *)v16 = v25;
      v16[8] = 0;
      v26 = (unsigned int *)MEMORY[0x1E0D2C8F8];
    }
    else
    {
      sub_1BC237B1C();
      v28 = (char *)a1 + v27[12];
      v29 = v27[16];
      v30 = (char *)a1 + v27[20];
      v31 = objc_msgSend(*(id *)(v1 + 16), sel_semanticIdentifier);
      v32 = objc_msgSend(v31, sel_stringValue);

      v33 = sub_1BC2B4460();
      v35 = v34;

      *a1 = v33;
      a1[1] = v35;
      v36 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_logDate;
      swift_beginAccess();
      v37 = sub_1BC2B23F0();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v28, v36, v37);
      v38 = *(_QWORD *)(v1 + 40);
      *(uint64_t *)((char *)a1 + v29) = *(_QWORD *)(v1 + 48);
      *(_QWORD *)v30 = v38;
      v30[8] = 0;
      v26 = (unsigned int *)MEMORY[0x1E0D2C8F0];
    }
    v39 = *v26;
    v40 = sub_1BC2B359C();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 104))(a1, v39, v40);
    v11 = (unsigned int *)MEMORY[0x1E0D2C968];
  }
  v41 = *v11;
  v42 = sub_1BC2B3614();
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 104))(a1, v41, v42);
}

uint64_t sub_1BC23713C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  double v12;
  double v13;
  id v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  char v17;
  uint64_t v19;

  v1 = sub_1BC2B23F0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v19 - v6;
  v8 = *(void **)(v0 + 24);
  if (v8)
  {
    v9 = v8;
    if (objc_msgSend(v9, sel_status) == *(id *)(v0 + 48)
      && (v10 = objc_msgSend(v9, sel_doseQuantity)) != 0
      && (v11 = v10, objc_msgSend(v10, sel_doubleValue), v13 = v12, v11, v13 == *(double *)(v0 + 40)))
    {
      v14 = objc_msgSend(v9, sel_startDate);
      sub_1BC2B23A8();

      v15 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_logDate;
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v15, v1);
      sub_1BC0E519C(&qword_1EF3FCC08, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
      LOBYTE(v15) = sub_1BC2B4424();

      v16 = *(void (**)(char *, uint64_t))(v2 + 8);
      v16(v5, v1);
      v16(v7, v1);
      v17 = v15 ^ 1;
    }
    else
    {

      v17 = 1;
    }
  }
  else
  {
    v17 = *(_QWORD *)(v0 + 48) != *(_QWORD *)(v0
                                            + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_initialStatus);
  }
  return v17 & 1;
}

uint64_t sub_1BC23731C()
{
  sub_1BC236B0C();
  sub_1BC2B44D8();
  return swift_bridgeObjectRelease();
}

uint64_t static MedicationsDoseLogViewModel.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v0 = sub_1BC236B0C();
  v2 = v1;
  if (v0 == sub_1BC236B0C() && v2 == v3)
    v4 = 1;
  else
    v4 = sub_1BC2B53CC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t MedicationsDoseLogViewModel.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_logDate;
  v2 = sub_1BC2B23F0();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_initialLogDate, v2);
  return v0;
}

uint64_t MedicationsDoseLogViewModel.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_logDate;
  v2 = sub_1BC2B23F0();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_initialLogDate, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1BC2374E8()
{
  sub_1BC2B5450();
  sub_1BC236B0C();
  sub_1BC2B44D8();
  swift_bridgeObjectRelease();
  return sub_1BC2B548C();
}

uint64_t sub_1BC237540()
{
  sub_1BC2B5450();
  sub_1BC236B0C();
  sub_1BC2B44D8();
  swift_bridgeObjectRelease();
  return sub_1BC2B548C();
}

uint64_t sub_1BC23759C()
{
  sub_1BC236B0C();
  sub_1BC2B44D8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC2375DC()
{
  sub_1BC2B5450();
  sub_1BC236B0C();
  sub_1BC2B44D8();
  swift_bridgeObjectRelease();
  return sub_1BC2B548C();
}

uint64_t sub_1BC237634()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_1BC236B0C();
  v2 = v1;
  if (v0 == sub_1BC236B0C() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_1BC2B53CC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t MedicationDoseLogListViewModel.init(date:title:medicationDoses:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v9 = v4 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationDoseLogListViewModel_date;
  v10 = sub_1BC2B23F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9, a1, v10);
  v11 = (_QWORD *)(v4 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationDoseLogListViewModel_title);
  *v11 = a2;
  v11[1] = a3;
  *(_QWORD *)(v4 + 16) = a4;
  return v4;
}

uint64_t MedicationDoseLogListViewModel.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationDoseLogListViewModel_date;
  v2 = sub_1BC2B23F0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MedicationDoseLogListViewModel.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationDoseLogListViewModel_date;
  v2 = sub_1BC2B23F0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC237804()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI32MedicationDoseRecordAllViewModel_logDate;
  v2 = sub_1BC2B23F0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

void sub_1BC237854()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDA0E710)
  {
    sub_1BC2B23F0();
    v0 = sub_1BC2B4FA0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDA0E710);
  }
}

uint64_t sub_1BC2378A8()
{
  return sub_1BC0E519C(&qword_1EF4001E0, type metadata accessor for MedicationsDoseLogViewModel, (uint64_t)&protocol conformance descriptor for MedicationsDoseLogViewModel);
}

uint64_t type metadata accessor for MedicationsDoseLogViewModel(uint64_t a1)
{
  return sub_1BC0E5428(a1, (uint64_t *)&unk_1EDA0F858);
}

uint64_t sub_1BC2378E8()
{
  return type metadata accessor for MedicationsDoseLogViewModel(0);
}

uint64_t sub_1BC2378F0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC2B23F0();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for MedicationsDoseLogViewModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicationsDoseLogViewModel.__allocating_init(medication:doseEvent:scheduleItem:logDate:dosage:index:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 328))();
}

uint64_t dispatch thunk of MedicationsDoseLogViewModel.isScheduled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 344))();
}

uint64_t dispatch thunk of MedicationsDoseLogViewModel.scheduleDate.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 352))();
}

uint64_t dispatch thunk of MedicationsDoseLogViewModel.hash(into:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 400))();
}

uint64_t dispatch thunk of MedicationsDoseLogViewModel.hashValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 472))();
}

uint64_t sub_1BC2379D4()
{
  return type metadata accessor for MedicationDoseLogListViewModel(0);
}

uint64_t type metadata accessor for MedicationDoseLogListViewModel(uint64_t a1)
{
  return sub_1BC0E5428(a1, (uint64_t *)&unk_1EDA0FA60);
}

uint64_t sub_1BC2379F0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC2B23F0();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for MedicationDoseLogListViewModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicationDoseLogListViewModel.__allocating_init(date:title:medicationDoses:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t sub_1BC237A88()
{
  return type metadata accessor for MedicationDoseRecordAllViewModel(0);
}

uint64_t type metadata accessor for MedicationDoseRecordAllViewModel(uint64_t a1)
{
  return sub_1BC0E5428(a1, (uint64_t *)&unk_1EDA0FA70);
}

uint64_t sub_1BC237AA4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC2B23F0();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void sub_1BC237B1C()
{
  unint64_t TupleTypeMetadata;
  uint64_t v1;

  if (!qword_1EF4001E8)
  {
    MEMORY[0x1E0C80A78](0);
    sub_1BC2B23F0();
    type metadata accessor for HKMedicationDoseEventStatus(255);
    sub_1BC237D90(255, &qword_1EF4001F0);
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1)
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1EF4001E8);
  }
}

void sub_1BC237C48()
{
  unint64_t TupleTypeMetadata;
  uint64_t v1;

  if (!qword_1EF4001F8)
  {
    MEMORY[0x1E0C80A78](0);
    sub_1BC2B32F0();
    sub_1BC2B23F0();
    type metadata accessor for HKMedicationDoseEventStatus(255);
    sub_1BC237D90(255, &qword_1EF4001F0);
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1)
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1EF4001F8);
  }
}

void sub_1BC237D90(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1BC2B4FA0();
    if (!v4)
      atomic_store(v3, a2);
  }
}

uint64_t MedicationInfoItem.__allocating_init(medmoji:name:strength:ingredients:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;

  v12 = swift_allocObject();
  type metadata accessor for MedicationInfoItemCell();
  sub_1BC238038();
  *(_QWORD *)(v12 + 16) = sub_1BC2B2930();
  *(_QWORD *)(v12 + 24) = v13;
  sub_1BC109D88(a1, v12 + OBJC_IVAR____TtC19HealthMedicationsUI18MedicationInfoItem_medmoji);
  v14 = (_QWORD *)(v12 + OBJC_IVAR____TtC19HealthMedicationsUI18MedicationInfoItem_name);
  *v14 = a2;
  v14[1] = a3;
  v15 = (_QWORD *)(v12 + OBJC_IVAR____TtC19HealthMedicationsUI18MedicationInfoItem_strength);
  *v15 = a4;
  v15[1] = a5;
  *(_QWORD *)(v12 + OBJC_IVAR____TtC19HealthMedicationsUI18MedicationInfoItem_ingredients) = a6;
  return v12;
}

uint64_t MedicationInfoItem.reuseIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*MedicationInfoItem.reuseIdentifier.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t _s19HealthMedicationsUI18MedicationInfoItemC15reuseIdentifierSSvg_0()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MedicationInfoItem.init(medmoji:name:strength:ingredients:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;

  type metadata accessor for MedicationInfoItemCell();
  sub_1BC238038();
  *(_QWORD *)(v6 + 16) = sub_1BC2B2930();
  *(_QWORD *)(v6 + 24) = v13;
  sub_1BC109D88(a1, v6 + OBJC_IVAR____TtC19HealthMedicationsUI18MedicationInfoItem_medmoji);
  v14 = (_QWORD *)(v6 + OBJC_IVAR____TtC19HealthMedicationsUI18MedicationInfoItem_name);
  *v14 = a2;
  v14[1] = a3;
  v15 = (_QWORD *)(v6 + OBJC_IVAR____TtC19HealthMedicationsUI18MedicationInfoItem_strength);
  *v15 = a4;
  v15[1] = a5;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC19HealthMedicationsUI18MedicationInfoItem_ingredients) = a6;
  return v6;
}

uint64_t type metadata accessor for MedicationInfoItemCell()
{
  return objc_opt_self();
}

unint64_t sub_1BC238038()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3F9A20;
  if (!qword_1EF3F9A20)
  {
    v1 = type metadata accessor for MedicationInfoItemCell();
    result = MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for MedicationInfoItemCell, v1);
    atomic_store(result, (unint64_t *)&qword_1EF3F9A20);
  }
  return result;
}

uint64_t MedicationInfoItem.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1BC0E1CFC(v0 + OBJC_IVAR____TtC19HealthMedicationsUI18MedicationInfoItem_medmoji, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MedicationInfoItem.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1BC0E1CFC(v0 + OBJC_IVAR____TtC19HealthMedicationsUI18MedicationInfoItem_medmoji, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC238174()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 16);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t MedicationInfoItemCell.item.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell_item;
  swift_beginAccess();
  return sub_1BC0E1CB0(v3, a1, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
}

uint64_t sub_1BC238220(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _BYTE v5[40];

  sub_1BC0E1CB0(a1, (uint64_t)v5, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
  v3 = *a2 + OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell_item;
  swift_beginAccess();
  sub_1BC0F3E44((uint64_t)v5, v3);
  swift_endAccess();
  sub_1BC238334();
  return sub_1BC0E1CFC((uint64_t)v5, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
}

uint64_t MedicationInfoItemCell.item.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell_item;
  swift_beginAccess();
  sub_1BC0F3E44(a1, v3);
  swift_endAccess();
  sub_1BC238334();
  return sub_1BC0E1CFC(a1, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
}

void sub_1BC238334()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[5];

  v1 = v0;
  v2 = sub_1BC2B39E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v26 - v7;
  v9 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell_item;
  swift_beginAccess();
  sub_1BC0E1CB0(v9, (uint64_t)v30, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
  if (v30[3])
  {
    sub_1BC0E1B94();
    type metadata accessor for MedicationInfoItem();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v10 = v29;
      v11 = sub_1BC238868();
      sub_1BC0E1CB0(v10 + OBJC_IVAR____TtC19HealthMedicationsUI18MedicationInfoItem_medmoji, (uint64_t)v8, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
      sub_1BC2B3308();

      v12 = sub_1BC238A04(&OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell____lazy_storage___nameLabel, 2, (SEL *)&selRef_labelColor);
      swift_bridgeObjectRetain();
      v13 = (void *)sub_1BC2B4430();
      swift_bridgeObjectRelease();
      objc_msgSend(v12, sel_setText_, v13);

      v14 = sub_1BC238A04(&OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell____lazy_storage___strengthLabel, 0, (SEL *)&selRef_labelColor);
      swift_bridgeObjectRetain();
      v15 = (void *)sub_1BC2B4430();
      swift_bridgeObjectRelease();
      objc_msgSend(v14, sel_setText_, v15);

      v16 = sub_1BC238A04(&OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell____lazy_storage___ingredientsLabel, 0, (SEL *)&selRef_secondaryLabelColor);
      v30[0] = *(_QWORD *)(v10 + OBJC_IVAR____TtC19HealthMedicationsUI18MedicationInfoItem_ingredients);
      sub_1BC0E2130(0, (unint64_t *)&qword_1EF3FA018, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BC11BF0C();
      swift_bridgeObjectRetain();
      sub_1BC2B440C();
      swift_bridgeObjectRelease();
      v17 = (void *)sub_1BC2B4430();
      swift_bridgeObjectRelease();
      objc_msgSend(v16, sel_setText_, v17);
      swift_release();

      return;
    }
  }
  else
  {
    sub_1BC0E1CFC((uint64_t)v30, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
  }
  sub_1BC2B39A4();
  v18 = v1;
  v19 = sub_1BC2B39D4();
  v20 = sub_1BC2B48C8();
  if (os_log_type_enabled(v19, v20))
  {
    v28 = v2;
    v21 = (uint8_t *)swift_slowAlloc();
    v22 = swift_slowAlloc();
    v27 = v3;
    v23 = v22;
    v29 = v22;
    *(_DWORD *)v21 = 136446210;
    v26 = v21 + 4;
    sub_1BC0E1CB0(v9, (uint64_t)v30, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
    sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
    v24 = sub_1BC2B4490();
    v30[0] = sub_1BC12540C(v24, v25, &v29);
    sub_1BC2B4FD0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC0DC000, v19, v20, "Incorrect view model for MedicationInfoItem: %{public}s", v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v23, -1, -1);
    MEMORY[0x1BCCEF3A0](v21, -1, -1);

    (*(void (**)(char *, uint64_t))(v27 + 8))(v5, v28);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

void (*MedicationInfoItemCell.item.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC238838;
}

void sub_1BC238838(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    sub_1BC238334();
}

id sub_1BC238868()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell____lazy_storage___medmojiView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell____lazy_storage___medmojiView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell____lazy_storage___medmojiView);
  }
  else
  {
    v4 = v0;
    v5 = objc_msgSend(objc_allocWithZone((Class)sub_1BC2B3320()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    v6 = (id)*MEMORY[0x1E0CD2A68];
    sub_1BC2B4C88();

    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v7 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

id sub_1BC238930()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell____lazy_storage___stackView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell____lazy_storage___stackView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell____lazy_storage___stackView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3CA8]), sel_init);
    objc_msgSend(v4, sel_setAxis_, 1);
    objc_msgSend(v4, sel_setAlignment_, 1);
    objc_msgSend(v4, sel_setDistribution_, 0);
    objc_msgSend(v4, sel_setSpacing_, 4.0);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC238A04(uint64_t *a1, uint64_t a2, SEL *a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  id v15;

  v4 = *a1;
  v5 = *(void **)(v3 + *a1);
  if (v5)
  {
    v6 = *(id *)(v3 + *a1);
  }
  else
  {
    v8 = v3;
    v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
    v10 = (void *)sub_1BC2B4C64();
    objc_msgSend(v9, sel_setFont_, v10);

    objc_msgSend(v9, sel_setAdjustsFontForContentSizeCategory_, 1);
    v11 = objc_msgSend((id)objc_opt_self(), *a3);
    objc_msgSend(v9, sel_setTextColor_, v11);

    objc_msgSend(v9, sel_setNumberOfLines_, 0);
    objc_msgSend(v9, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v6 = v9;
    v12 = (void *)sub_1BC2B4580();
    v13 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v6, sel_setAccessibilityIdentifier_, v13);
    v14 = *(void **)(v8 + v4);
    *(_QWORD *)(v8 + v4) = v6;

    v5 = 0;
  }
  v15 = v5;
  return v6;
}

id sub_1BC238BA8(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  char *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  void *v60;
  objc_super v62;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell_item];
  *(_OWORD *)v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  *((_QWORD *)v10 + 4) = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell____lazy_storage___medmojiView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell____lazy_storage___stackView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell____lazy_storage___nameLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell____lazy_storage___strengthLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell____lazy_storage___ingredientsLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell_width] = 0x4040800000000000;
  v62.receiver = v4;
  v62.super_class = ObjectType;
  v11 = objc_msgSendSuper2(&v62, sel_initWithFrame_, a1, a2, a3, a4);
  objc_msgSend(v11, sel_setUserInteractionEnabled_, 0);
  v12 = sub_1BC238930();
  v13 = sub_1BC238A04(&OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell____lazy_storage___nameLabel, 2, (SEL *)&selRef_labelColor);
  objc_msgSend(v12, sel_addArrangedSubview_, v13);

  v14 = sub_1BC238930();
  v15 = sub_1BC238A04(&OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell____lazy_storage___strengthLabel, 0, (SEL *)&selRef_labelColor);
  objc_msgSend(v14, sel_addArrangedSubview_, v15);

  v16 = sub_1BC238930();
  v17 = sub_1BC238A04(&OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell____lazy_storage___ingredientsLabel, 0, (SEL *)&selRef_secondaryLabelColor);
  objc_msgSend(v16, sel_addArrangedSubview_, v17);

  v18 = objc_msgSend(v11, sel_contentView);
  v19 = sub_1BC238868();
  objc_msgSend(v18, sel_addSubview_, v19);

  v20 = objc_msgSend(v11, sel_contentView);
  v21 = sub_1BC238930();
  objc_msgSend(v20, sel_addSubview_, v21);

  v22 = (void *)objc_opt_self();
  sub_1BC0E2130(0, (unint64_t *)&qword_1EDA0FEF0, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1BC2BA310;
  v24 = sub_1BC238868();
  v25 = objc_msgSend(v24, sel_topAnchor);

  v26 = objc_msgSend(v11, sel_contentView);
  v27 = objc_msgSend(v26, sel_topAnchor);

  v28 = objc_msgSend(v25, sel_constraintEqualToAnchor_constant_, v27, 16.0);
  *(_QWORD *)(v23 + 32) = v28;
  v29 = sub_1BC238868();
  v30 = objc_msgSend(v29, sel_leadingAnchor);

  v31 = objc_msgSend(v11, sel_contentView);
  v32 = objc_msgSend(v31, sel_leadingAnchor);

  v33 = objc_msgSend(v30, sel_constraintEqualToAnchor_constant_, v32, 16.0);
  *(_QWORD *)(v23 + 40) = v33;
  v34 = sub_1BC238868();
  v35 = objc_msgSend(v34, sel_widthAnchor);

  v36 = objc_msgSend(v35, sel_constraintEqualToConstant_, 33.0);
  *(_QWORD *)(v23 + 48) = v36;
  v37 = sub_1BC238868();
  v38 = objc_msgSend(v37, sel_heightAnchor);

  v39 = objc_msgSend(v38, sel_constraintEqualToConstant_, 33.0);
  *(_QWORD *)(v23 + 56) = v39;
  v40 = sub_1BC238930();
  v41 = objc_msgSend(v40, sel_leadingAnchor);

  v42 = sub_1BC238868();
  v43 = objc_msgSend(v42, sel_trailingAnchor);

  v44 = objc_msgSend(v41, sel_constraintEqualToAnchor_constant_, v43, 16.0);
  *(_QWORD *)(v23 + 64) = v44;
  v45 = sub_1BC238930();
  v46 = objc_msgSend(v45, sel_trailingAnchor);

  v47 = objc_msgSend(v11, sel_contentView);
  v48 = objc_msgSend(v47, sel_trailingAnchor);

  v49 = objc_msgSend(v46, sel_constraintEqualToAnchor_constant_, v48, -16.0);
  *(_QWORD *)(v23 + 72) = v49;
  v50 = sub_1BC238930();
  v51 = objc_msgSend(v50, sel_topAnchor);

  v52 = objc_msgSend(v11, sel_contentView);
  v53 = objc_msgSend(v52, sel_topAnchor);

  v54 = objc_msgSend(v51, sel_constraintEqualToAnchor_constant_, v53, 16.0);
  *(_QWORD *)(v23 + 80) = v54;
  v55 = sub_1BC238930();
  v56 = objc_msgSend(v55, sel_bottomAnchor);

  v57 = objc_msgSend(v11, sel_contentView);
  v58 = objc_msgSend(v57, sel_bottomAnchor);

  v59 = objc_msgSend(v56, sel_constraintEqualToAnchor_constant_, v58, -16.0);
  *(_QWORD *)(v23 + 88) = v59;
  sub_1BC2B45A4();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
  v60 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  objc_msgSend(v22, sel_activateConstraints_, v60);

  return v11;
}

id MedicationInfoItemCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC239374@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell_item;
  swift_beginAccess();
  return sub_1BC0E1CB0(v3, a1, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
}

uint64_t sub_1BC2393D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell_item;
  swift_beginAccess();
  sub_1BC0F3E44(a1, v3);
  swift_endAccess();
  sub_1BC238334();
  return sub_1BC0E1CFC(a1, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
}

void (*sub_1BC239450(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC238838;
}

uint64_t sub_1BC239498@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell_item;
  swift_beginAccess();
  return sub_1BC0E1CB0(v3, a2, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
}

uint64_t sub_1BC239500()
{
  return type metadata accessor for MedicationInfoItem();
}

uint64_t type metadata accessor for MedicationInfoItem()
{
  uint64_t result;

  result = qword_1EF400230;
  if (!qword_1EF400230)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BC239544()
{
  unint64_t v0;

  sub_1BC0E1C64(319, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for MedicationInfoItem()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicationInfoItem.__allocating_init(medmoji:name:strength:ingredients:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

void sub_1BC2395F0()
{
  char *v0;
  char *v1;

  v1 = &v0[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell_item];
  *(_OWORD *)v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((_QWORD *)v1 + 4) = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell____lazy_storage___medmojiView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell____lazy_storage___stackView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell____lazy_storage___nameLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell____lazy_storage___strengthLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell____lazy_storage___ingredientsLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell_width] = 0x4040800000000000;

  sub_1BC2B52B8();
  __break(1u);
}

void sub_1BC2396B4(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BC239704(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1BC239764 + 4 * byte_1BC2C3964[a2]))(0x656863536174656DLL);
}

uint64_t sub_1BC239764(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x656863536174656DLL && v1 == 0xEC000000656C7564)
    v2 = 1;
  else
    v2 = sub_1BC2B53CC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1BC239808(char a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  id v18;
  void *v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  Swift::String v24;
  uint64_t v25;
  char v26;
  id v27;
  uint64_t v28;
  Swift::String v29;
  id v30;
  uint64_t v32;

  v2 = v1;
  v4 = sub_1BC2B2594();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v32 - v9;
  v11 = sub_1BC2B23F0();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v32 - v16;
  v18 = objc_msgSend(v2, sel_endDateTime);
  if (!v18)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
    goto LABEL_8;
  }
  v19 = v18;
  sub_1BC2B23A8();

  v20 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v20(v10, v15, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
LABEL_8:
    sub_1BC0F2444((uint64_t)v10, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    return 0;
  }
  v20(v17, v10, v11);
  sub_1BC2B2564();
  sub_1BC2B23B4();
  v21 = sub_1BC2B2504();
  v22 = *(void (**)(char *, uint64_t))(v12 + 8);
  v22(v15, v11);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if ((a1 & 1) != 0)
  {
    if (v21 < 0)
    {
      sub_1BC0E7998(0, qword_1EDA0ED40, (uint64_t (*)(uint64_t))sub_1BC15DBC0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v23 = swift_allocObject();
      *(_OWORD *)(v23 + 16) = xmmword_1BC2B92D0;
      v24 = Date.formattedWithYearIfDifferent()();
      *(_QWORD *)(v23 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v23 + 64) = sub_1BC0F2748();
      *(Swift::String *)(v23 + 32) = v24;
      if (qword_1EDA0FEE8 == -1)
        goto LABEL_20;
      goto LABEL_25;
    }
LABEL_12:
    if (v21 == 1)
    {
      if (qword_1EDA0FEE8 == -1)
        goto LABEL_18;
    }
    else
    {
      if (v21)
      {
        sub_1BC0E7998(0, qword_1EDA0ED40, (uint64_t (*)(uint64_t))sub_1BC15DBC0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
        v28 = swift_allocObject();
        *(_OWORD *)(v28 + 16) = xmmword_1BC2B92D0;
        v29 = Date.formattedWithYearIfDifferent()();
        *(_QWORD *)(v28 + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v28 + 64) = sub_1BC0F2748();
        *(Swift::String *)(v28 + 32) = v29;
        if (qword_1EDA0FEE8 == -1)
        {
LABEL_20:
          v30 = (id)qword_1EDA0FEF8;
          swift_bridgeObjectRetain();
          sub_1BC2B2144();
          v25 = sub_1BC2B443C();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_21;
        }
LABEL_25:
        swift_once();
        goto LABEL_20;
      }
      if (qword_1EDA0FEE8 == -1)
      {
LABEL_18:
        v27 = (id)qword_1EDA0FEF8;
        swift_bridgeObjectRetain();
        v25 = sub_1BC2B2144();
        swift_bridgeObjectRelease();

LABEL_21:
        v22(v17, v11);
        return v25;
      }
    }
    swift_once();
    goto LABEL_18;
  }
  sub_1BC2B2330();
  sub_1BC0E008C(qword_1EDA0EA98, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
  v26 = sub_1BC2B4418();
  v22(v15, v11);
  if ((v26 & 1) == 0 && (v21 & 0x8000000000000000) == 0)
    goto LABEL_12;
  v22(v17, v11);
  return 0;
}

uint64_t MedicationListViewData.medmojiConfig.getter()
{
  return _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE7medmoji0eF10Experience29MedicationVisualizationConfigVSgvg_0();
}

uint64_t MedicationListViewData.title.getter()
{
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
  return sub_1BC2B3758();
}

_QWORD *MedicationListViewData.items.getter()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t inited;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  __int128 v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  unint64_t v33;
  unint64_t v34;
  __int128 v35;
  _QWORD *v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  unint64_t v46;
  unint64_t v47;
  _QWORD *v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  unint64_t v57;
  unint64_t v58;
  _QWORD *v59;
  _QWORD *v61;
  id v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;

  v1 = *(void **)v0;
  v2 = *(void **)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 16);
  sub_1BC23A304();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC2B92C0;
  v67 = v2;
  v5 = v2;
  swift_retain();
  v6 = v1;
  v7 = sub_1BC2B4BEC();
  v9 = v8;
  v69 = v3;
  swift_release();

  if (v9)
  {
    v10 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
    v11 = 3;
  }
  else
  {
    v11 = 0;
    v10 = 0;
    v7 = 0;
  }
  *(_QWORD *)(inited + 32) = v11;
  *(_QWORD *)(inited + 40) = v10;
  *(_QWORD *)(inited + 48) = v7;
  *(_QWORD *)(inited + 56) = v9;
  *(_OWORD *)(inited + 64) = 0u;
  *(_OWORD *)(inited + 80) = 0u;
  v66 = (uint64_t)v6;
  v12 = _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE8strengthSSSgvg_0();
  v14 = v13;
  if (v13)
  {
    v15 = v12;
    v16 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
    v17 = 2;
  }
  else
  {
    v17 = 0;
    v16 = 0;
    v15 = 0;
  }
  *(_QWORD *)(inited + 96) = v17;
  *(_QWORD *)(inited + 104) = v16;
  *(_QWORD *)(inited + 112) = v15;
  *(_QWORD *)(inited + 120) = v14;
  v18 = 0uLL;
  *(_OWORD *)(inited + 128) = 0u;
  *(_OWORD *)(inited + 144) = 0u;
  v19 = *(void **)(inited + 40);
  if (!v19)
  {
    v30 = 0;
    v26 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if (!v16)
      goto LABEL_18;
    goto LABEL_13;
  }
  v20 = *(_QWORD *)(inited + 32);
  v21 = *(_QWORD *)(inited + 56);
  v22 = *(_QWORD *)(inited + 64);
  v23 = *(_QWORD *)(inited + 88);
  v24 = *(_QWORD *)(inited + 48);
  v63 = *(_OWORD *)(inited + 72);
  swift_bridgeObjectRetain();
  v25 = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v26 = sub_1BC0F9CD4(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v28 = v26[2];
  v27 = v26[3];
  if (v28 >= v27 >> 1)
    v26 = sub_1BC0F9CD4((_QWORD *)(v27 > 1), v28 + 1, 1, v26);
  v26[2] = v28 + 1;
  v29 = &v26[8 * v28];
  *((_BYTE *)v29 + 32) = v20;
  v29[5] = v25;
  v29[6] = v24;
  v29[7] = v21;
  v29[8] = v22;
  *(_OWORD *)(v29 + 9) = v63;
  v29[11] = v23;
  v17 = *(_QWORD *)(inited + 96);
  v16 = *(id *)(inited + 104);
  v15 = *(_QWORD *)(inited + 112);
  v30 = *(_QWORD *)(inited + 128);
  v18 = *(_OWORD *)(inited + 136);
  v19 = *(void **)(inited + 152);
  if (v16)
  {
LABEL_13:
    v31 = *(_QWORD *)(inited + 120);
    v64 = v18;
    swift_bridgeObjectRetain();
    v32 = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v26 = sub_1BC0F9CD4(0, v26[2] + 1, 1, v26);
    v34 = v26[2];
    v33 = v26[3];
    v35 = v64;
    if (v34 >= v33 >> 1)
    {
      v61 = sub_1BC0F9CD4((_QWORD *)(v33 > 1), v34 + 1, 1, v26);
      v35 = v64;
      v26 = v61;
    }
    v26[2] = v34 + 1;
    v36 = &v26[8 * v34];
    *((_BYTE *)v36 + 32) = v17;
    v36[5] = v32;
    v36[6] = v15;
    v36[7] = v31;
    v36[8] = v30;
    *(_OWORD *)(v36 + 9) = v35;
    v36[11] = v19;
  }
LABEL_18:
  swift_bridgeObjectRelease();
  v79 = v26;
  v71 = v66;
  v72 = v67;
  v73 = v69;
  v37 = sub_1BC23AC60();
  sub_1BC130E58(v37);
  sub_1BC23AE7C((uint64_t)&v71);
  v38 = v72;
  if (v72)
  {
    v65 = v71;
    v39 = v73;
    v40 = v74;
    v41 = v75;
    v42 = v76;
    v43 = v77;
    v44 = v78;
    v45 = v79;
    swift_bridgeObjectRetain();
    v62 = v38;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v45 = sub_1BC0F9CD4(0, v45[2] + 1, 1, v45);
    v47 = v45[2];
    v46 = v45[3];
    if (v47 >= v46 >> 1)
      v45 = sub_1BC0F9CD4((_QWORD *)(v46 > 1), v47 + 1, 1, v45);
    v45[2] = v47 + 1;
    v48 = &v45[8 * v47];
    *((_BYTE *)v48 + 32) = v65;
    v48[5] = v62;
    v48[6] = v39;
    v48[7] = v40;
    v48[8] = v41;
    v48[9] = v42;
    v48[10] = v43;
    v48[11] = v44;
    sub_1BC23BE90(v65, v38);
    v79 = v45;
  }
  sub_1BC23B010((uint64_t)&v71);
  v49 = v72;
  if (!v72)
    return v79;
  v70 = v71;
  v50 = v73;
  v51 = v74;
  v52 = v75;
  v53 = v76;
  v54 = v77;
  v55 = v78;
  v56 = v79;
  swift_bridgeObjectRetain();
  v68 = v49;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v56 = sub_1BC0F9CD4(0, v56[2] + 1, 1, v56);
  v58 = v56[2];
  v57 = v56[3];
  if (v58 >= v57 >> 1)
    v56 = sub_1BC0F9CD4((_QWORD *)(v57 > 1), v58 + 1, 1, v56);
  v56[2] = v58 + 1;
  v59 = &v56[8 * v58];
  *((_BYTE *)v59 + 32) = v70;
  v59[5] = v68;
  v59[6] = v50;
  v59[7] = v51;
  v59[8] = v52;
  v59[9] = v53;
  v59[10] = v54;
  v59[11] = v55;
  sub_1BC23BE90(v70, v49);
  return v56;
}

void sub_1BC23A304()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDA0FE58)
  {
    sub_1BC23CFA0(255, &qword_1EDA0F978, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x1E0DEB940]);
    v0 = sub_1BC2B53A8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDA0FE58);
  }
}

void sub_1BC23A368(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BC23A3C8()
{
  unsigned __int8 v0;
  char v1;
  char v2;

  v2 = sub_1BC2B53CC();
  swift_bridgeObjectRelease();
  if ((v2 & 1) == 0)
  {
    if (v0 <= 1u)
      v1 = sub_1BC2B53CC();
    swift_bridgeObjectRelease();
  }
  return v1 & 1;
}

id MedicationListItem.concept.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

void sub_1BC23A4A0(char *a1)
{
  sub_1BC2396B4(*a1);
}

void sub_1BC23A4AC()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BC2B5450();
  __asm { BR              X9 }
}

uint64_t sub_1BC23A4F8()
{
  sub_1BC2B44D8();
  swift_bridgeObjectRelease();
  return sub_1BC2B548C();
}

void sub_1BC23A564()
{
  __asm { BR              X10 }
}

uint64_t sub_1BC23A5A0()
{
  sub_1BC2B44D8();
  return swift_bridgeObjectRelease();
}

void sub_1BC23A5F8()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BC2B5450();
  __asm { BR              X9 }
}

uint64_t sub_1BC23A640()
{
  sub_1BC2B44D8();
  swift_bridgeObjectRelease();
  return sub_1BC2B548C();
}

uint64_t sub_1BC23A6AC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BC23C7F4();
  *a1 = result;
  return result;
}

uint64_t sub_1BC23A6D8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BC23A708 + 4 * byte_1BC2C3978[*v0]))();
}

void sub_1BC23A708(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "metaSchedule");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

void sub_1BC23A72C(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x6874676E65727473;
  a1[1] = v1;
}

void sub_1BC23A744(_QWORD *a1@<X8>)
{
  *a1 = 1836216166;
  a1[1] = 0xE400000000000000;
}

void MedicationCellItem.hash(into:)()
{
  __asm { BR              X10 }
}

uint64_t sub_1BC23A7B8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;

  sub_1BC2B44D8();
  swift_bridgeObjectRelease();
  v3 = v2;
  sub_1BC2B4D90();

  swift_bridgeObjectRetain();
  sub_1BC2B44D8();
  swift_bridgeObjectRelease();
  if (v1)
  {
    sub_1BC2B5468();
    swift_bridgeObjectRetain();
    sub_1BC2B44D8();
    swift_bridgeObjectRelease();
    if (v0)
    {
LABEL_3:
      sub_1BC2B5468();
      swift_bridgeObjectRetain();
      sub_1BC2B44D8();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_1BC2B5468();
    if (v0)
      goto LABEL_3;
  }
  return sub_1BC2B5468();
}

uint64_t MedicationCellItem.hashValue.getter()
{
  sub_1BC2B5450();
  MedicationCellItem.hash(into:)();
  return sub_1BC2B548C();
}

uint64_t sub_1BC23A954()
{
  sub_1BC2B5450();
  MedicationCellItem.hash(into:)();
  return sub_1BC2B548C();
}

uint64_t sub_1BC23A9B8()
{
  sub_1BC2B5450();
  MedicationCellItem.hash(into:)();
  return sub_1BC2B548C();
}

id MedicationListViewData.medication.getter()
{
  id *v0;

  return *v0;
}

void *MedicationListViewData.schedule.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 8);
  v2 = v1;
  return v1;
}

uint64_t MedicationListViewData.init(medication:incompatibilityCache:schedule:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = result;
  a4[1] = a3;
  a4[2] = a2;
  return result;
}

uint64_t MedicationListViewData.id.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  void *v6;
  id v7;
  void (*v8)(char *, uint64_t);
  id v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  v1 = sub_1BC2B2438();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void **)v0;
  v5 = *(void **)(v0 + 8);
  v13 = 0;
  v14 = 0xE000000000000000;
  sub_1BC2B51BC();
  swift_bridgeObjectRelease();
  v13 = 0x3A747065636E6F63;
  v14 = 0xE800000000000000;
  v7 = objc_msgSend(v6, sel_UUID);
  sub_1BC2B2420();

  sub_1BC2B23FC();
  v8 = *(void (**)(char *, uint64_t))(v2 + 8);
  v8(v4, v1);
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  sub_1BC2B44FC();
  if (v5)
  {
    v9 = objc_msgSend(v5, sel_UUID);
    sub_1BC2B2420();

    sub_1BC2B23FC();
    v8(v4, v1);
  }
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  sub_1BC2B44FC();
  v12 = (uint64_t)v5;
  sub_1BC13BA28();
  sub_1BC23C060();
  v12 = sub_1BC2B4FAC();
  sub_1BC2B539C();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t MedicationListViewData.caption.getter()
{
  return sub_1BC2B4BEC();
}

uint64_t sub_1BC23AC60()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;

  v1 = *(void **)(v0 + 8);
  if (v1)
  {
    v2 = v1;
    v3 = HKMedicationSchedule.makeItems()();

    return v3;
  }
  else
  {
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v5 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    v6 = sub_1BC2B2144();
    v8 = v7;
    swift_bridgeObjectRelease();

    sub_1BC23CFA0(0, &qword_1EDA0FE50, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x1E0DED1E8]);
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1BC2B92D0;
    v10 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor, 0xE000000000000000);
    v11 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();
    swift_bridgeObjectRelease();

    sub_1BC2B44FC();
    swift_bridgeObjectRelease();
    sub_1BC2B44FC();
    sub_1BC2B44FC();
    *(_BYTE *)(v9 + 32) = 0;
    *(_QWORD *)(v9 + 40) = v10;
    *(_QWORD *)(v9 + 48) = v6;
    *(_QWORD *)(v9 + 56) = v8;
    *(_OWORD *)(v9 + 64) = xmmword_1BC2C3D20;
    *(_QWORD *)(v9 + 80) = 0;
    *(_QWORD *)(v9 + 88) = 0xE000000000000000;
    return v9;
  }
}

double sub_1BC23AE7C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  double result;

  v3 = *(void **)(v1 + 8);
  if (!v3)
    goto LABEL_7;
  v4 = v3;
  v5 = sub_1BC239808(0);
  if (!v6)
  {

LABEL_7:
    result = 0.0;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    return result;
  }
  v7 = v5;
  v8 = v6;
  v9 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v10 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  sub_1BC2B44FC();
  sub_1BC2B44FC();

  *(_QWORD *)a1 = 1;
  *(_QWORD *)(a1 + 8) = v9;
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0xE000000000000000;
  return result;
}

double sub_1BC23B010@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  double result;
  uint64_t v17;
  unint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  unint64_t v23;

  v3 = sub_1BC2B39E0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(void **)(v1 + 8);
  if (!v7)
  {
    sub_1BC2B39A4();
    v19 = sub_1BC2B39D4();
    v20 = sub_1BC2B48C8();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v21 = 0;
      _os_log_impl(&dword_1BC0DC000, v19, v20, "Schedule is nil in incompatibility check", v21, 2u);
      MEMORY[0x1BCCEF3A0](v21, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    goto LABEL_10;
  }
  v8 = v7;
  v9 = (void *)sub_1BC2B3230();

  if (!v9)
  {

LABEL_10:
    result = 0.0;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    return result;
  }
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v10 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  v11 = sub_1BC2B2144();
  v13 = v12;
  swift_bridgeObjectRelease();

  v14 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
  v22 = 0;
  v23 = 0xE000000000000000;
  v15 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  sub_1BC2B44FC();
  sub_1BC2B44FC();

  v17 = v22;
  v18 = v23;
  *(_QWORD *)a1 = 1;
  *(_QWORD *)(a1 + 8) = v14;
  *(_QWORD *)(a1 + 16) = v11;
  *(_QWORD *)(a1 + 24) = v13;
  *(_QWORD *)(a1 + 32) = 0xD00000000000001BLL;
  *(_QWORD *)(a1 + 40) = 0x80000001BC2C9E10;
  *(_QWORD *)(a1 + 48) = v17;
  *(_QWORD *)(a1 + 56) = v18;
  return result;
}

uint64_t MedicationListViewData.hash(into:)()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;

  v1 = *(void **)(v0 + 8);
  v2 = *(id *)v0;
  sub_1BC2B4D90();

  sub_1BC2B5468();
  if (v1)
  {
    v3 = v1;
    sub_1BC2B4D90();

  }
  sub_1BC2B3218();
  sub_1BC0E008C(&qword_1EF400308, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C5E0], MEMORY[0x1E0D2C5F0]);
  return sub_1BC2B43F4();
}

uint64_t MedicationListViewData.hashValue.getter()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;

  v2 = *(void **)v0;
  v1 = *(void **)(v0 + 8);
  sub_1BC2B5450();
  v3 = v2;
  sub_1BC2B4D90();

  sub_1BC2B5468();
  if (v1)
  {
    v4 = v1;
    sub_1BC2B4D90();

  }
  sub_1BC2B3218();
  sub_1BC0E008C(&qword_1EF400308, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C5E0], MEMORY[0x1E0D2C5F0]);
  sub_1BC2B43F4();
  return sub_1BC2B548C();
}

uint64_t sub_1BC23B474()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;

  v2 = *(void **)v0;
  v1 = *(void **)(v0 + 8);
  sub_1BC2B5450();
  v3 = v2;
  sub_1BC2B4D90();

  sub_1BC2B5468();
  if (v1)
  {
    v4 = v1;
    sub_1BC2B4D90();

  }
  sub_1BC2B3218();
  sub_1BC0E008C(&qword_1EF400308, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C5E0], MEMORY[0x1E0D2C5F0]);
  sub_1BC2B43F4();
  return sub_1BC2B548C();
}

id MedicationListItem.healthStore.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(id *)(v0 + 40);
}

void MedicationListItem.healthStore.setter(uint64_t a1)
{
  uint64_t v1;
  void *v3;

  swift_beginAccess();
  v3 = *(void **)(v1 + 40);
  *(_QWORD *)(v1 + 40) = a1;

}

uint64_t (*MedicationListItem.healthStore.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id MedicationListItem.conceptStore.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(id *)(v0 + 48);
}

void MedicationListItem.conceptStore.setter(uint64_t a1)
{
  uint64_t v1;
  void *v3;

  swift_beginAccess();
  v3 = *(void **)(v1 + 48);
  *(_QWORD *)(v1 + 48) = a1;

}

uint64_t (*MedicationListItem.conceptStore.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t MedicationListItem.listManager.getter()
{
  swift_beginAccess();
  return swift_retain();
}

uint64_t MedicationListItem.listManager.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 56) = a1;
  return swift_release();
}

uint64_t (*MedicationListItem.listManager.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t MedicationListItem.accessories.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MedicationListItem.incompatibilityCache.getter()
{
  return swift_retain();
}

uint64_t MedicationListItem.indexInList.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 80);
}

id _s19HealthMedicationsUI18MedicationListItemC17itemRepresentableAA0dE8ViewDataVvg_0@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v6;

  v2 = (void *)v1[3];
  v6 = (id)v1[2];
  v3 = v1[4];
  *a1 = v6;
  a1[1] = v2;
  a1[2] = v3;
  v4 = v2;
  swift_retain();
  return v6;
}

uint64_t MedicationListItem.__allocating_init(viewData:healthStore:)(__int128 *a1, void *a2)
{
  uint64_t v4;

  swift_allocObject();
  v4 = sub_1BC23C83C(a1, a2);

  return v4;
}

uint64_t MedicationListItem.init(viewData:healthStore:)(__int128 *a1, void *a2)
{
  uint64_t v3;

  v3 = sub_1BC23C83C(a1, a2);

  return v3;
}

uint64_t MedicationListItem.__allocating_init(itemRepresentable:indexInList:incompatibilityCache:accessories:healthStore:)(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10;

  v10 = swift_allocObject();
  MedicationListItem.init(itemRepresentable:indexInList:incompatibilityCache:accessories:healthStore:)(a1, a2, a3, a4, a5);
  return v10;
}

uint64_t MedicationListItem.init(itemRepresentable:indexInList:incompatibilityCache:accessories:healthStore:)(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v16;

  v16 = *a1;
  v10 = *((_QWORD *)a1 + 2);
  type metadata accessor for MedicationListItemCell();
  sub_1BC0E008C(&qword_1EDA0F9A8, 255, (uint64_t (*)(uint64_t))type metadata accessor for MedicationListItemCell, (uint64_t)&protocol conformance descriptor for MedicationListItemCell);
  *(_QWORD *)(v5 + 88) = sub_1BC2B2930();
  *(_QWORD *)(v5 + 96) = v11;
  *(_QWORD *)(v5 + 40) = a5;
  sub_1BC2B3278();
  v12 = a5;
  sub_1BC2B326C();
  v13 = sub_1BC2B323C();
  swift_release();
  *(_QWORD *)(v5 + 48) = v13;
  *(_OWORD *)(v5 + 16) = v16;
  *(_QWORD *)(v5 + 32) = v10;
  *(_QWORD *)(v5 + 80) = a2;
  *(_QWORD *)(v5 + 64) = a4;
  sub_1BC2B326C();
  v14 = sub_1BC2B3254();
  swift_release();

  *(_QWORD *)(v5 + 56) = v14;
  *(_QWORD *)(v5 + 72) = a3;
  return v5;
}

uint64_t MedicationListItem.reuseIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MedicationListItem.uniqueIdentifier.getter()
{
  uint64_t v0;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 88);
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  MedicationListViewData.id.getter();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t MedicationListItem.deinit()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 16);
  v2 = *(void **)(v0 + 24);
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MedicationListItem.__deallocating_deinit()
{
  MedicationListItem.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC23BADC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC23BB0C()
{
  uint64_t v0;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 88);
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  MedicationListViewData.id.getter();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  return v2;
}

id sub_1BC23BB7C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v6;

  v2 = *(void **)(*(_QWORD *)v1 + 24);
  v6 = *(id *)(*(_QWORD *)v1 + 16);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  *a1 = v6;
  a1[1] = v2;
  a1[2] = v3;
  v4 = v2;
  swift_retain();
  return v6;
}

id sub_1BC23BBC4()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_beginAccess();
  return *(id *)(v1 + 40);
}

void sub_1BC23BC00(__int128 *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;

  swift_allocObject();
  v6 = sub_1BC23C83C(a1, a2);

  *a3 = v6;
}

uint64_t MedicationListItem.hash(into:)()
{
  MedicationListViewData.id.getter();
  sub_1BC2B44D8();
  return swift_bridgeObjectRelease();
}

uint64_t MedicationListItem.hashValue.getter()
{
  sub_1BC2B5450();
  MedicationListViewData.id.getter();
  sub_1BC2B44D8();
  swift_bridgeObjectRelease();
  return sub_1BC2B548C();
}

uint64_t sub_1BC23BD20()
{
  sub_1BC2B5450();
  MedicationListViewData.id.getter();
  sub_1BC2B44D8();
  swift_bridgeObjectRelease();
  return sub_1BC2B548C();
}

uint64_t sub_1BC23BD90()
{
  MedicationListViewData.id.getter();
  sub_1BC2B44D8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC23BDEC()
{
  sub_1BC2B5450();
  MedicationListViewData.id.getter();
  sub_1BC2B44D8();
  swift_bridgeObjectRelease();
  return sub_1BC2B548C();
}

uint64_t sub_1BC23BE58(_QWORD **a1, _QWORD **a2)
{
  return _s19HealthMedicationsUI18MedicationListItemC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

Swift::Void __swiftcall MedicationListItem.didSelectCell(_:in:)(UIView *_, UIViewController *in)
{
  sub_1BC23C710(in);
}

void sub_1BC23BE6C(uint64_t a1, void *a2)
{
  sub_1BC23C710(a2);
}

uint64_t sub_1BC23BE90(uint64_t a1, void *a2)
{
  uint64_t result;

  if (a2)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s19HealthMedicationsUI18MedicationCellItemV2eeoiySbAC_ACtFZ_0(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t result;
  char v15;
  uint64_t v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 32);
  v16 = *(_QWORD *)(a1 + 24);
  v17 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 40);
  v3 = *(_QWORD *)(a1 + 48);
  v5 = *(_QWORD *)(a1 + 56);
  v6 = a2[2];
  v7 = a2[3];
  v8 = a2[4];
  v9 = a2[5];
  v10 = a2[6];
  v11 = a2[7];
  sub_1BC2396B4(*(_BYTE *)a1);
  if ((v12 & 1) == 0)
    return 0;
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EF3FBD20);
  if ((sub_1BC2B4D84() & 1) == 0)
    return 0;
  if (v17 == v6 && v16 == v7 || (v13 = sub_1BC2B53CC(), result = 0, (v13 & 1) != 0))
  {
    if (v4)
    {
      if (!v9)
        return 0;
      if (v2 != v8 || v4 != v9)
      {
        v15 = sub_1BC2B53CC();
        result = 0;
        if ((v15 & 1) == 0)
          return result;
      }
    }
    else if (v9)
    {
      return 0;
    }
    if (v5)
    {
      if (v11 && (v3 == v10 && v5 == v11 || (sub_1BC2B53CC() & 1) != 0))
        return 1;
    }
    else if (!v11)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

unint64_t sub_1BC23C060()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDA0FD08;
  if (!qword_1EDA0FD08)
  {
    v1 = sub_1BC0E1D38(255, &qword_1EDA0FCF8);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1EDA0FD08);
  }
  return result;
}

uint64_t _s19HealthMedicationsUI22MedicationListViewDataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  char v6;

  v2 = *(void **)(a1 + 8);
  v3 = *(void **)(a2 + 8);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EF3FBD20);
  if ((sub_1BC2B4D84() & 1) != 0)
  {
    if (v2)
    {
      if (v3)
      {
        sub_1BC0E1D38(0, &qword_1EDA0FCF8);
        v4 = v3;
        v5 = v2;
        v6 = sub_1BC2B4D84();

        if ((v6 & 1) != 0)
          goto LABEL_5;
      }
    }
    else if (!v3)
    {
LABEL_5:
      sub_1BC2B3218();
      return sub_1BC2B320C() & 1;
    }
  }
  return 0;
}

uint64_t _s19HealthMedicationsUI18MedicationListItemC2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  void *v35;
  _QWORD *v36;
  void *v37;
  _QWORD *v38;
  char v39;
  id v40;
  id v41;
  uint64_t v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int (*v48)(uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t (*v50)(uint64_t);
  uint64_t v51;
  uint64_t (*v52)(uint64_t);
  char *v54;
  uint64_t (*v55)(uint64_t);
  char v56;
  void (*v57)(char *, uint64_t);
  id v58;
  id v59;
  uint64_t v60;
  id v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;

  v4 = sub_1BC2B3608();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950];
  v67 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC183688();
  v64 = v9;
  MEMORY[0x1E0C80A78](v9);
  v66 = (uint64_t)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0ECC0, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v12 = MEMORY[0x1E0C80A78](v11);
  v63 = (uint64_t)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v60 - v15;
  MEMORY[0x1E0C80A78](v14);
  v68 = (uint64_t)&v60 - v17;
  v18 = (void *)a1[2];
  v19 = a1[4];
  *((_QWORD *)&v69 + 1) = a1[3];
  v70 = v18;
  v71 = *((_QWORD *)&v69 + 1);
  v72 = v19;
  v20 = MedicationListViewData.id.getter();
  v22 = v21;
  v24 = (void *)a2[2];
  v23 = a2[3];
  v25 = a2[4];
  v70 = v24;
  v71 = v23;
  *(_QWORD *)&v69 = v23;
  v72 = v25;
  v26 = MedicationListViewData.id.getter();
  v65 = v6;
  v62 = v8;
  if (v20 == v26 && v22 == v27)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v28 = sub_1BC2B53CC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v29 = 0;
    if ((v28 & 1) == 0)
      return v29 & 1;
  }
  v70 = v18;
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
  v30 = sub_1BC2B3758();
  v32 = v31;
  v70 = v24;
  if (v30 == sub_1BC2B3758() && v32 == v33)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v34 = sub_1BC2B53CC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v29 = 0;
    if ((v34 & 1) == 0)
      return v29 & 1;
  }
  v35 = (void *)*((_QWORD *)&v69 + 1);
  v70 = v18;
  v71 = *((_QWORD *)&v69 + 1);
  v72 = v19;
  v36 = MedicationListViewData.items.getter();
  v37 = (void *)v69;
  v70 = v24;
  v71 = v69;
  v72 = v25;
  v38 = MedicationListViewData.items.getter();
  v39 = sub_1BC16C81C((uint64_t)v36, (uint64_t)v38);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v39 & 1) == 0)
    goto LABEL_16;
  v40 = v35;
  swift_retain();
  v41 = v18;
  v42 = v68;
  _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE7medmoji0eF10Experience29MedicationVisualizationConfigVSgvg_0();
  swift_release();
  v61 = v40;

  v43 = v37;
  swift_retain();
  v44 = v24;
  _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE7medmoji0eF10Experience29MedicationVisualizationConfigVSgvg_0();
  swift_release();

  v45 = v66;
  v46 = v66 + *(int *)(v64 + 48);
  sub_1BC11C330(v42, v66);
  sub_1BC11C330((uint64_t)v16, v46);
  v47 = v65;
  v48 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48);
  v49 = v67;
  if (v48(v45, 1, v67) != 1)
  {
    v51 = v63;
    sub_1BC11C330(v45, v63);
    if (v48(v46, 1, v49) == 1)
    {
      v52 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950];
      sub_1BC0F2444((uint64_t)v16, (unint64_t *)&qword_1EDA0ECC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950]);
      sub_1BC0F2444(v42, (unint64_t *)&qword_1EDA0ECC0, v52);
      (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v51, v49);
      goto LABEL_15;
    }
    v54 = v62;
    (*(void (**)(char *, uint64_t, uint64_t))(v47 + 32))(v62, v46, v49);
    v55 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950];
    sub_1BC0E008C(&qword_1EF3FC320, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950], MEMORY[0x1E0D2C960]);
    v56 = sub_1BC2B4424();
    v57 = *(void (**)(char *, uint64_t))(v47 + 8);
    v57(v54, v49);
    sub_1BC0F2444((uint64_t)v16, (unint64_t *)&qword_1EDA0ECC0, v55);
    sub_1BC0F2444(v68, (unint64_t *)&qword_1EDA0ECC0, v55);
    v57((char *)v51, v49);
    sub_1BC0F2444(v45, (unint64_t *)&qword_1EDA0ECC0, v55);
    if ((v56 & 1) != 0)
      goto LABEL_19;
LABEL_16:
    v29 = 0;
    return v29 & 1;
  }
  v50 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950];
  sub_1BC0F2444((uint64_t)v16, (unint64_t *)&qword_1EDA0ECC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950]);
  sub_1BC0F2444(v42, (unint64_t *)&qword_1EDA0ECC0, v50);
  if (v48(v46, 1, v49) != 1)
  {
LABEL_15:
    sub_1BC23CF64(v45);
    goto LABEL_16;
  }
  sub_1BC0F2444(v45, (unint64_t *)&qword_1EDA0ECC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950]);
LABEL_19:
  v29 = v69 == 0;
  if (*((_QWORD *)&v69 + 1) && (_QWORD)v69)
  {
    sub_1BC0E1D38(0, &qword_1EDA0FCF8);
    v58 = v43;
    v59 = v61;
    v29 = sub_1BC2B4D84();

  }
  return v29 & 1;
}

void sub_1BC23C710(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  _QWORD *v10;

  v2 = v1;
  v4 = (void *)v1[2];
  swift_beginAccess();
  v5 = (void *)v1[5];
  swift_beginAccess();
  v6 = v1[7];
  v7 = v2[9];
  objc_allocWithZone((Class)type metadata accessor for MedicationConceptDetailViewController());
  v8 = v4;
  v9 = v5;
  swift_retain();
  swift_retain();
  v10 = MedicationConceptDetailViewController.init(medication:healthStore:listManager:provenance:incompatibilityCache:)(v8, v9, v6, 3, v7);
  objc_msgSend(a1, sel_showViewController_sender_, v10, v2);

}

uint64_t sub_1BC23C7F4()
{
  unint64_t v0;

  v0 = sub_1BC2B5330();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t sub_1BC23C83C(__int128 *a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;

  v10 = *a1;
  v4 = *((_QWORD *)a1 + 2);
  type metadata accessor for MedicationListItemCell();
  sub_1BC0E008C(&qword_1EDA0F9A8, 255, (uint64_t (*)(uint64_t))type metadata accessor for MedicationListItemCell, (uint64_t)&protocol conformance descriptor for MedicationListItemCell);
  *(_QWORD *)(v2 + 88) = sub_1BC2B2930();
  *(_QWORD *)(v2 + 96) = v5;
  *(_OWORD *)(v2 + 16) = v10;
  *(_QWORD *)(v2 + 32) = v4;
  *(_QWORD *)(v2 + 40) = a2;
  sub_1BC2B3278();
  v6 = a2;
  sub_1BC2B326C();
  v7 = sub_1BC2B323C();
  swift_release();
  *(_QWORD *)(v2 + 48) = v7;
  *(_QWORD *)(v2 + 64) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v2 + 80) = 0;
  sub_1BC2B326C();
  v8 = sub_1BC2B3254();
  swift_release();
  *(_QWORD *)(v2 + 56) = v8;
  sub_1BC2B326C();
  sub_1BC2B3248();
  swift_release();
  sub_1BC2B3218();
  swift_allocObject();
  *(_QWORD *)(v2 + 72) = sub_1BC2B3200();
  return v2;
}

unint64_t sub_1BC23C968()
{
  unint64_t result;

  result = qword_1EF400310;
  if (!qword_1EF400310)
  {
    result = MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for MedicationCellItem, &type metadata for MedicationCellItem);
    atomic_store(result, (unint64_t *)&qword_1EF400310);
  }
  return result;
}

unint64_t sub_1BC23C9B0()
{
  unint64_t result;

  result = qword_1EF400318;
  if (!qword_1EF400318)
  {
    result = MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for MedicationListViewData, &type metadata for MedicationListViewData);
    atomic_store(result, (unint64_t *)&qword_1EF400318);
  }
  return result;
}

uint64_t sub_1BC23C9F4(uint64_t a1, uint64_t a2)
{
  return sub_1BC0E008C(&qword_1EDA0F980, a2, (uint64_t (*)(uint64_t))type metadata accessor for MedicationListItem, (uint64_t)&protocol conformance descriptor for MedicationListItem);
}

uint64_t type metadata accessor for MedicationListItem()
{
  return objc_opt_self();
}

uint64_t sub_1BC23CA40(uint64_t a1, uint64_t a2)
{
  return sub_1BC0E008C(&qword_1EDA0F988, a2, (uint64_t (*)(uint64_t))type metadata accessor for MedicationListItem, (uint64_t)&protocol conformance descriptor for MedicationListItem);
}

uint64_t sub_1BC23CA6C(uint64_t a1, uint64_t a2)
{
  return sub_1BC0E008C(&qword_1EDA0F990, a2, (uint64_t (*)(uint64_t))type metadata accessor for MedicationListItem, (uint64_t)&protocol conformance descriptor for MedicationListItem);
}

uint64_t destroy for MedicationCellItem(uint64_t a1)
{

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MedicationCellItem(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(void **)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v7 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MedicationCellItem(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  v6 = v4;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MedicationCellItem(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for MedicationCellItem()
{
  return &type metadata for MedicationCellItem;
}

uint64_t destroy for MedicationListViewData(id *a1)
{

  return swift_release();
}

_QWORD *_s19HealthMedicationsUI22MedicationListViewDataVwCP_0(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  a1[2] = *(_QWORD *)(a2 + 16);
  v5 = v3;
  v6 = v4;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for MedicationListViewData(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a1 + 8);
  v8 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v8;
  v9 = v8;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for MedicationListViewData(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for MedicationListViewData()
{
  return &type metadata for MedicationListViewData;
}

uint64_t method lookup function for MedicationListItem()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicationListItem.__allocating_init(viewData:healthStore:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of MedicationListItem.__allocating_init(itemRepresentable:indexInList:incompatibilityCache:accessories:healthStore:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t getEnumTagSinglePayload for MedicationCellItem.ItemKind(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MedicationCellItem.ItemKind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BC23CE9C + 4 * byte_1BC2C3985[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BC23CED0 + 4 * byte_1BC2C3980[v4]))();
}

uint64_t sub_1BC23CED0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC23CED8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC23CEE0);
  return result;
}

uint64_t sub_1BC23CEEC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC23CEF4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BC23CEF8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC23CF00(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MedicationCellItem.ItemKind()
{
  return &type metadata for MedicationCellItem.ItemKind;
}

unint64_t sub_1BC23CF20()
{
  unint64_t result;

  result = qword_1EF400320;
  if (!qword_1EF400320)
  {
    result = MEMORY[0x1BCCEF2BC](&unk_1BC2C3CEC, &type metadata for MedicationCellItem.ItemKind);
    atomic_store(result, (unint64_t *)&qword_1EF400320);
  }
  return result;
}

uint64_t sub_1BC23CF64(uint64_t a1)
{
  uint64_t v2;

  sub_1BC183688();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BC23CFA0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(_QWORD, ValueMetadata *))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = a3(0, &type metadata for MedicationCellItem);
    if (!v5)
      atomic_store(v4, a2);
  }
}

id InteractionFactorsInfoViewController.__allocating_init()()
{
  objc_class *v0;
  objc_super v2;

  v2.receiver = objc_allocWithZone(v0);
  v2.super_class = v0;
  return objc_msgSendSuper2(&v2, sel_initWithCollectionViewLayout_, 0);
}

id InteractionFactorsInfoViewController.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InteractionFactorsInfoViewController();
  return objc_msgSendSuper2(&v2, sel_initWithCollectionViewLayout_, 0);
}

uint64_t type metadata accessor for InteractionFactorsInfoViewController()
{
  uint64_t result;

  result = qword_1EF400330;
  if (!qword_1EF400330)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BC23D098()
{
  sub_1BC2B52B8();
  __break(1u);
}

id sub_1BC23D0F0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  objc_super v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v1 = type metadata accessor for InteractionFactorsInfoDataSourceProvider();
  v2 = swift_allocObject();
  v10 = v1;
  v11 = sub_1BC23D2A0();
  v9 = v2;
  sub_1BC2B3008();
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v3 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  v4 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setTitle_, v4, 0xE000000000000000);

  v5 = objc_msgSend(v0, sel_navigationItem);
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithBarButtonSystemItem_target_action_, 0, v0, sel_doneButtonTapped_);
  objc_msgSend(v5, sel_setRightBarButtonItem_, v6);

  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for InteractionFactorsInfoViewController();
  return objc_msgSendSuper2(&v8, sel_viewDidLoad);
}

unint64_t sub_1BC23D2A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF400328;
  if (!qword_1EF400328)
  {
    v1 = type metadata accessor for InteractionFactorsInfoDataSourceProvider();
    result = MEMORY[0x1BCCEF2BC](&unk_1BC2BF61C, v1);
    atomic_store(result, (unint64_t *)&qword_1EF400328);
  }
  return result;
}

void sub_1BC23D2E8(void *a1)
{
  id v1;

  v1 = a1;
  sub_1BC23D0F0();

}

void sub_1BC23D31C(void *a1)
{
  void *v2;
  void *v3;
  id v4;
  __int128 *v5;
  _OWORD v6[2];
  uint64_t v7;
  _OWORD v8[2];
  uint64_t v9;
  _QWORD v10[4];
  _BYTE v11[40];

  v2 = (void *)sub_1BC2B25C4();
  objc_msgSend(a1, sel_deselectItemAtIndexPath_animated_, v2, 1);

  v3 = (void *)sub_1BC2B25C4();
  v4 = objc_msgSend(a1, sel_cellForItemAtIndexPath_, v3);

  if (v4)
  {
    sub_1BC2B2FD8();
    sub_1BC2B2DEC();
    sub_1BC2B2A74();
    swift_release();
    sub_1BC0E79F0((uint64_t)v11, (uint64_t)v8);
    sub_1BC0E8778(0, (unint64_t *)&qword_1EDA0F7C0);
    sub_1BC0E8778(0, &qword_1EF3F9B08);
    if (swift_dynamicCast())
    {
      v5 = v6;
LABEL_6:
      sub_1BC0F2730(v5, (uint64_t)v10);
      __swift_project_boxed_opaque_existential_0(v10, v10[3]);
      sub_1BC2B2B28();

      __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v10);
      return;
    }
    v7 = 0;
    memset(v6, 0, sizeof(v6));
    sub_1BC10B92C((uint64_t)v6, (unint64_t *)&qword_1EF400120, &qword_1EF3F9B08);
    *(_QWORD *)&v6[0] = v4;
    sub_1BC14855C();
    v4 = v4;
    if ((swift_dynamicCast() & 1) != 0)
    {
      v5 = v8;
      goto LABEL_6;
    }
    v9 = 0;
    memset(v8, 0, sizeof(v8));

    __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
    sub_1BC10B92C((uint64_t)v8, (unint64_t *)&qword_1EF400120, &qword_1EF3F9B08);
  }
}

uint64_t sub_1BC23D53C(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v12;

  v5 = sub_1BC2B2600();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B25D0();
  v9 = a3;
  v10 = a1;
  sub_1BC23D31C(v9);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1BC23D5EC(void *a1)
{
  id v2;
  uint64_t v4;

  swift_unknownObjectRetain();
  v2 = a1;
  sub_1BC2B5024();
  swift_unknownObjectRelease();
  objc_msgSend(v2, sel_dismissViewControllerAnimated_completion_, 1, 0);

  return __swift_destroy_boxed_opaque_existential_0((uint64_t)&v4);
}

void InteractionFactorsInfoViewController.__allocating_init(dataSource:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void InteractionFactorsInfoViewController.init(dataSource:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id InteractionFactorsInfoViewController.__allocating_init(collectionViewLayout:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCollectionViewLayout_, a1);

  return v3;
}

void InteractionFactorsInfoViewController.init(collectionViewLayout:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1BC23D720(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id InteractionFactorsInfoViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InteractionFactorsInfoViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC23D784()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for InteractionFactorsInfoViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InteractionFactorsInfoViewController.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + class metadata base offset for InteractionFactorsInfoViewController))();
}

uint64_t sub_1BC23D7DC()
{
  return type metadata accessor for InteractionFactorsInfoViewController();
}

uint64_t NetworkStateObserver.$connectionState.getter()
{
  swift_beginAccess();
  sub_1BC23E064(0, &qword_1EF3F8D80, MEMORY[0x1E0C96198]);
  sub_1BC2B3F68();
  return swift_endAccess();
}

BOOL static NetworkStateObserver.ConnectionStatus.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t NetworkStateObserver.ConnectionStatus.hash(into:)()
{
  return sub_1BC2B545C();
}

uint64_t NetworkStateObserver.ConnectionStatus.hashValue.getter()
{
  sub_1BC2B5450();
  sub_1BC2B545C();
  return sub_1BC2B548C();
}

uint64_t NetworkStateObserver.connectionState.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BC2B3F8C();
  swift_release();
  return swift_release();
}

uint64_t sub_1BC23D934@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BC2B3F8C();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1BC23D9B4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_1BC2B3F98();
}

uint64_t sub_1BC23DA28()
{
  swift_beginAccess();
  sub_1BC23E064(0, &qword_1EF3F8D80, MEMORY[0x1E0C96198]);
  sub_1BC2B3F68();
  return swift_endAccess();
}

uint64_t sub_1BC23DA98(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, uint64_t, uint64_t);
  uint64_t v12;

  sub_1BC23E064(0, &qword_1EF3F8D48, MEMORY[0x1E0C96180]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x1E0C80A78](v2);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v12 - v8;
  v10 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v10((char *)&v12 - v8, a1, v3);
  v10(v7, (uint64_t)v9, v3);
  swift_beginAccess();
  sub_1BC23E064(0, &qword_1EF3F8D80, MEMORY[0x1E0C96198]);
  sub_1BC2B3F74();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v3);
}

uint64_t sub_1BC23DBC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t result;
  char v8;
  void (*v9)(_BYTE *, uint64_t);
  char v10;
  _BYTE v11[8];

  v0 = sub_1BC2B4118();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x1E0C80A78](v0);
  v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v2);
  v6 = &v11[-v5];
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1BC2B4124();
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v4, *MEMORY[0x1E0CCEAB0], v0);
    v8 = sub_1BC2B410C();
    v9 = *(void (**)(_BYTE *, uint64_t))(v1 + 8);
    v9(v6, v0);
    v9(v4, v0);
    if ((v8 & 1) != 0)
      v10 = 1;
    else
      v10 = 2;
    swift_getKeyPath();
    swift_getKeyPath();
    v11[7] = v10;
    return sub_1BC2B3F98();
  }
  return result;
}

uint64_t NetworkStateObserver.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1BC2B3F98();
  swift_retain();
  sub_1BC2B40E8();
  swift_release();
  v2 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI20NetworkStateObserver__connectionState;
  sub_1BC23E064(0, &qword_1EF3F8D80, MEMORY[0x1E0C96198]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  swift_release();
  return v1;
}

uint64_t NetworkStateObserver.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1BC2B3F98();
  swift_retain();
  sub_1BC2B40E8();
  swift_release();
  v1 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI20NetworkStateObserver__connectionState;
  sub_1BC23E064(0, &qword_1EF3F8D80, MEMORY[0x1E0C96198]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC23DEC0()
{
  return type metadata accessor for NetworkStateObserver();
}

uint64_t type metadata accessor for NetworkStateObserver()
{
  uint64_t result;

  result = qword_1EF4003B8;
  if (!qword_1EF4003B8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BC23DF04()
{
  unint64_t v0;

  sub_1BC23E064(319, &qword_1EF3F8D80, MEMORY[0x1E0C96198]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for NetworkStateObserver()
{
  return swift_lookUpClassMethod();
}

uint64_t storeEnumTagSinglePayload for NetworkStateObserver.ConnectionStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BC23DFE4 + 4 * byte_1BC2C3D65[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BC23E018 + 4 * asc_1BC2C3D60[v4]))();
}

uint64_t sub_1BC23E018(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC23E020(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC23E028);
  return result;
}

uint64_t sub_1BC23E034(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC23E03CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BC23E040(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC23E048(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NetworkStateObserver.ConnectionStatus()
{
  return &type metadata for NetworkStateObserver.ConnectionStatus;
}

void sub_1BC23E064(uint64_t a1, unint64_t *a2, uint64_t (*a3)(_QWORD, ValueMetadata *))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = a3(0, &type metadata for NetworkStateObserver.ConnectionStatus);
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t dispatch thunk of ListContentConfigurationProvider.makeListContentConfiguration()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1BC23E0B4(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    return ((uint64_t (*)(void))((char *)&loc_1BC23E0D4 + 4 * byte_1BC2C3EA2[*(unsigned __int8 *)(a2 + 32) >> 5]))();
  else
    return 0;
}

uint64_t sub_1BC23E1B8(uint64_t a1, unint64_t a2)
{
  return sub_1BC23E398(a1, a2, (uint64_t)&qword_1EDA0FDD0);
}

uint64_t sub_1BC23E1CC(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  _BOOL8 v5;
  BOOL v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  if (*(_QWORD *)(a2 + 32) == result)
    return 1;
  if (v2 == 1)
    return 0;
  for (i = 5; ; ++i)
  {
    v4 = i - 3;
    if (__OFADD__(i - 4, 1))
      break;
    v6 = *(_QWORD *)(a2 + 8 * i) == result;
    v5 = v6;
    v6 = v6 || v4 == v2;
    if (v6)
      return v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC23E230(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v3 = sub_1BC2B4460();
  v5 = v4;
  if (v3 == sub_1BC2B4460() && v5 == v6)
  {
LABEL_20:
    swift_bridgeObjectRelease_n();
    return 1;
  }
  v8 = sub_1BC2B53CC();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v8 & 1) != 0)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    return 1;
  }
  if (v2 == 1)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    return 0;
  }
  v10 = 5;
  while (1)
  {
    v11 = v10 - 3;
    if (__OFADD__(v10 - 4, 1))
      break;
    v12 = sub_1BC2B4460();
    v14 = v13;
    if (v12 == sub_1BC2B4460() && v14 == v15)
    {
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
    v17 = sub_1BC2B53CC();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v17 & 1) != 0)
      goto LABEL_7;
    ++v10;
    if (v11 == v2)
      goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC23E384(uint64_t a1, unint64_t a2)
{
  return sub_1BC23E398(a1, a2, (uint64_t)&qword_1EF3FA7B8);
}

uint64_t sub_1BC23E398(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  id v7;
  void *v8;
  uint64_t v10;
  char v11;
  unint64_t v12;
  char v13;

  if (a2 >> 62)
    goto LABEL_20;
  v5 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; v5 = sub_1BC2B52D0())
  {
    v6 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      v7 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      v7 = (id)MEMORY[0x1BCCEE950](0, a2);
LABEL_5:
      v8 = v7;
      sub_1BC0E1D38(0, (unint64_t *)a3);
      a3 = sub_1BC2B4D84();

      if ((a3 & 1) != 0)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v5 == 1)
        goto LABEL_18;
      if (v6)
        break;
      v6 = 5;
      while (1)
      {
        v12 = v6 - 3;
        if (__OFADD__(v6 - 4, 1))
          break;
        a3 = (uint64_t)*(id *)(a2 + 8 * v6);
        v13 = sub_1BC2B4D84();

        if ((v13 & 1) != 0)
          goto LABEL_6;
        ++v6;
        if (v12 == v5)
          goto LABEL_18;
      }
      __break(1u);
    }
    a3 = 1;
    while (1)
    {
      MEMORY[0x1BCCEE950](a3, a2);
      v10 = a3 + 1;
      if (__OFADD__(a3, 1))
        break;
      v11 = sub_1BC2B4D84();
      swift_unknownObjectRelease();
      if ((v11 & 1) != 0)
        goto LABEL_6;
      ++a3;
      if (v10 == v5)
        goto LABEL_18;
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

BOOL sub_1BC23E51C(_BOOL8 result, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t i;
  uint64_t v5;
  int v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v3 = result;
  if (*(_BYTE *)(a2 + 32) == result)
    return 1;
  if (v2 == 1)
    return 0;
  for (i = 33; ; ++i)
  {
    v5 = i - 31;
    if (__OFADD__(i - 32, 1))
      break;
    v6 = *(unsigned __int8 *)(a2 + i);
    result = v6 == v3;
    if (v6 == v3 || v5 == v2)
      return result;
  }
  __break(1u);
  return result;
}

void ListConceptManager.toggleMedicationPinState(for:onCommitHandler:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  id v12;
  uint64_t v13;

  v2 = v1;
  sub_1BC1C73F8();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B392C();
  v7 = sub_1BC2B395C();
  v8 = sub_1BC23E398((uint64_t)a1, v7, (uint64_t)&unk_1EF3FA7B8);
  swift_bridgeObjectRelease();
  if ((v8 & 1) == 0)
  {
    v9 = sub_1BC2B467C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v6, 1, 1, v9);
    v10 = (_QWORD *)swift_allocObject();
    v10[2] = 0;
    v10[3] = 0;
    v10[4] = v2;
    v10[5] = a1;
    swift_retain();
    v11 = a1;
    sub_1BC1393A8((uint64_t)v6, (uint64_t)&unk_1EF400450, (uint64_t)v10);
    swift_release();
    v12 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
    objc_msgSend(v12, sel_removeMedication_, v11);

  }
}

uint64_t sub_1BC23E6E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 16) = a5;
  return swift_task_switch();
}

uint64_t sub_1BC23E6FC()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = objc_msgSend(*(id *)(v0 + 16), sel_semanticIdentifier);
  v2 = objc_msgSend(v1, sel_stringValue);

  v3 = sub_1BC2B4460();
  v5 = v4;

  *(_QWORD *)(v0 + 24) = v5;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v6;
  *v6 = v0;
  v6[1] = sub_1BC23E7A0;
  return sub_1BC23EC00(v3, v5);
}

uint64_t sub_1BC23E7A0()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1BC23E7F0()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1BC23E824()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 40);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1BC0FEB64;
  v3[2] = v2;
  return swift_task_switch();
}

uint64_t ListConceptManager.toggleMedicationPinState(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_1BC23E89C()
{
  int8x16_t *v0;
  int8x16_t *v1;
  _QWORD *v2;

  v1 = (int8x16_t *)swift_task_alloc();
  v0[2].i64[0] = (uint64_t)v1;
  v1[1] = vextq_s8(v0[1], v0[1], 8uLL);
  v2 = (_QWORD *)swift_task_alloc();
  v0[2].i64[1] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = sub_1BC23E940;
  return sub_1BC2B53B4();
}

uint64_t sub_1BC23E940()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BC23E99C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 48));
}

uint64_t sub_1BC23E9A8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD v16[2];

  v16[1] = a2;
  sub_1BC23EAEC();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v5);
  v9 = sub_1BC2B3968();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  v13 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v14 + v13, (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  ListConceptManager.toggleMedicationPinState(for:onCommitHandler:)(a3);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1BC23EAE4(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC23E9A8(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

void sub_1BC23EAEC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF400460)
  {
    v0 = sub_1BC2B4634();
    if (!v1)
      atomic_store(v0, &qword_1EF400460);
  }
}

uint64_t sub_1BC23EB50()
{
  uint64_t v0;
  uint64_t v1;

  sub_1BC23EAEC();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1BC23EBB0()
{
  sub_1BC23EAEC();
  return sub_1BC2B4628();
}

uint64_t sub_1BC23EC00(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[32] = a1;
  v2[33] = a2;
  v3 = sub_1BC2B39E0();
  v2[34] = v3;
  v2[35] = *(_QWORD *)(v3 - 8);
  v2[36] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BC23EC60()
{
  _QWORD *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6780]), sel_init);
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2C490]), sel_initWithHealthStore_, v1);
  v0[37] = v2;

  v3 = sub_1BC2B4430();
  v0[38] = v3;
  v0[7] = v0 + 28;
  v0[2] = v0;
  v0[3] = sub_1BC23ED60;
  v4 = swift_continuation_init();
  v0[23] = MEMORY[0x1E0C809B0];
  v5 = v0 + 23;
  v5[1] = 0x40000000;
  v5[2] = sub_1BC10FAB8;
  v5[3] = &block_descriptor_23;
  v5[4] = v4;
  objc_msgSend(v2, sel_fetchScheduleWithMedicationIdentifier_completion_, v3, v5);
  return swift_continuation_await();
}

uint64_t sub_1BC23ED60()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 312) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1BC23EDC0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 224);
  v2 = *(void **)(v0 + 304);
  *(_QWORD *)(v0 + 320) = v1;

  if (v1)
  {
    v3 = *(void **)(v0 + 296);
    *(_QWORD *)(v0 + 80) = v0;
    *(_QWORD *)(v0 + 88) = sub_1BC23EE98;
    v4 = swift_continuation_init();
    *(_QWORD *)(v0 + 144) = MEMORY[0x1E0C809B0];
    v5 = (_QWORD *)(v0 + 144);
    v5[1] = 0x40000000;
    v5[2] = sub_1BC2311D4;
    v5[3] = &block_descriptor_7_0;
    v5[4] = v4;
    objc_msgSend(v3, sel_deleteSchedule_completion_, v1, v5);
    return swift_continuation_await();
  }
  else
  {

    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1BC23EE98()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 328) = *(_QWORD *)(*(_QWORD *)v0 + 112);
  return swift_task_switch();
}

uint64_t sub_1BC23EEF8()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 320);

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC23EF38()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22[2];

  v1 = *(void **)(v0 + 304);
  swift_willThrow();

  v2 = *(void **)(v0 + 312);
  sub_1BC2B39A4();
  swift_bridgeObjectRetain();
  v3 = v2;
  swift_bridgeObjectRetain();
  v4 = v2;
  v5 = sub_1BC2B39D4();
  v6 = sub_1BC2B48C8();
  if (os_log_type_enabled(v5, v6))
  {
    v18 = *(void **)(v0 + 296);
    v19 = *(_QWORD *)(v0 + 280);
    v7 = *(_QWORD *)(v0 + 264);
    v20 = *(_QWORD *)(v0 + 272);
    v21 = *(_QWORD *)(v0 + 288);
    v8 = *(_QWORD *)(v0 + 256);
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v22[0] = v10;
    *(_DWORD *)v9 = 136446466;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 240) = sub_1BC12540C(v8, v7, v22);
    sub_1BC2B4FD0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 12) = 2082;
    *(_QWORD *)(v0 + 248) = v2;
    v11 = v2;
    sub_1BC0F6274();
    v12 = sub_1BC2B4490();
    *(_QWORD *)(v0 + 232) = sub_1BC12540C(v12, v13, v22);
    sub_1BC2B4FD0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BC0DC000, v5, v6, "Could not delete schedule after archiving medication %{public}s error %{public}s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v10, -1, -1);
    MEMORY[0x1BCCEF3A0](v9, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v21, v20);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 288);
    v15 = *(_QWORD *)(v0 + 272);
    v16 = *(_QWORD *)(v0 + 280);

    swift_bridgeObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC23F1B0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22[2];

  v1 = *(void **)(v0 + 320);
  swift_willThrow();

  v2 = *(void **)(v0 + 328);
  sub_1BC2B39A4();
  swift_bridgeObjectRetain();
  v3 = v2;
  swift_bridgeObjectRetain();
  v4 = v2;
  v5 = sub_1BC2B39D4();
  v6 = sub_1BC2B48C8();
  if (os_log_type_enabled(v5, v6))
  {
    v18 = *(void **)(v0 + 296);
    v19 = *(_QWORD *)(v0 + 280);
    v7 = *(_QWORD *)(v0 + 264);
    v20 = *(_QWORD *)(v0 + 272);
    v21 = *(_QWORD *)(v0 + 288);
    v8 = *(_QWORD *)(v0 + 256);
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v22[0] = v10;
    *(_DWORD *)v9 = 136446466;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 240) = sub_1BC12540C(v8, v7, v22);
    sub_1BC2B4FD0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 12) = 2082;
    *(_QWORD *)(v0 + 248) = v2;
    v11 = v2;
    sub_1BC0F6274();
    v12 = sub_1BC2B4490();
    *(_QWORD *)(v0 + 232) = sub_1BC12540C(v12, v13, v22);
    sub_1BC2B4FD0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BC0DC000, v5, v6, "Could not delete schedule after archiving medication %{public}s error %{public}s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v10, -1, -1);
    MEMORY[0x1BCCEF3A0](v9, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v21, v20);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 288);
    v15 = *(_QWORD *)(v0 + 272);
    v16 = *(_QWORD *)(v0 + 280);

    swift_bridgeObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_1BC23F428()
{
  return sub_1BC23F450(&qword_1EF400480, (Class *)0x1E0CB6D40);
}

id sub_1BC23F43C()
{
  return sub_1BC23F450(&qword_1EF400488, (Class *)0x1E0D2C440);
}

id sub_1BC23F450(uint64_t *a1, Class *a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;

  v3 = *a1;
  v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    v5 = *(id *)(v2 + *a1);
  }
  else
  {
    v6 = objc_msgSend(objc_allocWithZone(*a2), sel_initWithHealthStore_, *(_QWORD *)(v2 + qword_1EF4004A8));
    v7 = *(void **)(v2 + v3);
    *(_QWORD *)(v2 + v3) = v6;
    v5 = v6;

    v4 = 0;
  }
  v8 = v4;
  return v5;
}

uint64_t OptionsDataSource.__allocating_init(with:listManager:healthStore:analyticsManager:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  swift_allocObject();
  return OptionsDataSource.init(with:listManager:healthStore:analyticsManager:)(a1, a2, a3, a4);
}

uint64_t OptionsDataSource.init(with:listManager:healthStore:analyticsManager:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  id v10;
  uint64_t v11;

  swift_retain();
  sub_1BC2B39A4();
  v9 = (_QWORD *)(v4 + qword_1EF400478);
  *v9 = 0xD000000000000020;
  v9[1] = 0x80000001BC2D38A0;
  *(_QWORD *)(v4 + qword_1EF400480) = 0;
  *(_QWORD *)(v4 + qword_1EF400488) = 0;
  *(_QWORD *)(v4 + qword_1EF400490) = 0;
  *(_QWORD *)(v4 + qword_1EF400498) = a2;
  *(_QWORD *)(v4 + qword_1EF4004A0) = a1;
  *(_QWORD *)(v4 + qword_1EF4004A8) = a3;
  *(_QWORD *)(v4 + qword_1EF4004B0) = a4;
  swift_retain();
  swift_retain();
  v10 = a3;
  swift_retain();
  swift_release();
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8C50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BC2B2BC4();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BC2B9600;
  sub_1BC2B2BAC();
  sub_1BC2B2BAC();
  sub_1BC2B2BAC();
  v11 = sub_1BC2B2750();
  swift_retain();
  sub_1BC23F760();
  sub_1BC23F998();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  return v11;
}

uint64_t sub_1BC23F760()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v7;
  uint64_t *v8;
  void *v10;

  sub_1BC2B2744();
  sub_1BC2B2A08();
  swift_release();
  v0 = sub_1BC240034();
  sub_1BC0F7CE0(v0);
  swift_bridgeObjectRelease();
  sub_1BC2B2C24();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1BC2B2744();
  sub_1BC2B2A08();
  swift_release();
  sub_1BC0F1278(0, (unint64_t *)&qword_1EDA0FE38, (unint64_t *)&qword_1EDA0F7C0, MEMORY[0x1E0D2A060], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1BC2B92D0;
  v2 = sub_1BC2B3938();
  sub_1BC2B3ED8();
  sub_1BC23E384((uint64_t)v10, v2);
  swift_bridgeObjectRelease();

  v3 = sub_1BC2B2D98();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B350];
  *(_QWORD *)(v1 + 56) = v3;
  v5 = sub_1BC0E519C((unint64_t *)&qword_1EF3F8CE8, v4, MEMORY[0x1E0D2B340]);
  *(_QWORD *)(v1 + 64) = v5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v1 + 32));
  sub_1BC240B64((uint64_t)boxed_opaque_existential_1);
  sub_1BC2B2C24();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1BC2B2744();
  sub_1BC2B2A08();
  swift_release();
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BC2B92D0;
  *(_QWORD *)(v7 + 56) = v3;
  *(_QWORD *)(v7 + 64) = v5;
  v8 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v7 + 32));
  sub_1BC2410B8((uint64_t)v8);
  sub_1BC2B2C24();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC23F998()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  id v45;

  v1 = v0;
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0FCC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v42 = (char *)&v32 - v3;
  sub_1BC243598();
  v5 = v4;
  v33 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC243764();
  v9 = *(_QWORD *)(v8 - 8);
  v34 = v8;
  v35 = v9;
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC243890();
  v13 = *(_QWORD *)(v12 - 8);
  v36 = v12;
  v37 = v13;
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC243910();
  v17 = *(_QWORD *)(v16 - 8);
  v39 = v16;
  v40 = v17;
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC243988();
  v41 = v20;
  v43 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v38 = (char *)&v32 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = *(id *)(v0 + qword_1EF4004A0);
  sub_1BC0E7940();
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1BC2B7770;
  swift_retain();
  sub_1BC2B3ED8();
  v44 = v22;
  sub_1BC2B45A4();
  sub_1BC106408();
  sub_1BC0E519C(&qword_1EF3F9748, (uint64_t (*)(uint64_t))sub_1BC106408, MEMORY[0x1E0C95FB8]);
  sub_1BC2B4058();
  swift_release();
  swift_bridgeObjectRelease();
  v45 = (id)sub_1BC2B3950();
  sub_1BC24382C();
  sub_1BC0E519C(&qword_1EF400540, (uint64_t (*)(uint64_t))sub_1BC243598, MEMORY[0x1E0C95788]);
  sub_1BC0E519C((unint64_t *)&qword_1EDA0FB58, (uint64_t (*)(uint64_t))sub_1BC24382C, MEMORY[0x1E0C95D90]);
  sub_1BC2B3FF8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v7, v5);
  sub_1BC0E519C(&qword_1EF400550, (uint64_t (*)(uint64_t))sub_1BC243764, MEMORY[0x1E0C95698]);
  v23 = v34;
  sub_1BC2B4004();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v11, v23);
  sub_1BC0E519C(&qword_1EF400560, (uint64_t (*)(uint64_t))sub_1BC243890, MEMORY[0x1E0C95950]);
  v24 = v36;
  sub_1BC2B4088();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v15, v24);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FFF0);
  v45 = (id)sub_1BC2B4A0C();
  v25 = sub_1BC2B49C4();
  v26 = (uint64_t)v42;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v42, 1, 1, v25);
  sub_1BC0E519C(&qword_1EF400570, (uint64_t (*)(uint64_t))sub_1BC243910, MEMORY[0x1E0C958E0]);
  sub_1BC1019D8();
  v28 = v38;
  v27 = v39;
  sub_1BC2B4064();
  sub_1BC101BB8(v26);

  (*(void (**)(char *, uint64_t))(v40 + 8))(v19, v27);
  swift_allocObject();
  swift_weakInit();
  sub_1BC0E519C(&qword_1EF400578, (uint64_t (*)(uint64_t))sub_1BC243988, MEMORY[0x1E0C95CB8]);
  v29 = v41;
  v30 = sub_1BC2B40A0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v28, v29);
  *(_QWORD *)(v1 + qword_1EF400490) = v30;
  return swift_release();
}

uint64_t sub_1BC23FE94@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t result;

  v3 = *a1;
  sub_1BC243A44();
  v4 = sub_1BC2B395C();
  v5 = sub_1BC23E384(v3, v4);
  result = swift_bridgeObjectRelease();
  *a2 = v5 & 1;
  return result;
}

uint64_t sub_1BC23FEF8()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t *boxed_opaque_existential_1;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    sub_1BC2B2744();
    swift_release();
    sub_1BC2B2A08();
    swift_release();
    sub_1BC0F1278(0, (unint64_t *)&qword_1EDA0FE38, (unint64_t *)&qword_1EDA0F7C0, MEMORY[0x1E0D2A060], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v1 = swift_allocObject();
    *(_OWORD *)(v1 + 16) = xmmword_1BC2B92D0;
    v2 = sub_1BC2B2D98();
    v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B350];
    *(_QWORD *)(v1 + 56) = v2;
    *(_QWORD *)(v1 + 64) = sub_1BC0E519C((unint64_t *)&qword_1EF3F8CE8, v3, MEMORY[0x1E0D2B340]);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v1 + 32));
    sub_1BC240B64((uint64_t)boxed_opaque_existential_1);
    sub_1BC2B2C24();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BC240034()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  char *v35;
  uint64_t v36;
  id v37;
  char *v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char *v51;
  uint64_t v52;
  _QWORD v54[3];
  uint64_t v55;
  uint64_t v56;
  unsigned int v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v60;
  unsigned int v61;
  void (*v62)(char *, uint64_t);
  void (*v63)(char *, uint64_t);
  void (*v64)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  void (*v66)(char *);
  unsigned int v67;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(uint64_t *, char *, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  _BYTE *v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;

  v92 = sub_1BC2B2FA8();
  v75 = *(_QWORD *)(v92 - 8);
  MEMORY[0x1E0C80A78](v92);
  v91 = (char *)v54 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC0E7998(0, &qword_1EDA0FAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v79 = (char *)v54 - v3;
  v88 = sub_1BC2B2C6C();
  v74 = *(_QWORD *)(v88 - 8);
  MEMORY[0x1E0C80A78](v88);
  v78 = (char *)v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, &qword_1EDA0FAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1C58], v1);
  MEMORY[0x1E0C80A78](v5);
  v86 = (char *)v54 - v6;
  v87 = sub_1BC2B3A94();
  v7 = *(_QWORD *)(v87 - 8);
  MEMORY[0x1E0C80A78](v87);
  v77 = (char *)v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = sub_1BC2B3A34();
  v9 = *(_QWORD *)(v85 - 8);
  MEMORY[0x1E0C80A78](v85);
  v11 = (char *)v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BC2B2D98();
  v81 = *(_QWORD *)(v12 - 8);
  v82 = v12;
  v13 = MEMORY[0x1E0C80A78](v12);
  v80 = (char *)v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v89 = (char *)v54 - v15;
  v16 = sub_1BC2B3CD4();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B3CC8();
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v20 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  v83 = v19;
  sub_1BC2B3C98();
  v97 = v16;
  v98 = MEMORY[0x1E0DC2398];
  v21 = __swift_allocate_boxed_opaque_existential_1(&v95);
  v76 = v17;
  v73 = *(void (**)(uint64_t *, char *, uint64_t))(v17 + 16);
  v73(v21, v19, v16);
  sub_1BC0E7998(0, (unint64_t *)&unk_1EDA0FE70, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1D38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v72 = v22;
  v23 = *(_QWORD *)(sub_1BC2B3AD0() - 8);
  v24 = *(_QWORD *)(v23 + 72);
  v25 = *(unsigned __int8 *)(v23 + 80);
  v71 = ((v25 + 32) & ~v25) + v24;
  v69 = (v25 + 32) & ~v25;
  v70 = v25 | 7;
  v26 = swift_allocObject();
  v84 = v16;
  v68 = xmmword_1BC2B92D0;
  *(_OWORD *)(v26 + 16) = xmmword_1BC2B92D0;
  v67 = *MEMORY[0x1E0DC1C20];
  v66 = *(void (**)(char *))(v9 + 104);
  v27 = v11;
  v28 = v85;
  v66(v11);
  v65 = sub_1BC2B3A40();
  v64 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56);
  v64(v86, 1, 1, v65);
  v29 = v77;
  sub_1BC2B3A88();
  sub_1BC2B3A64();
  v63 = *(void (**)(char *, uint64_t))(v7 + 8);
  v63(v29, v87);
  v62 = *(void (**)(char *, uint64_t))(v9 + 8);
  v62(v27, v28);
  v30 = swift_allocObject();
  v31 = v90;
  swift_weakInit();
  v32 = *(_QWORD *)(v31 + qword_1EF4004A0);
  v33 = swift_allocObject();
  *(_QWORD *)(v33 + 16) = v30;
  *(_QWORD *)(v33 + 24) = v32;
  v55 = v32;
  v34 = v78;
  *v78 = 1;
  v61 = *MEMORY[0x1E0D2B168];
  v74 = *(_QWORD *)(v74 + 104);
  ((void (*)(_BYTE *))v74)(v34);
  v60 = sub_1BC2B3B48();
  v59 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56);
  v35 = v79;
  v59(v79, 1, 1, v60);
  v36 = *(_QWORD *)(v31 + qword_1EF400478 + 8);
  v58 = *(_QWORD *)(v31 + qword_1EF400478);
  v56 = v36;
  v93 = v58;
  v94 = v36;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  v57 = *MEMORY[0x1E0D2B8C8];
  v75 = *(_QWORD *)(v75 + 104);
  ((void (*)(void))v75)();
  swift_retain();
  sub_1BC2B2D8C();
  v37 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  v38 = v83;
  sub_1BC2B3C98();
  v95 = 0;
  v96 = 0xE000000000000000;
  sub_1BC2B51BC();
  swift_bridgeObjectRelease();
  v95 = 0xD000000000000010;
  v96 = 0x80000001BC2D3B60;
  sub_1BC2B3C8C();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v54[2] = v95;
  v54[1] = v96;
  v39 = v84;
  v97 = v84;
  v98 = MEMORY[0x1E0DC2398];
  v40 = __swift_allocate_boxed_opaque_existential_1(&v95);
  v73(v40, v38, v39);
  *(_OWORD *)(swift_allocObject() + 16) = v68;
  v41 = v85;
  ((void (*)(char *, _QWORD, uint64_t))v66)(v27, v67, v85);
  v64(v86, 1, 1, v65);
  sub_1BC2B3A88();
  sub_1BC2B3A64();
  v63(v29, v87);
  v62(v27, v41);
  v42 = swift_allocObject();
  swift_weakInit();
  v43 = swift_allocObject();
  v44 = v55;
  *(_QWORD *)(v43 + 16) = v42;
  *(_QWORD *)(v43 + 24) = v44;
  *v34 = 1;
  ((void (*)(_BYTE *, _QWORD, uint64_t))v74)(v34, v61, v88);
  v59(v35, 1, 1, v60);
  v93 = v58;
  v94 = v56;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  ((void (*)(char *, _QWORD, uint64_t))v75)(v91, v57, v92);
  swift_retain();
  v45 = v80;
  sub_1BC2B2D8C();
  sub_1BC0E7998(0, &qword_1EF3FA2E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B350], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v46 = v81;
  v47 = *(_QWORD *)(v81 + 72);
  v48 = (*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80);
  v49 = swift_allocObject();
  *(_OWORD *)(v49 + 16) = xmmword_1BC2B92C0;
  v50 = v49 + v48;
  v51 = v89;
  v52 = v82;
  (*(void (**)(unint64_t, char *, uint64_t))(v46 + 16))(v50, v89, v82);
  (*(void (**)(unint64_t, char *, uint64_t))(v46 + 32))(v50 + v47, v45, v52);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v51, v52);
  (*(void (**)(char *, uint64_t))(v76 + 8))(v83, v84);
  return v49;
}

void sub_1BC240A94(void *a1)
{
  uint64_t Strong;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  void *v9;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v3 = Strong;
    sub_1BC2B3ED8();
    v4 = *(void **)(v3 + qword_1EF4004A8);
    v5 = objc_allocWithZone((Class)type metadata accessor for MedicationSourceListViewController());
    v6 = v4;
    v7 = v9;
    v8 = sub_1BC18A09C(v6, v7);
    objc_msgSend(a1, sel_showAdaptively_sender_, v8, a1);

    swift_release();
  }
}

uint64_t sub_1BC240B64@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  void (*v13)(uint64_t *, _QWORD);
  id v14;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37[5];

  v34 = a1;
  v2 = sub_1BC2B2FA8();
  v31 = *(_QWORD *)(v2 - 8);
  v32 = v2;
  MEMORY[0x1E0C80A78](v2);
  v33 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, &qword_1EDA0FAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v30 = (char *)&v26 - v5;
  v28 = sub_1BC2B2C6C();
  v6 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v29 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BC2B3CD4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B3CC8();
  v12 = objc_msgSend((id)objc_opt_self(), sel_tintColor);
  v13 = (void (*)(uint64_t *, _QWORD))sub_1BC2B3BE4();
  sub_1BC2B3BB4();
  v13(v37, 0);
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v14 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_1BC2B3C98();
  v37[3] = v8;
  v37[4] = MEMORY[0x1E0DC2398];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v37);
  v16 = v8;
  v27 = v8;
  v17 = v9;
  (*(void (**)(uint64_t *, char *, uint64_t))(v9 + 16))(boxed_opaque_existential_1, v11, v16);
  v18 = swift_allocObject();
  swift_weakInit();
  v19 = *(_QWORD *)(v1 + qword_1EF4004A0);
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = v18;
  *(_QWORD *)(v20 + 24) = v19;
  v21 = v28;
  v22 = v29;
  *v29 = 1;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v6 + 104))(v22, *MEMORY[0x1E0D2B168], v21);
  v23 = sub_1BC2B3B48();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v30, 1, 1, v23);
  v24 = *(_QWORD *)(v1 + qword_1EF400478 + 8);
  v35 = *(_QWORD *)(v1 + qword_1EF400478);
  v36 = v24;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  (*(void (**)(char *, _QWORD, uint64_t))(v31 + 104))(v33, *MEMORY[0x1E0D2B8C8], v32);
  swift_retain();
  swift_retain();
  sub_1BC2B2D8C();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v11, v27);
  return swift_release();
}

void sub_1BC240F84(void *a1)
{
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  id v6;
  id v7;
  void *v8;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v3 = Strong;
    sub_1BC2B3ED8();
    if ((sub_1BC2B3944() & 1) != 0)
    {
      v4 = *(_QWORD *)(v3 + qword_1EF4004B0);
      v5 = (_QWORD *)swift_allocObject();
      v5[2] = v4;
      v5[3] = v3;
      v5[4] = v8;
      swift_retain();
      swift_retain();
      v6 = v8;
      v7 = _sSo17UIAlertControllerC19HealthMedicationsUIE31makeAlertForArchivingMedication9onConfirm0K6CancelAByyc_yycSgtFZ_0((uint64_t)sub_1BC2434F8, (uint64_t)v5, 0, 0);
      swift_release();
      objc_msgSend(a1, sel_presentViewController_animated_completion_, v7, 1, 0);

      swift_release();
    }
    else
    {
      sub_1BC242540(v8);

      swift_release();
    }
  }
}

uint64_t sub_1BC2410B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  void (*v14)(uint64_t *, _QWORD);
  id v15;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _BYTE *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35[5];

  v32 = a1;
  v2 = sub_1BC2B2FA8();
  v29 = *(_QWORD *)(v2 - 8);
  v30 = v2;
  MEMORY[0x1E0C80A78](v2);
  v31 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, &qword_1EDA0FAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v28 = (char *)&v26 - v5;
  v6 = sub_1BC2B2C6C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v27 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC2B3CD4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B3CC8();
  v13 = objc_msgSend((id)objc_opt_self(), sel_systemRedColor);
  v14 = (void (*)(uint64_t *, _QWORD))sub_1BC2B3BE4();
  sub_1BC2B3BB4();
  v14(v35, 0);
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v15 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  sub_1BC2B3C98();
  v35[3] = v9;
  v35[4] = MEMORY[0x1E0DC2398];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v35);
  v17 = v9;
  v26 = v9;
  v18 = v10;
  (*(void (**)(uint64_t *, char *, uint64_t))(v10 + 16))(boxed_opaque_existential_1, v12, v17);
  v19 = swift_allocObject();
  swift_weakInit();
  v20 = *(_QWORD *)(v1 + qword_1EF4004A0);
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = v19;
  *(_QWORD *)(v21 + 24) = v20;
  v22 = v27;
  *v27 = 1;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v7 + 104))(v22, *MEMORY[0x1E0D2B168], v6);
  v23 = sub_1BC2B3B48();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v28, 1, 1, v23);
  v24 = *(_QWORD *)(v1 + qword_1EF400478 + 8);
  v33 = *(_QWORD *)(v1 + qword_1EF400478);
  v34 = v24;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  (*(void (**)(char *, _QWORD, uint64_t))(v29 + 104))(v31, *MEMORY[0x1E0D2B8C8], v30);
  swift_retain();
  swift_retain();
  sub_1BC2B2D8C();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v12, v26);
  return swift_release();
}

uint64_t sub_1BC2414A0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *, uint64_t))
{
  uint64_t result;
  void *v7;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1BC2B3ED8();
    a4(v7, a1);

    return swift_release();
  }
  return result;
}

void sub_1BC24152C(void *a1, void *a2)
{
  uint64_t v2;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  objc_class *v11;
  char *v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  objc_super v20;

  v5 = objc_msgSend((id)objc_opt_self(), sel_sharedInstanceForHealthStore_, *(_QWORD *)(v2 + qword_1EF4004A8));
  v6 = objc_msgSend(v5, sel_profile);

  v7 = objc_msgSend(v6, sel_displayTypeController);
  if (v7)
  {
    v8 = v7;
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EF400510);
    v9 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_medicationDoseEventTypeForIdentifier_, *MEMORY[0x1E0CB5418]);
    v10 = objc_msgSend(v8, sel_displayTypeForObjectType_, v9);

    if (v10)
    {
      v11 = (objc_class *)type metadata accessor for MedicationListAllDataProvider();
      v12 = (char *)objc_allocWithZone(v11);
      v13 = OBJC_IVAR____TtC19HealthMedicationsUI29MedicationListAllDataProvider_predicate;
      *(_QWORD *)&v12[OBJC_IVAR____TtC19HealthMedicationsUI29MedicationListAllDataProvider_predicate] = 0;
      *(_QWORD *)&v12[OBJC_IVAR____TtC19HealthMedicationsUI29MedicationListAllDataProvider_medication] = a1;
      v14 = *(void **)&v12[v13];
      *(_QWORD *)&v12[v13] = 0;
      v15 = a1;
      v16 = v10;
      v17 = v6;

      v20.receiver = v12;
      v20.super_class = v11;
      v18 = objc_msgSendSuper2(&v20, sel_initWithDisplayType_profile_, v16, v17);

      v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F2C0]), sel_initWithDisplayType_profile_dataProvider_usingInsetStyling_, v16, v17, v18, 1);
      objc_msgSend(a2, sel_showAdaptively_sender_, v19, a2);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  sub_1BC2B51BC();
  sub_1BC2B54F8();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  sub_1BC2B44FC();
  sub_1BC2B52B8();
  __break(1u);
}

void sub_1BC2417C4(void *a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  _QWORD *v16;
  id v17;
  void *v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  id v28;
  void *aBlock;
  uint64_t v30;
  void (*v31)(uint64_t, void *);
  void *v32;
  void (*v33)(uint64_t);
  _QWORD *v34;

  v3 = v2;
  v26 = *v2;
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v5 = (void *)qword_1EDA0FEF8;
  sub_1BC0F1278(0, qword_1EDA0ED40, (unint64_t *)&qword_1EDA0FED0, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BC2B92D0;
  aBlock = a1;
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
  v7 = v5;
  swift_bridgeObjectRetain();
  v8 = sub_1BC2B3758();
  v10 = v9;
  *(_QWORD *)(v6 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v6 + 64) = sub_1BC0F2748();
  *(_QWORD *)(v6 + 32) = v8;
  *(_QWORD *)(v6 + 40) = v10;
  sub_1BC2B2144();
  if (*(_QWORD *)(v6 + 16))
  {
    sub_1BC2B443C();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();

  }
  swift_bridgeObjectRelease();
  v11 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  v12 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  v13 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend((id)objc_opt_self(), sel_alertControllerWithTitle_message_preferredStyle_, v12, v13, 1, 0xE000000000000000);

  v15 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a1;
  v16[3] = v3;
  v16[4] = a2;
  v16[5] = v26;
  v17 = a1;
  swift_retain();
  v28 = a2;
  v18 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  v33 = sub_1BC2433F8;
  v34 = v16;
  aBlock = (void *)MEMORY[0x1E0C809B0];
  v30 = 1107296256;
  v31 = sub_1BC1D2994;
  v32 = &block_descriptor_9_0;
  v19 = _Block_copy(&aBlock);
  swift_release();
  v20 = (void *)objc_opt_self();
  v21 = objc_msgSend(v20, sel_actionWithTitle_style_handler_, v18, 2, v19, 0xE000000000000000);
  _Block_release(v19);

  objc_msgSend(v14, sel_addAction_, v21);
  v22 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  v23 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  v33 = (void (*)(uint64_t))nullsub_1;
  v34 = 0;
  aBlock = (void *)MEMORY[0x1E0C809B0];
  v30 = 1107296256;
  v31 = sub_1BC1D2994;
  v32 = &block_descriptor_12_0;
  v24 = _Block_copy(&aBlock);
  swift_release();
  v25 = objc_msgSend(v20, sel_actionWithTitle_style_handler_, v23, 1, v24, 0xE000000000000000);
  _Block_release(v24);

  objc_msgSend(v14, sel_addAction_, v25);
  objc_msgSend(v28, sel_presentViewController_animated_completion_, v14, 1, 0);

}

void sub_1BC241CF0(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  _QWORD *v31;
  void *v32;
  id v33;
  id v34;
  _QWORD v35[2];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t aBlock[6];

  v9 = sub_1BC2B39E0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B39C8();
  v13 = a2;
  v14 = sub_1BC2B39D4();
  v15 = sub_1BC2B48C8();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc();
    v38 = v9;
    v17 = v16;
    v37 = swift_slowAlloc();
    aBlock[0] = v37;
    *(_DWORD *)v17 = 136315394;
    v39 = a3;
    v18 = sub_1BC2B54F8();
    v40 = a5;
    v41 = sub_1BC12540C(v18, v19, aBlock);
    sub_1BC2B4FD0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2080;
    v35[1] = v17 + 14;
    v20 = objc_msgSend(v13, sel_semanticIdentifier);
    v21 = objc_msgSend(v20, sel_stringValue);
    v36 = v10;
    v22 = a4;
    v23 = v21;

    v24 = sub_1BC2B4460();
    v26 = v25;

    a4 = v22;
    v27 = v24;
    a5 = v40;
    v41 = sub_1BC12540C(v27, v26, aBlock);
    sub_1BC2B4FD0();

    a3 = v39;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC0DC000, v14, v15, "[%s] Attempting to delete medication with semantic identifier %s", (uint8_t *)v17, 0x16u);
    v28 = v37;
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v28, -1, -1);
    MEMORY[0x1BCCEF3A0](v17, -1, -1);

    (*(void (**)(char *, uint64_t))(v36 + 8))(v12, v38);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  v29 = sub_1BC23F428();
  v30 = *(_QWORD *)(a3 + qword_1EF4004B0);
  v31 = (_QWORD *)swift_allocObject();
  v31[2] = v13;
  v31[3] = a4;
  v31[4] = v30;
  v31[5] = a5;
  aBlock[4] = (uint64_t)sub_1BC243438;
  aBlock[5] = (uint64_t)v31;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1BC2599E8;
  aBlock[3] = (uint64_t)&block_descriptor_18_0;
  v32 = _Block_copy(aBlock);
  v33 = v13;
  swift_retain();
  v34 = a4;
  swift_release();
  objc_msgSend(v29, sel_deleteUserDomainConcept_completion_, v33, v32);
  _Block_release(v32);

}

uint64_t sub_1BC242024(char a1, void *a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  uint64_t (*v23)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD aBlock[6];

  v25 = a6;
  v11 = sub_1BC2B42E0();
  v28 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1BC2B4304();
  v26 = *(_QWORD *)(v14 - 8);
  v27 = v14;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FFF0);
  v17 = (void *)sub_1BC2B4A0C();
  v18 = swift_allocObject();
  *(_BYTE *)(v18 + 16) = a1;
  *(_QWORD *)(v18 + 24) = a3;
  *(_QWORD *)(v18 + 32) = a4;
  *(_QWORD *)(v18 + 40) = a5;
  *(_QWORD *)(v18 + 48) = a2;
  *(_QWORD *)(v18 + 56) = v25;
  aBlock[4] = sub_1BC243480;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC1AEAE4;
  aBlock[3] = &block_descriptor_24;
  v19 = _Block_copy(aBlock);
  v20 = a3;
  v21 = a4;
  swift_retain();
  v22 = a2;
  swift_release();
  sub_1BC2B42F8();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  v23 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1BC0E519C((unint64_t *)&qword_1EDA0FFC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0FFD0, v23, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC17219C();
  sub_1BC2B509C();
  MEMORY[0x1BCCEE194](0, v16, v13, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v11);
  return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v16, v27);
}

uint64_t sub_1BC242268(char a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  void *v15;
  id v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v9 = sub_1BC2B39E0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
  {
    v13 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
    objc_msgSend(v13, sel_removeMedication_, a2);

    v14 = objc_msgSend(a3, sel_navigationController);
    if (v14)
    {
      v15 = v14;

    }
    return sub_1BC2B37E8();
  }
  else
  {
    sub_1BC2B39C8();
    v17 = a5;
    v18 = a5;
    v19 = sub_1BC2B39D4();
    v20 = sub_1BC2B48C8();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = swift_slowAlloc();
      v22 = swift_slowAlloc();
      v29 = v22;
      *(_DWORD *)v21 = 136315394;
      v23 = sub_1BC2B54F8();
      v28 = sub_1BC12540C(v23, v24, &v29);
      sub_1BC2B4FD0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2080;
      v28 = (uint64_t)a5;
      v25 = a5;
      sub_1BC0F1278(0, &qword_1EF3F8D40, (unint64_t *)&qword_1EDA0FEA0, MEMORY[0x1E0DEDAF0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      v26 = sub_1BC2B4478();
      v28 = sub_1BC12540C(v26, v27, &v29);
      sub_1BC2B4FD0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BC0DC000, v19, v20, "[%s] Error deleting medication %s", (uint8_t *)v21, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v22, -1, -1);
      MEMORY[0x1BCCEF3A0](v21, -1, -1);
    }
    else
    {

    }
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
}

void sub_1BC242540(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  id v9;
  id v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  id v14;
  _QWORD aBlock[6];

  v3 = *v1;
  v4 = sub_1BC2B3968();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BC2B3944();
  ListConceptManager.toggleMedicationPinState(for:onCommitHandler:)(a1);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) != 0)
  {
    v9 = objc_msgSend(a1, sel_firstOntologyCoding);
    if (v9)
    {

      v10 = sub_1BC23F43C();
      v11 = swift_allocObject();
      swift_weakInit();
      v12 = (_QWORD *)swift_allocObject();
      v12[2] = v11;
      v12[3] = a1;
      v12[4] = v3;
      aBlock[4] = sub_1BC2433B8;
      aBlock[5] = v12;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1BC2599E8;
      aBlock[3] = &block_descriptor_24;
      v13 = _Block_copy(aBlock);
      v14 = a1;
      swift_release();
      objc_msgSend(v10, sel_deleteDismissedPregnancyLactationInteractionsForMedication_interactionTypes_completion_, v14, 0, v13);
      _Block_release(v13);

    }
  }
}

uint64_t sub_1BC2426E8(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t result;
  id v14;
  id v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  int v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  id v27;
  uint64_t (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  id v32;
  NSObject *v33;
  uint64_t v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  id v43;
  uint64_t v44;
  _BYTE v45[12];
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;

  v6 = sub_1BC2B39E0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = &v45[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v8);
  v12 = &v45[-v11];
  if (a2)
  {
    swift_beginAccess();
    result = swift_weakLoadStrong();
    if (result)
    {
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v10, result + qword_1EF400470, v6);
      swift_release();
      v14 = a4;
      v15 = a2;
      v16 = v14;
      v17 = a2;
      v18 = sub_1BC2B39D4();
      v19 = sub_1BC2B48C8();
      v20 = v19;
      if (os_log_type_enabled(v18, v19))
      {
        v21 = swift_slowAlloc();
        v22 = (_QWORD *)swift_slowAlloc();
        v47 = swift_slowAlloc();
        v51 = v47;
        *(_DWORD *)v21 = 136315906;
        v46 = v20;
        v23 = sub_1BC2B54F8();
        v49 = sub_1BC12540C(v23, v24, &v51);
        sub_1BC2B4FD0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v21 + 12) = 2080;
        v49 = 0xD000000000000015;
        v50 = 0x80000001BC2CD210;
        v48 = v6;
        v25 = sub_1BC2B44A8();
        v49 = sub_1BC12540C(v25, v26, &v51);
        sub_1BC2B4FD0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v21 + 22) = 2112;
        v27 = objc_msgSend(v16, sel_semanticIdentifier);
        v49 = (uint64_t)v27;
        sub_1BC2B4FD0();
        *v22 = v27;

        *(_WORD *)(v21 + 32) = 2080;
        v49 = (uint64_t)a2;
        v28 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
        sub_1BC0F1278(0, &qword_1EF3F8D40, (unint64_t *)&qword_1EDA0FEA0, MEMORY[0x1E0DEDAF0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        v29 = sub_1BC2B4F88();
        v49 = sub_1BC12540C(v29, v30, &v51);
        sub_1BC2B4FD0();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1BC0DC000, v18, (os_log_type_t)v46, "%s] Unexpected error deleting dismissed %s interactions for medication: %@, error: %s", (uint8_t *)v21, 0x2Au);
        sub_1BC106304(0, (unint64_t *)&qword_1EF3F90B8, (unint64_t *)&qword_1EF3FBD20, 0x1E0DE7910, v28);
        swift_arrayDestroy();
        MEMORY[0x1BCCEF3A0](v22, -1, -1);
        v31 = v47;
        swift_arrayDestroy();
        MEMORY[0x1BCCEF3A0](v31, -1, -1);
        MEMORY[0x1BCCEF3A0](v21, -1, -1);

        return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v10, v48);
      }
      else
      {

        return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v10, v6);
      }
    }
  }
  else
  {
    swift_beginAccess();
    result = swift_weakLoadStrong();
    if (result)
    {
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v12, result + qword_1EF400470, v6);
      swift_release();
      v32 = a4;
      v33 = sub_1BC2B39D4();
      v34 = v6;
      v35 = sub_1BC2B48E0();
      if (os_log_type_enabled(v33, v35))
      {
        v36 = swift_slowAlloc();
        v48 = v34;
        v37 = v36;
        v38 = (_QWORD *)swift_slowAlloc();
        v47 = swift_slowAlloc();
        v51 = v47;
        *(_DWORD *)v37 = 136315650;
        v39 = sub_1BC2B54F8();
        v49 = sub_1BC12540C(v39, v40, &v51);
        sub_1BC2B4FD0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v37 + 12) = 2080;
        v49 = 0xD000000000000015;
        v50 = 0x80000001BC2CD210;
        v41 = sub_1BC2B44A8();
        v49 = sub_1BC12540C(v41, v42, &v51);
        sub_1BC2B4FD0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v37 + 22) = 2112;
        v43 = objc_msgSend(v32, sel_semanticIdentifier);
        v49 = (uint64_t)v43;
        sub_1BC2B4FD0();
        *v38 = v43;

        _os_log_impl(&dword_1BC0DC000, v33, v35, "%s] Successfully deleted dismissed %s interactions for medication: %@", (uint8_t *)v37, 0x20u);
        sub_1BC106304(0, (unint64_t *)&qword_1EF3F90B8, (unint64_t *)&qword_1EF3FBD20, 0x1E0DE7910, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        swift_arrayDestroy();
        MEMORY[0x1BCCEF3A0](v38, -1, -1);
        v44 = v47;
        swift_arrayDestroy();
        MEMORY[0x1BCCEF3A0](v44, -1, -1);
        MEMORY[0x1BCCEF3A0](v37, -1, -1);

        return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v12, v48);
      }
      else
      {

        return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v12, v34);
      }
    }
  }
  return result;
}

void OptionsDataSource.__allocating_init(arrangedSections:isHidden:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void OptionsDataSource.init(arrangedSections:isHidden:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC242D9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + qword_1EF400470;
  v2 = sub_1BC2B39E0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t OptionsDataSource.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = _s19HealthMedicationsUI34InteractionSeperatorLineDataSourceCfd_0();
  v1 = v0 + qword_1EF400470;
  v2 = sub_1BC2B39E0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  return v0;
}

uint64_t OptionsDataSource.__deallocating_deinit()
{
  OptionsDataSource.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC242F4C()
{
  MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for OptionsDataSource);
  return sub_1BC2B3074();
}

Swift::Void __swiftcall OptionsDataSource.registerCells(for:)(UICollectionView *a1)
{
  sub_1BC2B2F78();
  sub_1BC2B4994();
  sub_1BC2B3038();
  sub_1BC2B497C();
}

uint64_t sub_1BC242FE4()
{
  sub_1BC2B2F78();
  sub_1BC2B4994();
  sub_1BC2B3038();
  return sub_1BC2B497C();
}

uint64_t OptionsDataSource.supplementaryItem(ofKind:at:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t result;
  id v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;

  v2 = sub_1BC2B3CD4();
  MEMORY[0x1E0C80A78](v2);
  if (sub_1BC2B25F4())
  {
    v3 = sub_1BC2B296C();
    v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2AB30];
    a1[3] = v3;
    a1[4] = sub_1BC0E519C(&qword_1EF3F8B68, v4, MEMORY[0x1E0D2AB20]);
    __swift_allocate_boxed_opaque_existential_1(a1);
    return sub_1BC2B2960();
  }
  else
  {
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v6 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();
    swift_bridgeObjectRelease();

    sub_1BC2B3C68();
    v7 = sub_1BC2B28F4();
    v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2A8B8];
    swift_allocObject();
    v9 = sub_1BC2B28E8();
    a1[3] = v7;
    result = sub_1BC0E519C((unint64_t *)&qword_1EF3F96B8, v8, MEMORY[0x1E0D2A8A0]);
    a1[4] = result;
    *a1 = v9;
  }
  return result;
}

uint64_t sub_1BC243200()
{
  return sub_1BC0E519C(&qword_1EF4004B8, (uint64_t (*)(uint64_t))type metadata accessor for OptionsDataSource, (uint64_t)&protocol conformance descriptor for OptionsDataSource);
}

uint64_t type metadata accessor for OptionsDataSource()
{
  uint64_t result;

  result = qword_1EF4004C0;
  if (!qword_1EF4004C0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC243268@<X0>(uint64_t *a1@<X8>)
{
  return OptionsDataSource.supplementaryItem(ofKind:at:)(a1);
}

uint64_t sub_1BC24327C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC2B39E0();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for OptionsDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of OptionsDataSource.__allocating_init(with:listManager:healthStore:analyticsManager:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(class metadata base offset for OptionsDataSource + v0 + 144))();
}

uint64_t dispatch thunk of OptionsDataSource.layout(for:environment:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for OptionsDataSource + *v0 + 192))();
}

uint64_t sub_1BC243360()
{
  return type metadata accessor for OptionsDataSource();
}

uint64_t sub_1BC243368()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC24338C()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1BC2433B8(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_1BC2426E8(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_1BC2433C4()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_1BC2433F8(uint64_t a1)
{
  uint64_t v1;

  sub_1BC241CF0(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1BC243404()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC243438(char a1, void *a2)
{
  uint64_t v2;

  return sub_1BC242024(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_1BC243444()
{
  id *v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC243480()
{
  uint64_t v0;

  return sub_1BC242268(*(_BYTE *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(void **)(v0 + 48));
}

uint64_t sub_1BC243498(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC2414A0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (void (*)(void *, uint64_t))sub_1BC2417C4);
}

void sub_1BC2434BC(void *a1)
{
  sub_1BC240F84(a1);
}

uint64_t sub_1BC2434C4()
{
  uint64_t v0;

  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_1BC2434F8()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 32);
  sub_1BC2B37E8();
  sub_1BC242540(v1);
}

uint64_t sub_1BC243540(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC2414A0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (void (*)(void *, uint64_t))sub_1BC24152C);
}

uint64_t objectdestroy_27Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1BC243590(void *a1)
{
  sub_1BC240A94(a1);
}

void sub_1BC243598()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF400518)
  {
    sub_1BC243660();
    sub_1BC106408();
    sub_1BC0E519C(&qword_1EF400530, (uint64_t (*)(uint64_t))sub_1BC243660, MEMORY[0x1E0C95C10]);
    sub_1BC0E519C(&qword_1EF3F9748, (uint64_t (*)(uint64_t))sub_1BC106408, MEMORY[0x1E0C95FB8]);
    v0 = sub_1BC2B3DB8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF400518);
  }
}

void sub_1BC243660()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF400520)
  {
    sub_1BC106304(255, (unint64_t *)&qword_1EDA0FC60, (unint64_t *)&qword_1EDA0FDA0, 0x1E0D2C4D8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC2436FC();
    v0 = sub_1BC2B3E3C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF400520);
  }
}

unint64_t sub_1BC2436FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF400528;
  if (!qword_1EF400528)
  {
    sub_1BC106304(255, (unint64_t *)&qword_1EDA0FC60, (unint64_t *)&qword_1EDA0FDA0, 0x1E0D2C4D8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1EF400528);
  }
  return result;
}

void sub_1BC243764()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF400538)
  {
    sub_1BC243598();
    sub_1BC24382C();
    sub_1BC0E519C(&qword_1EF400540, (uint64_t (*)(uint64_t))sub_1BC243598, MEMORY[0x1E0C95788]);
    sub_1BC0E519C((unint64_t *)&qword_1EDA0FB58, (uint64_t (*)(uint64_t))sub_1BC24382C, MEMORY[0x1E0C95D90]);
    v0 = sub_1BC2B3D64();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF400538);
  }
}

void sub_1BC24382C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDA0FB60)
  {
    sub_1BC2B3968();
    v0 = sub_1BC2B3E78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDA0FB60);
  }
}

void sub_1BC243890()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF400548)
  {
    sub_1BC243764();
    sub_1BC0E519C(&qword_1EF400550, (uint64_t (*)(uint64_t))sub_1BC243764, MEMORY[0x1E0C95698]);
    v0 = sub_1BC2B3DF4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF400548);
  }
}

void sub_1BC243910()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF400558)
  {
    sub_1BC243890();
    sub_1BC0E519C(&qword_1EF400560, (uint64_t (*)(uint64_t))sub_1BC243890, MEMORY[0x1E0C95950]);
    v0 = sub_1BC2B3DE8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF400558);
  }
}

void sub_1BC243988()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF400568)
  {
    sub_1BC243910();
    sub_1BC0E1D38(255, (unint64_t *)&qword_1EDA0FFF0);
    sub_1BC0E519C(&qword_1EF400570, (uint64_t (*)(uint64_t))sub_1BC243910, MEMORY[0x1E0C958E0]);
    sub_1BC1019D8();
    v0 = sub_1BC2B3E60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF400568);
  }
}

uint64_t sub_1BC243A3C()
{
  return sub_1BC23FEF8();
}

void sub_1BC243A44()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF400580)
  {
    sub_1BC0E1D38(255, (unint64_t *)&qword_1EDA0FDA0);
    sub_1BC2B3968();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF400580);
  }
}

void sub_1BC243AE0(uint64_t a1@<X8>)
{
  void *v1;
  id v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  id v7;
  void *v8;
  id v9;
  char *v10;
  char *v11;
  char v12;

  v3 = objc_msgSend(v1, sel_timeIntervals);
  sub_1BC1390BC();
  v4 = sub_1BC2B458C();

  if (!(v4 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v5)
      goto LABEL_3;
LABEL_12:
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  v5 = sub_1BC2B52D0();
  swift_bridgeObjectRelease();
  if (!v5)
    goto LABEL_12;
LABEL_3:
  v6 = v5 - 1;
  if (__OFSUB__(v5, 1))
  {
    __break(1u);
  }
  else if ((v4 & 0xC000000000000001) == 0)
  {
    if ((v6 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v6 < *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v7 = *(id *)(v4 + 8 * v6 + 32);
      goto LABEL_8;
    }
    __break(1u);
    goto LABEL_19;
  }
  v7 = (id)MEMORY[0x1BCCEE950](v6, v4);
LABEL_8:
  v8 = v7;
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v8, sel_cycleIntervalDays);

  if (!v9)
  {
LABEL_13:
    v11 = 0;
    v12 = 1;
    goto LABEL_14;
  }
  v10 = (char *)objc_msgSend(v9, sel_integerValue);

  v11 = v10 + 1;
  if (!__OFADD__(v10, 1))
  {
    v12 = 0;
LABEL_14:
    *(_QWORD *)a1 = v11;
    *(_BYTE *)(a1 + 8) = v12;
    return;
  }
LABEL_19:
  __break(1u);
}

uint64_t sub_1BC243C38(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *v1;
  if ((a1 & 1) == 0)
  {
    if (v2 != 2)
    {
      if (qword_1EDA0FEE8 == -1)
        goto LABEL_14;
      goto LABEL_18;
    }
    if (qword_1EDA0FEE8 == -1)
      goto LABEL_12;
LABEL_17:
    swift_once();
    goto LABEL_12;
  }
  if (v2 == 2)
  {
    if (qword_1EDA0FEE8 == -1)
    {
LABEL_12:
      v3 = (id)qword_1EDA0FEF8;
      swift_bridgeObjectRetain();
      v4 = sub_1BC2B2144();
      swift_bridgeObjectRelease();

      return v4;
    }
    goto LABEL_17;
  }
  if (v2 == 1)
  {
    if (qword_1EDA0FEE8 == -1)
      goto LABEL_12;
    goto LABEL_17;
  }
  if (qword_1EDA0FEE8 != -1)
LABEL_18:
    swift_once();
LABEL_14:
  v6 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  sub_1BC19A388();
  v7 = swift_allocObject();
  v8 = MEMORY[0x1E0DEB418];
  *(_OWORD *)(v7 + 16) = xmmword_1BC2B92D0;
  v9 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v7 + 56) = v8;
  *(_QWORD *)(v7 + 64) = v9;
  *(_QWORD *)(v7 + 32) = v2;
  v10 = sub_1BC2B443C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10;
}

void static FrequencyInterval.everyOtherDay.getter(_QWORD *a1@<X8>)
{
  *a1 = 2;
}

ValueMetadata *type metadata accessor for FrequencyInterval()
{
  return &type metadata for FrequencyInterval;
}

uint64_t sub_1BC243F64()
{
  uint64_t v0;
  uint64_t result;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = MEMORY[0x1E0DEE9D8];
  sub_1BC125B38(0, 98, 0);
  v0 = 2;
  result = v4;
  do
  {
    v5 = result;
    v3 = *(_QWORD *)(result + 16);
    v2 = *(_QWORD *)(result + 24);
    if (v3 >= v2 >> 1)
    {
      sub_1BC125B38(v2 > 1, v3 + 1, 1);
      result = v5;
    }
    *(_QWORD *)(result + 8 * v3 + 32) = v0;
    *(_QWORD *)(result + 16) = v3 + 1;
    ++v0;
  }
  while (v0 != 100);
  return result;
}

uint64_t InteractionSeparatorLineItem.__allocating_init()()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v0 = swift_allocObject();
  sub_1BC2B242C();
  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionSeparatorLineItem_reuseIdentifier);
  type metadata accessor for InteractionSeparatorLineCell();
  sub_1BC0E519C(&qword_1EF3F94F8, (uint64_t (*)(uint64_t))type metadata accessor for InteractionSeparatorLineCell, (uint64_t)&protocol conformance descriptor for InteractionSeparatorLineCell);
  *v1 = sub_1BC2B2930();
  v1[1] = v2;
  return v0;
}

uint64_t InteractionSeparatorLineItem.reuseIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionSeparatorLineItem_reuseIdentifier);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC2440CC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionSeparatorLineItem_reuseIdentifier);
  sub_1BC2B23FC();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t InteractionSeparatorLineItem.init()()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  sub_1BC2B242C();
  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionSeparatorLineItem_reuseIdentifier);
  type metadata accessor for InteractionSeparatorLineCell();
  sub_1BC0E519C(&qword_1EF3F94F8, (uint64_t (*)(uint64_t))type metadata accessor for InteractionSeparatorLineCell, (uint64_t)&protocol conformance descriptor for InteractionSeparatorLineCell);
  *v1 = sub_1BC2B2930();
  v1[1] = v2;
  return v0;
}

uint64_t static InteractionSeparatorLineItem.== infix(_:_:)()
{
  return sub_1BC2B2414();
}

uint64_t sub_1BC2441DC()
{
  swift_bridgeObjectRetain();
  sub_1BC2B44D8();
  swift_bridgeObjectRelease();
  sub_1BC2B2438();
  sub_1BC0E519C((unint64_t *)&unk_1EF3F8FE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  return sub_1BC2B43F4();
}

uint64_t InteractionSeparatorLineItem.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionSeparatorLineItem_uuid;
  v2 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t InteractionSeparatorLineItem.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionSeparatorLineItem_uuid;
  v2 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC244330()
{
  sub_1BC2B5450();
  sub_1BC2B44D8();
  sub_1BC2B2438();
  sub_1BC0E519C((unint64_t *)&unk_1EF3F8FE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_1BC2B43F4();
  return sub_1BC2B548C();
}

uint64_t sub_1BC2443C0()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*v0 + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionSeparatorLineItem_reuseIdentifier);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC2443FC()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*v0 + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionSeparatorLineItem_reuseIdentifier);
  sub_1BC2B23FC();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1BC244480()
{
  return sub_1BC2B2414();
}

uint64_t sub_1BC24449C()
{
  sub_1BC2B44D8();
  sub_1BC2B2438();
  sub_1BC0E519C((unint64_t *)&unk_1EF3F8FE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  return sub_1BC2B43F4();
}

uint64_t sub_1BC24451C()
{
  return sub_1BC0E519C(&qword_1EF400588, (uint64_t (*)(uint64_t))type metadata accessor for InteractionSeparatorLineItem, (uint64_t)&protocol conformance descriptor for InteractionSeparatorLineItem);
}

uint64_t type metadata accessor for InteractionSeparatorLineItem()
{
  uint64_t result;

  result = qword_1EF4005B8;
  if (!qword_1EF4005B8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC244584()
{
  sub_1BC2B5450();
  sub_1BC2B44D8();
  sub_1BC2B2438();
  sub_1BC0E519C((unint64_t *)&unk_1EF3F8FE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_1BC2B43F4();
  return sub_1BC2B548C();
}

uint64_t sub_1BC244614()
{
  return type metadata accessor for InteractionSeparatorLineItem();
}

uint64_t sub_1BC24461C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC2B2438();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for InteractionSeparatorLineItem()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InteractionSeparatorLineItem.uniqueIdentifier.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of InteractionSeparatorLineItem.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of InteractionSeparatorLineItem.hash(into:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of InteractionSeparatorLineItem.hashValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t DosageItem.init(uuid:isEditEnabled:medication:conceptBackedLoggingUnits:dataProvider:updateHandler:deletionHandler:validationHandler:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v19;
  int *v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  char *v25;
  uint64_t v26;
  uint64_t result;
  _QWORD *v28;

  type metadata accessor for DosageCollectionViewCell(0);
  sub_1BC0E519C(&qword_1EF3FD968, type metadata accessor for DosageCollectionViewCell, (uint64_t)&protocol conformance descriptor for DosageCollectionViewCell);
  *a9 = sub_1BC2B2930();
  a9[1] = v19;
  a9[2] = 0;
  a9[3] = 0xE000000000000000;
  v20 = (int *)type metadata accessor for DosageItem(0);
  a9[4] = 0;
  a9[5] = 0;
  v21 = (uint64_t *)((char *)a9 + v20[11]);
  v22 = (uint64_t *)((char *)a9 + v20[12]);
  v23 = (uint64_t *)((char *)a9 + v20[13]);
  v24 = (uint64_t *)((char *)a9 + v20[14]);
  v25 = (char *)a9 + v20[7];
  v26 = sub_1BC2B2438();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v25, a1, v26);
  *((_BYTE *)a9 + v20[8]) = a2;
  *(uint64_t *)((char *)a9 + v20[9]) = a3;
  v28 = (uint64_t *)((char *)a9 + v20[10]);
  *v28 = a4;
  v28[1] = a5;
  v28[2] = a6;
  v28[3] = a7;
  *v21 = a8;
  v21[1] = a10;
  *v22 = a11;
  v22[1] = a12;
  *v24 = a13;
  v24[1] = a14;
  *v23 = a15;
  v23[1] = a16;
  return result;
}

uint64_t type metadata accessor for DosageCollectionViewCell(uint64_t a1)
{
  return sub_1BC0E5428(a1, (uint64_t *)&unk_1EF4007A8);
}

uint64_t type metadata accessor for DosageItem(uint64_t a1)
{
  return sub_1BC0E5428(a1, qword_1EF400700);
}

uint64_t DosageItem.reuseIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DosageItem.reuseIdentifier.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*DosageItem.reuseIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t DosageItem.uniqueIdentifier.getter()
{
  type metadata accessor for DosageItem(0);
  sub_1BC2B23FC();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  return 0x7449656761736F44;
}

uint64_t DosageItem.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DosageItem.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*DosageItem.title.modify())()
{
  return nullsub_1;
}

uint64_t DosageItem.placeholderText.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DosageItem.placeholderText.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*DosageItem.placeholderText.modify())()
{
  return nullsub_1;
}

uint64_t DosageItem.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for DosageItem(0) + 28);
  v4 = sub_1BC2B2438();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t DosageItem.isEditEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for DosageItem(0) + 32));
}

uint64_t DosageItem.isEditEnabled.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for DosageItem(0);
  *(_BYTE *)(v1 + *(int *)(result + 32)) = a1;
  return result;
}

uint64_t (*DosageItem.isEditEnabled.modify())()
{
  type metadata accessor for DosageItem(0);
  return nullsub_1;
}

id DosageItem.medication.getter()
{
  uint64_t v0;

  return *(id *)(v0 + *(int *)(type metadata accessor for DosageItem(0) + 36));
}

uint64_t DosageItem.conceptBackedLoggingUnits.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for DosageItem(0) + 40));
  v2 = *v1;
  sub_1BC1BAC0C(*v1, v1[1]);
  return v2;
}

uint64_t sub_1BC244B68(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;

  v2 = *a1;
  if (*a1)
    v3 = a1[1];
  else
    v3 = 0;
  v4 = (uint64_t *)(a2 + *(int *)(type metadata accessor for DosageItem(0) + 44));
  v5 = *v4;
  sub_1BC0F2690(v2);
  result = sub_1BC0F2600(v5);
  *v4 = v2;
  v4[1] = v3;
  return result;
}

uint64_t DosageItem.dataProvider.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for DosageItem(0) + 44));
  sub_1BC0F2690(v1);
  return v1;
}

uint64_t DosageItem.dataProvider.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t result;

  v5 = (uint64_t *)(v2 + *(int *)(type metadata accessor for DosageItem(0) + 44));
  result = sub_1BC0F2600(*v5);
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*DosageItem.dataProvider.modify())()
{
  type metadata accessor for DosageItem(0);
  return nullsub_1;
}

uint64_t sub_1BC244C7C@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for DosageItem(0) + 48));
  v4 = *v3;
  v5 = v3[1];
  if (*v3)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_1BC1777D0;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_1BC0F2690(v4);
}

uint64_t sub_1BC244CF4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_1BC118CE4;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(a2 + *(int *)(type metadata accessor for DosageItem(0) + 48));
  v8 = *v7;
  sub_1BC0F2690(v3);
  result = sub_1BC0F2600(v8);
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  return result;
}

uint64_t DosageItem.updateHandler.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for DosageItem(0) + 48));
  sub_1BC0F2690(v1);
  return v1;
}

uint64_t DosageItem.updateHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t result;

  v5 = (uint64_t *)(v2 + *(int *)(type metadata accessor for DosageItem(0) + 48));
  result = sub_1BC0F2600(*v5);
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*DosageItem.updateHandler.modify())()
{
  type metadata accessor for DosageItem(0);
  return nullsub_1;
}

uint64_t sub_1BC244E3C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)@<X0>(uint64_t@<X0>, uint64_t@<X1>, _QWORD *@<X2>, _BYTE *@<X8>);

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for DosageItem(0) + 52));
  v4 = *v3;
  v5 = v3[1];
  if (*v3)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_1BC24C844;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;
  return sub_1BC0F2690(v4);
}

uint64_t sub_1BC244EB4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t *v7;
  uint64_t v8;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_1BC24C80C;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(a2 + *(int *)(type metadata accessor for DosageItem(0) + 52));
  v8 = *v7;
  sub_1BC0F2690(v3);
  result = sub_1BC0F2600(v8);
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  return result;
}

uint64_t DosageItem.validationHandler.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for DosageItem(0) + 52));
  sub_1BC0F2690(v1);
  return v1;
}

uint64_t DosageItem.validationHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t result;

  v5 = (uint64_t *)(v2 + *(int *)(type metadata accessor for DosageItem(0) + 52));
  result = sub_1BC0F2600(*v5);
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*DosageItem.validationHandler.modify())()
{
  type metadata accessor for DosageItem(0);
  return nullsub_1;
}

uint64_t sub_1BC244FFC@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for DosageItem(0) + 56));
  v4 = *v3;
  v5 = v3[1];
  if (*v3)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_1BC118CE4;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_1BC0F2690(v4);
}

uint64_t sub_1BC245074(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_1BC1777D0;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(a2 + *(int *)(type metadata accessor for DosageItem(0) + 56));
  v8 = *v7;
  sub_1BC0F2690(v3);
  result = sub_1BC0F2600(v8);
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  return result;
}

uint64_t DosageItem.deletionHandler.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for DosageItem(0) + 56));
  sub_1BC0F2690(v1);
  return v1;
}

uint64_t DosageItem.deletionHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t result;

  v5 = (uint64_t *)(v2 + *(int *)(type metadata accessor for DosageItem(0) + 56));
  result = sub_1BC0F2600(*v5);
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*DosageItem.deletionHandler.modify())()
{
  type metadata accessor for DosageItem(0);
  return nullsub_1;
}

uint64_t sub_1BC2451BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 48));
  sub_1BC0F2690(v2);
  return v2;
}

uint64_t sub_1BC2451F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t *v6;
  uint64_t result;

  if (a1)
    v5 = a2;
  else
    v5 = 0;
  v6 = (uint64_t *)(v3 + *(int *)(a3 + 48));
  result = sub_1BC0F2600(*v6);
  *v6 = a1;
  v6[1] = v5;
  return result;
}

uint64_t (*sub_1BC245238(uint64_t a1, uint64_t a2))()
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(int *)(a2 + 48);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = (uint64_t *)(v2 + v3);
  v6 = *v4;
  v5 = v4[1];
  if (!v6)
    v5 = 0;
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v2;
  return sub_1BC186A90;
}

uint64_t sub_1BC24526C()
{
  sub_1BC2B23FC();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  return 0x7449656761736F44;
}

uint64_t sub_1BC2452D0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = (_QWORD *)(*a2 + OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_baseIdentifier);
  swift_beginAccess();
  *v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC245338()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_baseIdentifier);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1BC24538C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_baseIdentifier);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1BC2453E8())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1BC24542C(uint64_t a1, _QWORD **a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[40];

  sub_1BC0FC574(a1, (uint64_t)v7, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
  v3 = *a2;
  v4 = (uint64_t)*a2 + OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_item;
  swift_beginAccess();
  sub_1BC0F3E44((uint64_t)v7, v4);
  v5 = swift_endAccess();
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v3) + 0x180))(v5);
  return sub_1BC0E8594((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
}

uint64_t sub_1BC2454CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_item;
  swift_beginAccess();
  return sub_1BC0FC574(v3, a1, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
}

uint64_t sub_1BC245524(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_item;
  swift_beginAccess();
  sub_1BC0F3E44(a1, v3);
  v4 = swift_endAccess();
  (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v1) + 0x180))(v4);
  return sub_1BC0E8594(a1, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
}

uint64_t (*sub_1BC2455B0(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC2455F8;
}

uint64_t sub_1BC2455F8(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & **(_QWORD **)(a1 + 24)) + 0x180))(result);
  return result;
}

uint64_t sub_1BC245640@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  _BYTE v17[24];

  v2 = v1;
  ObjectType = swift_getObjectType();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1D38];
  sub_1BC0E7998(0, &qword_1EDA0FAE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1D38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v7);
  v11 = &v17[-v10];
  v12 = v2 + OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell____lazy_storage___deleteAccessory;
  swift_beginAccess();
  sub_1BC118700(v12, (uint64_t)v11, &qword_1EDA0FAE8, v5);
  v13 = sub_1BC2B3AD0();
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v14 + 32))(a1, v11, v13);
  v15 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1D38];
  sub_1BC0F2444((uint64_t)v11, &qword_1EDA0FAE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1D38]);
  sub_1BC245808(ObjectType, a1);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v14 + 16))(v9, a1, v13);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  swift_beginAccess();
  sub_1BC24C764((uint64_t)v9, v12, &qword_1EDA0FAE8, v15);
  return swift_endAccess();
}

uint64_t sub_1BC245808@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[2];

  v18[1] = a2;
  sub_1BC0E7998(0, &qword_1EDA0FAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1C58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v18 - v4;
  v6 = sub_1BC2B3A28();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BC2B3A34();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E0DC1C20], v10);
  v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = a1;
  v16 = sub_1BC2B3A40();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v5, 1, 1, v16);
  swift_retain();
  sub_1BC2B3A1C();
  sub_1BC2B3AAC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release();
}

uint64_t sub_1BC2459F8(uint64_t a1, uint64_t a2)
{
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  int v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55[4];
  __int128 v56;
  __int128 v57;
  uint64_t v58;

  v51 = a2;
  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC0E7998(0, &qword_1EF3FD980, (uint64_t (*)(uint64_t))type metadata accessor for Dosage, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v47 - v5;
  v50 = type metadata accessor for Dosage();
  v7 = *(_QWORD *)(v50 - 8);
  MEMORY[0x1E0C80A78](v50);
  v49 = (uint64_t)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC2B39E0();
  v52 = *(_QWORD *)(v9 - 8);
  v53 = v9;
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v47 - v13;
  sub_1BC0E7998(0, &qword_1EF400680, type metadata accessor for DosageItem, v3);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v47 - v16;
  v18 = type metadata accessor for DosageItem(0);
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = a1 + 16;
  swift_beginAccess();
  v23 = MEMORY[0x1BCCEF478](v22);
  if (!v23)
  {
    v58 = 0;
    v56 = 0u;
    v57 = 0u;
    goto LABEL_10;
  }
  v24 = (void *)v23;
  v48 = v12;
  v25 = v23 + OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_item;
  swift_beginAccess();
  sub_1BC0FC574(v25, (uint64_t)&v56, (uint64_t (*)(_QWORD))sub_1BC0E84E8);

  if (!*((_QWORD *)&v57 + 1))
  {
LABEL_10:
    sub_1BC0E8594((uint64_t)&v56, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v17, 1, 1, v18);
    goto LABEL_11;
  }
  sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0F7C0);
  v26 = swift_dynamicCast();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v17, v26 ^ 1u, 1, v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) != 1)
  {
    sub_1BC0F1B94((uint64_t)v17, (uint64_t)v21, type metadata accessor for DosageItem);
    swift_beginAccess();
    v27 = MEMORY[0x1BCCEF478](v22);
    if (v27)
    {
      v28 = (void *)v27;
      v29 = v27 + OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_currentDosage;
      swift_beginAccess();
      sub_1BC118700(v29, (uint64_t)v6, &qword_1EF3FD980, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);

      v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v6, 1, v50);
      v31 = v48;
      if (v30 != 1)
      {
        v32 = v49;
        sub_1BC0F1B94((uint64_t)v6, v49, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
        v33 = *(void (**)(char *, uint64_t))&v21[*(int *)(v18 + 56)];
        if (v33)
        {
          swift_retain();
          v33(v21, v32);
          sub_1BC0F2600((uint64_t)v33);
        }
        sub_1BC0E8594(v32, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
        return sub_1BC0E8594((uint64_t)v21, type metadata accessor for DosageItem);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v6, 1, 1, v50);
      v31 = v48;
    }
    sub_1BC0F2444((uint64_t)v6, &qword_1EF3FD980, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);
    sub_1BC2B39B0();
    v41 = sub_1BC2B39D4();
    v42 = sub_1BC2B48C8();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc();
      v44 = swift_slowAlloc();
      v55[0] = v44;
      *(_DWORD *)v43 = 136315138;
      v45 = sub_1BC2B54F8();
      v54 = sub_1BC12540C(v45, v46, v55);
      sub_1BC2B4FD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v41, v42, "[%s] Unable to continue with cell selection as Dosage is nil", v43, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v44, -1, -1);
      MEMORY[0x1BCCEF3A0](v43, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v52 + 8))(v31, v53);
    return sub_1BC0E8594((uint64_t)v21, type metadata accessor for DosageItem);
  }
LABEL_11:
  sub_1BC0F2444((uint64_t)v17, &qword_1EF400680, type metadata accessor for DosageItem);
  sub_1BC2B39B0();
  v34 = sub_1BC2B39D4();
  v35 = sub_1BC2B48C8();
  if (os_log_type_enabled(v34, v35))
  {
    v36 = (uint8_t *)swift_slowAlloc();
    v37 = swift_slowAlloc();
    *(_QWORD *)&v56 = v37;
    *(_DWORD *)v36 = 136315138;
    v38 = sub_1BC2B54F8();
    v55[1] = sub_1BC12540C(v38, v39, (uint64_t *)&v56);
    sub_1BC2B4FD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC0DC000, v34, v35, "[%s] item is not a DatePickerItem", v36, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v37, -1, -1);
    MEMORY[0x1BCCEF3A0](v36, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v14, v53);
}

id sub_1BC246034()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell____lazy_storage___toolbar;
  v2 = *(void **)&v0[OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell____lazy_storage___toolbar];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell____lazy_storage___toolbar];
  }
  else
  {
    v4 = sub_1BC246094(v0);
    v5 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC246094(void *a1)
{
  id v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  void *v18;
  _QWORD v20[4];

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithBarButtonSystemItem_target_action_, 5, 0, 0);
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v3 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();

  swift_bridgeObjectRelease();
  v4 = type metadata accessor for DosageCollectionViewCell(0);
  v20[3] = v4;
  v20[0] = a1;
  v5 = a1;
  v6 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  if (v4)
  {
    v7 = __swift_project_boxed_opaque_existential_0(v20, v4);
    v8 = *(_QWORD *)(v4 - 8);
    MEMORY[0x1E0C80A78](v7);
    v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v8 + 16))(v10);
    v11 = sub_1BC2B53C0();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v4);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
  }
  else
  {
    v11 = 0;
  }
  v12 = objc_allocWithZone(MEMORY[0x1E0DC34F0]);
  v13 = objc_msgSend(v12, sel_initWithTitle_style_target_action_, v6, 2, v11, sel_doneTapped, v20[0]);
  swift_unknownObjectRelease();

  v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3E68]), sel_init);
  objc_msgSend(v14, sel_setBarStyle_, 0);
  objc_msgSend(v14, sel_setTranslucent_, 1);
  sub_1BC0E7940();
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1BC2B92B0;
  *(_QWORD *)(v15 + 32) = v2;
  *(_QWORD *)(v15 + 40) = v13;
  v20[0] = v15;
  sub_1BC2B45A4();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EF3F9648);
  v16 = v2;
  v17 = v13;
  v18 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  objc_msgSend(v14, sel_setItems_animated_, v18, 0);

  objc_msgSend(v14, sel_setUserInteractionEnabled_, 1);
  objc_msgSend(v14, sel_sizeToFit);

  return v14;
}

id sub_1BC246390()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell____lazy_storage___valueField;
  v2 = *(void **)&v0[OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell____lazy_storage___valueField];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell____lazy_storage___valueField];
  }
  else
  {
    swift_getObjectType();
    v4 = sub_1BC2463FC(v0);
    v5 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC2463FC(void *a1)
{
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3DB8]), sel_init);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
  v3 = (void *)sub_1BC2B4C64();
  objc_msgSend(v2, sel_setFont_, v3);

  v4 = sub_1BC2B4460();
  v6 = v5;
  sub_1BC0E519C(&qword_1EF3FD968, type metadata accessor for DosageCollectionViewCell, (uint64_t)&protocol conformance descriptor for DosageCollectionViewCell);
  v7 = v2;
  sub_1BC2B2930();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v8 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setAccessibilityIdentifier_, v8, v4, v6);

  v9 = objc_msgSend((id)objc_opt_self(), sel_systemBlueColor);
  objc_msgSend(v7, sel_setTextColor_, v9);

  objc_msgSend(v7, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v10 = objc_msgSend(a1, sel_effectiveUserInterfaceLayoutDirection);
  v11 = objc_msgSend(a1, sel_traitCollection);
  v12 = objc_msgSend(v11, sel_preferredContentSizeCategory);

  v13 = sub_1BC2B4ACC();
  v14 = 2;
  if ((v13 & 1) != 0)
    v15 = 2;
  else
    v15 = 0;
  if ((v13 & 1) != 0)
    v14 = 0;
  if (v10 == (id)1)
    v16 = v15;
  else
    v16 = v14;
  objc_msgSend(v7, sel_setTextAlignment_, v16);
  return v7;
}

void sub_1BC2466B4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell____lazy_storage___valueField);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell____lazy_storage___valueField) = a1;

}

void (*sub_1BC2466C8(id *a1))(uint64_t *a1)
{
  void *v1;

  a1[1] = v1;
  *a1 = sub_1BC246390();
  return sub_1BC2466FC;
}

void sub_1BC2466FC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v2 = *a1;
  v1 = a1[1];
  v3 = *(void **)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell____lazy_storage___valueField);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell____lazy_storage___valueField) = v2;

}

id sub_1BC246714()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell____lazy_storage___valueLabel;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell____lazy_storage___valueLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell____lazy_storage___valueLabel);
  }
  else
  {
    swift_getObjectType();
    v4 = sub_1BC246778();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC246778()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v9;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  v1 = sub_1BC2B4460();
  v3 = v2;
  sub_1BC0E519C(&qword_1EF3FD968, type metadata accessor for DosageCollectionViewCell, (uint64_t)&protocol conformance descriptor for DosageCollectionViewCell);
  v4 = v0;
  sub_1BC2B2930();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v9 = v3;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v5 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setAccessibilityIdentifier_, v5, v1, v9);

  objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
  v6 = (void *)sub_1BC2B4C64();
  objc_msgSend(v4, sel_setFont_, v6);

  objc_msgSend(v4, sel_setTextAlignment_, 4);
  objc_msgSend(v4, sel_setAdjustsFontForContentSizeCategory_, 1);
  v7 = objc_msgSend((id)objc_opt_self(), sel_systemBlueColor);
  objc_msgSend(v4, sel_setTextColor_, v7);

  objc_msgSend(v4, sel_setNumberOfLines_, 0);
  objc_msgSend(v4, sel_setUserInteractionEnabled_, 1);
  return v4;
}

id sub_1BC2469D8(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  char *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  objc_super v28;
  uint64_t v29;
  uint64_t v30;

  v5 = v4;
  v10 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_currentDosage];
  v11 = type metadata accessor for Dosage();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = (uint64_t *)&v5[OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_baseIdentifier];
  v29 = sub_1BC2B4460();
  v30 = v13;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  v14 = v30;
  v15 = v5;
  swift_bridgeObjectRelease();
  *v12 = v29;
  v12[1] = v14;
  v16 = &v15[OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_item];
  *(_OWORD *)v16 = 0u;
  *((_OWORD *)v16 + 1) = 0u;
  *((_QWORD *)v16 + 4) = 0;
  v17 = &v15[OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell____lazy_storage___deleteAccessory];
  v18 = sub_1BC2B3AD0();
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v19(v17, 1, 1, v18);
  v20 = OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_timePicker;
  v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC36F0]), sel_init);
  objc_msgSend(v21, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v21, sel_setPreferredDatePickerStyle_, 2);
  objc_msgSend(v21, sel_setDatePickerMode_, 0);
  objc_msgSend(v21, sel_setMinuteInterval_, 5);
  objc_msgSend(v21, sel_setContentHorizontalAlignment_, 4);
  objc_msgSend(v21, sel_setRoundsToMinuteInterval_, 1);
  *(_QWORD *)&v15[v20] = v21;
  *(_QWORD *)&v15[OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell____lazy_storage___toolbar] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell____lazy_storage___valueField] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell____lazy_storage___valueLabel] = 0;
  v19(&v15[OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell____lazy_storage___spacerAccessory], 1, 1, v18);
  *(_QWORD *)&v15[OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_currentLayoutConstraints] = MEMORY[0x1E0DEE9D8];

  v28.receiver = v15;
  v28.super_class = (Class)type metadata accessor for DosageCollectionViewCell(0);
  v22 = objc_msgSendSuper2(&v28, sel_initWithFrame_, a1, a2, a3, a4);
  v23 = objc_allocWithZone(MEMORY[0x1E0DC3F10]);
  v24 = v22;
  v25 = objc_msgSend(v23, sel_init);
  objc_msgSend(v25, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDE0);
  v26 = (void *)sub_1BC2B4D24();
  objc_msgSend(v25, sel_setBackgroundColor_, v26);

  objc_msgSend(v24, sel_setBackgroundView_, v25);
  sub_1BC246D58();

  return v24;
}

id DosageCollectionViewCell.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void sub_1BC246D58()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;

  sub_1BC0E7998(0, (unint64_t *)&unk_1EDA0FE70, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1D38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_1BC2B3AD0() - 8) + 80);
  v2 = (v1 + 32) & ~v1;
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1BC2B92D0;
  sub_1BC245640(v3 + v2);
  sub_1BC2B4AFC();
  v4 = *(void **)&v0[OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_timePicker];
  objc_msgSend(v4, sel_addTarget_action_forControlEvents_, v0, sel_timePickerChanged_, 4096);
  v5 = sub_1BC246390();
  objc_msgSend(v5, sel_setDelegate_, v0);

  v6 = sub_1BC246390();
  objc_msgSend(v6, sel_setKeyboardType_, 8);

  v7 = sub_1BC246390();
  v8 = sub_1BC246034();
  objc_msgSend(v7, sel_setInputAccessoryView_, v8);

  v9 = sub_1BC246390();
  objc_msgSend(v9, sel_addTarget_action_forControlEvents_, v0, sel_textFieldChanged_, 0x20000);

  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3D80]), sel_initWithTarget_action_, v0, sel_valueLabelTapped_);
  objc_msgSend(v10, sel_setNumberOfTapsRequired_, 1);
  v11 = sub_1BC246714();
  objc_msgSend(v11, sel_addGestureRecognizer_, v10);

  v12 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v12, sel_addSubview_, v4);

  v13 = objc_msgSend(v0, sel_contentView);
  v14 = sub_1BC246390();
  objc_msgSend(v13, sel_addSubview_, v14);

  v15 = objc_msgSend(v0, sel_contentView);
  v16 = sub_1BC246714();
  objc_msgSend(v15, sel_addSubview_, v16);

  v17 = (void *)objc_opt_self();
  v18 = OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_currentLayoutConstraints;
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
  swift_bridgeObjectRetain();
  v19 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  objc_msgSend(v17, sel_deactivateConstraints_, v19);

  *(_QWORD *)&v0[v18] = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRelease();
  v20 = objc_msgSend(v0, sel_traitCollection);
  v21 = objc_msgSend(v20, sel_preferredContentSizeCategory);

  LOBYTE(v20) = sub_1BC2B4ACC();
  if ((v20 & 1) != 0)
    sub_1BC248D20();
  else
    sub_1BC24933C();
  objc_msgSend(v0, sel_setNeedsLayout, 1, 2);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1BC248B9C();
  swift_bridgeObjectRelease();
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3FA5B0, (uint64_t (*)(uint64_t))sub_1BC130728, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = v25;
  v23 = sub_1BC2B3D40();
  v24 = MEMORY[0x1E0DC29B0];
  *(_QWORD *)(v22 + 32) = v23;
  *(_QWORD *)(v22 + 40) = v24;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC13079C();
  sub_1BC2B4CC4();
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

}

void sub_1BC247180(void *a1, void *a2, uint64_t a3)
{
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;

  v5 = objc_msgSend(a1, sel_traitCollection);
  v6 = objc_msgSend(v5, sel_preferredContentSizeCategory);

  LODWORD(v5) = sub_1BC2B4ACC() & 1;
  v7 = objc_msgSend(a2, sel_preferredContentSizeCategory);
  LODWORD(v6) = sub_1BC2B4ACC() & 1;

  if ((_DWORD)v5 != (_DWORD)v6)
  {
    swift_beginAccess();
    v8 = MEMORY[0x1BCCEF478](a3 + 16);
    if (v8)
    {
      v9 = (char *)v8;
      v10 = (void *)objc_opt_self();
      v11 = OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_currentLayoutConstraints;
      sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
      swift_bridgeObjectRetain();
      v12 = (void *)sub_1BC2B4580();
      swift_bridgeObjectRelease();
      objc_msgSend(v10, sel_deactivateConstraints_, v12);

      *(_QWORD *)&v9[v11] = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRelease();
      v13 = objc_msgSend(v9, sel_traitCollection);
      v14 = objc_msgSend(v13, sel_preferredContentSizeCategory);

      LOBYTE(v13) = sub_1BC2B4ACC();
      if ((v13 & 1) != 0)
        sub_1BC248D20();
      else
        sub_1BC24933C();
      objc_msgSend(v9, sel_setNeedsLayout);

    }
  }
}

uint64_t sub_1BC24733C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  int v24;
  char *v25;
  void (*v26)(char *);
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  char *v31;
  void *v32;
  uint64_t v33;
  void *v34;
  id v35;
  id v36;
  char *v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t ObjectType;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56[5];

  v1 = v0;
  ObjectType = swift_getObjectType();
  v2 = sub_1BC2B39E0();
  v52 = *(_QWORD *)(v2 - 8);
  v53 = v2;
  MEMORY[0x1E0C80A78](v2);
  v54 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BC2B24A4();
  v48 = *(_QWORD *)(v4 - 8);
  v49 = v4;
  MEMORY[0x1E0C80A78](v4);
  v47 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC0E7998(0, &qword_1EF3FD980, (uint64_t (*)(uint64_t))type metadata accessor for Dosage, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v46 - v11;
  v13 = type metadata accessor for Dosage();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v50 = (uint64_t)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, &qword_1EF400680, type metadata accessor for DosageItem, v6);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v46 - v17;
  v19 = type metadata accessor for DosageItem(0);
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = (uint64_t)&v1[OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_item];
  swift_beginAccess();
  sub_1BC0FC574(v23, (uint64_t)v56, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
  if (!v56[3])
  {
    sub_1BC0E8594((uint64_t)v56, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56))(v18, 1, 1, v19);
    return sub_1BC0F2444((uint64_t)v18, &qword_1EF400680, type metadata accessor for DosageItem);
  }
  sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0F7C0);
  v24 = swift_dynamicCast();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v18, v24 ^ 1u, 1, v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
    return sub_1BC0F2444((uint64_t)v18, &qword_1EF400680, type metadata accessor for DosageItem);
  v25 = v22;
  sub_1BC0F1B94((uint64_t)v18, (uint64_t)v22, type metadata accessor for DosageItem);
  v26 = *(void (**)(char *))&v22[*(int *)(v19 + 44)];
  if (v26)
  {
    swift_retain();
    v26(v22);
    sub_1BC0F2600((uint64_t)v26);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) != 1)
    {
      v27 = v50;
      sub_1BC0F1B94((uint64_t)v12, v50, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      sub_1BC0FC574(v27, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v10, 0, 1, v13);
      v28 = (uint64_t)&v1[OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_currentDosage];
      swift_beginAccess();
      sub_1BC24C764((uint64_t)v10, v28, &qword_1EF3FD980, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);
      swift_endAccess();
      objc_msgSend(v1, sel_setUserInteractionEnabled_, v25[*(int *)(v19 + 32)]);
      v29 = *(void **)&v1[OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_timePicker];
      v30 = (void *)sub_1BC2B2360();
      objc_msgSend(v29, sel_setDate_animated_, v30, 1);

      sub_1BC249CFC();
      sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
      v31 = v47;
      sub_1BC2B2498();
      sub_1BC2B33F8();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v31, v49);
      sub_1BC247A54();
      swift_bridgeObjectRelease();
      v32 = (void *)objc_opt_self();
      v33 = OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_currentLayoutConstraints;
      sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
      swift_bridgeObjectRetain();
      v34 = (void *)sub_1BC2B4580();
      swift_bridgeObjectRelease();
      objc_msgSend(v32, sel_deactivateConstraints_, v34);

      *(_QWORD *)&v1[v33] = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRelease();
      v35 = objc_msgSend(v1, sel_traitCollection);
      v36 = objc_msgSend(v35, sel_preferredContentSizeCategory);

      LOBYTE(v35) = sub_1BC2B4ACC();
      if ((v35 & 1) != 0)
        sub_1BC248D20();
      else
        sub_1BC24933C();
      objc_msgSend(v1, sel_setNeedsLayout);
      sub_1BC0E8594(v27, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      goto LABEL_15;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
  }
  sub_1BC0F2444((uint64_t)v12, &qword_1EF3FD980, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);
  v38 = v54;
  sub_1BC2B39B0();
  v39 = sub_1BC2B39D4();
  v40 = sub_1BC2B48C8();
  if (!os_log_type_enabled(v39, v40))
  {

    (*(void (**)(char *, uint64_t))(v52 + 8))(v38, v53);
LABEL_15:
    v45 = (uint64_t)v25;
    return sub_1BC0E8594(v45, type metadata accessor for DosageItem);
  }
  v41 = (uint8_t *)swift_slowAlloc();
  v42 = swift_slowAlloc();
  v56[0] = v42;
  *(_DWORD *)v41 = 136315138;
  v43 = sub_1BC2B54F8();
  v55 = sub_1BC12540C(v43, v44, v56);
  sub_1BC2B4FD0();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_1BC0DC000, v39, v40, "[%s] Unable to continue with item update as Dosage is nil", v41, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x1BCCEF3A0](v42, -1, -1);
  MEMORY[0x1BCCEF3A0](v41, -1, -1);

  (*(void (**)(char *, uint64_t))(v52 + 8))(v38, v53);
  v45 = (uint64_t)v25;
  return sub_1BC0E8594(v45, type metadata accessor for DosageItem);
}

void sub_1BC247A54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  double v4;
  double v5;
  void (*v6)(char *, uint64_t);
  id v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;

  v0 = sub_1BC2B24A4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
  sub_1BC2B2498();
  sub_1BC2B3404();
  v5 = v4;
  v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  sub_1BC2B2498();
  sub_1BC2B33F8();
  v6(v3, v0);
  v7 = sub_1BC246390();
  v8 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setText_, v8);

  v9 = sub_1BC246714();
  sub_1BC247BE8(v5);
  v10 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_setText_, v10);

}

uint64_t sub_1BC247BE8(double a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  int v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  id v27;
  _QWORD v28[2];
  uint64_t v29[5];

  v2 = v1;
  swift_getObjectType();
  v4 = sub_1BC2B39E0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, &qword_1EF400680, type metadata accessor for DosageItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v28 - v9;
  v11 = type metadata accessor for DosageItem(0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = v2 + OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_item;
  swift_beginAccess();
  sub_1BC0FC574(v15, (uint64_t)v29, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
  if (v29[3])
  {
    sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0F7C0);
    v16 = swift_dynamicCast();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, v16 ^ 1u, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
    {
      sub_1BC0F1B94((uint64_t)v10, (uint64_t)v14, type metadata accessor for DosageItem);
      v17 = (uint64_t *)&v14[*(int *)(v11 + 40)];
      if (v17[1])
      {
        v18 = *v17;
        v19 = v17[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BC0E8594((uint64_t)v14, type metadata accessor for DosageItem);
        swift_bridgeObjectRelease();
        if (a1 != 1.0)
          return v19;
      }
      else
      {
        v27 = *(id *)&v14[*(int *)(v11 + 36)];
        v18 = sub_1BC2B4BB0();

        sub_1BC0E8594((uint64_t)v14, type metadata accessor for DosageItem);
      }
      return v18;
    }
  }
  else
  {
    sub_1BC0E8594((uint64_t)v29, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
  }
  sub_1BC0F2444((uint64_t)v10, &qword_1EF400680, type metadata accessor for DosageItem);
  sub_1BC2B39B0();
  v20 = sub_1BC2B39D4();
  v21 = sub_1BC2B48C8();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc();
    v23 = swift_slowAlloc();
    v29[0] = v23;
    *(_DWORD *)v22 = 136315138;
    v24 = sub_1BC2B54F8();
    v28[1] = sub_1BC12540C(v24, v25, v29);
    sub_1BC2B4FD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC0DC000, v20, v21, "[%s] item is not a DosageItem", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v23, -1, -1);
    MEMORY[0x1BCCEF3A0](v22, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return 0;
}

uint64_t sub_1BC247FFC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  int v31;
  char *v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v48;
  id v49;
  id v50;
  void *v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  id v56;
  void *v57;
  char *v58;
  double v59;
  double v60;
  void (*v61)(char *, uint64_t);
  uint64_t v62;
  id v63;
  void *v64;
  char *v65;
  double v66;
  double v67;
  id v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  void *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(char *, uint64_t);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t ObjectType;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101[4];
  uint64_t v102[6];

  v2 = v1;
  v94 = a1;
  ObjectType = swift_getObjectType();
  v3 = sub_1BC2B39E0();
  v99 = *(_QWORD *)(v3 - 8);
  v100 = v3;
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v84 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v84 - v7;
  v87 = sub_1BC2B23F0();
  v86 = *(_QWORD *)(v87 - 8);
  MEMORY[0x1E0C80A78](v87);
  v91 = (char *)&v84 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = sub_1BC2B2438();
  v89 = *(_QWORD *)(v90 - 8);
  MEMORY[0x1E0C80A78](v90);
  v88 = (char *)&v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = sub_1BC2B24A4();
  v11 = *(_QWORD *)(v93 - 8);
  MEMORY[0x1E0C80A78](v93);
  v92 = (char *)&v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC0E7998(0, &qword_1EF3FD980, (uint64_t (*)(uint64_t))type metadata accessor for Dosage, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v15 = MEMORY[0x1E0C80A78](v14);
  v84 = (uint64_t)&v84 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v15);
  v85 = (char *)&v84 - v18;
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v84 - v19;
  v21 = type metadata accessor for Dosage();
  v96 = *(_QWORD *)(v21 - 8);
  v97 = v21;
  MEMORY[0x1E0C80A78](v21);
  v95 = (uint64_t)&v84 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, &qword_1EF400680, type metadata accessor for DosageItem, v13);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v84 - v24;
  v26 = type metadata accessor for DosageItem(0);
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v29 = (char *)&v84 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = v2 + OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_item;
  swift_beginAccess();
  sub_1BC0FC574(v30, (uint64_t)v102, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
  if (v102[3])
  {
    sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0F7C0);
    v31 = swift_dynamicCast();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v25, v31 ^ 1u, 1, v26);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26) != 1)
    {
      v32 = v29;
      sub_1BC0F1B94((uint64_t)v25, (uint64_t)v29, type metadata accessor for DosageItem);
      v33 = v2 + OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_currentDosage;
      swift_beginAccess();
      sub_1BC118700(v33, (uint64_t)v20, &qword_1EF3FD980, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v96 + 48))(v20, 1, v97) == 1)
      {
        sub_1BC0F2444((uint64_t)v20, &qword_1EF3FD980, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);
        sub_1BC2B39B0();
        v34 = sub_1BC2B39D4();
        v35 = sub_1BC2B48C8();
        if (os_log_type_enabled(v34, v35))
        {
          v36 = (uint8_t *)swift_slowAlloc();
          v37 = swift_slowAlloc();
          v101[0] = v37;
          *(_DWORD *)v36 = 136315138;
          v38 = sub_1BC2B54F8();
          v101[3] = sub_1BC12540C(v38, v39, v101);
          sub_1BC2B4FD0();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1BC0DC000, v34, v35, "[%s] CurrentDosage is nil", v36, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1BCCEF3A0](v37, -1, -1);
          MEMORY[0x1BCCEF3A0](v36, -1, -1);

          (*(void (**)(char *, uint64_t))(v99 + 8))(v8, v100);
          v40 = (uint64_t)v29;
          return sub_1BC0E8594(v40, type metadata accessor for DosageItem);
        }

        (*(void (**)(char *, uint64_t))(v99 + 8))(v8, v100);
      }
      else
      {
        v100 = v33;
        v48 = v95;
        sub_1BC0F1B94((uint64_t)v20, v95, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
        v49 = v94;
        v50 = objc_msgSend(v94, sel_text);
        if (!v50)
          goto LABEL_18;
        v51 = v50;
        v52 = sub_1BC2B4460();
        v54 = v53;

        swift_bridgeObjectRelease();
        v55 = HIBYTE(v54) & 0xF;
        if ((v54 & 0x2000000000000000) == 0)
          v55 = v52 & 0xFFFFFFFFFFFFLL;
        if (!v55)
          goto LABEL_18;
        v56 = objc_msgSend(v49, sel_text);
        if (v56)
        {
          v57 = v56;
          sub_1BC2B4460();

        }
        sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
        v58 = v92;
        sub_1BC2B2498();
        sub_1BC2B3404();
        v60 = v59;
        swift_bridgeObjectRelease();
        v61 = *(void (**)(char *, uint64_t))(v11 + 8);
        v61(v58, v93);
        if (v60 != *(double *)(v48 + *(int *)(v97 + 24)))
        {
          v63 = objc_msgSend(v49, sel_text);
          if (v63)
          {
            v64 = v63;
            sub_1BC2B4460();

          }
          v65 = v92;
          sub_1BC2B2498();
          sub_1BC2B3404();
          v67 = v66;
          v61(v65, v93);
          v68 = sub_1BC246714();
          sub_1BC247BE8(v67);
          v69 = (void *)sub_1BC2B4430();
          swift_bridgeObjectRelease();
          objc_msgSend(v68, sel_setText_, v69);

          swift_bridgeObjectRelease();
          v70 = v95;
          (*(void (**)(char *, uint64_t, uint64_t))(v89 + 16))(v88, v95, v90);
          v71 = v86;
          v72 = v87;
          (*(void (**)(char *, uint64_t, uint64_t))(v86 + 16))(v91, v70 + *(int *)(v97 + 20), v87);
          v73 = objc_msgSend(v94, sel_text);
          if (v73)
          {
            v74 = v73;
            sub_1BC2B4460();

          }
          v75 = v92;
          sub_1BC2B2498();
          sub_1BC2B3404();
          v77 = v76;
          swift_bridgeObjectRelease();
          v61(v75, v93);
          v78 = (uint64_t)v85;
          (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v85, v88, v90);
          v79 = v97;
          (*(void (**)(uint64_t, char *, uint64_t))(v71 + 32))(v78 + *(int *)(v97 + 20), v91, v72);
          *(_QWORD *)(v78 + *(int *)(v79 + 24)) = v77;
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v96 + 56))(v78, 0, 1, v79);
          v80 = v100;
          swift_beginAccess();
          sub_1BC24C764(v78, v80, &qword_1EF3FD980, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);
          swift_endAccess();
          v81 = *(void (**)(char *, uint64_t))&v32[*(int *)(v26 + 48)];
          if (v81)
          {
            v82 = v80;
            v83 = v84;
            sub_1BC118700(v82, v84, &qword_1EF3FD980, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);
            swift_retain();
            v81(v32, v83);
            sub_1BC0F2600((uint64_t)v81);
            sub_1BC0F2444(v83, &qword_1EF3FD980, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);
          }
          v62 = v95;
        }
        else
        {
LABEL_18:
          v62 = v48;
        }
        sub_1BC0E8594(v62, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      }
      v40 = (uint64_t)v32;
      return sub_1BC0E8594(v40, type metadata accessor for DosageItem);
    }
  }
  else
  {
    sub_1BC0E8594((uint64_t)v102, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56))(v25, 1, 1, v26);
  }
  sub_1BC0F2444((uint64_t)v25, &qword_1EF400680, type metadata accessor for DosageItem);
  sub_1BC2B39B0();
  v41 = sub_1BC2B39D4();
  v42 = sub_1BC2B48C8();
  if (os_log_type_enabled(v41, v42))
  {
    v43 = (uint8_t *)swift_slowAlloc();
    v44 = swift_slowAlloc();
    v102[0] = v44;
    *(_DWORD *)v43 = 136315138;
    v45 = sub_1BC2B54F8();
    v101[0] = sub_1BC12540C(v45, v46, v102);
    sub_1BC2B4FD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC0DC000, v41, v42, "[%s] item is not a DatePickerItem", v43, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v44, -1, -1);
    MEMORY[0x1BCCEF3A0](v43, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v99 + 8))(v6, v100);
}

void sub_1BC248B9C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_timePicker);
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  v2 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setAccessibilityIdentifier_, v2);

  v3 = sub_1BC246034();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  v4 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setAccessibilityIdentifier_, v4);

  v6 = sub_1BC246390();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  v5 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setAccessibilityIdentifier_, v5);

}

uint64_t sub_1BC248D20()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  uint64_t v50;
  void *v51;
  void *v52;

  v1 = v0;
  sub_1BC0E7940();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BC2BAEA0;
  v3 = *(void **)&v0[OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_timePicker];
  v4 = objc_msgSend(v3, sel_topAnchor);
  v5 = objc_msgSend(v1, sel_contentView);
  v6 = objc_msgSend(v5, sel_topAnchor);

  v7 = objc_msgSend(v4, sel_constraintEqualToAnchor_constant_, v6, 6.0);
  *(_QWORD *)(v2 + 32) = v7;
  v8 = objc_msgSend(v3, sel_leadingAnchor);
  v9 = objc_msgSend(v1, sel_contentView);
  v10 = objc_msgSend(v9, sel_leadingAnchor);

  if (qword_1EF3F8168 != -1)
    swift_once();
  v11 = objc_msgSend(v8, sel_constraintEqualToAnchor_constant_, v10, *(double *)&qword_1EF400660);

  *(_QWORD *)(v2 + 40) = v11;
  v12 = objc_msgSend(v3, sel_trailingAnchor);
  v13 = objc_msgSend(v1, (SEL)&selRef_userInfo);
  v14 = objc_msgSend(v13, sel_trailingAnchor);

  v15 = objc_msgSend(v12, sel_constraintGreaterThanOrEqualToAnchor_constant_, v14, -*(double *)&qword_1EF400660);
  *(_QWORD *)(v2 + 48) = v15;
  v16 = sub_1BC246390();
  v17 = objc_msgSend(v16, sel_topAnchor);

  v18 = objc_msgSend(v3, sel_bottomAnchor);
  v19 = objc_msgSend(v17, sel_constraintEqualToAnchor_constant_, v18, 6.0);

  *(_QWORD *)(v2 + 56) = v19;
  v20 = sub_1BC246390();
  v21 = objc_msgSend(v20, sel_leadingAnchor);

  v22 = objc_msgSend(v1, (SEL)&selRef_userInfo);
  v23 = objc_msgSend(v22, sel_leadingAnchor);

  v24 = objc_msgSend(v21, sel_constraintEqualToAnchor_constant_, v23, *(double *)&qword_1EF400660);
  *(_QWORD *)(v2 + 64) = v24;
  v25 = sub_1BC246390();
  v26 = objc_msgSend(v25, sel_trailingAnchor);

  v27 = objc_msgSend(v1, (SEL)&selRef_userInfo);
  v28 = objc_msgSend(v27, sel_trailingAnchor);

  v29 = objc_msgSend(v26, sel_constraintGreaterThanOrEqualToAnchor_constant_, v28, -*(double *)&qword_1EF400660);
  *(_QWORD *)(v2 + 72) = v29;
  v30 = sub_1BC246714();
  v31 = objc_msgSend(v30, sel_topAnchor);

  v32 = sub_1BC246390();
  v33 = objc_msgSend(v32, sel_bottomAnchor);

  v34 = objc_msgSend(v31, sel_constraintEqualToAnchor_constant_, v33, 6.0);
  *(_QWORD *)(v2 + 80) = v34;
  v35 = sub_1BC246714();
  v36 = objc_msgSend(v35, (SEL)&ShapeCell.base_props + 6);

  v37 = objc_msgSend(v1, (SEL)&selRef_userInfo);
  v38 = objc_msgSend(v37, (SEL)&ShapeCell.base_props + 6);

  v39 = objc_msgSend(v36, sel_constraintEqualToAnchor_constant_, v38, *(double *)&qword_1EF400660);
  *(_QWORD *)(v2 + 88) = v39;
  v40 = sub_1BC246714();
  v41 = objc_msgSend(v40, sel_trailingAnchor);

  v42 = objc_msgSend(v1, (SEL)&selRef_userInfo);
  v43 = objc_msgSend(v42, sel_trailingAnchor);

  v44 = objc_msgSend(v41, sel_constraintGreaterThanOrEqualToAnchor_constant_, v43, -*(double *)&qword_1EF400660);
  *(_QWORD *)(v2 + 96) = v44;
  v45 = sub_1BC246714();
  v46 = objc_msgSend(v45, sel_bottomAnchor);

  v47 = objc_msgSend(v1, (SEL)&selRef_userInfo);
  v48 = objc_msgSend(v47, sel_bottomAnchor);

  v49 = objc_msgSend(v46, sel_constraintEqualToAnchor_constant_, v48, -6.0);
  *(_QWORD *)(v2 + 104) = v49;
  sub_1BC2B45A4();
  v50 = v2;
  v51 = (void *)objc_opt_self();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
  v52 = (void *)sub_1BC2B4580();
  objc_msgSend(v51, sel_activateConstraints_, v52);

  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_currentLayoutConstraints] = v50;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC24933C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  uint64_t v50;
  void *v51;
  void *v52;

  v1 = v0;
  sub_1BC0E7940();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BC2BAEA0;
  v3 = *(void **)&v0[OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_timePicker];
  v4 = objc_msgSend(v3, sel_leadingAnchor);
  v5 = objc_msgSend(v1, sel_contentView);
  v6 = objc_msgSend(v5, sel_leadingAnchor);

  if (qword_1EF3F8168 != -1)
    swift_once();
  v7 = objc_msgSend(v4, sel_constraintEqualToAnchor_constant_, v6, *(double *)&qword_1EF400660);

  *(_QWORD *)(v2 + 32) = v7;
  v8 = objc_msgSend(v3, sel_topAnchor);
  v9 = objc_msgSend(v1, sel_contentView);
  v10 = objc_msgSend(v9, sel_topAnchor);

  v11 = objc_msgSend(v8, sel_constraintEqualToAnchor_constant_, v10, 6.0);
  *(_QWORD *)(v2 + 40) = v11;
  v12 = objc_msgSend(v3, sel_bottomAnchor);
  v13 = objc_msgSend(v1, sel_contentView);
  v14 = objc_msgSend(v13, sel_bottomAnchor);

  v15 = objc_msgSend(v12, sel_constraintEqualToAnchor_constant_, v14, -6.0);
  *(_QWORD *)(v2 + 48) = v15;
  v16 = sub_1BC246390();
  v17 = objc_msgSend(v16, sel_leadingAnchor);

  v18 = objc_msgSend(v3, sel_trailingAnchor);
  v19 = objc_msgSend(v17, sel_constraintGreaterThanOrEqualToAnchor_constant_, v18, *(double *)&qword_1EF400660);

  *(_QWORD *)(v2 + 56) = v19;
  v20 = sub_1BC246390();
  v21 = objc_msgSend(v20, sel_topAnchor);

  v22 = objc_msgSend(v1, sel_contentView);
  v23 = objc_msgSend(v22, sel_topAnchor);

  v24 = objc_msgSend(v21, sel_constraintEqualToAnchor_constant_, v23, 6.0);
  *(_QWORD *)(v2 + 64) = v24;
  v25 = sub_1BC246390();
  v26 = objc_msgSend(v25, sel_bottomAnchor);

  v27 = objc_msgSend(v1, sel_contentView);
  v28 = objc_msgSend(v27, sel_bottomAnchor);

  v29 = objc_msgSend(v26, sel_constraintEqualToAnchor_constant_, v28, -6.0);
  *(_QWORD *)(v2 + 72) = v29;
  v30 = sub_1BC246714();
  v31 = objc_msgSend(v30, sel_leadingAnchor);

  v32 = sub_1BC246390();
  v33 = objc_msgSend(v32, sel_trailingAnchor);

  v34 = objc_msgSend(v31, sel_constraintEqualToAnchor_constant_, v33, 5.0);
  *(_QWORD *)(v2 + 80) = v34;
  v35 = sub_1BC246714();
  v36 = objc_msgSend(v35, sel_trailingAnchor);

  v37 = objc_msgSend(v1, sel_contentView);
  v38 = objc_msgSend(v37, sel_trailingAnchor);

  v39 = objc_msgSend(v36, sel_constraintEqualToAnchor_constant_, v38, -*(double *)&qword_1EF400660);
  *(_QWORD *)(v2 + 88) = v39;
  v40 = sub_1BC246714();
  v41 = objc_msgSend(v40, sel_topAnchor);

  v42 = objc_msgSend(v1, sel_contentView);
  v43 = objc_msgSend(v42, sel_topAnchor);

  v44 = objc_msgSend(v41, sel_constraintEqualToAnchor_constant_, v43, 6.0);
  *(_QWORD *)(v2 + 96) = v44;
  v45 = sub_1BC246714();
  v46 = objc_msgSend(v45, sel_bottomAnchor);

  v47 = objc_msgSend(v1, sel_contentView);
  v48 = objc_msgSend(v47, sel_bottomAnchor);

  v49 = objc_msgSend(v46, sel_constraintEqualToAnchor_constant_, v48, -6.0);
  *(_QWORD *)(v2 + 104) = v49;
  sub_1BC2B45A4();
  v50 = v2;
  v51 = (void *)objc_opt_self();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
  v52 = (void *)sub_1BC2B4580();
  objc_msgSend(v51, sel_activateConstraints_, v52);

  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_currentLayoutConstraints] = v50;
  return swift_bridgeObjectRelease();
}

id DosageCollectionViewCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DosageCollectionViewCell(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t DosageCollectionViewCell.deselectionBehavior.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = 1;
  v2 = *MEMORY[0x1E0D2B168];
  v3 = sub_1BC2B2C6C();
  return (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_1BC249AB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for DosageCollectionViewCell, a3);
  return sub_1BC2B2B34();
}

Swift::Void __swiftcall DosageCollectionViewCell.textFieldShouldReturn(_:)(UITextField *a1)
{
  id v1;

  v1 = sub_1BC246390();
  objc_msgSend(v1, sel_resignFirstResponder);

}

Swift::Bool __swiftcall DosageCollectionViewCell.textFieldShouldEndEditing(_:)(UITextField *a1)
{
  return 1;
}

uint64_t sub_1BC249CCC()
{
  uint64_t result;
  uint64_t v1;

  sub_1BC2B2F00();
  result = sub_1BC2B2EF4();
  qword_1EF400660 = v1;
  return result;
}

uint64_t sub_1BC249CFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  id v47;
  char *v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t (*v53)(uint64_t, uint64_t, _QWORD, _QWORD);
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(uint64_t, uint64_t, _QWORD, _QWORD);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  void (*v67)(uint64_t, uint64_t);
  char *v68;
  void *v69;
  uint64_t v70;
  void (*v71)(char *, uint64_t);
  char *v72;
  char *v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  void (*ObjectType)(char *, uint64_t);
  uint64_t v80;
  uint64_t (**v81)(_QWORD, _QWORD);
  uint64_t v82;
  uint64_t v83[4];
  uint64_t v84[6];

  v1 = v0;
  ObjectType = (void (*)(char *, uint64_t))swift_getObjectType();
  v2 = sub_1BC2B39E0();
  v81 = *(uint64_t (***)(_QWORD, _QWORD))(v2 - 8);
  v82 = v2;
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v74 = (char *)&v72 - v6;
  v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v72 = (char *)&v72 - v9;
  v77 = sub_1BC2B23F0();
  v75 = *(_QWORD *)(v77 - 8);
  v10 = MEMORY[0x1E0C80A78](v77);
  v12 = (char *)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v76 = (char *)&v72 - v13;
  sub_1BC0E7998(0, &qword_1EF3FD980, (uint64_t (*)(uint64_t))type metadata accessor for Dosage, v7);
  v15 = MEMORY[0x1E0C80A78](v14);
  v73 = (char *)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v72 - v17;
  v19 = type metadata accessor for Dosage();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v78 = (uint64_t)&v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, &qword_1EF400680, type metadata accessor for DosageItem, v7);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v72 - v23;
  v25 = type metadata accessor for DosageItem(0);
  v26 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v80 = (uint64_t)&v72 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_item;
  swift_beginAccess();
  sub_1BC0FC574(v28, (uint64_t)v84, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
  if (!v84[3])
  {
    sub_1BC0E8594((uint64_t)v84, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56))(v24, 1, 1, v25);
    goto LABEL_8;
  }
  sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0F7C0);
  v29 = swift_dynamicCast();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v24, v29 ^ 1u, 1, v25);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25) == 1)
  {
LABEL_8:
    sub_1BC0F2444((uint64_t)v24, &qword_1EF400680, type metadata accessor for DosageItem);
    sub_1BC2B39B0();
    v41 = sub_1BC2B39D4();
    v42 = sub_1BC2B48C8();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc();
      v44 = swift_slowAlloc();
      v84[0] = v44;
      *(_DWORD *)v43 = 136315138;
      v45 = sub_1BC2B54F8();
      v83[0] = sub_1BC12540C(v45, v46, v84);
      sub_1BC2B4FD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v41, v42, "[%s] item is not a DatePickerItem", v43, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v44, -1, -1);
      MEMORY[0x1BCCEF3A0](v43, -1, -1);
    }

    return ((uint64_t (**)(char *, uint64_t))v81)[1](v5, v82);
  }
  v30 = (uint64_t)v24;
  v31 = v80;
  sub_1BC0F1B94(v30, v80, type metadata accessor for DosageItem);
  v32 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_currentDosage;
  swift_beginAccess();
  sub_1BC118700(v32, (uint64_t)v18, &qword_1EF3FD980, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    sub_1BC0F2444((uint64_t)v18, &qword_1EF3FD980, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);
    v33 = v74;
    sub_1BC2B39B0();
    v34 = sub_1BC2B39D4();
    v35 = sub_1BC2B48C8();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc();
      v37 = swift_slowAlloc();
      v83[0] = v37;
      *(_DWORD *)v36 = 136315138;
      v38 = sub_1BC2B54F8();
      v83[3] = sub_1BC12540C(v38, v39, v83);
      sub_1BC2B4FD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v34, v35, "[%s] CurrentDosage is nil", v36, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v37, -1, -1);
      MEMORY[0x1BCCEF3A0](v36, -1, -1);
    }

    ((uint64_t (**)(char *, uint64_t))v81)[1](v33, v82);
    return sub_1BC0E8594(v80, type metadata accessor for DosageItem);
  }
  else
  {
    v82 = v32;
    sub_1BC0F1B94((uint64_t)v18, v78, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
    v81 = *(uint64_t (***)(_QWORD, _QWORD))(v1
                                                    + OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_timePicker);
    v47 = objc_msgSend(v81, sel_date);
    sub_1BC2B23A8();

    v48 = v76;
    sub_1BC2B2384();
    v49 = *(void (**)(char *, uint64_t))(v75 + 8);
    v50 = v77;
    v49(v12, v77);
    sub_1BC0E519C(&qword_1EF3FCC08, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
    if ((sub_1BC2B4424() & 1) != 0)
    {
      v49(v48, v50);
      v51 = v78;
    }
    else
    {
      ObjectType = v49;
      v52 = (_QWORD *)(v31 + *(int *)(v25 + 52));
      v53 = (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))*v52;
      v54 = v75;
      if (*v52)
      {
        v55 = (char *)v52[1];
        v56 = (uint64_t)v72;
        v57 = v77;
        (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v72, v76, v77);
        v58 = v57;
        v59 = v53;
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v54 + 56))(v56, 0, 1, v58);
        swift_retain();
        v60 = v80;
        v74 = v55;
        LOBYTE(v55) = v59(v80, v56, 0, 0);
        sub_1BC0F2444(v56, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
        if ((v55 & 1) == 0)
        {
          v68 = v76;
          sub_1BC2B233C();
          v69 = (void *)sub_1BC2B2360();
          v70 = v77;
          v71 = ObjectType;
          ObjectType(v12, v77);
          objc_msgSend(v81, sel_setDate_animated_, v69, 1);

          sub_1BC249CFC();
          sub_1BC0F2600((uint64_t)v59);
          v71(v68, v70);
          sub_1BC0E8594(v78, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
          return sub_1BC0E8594(v60, type metadata accessor for DosageItem);
        }
        sub_1BC0F2600((uint64_t)v59);
        v31 = v60;
        v54 = v75;
      }
      v61 = sub_1BC2B2438();
      v62 = (uint64_t)v73;
      v63 = v78;
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 16))(v73, v78, v61);
      v65 = v76;
      v64 = v77;
      (*(void (**)(uint64_t, char *, uint64_t))(v54 + 16))(v62 + *(int *)(v19 + 20), v76, v77);
      *(_QWORD *)(v62 + *(int *)(v19 + 24)) = *(_QWORD *)(v63 + *(int *)(v19 + 24));
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v20 + 56))(v62, 0, 1, v19);
      v66 = v82;
      swift_beginAccess();
      sub_1BC24C764(v62, v66, &qword_1EF3FD980, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);
      swift_endAccess();
      v67 = *(void (**)(uint64_t, uint64_t))(v31 + *(int *)(v25 + 48));
      if (v67)
      {
        sub_1BC118700(v66, v62, &qword_1EF3FD980, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);
        swift_retain();
        v67(v31, v62);
        sub_1BC0F2600((uint64_t)v67);
        sub_1BC0F2444(v62, &qword_1EF3FD980, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);
        ObjectType(v65, v64);
        sub_1BC0E8594(v63, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
        return sub_1BC0E8594(v31, type metadata accessor for DosageItem);
      }
      ObjectType(v65, v64);
      v51 = v63;
    }
    sub_1BC0E8594(v51, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
    return sub_1BC0E8594(v31, type metadata accessor for DosageItem);
  }
}

void _s19HealthMedicationsUI24DosageCollectionViewCellC5coderACSgSo7NSCoderC_tcfc_0()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_currentDosage];
  v3 = type metadata accessor for Dosage();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  v4 = (uint64_t *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_baseIdentifier];
  v12 = sub_1BC2B4460();
  v13 = v5;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  *v4 = v12;
  v4[1] = v13;
  v6 = &v1[OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_item];
  *(_OWORD *)v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  *((_QWORD *)v6 + 4) = 0;
  v7 = &v1[OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell____lazy_storage___deleteAccessory];
  v8 = sub_1BC2B3AD0();
  v9 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56);
  v9(v7, 1, 1, v8);
  v10 = OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_timePicker;
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC36F0]), sel_init);
  objc_msgSend(v11, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v11, sel_setPreferredDatePickerStyle_, 2);
  objc_msgSend(v11, sel_setDatePickerMode_, 0);
  objc_msgSend(v11, sel_setMinuteInterval_, 5);
  objc_msgSend(v11, sel_setContentHorizontalAlignment_, 4);
  objc_msgSend(v11, sel_setRoundsToMinuteInterval_, 1);
  *(_QWORD *)&v1[v10] = v11;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell____lazy_storage___toolbar] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell____lazy_storage___valueField] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell____lazy_storage___valueLabel] = 0;
  v9(&v1[OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell____lazy_storage___spacerAccessory], 1, 1, v8);
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_currentLayoutConstraints] = MEMORY[0x1E0DEE9D8];

  sub_1BC2B52B8();
  __break(1u);
}

uint64_t _s19HealthMedicationsUI24DosageCollectionViewCellC27textFieldShouldBeginEditingySbSo06UITextI0CF_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  _BYTE v12[24];
  _BYTE v13[24];
  uint64_t v14;

  sub_1BC0E7998(0, &qword_1EF400680, type metadata accessor for DosageItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v3 = &v12[-v2];
  v4 = type metadata accessor for DosageItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_item;
  swift_beginAccess();
  sub_1BC0FC574(v8, (uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
  if (!v14)
  {
    sub_1BC0E8594((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
    goto LABEL_5;
  }
  sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0F7C0);
  v9 = swift_dynamicCast();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v3, v9 ^ 1u, 1, v4);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
LABEL_5:
    sub_1BC0F2444((uint64_t)v3, &qword_1EF400680, type metadata accessor for DosageItem);
    return 0;
  }
  sub_1BC0F1B94((uint64_t)v3, (uint64_t)v7, type metadata accessor for DosageItem);
  v10 = v7[*(int *)(v4 + 32)];
  sub_1BC0E8594((uint64_t)v7, type metadata accessor for DosageItem);
  return v10;
}

uint64_t _s19HealthMedicationsUI24DosageCollectionViewCellC24textFieldDidBeginEditingyySo06UITextI0CF_0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t (*v14)(uint64_t);
  _QWORD aBlock[6];

  v2 = sub_1BC2B42E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BC2B4304();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FFF0);
  v10 = (void *)sub_1BC2B4A0C();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a1;
  aBlock[4] = sub_1BC172194;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC1AEAE4;
  aBlock[3] = &block_descriptor_25;
  v12 = _Block_copy(aBlock);
  v13 = a1;
  swift_release();
  sub_1BC2B42F8();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  v14 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1BC0E519C((unint64_t *)&qword_1EDA0FFC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0FFD0, v14, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC17219C();
  sub_1BC2B509C();
  MEMORY[0x1BCCEE194](0, v9, v5, v12);
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t _s19HealthMedicationsUI24DosageCollectionViewCellC22textFieldDidEndEditingyySo06UITextI0CF_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  id v37;
  id v38;
  uint64_t v39;
  id v40;
  id v41;
  char *v42;
  double v43;
  double v44;
  void (*v45)(char *, uint64_t);
  id v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  id v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t ObjectType;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81[4];
  _BYTE v82[24];
  uint64_t v83;

  v1 = v0;
  ObjectType = swift_getObjectType();
  v70 = sub_1BC2B39E0();
  v2 = *(_QWORD *)(v70 - 8);
  MEMORY[0x1E0C80A78](v70);
  v4 = (char *)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = sub_1BC2B23F0();
  v71 = *(_QWORD *)(v69 - 8);
  MEMORY[0x1E0C80A78](v69);
  v75 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = sub_1BC2B2438();
  v73 = *(_QWORD *)(v74 - 8);
  MEMORY[0x1E0C80A78](v74);
  v72 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = sub_1BC2B24A4();
  v7 = *(_QWORD *)(v77 - 8);
  MEMORY[0x1E0C80A78](v77);
  v76 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC0E7998(0, &qword_1EF3FD980, (uint64_t (*)(uint64_t))type metadata accessor for Dosage, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v11 = MEMORY[0x1E0C80A78](v10);
  v66 = (uint64_t)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v68 = (char *)&v64 - v14;
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v64 - v15;
  v17 = type metadata accessor for Dosage();
  v78 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v80 = (uint64_t)&v64 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, &qword_1EF400680, type metadata accessor for DosageItem, v9);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v64 - v20;
  v22 = type metadata accessor for DosageItem(0);
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v79 = (uint64_t)&v64 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_1BC246390();
  objc_msgSend(v25, sel_resignFirstResponder);

  v26 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_item;
  swift_beginAccess();
  sub_1BC0FC574(v26, (uint64_t)v82, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
  if (!v83)
  {
    sub_1BC0E8594((uint64_t)v82, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v21, 1, 1, v22);
    return sub_1BC0F2444((uint64_t)v21, &qword_1EF400680, type metadata accessor for DosageItem);
  }
  sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0F7C0);
  v27 = swift_dynamicCast();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v21, v27 ^ 1u, 1, v22);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
    return sub_1BC0F2444((uint64_t)v21, &qword_1EF400680, type metadata accessor for DosageItem);
  v28 = v79;
  sub_1BC0F1B94((uint64_t)v21, v79, type metadata accessor for DosageItem);
  v29 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_currentDosage;
  swift_beginAccess();
  sub_1BC118700(v29, (uint64_t)v16, &qword_1EF3FD980, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48))(v16, 1, v17) == 1)
  {
    sub_1BC0F2444((uint64_t)v16, &qword_1EF3FD980, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);
    sub_1BC2B39B0();
    v30 = sub_1BC2B39D4();
    v31 = sub_1BC2B48C8();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      v33 = swift_slowAlloc();
      v81[0] = v33;
      *(_DWORD *)v32 = 136315138;
      v34 = sub_1BC2B54F8();
      v81[3] = sub_1BC12540C(v34, v35, v81);
      sub_1BC2B4FD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v30, v31, "[%s] CurrentDosage is nil", v32, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v33, -1, -1);
      MEMORY[0x1BCCEF3A0](v32, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v70);
    return sub_1BC0E8594(v28, type metadata accessor for DosageItem);
  }
  sub_1BC0F1B94((uint64_t)v16, v80, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
  v37 = sub_1BC246390();
  v38 = objc_msgSend(v37, sel_text);

  if (v38)
  {
    sub_1BC2B4460();

  }
  v39 = v71;
  sub_1BC247A54();
  swift_bridgeObjectRelease();
  v40 = sub_1BC246390();
  v41 = objc_msgSend(v40, sel_text);

  v65 = v29;
  if (v41)
  {
    sub_1BC2B4460();

  }
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
  v42 = v76;
  sub_1BC2B2498();
  sub_1BC2B3404();
  v44 = v43;
  swift_bridgeObjectRelease();
  v45 = *(void (**)(char *, uint64_t))(v7 + 8);
  v45(v42, v77);
  if (v44 == *(double *)(v80 + *(int *)(v17 + 24)))
  {
    v46 = sub_1BC246390();
    v47 = objc_msgSend(v46, sel_text);

    if (v47)
    {
      v48 = sub_1BC2B4460();
      v50 = v49;

      if (!v48 && v50 == 0xE000000000000000)
      {
        swift_bridgeObjectRelease();
        goto LABEL_19;
      }
      v51 = sub_1BC2B53CC();
      swift_bridgeObjectRelease();
      if ((v51 & 1) != 0)
        goto LABEL_19;
    }
    sub_1BC0E8594(v80, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
    return sub_1BC0E8594(v79, type metadata accessor for DosageItem);
  }
LABEL_19:
  v52 = v80;
  (*(void (**)(char *, uint64_t, uint64_t))(v73 + 16))(v72, v80, v74);
  v53 = v69;
  (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v75, v52 + *(int *)(v17 + 20), v69);
  v54 = sub_1BC246390();
  v55 = objc_msgSend(v54, sel_text);

  if (v55)
  {
    sub_1BC2B4460();

  }
  v56 = v76;
  sub_1BC2B2498();
  sub_1BC2B3404();
  v58 = v57;
  swift_bridgeObjectRelease();
  v45(v56, v77);
  v59 = (uint64_t)v68;
  (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v68, v72, v74);
  (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(v59 + *(int *)(v17 + 20), v75, v53);
  *(_QWORD *)(v59 + *(int *)(v17 + 24)) = v58;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v78 + 56))(v59, 0, 1, v17);
  v60 = v65;
  swift_beginAccess();
  sub_1BC24C764(v59, v60, &qword_1EF3FD980, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);
  swift_endAccess();
  v61 = v79;
  v62 = *(void (**)(uint64_t, uint64_t))(v79 + *(int *)(v22 + 48));
  if (v62)
  {
    v63 = v66;
    sub_1BC118700(v60, v66, &qword_1EF3FD980, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);
    swift_retain();
    v62(v61, v63);
    sub_1BC0F2600((uint64_t)v62);
    sub_1BC0F2444(v63, &qword_1EF3FD980, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);
  }
  sub_1BC0E8594(v80, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
  return sub_1BC0E8594(v61, type metadata accessor for DosageItem);
}

uint64_t sub_1BC24B638()
{
  return sub_1BC0E519C(&qword_1EF3FD970, type metadata accessor for DosageItem, (uint64_t)&protocol conformance descriptor for DosageItem);
}

uint64_t sub_1BC24B664@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for DosageItem(0) + 44));
  v4 = *v3;
  if (*v3)
    v5 = v3[1];
  else
    v5 = 0;
  *a2 = v4;
  a2[1] = v5;
  return sub_1BC0F2690(v4);
}

uint64_t sub_1BC24B6C0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_baseIdentifier);
  swift_beginAccess();
  v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC24B718@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_item;
  swift_beginAccess();
  return sub_1BC0FC574(v3, a2, (uint64_t (*)(_QWORD))sub_1BC0E84E8);
}

id sub_1BC24B778@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = sub_1BC246390();
  *a1 = result;
  return result;
}

void sub_1BC24B7A0(void **a1, _QWORD *a2)
{
  void *v2;
  id v3;
  id v4;

  v2 = *a1;
  v4 = *(id *)(*a2 + OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell____lazy_storage___valueField);
  *(_QWORD *)(*a2 + OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell____lazy_storage___valueField) = *a1;
  v3 = v2;

}

_QWORD *initializeBufferWithCopyOfBuffer for DosageItem(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  void *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a2[5];
    v10 = a3[7];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    a1[4] = a2[4];
    a1[5] = v9;
    v13 = sub_1BC2B2438();
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v11, v12, v13);
    v15 = a3[9];
    *((_BYTE *)v4 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    v16 = *(void **)((char *)a2 + v15);
    *(_QWORD *)((char *)v4 + v15) = v16;
    v17 = a3[10];
    v18 = (_QWORD *)((char *)v4 + v17);
    v19 = (_QWORD *)((char *)a2 + v17);
    v20 = *(_QWORD *)((char *)a2 + v17 + 8);
    v21 = v16;
    if (v20)
    {
      *v18 = *v19;
      v18[1] = v20;
      v22 = v19[2];
      v23 = v19[3];
      v18[2] = v22;
      v18[3] = v23;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v25 = *((_OWORD *)v19 + 1);
      *(_OWORD *)v18 = *(_OWORD *)v19;
      *((_OWORD *)v18 + 1) = v25;
    }
    v26 = a3[11];
    v27 = (_QWORD *)((char *)v4 + v26);
    v28 = (_QWORD *)((char *)a2 + v26);
    if (*v28)
    {
      v29 = v28[1];
      *v27 = *v28;
      v27[1] = v29;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v27 = *(_OWORD *)v28;
    }
    v30 = a3[12];
    v31 = (_QWORD *)((char *)v4 + v30);
    v32 = (_QWORD *)((char *)a2 + v30);
    if (*v32)
    {
      v33 = v32[1];
      *v31 = *v32;
      v31[1] = v33;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v31 = *(_OWORD *)v32;
    }
    v34 = a3[13];
    v35 = (_QWORD *)((char *)v4 + v34);
    v36 = (_QWORD *)((char *)a2 + v34);
    if (*v36)
    {
      v37 = v36[1];
      *v35 = *v36;
      v35[1] = v37;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v35 = *(_OWORD *)v36;
    }
    v38 = a3[14];
    v39 = (_QWORD *)((char *)v4 + v38);
    v40 = (_QWORD *)((char *)a2 + v38);
    if (*v40)
    {
      v41 = v40[1];
      *v39 = *v40;
      v39[1] = v41;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v39 = *(_OWORD *)v40;
    }
  }
  return v4;
}

uint64_t destroy for DosageItem(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[7];
  v5 = sub_1BC2B2438();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);

  result = *(_QWORD *)(a1 + a2[10] + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + a2[11]))
    result = swift_release();
  if (*(_QWORD *)(a1 + a2[12]))
    result = swift_release();
  if (*(_QWORD *)(a1 + a2[13]))
    result = swift_release();
  if (*(_QWORD *)(a1 + a2[14]))
    return swift_release();
  return result;
}

_QWORD *initializeWithCopy for DosageItem(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  void *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a2[5];
  v9 = a3[7];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  a1[4] = a2[4];
  a1[5] = v8;
  v12 = sub_1BC2B2438();
  v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v10, v11, v12);
  v14 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  v15 = *(void **)((char *)a2 + v14);
  *(_QWORD *)((char *)a1 + v14) = v15;
  v16 = a3[10];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  v19 = *(_QWORD *)((char *)a2 + v16 + 8);
  v20 = v15;
  if (v19)
  {
    *v17 = *v18;
    v17[1] = v19;
    v21 = v18[2];
    v22 = v18[3];
    v17[2] = v21;
    v17[3] = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v23 = *((_OWORD *)v18 + 1);
    *(_OWORD *)v17 = *(_OWORD *)v18;
    *((_OWORD *)v17 + 1) = v23;
  }
  v24 = a3[11];
  v25 = (_QWORD *)((char *)a1 + v24);
  v26 = (_QWORD *)((char *)a2 + v24);
  if (*v26)
  {
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v25 = *(_OWORD *)v26;
  }
  v28 = a3[12];
  v29 = (_QWORD *)((char *)a1 + v28);
  v30 = (_QWORD *)((char *)a2 + v28);
  if (*v30)
  {
    v31 = v30[1];
    *v29 = *v30;
    v29[1] = v31;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v29 = *(_OWORD *)v30;
  }
  v32 = a3[13];
  v33 = (_QWORD *)((char *)a1 + v32);
  v34 = (_QWORD *)((char *)a2 + v32);
  if (*v34)
  {
    v35 = v34[1];
    *v33 = *v34;
    v33[1] = v35;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v33 = *(_OWORD *)v34;
  }
  v36 = a3[14];
  v37 = (_QWORD *)((char *)a1 + v36);
  v38 = (_QWORD *)((char *)a2 + v36);
  if (*v38)
  {
    v39 = v38[1];
    *v37 = *v38;
    v37[1] = v39;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v37 = *(_OWORD *)v38;
  }
  return a1;
}

_QWORD *assignWithCopy for DosageItem(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[7];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BC2B2438();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  v10 = a3[9];
  v11 = *(void **)((char *)a2 + v10);
  v12 = *(void **)((char *)a1 + v10);
  *(_QWORD *)((char *)a1 + v10) = v11;
  v13 = v11;

  v14 = a3[10];
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  v17 = *(_QWORD *)((char *)a1 + v14 + 8);
  v18 = *(_QWORD *)((char *)a2 + v14 + 8);
  if (v17)
  {
    if (v18)
    {
      *v15 = *v16;
      v15[1] = v16[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v15[2] = v16[2];
      v15[3] = v16[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BC0E8594((uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BC24BF6C);
      v19 = *((_OWORD *)v16 + 1);
      *(_OWORD *)v15 = *(_OWORD *)v16;
      *((_OWORD *)v15 + 1) = v19;
    }
  }
  else if (v18)
  {
    *v15 = *v16;
    v15[1] = v16[1];
    v15[2] = v16[2];
    v15[3] = v16[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v20 = *((_OWORD *)v16 + 1);
    *(_OWORD *)v15 = *(_OWORD *)v16;
    *((_OWORD *)v15 + 1) = v20;
  }
  v21 = a3[11];
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (char *)a2 + v21;
  v24 = *(_QWORD *)((char *)a1 + v21);
  v25 = *(_QWORD *)((char *)a2 + v21);
  if (v24)
  {
    if (v25)
    {
      v26 = *((_QWORD *)v23 + 1);
      *v22 = v25;
      v22[1] = v26;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v25)
  {
    v27 = *((_QWORD *)v23 + 1);
    *v22 = v25;
    v22[1] = v27;
    swift_retain();
    goto LABEL_15;
  }
  *(_OWORD *)v22 = *(_OWORD *)v23;
LABEL_15:
  v28 = a3[12];
  v29 = (_QWORD *)((char *)a1 + v28);
  v30 = (char *)a2 + v28;
  v31 = *(_QWORD *)((char *)a1 + v28);
  v32 = *(_QWORD *)((char *)a2 + v28);
  if (v31)
  {
    if (v32)
    {
      v33 = *((_QWORD *)v30 + 1);
      *v29 = v32;
      v29[1] = v33;
      swift_retain();
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  else if (v32)
  {
    v34 = *((_QWORD *)v30 + 1);
    *v29 = v32;
    v29[1] = v34;
    swift_retain();
    goto LABEL_22;
  }
  *(_OWORD *)v29 = *(_OWORD *)v30;
LABEL_22:
  v35 = a3[13];
  v36 = (_QWORD *)((char *)a1 + v35);
  v37 = (char *)a2 + v35;
  v38 = *(_QWORD *)((char *)a1 + v35);
  v39 = *(_QWORD *)((char *)a2 + v35);
  if (v38)
  {
    if (v39)
    {
      v40 = *((_QWORD *)v37 + 1);
      *v36 = v39;
      v36[1] = v40;
      swift_retain();
      swift_release();
      goto LABEL_29;
    }
    swift_release();
  }
  else if (v39)
  {
    v41 = *((_QWORD *)v37 + 1);
    *v36 = v39;
    v36[1] = v41;
    swift_retain();
    goto LABEL_29;
  }
  *(_OWORD *)v36 = *(_OWORD *)v37;
LABEL_29:
  v42 = a3[14];
  v43 = (_QWORD *)((char *)a1 + v42);
  v44 = (_QWORD *)((char *)a2 + v42);
  v45 = *(_QWORD *)((char *)a1 + v42);
  v46 = *v44;
  if (!v45)
  {
    if (v46)
    {
      v48 = v44[1];
      *v43 = v46;
      v43[1] = v48;
      swift_retain();
      return a1;
    }
LABEL_35:
    *(_OWORD *)v43 = *(_OWORD *)v44;
    return a1;
  }
  if (!v46)
  {
    swift_release();
    goto LABEL_35;
  }
  v47 = v44[1];
  *v43 = v46;
  v43[1] = v47;
  swift_retain();
  swift_release();
  return a1;
}

void sub_1BC24BF6C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF4006A0)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF4006A0);
  }
}

_OWORD *initializeWithTake for DosageItem(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  __int128 v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = a3[7];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BC2B2438();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *(_QWORD *)((char *)a1 + v11) = *(_QWORD *)((char *)a2 + v11);
  v12 = a3[10];
  v13 = a3[11];
  v14 = (_OWORD *)((char *)a1 + v12);
  v15 = (_OWORD *)((char *)a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = (_QWORD *)((char *)a1 + v13);
  v18 = (uint64_t *)((char *)a2 + v13);
  v19 = *v18;
  if (*v18)
  {
    v20 = v18[1];
    *v17 = v19;
    v17[1] = v20;
  }
  else
  {
    *(_OWORD *)v17 = *(_OWORD *)v18;
  }
  v21 = a3[12];
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (uint64_t *)((char *)a2 + v21);
  v24 = *v23;
  if (*v23)
  {
    v25 = v23[1];
    *v22 = v24;
    v22[1] = v25;
  }
  else
  {
    *(_OWORD *)v22 = *(_OWORD *)v23;
  }
  v26 = a3[13];
  v27 = (_QWORD *)((char *)a1 + v26);
  v28 = (uint64_t *)((char *)a2 + v26);
  v29 = *v28;
  if (*v28)
  {
    v30 = v28[1];
    *v27 = v29;
    v27[1] = v30;
  }
  else
  {
    *(_OWORD *)v27 = *(_OWORD *)v28;
  }
  v31 = a3[14];
  v32 = (_QWORD *)((char *)a1 + v31);
  v33 = (uint64_t *)((char *)a2 + v31);
  v34 = *v33;
  if (*v33)
  {
    v35 = v33[1];
    *v32 = v34;
    v32[1] = v35;
  }
  else
  {
    *(_OWORD *)v32 = *(_OWORD *)v33;
  }
  return a1;
}

_QWORD *assignWithTake for DosageItem(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  v9 = a3[7];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_1BC2B2438();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  v13 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  v14 = *(void **)((char *)a1 + v13);
  *(_QWORD *)((char *)a1 + v13) = *(_QWORD *)((char *)a2 + v13);

  v15 = a3[10];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  if (*(_QWORD *)((char *)a1 + v15 + 8))
  {
    v18 = v17[1];
    if (v18)
    {
      *v16 = *v17;
      v16[1] = v18;
      swift_bridgeObjectRelease();
      v19 = v17[3];
      v16[2] = v17[2];
      v16[3] = v19;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1BC0E8594((uint64_t)v16, (uint64_t (*)(_QWORD))sub_1BC24BF6C);
  }
  v20 = *((_OWORD *)v17 + 1);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *((_OWORD *)v16 + 1) = v20;
LABEL_6:
  v21 = a3[11];
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (char *)a2 + v21;
  v24 = *(_QWORD *)((char *)a1 + v21);
  v25 = *(_QWORD *)((char *)a2 + v21);
  if (v24)
  {
    if (v25)
    {
      v26 = *((_QWORD *)v23 + 1);
      *v22 = v25;
      v22[1] = v26;
      swift_release();
      goto LABEL_13;
    }
    swift_release();
  }
  else if (v25)
  {
    v27 = *((_QWORD *)v23 + 1);
    *v22 = v25;
    v22[1] = v27;
    goto LABEL_13;
  }
  *(_OWORD *)v22 = *(_OWORD *)v23;
LABEL_13:
  v28 = a3[12];
  v29 = (_QWORD *)((char *)a1 + v28);
  v30 = (char *)a2 + v28;
  v31 = *(_QWORD *)((char *)a1 + v28);
  v32 = *(_QWORD *)((char *)a2 + v28);
  if (v31)
  {
    if (v32)
    {
      v33 = *((_QWORD *)v30 + 1);
      *v29 = v32;
      v29[1] = v33;
      swift_release();
      goto LABEL_20;
    }
    swift_release();
  }
  else if (v32)
  {
    v34 = *((_QWORD *)v30 + 1);
    *v29 = v32;
    v29[1] = v34;
    goto LABEL_20;
  }
  *(_OWORD *)v29 = *(_OWORD *)v30;
LABEL_20:
  v35 = a3[13];
  v36 = (_QWORD *)((char *)a1 + v35);
  v37 = (char *)a2 + v35;
  v38 = *(_QWORD *)((char *)a1 + v35);
  v39 = *(_QWORD *)((char *)a2 + v35);
  if (v38)
  {
    if (v39)
    {
      v40 = *((_QWORD *)v37 + 1);
      *v36 = v39;
      v36[1] = v40;
      swift_release();
      goto LABEL_27;
    }
    swift_release();
  }
  else if (v39)
  {
    v41 = *((_QWORD *)v37 + 1);
    *v36 = v39;
    v36[1] = v41;
    goto LABEL_27;
  }
  *(_OWORD *)v36 = *(_OWORD *)v37;
LABEL_27:
  v42 = a3[14];
  v43 = (_QWORD *)((char *)a1 + v42);
  v44 = (_QWORD *)((char *)a2 + v42);
  v45 = *(_QWORD *)((char *)a1 + v42);
  v46 = *v44;
  if (!v45)
  {
    if (v46)
    {
      v48 = v44[1];
      *v43 = v46;
      v43[1] = v48;
      return a1;
    }
LABEL_33:
    *(_OWORD *)v43 = *(_OWORD *)v44;
    return a1;
  }
  if (!v46)
  {
    swift_release();
    goto LABEL_33;
  }
  v47 = v44[1];
  *v43 = v46;
  v43[1] = v47;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for DosageItem()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC24C358(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1BC2B2438();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for DosageItem()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC24C3E0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1BC2B2438();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BC24C454()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC2B2438();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BC24C4FC()
{
  return type metadata accessor for DosageCollectionViewCell(0);
}

void sub_1BC24C504()
{
  unint64_t v0;
  unint64_t v1;

  sub_1BC0E7998(319, &qword_1EF3FD980, (uint64_t (*)(uint64_t))type metadata accessor for Dosage, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
  {
    sub_1BC0E7998(319, &qword_1EDA0FAE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1D38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for DosageCollectionViewCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DosageCollectionViewCell.baseIdentifier.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of DosageCollectionViewCell.baseIdentifier.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of DosageCollectionViewCell.baseIdentifier.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of DosageCollectionViewCell.item.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of DosageCollectionViewCell.item.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of DosageCollectionViewCell.item.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of DosageCollectionViewCell.valueField.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x118))();
}

uint64_t dispatch thunk of DosageCollectionViewCell.valueField.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of DosageCollectionViewCell.valueField.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of DosageCollectionViewCell.itemUpdated()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x180))();
}

uint64_t dispatch thunk of DosageCollectionViewCell.updateAutomationIdentifiers(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1C0))();
}

uint64_t sub_1BC24C738()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BC24C75C(void *a1, void *a2)
{
  uint64_t v2;

  sub_1BC247180(a1, a2, v2);
}

uint64_t sub_1BC24C764(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6;

  sub_1BC0E7998(0, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a2, a1, v6);
  return a2;
}

uint64_t sub_1BC24C7BC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC24C7E0()
{
  uint64_t v0;

  return sub_1BC2459F8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BC24C7E8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC24C80C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  void (*v5)(unsigned __int8 *__return_ptr, uint64_t, uint64_t, _QWORD *);
  unsigned __int8 v7;
  _QWORD v8[2];

  v5 = *(void (**)(unsigned __int8 *__return_ptr, uint64_t, uint64_t, _QWORD *))(v4 + 16);
  v8[0] = a3;
  v8[1] = a4;
  v5(&v7, a1, a2, v8);
  return v7;
}

uint64_t sub_1BC24C844@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, _BYTE *a4@<X8>)
{
  uint64_t v4;
  uint64_t result;

  result = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, _QWORD))(v4 + 16))(a1, a2, *a3, a3[1]);
  *a4 = result & 1;
  return result;
}

uint64_t sub_1BC24C878()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t ClinicalRecordsMedicationsProvider.__allocating_init(healthStore:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t ClinicalRecordsMedicationsProvider.init(healthStore:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

uint64_t sub_1BC24C8F0(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v2 = v1;
  v4 = *v1;
  sub_1BC24D204();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC10A700(0, (unint64_t *)&qword_1EDA0FEF0);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1BC2B7770;
  sub_1BC2B4460();
  v11 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
  v12 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend(v11, sel_initWithKey_ascending_, v12, 0);

  *(_QWORD *)(v10 + 32) = v13;
  v20 = v10;
  sub_1BC2B45A4();
  v14 = v20;
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a1;
  v15[3] = v14;
  v15[4] = v2;
  v15[5] = v4;
  sub_1BC24D27C();
  sub_1BC0E519C(&qword_1EF4007C8, (uint64_t (*)(uint64_t))sub_1BC24D27C, MEMORY[0x1E0C96108]);
  v16 = a1;
  swift_retain();
  sub_1BC2B3F44();
  sub_1BC0E519C(&qword_1EF4007D0, (uint64_t (*)(uint64_t))sub_1BC24D204, MEMORY[0x1E0C96148]);
  v17 = sub_1BC2B3FBC();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v17;
}

uint64_t sub_1BC24CAD8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  _QWORD *v10;
  id v11;
  uint64_t result;

  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a1;
  v10[3] = a2;
  v10[4] = a3;
  v10[5] = a4;
  sub_1BC24D27C();
  swift_allocObject();
  v11 = a1;
  swift_bridgeObjectRetain();
  swift_retain();
  result = sub_1BC2B3F38();
  *a5 = result;
  return result;
}

void sub_1BC24CB78(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  _QWORD aBlock[6];

  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = a2;
  swift_retain();
  _sSo17HKQueryDescriptorC19HealthMedicationsUIE22recordsMatchingConceptySayABGSo9HKConceptCFZ_0(a3);
  sub_1BC10A700(0, (unint64_t *)&qword_1EF3F91D8);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1BC2B92D0;
  *(_QWORD *)(v12 + 32) = sub_1BC2B4460();
  *(_QWORD *)(v12 + 40) = v13;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = sub_1BC0F22BC;
  *(_QWORD *)(v14 + 24) = v11;
  v15 = objc_allocWithZone(MEMORY[0x1E0CB6AE8]);
  sub_1BC0E1D38(0, &qword_1EF400880);
  swift_bridgeObjectRetain();
  v16 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  sub_1BC0E1D38(0, (unint64_t *)&unk_1EDA0E9D8);
  v17 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  v18 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_1BC24D404;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC24D010;
  aBlock[3] = &block_descriptor_26;
  v19 = _Block_copy(aBlock);
  v20 = objc_msgSend(v15, sel_initWithQueryDescriptors_sortDescriptors_followingAnchor_upToAndIncludingAnchor_distinctByKeyPaths_limit_resultsHandler_, v16, v17, 0, 0, v18, 0, v19);

  _Block_release(v19);
  swift_release();
  aBlock[0] = a6;
  swift_getMetatypeMetadata();
  v21 = v20;
  sub_1BC2B4478();
  v22 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v21, sel_setDebugIdentifier_, v22);

  objc_msgSend(*(id *)(a5 + 16), sel_executeQuery_, v21);
}

void sub_1BC24CE00(uint64_t a1, unint64_t a2, uint64_t a3, void *a4, void (*a5)(void *, _QWORD), uint64_t a6)
{
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t i;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  void *v17;
  unsigned __int8 v18;

  if (a2 && (v9 = sub_1BC11C9D8(a2)) != 0)
  {
    v10 = v9;
  }
  else
  {
    swift_bridgeObjectRelease();
    v10 = MEMORY[0x1E0DEE9D8];
  }
  v17 = (void *)MEMORY[0x1E0DEE9D8];
  if (!(v10 >> 62))
  {
    v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v11)
      goto LABEL_7;
LABEL_18:
    swift_bridgeObjectRelease();
    v15 = a4;
    sub_1BC24D2E8();
    sub_1BC2B5498();
    a5(v17, v18);
    sub_1BC24D40C(v17, v18);
    return;
  }
  swift_bridgeObjectRetain();
  v11 = sub_1BC2B52D0();
  swift_bridgeObjectRelease();
  if (!v11)
    goto LABEL_18;
LABEL_7:
  if (v11 >= 1)
  {
    v16 = a6;
    for (i = 0; i != v11; ++i)
    {
      if ((v10 & 0xC000000000000001) != 0)
        v13 = (id)MEMORY[0x1BCCEE950](i, v10);
      else
        v13 = *(id *)(v10 + 8 * i + 32);
      v14 = v13;
      if (objc_msgSend(v13, sel_isDisplayable, v16))
      {
        sub_1BC2B5204();
        sub_1BC2B5234();
        sub_1BC2B5240();
        sub_1BC2B5210();
      }
      else
      {

      }
    }
    goto LABEL_18;
  }
  __break(1u);
}

uint64_t ClinicalRecordsMedicationsProvider.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ClinicalRecordsMedicationsProvider.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t sub_1BC24D010(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v7;
  void (*v9)(id, uint64_t, void *, void *);
  id v10;
  id v11;
  id v12;

  v7 = a3;
  v9 = *(void (**)(id, uint64_t, void *, void *))(a1 + 32);
  if (a3)
  {
    sub_1BC0E1D38(0, &qword_1EF3FF000);
    v7 = sub_1BC2B458C();
  }
  swift_retain();
  v10 = a2;
  v11 = a4;
  v12 = a5;
  v9(v10, v7, a4, a5);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t _sSo17HKQueryDescriptorC19HealthMedicationsUIE22recordsMatchingConceptySayABGSo9HKConceptCFZ_0(void *a1)
{
  uint64_t v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  sub_1BC10A700(0, (unint64_t *)&qword_1EDA0FEF0);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BC2B7770;
  v3 = objc_msgSend((id)objc_opt_self(), sel_medicationOrderType);
  sub_1BC0E1D38(0, &qword_1EF400888);
  v4 = objc_msgSend(a1, sel_identifier);
  objc_msgSend(v4, sel_rawIdentifier);

  v5 = (void *)sub_1BC2B4CDC();
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6A88]), sel_initWithSampleType_predicate_, v3, v5);

  *(_QWORD *)(v2 + 32) = v6;
  sub_1BC2B45A4();
  return v2;
}

void sub_1BC24D204()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF4007B8)
  {
    sub_1BC24D27C();
    sub_1BC0E519C(&qword_1EF4007C8, (uint64_t (*)(uint64_t))sub_1BC24D27C, MEMORY[0x1E0C96108]);
    v0 = sub_1BC2B3F50();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF4007B8);
  }
}

void sub_1BC24D27C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF4007C0)
  {
    sub_1BC24D2E8();
    sub_1BC0F6274();
    v0 = sub_1BC2B3F2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF4007C0);
  }
}

void sub_1BC24D2E8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3F9780)
  {
    sub_1BC0E1D38(255, &qword_1EF3F9788);
    v0 = sub_1BC2B4610();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3F9780);
  }
}

uint64_t sub_1BC24D350@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1BC24CAD8(*(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), a1);
}

uint64_t type metadata accessor for ClinicalRecordsMedicationsProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for ClinicalRecordsMedicationsProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ClinicalRecordsMedicationsProvider.__allocating_init(healthStore:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of ClinicalRecordsMedicationsProvider.makeRelatedCHRRecordsPublisher(concept:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t objectdestroyTm_1()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1BC24D3D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BC24CB78(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_1BC24D3E0()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1BC24D404(uint64_t a1, unint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4;

  sub_1BC24CE00(a1, a2, a3, a4, *(void (**)(void *, _QWORD))(v4 + 16), *(_QWORD *)(v4 + 24));
}

void sub_1BC24D40C(id a1, char a2)
{
  if ((a2 & 1) != 0)

  else
    swift_bridgeObjectRelease();
}

uint64_t sub_1BC24D41C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;

  v0 = sub_1BC2B2438();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for InteractionFactorsHeaderItem();
  v5 = swift_allocObject();
  type metadata accessor for InteractionFactorsHeaderCell();
  sub_1BC0E519C(&qword_1EF3FC098, (uint64_t (*)(uint64_t))type metadata accessor for InteractionFactorsHeaderCell, (uint64_t)&protocol conformance descriptor for InteractionFactorsHeaderCell);
  *(_QWORD *)(v5 + 16) = sub_1BC2B2930();
  *(_QWORD *)(v5 + 24) = v6;
  sub_1BC100284(0, (unint64_t *)&qword_1EF3F8C50, (void (*)(uint64_t))MEMORY[0x1E0D2B090]);
  sub_1BC2B2BC4();
  v7 = swift_allocObject();
  v11 = xmmword_1BC2B92D0;
  *(_OWORD *)(v7 + 16) = xmmword_1BC2B92D0;
  sub_1BC100284(0, (unint64_t *)&qword_1EDA0FE38, (void (*)(uint64_t))sub_1BC0E1B94);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = v11;
  *(_QWORD *)(v8 + 56) = v4;
  *(_QWORD *)(v8 + 64) = sub_1BC0E519C(&qword_1EF4008E8, (uint64_t (*)(uint64_t))type metadata accessor for InteractionFactorsHeaderItem, (uint64_t)&protocol conformance descriptor for InteractionFactorsHeaderItem);
  *(_QWORD *)(v8 + 32) = v5;
  swift_retain();
  sub_1BC2B242C();
  sub_1BC2B23FC();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_1BC2B2BAC();
  v9 = sub_1BC2B2750();
  swift_release();
  return v9;
}

void InteractionFactorsHeaderDataSource.__allocating_init(arrangedSections:isHidden:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void InteractionFactorsHeaderDataSource.init(arrangedSections:isHidden:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t InteractionFactorsHeaderDataSource.__deallocating_deinit()
{
  _s19HealthMedicationsUI34InteractionSeperatorLineDataSourceCfd_0();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC24D68C()
{
  MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for InteractionFactorsHeaderDataSource);
  return sub_1BC2B3074();
}

Swift::Void __swiftcall InteractionFactorsHeaderDataSource.registerCells(for:)(UICollectionView *a1)
{
  type metadata accessor for InteractionFactorsHeaderCell();
  sub_1BC0E519C(&qword_1EF3FC098, (uint64_t (*)(uint64_t))type metadata accessor for InteractionFactorsHeaderCell, (uint64_t)&protocol conformance descriptor for InteractionFactorsHeaderCell);
  sub_1BC2B497C();
}

uint64_t sub_1BC24D72C()
{
  return sub_1BC0E519C(&qword_1EF400890, (uint64_t (*)(uint64_t))type metadata accessor for InteractionFactorsHeaderDataSource, (uint64_t)&protocol conformance descriptor for InteractionFactorsHeaderDataSource);
}

uint64_t type metadata accessor for InteractionFactorsHeaderDataSource()
{
  uint64_t result;

  result = qword_1EF400898;
  if (!qword_1EF400898)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC24D794()
{
  type metadata accessor for InteractionFactorsHeaderCell();
  sub_1BC0E519C(&qword_1EF3FC098, (uint64_t (*)(uint64_t))type metadata accessor for InteractionFactorsHeaderCell, (uint64_t)&protocol conformance descriptor for InteractionFactorsHeaderCell);
  return sub_1BC2B497C();
}

uint64_t sub_1BC24D7E8()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for InteractionFactorsHeaderDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InteractionFactorsHeaderDataSource.layout(for:environment:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for InteractionFactorsHeaderDataSource + *v0 + 8))();
}

uint64_t sub_1BC24D848()
{
  return type metadata accessor for InteractionFactorsHeaderDataSource();
}

uint64_t CustomStrengthOptionItem.init(title:actionTitle:onActionTapped:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t result;
  uint64_t v15;

  type metadata accessor for CustomStrengthOptionCell();
  sub_1BC24D8E4();
  result = sub_1BC2B2930();
  *a7 = a1;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  a7[4] = a5;
  a7[5] = a6;
  a7[6] = result;
  a7[7] = v15;
  return result;
}

uint64_t type metadata accessor for CustomStrengthOptionCell()
{
  return objc_opt_self();
}

unint64_t sub_1BC24D8E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3FF418;
  if (!qword_1EF3FF418)
  {
    v1 = type metadata accessor for CustomStrengthOptionCell();
    result = MEMORY[0x1BCCEF2BC](&unk_1BC2C45BC, v1);
    atomic_store(result, (unint64_t *)&qword_1EF3FF418);
  }
  return result;
}

uint64_t CustomStrengthOptionItem.title.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CustomStrengthOptionItem.actionTitle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CustomStrengthOptionItem.onActionTapped.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_retain();
  return v1;
}

uint64_t CustomStrengthOptionItem.reuseIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CustomStrengthOptionItem.uniqueIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  sub_1BC2B51BC();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1BC2B44FC();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  sub_1BC2B44FC();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t CustomStrengthOptionItem.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1BC2B44D8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44D8();
  return swift_bridgeObjectRelease();
}

uint64_t CustomStrengthOptionItem.hashValue.getter()
{
  sub_1BC2B5450();
  sub_1BC2B44D8();
  sub_1BC2B44D8();
  return sub_1BC2B548C();
}

id sub_1BC24DBB0()
{
  id v0;
  id v1;
  id v2;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v1 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
  objc_msgSend(v0, sel_setFont_, v1);

  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  v2 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  objc_msgSend(v0, sel_setTextColor_, v2);

  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  return v0;
}

id sub_1BC24DCA4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI24CustomStrengthOptionCell____lazy_storage___actionButton;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI24CustomStrengthOptionCell____lazy_storage___actionButton);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI24CustomStrengthOptionCell____lazy_storage___actionButton);
  }
  else
  {
    v4 = objc_msgSend((id)objc_opt_self(), sel_buttonWithType_, 1);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v4, sel_setContentHorizontalAlignment_, 4);
    objc_msgSend(v4, sel_setContentVerticalAlignment_, 1);
    objc_msgSend(v4, sel_addTarget_action_forControlEvents_, v0, sel_actionButtonTapped, 64);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

char *sub_1BC24DD7C(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  objc_class *v15;
  char *v16;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  void *v55;
  id v57[2];
  objc_super v58;

  sub_1BC0E1C64(0, &qword_1EDA0FAF0, (void (*)(uint64_t))MEMORY[0x1E0DC2130]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v57 - v10;
  v12 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI24CustomStrengthOptionCell_item];
  *(_OWORD *)v12 = 0u;
  *((_OWORD *)v12 + 1) = 0u;
  *((_QWORD *)v12 + 4) = 0;
  v13 = OBJC_IVAR____TtC19HealthMedicationsUI24CustomStrengthOptionCell_titleLabel;
  v14 = v4;
  *(_QWORD *)&v4[v13] = sub_1BC24DBB0();
  *(_QWORD *)&v14[OBJC_IVAR____TtC19HealthMedicationsUI24CustomStrengthOptionCell____lazy_storage___actionButton] = 0;

  v15 = (objc_class *)type metadata accessor for CustomStrengthOptionCell();
  v58.receiver = v14;
  v58.super_class = v15;
  v16 = (char *)objc_msgSendSuper2(&v58, sel_initWithFrame_, a1, a2, a3, a4);
  v17 = objc_msgSend(v16, sel_contentView);
  v18 = OBJC_IVAR____TtC19HealthMedicationsUI24CustomStrengthOptionCell_titleLabel;
  objc_msgSend(v17, sel_addSubview_, *(_QWORD *)&v16[OBJC_IVAR____TtC19HealthMedicationsUI24CustomStrengthOptionCell_titleLabel]);

  v19 = objc_msgSend(v16, sel_contentView);
  v20 = sub_1BC24DCA4();
  objc_msgSend(v19, sel_addSubview_, v20);

  v21 = v16;
  sub_1BC2B3B30();
  v22 = sub_1BC2B3B48();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v11, 0, 1, v22);
  MEMORY[0x1BCCEE23C](v11);

  v57[0] = (id)objc_opt_self();
  sub_1BC0E7940();
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1BC2BAF60;
  v24 = objc_msgSend(*(id *)&v16[v18], sel_leadingAnchor);
  v25 = objc_msgSend(v21, sel_contentView);
  v26 = objc_msgSend(v25, sel_layoutMarginsGuide);

  v27 = objc_msgSend(v26, (SEL)&ShapeCell.base_props + 6);
  v28 = objc_msgSend(v24, sel_constraintEqualToAnchor_, v27);

  *(_QWORD *)(v23 + 32) = v28;
  v29 = objc_msgSend(*(id *)&v16[v18], sel_trailingAnchor);
  v30 = objc_msgSend(v21, sel_contentView);
  v31 = objc_msgSend(v30, sel_layoutMarginsGuide);

  v32 = objc_msgSend(v31, sel_trailingAnchor);
  v33 = objc_msgSend(v29, sel_constraintEqualToAnchor_, v32);

  *(_QWORD *)(v23 + 40) = v33;
  v34 = objc_msgSend(*(id *)&v16[v18], sel_topAnchor);
  v35 = objc_msgSend(v21, sel_contentView);
  v36 = objc_msgSend(v35, sel_topAnchor);

  v37 = objc_msgSend(v34, sel_constraintEqualToAnchor_, v36);
  *(_QWORD *)(v23 + 48) = v37;
  v38 = sub_1BC24DCA4();
  v39 = objc_msgSend(v38, sel_topAnchor);

  v40 = objc_msgSend(*(id *)&v16[v18], sel_bottomAnchor);
  v41 = objc_msgSend(v39, sel_constraintEqualToAnchor_constant_, v40, 6.0);

  *(_QWORD *)(v23 + 56) = v41;
  v42 = sub_1BC24DCA4();
  v43 = objc_msgSend(v42, sel_leadingAnchor);

  v44 = objc_msgSend(*(id *)&v16[v18], sel_leadingAnchor);
  v45 = objc_msgSend(v43, sel_constraintEqualToAnchor_, v44);

  *(_QWORD *)(v23 + 64) = v45;
  v46 = sub_1BC24DCA4();
  v47 = objc_msgSend(v46, sel_trailingAnchor);

  v48 = objc_msgSend(*(id *)&v16[v18], sel_trailingAnchor);
  v49 = objc_msgSend(v47, sel_constraintEqualToAnchor_, v48);

  *(_QWORD *)(v23 + 72) = v49;
  v50 = sub_1BC24DCA4();
  v51 = objc_msgSend(v50, sel_bottomAnchor);

  v52 = objc_msgSend(v21, sel_contentView);
  v53 = objc_msgSend(v52, sel_bottomAnchor);

  v54 = objc_msgSend(v51, sel_constraintEqualToAnchor_, v53);
  *(_QWORD *)(v23 + 80) = v54;
  v57[1] = (id)v23;
  sub_1BC2B45A4();
  sub_1BC11BF6C();
  v55 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  objc_msgSend(v57[0], sel_activateConstraints_, v55);

  return v21;
}

uint64_t sub_1BC24E3DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  id v14;
  id v15;
  void *v16;
  id v17;
  _QWORD v18[4];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE v26[24];
  uint64_t v27;

  sub_1BC0E1C64(0, &qword_1EDA0FE00, (void (*)(uint64_t))MEMORY[0x1E0DC3228]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v18 - v2;
  v4 = sub_1BC2B4DFC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BC2B4EC8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI24CustomStrengthOptionCell_item;
  swift_beginAccess();
  sub_1BC0E5774(v12, (uint64_t)v26);
  if (!v27)
    return sub_1BC0F7954((uint64_t)v26);
  sub_1BC0E1B94();
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    v19 = v4;
    v18[2] = v22;
    v18[1] = v23;
    v20 = v25;
    v21 = v24;
    v14 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI24CustomStrengthOptionCell_titleLabel);
    v18[3] = v0;
    v15 = v14;
    v16 = (void *)sub_1BC2B4430();
    objc_msgSend(v15, sel_setText_, v16);

    sub_1BC2B4E8C();
    swift_bridgeObjectRetain();
    sub_1BC2B4E98();
    sub_1BC2B4DF0();
    sub_1BC2B4E2C();
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DC30D8], v19);
    sub_1BC2B4E14();
    v17 = sub_1BC24DCA4();
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v3, v11, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v3, 0, 1, v8);
    sub_1BC2B4EEC();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return result;
}

uint64_t sub_1BC24E680()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  void (*v3)(void);
  _BYTE v4[24];
  uint64_t v5;

  v1 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI24CustomStrengthOptionCell_item;
  swift_beginAccess();
  sub_1BC0E5774(v1, (uint64_t)v4);
  if (!v5)
    return sub_1BC0F7954((uint64_t)v4);
  sub_1BC0E1B94();
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    v3();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

id sub_1BC24E778()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CustomStrengthOptionCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC24E7F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI24CustomStrengthOptionCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a1);
}

uint64_t sub_1BC24E840(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI24CustomStrengthOptionCell_item;
  swift_beginAccess();
  sub_1BC0F3E44(a1, v3);
  swift_endAccess();
  sub_1BC24E3DC();
  return sub_1BC0F7954(a1);
}

uint64_t (*sub_1BC24E8AC(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC24E8F4;
}

uint64_t sub_1BC24E8F8@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;

  v3 = *v1 + OBJC_IVAR____TtC19HealthMedicationsUI24CustomStrengthOptionCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a1);
}

uint64_t sub_1BC24E94C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;

  v3 = *v1 + OBJC_IVAR____TtC19HealthMedicationsUI24CustomStrengthOptionCell_item;
  swift_beginAccess();
  sub_1BC0F3E44(a1, v3);
  swift_endAccess();
  sub_1BC24E3DC();
  return sub_1BC0F7954(a1);
}

uint64_t (*sub_1BC24E9BC(uint64_t a1))()
{
  _QWORD *v1;

  *(_QWORD *)(a1 + 24) = *v1;
  swift_beginAccess();
  return sub_1BC24E8F4;
}

uint64_t sub_1BC24EA08(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_1BC24E3DC();
  return result;
}

unint64_t sub_1BC24EA3C()
{
  unint64_t result;

  result = qword_1EF4008F0;
  if (!qword_1EF4008F0)
  {
    result = MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for CustomStrengthOptionItem, &type metadata for CustomStrengthOptionItem);
    atomic_store(result, (unint64_t *)&qword_1EF4008F0);
  }
  return result;
}

uint64_t destroy for CustomStrengthOptionItem()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CustomStrengthOptionItem(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for CustomStrengthOptionItem(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a2[5];
  a1[4] = a2[4];
  a1[5] = v4;
  swift_retain();
  swift_release();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for CustomStrengthOptionItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = v5;
  swift_release();
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for CustomStrengthOptionItem()
{
  return &type metadata for CustomStrengthOptionItem;
}

uint64_t sub_1BC24EC54()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BC2B3F8C();
  swift_release();
  swift_release();
  return v1;
}

uint64_t PregnancyLactationInteractionCriticalAlertDataSource.__allocating_init(listManager:healthStore:viewController:analyticsManager:)(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  swift_allocObject();
  return PregnancyLactationInteractionCriticalAlertDataSource.init(listManager:healthStore:viewController:analyticsManager:)(a1, a2, a3, a4);
}

uint64_t PregnancyLactationInteractionCriticalAlertDataSource.init(listManager:healthStore:viewController:analyticsManager:)(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[6];

  v22 = a4;
  sub_1BC25230C(0, &qword_1EF400938, MEMORY[0x1E0C96198]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v21 - v11;
  swift_unknownObjectWeakInit();
  v13 = v4 + qword_1EF400960;
  aBlock[0] = 0;
  sub_1BC252484(0, &qword_1EF400940, &qword_1EF400948, &qword_1EF400950);
  swift_retain();
  sub_1BC2B3F5C();
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v13, v12, v9);
  *(_QWORD *)(v4 + qword_1EF400968) = 0;
  *(_QWORD *)(v4 + qword_1EF400970) = 0;
  *(_QWORD *)(v4 + qword_1EF400978) = 0;
  *(_QWORD *)(v4 + qword_1EF400980) = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v4 + qword_1EF400988) = a1;
  *(_QWORD *)(v4 + qword_1EF400990) = a2;
  swift_unknownObjectWeakAssign();
  *(_QWORD *)(v4 + qword_1EF400998) = v22;
  swift_retain();
  v14 = a2;
  swift_retain();
  swift_release();
  v15 = sub_1BC2B2750();
  swift_retain();
  v16 = sub_1BC24F0AC();
  v17 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_1BC24F674;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC24F758;
  aBlock[3] = &block_descriptor_27;
  v18 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v16, sel_allDismissedPregnancyLactationInteractionsWithCompletion_, v18);
  _Block_release(v18);

  sub_1BC24F8A0();
  sub_1BC2B2744();
  sub_1BC2B2A08();
  swift_release();
  v19 = (void *)sub_1BC2B2BF4();
  swift_release();
  objc_msgSend(v19, sel_registerObserver_, v15);
  swift_release();
  swift_release();

  swift_release();
  return v15;
}

uint64_t sub_1BC24EFEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_1BC2B2D20();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B2CC0();
  v4 = objc_msgSend((id)objc_opt_self(), sel_systemBackgroundColor);
  sub_1BC2B2CCC();
  sub_1BC2B2D08();
  v5 = sub_1BC2B2D14();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v5;
}

id sub_1BC24F0AC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = qword_1EF400968;
  v2 = *(void **)(v0 + qword_1EF400968);
  if (v2)
  {
    v3 = *(id *)(v0 + qword_1EF400968);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2C440]), sel_initWithHealthStore_, *(_QWORD *)(v0 + qword_1EF400990));
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t sub_1BC24F12C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC24F150@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;

  v2 = v1;
  v4 = sub_1BC2B488C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2520EC(0);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = qword_1EF400978;
  if (*(_QWORD *)(v1 + qword_1EF400978))
  {
    v14 = *(_QWORD *)(v1 + qword_1EF400978);
  }
  else
  {
    sub_1BC2B4898();
    v15 = sub_1BC0E519C(&qword_1EF400A10, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C060], MEMORY[0x1E0D2C058]);
    v19 = a1;
    v16 = v15;
    sub_1BC2B3FA4();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v20 = v4;
    v21 = v16;
    a1 = v19;
    swift_getOpaqueTypeConformance2();
    v14 = sub_1BC2B3FBC();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    *(_QWORD *)(v2 + v13) = v14;
    swift_retain();
    swift_release();
  }
  *a1 = v14;
  return swift_retain();
}

uint64_t sub_1BC24F2EC()
{
  uint64_t result;

  sub_1BC199AD4();
  result = sub_1BC2B3CEC();
  if (result >= 1)
    return sub_1BC2B37E8();
  return result;
}

uint64_t sub_1BC24F338()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  sub_1BC199AD4();
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B3D04();
  swift_retain();
  if (sub_1BC2B3CEC() >= 1)
    sub_1BC2B37E8();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_1BC24F414(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  _QWORD *v16;
  void *v17;
  const void *v18;
  id v19;
  uint64_t (*v20)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];

  v4 = sub_1BC2B42E0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BC2B4304();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v13 = result;
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FFF0);
    v14 = sub_1BC2B4A0C();
    v23 = v5;
    v15 = (void *)v14;
    v16 = (_QWORD *)swift_allocObject();
    v16[2] = a2;
    v16[3] = v13;
    v16[4] = a1;
    aBlock[4] = sub_1BC2532EC;
    aBlock[5] = v16;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BC1AEAE4;
    aBlock[3] = &block_descriptor_33;
    v17 = _Block_copy(aBlock);
    v22 = v8;
    v18 = v17;
    v19 = a2;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    sub_1BC2B42F8();
    aBlock[0] = MEMORY[0x1E0DEE9D8];
    v20 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
    sub_1BC0E519C((unint64_t *)&qword_1EDA0FFC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0FFD0, v20, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC17219C();
    sub_1BC2B509C();
    MEMORY[0x1BCCEE194](0, v11, v7, v18);
    _Block_release(v18);
    swift_release();

    (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v22);
  }
  return result;
}

uint64_t sub_1BC24F674(uint64_t a1, void *a2)
{
  return sub_1BC24F414(a1, a2);
}

uint64_t sub_1BC24F67C(uint64_t a1)
{
  if (a1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
  }
  else
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return sub_1BC2B3F98();
}

uint64_t sub_1BC24F758(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, void *);
  id v6;

  v4 = a2;
  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1BC0E1D38(0, &qword_1EF400950);
    v4 = sub_1BC2B458C();
  }
  swift_retain();
  v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_1BC24F7E4(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v3;
  id v4;
  void *v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  BOOL v9;

  v3 = *a1;
  sub_1BC0E1D38(0, &qword_1EF3F9950);
  v4 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_lactationType);
  if (v4)
  {
    v5 = v4;
    if (*(_QWORD *)(v3 + 16) && (v6 = sub_1BC108220((uint64_t)v4), (v7 & 1) != 0))
    {
      v8 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v6);

      v9 = v8 > 0;
    }
    else
    {

      v9 = 0;
    }
    *a2 = v9;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1BC24F880()
{
  return sub_1BC2B3F20();
}

id sub_1BC24F8A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void (**v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  void *v32;
  char *v33;
  void *v34;
  id v35;
  uint64_t v36;
  id result;
  id v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(void);
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(uint64_t);
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  void (**v89)(char *, uint64_t);
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95[3];
  __int16 v96;
  uint64_t v97;

  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0FCC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v0);
  v87 = (char *)&v61 - v1;
  v64 = sub_1BC2B4874();
  v63 = *(_QWORD *)(v64 - 8);
  MEMORY[0x1E0C80A78](v64);
  v62 = (char *)&v61 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC252180();
  v70 = v3;
  v68 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v67 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC252200();
  v73 = v5;
  v71 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v69 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BC2B23F0();
  v93 = *(_QWORD *)(v7 - 8);
  v94 = v7;
  MEMORY[0x1E0C80A78](v7);
  v92 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC25230C(0, &qword_1EF400A48, MEMORY[0x1E0C96180]);
  v79 = *(_QWORD *)(v9 - 8);
  v80 = v9;
  MEMORY[0x1E0C80A78](v9);
  v91 = (char *)&v61 - v10;
  sub_1BC2524DC(0, (unint64_t *)&qword_1EDA0FB10, (unint64_t *)&qword_1EDA0FC60, (unint64_t *)&qword_1EDA0FDA0);
  v12 = v11;
  v89 = *(void (***)(char *, uint64_t))(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v61 - v13;
  sub_1BC2523DC();
  v88 = v15;
  v90 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2524DC(0, &qword_1EF400A60, &qword_1EF3FA7F0, &qword_1EF3FA7E8);
  v66 = v18;
  v65 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v20 = (void (**)(char *, uint64_t))((char *)&v61 - v19);
  sub_1BC25257C();
  v75 = v21;
  v74 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v72 = (char *)&v61 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC252808();
  v78 = v23;
  v77 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v76 = (char *)&v61 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC252A80();
  v82 = *(_QWORD *)(v25 - 8);
  v83 = v25;
  MEMORY[0x1E0C80A78](v25);
  v81 = (char *)&v61 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC252AF8();
  v85 = *(_QWORD *)(v27 - 8);
  v86 = v27;
  MEMORY[0x1E0C80A78](v27);
  v84 = (char *)&v61 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95[0] = sub_1BC2B3950();
  sub_1BC101888(0, (unint64_t *)&qword_1EDA0FB60, (void (*)(uint64_t))MEMORY[0x1E0D2EFE8]);
  sub_1BC0F22FC(0, (unint64_t *)&qword_1EDA0FC60, (unint64_t *)&qword_1EDA0FDA0);
  sub_1BC252384();
  sub_1BC2B3FC8();
  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_1BC252484(0, &qword_1EF400A58, &qword_1EF3FA7F0, &qword_1EF3FA7E8);
  sub_1BC2B3DA0();
  swift_release();
  v29 = v91;
  v89[1](v14, v12);
  sub_1BC0F22FC(0, &qword_1EF3FA7F0, &qword_1EF3FA7E8);
  v89 = v20;
  v30 = v88;
  sub_1BC2B3D94();
  (*(void (**)(char *, uint64_t))(v90 + 8))(v17, v30);
  swift_beginAccess();
  sub_1BC25230C(0, &qword_1EF400938, MEMORY[0x1E0C96198]);
  v31 = v29;
  sub_1BC2B3F68();
  swift_endAccess();
  sub_1BC24F150(v95);
  v32 = (void *)objc_opt_self();
  v33 = v92;
  sub_1BC2B2324();
  v34 = (void *)sub_1BC2B2360();
  (*(void (**)(char *, uint64_t))(v93 + 8))(v33, v94);
  v35 = objc_msgSend(v32, sel_predicateForSamplesWithStartDate_endDate_options_, 0, v34, 0);

  sub_1BC0E2130(0, (unint64_t *)&qword_1EDA0FEF0, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_1BC2B7770;
  sub_1BC0E1D38(0, &qword_1EF3F9950);
  result = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_lactationType);
  if (result)
  {
    *(_QWORD *)(v36 + 32) = result;
    v97 = v36;
    sub_1BC2B45A4();
    v38 = v35;
    v39 = v62;
    sub_1BC2B4880();
    swift_bridgeObjectRelease();

    sub_1BC0E519C(&qword_1EF400A20, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BFF0], MEMORY[0x1E0D2BFE8]);
    v40 = v67;
    v41 = v64;
    sub_1BC2B4004();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v39, v41);
    sub_1BC252694(0, &qword_1EF400A30, MEMORY[0x1E0C960C0]);
    sub_1BC0E519C(&qword_1EF400A38, (uint64_t (*)(uint64_t))sub_1BC252180, MEMORY[0x1E0C95950]);
    sub_1BC2522B4();
    v42 = v69;
    v43 = v70;
    sub_1BC2B401C();
    (*(void (**)(char *, uint64_t))(v68 + 8))(v40, v43);
    sub_1BC0E519C(&qword_1EF400AE8, (uint64_t (*)(uint64_t))sub_1BC252200, MEMORY[0x1E0C959F8]);
    v44 = v73;
    v45 = sub_1BC2B3FBC();

    (*(void (**)(char *, uint64_t))(v71 + 8))(v42, v44);
    v97 = v45;
    sub_1BC101888(0, (unint64_t *)&unk_1EF4009E8, type metadata accessor for HKMCPregnancyState);
    v46 = MEMORY[0x1E0C95D78];
    sub_1BC252694(0, (unint64_t *)&qword_1EF3F9DD8, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC2526F0();
    sub_1BC252758();
    sub_1BC2527B0();
    sub_1BC118E64();
    v47 = v72;
    v48 = v66;
    v49 = v80;
    v50 = (char *)v89;
    sub_1BC2B3FEC();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v79 + 8))(v31, v49);
    (*(void (**)(char *, uint64_t))(v65 + 8))(v50, v48);
    sub_1BC2B3E6C();
    sub_1BC252BBC(0, &qword_1EF400A90, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v46);
    sub_1BC0E519C(&qword_1EF400AB0, (uint64_t (*)(uint64_t))sub_1BC25257C, MEMORY[0x1E0C956D8]);
    sub_1BC252C40(&qword_1EF400AB8, &qword_1EF400A90, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v46, MEMORY[0x1E0C95D90]);
    v51 = v76;
    v52 = v75;
    sub_1BC2B40C4();
    (*(void (**)(char *, uint64_t))(v74 + 8))(v47, v52);
    memset(v95, 0, sizeof(v95));
    v96 = 1;
    sub_1BC0E519C(&qword_1EF400AD0, (uint64_t (*)(uint64_t))sub_1BC252808, MEMORY[0x1E0C95B78]);
    v53 = v81;
    v54 = v78;
    sub_1BC2B3FD4();
    (*(void (**)(char *, uint64_t))(v77 + 8))(v51, v54);
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FFF0);
    v95[0] = sub_1BC2B4A0C();
    v55 = sub_1BC2B49C4();
    v56 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868];
    v57 = (uint64_t)v87;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v87, 1, 1, v55);
    sub_1BC0E519C(&qword_1EF400AE0, (uint64_t (*)(uint64_t))sub_1BC252A80, MEMORY[0x1E0C957E8]);
    sub_1BC1019D8();
    v59 = v83;
    v58 = v84;
    sub_1BC2B4064();
    sub_1BC0F2444(v57, (unint64_t *)&qword_1EDA0FCC0, v56);

    (*(void (**)(char *, uint64_t))(v82 + 8))(v53, v59);
    swift_allocObject();
    swift_weakInit();
    sub_1BC0E519C(&qword_1EF400AF0, (uint64_t (*)(uint64_t))sub_1BC252AF8, MEMORY[0x1E0C95CB8]);
    v60 = v86;
    sub_1BC2B40A0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v85 + 8))(v58, v60);
    swift_beginAccess();
    sub_1BC2B3E84();
    swift_endAccess();
    return (id)swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC25047C@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v5 = sub_1BC252C80(v3);
    result = swift_release();
  }
  else
  {
    v5 = 0;
  }
  *a2 = v5;
  return result;
}

uint64_t sub_1BC2504F4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  _QWORD v20[3];
  char v21;
  char v22;

  sub_1BC0E7998(0, &qword_1EF400B00, (uint64_t (*)(uint64_t))sub_1BC2528E4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96098]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v20 - v11;
  sub_1BC252BBC(0, &qword_1EF400B08, MEMORY[0x1E0C964B8]);
  v14 = v13;
  v15 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)v20 - v16;
  v20[0] = a1;
  v20[1] = a2;
  v20[2] = a3;
  v21 = 0;
  v22 = a4;
  sub_1BC2528E4();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BC2B3F14();
  sub_1BC0E8778(0, (unint64_t *)&qword_1EDA0FEA0);
  sub_1BC2B3EFC();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_1BC252C40(qword_1EF400B10, &qword_1EF400B08, MEMORY[0x1E0C964B8], MEMORY[0x1E0C964C8]);
  v18 = sub_1BC2B3FBC();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  return v18;
}

uint64_t sub_1BC2506A0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_1BC2504F4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  *a2 = result;
  return result;
}

uint64_t sub_1BC2506D4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char v11;
  int v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v2 = sub_1BC2B2438();
  v30 = *(_QWORD *)(v2 - 8);
  v31 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_1BC2B2BC4();
  v5 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_BYTE *)(a1 + 24);
  v12 = *(unsigned __int8 *)(a1 + 25);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v14 = result;
    v15 = sub_1BC250A5C(v9, v8, v10, v11, v12);
    if (v15 >> 62)
    {
      v16 = sub_1BC2B52D0();
      v26 = v14;
      if (v16)
        goto LABEL_4;
    }
    else
    {
      v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
      v26 = v14;
      if (v16)
      {
LABEL_4:
        v32 = MEMORY[0x1E0DEE9D8];
        result = sub_1BC125E4C(0, v16 & ~(v16 >> 63), 0);
        if (v16 < 0)
        {
          __break(1u);
          return result;
        }
        v28 = v16;
        v17 = 0;
        v18 = v15 & 0xC000000000000001;
        v27 = xmmword_1BC2B92D0;
        v19 = v15;
        do
        {
          if (v18)
          {
            v20 = MEMORY[0x1BCCEE950](v17, v15);
          }
          else
          {
            v20 = *(_QWORD *)(v15 + 8 * v17 + 32);
            swift_retain();
          }
          sub_1BC127B70(0, (unint64_t *)&qword_1EDA0FE38, (unint64_t *)&qword_1EDA0F7C0);
          v21 = swift_allocObject();
          *(_OWORD *)(v21 + 16) = v27;
          *(_QWORD *)(v21 + 56) = type metadata accessor for PregnancyLactationInteractionCriticalAlertItem();
          *(_QWORD *)(v21 + 64) = sub_1BC0E519C(&qword_1EF400AF8, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyLactationInteractionCriticalAlertItem, (uint64_t)&protocol conformance descriptor for PregnancyLactationInteractionCriticalAlertItem);
          *(_QWORD *)(v21 + 32) = v20;
          swift_retain();
          sub_1BC2B242C();
          sub_1BC2B23FC();
          (*(void (**)(char *, uint64_t))(v30 + 8))(v4, v31);
          sub_1BC2B2BAC();
          swift_release();
          v22 = v32;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1BC125E4C(0, *(_QWORD *)(v22 + 16) + 1, 1);
            v22 = v32;
          }
          v24 = *(_QWORD *)(v22 + 16);
          v23 = *(_QWORD *)(v22 + 24);
          if (v24 >= v23 >> 1)
          {
            sub_1BC125E4C(v23 > 1, v24 + 1, 1);
            v22 = v32;
          }
          ++v17;
          *(_QWORD *)(v22 + 16) = v24 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v22+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v24, v7, v29);
          v32 = v22;
          v15 = v19;
        }
        while (v28 != v17);
      }
    }
    swift_bridgeObjectRelease();
    swift_retain();
    sub_1BC2B2744();
    swift_release();
    sub_1BC2B2A08();
    swift_release();
    sub_1BC2B2C18();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC250A5C(unint64_t a1, uint64_t a2, uint64_t a3, char a4, int a5)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char **v15;
  id v16;
  void *v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v43;

  result = MEMORY[0x1E0DEE9D8];
  v43 = MEMORY[0x1E0DEE9D8];
  if (a1)
  {
    LOBYTE(v8) = a4;
    if (a1 >> 62)
      goto LABEL_37;
    v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v10)
    {
      while (1)
      {
        if (v10 < 1)
        {
          __break(1u);
          return result;
        }
        v11 = 0;
        v12 = a1 & 0xC000000000000001;
        v13 = a1 + 32;
        v14 = a2 & 0xFFFFFFFFFFFFFF8;
        if (a2 < 0)
          v14 = a2;
        v33 = v14;
        v34 = qword_1EF400998;
        v15 = &selRef_tertiarySystemBackgroundColor;
        v41 = v8;
        v39 = a1 & 0xC000000000000001;
        v40 = v10;
        v36 = a1;
        v35 = a5;
        v38 = a1 + 32;
        while (1)
        {
          v16 = v12 ? (id)MEMORY[0x1BCCEE950](v11, a1) : *(id *)(v13 + 8 * v11);
          v17 = v16;
          if ((objc_msgSend(v16, v15[191], v33) != (id)1 || (v8 & 1) == 0 && a3 == 1)
            && (objc_msgSend(v17, v15[191]) != (id)2 || (a5 & 1) != 0)
            && a2)
          {
            break;
          }

LABEL_9:
          if (++v11 == v10)
          {
            swift_bridgeObjectRelease();
            return v43;
          }
        }
        if (!((unint64_t)a2 >> 62))
          break;
        swift_bridgeObjectRetain();
        v18 = sub_1BC2B52D0();
        if (!v18)
          goto LABEL_28;
LABEL_21:
        v8 = 4;
        while (1)
        {
          v19 = (a2 & 0xC000000000000001) != 0
              ? (id)MEMORY[0x1BCCEE950](v8 - 4, a2)
              : *(id *)(a2 + 8 * v8);
          v20 = v19;
          v21 = v8 - 3;
          if (__OFADD__(v8 - 4, 1))
            break;
          v22 = objc_msgSend(v19, sel_isEquivalentToPregnancyLactationInteraction_, v17);

          if (v22)
          {

            swift_bridgeObjectRelease();
            goto LABEL_32;
          }
          ++v8;
          if (v21 == v18)
            goto LABEL_28;
        }
        __break(1u);
LABEL_37:
        swift_bridgeObjectRetain();
        result = sub_1BC2B52D0();
        v10 = result;
        if (!result)
          goto LABEL_38;
      }
      v18 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v18)
        goto LABEL_21;
LABEL_28:
      swift_bridgeObjectRelease();
      v23 = swift_allocObject();
      *(_QWORD *)(v23 + 16) = v17;
      *(_QWORD *)(v23 + 24) = v37;
      v24 = swift_allocObject();
      swift_weakInit();
      v25 = v17;
      swift_retain();
      v26 = sub_1BC24F0AC();
      v27 = *(_QWORD *)(v37 + v34);
      v28 = (_QWORD *)swift_allocObject();
      v28[2] = v26;
      v28[3] = v25;
      v28[4] = v24;
      v28[5] = v27;
      type metadata accessor for PregnancyLactationInteractionCriticalAlertItem();
      v29 = (_QWORD *)swift_allocObject();
      type metadata accessor for PregnancyLactationInteractionCriticalAlertCell();
      sub_1BC0E519C(&qword_1EF3FF518, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyLactationInteractionCriticalAlertCell, (uint64_t)&protocol conformance descriptor for PregnancyLactationInteractionCriticalAlertCell);
      v30 = v25;
      swift_retain();
      v31 = sub_1BC2B2930();
      v29[2] = v30;
      v29[3] = v31;
      v29[4] = v32;
      v29[5] = sub_1BC2519B8;
      v29[6] = v23;
      v29[7] = sub_1BC2519FC;
      v29[8] = v28;
      MEMORY[0x1BCCEDCF0]();
      if (*(_QWORD *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1BC2B45C8();
      sub_1BC2B4604();
      sub_1BC2B45A4();

      a1 = v36;
      a5 = v35;
LABEL_32:
      LOBYTE(v8) = v41;
      v12 = v39;
      v10 = v40;
      v13 = v38;
      v15 = &selRef_tertiarySystemBackgroundColor;
      goto LABEL_9;
    }
LABEL_38:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

void sub_1BC250E10(void *a1, uint64_t a2)
{
  id v4;
  char v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  uint64_t v26;

  v4 = objc_msgSend(a1, sel_interactionType);
  if (v4 == (id)1)
  {
    v5 = 1;
  }
  else
  {
    if (v4 != (id)2)
    {
      sub_1BC2B52B8();
      __break(1u);
      return;
    }
    v5 = 2;
  }
  v6 = objc_msgSend(a1, sel_medication);
  v7 = sub_1BC1D0CF8(v6, v5);
  v9 = v8;

  if (!v9)
  {
    v7 = MedicationSecondaryEducationType.unavailableText.getter();
    v9 = v10;
  }
  v11 = objc_msgSend(a1, sel_medication);
  v12 = objc_msgSend(v11, sel_localizedOntologyEducationContent);
  v13 = v12;
  v26 = a2;
  if (v12)
  {
    v14 = objc_msgSend(v12, sel_primarySection);

    if (v14)
    {
      sub_1BC2B4C34();

      sub_1BC0E2130(0, (unint64_t *)&qword_1EF3FA018, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BC11BF0C();
      v13 = (void *)sub_1BC2B440C();
      v14 = v15;

      swift_bridgeObjectRelease();
    }
    else
    {

      v13 = 0;
    }
  }
  else
  {

    v14 = 0;
  }
  v16 = objc_msgSend(a1, sel_medication);
  v17 = objc_allocWithZone((Class)type metadata accessor for MedicationSecondaryEducationViewController());
  v17[qword_1EF3FB740] = v5;
  type metadata accessor for MedicationSecondaryEducationCompoundDataSource(0);
  swift_allocObject();
  type metadata accessor for MedicationSecondaryEducationDataSource(0);
  v18 = swift_allocObject();
  v19 = v17;
  v20 = sub_1BC251A3C(v5, v16, v7, v9, (uint64_t)v13, (uint64_t)v14, v18);
  sub_1BC127B70(0, (unint64_t *)&qword_1EF400100, (unint64_t *)&qword_1EF3F8998);
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1BC2B92D0;
  v22 = sub_1BC0E519C((unint64_t *)&qword_1EF3FB798, type metadata accessor for MedicationSecondaryEducationDataSource, MEMORY[0x1E0D2F070]);
  *(_QWORD *)(v21 + 32) = v20;
  *(_QWORD *)(v21 + 40) = v22;
  sub_1BC2B2E04();

  swift_retain();
  v23 = (void *)sub_1BC2B2FE4();
  objc_msgSend(v23, sel_setModalPresentationStyle_, 2);

  swift_release();
  objc_msgSend(v23, sel_setModalPresentationStyle_, 2);
  v24 = (void *)MEMORY[0x1BCCEF478](v26 + qword_1EF400958);
  if (v24)
  {
    v25 = v24;
    objc_msgSend(v24, sel_showAdaptively_sender_, v23, v26);

  }
}

void sub_1BC251160(void *a1, id a2, uint64_t a3, uint64_t a4)
{
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  _QWORD v12[6];

  v8 = objc_msgSend(a2, sel_medication);
  v9 = objc_msgSend(a2, sel_interactionType);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a3;
  *(_QWORD *)(v10 + 24) = a4;
  v12[4] = sub_1BC251A34;
  v12[5] = v10;
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 1107296256;
  v12[2] = sub_1BC2599E8;
  v12[3] = &block_descriptor_14;
  v11 = _Block_copy(v12);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_markPregnancyLactationInteractionForMedicationAsDismissed_interactionType_completion_, v8, v9, v11);
  _Block_release(v11);

}

uint64_t sub_1BC251278()
{
  id v0;
  uint64_t v1;
  void *v2;
  _QWORD aBlock[6];

  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    v0 = sub_1BC24F0AC();
    v1 = swift_allocObject();
    swift_weakInit();
    aBlock[4] = sub_1BC24F674;
    aBlock[5] = v1;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BC24F758;
    aBlock[3] = &block_descriptor_19_0;
    v2 = _Block_copy(aBlock);
    swift_release();
    objc_msgSend(v0, sel_allDismissedPregnancyLactationInteractionsWithCompletion_, v2);
    _Block_release(v2);
    swift_release();

  }
  return sub_1BC2B37E8();
}

void PregnancyLactationInteractionCriticalAlertDataSource.__allocating_init(arrangedSections:isHidden:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void PregnancyLactationInteractionCriticalAlertDataSource.init(arrangedSections:isHidden:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC2513D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_unknownObjectWeakDestroy();
  swift_release();
  v1 = v0 + qword_1EF400960;
  sub_1BC25230C(0, &qword_1EF400938, MEMORY[0x1E0C96198]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();

  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t PregnancyLactationInteractionCriticalAlertDataSource.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = _s19HealthMedicationsUI34InteractionSeperatorLineDataSourceCfd_0();
  swift_unknownObjectWeakDestroy();
  swift_release();
  v1 = v0 + qword_1EF400960;
  sub_1BC25230C(0, &qword_1EF400938, MEMORY[0x1E0C96198]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PregnancyLactationInteractionCriticalAlertDataSource.__deallocating_deinit()
{
  PregnancyLactationInteractionCriticalAlertDataSource.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC25159C()
{
  MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for PregnancyLactationInteractionCriticalAlertDataSource);
  return sub_1BC2B3074();
}

Swift::Void __swiftcall PregnancyLactationInteractionCriticalAlertDataSource.registerCells(for:)(UICollectionView *a1)
{
  type metadata accessor for PregnancyLactationInteractionCriticalAlertCell();
  sub_1BC0E519C(&qword_1EF3FF518, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyLactationInteractionCriticalAlertCell, (uint64_t)&protocol conformance descriptor for PregnancyLactationInteractionCriticalAlertCell);
  sub_1BC2B497C();
}

uint64_t sub_1BC25163C()
{
  return sub_1BC0E519C(&qword_1EF4009A0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyLactationInteractionCriticalAlertDataSource, (uint64_t)&protocol conformance descriptor for PregnancyLactationInteractionCriticalAlertDataSource);
}

uint64_t type metadata accessor for PregnancyLactationInteractionCriticalAlertDataSource()
{
  uint64_t result;

  result = qword_1EF4009A8;
  if (!qword_1EF4009A8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC2516A4()
{
  type metadata accessor for PregnancyLactationInteractionCriticalAlertCell();
  sub_1BC0E519C(&qword_1EF3FF518, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyLactationInteractionCriticalAlertCell, (uint64_t)&protocol conformance descriptor for PregnancyLactationInteractionCriticalAlertCell);
  return sub_1BC2B497C();
}

void sub_1BC2516F8()
{
  unint64_t v0;
  unint64_t v1;

  sub_1BC25230C(319, &qword_1EF400938, MEMORY[0x1E0C96198]);
  if (v0 <= 0x3F)
  {
    sub_1BC25182C();
    if (v1 <= 0x3F)
      swift_initClassMetadata2();
  }
}

uint64_t method lookup function for PregnancyLactationInteractionCriticalAlertDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PregnancyLactationInteractionCriticalAlertDataSource.__allocating_init(listManager:healthStore:viewController:analyticsManager:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(class metadata base offset for PregnancyLactationInteractionCriticalAlertDataSource
                              + v0
                              + 144))();
}

uint64_t dispatch thunk of PregnancyLactationInteractionCriticalAlertDataSource.layout(for:environment:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for PregnancyLactationInteractionCriticalAlertDataSource
                              + *v0
                              + 152))();
}

uint64_t dispatch thunk of PregnancyLactationInteractionCriticalAlertDataSource.snapshotDidChange(dataSourceID:snapshot:animated:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for PregnancyLactationInteractionCriticalAlertDataSource
                              + *v0
                              + 272))();
}

void sub_1BC25182C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF4009E0)
  {
    sub_1BC101888(255, (unint64_t *)&unk_1EF4009E8, type metadata accessor for HKMCPregnancyState);
    v0 = sub_1BC2B4FA0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF4009E0);
  }
}

uint64_t sub_1BC251890()
{
  return type metadata accessor for PregnancyLactationInteractionCriticalAlertDataSource();
}

uint64_t sub_1BC251898@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BC2B3F8C();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1BC251914()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1BC2B3F98();
}

uint64_t sub_1BC25198C()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_1BC2519B8()
{
  uint64_t v0;

  sub_1BC250E10(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BC2519C0()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1BC2519FC()
{
  uint64_t v0;

  sub_1BC251160(*(void **)(v0 + 16), *(id *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1BC251A08()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC251A34()
{
  return sub_1BC251278();
}

uint64_t sub_1BC251A3C(char a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t *v36;
  void *v37;
  uint64_t (*v38)();
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t);
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  void (*v71)(unint64_t, char *, uint64_t);
  uint64_t v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t);
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD v86[3];
  uint64_t v87;
  uint64_t v88;

  v77 = a4;
  *(_QWORD *)&v78 = a5;
  v76 = a3;
  v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC0E7998(0, &qword_1EDA0ECC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2CAB8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v76 - v16;
  v18 = sub_1BC2B2438();
  v79 = *(_QWORD *)(v18 - 8);
  v80 = v18;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v76 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1BC2B2BC4();
  v83 = *(_QWORD *)(v21 - 8);
  v84 = v21;
  v22 = MEMORY[0x1E0C80A78](v21);
  v82 = (char *)&v76 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v81 = (char *)&v76 - v24;
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0ECC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950], v11);
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v76 - v26;
  v85 = a7;
  *(_BYTE *)(a7 + qword_1EF3F99C0) = a1;
  if (!a1)
  {
    v32 = type metadata accessor for MedicationSideEffectsItem();
    v33 = swift_allocObject();
    type metadata accessor for MedicationSideEffectsItemCell();
    sub_1BC0E519C(&qword_1EF3F8880, (uint64_t (*)(uint64_t))type metadata accessor for MedicationSideEffectsItemCell, (uint64_t)&protocol conformance descriptor for MedicationSideEffectsItemCell);
    *(_QWORD *)(v33 + 16) = sub_1BC2B2930();
    *(_QWORD *)(v33 + 24) = v34;
    v35 = v77;
    *(_QWORD *)(v33 + 32) = v76;
    *(_QWORD *)(v33 + 40) = v35;
    *(_QWORD *)(v33 + 48) = v78;
    *(_QWORD *)(v33 + 56) = a6;
    v87 = v32;
    v36 = (unint64_t *)&unk_1EF3F9A48;
    v37 = &unk_1BC2BF93C;
    v38 = type metadata accessor for MedicationSideEffectsItem;
    goto LABEL_12;
  }
  if (a1 == 1)
  {
    sub_1BC2B4BD4();
    v28 = sub_1BC2B3788();
    v29 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v17, 1, v28) != 1)
    {
      v41 = sub_1BC2B3770();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v17, v28);
      goto LABEL_11;
    }
    v30 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2CAB8];
    v31 = (uint64_t)v17;
  }
  else
  {
    sub_1BC2B4BD4();
    v39 = sub_1BC2B3788();
    v40 = *(_QWORD *)(v39 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v15, 1, v39) != 1)
    {
      v41 = sub_1BC2B377C();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v15, v39);
      goto LABEL_11;
    }
    v30 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2CAB8];
    v31 = (uint64_t)v15;
  }
  sub_1BC0F2444(v31, &qword_1EDA0ECC8, v30);
  v41 = 0;
LABEL_11:
  v42 = type metadata accessor for MedicationMarkdownItem();
  v33 = swift_allocObject();
  type metadata accessor for MedicationMarkdownItemCell();
  sub_1BC0E519C(&qword_1EF3F9A28, (uint64_t (*)(uint64_t))type metadata accessor for MedicationMarkdownItemCell, (uint64_t)&protocol conformance descriptor for MedicationMarkdownItemCell);
  *(_QWORD *)(v33 + 16) = sub_1BC2B2930();
  *(_QWORD *)(v33 + 24) = v43;
  v44 = v77;
  *(_QWORD *)(v33 + 32) = v76;
  *(_QWORD *)(v33 + 40) = v44;
  *(_QWORD *)(v33 + 48) = v78;
  *(_QWORD *)(v33 + 56) = a6;
  *(_BYTE *)(v33 + 64) = v41 & 1;
  v87 = v42;
  v36 = (unint64_t *)&unk_1EF3F9A38;
  v37 = &unk_1BC2BDDE0;
  v38 = type metadata accessor for MedicationMarkdownItem;
LABEL_12:
  v88 = sub_1BC0E519C(v36, (uint64_t (*)(uint64_t))v38, (uint64_t)v37);
  v86[0] = v33;
  _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE7medmoji0eF10Experience29MedicationVisualizationConfigVSgvg_0();
  v45 = _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE5titleSSvg_0();
  v47 = v46;
  v48 = a2;
  v49 = sub_1BC268538();
  v51 = v50;

  if (v51)
    v52 = v49;
  else
    v52 = 0;
  if (!v51)
    v51 = 0xE000000000000000;
  v53 = _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE10componentsSaySSGSgvg_0();
  if (v53)
    v54 = v53;
  else
    v54 = MEMORY[0x1E0DEE9D8];
  v55 = type metadata accessor for MedicationInfoItem();
  v56 = swift_allocObject();
  type metadata accessor for MedicationInfoItemCell();
  sub_1BC0E519C((unint64_t *)&qword_1EF3F9A20, (uint64_t (*)(uint64_t))type metadata accessor for MedicationInfoItemCell, (uint64_t)&protocol conformance descriptor for MedicationInfoItemCell);
  *(_QWORD *)(v56 + 16) = sub_1BC2B2930();
  *(_QWORD *)(v56 + 24) = v57;
  sub_1BC109D88((uint64_t)v27, v56 + OBJC_IVAR____TtC19HealthMedicationsUI18MedicationInfoItem_medmoji);
  v58 = (uint64_t *)(v56 + OBJC_IVAR____TtC19HealthMedicationsUI18MedicationInfoItem_name);
  *v58 = v45;
  v58[1] = v47;
  v59 = (uint64_t *)(v56 + OBJC_IVAR____TtC19HealthMedicationsUI18MedicationInfoItem_strength);
  *v59 = v52;
  v59[1] = v51;
  *(_QWORD *)(v56 + OBJC_IVAR____TtC19HealthMedicationsUI18MedicationInfoItem_ingredients) = v54;
  sub_1BC127B70(0, (unint64_t *)&qword_1EDA0FE38, (unint64_t *)&qword_1EDA0F7C0);
  v60 = swift_allocObject();
  v78 = xmmword_1BC2B92D0;
  *(_OWORD *)(v60 + 16) = xmmword_1BC2B92D0;
  *(_QWORD *)(v60 + 56) = v55;
  *(_QWORD *)(v60 + 64) = sub_1BC0E519C(&qword_1EF3F9A40, (uint64_t (*)(uint64_t))type metadata accessor for MedicationInfoItem, (uint64_t)&protocol conformance descriptor for MedicationInfoItem);
  *(_QWORD *)(v60 + 32) = v56;
  swift_retain();
  sub_1BC2B242C();
  sub_1BC2B23FC();
  v61 = v80;
  v62 = *(void (**)(char *, uint64_t))(v79 + 8);
  v62(v20, v80);
  v63 = v81;
  sub_1BC2B2BAC();
  v64 = swift_allocObject();
  *(_OWORD *)(v64 + 16) = v78;
  sub_1BC0E79F0((uint64_t)v86, v64 + 32);
  sub_1BC2B242C();
  sub_1BC2B23FC();
  v62(v20, v61);
  v65 = v82;
  sub_1BC2B2BAC();
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8C50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v66 = v83;
  v67 = *(_QWORD *)(v83 + 72);
  v68 = (*(unsigned __int8 *)(v83 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80);
  v69 = swift_allocObject();
  *(_OWORD *)(v69 + 16) = xmmword_1BC2B92C0;
  v70 = v69 + v68;
  v71 = *(void (**)(unint64_t, char *, uint64_t))(v66 + 16);
  v72 = v84;
  v71(v70, v63, v84);
  v71(v70 + v67, v65, v72);
  v73 = sub_1BC2B2750();
  swift_release();
  v74 = *(void (**)(char *, uint64_t))(v66 + 8);
  v74(v65, v72);
  v74(v63, v72);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v86);
  return v73;
}

void sub_1BC2520EC(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  if (!qword_1EF400A08)
  {
    v4[0] = sub_1BC2B488C();
    v4[1] = sub_1BC0E519C(&qword_1EF400A10, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C060], MEMORY[0x1E0D2C058]);
    v2 = MEMORY[0x1BCCEF274](a1, v4, MEMORY[0x1E0D2E830], 0);
    if (!v3)
      atomic_store(v2, (unint64_t *)&qword_1EF400A08);
  }
}

void sub_1BC252180()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF400A18)
  {
    sub_1BC2B4874();
    sub_1BC0E519C(&qword_1EF400A20, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BFF0], MEMORY[0x1E0D2BFE8]);
    v0 = sub_1BC2B3DF4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF400A18);
  }
}

void sub_1BC252200()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF400A28)
  {
    sub_1BC252180();
    sub_1BC252694(255, &qword_1EF400A30, MEMORY[0x1E0C960C0]);
    sub_1BC0E519C(&qword_1EF400A38, (uint64_t (*)(uint64_t))sub_1BC252180, MEMORY[0x1E0C95950]);
    sub_1BC2522B4();
    v0 = sub_1BC2B3E00();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF400A28);
  }
}

unint64_t sub_1BC2522B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF400A40;
  if (!qword_1EF400A40)
  {
    sub_1BC252694(255, &qword_1EF400A30, MEMORY[0x1E0C960C0]);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C960D0], v1);
    atomic_store(result, (unint64_t *)&qword_1EF400A40);
  }
  return result;
}

void sub_1BC25230C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_1BC252484(255, &qword_1EF400940, &qword_1EF400948, &qword_1EF400950);
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BC252384()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDA0FB58;
  if (!qword_1EDA0FB58)
  {
    sub_1BC101888(255, (unint64_t *)&qword_1EDA0FB60, (void (*)(uint64_t))MEMORY[0x1E0D2EFE8]);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C95D90], v1);
    atomic_store(result, (unint64_t *)&qword_1EDA0FB58);
  }
  return result;
}

void sub_1BC2523DC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF400A50)
  {
    sub_1BC101888(255, (unint64_t *)&qword_1EDA0FB60, (void (*)(uint64_t))MEMORY[0x1E0D2EFE8]);
    sub_1BC252484(255, &qword_1EF400A58, &qword_1EF3FA7F0, &qword_1EF3FA7E8);
    sub_1BC252384();
    v0 = sub_1BC2B3DAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF400A50);
  }
}

void sub_1BC252484(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4)
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_1BC0F22FC(255, a3, a4);
    v5 = sub_1BC2B4FA0();
    if (!v6)
      atomic_store(v5, a2);
  }
}

void sub_1BC2524DC(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4)
{
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_1BC101888(255, (unint64_t *)&qword_1EDA0FB60, (void (*)(uint64_t))MEMORY[0x1E0D2EFE8]);
    sub_1BC0F22FC(255, a3, a4);
    sub_1BC252384();
    v7 = sub_1BC2B3DAC();
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_1BC25257C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF400A68)
  {
    sub_1BC2524DC(255, &qword_1EF400A60, &qword_1EF3FA7F0, &qword_1EF3FA7E8);
    sub_1BC25230C(255, &qword_1EF400A48, MEMORY[0x1E0C96180]);
    sub_1BC101888(255, (unint64_t *)&unk_1EF4009E8, type metadata accessor for HKMCPregnancyState);
    sub_1BC252694(255, (unint64_t *)&qword_1EF3F9DD8, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC2526F0();
    sub_1BC252758();
    sub_1BC2527B0();
    sub_1BC118E64();
    v0 = sub_1BC2B3D88();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF400A68);
  }
}

void sub_1BC252694(uint64_t a1, unint64_t *a2, uint64_t (*a3)(_QWORD, _QWORD, _QWORD, _QWORD))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = a3(0, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0DEDCE8], MEMORY[0x1E0DEDD18]);
    if (!v5)
      atomic_store(v4, a2);
  }
}

unint64_t sub_1BC2526F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF400A70;
  if (!qword_1EF400A70)
  {
    sub_1BC2524DC(255, &qword_1EF400A60, &qword_1EF3FA7F0, &qword_1EF3FA7E8);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C95708], v1);
    atomic_store(result, (unint64_t *)&qword_1EF400A70);
  }
  return result;
}

unint64_t sub_1BC252758()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF400A78;
  if (!qword_1EF400A78)
  {
    sub_1BC25230C(255, &qword_1EF400A48, MEMORY[0x1E0C96180]);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C96190], v1);
    atomic_store(result, (unint64_t *)&qword_1EF400A78);
  }
  return result;
}

unint64_t sub_1BC2527B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF400A80;
  if (!qword_1EF400A80)
  {
    sub_1BC101888(255, (unint64_t *)&unk_1EF4009E8, type metadata accessor for HKMCPregnancyState);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C95D90], v1);
    atomic_store(result, (unint64_t *)&qword_1EF400A80);
  }
  return result;
}

void sub_1BC252808()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EF400A88)
  {
    v0 = MEMORY[0x1E0C95D78];
    sub_1BC252BBC(255, &qword_1EF400A90, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC2529C8();
    sub_1BC252C40(&qword_1EF400AB8, &qword_1EF400A90, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))v0, MEMORY[0x1E0C95D90]);
    sub_1BC0E519C(&qword_1EF400AC0, (uint64_t (*)(uint64_t))sub_1BC2529C8, MEMORY[0x1E0C95850]);
    v1 = sub_1BC2B3E24();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EF400A88);
  }
}

void sub_1BC2528E4()
{
  unint64_t TupleTypeMetadata;
  uint64_t v1;

  if (!qword_1EF400A98)
  {
    sub_1BC252484(255, &qword_1EF400A58, &qword_1EF3FA7F0, &qword_1EF3FA7E8);
    sub_1BC252484(255, &qword_1EF400940, &qword_1EF400948, &qword_1EF400950);
    sub_1BC0E7998(255, &qword_1EF400AA0, (uint64_t (*)(uint64_t))type metadata accessor for HKMCPregnancyState, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1)
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1EF400A98);
  }
}

void sub_1BC2529C8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF400AA8)
  {
    sub_1BC25257C();
    sub_1BC0E8778(255, (unint64_t *)&qword_1EDA0FEA0);
    sub_1BC0E519C(&qword_1EF400AB0, (uint64_t (*)(uint64_t))sub_1BC25257C, MEMORY[0x1E0C956D8]);
    v0 = sub_1BC2B3DD0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF400AA8);
  }
}

void sub_1BC252A80()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF400AC8)
  {
    sub_1BC252808();
    sub_1BC0E519C(&qword_1EF400AD0, (uint64_t (*)(uint64_t))sub_1BC252808, MEMORY[0x1E0C95B78]);
    v0 = sub_1BC2B3DC4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF400AC8);
  }
}

void sub_1BC252AF8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF400AD8)
  {
    sub_1BC252A80();
    sub_1BC0E1D38(255, (unint64_t *)&qword_1EDA0FFF0);
    sub_1BC0E519C(&qword_1EF400AE0, (uint64_t (*)(uint64_t))sub_1BC252A80, MEMORY[0x1E0C957E8]);
    sub_1BC1019D8();
    v0 = sub_1BC2B3E60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF400AD8);
  }
}

uint64_t sub_1BC252BAC@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BC25047C(a1, a2);
}

uint64_t sub_1BC252BB4(uint64_t a1)
{
  return sub_1BC2506D4(a1);
}

void sub_1BC252BBC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, _QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_1BC2528E4();
    v7 = v6;
    v8 = sub_1BC0E8778(255, (unint64_t *)&qword_1EDA0FEA0);
    v9 = a3(a1, v7, v8, MEMORY[0x1E0DEDB38]);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_1BC252C40(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, _QWORD), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BC252BBC(255, a2, a3);
    result = MEMORY[0x1BCCEF2BC](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BC252C80(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t i;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  unint64_t v39;
  uint64_t result;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  sub_1BC0E7998(0, &qword_1EDA0ECC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2CAB8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v41 - v6;
  v43 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = sub_1BC2B52D0();
    if (v8)
      goto LABEL_3;
LABEL_16:
    swift_bridgeObjectRelease();
    v15 = MEMORY[0x1E0DEE9D8];
    goto LABEL_17;
  }
  v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v8)
    goto LABEL_16;
LABEL_3:
  if (v8 < 1)
  {
    __break(1u);
LABEL_64:
    __break(1u);
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
LABEL_67:
    swift_release();
    result = swift_release();
    __break(1u);
    return result;
  }
  for (i = 0; i != v8; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0)
      v10 = (id)MEMORY[0x1BCCEE950](i, a1);
    else
      v10 = *(id *)(a1 + 8 * i + 32);
    v11 = v10;
    sub_1BC2B4BD4();
    v12 = sub_1BC2B3788();
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v7, 1, v12) == 1)
    {
      sub_1BC0F2444((uint64_t)v7, &qword_1EDA0ECC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2CAB8]);
LABEL_6:

      continue;
    }
    v14 = sub_1BC2B3770();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v7, v12);
    if ((v14 & 1) == 0)
      goto LABEL_6;
    sub_1BC2B5204();
    sub_1BC2B5234();
    sub_1BC2B5240();
    sub_1BC2B5210();
  }
  swift_bridgeObjectRelease();
  v15 = v43;
LABEL_17:
  swift_getKeyPath();
  swift_retain();
  swift_retain();
  if ((v15 & 0x8000000000000000) != 0 || (v16 = (_QWORD *)v15, (v15 & 0x4000000000000000) != 0))
  {
    v16 = sub_1BC1332A8(v15);
    swift_release();
  }
  v43 = (uint64_t)v16;
  sub_1BC15D86C(&v43);
  swift_release();
  swift_release_n();
  v17 = v43;
  if (v43 < 0 || (v43 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    v18 = sub_1BC2B52D0();
    swift_release();
    v42 = 0;
    if (!v18)
      goto LABEL_31;
LABEL_22:
    v43 = MEMORY[0x1E0DEE9D8];
    sub_1BC2B5228();
    if ((v18 & 0x8000000000000000) == 0)
    {
      v19 = 0;
      do
      {
        if ((v17 & 0xC000000000000001) != 0)
          v20 = (id)MEMORY[0x1BCCEE950](v19, v17);
        else
          v20 = *(id *)(v17 + 8 * v19 + 32);
        v21 = v20;
        ++v19;
        objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2C478]), sel_initWithMedication_interactionType_, v20, 1);

        sub_1BC2B5204();
        sub_1BC2B5234();
        sub_1BC2B5240();
        sub_1BC2B5210();
      }
      while (v18 != v19);
      v22 = v43;
      swift_release();
      goto LABEL_32;
    }
    goto LABEL_64;
  }
  v18 = *(_QWORD *)(v43 + 16);
  v42 = 0;
  if (v18)
    goto LABEL_22;
LABEL_31:
  swift_release();
  v22 = MEMORY[0x1E0DEE9D8];
LABEL_32:
  v23 = MEMORY[0x1E0DEE9D8];
  v43 = MEMORY[0x1E0DEE9D8];
  if (!v8)
  {
    v31 = MEMORY[0x1E0DEE9D8];
    goto LABEL_46;
  }
  if (v8 < 1)
    goto LABEL_65;
  v41 = v22;
  swift_bridgeObjectRetain();
  v24 = 0;
  v25 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2CAB8];
  do
  {
    if ((a1 & 0xC000000000000001) != 0)
      v26 = (id)MEMORY[0x1BCCEE950](v24, a1);
    else
      v26 = *(id *)(a1 + 8 * v24 + 32);
    v27 = v26;
    sub_1BC2B4BD4();
    v28 = sub_1BC2B3788();
    v29 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v5, 1, v28) == 1)
    {
      sub_1BC0F2444((uint64_t)v5, &qword_1EDA0ECC8, v25);
LABEL_36:

      goto LABEL_37;
    }
    v30 = sub_1BC2B377C();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v5, v28);
    if ((v30 & 1) == 0)
      goto LABEL_36;
    sub_1BC2B5204();
    sub_1BC2B5234();
    sub_1BC2B5240();
    sub_1BC2B5210();
LABEL_37:
    ++v24;
  }
  while (v8 != v24);
  swift_bridgeObjectRelease();
  v31 = v43;
  v23 = MEMORY[0x1E0DEE9D8];
  v22 = v41;
LABEL_46:
  swift_getKeyPath();
  swift_retain();
  swift_retain();
  if ((v31 & 0x8000000000000000) != 0 || (v32 = (_QWORD *)v31, (v31 & 0x4000000000000000) != 0))
  {
    v32 = sub_1BC1332A8(v31);
    swift_release();
  }
  v43 = (uint64_t)v32;
  v33 = v42;
  sub_1BC15D86C(&v43);
  if (v33)
    goto LABEL_67;
  swift_release();
  swift_release_n();
  v34 = v43;
  if (v43 < 0 || (v43 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    v35 = sub_1BC2B52D0();
    swift_release();
    if (!v35)
      goto LABEL_61;
LABEL_52:
    v43 = v23;
    sub_1BC2B5228();
    if ((v35 & 0x8000000000000000) == 0)
    {
      v36 = 0;
      do
      {
        if ((v34 & 0xC000000000000001) != 0)
          v37 = (id)MEMORY[0x1BCCEE950](v36, v34);
        else
          v37 = *(id *)(v34 + 8 * v36 + 32);
        v38 = v37;
        ++v36;
        objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2C478]), sel_initWithMedication_interactionType_, v37, 2);

        sub_1BC2B5204();
        sub_1BC2B5234();
        sub_1BC2B5240();
        sub_1BC2B5210();
      }
      while (v35 != v36);
      v39 = v43;
      swift_release();
      goto LABEL_62;
    }
    goto LABEL_66;
  }
  v35 = *(_QWORD *)(v43 + 16);
  if (v35)
    goto LABEL_52;
LABEL_61:
  swift_release();
  v39 = MEMORY[0x1E0DEE9D8];
LABEL_62:
  v43 = v22;
  sub_1BC131B88(v39);
  return v43;
}

uint64_t sub_1BC2532A8()
{
  return MEMORY[0x1E0D2CCA8];
}

uint64_t sub_1BC2532B8()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC2532EC()
{
  uint64_t v0;

  return sub_1BC24F67C(*(_QWORD *)(v0 + 16));
}

uint64_t type metadata accessor for MedicationsLogDataSource()
{
  uint64_t result;

  result = qword_1EDA0F808;
  if (!qword_1EDA0F808)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC253348()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1BC2533A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);

  v3 = sub_1BC2B3CD4();
  MEMORY[0x1E0C80A78](v3);
  if (*(_QWORD *)(v1 + qword_1EDA0F7F0 + 8))
  {
    swift_bridgeObjectRetain();
    sub_1BC2B3C68();
    v4 = sub_1BC2B28F4();
    v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2A8B8];
    swift_allocObject();
    v6 = sub_1BC2B28E8();
    a1[3] = v4;
    result = sub_1BC0E519C((unint64_t *)&qword_1EF3F96B8, v5, MEMORY[0x1E0D2A8A0]);
    a1[4] = result;
    *a1 = v6;
  }
  else
  {
    v8 = sub_1BC2B296C();
    v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2AB30];
    a1[3] = v8;
    a1[4] = sub_1BC0E519C(&qword_1EF3F8B68, v9, MEMORY[0x1E0D2AB20]);
    __swift_allocate_boxed_opaque_existential_1(a1);
    return sub_1BC2B2960();
  }
  return result;
}

void sub_1BC2534F0()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC25351C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1BC0F0430(v0 + qword_1EDA0F7F8);
}

uint64_t sub_1BC25355C()
{
  uint64_t v0;

  v0 = sub_1BC2B2C60();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BC0F0430(v0 + qword_1EDA0F7F8);
  return swift_deallocClassInstance();
}

uint64_t sub_1BC2535BC()
{
  return type metadata accessor for MedicationsLogDataSource();
}

uint64_t sub_1BC2535C4(uint64_t a1, void *a2)
{
  return sub_1BC253AE4(a2);
}

uint64_t sub_1BC2535E8()
{
  type metadata accessor for MedicationDoseLogMedicationCell();
  sub_1BC0E519C(&qword_1EDA0F7D8, (uint64_t (*)(uint64_t))type metadata accessor for MedicationDoseLogMedicationCell, (uint64_t)&unk_1BC2BB5B0);
  return sub_1BC2B497C();
}

uint64_t sub_1BC25363C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1BC2533A8(a1);
}

uint64_t sub_1BC25365C()
{
  MEMORY[0x1BCCEF2BC](&unk_1BC2C4858);
  return sub_1BC2B3074();
}

uint64_t sub_1BC2536A8()
{
  return sub_1BC0E519C(&qword_1EF400B30, (uint64_t (*)(uint64_t))type metadata accessor for MedicationsLogDataSource, (uint64_t)&unk_1BC2C47D8);
}

uint64_t sub_1BC2536D4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v5;
  unint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  void (*v23)(unint64_t, uint64_t);
  _QWORD v24[2];
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  _QWORD v29[4];
  uint64_t v30;
  uint64_t v31;

  v6 = v5;
  v27 = a5;
  v10 = sub_1BC2B2438();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (unint64_t)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (_QWORD *)(v6 + qword_1EDA0F7F0);
  *v14 = 0;
  v14[1] = 0;
  *(_QWORD *)(v6 + qword_1EDA0F7F8 + 8) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v6 + qword_1EDA0F800) = a1;
  *v14 = a2;
  v14[1] = a3;
  v15 = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v28 = a1;
  if (a1 >> 62)
    goto LABEL_14;
  v16 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_unknownObjectRetain();
  v25 = v11;
  v26 = v13;
  if (v16)
  {
    while (1)
    {
      v31 = MEMORY[0x1E0DEE9D8];
      result = sub_1BC125C9C(0, v16 & ~(v16 >> 63), 0);
      if (v16 < 0)
        break;
      v24[0] = v10;
      v24[1] = v6;
      v11 = v31;
      v6 = v15 & 0xC000000000000001;
      v10 = type metadata accessor for MedicationDoseLogMedicationCell();
      v18 = 0;
      while (v16 != v18)
      {
        if (v6)
        {
          v19 = MEMORY[0x1BCCEE950](v18, v15);
        }
        else
        {
          v19 = *(_QWORD *)(v15 + 8 * v18 + 32);
          swift_retain();
        }
        sub_1BC0E519C(&qword_1EDA0F7D8, (uint64_t (*)(uint64_t))type metadata accessor for MedicationDoseLogMedicationCell, (uint64_t)&unk_1BC2BB5B0);
        swift_unknownObjectRetain();
        swift_retain();
        v29[0] = sub_1BC2B2930();
        v29[1] = v20;
        v30 = 0;
        swift_unknownObjectWeakInit();
        v29[2] = v19;
        v30 = v27;
        swift_unknownObjectWeakAssign();
        swift_release();
        swift_unknownObjectRelease();
        v31 = v11;
        v13 = *(_QWORD *)(v11 + 16);
        v21 = *(_QWORD *)(v11 + 24);
        if (v13 >= v21 >> 1)
        {
          sub_1BC125C9C(v21 > 1, v13 + 1, 1);
          v11 = v31;
        }
        ++v18;
        *(_QWORD *)(v11 + 16) = v13 + 1;
        sub_1BC12ECD4((uint64_t)v29, v11 + 40 * v13 + 32);
        v15 = v28;
        if (v16 == v18)
        {
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          v10 = v24[0];
          goto LABEL_16;
        }
      }
      __break(1u);
LABEL_14:
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      v15 = v28;
      v16 = sub_1BC2B52D0();
      swift_bridgeObjectRelease();
      v25 = v11;
      v26 = v13;
      if (!v16)
        goto LABEL_15;
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    v11 = MEMORY[0x1E0DEE9D8];
LABEL_16:
    sub_1BC11D238();
    sub_1BC2B2BC4();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BC2B92D0;
    sub_1BC0F7E5C(v11);
    swift_bridgeObjectRelease();
    v22 = v26;
    sub_1BC2B242C();
    sub_1BC2B23FC();
    v23 = *(void (**)(unint64_t, uint64_t))(v25 + 8);
    v23(v22, v10);
    sub_1BC2B2BAC();
    v29[0] = 0;
    v29[1] = 0xE000000000000000;
    sub_1BC2B51BC();
    swift_bridgeObjectRelease();
    strcpy((char *)v29, "MutableArray<");
    HIWORD(v29[1]) = -4864;
    sub_1BC2B242C();
    sub_1BC2B23FC();
    v23(v22, v10);
    sub_1BC2B44FC();
    swift_bridgeObjectRelease();
    sub_1BC2B44FC();
    return sub_1BC2B2C00();
  }
  return result;
}

uint64_t sub_1BC253AE4(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  id v10;
  id v11;
  double v12;
  void (*v13)(_BYTE *, _QWORD);
  uint64_t v14;
  void (*v15)(_BYTE *, _QWORD);
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_BYTE *, uint64_t);
  _BYTE v20[32];

  v3 = sub_1BC2B2D20();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v5);
  v9 = &v20[-v8];
  v10 = objc_msgSend(a1, sel_traitCollection);
  v11 = objc_msgSend(v10, sel_horizontalSizeClass);

  if (*(_QWORD *)(v1 + qword_1EDA0F7F0 + 8))
    sub_1BC2B2C9C();
  else
    sub_1BC2B2CC0();
  if (v11 == (id)2)
    v12 = 64.0;
  else
    v12 = 8.0;
  v13 = (void (*)(_BYTE *, _QWORD))sub_1BC2B2CF0();
  *(double *)(v14 + 8) = v12;
  v13(v20, 0);
  v15 = (void (*)(_BYTE *, _QWORD))sub_1BC2B2CF0();
  *(double *)(v16 + 24) = v12;
  v15(v20, 0);
  sub_1BC2B2CD8();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v7, v9, v3);
  v17 = sub_1BC2B2D14();
  v18 = *(void (**)(_BYTE *, uint64_t))(v4 + 8);
  v18(v7, v3);
  v18(v9, v3);
  return v17;
}

uint64_t sub_1BC253C70(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;

  sub_1BC253DF0(0xD000000000000015, 0x80000001BC2CBF10, a2);
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v3 = (void *)qword_1EDA0FEF8;
  sub_1BC19A388();
  v4 = swift_allocObject();
  v5 = MEMORY[0x1E0DEB418];
  *(_OWORD *)(v4 + 16) = xmmword_1BC2B92D0;
  v6 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v4 + 56) = v5;
  *(_QWORD *)(v4 + 64) = v6;
  *(_QWORD *)(v4 + 32) = a1;
  v7 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_1BC2B2144();
  if (*(_QWORD *)(v4 + 16))
  {
    v8 = sub_1BC2B443C();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v8;
}

uint64_t sub_1BC253DF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  switch(a3)
  {
    case 1:
    case 2:
    case 3:
    case 4:
      swift_bridgeObjectRetain();
      sub_1BC2B44FC();
      swift_bridgeObjectRelease();
      result = a1;
      break;
    default:
      result = sub_1BC2B52B8();
      __break(1u);
      break;
  }
  return result;
}

unint64_t sub_1BC253F00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  uint64_t v6;
  char v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  unint64_t v16;
  unint64_t v17;

  v1 = sub_1BC2B23F0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)v0;
  v5 = *(void **)(v0 + 8);
  v7 = *(_BYTE *)(v0 + 16);
  v13 = 0;
  v14 = 0xE000000000000000;
  sub_1BC2B51BC();
  swift_bridgeObjectRelease();
  v16 = 0xD000000000000014;
  v17 = 0x80000001BC2D4200;
  v8 = objc_msgSend(v5, sel_semanticIdentifier);
  v9 = objc_msgSend(v8, sel_stringValue);

  sub_1BC2B4460();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  sub_1BC2B44FC();
  v13 = v6;
  v14 = (unint64_t)v5;
  v15 = v7;
  LoggableDose.scheduleDate.getter((uint64_t)v4);
  v10 = sub_1BC2B23D8();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v13 = v10;
  sub_1BC2B539C();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1BC25408C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  void *v7;
  char v8;
  id v9;
  uint64_t v11;
  id v12;
  void *v13;
  char v14;

  v1 = sub_1BC2B23F0();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void **)v0;
  v7 = *(void **)(v0 + 8);
  v8 = *(_BYTE *)(v0 + 16);
  v9 = v7;
  sub_1BC2B4D90();

  v12 = v9;
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
  sub_1BC2B3758();
  sub_1BC2B44D8();
  swift_bridgeObjectRelease();
  v12 = v6;
  v13 = v7;
  v14 = v8;
  LoggableDose.scheduleDate.getter((uint64_t)v5);
  sub_1BC0E519C(&qword_1EF3FCC70, v2, MEMORY[0x1E0CB08A8]);
  sub_1BC2B43F4();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v1);
}

uint64_t sub_1BC2541C8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  uint64_t v7;
  char v8;
  id v9;
  _QWORD v11[2];
  char v12;

  v1 = sub_1BC2B23F0();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v0;
  v6 = (void *)v0[1];
  v8 = *((_BYTE *)v0 + 16);
  sub_1BC2B5450();
  v9 = v6;
  sub_1BC2B4D90();

  v11[0] = v9;
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
  sub_1BC2B3758();
  sub_1BC2B44D8();
  swift_bridgeObjectRelease();
  v11[0] = v7;
  v11[1] = v6;
  v12 = v8;
  LoggableDose.scheduleDate.getter((uint64_t)v5);
  sub_1BC0E519C(&qword_1EF3FCC70, v2, MEMORY[0x1E0CB08A8]);
  sub_1BC2B43F4();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v1);
  return sub_1BC2B548C();
}

uint64_t sub_1BC254314()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  uint64_t v7;
  char v8;
  id v9;
  _QWORD v11[2];
  char v12;

  v1 = sub_1BC2B23F0();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v0;
  v6 = (void *)v0[1];
  v8 = *((_BYTE *)v0 + 16);
  sub_1BC2B5450();
  v9 = v6;
  sub_1BC2B4D90();

  v11[0] = v9;
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
  sub_1BC2B3758();
  sub_1BC2B44D8();
  swift_bridgeObjectRelease();
  v11[0] = v7;
  v11[1] = v6;
  v12 = v8;
  LoggableDose.scheduleDate.getter((uint64_t)v5);
  sub_1BC0E519C(&qword_1EF3FCC70, v2, MEMORY[0x1E0CB08A8]);
  sub_1BC2B43F4();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v1);
  return sub_1BC2B548C();
}

id sub_1BC25446C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI23ScheduledDetailItemCell____lazy_storage___medicationView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI23ScheduledDetailItemCell____lazy_storage___medicationView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI23ScheduledDetailItemCell____lazy_storage___medicationView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)sub_1BC2B3320()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC254500()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI23ScheduledDetailItemCell____lazy_storage___timeLabel;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI23ScheduledDetailItemCell____lazy_storage___timeLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI23ScheduledDetailItemCell____lazy_storage___timeLabel);
  }
  else
  {
    v4 = v0;
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
    v6 = (void *)sub_1BC2B4C64();
    objc_msgSend(v5, sel_setFont_, v6);

    v7 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
    objc_msgSend(v5, sel_setTextColor_, v7);

    objc_msgSend(v5, sel_setNumberOfLines_, 0);
    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v8 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v9 = v2;
  return v3;
}

uint64_t sub_1BC25463C(uint64_t a1)
{
  void *v1;
  void *v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  char v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  void *v31;
  void *v32;
  char *v33;
  int v34;
  id v35;
  uint64_t v36;
  void *v37;
  id v38;
  id v39;
  char *v40;
  id v41;
  id v42;
  id v43;
  char *v44;
  void *v45;
  void *v46;
  char *v47;
  id v48;
  void *v49;
  uint64_t v50;
  uint64_t (**v51)();
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  void *v56;
  void *v57;
  void *v58;
  id v59;
  id v60;
  id v61;
  void *v62;
  char *v64;
  id v65;
  NSObject *v66;
  os_log_type_t v67;
  uint8_t *v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  _QWORD v72[2];
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t (**v86)(_QWORD, _QWORD);
  void *v87;
  char *v88;
  void *v89;
  void *v90;
  unsigned __int8 v91;
  char *v92;
  uint64_t v93;
  uint64_t v94[3];
  uint64_t v95;

  v2 = v1;
  v4 = (_QWORD *)sub_1BC2B39E0();
  v86 = (uint64_t (**)(_QWORD, _QWORD))*(v4 - 1);
  v87 = v4;
  MEMORY[0x1E0C80A78](v4);
  v88 = (char *)v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC0E7998(0, &qword_1EDA0FAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1C58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v85 = (char *)v72 - v8;
  v84 = sub_1BC2B3AB8();
  v9 = *(_QWORD *)(v84 - 8);
  MEMORY[0x1E0C80A78](v84);
  v80 = (char *)v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = sub_1BC2B3A7C();
  v81 = *(_QWORD *)(v82 - 8);
  MEMORY[0x1E0C80A78](v82);
  v79 = (char *)v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0ECC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950], v6);
  MEMORY[0x1E0C80A78](v12);
  v78 = (char *)v72 - v13;
  v14 = sub_1BC2B227C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v77 = (char *)v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1BC2B2294();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)v72 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (_QWORD *)sub_1BC2B23F0();
  v22 = *(v21 - 1);
  MEMORY[0x1E0C80A78](v21);
  v76 = (uint64_t)v72 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC118700(a1, (uint64_t)v94, (unint64_t *)&qword_1EDA0F7D0, (uint64_t (*)(uint64_t))sub_1BC0E1B94);
  v83 = v9;
  if (v95)
  {
    sub_1BC0E1B94();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v24 = v89;
      v25 = v90;
      v75 = v14;
      v26 = v91;
      v74 = v22;
      v73 = v18;
      sub_1BC0FA444(v89, v90, v91);
      sub_1BC0FA484(v24, v25, v26);
      swift_bridgeObjectRelease();
      v22 = v74;
      swift_release();
      v27 = v25;
      sub_1BC0FA484(v24, v25, v26);
      v28 = objc_msgSend(v27, sel_semanticIdentifier);

      v29 = objc_msgSend(v28, sel_stringValue);
      sub_1BC2B4460();

      swift_retain();
      v14 = v75;
      sub_1BC2B34B8();
      v18 = v73;
      swift_bridgeObjectRelease();
      swift_release();
    }
  }
  else
  {
    sub_1BC0F2444((uint64_t)v94, (unint64_t *)&qword_1EDA0F7D0, (uint64_t (*)(uint64_t))sub_1BC0E1B94);
  }
  v30 = (uint64_t)v2 + OBJC_IVAR____TtC19HealthMedicationsUI23ScheduledDetailItemCell_item;
  swift_beginAccess();
  sub_1BC118700(v30, (uint64_t)v94, (unint64_t *)&qword_1EDA0F7D0, (uint64_t (*)(uint64_t))sub_1BC0E1B94);
  if (!v95)
  {
    sub_1BC0F2444((uint64_t)v94, (unint64_t *)&qword_1EDA0F7D0, (uint64_t (*)(uint64_t))sub_1BC0E1B94);
LABEL_11:
    v64 = v88;
    sub_1BC2B39A4();
    v65 = v2;
    v66 = sub_1BC2B39D4();
    v67 = sub_1BC2B48C8();
    if (os_log_type_enabled(v66, v67))
    {
      v68 = (uint8_t *)swift_slowAlloc();
      v69 = swift_slowAlloc();
      v94[0] = v69;
      *(_DWORD *)v68 = 136315138;
      sub_1BC118700(v30, (uint64_t)&v89, (unint64_t *)&qword_1EDA0F7D0, (uint64_t (*)(uint64_t))sub_1BC0E1B94);
      sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0F7D0, (uint64_t (*)(uint64_t))sub_1BC0E1B94, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      v70 = sub_1BC2B4490();
      v89 = (void *)sub_1BC12540C(v70, v71, v94);
      sub_1BC2B4FD0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v66, v67, "Incorrect view model for ScheduledDetailItem: %s", v68, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v69, -1, -1);
      MEMORY[0x1BCCEF3A0](v68, -1, -1);

      return ((uint64_t (**)(char *, void *))v86)[1](v88, v87);
    }
    else
    {

      return ((uint64_t (**)(char *, void *))v86)[1](v64, v87);
    }
  }
  sub_1BC0E1B94();
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_11;
  v75 = v14;
  v72[0] = v17;
  v31 = v89;
  v32 = v90;
  v74 = v22;
  v33 = v77;
  v86 = (uint64_t (**)(_QWORD, _QWORD))v21;
  v34 = v91;
  v88 = v92;
  v72[1] = v93;
  v35 = sub_1BC254500();
  v87 = v31;
  v89 = v31;
  v90 = v32;
  LODWORD(v73) = v34;
  v91 = v34;
  v36 = v76;
  LoggableDose.scheduleDate.getter(v76);
  sub_1BC2B2288();
  sub_1BC2B2270();
  sub_1BC2B23C0();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v33, v75);
  (*(void (**)(char *, _QWORD))(v18 + 8))(v20, v72[0]);
  (*(void (**)(uint64_t, uint64_t (**)(_QWORD, _QWORD)))(v74 + 8))(v36, v86);
  v37 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v35, sel_setText_, v37);

  v38 = sub_1BC25446C();
  v86 = (uint64_t (**)(_QWORD, _QWORD))v32;
  v39 = v32;
  v40 = v85;
  v41 = v39;
  _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE7medmoji0eF10Experience29MedicationVisualizationConfigVSgvg_0();

  sub_1BC2B3308();
  swift_retain();
  v42 = objc_msgSend(v41, sel_semanticIdentifier);
  v43 = objc_msgSend(v42, sel_stringValue);

  sub_1BC2B4460();
  v44 = v79;
  v45 = v2;

  sub_1BC2B34AC();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1BC0E7998(0, (unint64_t *)&unk_1EDA0FE70, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1D38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BC2B3AD0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BC2B92D0;
  sub_1BC0E1D38(0, &qword_1EF3F90D8);
  _sSo7UIImageC19HealthMedicationsUIE26collectionViewCellPlusSignABvgZ_0();
  v46 = (void *)sub_1BC2B4DA8();
  sub_1BC0E1D38(0, &qword_1EDA0FE08);
  v47 = v80;
  v48 = v46;
  v49 = (void *)sub_1BC2B4EF8();
  objc_msgSend(v49, sel_setUserInteractionEnabled_, 0);
  sub_1BC16A32C();
  v51 = (uint64_t (**)())&v47[*(int *)(v50 + 48)];
  v52 = *MEMORY[0x1E0DC1C20];
  v53 = sub_1BC2B3A34();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 104))(v47, v52, v53);
  *v51 = sub_1BC10E2F8;
  v51[1] = 0;
  (*(void (**)(char *, _QWORD, uint64_t))(v83 + 104))(v47, *MEMORY[0x1E0DC1D18], v84);
  v54 = sub_1BC2B3A40();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v40, 1, 1, v54);
  v55 = v49;
  sub_1BC2B3A70();

  sub_1BC2B39F8();
  (*(void (**)(char *, uint64_t))(v81 + 8))(v44, v82);
  sub_1BC2B4AFC();
  v89 = (void *)sub_1BC2B4460();
  v90 = v56;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v58 = v89;
  v57 = v90;
  v59 = sub_1BC254500();
  v60 = objc_msgSend(v59, sel_text);

  if (!v60)
  {
    v61 = sub_1BC254500();
    v60 = objc_msgSend(v61, sel_description);

  }
  sub_1BC2B4460();

  v89 = v58;
  v90 = v57;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v62 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v45, sel_setAccessibilityIdentifier_, v62);

  sub_1BC0FA484(v87, v86, v73);
  swift_bridgeObjectRelease();
  return swift_release();
}

void (*sub_1BC255164(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0xB8uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC19HealthMedicationsUI23ScheduledDetailItemCell_item;
  v3[21] = v1;
  v3[22] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  sub_1BC118700(v5, (uint64_t)v3, (unint64_t *)&qword_1EDA0F7D0, (uint64_t (*)(uint64_t))sub_1BC0E1B94);
  return sub_1BC2551E4;
}

void sub_1BC2551E4(uint64_t *a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = (_QWORD *)*a1;
  v3 = *a1 + 40;
  v4 = *a1 + 80;
  if ((a2 & 1) != 0)
  {
    v5 = v2[21] + v2[22];
    sub_1BC118700(*a1, v3, (unint64_t *)&qword_1EDA0F7D0, (uint64_t (*)(uint64_t))sub_1BC0E1B94);
    sub_1BC118700(v5, v4, (unint64_t *)&qword_1EDA0F7D0, (uint64_t (*)(uint64_t))sub_1BC0E1B94);
    swift_beginAccess();
    sub_1BC0F3E44(v3, v5);
    swift_endAccess();
    sub_1BC25463C(v4);
    sub_1BC0F2444(v3, (unint64_t *)&qword_1EDA0F7D0, (uint64_t (*)(uint64_t))sub_1BC0E1B94);
    sub_1BC0F2444(v4, (unint64_t *)&qword_1EDA0F7D0, (uint64_t (*)(uint64_t))sub_1BC0E1B94);
    v6 = (uint64_t)v2;
  }
  else
  {
    v7 = v2[21] + v2[22];
    sub_1BC118700(v7, v3, (unint64_t *)&qword_1EDA0F7D0, (uint64_t (*)(uint64_t))sub_1BC0E1B94);
    swift_beginAccess();
    sub_1BC0F3E44((uint64_t)v2, v7);
    swift_endAccess();
    sub_1BC25463C(v3);
    sub_1BC0F2444((uint64_t)v2, (unint64_t *)&qword_1EDA0F7D0, (uint64_t (*)(uint64_t))sub_1BC0E1B94);
    v6 = v3;
  }
  sub_1BC0F2444(v6, (unint64_t *)&qword_1EDA0F7D0, (uint64_t (*)(uint64_t))sub_1BC0E1B94);
  free(v2);
}

id sub_1BC255348(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  objc_class *v23;
  id v24;
  id v25;
  void (*v26)(char *, char *, uint64_t);
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  void *v80;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  objc_super v88;

  v84 = (_QWORD *)sub_1BC2B3CD4();
  v9 = *(v84 - 1);
  MEMORY[0x1E0C80A78](v84);
  v11 = (char *)&v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, &qword_1EDA0FAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v82 - v13;
  v15 = sub_1BC2B3B48();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = v15;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v82 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI23ScheduledDetailItemCell____lazy_storage___medicationView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI23ScheduledDetailItemCell____lazy_storage___timeLabel] = 0;
  v20 = OBJC_IVAR____TtC19HealthMedicationsUI23ScheduledDetailItemCell_detailProvider;
  sub_1BC2B34D0();
  v21 = v4;
  *(_QWORD *)&v4[v20] = sub_1BC2B34C4();
  v22 = &v21[OBJC_IVAR____TtC19HealthMedicationsUI23ScheduledDetailItemCell_item];
  *((_QWORD *)v22 + 4) = 0;
  *(_OWORD *)v22 = 0u;
  *((_OWORD *)v22 + 1) = 0u;

  v23 = (objc_class *)type metadata accessor for ScheduledDetailItemCell();
  v88.receiver = v21;
  v88.super_class = v23;
  v24 = objc_msgSendSuper2(&v88, sel_initWithFrame_, a1, a2, a3, a4);
  v86 = v19;
  sub_1BC2B3B24();
  v25 = objc_msgSend((id)objc_opt_self(), sel_tertiarySystemBackgroundColor);
  sub_1BC2B3B18();
  v83 = v16;
  v26 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  v85 = v17;
  v26(v14, v19, v17);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v17);
  v27 = v24;
  MEMORY[0x1BCCEE23C](v14);

  v28 = objc_msgSend(v27, sel_contentView);
  v29 = sub_1BC25446C();
  objc_msgSend(v28, sel_addSubview_, v29);

  v30 = objc_msgSend(v27, sel_contentView);
  v31 = sub_1BC254500();
  objc_msgSend(v30, sel_addSubview_, v31);

  sub_1BC2B3C80();
  sub_1BC2B3C44();
  v33 = v32;
  v35 = v34;
  v37 = v36;
  (*(void (**)(char *, _QWORD *))(v9 + 8))(v11, v84);
  v84 = (_QWORD *)objc_opt_self();
  sub_1BC0E7940();
  v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_1BC2C2BF0;
  v39 = sub_1BC25446C();
  v40 = objc_msgSend(v39, sel_leadingAnchor);

  v41 = objc_msgSend(v27, sel_contentView);
  v42 = objc_msgSend(v41, (SEL)&ShapeCell.base_props + 6);

  v43 = objc_msgSend(v40, sel_constraintEqualToAnchor_constant_, v42, v35);
  *(_QWORD *)(v38 + 32) = v43;
  v44 = sub_1BC25446C();
  v45 = objc_msgSend(v44, sel_centerYAnchor);

  v46 = objc_msgSend(v27, sel_contentView);
  v47 = objc_msgSend(v46, sel_centerYAnchor);

  v48 = objc_msgSend(v45, sel_constraintEqualToAnchor_, v47);
  *(_QWORD *)(v38 + 40) = v48;
  v49 = sub_1BC25446C();
  v50 = objc_msgSend(v49, sel_topAnchor);

  v51 = objc_msgSend(v27, sel_contentView);
  v52 = objc_msgSend(v51, sel_topAnchor);

  v53 = objc_msgSend(v50, sel_constraintEqualToAnchor_constant_, v52, v33);
  *(_QWORD *)(v38 + 48) = v53;
  v54 = sub_1BC25446C();
  v55 = objc_msgSend(v54, sel_bottomAnchor);

  v56 = objc_msgSend(v27, sel_contentView);
  v57 = objc_msgSend(v56, sel_bottomAnchor);

  v58 = objc_msgSend(v55, sel_constraintEqualToAnchor_constant_, v57, -v37);
  *(_QWORD *)(v38 + 56) = v58;
  v59 = sub_1BC25446C();
  v60 = objc_msgSend(v59, sel_widthAnchor);

  v61 = objc_msgSend(v60, sel_constraintEqualToConstant_, 36.0);
  *(_QWORD *)(v38 + 64) = v61;
  v62 = sub_1BC25446C();
  v63 = objc_msgSend(v62, sel_heightAnchor);

  v64 = objc_msgSend(v63, sel_constraintEqualToConstant_, 36.0);
  *(_QWORD *)(v38 + 72) = v64;
  v65 = sub_1BC254500();
  v66 = objc_msgSend(v65, sel_leadingAnchor);

  v67 = sub_1BC25446C();
  v68 = objc_msgSend(v67, sel_trailingAnchor);

  v69 = objc_msgSend(v66, sel_constraintEqualToAnchor_constant_, v68, 8.0);
  *(_QWORD *)(v38 + 80) = v69;
  v70 = sub_1BC254500();
  v71 = objc_msgSend(v70, sel_centerYAnchor);

  v72 = objc_msgSend(v27, sel_contentView);
  v73 = objc_msgSend(v72, sel_centerYAnchor);

  v74 = objc_msgSend(v71, sel_constraintEqualToAnchor_, v73);
  *(_QWORD *)(v38 + 88) = v74;
  v75 = sub_1BC254500();
  v76 = objc_msgSend(v75, sel_trailingAnchor);

  v77 = objc_msgSend(v27, sel_contentView);
  v78 = objc_msgSend(v77, sel_trailingAnchor);

  v79 = objc_msgSend(v76, sel_constraintEqualToAnchor_, v78);
  *(_QWORD *)(v38 + 96) = v79;
  v87 = v38;
  sub_1BC2B45A4();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
  v80 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  objc_msgSend(v84, sel_activateConstraints_, v80);

  (*(void (**)(char *, uint64_t))(v83 + 8))(v86, v85);
  return v27;
}

uint64_t sub_1BC255B10()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void *v11;
  objc_class *v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  char *v18;
  id v19;
  objc_super v20;

  v1 = v0;
  sub_1BC0E7998(0, &qword_1EDA0FAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v3);
  v8 = (char *)&v20 - v7;
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v20 - v9;
  v11 = (void *)sub_1BC2B3AE8();
  v12 = (objc_class *)type metadata accessor for ScheduledDetailItemCell();
  v20.receiver = v1;
  v20.super_class = v12;
  objc_msgSendSuper2(&v20, sel__bridgedUpdateConfigurationUsingState_, v11);

  if (objc_msgSend(v1, sel_isHighlighted))
  {
    MEMORY[0x1BCCEE230]();
    v13 = sub_1BC2B3B48();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v10, 1, v13))
    {
      v14 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130];
      sub_1BC118700((uint64_t)v10, (uint64_t)v8, &qword_1EDA0FAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130]);
      MEMORY[0x1BCCEE23C](v8);
      v15 = (uint64_t)v10;
      return sub_1BC0F2444(v15, &qword_1EDA0FAF0, v14);
    }
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDE0);
    sub_1BC2B4D00();
    sub_1BC2B3B18();
    v18 = v10;
  }
  else
  {
    MEMORY[0x1BCCEE230]();
    v16 = sub_1BC2B3B48();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v5, 1, v16))
    {
      v14 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130];
      sub_1BC118700((uint64_t)v5, (uint64_t)v8, &qword_1EDA0FAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130]);
      MEMORY[0x1BCCEE23C](v8);
      v15 = (uint64_t)v5;
      return sub_1BC0F2444(v15, &qword_1EDA0FAF0, v14);
    }
    v19 = objc_msgSend((id)objc_opt_self(), sel_tertiarySystemBackgroundColor);
    sub_1BC2B3B18();
    v18 = v5;
  }
  return MEMORY[0x1BCCEE23C](v18);
}

id sub_1BC255EA4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ScheduledDetailItemCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ScheduledDetailItemCell()
{
  return objc_opt_self();
}

uint64_t sub_1BC255F60@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI23ScheduledDetailItemCell_item;
  swift_beginAccess();
  return sub_1BC118700(v3, a1, (unint64_t *)&qword_1EDA0F7D0, (uint64_t (*)(uint64_t))sub_1BC0E1B94);
}

uint64_t sub_1BC255FC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[40];

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI23ScheduledDetailItemCell_item;
  swift_beginAccess();
  sub_1BC118700(v3, (uint64_t)v5, (unint64_t *)&qword_1EDA0F7D0, (uint64_t (*)(uint64_t))sub_1BC0E1B94);
  swift_beginAccess();
  sub_1BC0F3E44(a1, v3);
  swift_endAccess();
  sub_1BC25463C((uint64_t)v5);
  sub_1BC0F2444(a1, (unint64_t *)&qword_1EDA0F7D0, (uint64_t (*)(uint64_t))sub_1BC0E1B94);
  return sub_1BC0F2444((uint64_t)v5, (unint64_t *)&qword_1EDA0F7D0, (uint64_t (*)(uint64_t))sub_1BC0E1B94);
}

void (*sub_1BC256088(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1BC255164(v2);
  return sub_1BC0F78F0;
}

uint64_t sub_1BC2560CC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t result;
  void *v17;
  void *v18;
  char v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  void *v27;
  id v28;
  uint64_t v29;
  void *v30;
  void *v31;
  id v32;
  uint64_t (*v33)(uint64_t);
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *aBlock;
  uint64_t v41;
  uint64_t (*v42)(uint64_t);
  void *v43;
  uint64_t (*v44)();
  uint64_t v45;
  _BYTE v46[24];
  uint64_t v47;

  v4 = v3;
  v39 = a2;
  v7 = sub_1BC2B42E0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BC2B4304();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = v4 + OBJC_IVAR____TtC19HealthMedicationsUI23ScheduledDetailItemCell_item;
  swift_beginAccess();
  sub_1BC118700(v15, (uint64_t)v46, (unint64_t *)&qword_1EDA0F7D0, (uint64_t (*)(uint64_t))sub_1BC0E1B94);
  if (!v47)
    return sub_1BC0F2444((uint64_t)v46, (unint64_t *)&qword_1EDA0F7D0, (uint64_t (*)(uint64_t))sub_1BC0E1B94);
  sub_1BC0E1B94();
  result = swift_dynamicCast();
  if ((result & 1) == 0)
    return result;
  v35 = a1;
  v36 = v12;
  v37 = v11;
  v38 = v8;
  v17 = aBlock;
  v18 = (void *)v41;
  v19 = (char)v42;
  sub_1BC0FA444(aBlock, (void *)v41, (char)v42);
  sub_1BC0FA484(v17, v18, v19);
  swift_bridgeObjectRelease();
  swift_release();
  v20 = v18;
  sub_1BC0FA484(v17, v18, v19);
  v21 = objc_msgSend(v20, sel_semanticIdentifier);
  v22 = objc_msgSend(v21, sel_stringValue);

  v23 = sub_1BC2B4460();
  v25 = v24;

  if (v23 == v39 && v25 == a3)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v26 = sub_1BC2B53CC();
    result = swift_bridgeObjectRelease();
    if ((v26 & 1) == 0)
      return result;
  }
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FFF0);
  v27 = (void *)sub_1BC2B4A0C();
  v28 = sub_1BC25446C();
  v29 = swift_allocObject();
  v30 = v35;
  *(_QWORD *)(v29 + 16) = v28;
  *(_QWORD *)(v29 + 24) = v30;
  v44 = sub_1BC2568D8;
  v45 = v29;
  aBlock = (void *)MEMORY[0x1E0C809B0];
  v41 = 1107296256;
  v42 = sub_1BC1AEAE4;
  v43 = &block_descriptor_28;
  v31 = _Block_copy(&aBlock);
  v32 = v30;
  swift_release();
  sub_1BC2B42F8();
  aBlock = (void *)MEMORY[0x1E0DEE9D8];
  v33 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1BC0E519C((unint64_t *)&qword_1EDA0FFC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0FFD0, v33, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC17219C();
  sub_1BC2B509C();
  MEMORY[0x1BCCEE194](0, v14, v10, v31);
  _Block_release(v31);

  (*(void (**)(char *, uint64_t))(v38 + 8))(v10, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v14, v37);
}

uint64_t sub_1BC25646C()
{
  uint64_t v0;

  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0ECC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v0);
  _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE7medmoji0eF10Experience29MedicationVisualizationConfigVSgvg_0();
  return sub_1BC2B3308();
}

uint64_t sub_1BC256558(uint64_t a1, uint64_t a2)
{
  return sub_1BC25679C(a2);
}

uint64_t sub_1BC25657C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  void (*v22)(char *, uint64_t);
  char *v23;
  uint64_t v24;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  void *v31;
  int v32;
  id v33;
  void *v34;
  char v35;

  v4 = sub_1BC2B23F0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v26 - v9;
  v11 = *(void **)(a1 + 8);
  v31 = *(void **)a1;
  v30 = *(unsigned __int8 *)(a1 + 16);
  v12 = *(void **)a2;
  v13 = *(void **)(a2 + 8);
  v32 = *(unsigned __int8 *)(a2 + 16);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EF3FBD20);
  v14 = v11;
  v15 = v13;
  LOBYTE(a2) = sub_1BC2B4D84();

  if ((a2 & 1) != 0)
  {
    v27 = v12;
    v28 = v5;
    v29 = v4;
    v33 = v14;
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
    v16 = sub_1BC2B3758();
    v18 = v17;
    v33 = v15;
    if (v16 == sub_1BC2B3758() && v18 == v19)
    {
      swift_bridgeObjectRelease_n();
LABEL_7:
      v33 = v31;
      v34 = v11;
      v35 = v30;
      LoggableDose.scheduleDate.getter((uint64_t)v10);
      v33 = v27;
      v34 = v13;
      v35 = v32;
      LoggableDose.scheduleDate.getter((uint64_t)v8);
      v20 = sub_1BC2B239C();
      v22 = *(void (**)(char *, uint64_t))(v28 + 8);
      v23 = v8;
      v24 = v29;
      v22(v23, v29);
      v22(v10, v24);
      return v20 & 1;
    }
    v21 = sub_1BC2B53CC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v20 = 0;
    if ((v21 & 1) != 0)
      goto LABEL_7;
  }
  else
  {
    v20 = 0;
  }
  return v20 & 1;
}

uint64_t sub_1BC25679C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  void *v5;
  void *v6;
  char v7;
  void (*v8)(uint64_t);
  _BYTE v9[24];
  uint64_t v10;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI23ScheduledDetailItemCell_item;
  swift_beginAccess();
  sub_1BC118700(v3, (uint64_t)v9, (unint64_t *)&qword_1EDA0F7D0, (uint64_t (*)(uint64_t))sub_1BC0E1B94);
  if (!v10)
    return sub_1BC0F2444((uint64_t)v9, (unint64_t *)&qword_1EDA0F7D0, (uint64_t (*)(uint64_t))sub_1BC0E1B94);
  sub_1BC0E1B94();
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    swift_retain();
    sub_1BC0FA484(v5, v6, v7);
    swift_bridgeObjectRelease();
    swift_release();
    v8(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC2568AC()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BC2568D8()
{
  return sub_1BC25646C();
}

uint64_t destroy for ScheduledDetailItem(uint64_t a1)
{
  sub_1BC0FA484(*(void **)a1, *(void **)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ScheduledDetailItem(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(void **)a2;
  v5 = *(void **)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_1BC0FA444(*(void **)a2, v5, v6);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ScheduledDetailItem(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  char v6;
  void *v7;
  void *v8;
  char v9;
  uint64_t v10;

  v4 = *(void **)a2;
  v5 = *(void **)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_1BC0FA444(*(void **)a2, v5, v6);
  v7 = *(void **)a1;
  v8 = *(void **)(a1 + 8);
  v9 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  sub_1BC0FA484(v7, v8, v9);
  v10 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v10;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ScheduledDetailItem(uint64_t a1, uint64_t a2)
{
  char v4;
  void *v5;
  void *v6;
  char v7;
  uint64_t v8;

  v4 = *(_BYTE *)(a2 + 16);
  v5 = *(void **)a1;
  v6 = *(void **)(a1 + 8);
  v7 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v4;
  sub_1BC0FA484(v5, v6, v7);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  v8 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ScheduledDetailItem(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ScheduledDetailItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ScheduledDetailItem()
{
  return &type metadata for ScheduledDetailItem;
}

unint64_t sub_1BC256B2C()
{
  unint64_t result;

  result = qword_1EF400B80;
  if (!qword_1EF400B80)
  {
    result = MEMORY[0x1BCCEF2BC](&unk_1BC2C4984, &type metadata for ScheduledDetailItem);
    atomic_store(result, (unint64_t *)&qword_1EF400B80);
  }
  return result;
}

void UITextViewWithPlaceholder.text.setter(uint64_t a1, uint64_t a2)
{
  void *v2;
  objc_class *ObjectType;
  void *v5;
  id v6;
  objc_super v7;
  objc_super v8;
  objc_super v9;

  ObjectType = (objc_class *)swift_getObjectType();
  if (a2)
  {
    v5 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = 0;
  }
  v9.receiver = v2;
  v9.super_class = ObjectType;
  objc_msgSendSuper2(&v9, sel_setText_, v5);

  v8.receiver = v2;
  v8.super_class = ObjectType;
  v6 = objc_msgSendSuper2(&v8, sel_text);
  if (v6)
  {
    sub_1BC2B4460();

    v6 = (id)sub_1BC2B4430();
    swift_bridgeObjectRelease();
  }
  v7.receiver = v2;
  v7.super_class = ObjectType;
  objc_msgSendSuper2(&v7, sel_setText_, v6);

  sub_1BC257168();
}

void UITextViewWithPlaceholder.placeholder.setter(uint64_t a1, uint64_t a2)
{
  id v3;
  id v4;

  v3 = sub_1BC256E3C();
  if (a2)
  {
    v4 = (id)sub_1BC2B4430();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  objc_msgSend(v3, sel_setText_, v4);

}

uint64_t UITextViewWithPlaceholder.placeholder.getter()
{
  id v0;
  id v1;
  uint64_t v2;

  v0 = sub_1BC256E3C();
  v1 = objc_msgSend(v0, sel_text);

  if (!v1)
    return 0;
  v2 = sub_1BC2B4460();

  return v2;
}

void sub_1BC256D48(uint64_t *a1@<X8>)
{
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = sub_1BC256E3C();
  v3 = objc_msgSend(v2, sel_text);

  if (v3)
  {
    v4 = sub_1BC2B4460();
    v6 = v5;

  }
  else
  {
    v4 = 0;
    v6 = 0;
  }
  *a1 = v4;
  a1[1] = v6;
}

void sub_1BC256DBC(uint64_t a1)
{
  uint64_t v1;
  id v2;
  id v3;

  v1 = *(_QWORD *)(a1 + 8);
  swift_bridgeObjectRetain();
  v2 = sub_1BC256E3C();
  if (v1)
  {
    v3 = (id)sub_1BC2B4430();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = 0;
  }
  objc_msgSend(v2, sel_setText_, v3);

}

id sub_1BC256E3C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI25UITextViewWithPlaceholder____lazy_storage___placeholderLabel;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI25UITextViewWithPlaceholder____lazy_storage___placeholderLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI25UITextViewWithPlaceholder____lazy_storage___placeholderLabel);
  }
  else
  {
    v4 = sub_1BC257480();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void (*UITextViewWithPlaceholder.placeholder.modify(uint64_t *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  a1[2] = v1;
  v3 = sub_1BC256E3C();
  v4 = objc_msgSend(v3, sel_text);

  if (v4)
  {
    v5 = sub_1BC2B4460();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  *a1 = v5;
  a1[1] = v7;
  return sub_1BC256F18;
}

void sub_1BC256F18(uint64_t a1, char a2)
{
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  id v6;

  v2 = *(_QWORD *)(a1 + 8);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    v3 = sub_1BC256E3C();
    v6 = v3;
    if (v2)
    {
      v4 = (void *)sub_1BC2B4430();
      swift_bridgeObjectRelease();
      v3 = v6;
    }
    else
    {
      v4 = 0;
    }
    objc_msgSend(v3, sel_setText_, v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = sub_1BC256E3C();
    v6 = v5;
    if (v2)
    {
      v4 = (void *)sub_1BC2B4430();
      swift_bridgeObjectRelease();
      v5 = v6;
    }
    else
    {
      v4 = 0;
    }
    objc_msgSend(v5, sel_setText_, v4);
  }

}

uint64_t UITextViewWithPlaceholder.text.getter()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  objc_super v5;

  v5.receiver = v0;
  v5.super_class = (Class)swift_getObjectType();
  v1 = objc_msgSendSuper2(&v5, sel_text);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1BC2B4460();

  return v3;
}

void sub_1BC257168()
{
  void *v0;
  objc_class *ObjectType;
  id v2;
  unsigned int v3;
  id v4;
  id v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  id v12;
  unsigned __int8 v13;
  objc_super v14;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = sub_1BC256E3C();
  v3 = objc_msgSend(v2, sel_isHidden);

  v4 = sub_1BC256E3C();
  v14.receiver = v0;
  v14.super_class = ObjectType;
  v5 = objc_msgSendSuper2(&v14, sel_text);
  if (v5)
  {
    v6 = v5;
    v7 = sub_1BC2B4460();
    v9 = v8;

    swift_bridgeObjectRelease();
    v10 = HIBYTE(v9) & 0xF;
    if ((v9 & 0x2000000000000000) == 0)
      v10 = v7 & 0xFFFFFFFFFFFFLL;
    v11 = v10 != 0;
  }
  else
  {
    v11 = 0;
  }
  objc_msgSend(v4, sel_setHidden_, v11);

  if (v3)
  {
    v12 = sub_1BC256E3C();
    v13 = objc_msgSend(v12, sel_isHidden);

    if ((v13 & 1) == 0)
      objc_msgSend(v0, sel_setNeedsLayout);
  }
}

void (*UITextViewWithPlaceholder.text.modify(objc_super **a1))(uint64_t *a1, char a2)
{
  void *v1;
  objc_super *v3;
  uint64_t ObjectType;
  id v5;
  void *v6;
  uint64_t v7;
  objc_class *v8;
  objc_class *v9;

  v3 = (objc_super *)malloc(0x70uLL);
  *a1 = v3;
  v3[6].receiver = v1;
  ObjectType = swift_getObjectType();
  v3[6].super_class = (Class)ObjectType;
  v3[1].receiver = v1;
  v3[1].super_class = (Class)ObjectType;
  v5 = objc_msgSendSuper2(v3 + 1, sel_text);
  if (v5)
  {
    v6 = v5;
    v7 = sub_1BC2B4460();
    v9 = v8;

  }
  else
  {
    v7 = 0;
    v9 = 0;
  }
  v3->receiver = (id)v7;
  v3->super_class = v9;
  return sub_1BC25730C;
}

void sub_1BC25730C(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  __int128 v9;

  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 8);
  if ((a2 & 1) != 0)
  {
    if (v3)
    {
      swift_bridgeObjectRetain();
      v4 = (void *)sub_1BC2B4430();
      swift_bridgeObjectRelease();
    }
    else
    {
      v4 = 0;
    }
    *(_OWORD *)(v2 + 32) = *(_OWORD *)(v2 + 96);
    objc_msgSendSuper2((objc_super *)(v2 + 32), sel_setText_, v4);

    swift_bridgeObjectRelease();
  }
  else
  {
    if (v3)
    {
      v5 = (void *)sub_1BC2B4430();
      swift_bridgeObjectRelease();
    }
    else
    {
      v5 = 0;
    }
    v7 = *(_QWORD *)(v2 + 96);
    v6 = *(_QWORD *)(v2 + 104);
    *(_QWORD *)(v2 + 48) = v7;
    *(_QWORD *)(v2 + 56) = v6;
    objc_msgSendSuper2((objc_super *)(v2 + 48), sel_setText_, v5);

    *(_QWORD *)(v2 + 64) = v7;
    *(_QWORD *)(v2 + 72) = v6;
    v8 = objc_msgSendSuper2((objc_super *)(v2 + 64), sel_text);
    if (v8)
    {
      sub_1BC2B4460();

      v8 = (id)sub_1BC2B4430();
      swift_bridgeObjectRelease();
    }
    v9 = *(_OWORD *)(v2 + 96);
    *(_OWORD *)(v2 + 80) = v9;
    objc_msgSendSuper2((objc_super *)(v2 + 80), sel_setText_, v8, v9);

    sub_1BC257168();
  }
  free((void *)v2);
}

id sub_1BC257480()
{
  id v0;
  id v1;
  id v2;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  v1 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
  objc_msgSend(v0, sel_setFont_, v1);

  v2 = objc_msgSend((id)objc_opt_self(), sel_placeholderTextColor);
  objc_msgSend(v0, sel_setTextColor_, v2);

  objc_msgSend(v0, sel_setContentMode_, 5);
  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  return v0;
}

id UITextViewWithPlaceholder.__allocating_init(frame:textContainer:)(void *a1, double a2, double a3, double a4, double a5)
{
  objc_class *v5;
  id v7;

  v7 = objc_msgSend(objc_allocWithZone(v5), sel_initWithFrame_textContainer_, a1, a2, a3, a4, a5);

  return v7;
}

id UITextViewWithPlaceholder.init(frame:textContainer:)(void *a1, double a2, double a3, double a4, double a5)
{
  char *v5;
  objc_class *ObjectType;
  id v12;
  id v13;
  objc_super v15;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v5[OBJC_IVAR____TtC19HealthMedicationsUI25UITextViewWithPlaceholder____lazy_storage___placeholderLabel] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC19HealthMedicationsUI25UITextViewWithPlaceholder_textDidChangeSubscription] = 0;
  v15.receiver = v5;
  v15.super_class = ObjectType;
  v12 = objc_msgSendSuper2(&v15, sel_initWithFrame_textContainer_, a1, a2, a3, a4, a5);
  v13 = sub_1BC256E3C();
  objc_msgSend(v12, sel_addSubview_, v13);

  sub_1BC2576A8();
  return v12;
}

uint64_t sub_1BC2576A8()
{
  void *v0;
  void *v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = sub_1BC2B4A84();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC18FB3C();
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BC2B92D0;
  v8 = sub_1BC2B3D40();
  v9 = MEMORY[0x1E0DC29B0];
  *(_QWORD *)(v7 + 32) = v8;
  *(_QWORD *)(v7 + 40) = v9;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC13079C();
  sub_1BC2B4CC4();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v10 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  sub_1BC2B4A90();

  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v1;
  *(_QWORD *)(v11 + 24) = ObjectType;
  sub_1BC257ED0();
  v12 = v1;
  v13 = sub_1BC2B40A0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  *(_QWORD *)&v12[OBJC_IVAR____TtC19HealthMedicationsUI25UITextViewWithPlaceholder_textDidChangeSubscription] = v13;
  return swift_release();
}

void sub_1BC25794C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;

  v3 = a3 + 16;
  v4 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
  swift_beginAccess();
  v5 = (void *)MEMORY[0x1BCCEF478](v3);
  if (v5)
  {
    v6 = v5;
    objc_msgSend(v5, sel_setFont_, v4);

  }
  swift_beginAccess();
  v7 = MEMORY[0x1BCCEF478](v3);
  if (v7)
  {
    v8 = (void *)v7;
    v9 = sub_1BC256E3C();

    objc_msgSend(v9, sel_setFont_, v4);
  }

}

void sub_1BC257A28(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  char v5;
  void *v6;
  _BYTE v7[24];
  uint64_t v8;

  sub_1BC2B2030();
  if (v8)
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      v3 = a2;
      v4 = v6;
      v5 = sub_1BC2B4D84();

      if ((v5 & 1) != 0)
        sub_1BC257168();
    }
  }
  else
  {
    sub_1BC10BA60((uint64_t)v7);
  }
}

id UITextViewWithPlaceholder.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void UITextViewWithPlaceholder.init(coder:)()
{
  char *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI25UITextViewWithPlaceholder____lazy_storage___placeholderLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI25UITextViewWithPlaceholder_textDidChangeSubscription] = 0;

  sub_1BC2B52B8();
  __break(1u);
}

Swift::Void __swiftcall UITextViewWithPlaceholder.layoutSubviews()()
{
  void *v0;
  id v1;
  unsigned __int8 v2;
  id v3;
  double v4;
  double v5;
  double v6;
  double v7;
  id v8;
  double v9;
  double v10;
  id v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  id v23;
  double v24;
  double v25;
  id v26;
  objc_super v27;

  v27.receiver = v0;
  v27.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v27, sel_layoutSubviews);
  v1 = sub_1BC256E3C();
  v2 = objc_msgSend(v1, sel_isHidden);

  if ((v2 & 1) == 0)
  {
    v3 = sub_1BC256E3C();
    objc_msgSend(v0, sel_bringSubviewToFront_, v3);

    objc_msgSend(v0, sel_textContainerInset);
    v5 = v4;
    v7 = v6;
    v8 = objc_msgSend(v0, sel_textContainer);
    objc_msgSend(v8, sel_lineFragmentPadding);
    v10 = v9;

    v11 = objc_msgSend(v0, sel_textContainer);
    objc_msgSend(v11, sel_lineFragmentPadding);

    objc_msgSend(v0, sel_bounds);
    v16 = UIEdgeInsetsInsetRect(v12, v13, v14, v15, v5, v7 + v10);
    v18 = v17;
    v20 = v19;
    v22 = v21;
    v23 = sub_1BC256E3C();
    objc_msgSend(v23, sel_sizeThatFits_, v20, 0.0);
    v25 = v24;

    if (v25 < v22)
      v22 = v25;
    v26 = sub_1BC256E3C();
    objc_msgSend(v26, sel_setFrame_, v16, v18, v20, v22);

  }
}

id UITextViewWithPlaceholder.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for UITextViewWithPlaceholder()
{
  return objc_opt_self();
}

uint64_t sub_1BC257E78()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BC257E9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BC25794C(a1, a2, v2);
}

uint64_t sub_1BC257EA4()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1BC257EC8(uint64_t a1)
{
  uint64_t v1;

  sub_1BC257A28(a1, *(void **)(v1 + 16));
}

unint64_t sub_1BC257ED0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3FFCC8;
  if (!qword_1EF3FFCC8)
  {
    v1 = sub_1BC2B4A84();
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0CB1F20], v1);
    atomic_store(result, (unint64_t *)&qword_1EF3FFCC8);
  }
  return result;
}

uint64_t initializeWithCopy for EducationDataSourceDisplayEvaluator(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for EducationDataSourceDisplayEvaluator(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  return a1;
}

uint64_t assignWithTake for EducationDataSourceDisplayEvaluator(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  __swift_destroy_boxed_opaque_existential_0(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for EducationDataSourceDisplayEvaluator(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EducationDataSourceDisplayEvaluator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for EducationDataSourceDisplayEvaluator()
{
  return &type metadata for EducationDataSourceDisplayEvaluator;
}

uint64_t sub_1BC258050@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[40];
  __int128 v14;
  uint64_t v15;
  _QWORD v16[3];
  uint64_t v17;

  v3 = v1[3];
  v4 = v1[4];
  __swift_project_boxed_opaque_existential_0(v1, v3);
  if (!(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 40))(v3, v4))
    goto LABEL_4;
  swift_bridgeObjectRelease();
  v5 = v1[3];
  v6 = v1[4];
  __swift_project_boxed_opaque_existential_0(v1, v5);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v6 + 48))(v16, v5, v6);
  if (v17)
  {
    __swift_project_boxed_opaque_existential_0(v16, v17);
    v7 = sub_1BC2B2780();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
    if ((v7 & 1) != 0)
    {
LABEL_4:
      v8 = sub_1BC2B2BC4();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a1, 1, 1, v8);
    }
  }
  else
  {
    sub_1BC18C5BC((uint64_t)v16, (unint64_t *)&qword_1EF3FC688, (unint64_t *)&qword_1EF3FC690, MEMORY[0x1E0D2F0A0]);
  }
  sub_1BC258860((uint64_t)v16);
  sub_1BC0E5774((uint64_t)v16, (uint64_t)&v14);
  if (v15)
  {
    sub_1BC0F2730(&v14, (uint64_t)v13);
    sub_1BC0F1278(0, (unint64_t *)&qword_1EDA0FE38, (unint64_t *)&qword_1EDA0F7C0, MEMORY[0x1E0D2A060], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1BC2B92D0;
    sub_1BC0E79F0((uint64_t)v13, v10 + 32);
    sub_1BC2B2B94();
    v11 = sub_1BC2B2BC4();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a1, 0, 1, v11);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v13);
  }
  else
  {
    v12 = sub_1BC2B2BC4();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a1, 1, 1, v12);
  }
  return sub_1BC18C5BC((uint64_t)v16, (unint64_t *)&qword_1EDA0F7D0, (unint64_t *)&qword_1EDA0F7C0, MEMORY[0x1E0D2A060]);
}

uint64_t sub_1BC258258@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  unsigned __int8 v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v43;
  _QWORD v44[3];
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  if (!result)
    goto LABEL_23;
  v4 = v2;
  if (result == 1)
  {
    v5 = v2[3];
    v6 = v2[4];
    __swift_project_boxed_opaque_existential_0(v2, v5);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v6 + 48))(&v46, v5, v6);
    if (!v47)
    {
LABEL_22:
      result = sub_1BC18C5BC((uint64_t)&v46, (unint64_t *)&qword_1EF3FC688, (unint64_t *)&qword_1EF3FC690, MEMORY[0x1E0D2F0A0]);
      goto LABEL_23;
    }
    __swift_project_boxed_opaque_existential_0(&v46, v47);
    v7 = sub_1BC2B27A4();
    v9 = v8;
    result = __swift_destroy_boxed_opaque_existential_0((uint64_t)&v46);
    if (v9)
    {
      v10 = v2[3];
      v11 = v2[4];
      __swift_project_boxed_opaque_existential_0(v2, v10);
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v11 + 48))(&v46, v10, v11);
      if (v47)
      {
        __swift_project_boxed_opaque_existential_0(&v46, v47);
        v12 = sub_1BC2B278C();
        v14 = v13;
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v46);
        if (v14)
        {
          v15 = type metadata accessor for MedicationEducationItem();
          v16 = swift_allocObject();
          type metadata accessor for MedicationEducationItemCell();
          sub_1BC0E519C(&qword_1EF3FE550, (uint64_t (*)(uint64_t))type metadata accessor for MedicationEducationItemCell, (uint64_t)&protocol conformance descriptor for MedicationEducationItemCell);
          *(_QWORD *)(v16 + 56) = sub_1BC2B2930();
          *(_QWORD *)(v16 + 64) = v17;
          sub_1BC2B242C();
          *(_QWORD *)(v16 + 16) = v7;
          *(_QWORD *)(v16 + 24) = v9;
          *(_QWORD *)(v16 + 32) = v12;
          *(_QWORD *)(v16 + 40) = v14;
          *(_BYTE *)(v16 + 48) = 0;
          *(_QWORD *)(a2 + 24) = v15;
          result = sub_1BC0E519C(&qword_1EF400BD0, (uint64_t (*)(uint64_t))type metadata accessor for MedicationEducationItem, (uint64_t)&protocol conformance descriptor for MedicationEducationItem);
          *(_QWORD *)(a2 + 32) = result;
          *(_QWORD *)a2 = v16;
          return result;
        }
        result = swift_bridgeObjectRelease();
        goto LABEL_23;
      }
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
LABEL_23:
    *(_QWORD *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return result;
  }
  if (result != 2)
  {
    sub_1BC2B51BC();
    swift_bridgeObjectRelease();
    sub_1BC2B539C();
    sub_1BC2B44FC();
    swift_bridgeObjectRelease();
    result = sub_1BC2B52B8();
    __break(1u);
    return result;
  }
  v18 = v2[3];
  v19 = v2[4];
  __swift_project_boxed_opaque_existential_0(v2, v18);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v19 + 48))(&v46, v18, v19);
  if (v47)
  {
    __swift_project_boxed_opaque_existential_0(&v46, v47);
    v20 = sub_1BC2B2780();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v46);
    if ((v20 & 1) != 0)
    {
      sub_1BC2598B0((uint64_t)v4, (uint64_t)&v46);
      goto LABEL_14;
    }
  }
  else
  {
    sub_1BC18C5BC((uint64_t)&v46, (unint64_t *)&qword_1EF3FC688, (unint64_t *)&qword_1EF3FC690, MEMORY[0x1E0D2F0A0]);
  }
  v21 = objc_msgSend((id)objc_opt_self(), sel_supportsOntologyBackedMedications);
  sub_1BC2598B0((uint64_t)v4, (uint64_t)&v46);
  if ((v21 & 1) == 0)
  {
LABEL_20:
    result = sub_1BC18C40C((uint64_t)&v46);
    goto LABEL_23;
  }
LABEL_14:
  v22 = v47;
  v23 = v48;
  __swift_project_boxed_opaque_existential_0(&v46, v47);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v23 + 48))(v44, v22, v23);
  if (!v45)
  {
    sub_1BC18C5BC((uint64_t)v44, (unint64_t *)&qword_1EF3FC688, (unint64_t *)&qword_1EF3FC690, MEMORY[0x1E0D2F0A0]);
    goto LABEL_20;
  }
  __swift_project_boxed_opaque_existential_0(v44, v45);
  v24 = sub_1BC2B2780();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v44);
  result = sub_1BC18C40C((uint64_t)&v46);
  if ((v24 & 1) == 0)
    goto LABEL_23;
  v25 = v4[3];
  v26 = v4[4];
  __swift_project_boxed_opaque_existential_0(v4, v25);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v26 + 48))(v44, v25, v26);
  if (!v45)
  {
    sub_1BC18C5BC((uint64_t)v44, (unint64_t *)&qword_1EF3FC688, (unint64_t *)&qword_1EF3FC690, MEMORY[0x1E0D2F0A0]);
LABEL_26:
    swift_bridgeObjectRelease();
    v27 = 0;
    v29 = 0xE000000000000000;
    goto LABEL_27;
  }
  __swift_project_boxed_opaque_existential_0(v44, v45);
  v27 = sub_1BC2B27A4();
  v29 = v28;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v44);
  if (!v29)
    goto LABEL_26;
LABEL_27:
  v30 = v4[3];
  v31 = v4[4];
  __swift_project_boxed_opaque_existential_0(v4, v30);
  v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 24))(v30, v31);
  v34 = v33;
  v35 = v4[3];
  v36 = v4[4];
  __swift_project_boxed_opaque_existential_0(v4, v35);
  v37 = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 40))(v35, v36);
  if (v37)
    v38 = v37;
  else
    v38 = MEMORY[0x1E0DEE9D8];
  v39 = v4[3];
  v40 = v4[4];
  __swift_project_boxed_opaque_existential_0(v4, v39);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v40 + 48))(v44, v39, v40);
  v41 = v45;
  if (v45)
  {
    __swift_project_boxed_opaque_existential_0(v44, v45);
    v41 = sub_1BC2B2780();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v44);
  }
  else
  {
    sub_1BC18C5BC((uint64_t)v44, (unint64_t *)&qword_1EF3FC688, (unint64_t *)&qword_1EF3FC690, MEMORY[0x1E0D2F0A0]);
  }
  *(_QWORD *)(a2 + 24) = type metadata accessor for MedicationEducationAndComponentsItem();
  *(_QWORD *)(a2 + 32) = sub_1BC0E519C(&qword_1EF400BD8, (uint64_t (*)(uint64_t))type metadata accessor for MedicationEducationAndComponentsItem, (uint64_t)&protocol conformance descriptor for MedicationEducationAndComponentsItem);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
  type metadata accessor for MedicationEducationAndComponentsItemCell();
  sub_1BC0E519C(&qword_1EF3F9F20, (uint64_t (*)(uint64_t))type metadata accessor for MedicationEducationAndComponentsItemCell, (uint64_t)&protocol conformance descriptor for MedicationEducationAndComponentsItemCell);
  boxed_opaque_existential_1[6] = sub_1BC2B2930();
  boxed_opaque_existential_1[7] = v43;
  result = sub_1BC2B242C();
  boxed_opaque_existential_1[2] = v32;
  boxed_opaque_existential_1[3] = v34;
  *boxed_opaque_existential_1 = v27;
  boxed_opaque_existential_1[1] = v29;
  boxed_opaque_existential_1[4] = v38;
  *((_BYTE *)boxed_opaque_existential_1 + 40) = v41 & 1;
  return result;
}

uint64_t sub_1BC258860@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[3];
  uint64_t v21;

  v3 = v1[3];
  v4 = v1[4];
  __swift_project_boxed_opaque_existential_0(v1, v3);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 40))(v3, v4);
  if (result
    && (swift_bridgeObjectRelease(),
        v6 = v1[3],
        v7 = v1[4],
        __swift_project_boxed_opaque_existential_0(v1, v6),
        (result = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 40))(v6, v7)) != 0))
  {
    v8 = result;
    v9 = v1[3];
    v10 = v1[4];
    __swift_project_boxed_opaque_existential_0(v1, v9);
    v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 24))(v9, v10);
    v13 = v12;
    v14 = v1[3];
    v15 = v1[4];
    __swift_project_boxed_opaque_existential_0(v1, v14);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v15 + 48))(v20, v14, v15);
    v16 = v21;
    if (v21)
    {
      __swift_project_boxed_opaque_existential_0(v20, v21);
      v16 = sub_1BC2B2780();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
    }
    else
    {
      sub_1BC18C5BC((uint64_t)v20, (unint64_t *)&qword_1EF3FC688, (unint64_t *)&qword_1EF3FC690, MEMORY[0x1E0D2F0A0]);
    }
    v17 = type metadata accessor for MedicationComponentsItem();
    v18 = swift_allocObject();
    type metadata accessor for MedicationComponentsItemCell();
    sub_1BC0E519C(&qword_1EF3FBE00, (uint64_t (*)(uint64_t))type metadata accessor for MedicationComponentsItemCell, (uint64_t)&protocol conformance descriptor for MedicationComponentsItemCell);
    *(_QWORD *)(v18 + 48) = sub_1BC2B2930();
    *(_QWORD *)(v18 + 56) = v19;
    sub_1BC2B242C();
    *(_QWORD *)(v18 + 16) = v11;
    *(_QWORD *)(v18 + 24) = v13;
    *(_QWORD *)(v18 + 32) = v8;
    *(_BYTE *)(v18 + 40) = v16 & 1;
    *(_QWORD *)(a1 + 24) = v17;
    result = sub_1BC0E519C(&qword_1EF400BC8, (uint64_t (*)(uint64_t))type metadata accessor for MedicationComponentsItem, (uint64_t)&protocol conformance descriptor for MedicationComponentsItem);
    *(_QWORD *)(a1 + 32) = result;
    *(_QWORD *)a1 = v18;
  }
  else
  {
    *(_QWORD *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1BC258A5C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  uint64_t *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26[5];

  v23 = a1;
  v1 = sub_1BC2B2FA8();
  v21 = *(_QWORD *)(v1 - 8);
  v22 = v1;
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BC2B2C6C();
  v19 = *(_QWORD *)(v4 - 8);
  v20 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, &qword_1EDA0FAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v19 - v8;
  sub_1BC2593A0(0, v26);
  v10 = sub_1BC2B3B48();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  v24 = sub_1BC2B4460();
  v25 = v11;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v12 = v24;
  v13 = v25;
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v14 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  v24 = v12;
  v25 = v13;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, _QWORD, uint64_t))(v19 + 104))(v6, *MEMORY[0x1E0D2B170], v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v21 + 104))(v3, *MEMORY[0x1E0D2B8C8], v22);
  v15 = sub_1BC2B2D98();
  v16 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B350];
  v17 = v23;
  v23[3] = v15;
  v17[4] = sub_1BC0E519C((unint64_t *)&qword_1EF3F8CE8, v16, MEMORY[0x1E0D2B340]);
  __swift_allocate_boxed_opaque_existential_1(v17);
  return sub_1BC2B2D8C();
}

uint64_t sub_1BC258D6C@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t);
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  _OWORD v67[2];
  uint64_t v68;
  uint64_t v69[3];
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v4 = v3;
  v57 = a2;
  v7 = sub_1BC2B2FA8();
  v61 = *(_QWORD *)(v7 - 8);
  v62 = v7;
  MEMORY[0x1E0C80A78](v7);
  v64 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC2B2C6C();
  v58 = *(_QWORD *)(v9 - 8);
  v59 = v9;
  MEMORY[0x1E0C80A78](v9);
  v63 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC0E7998(0, &qword_1EDA0FAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v12);
  v60 = (char *)&v48 - v13;
  sub_1BC0E7998(0, &qword_1EDA0FAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1C58], v11);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v48 - v15;
  v56 = sub_1BC2B3A94();
  v55 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1BC2B3A34();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *a1;
  LOBYTE(v69[0]) = *a1;
  v24 = v4[3];
  v25 = v4[4];
  v26 = __swift_project_boxed_opaque_existential_0(v4, v24);
  result = sub_1BC1906CC((uint64_t)v26, v69, v24, v25);
  if (!v28)
  {
    *(_QWORD *)(a3 + 32) = 0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    return result;
  }
  v49 = v28;
  v50 = result;
  v53 = (uint64_t *)a3;
  v29 = v4[3];
  v30 = v4[4];
  __swift_project_boxed_opaque_existential_0(v4, v29);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v30 + 48))(v69, v29, v30);
  if (v70)
  {
    __swift_project_boxed_opaque_existential_0(v69, v70);
    v54 = sub_1BC2B278C();
    v32 = v31;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v69);
    if (v23)
      goto LABEL_4;
  }
  else
  {
    sub_1BC18C5BC((uint64_t)v69, (unint64_t *)&qword_1EF3FC688, (unint64_t *)&qword_1EF3FC690, MEMORY[0x1E0D2F0A0]);
    v54 = 0;
    v32 = 0;
    if (v23)
    {
LABEL_4:
      if (v23 == 1)
      {
        v52 = 0xED00006D65744979;
        v33 = 0x636E616E67657270;
        v34 = &v71;
      }
      else
      {
        v51 = 0x6F6974617463616CLL;
        v33 = 0xED00006D6574496ELL;
        v34 = &v72;
      }
      goto LABEL_10;
    }
  }
  v52 = 0xEF6D657449737463;
  v33 = 0x6566664565646973;
  v34 = &v71;
LABEL_10:
  *(v34 - 32) = v33;
  sub_1BC2595F8(v23, v69);
  sub_1BC0E7998(0, (unint64_t *)&unk_1EDA0FE70, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1D38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BC2B3AD0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BC2B92D0;
  (*(void (**)(char *, _QWORD, uint64_t))(v20 + 104))(v22, *MEMORY[0x1E0DC1C20], v19);
  v35 = sub_1BC2B3A40();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v16, 1, 1, v35);
  sub_1BC2B3A88();
  sub_1BC2B3A64();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v18, v56);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  sub_1BC2598B0((uint64_t)v4, (uint64_t)v67);
  v36 = swift_allocObject();
  *(_BYTE *)(v36 + 16) = v23;
  v37 = v67[1];
  *(_OWORD *)(v36 + 24) = v67[0];
  *(_OWORD *)(v36 + 40) = v37;
  v38 = v50;
  *(_QWORD *)(v36 + 56) = v68;
  *(_QWORD *)(v36 + 64) = v38;
  v39 = v54;
  *(_QWORD *)(v36 + 72) = v49;
  *(_QWORD *)(v36 + 80) = v39;
  v40 = v57;
  *(_QWORD *)(v36 + 88) = v32;
  *(_QWORD *)(v36 + 96) = v40;
  v41 = sub_1BC2B3B48();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v60, 1, 1, v41);
  v65 = sub_1BC2B4460();
  v66 = v42;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  v44 = v65;
  v43 = v66;
  swift_retain();
  swift_bridgeObjectRelease();
  LOBYTE(v65) = v23;
  MedicationSecondaryEducationType.title.getter();
  v65 = v44;
  v66 = v43;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, _QWORD, uint64_t))(v58 + 104))(v63, *MEMORY[0x1E0D2B170], v59);
  (*(void (**)(char *, _QWORD, uint64_t))(v61 + 104))(v64, *MEMORY[0x1E0D2B8C8], v62);
  v45 = sub_1BC2B2D98();
  v46 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B350];
  v47 = v53;
  v53[3] = v45;
  v47[4] = sub_1BC0E519C((unint64_t *)&qword_1EF3F8CE8, v46, MEMORY[0x1E0D2B340]);
  __swift_allocate_boxed_opaque_existential_1(v47);
  return sub_1BC2B2D8C();
}

uint64_t sub_1BC2593A0@<X0>(char a1@<W0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  id v7;
  id v8;

  v4 = sub_1BC2B3CD4();
  v5 = MEMORY[0x1E0DC2398];
  a2[3] = v4;
  a2[4] = v5;
  __swift_allocate_boxed_opaque_existential_1(a2);
  sub_1BC2B3CC8();
  if (a1)
  {
    if (a1 == 1)
    {
      if (qword_1EF3F8148 == -1)
      {
LABEL_9:
        v6 = &qword_1EF3FE7F0;
        goto LABEL_10;
      }
    }
    else if (qword_1EF3F8148 == -1)
    {
      goto LABEL_9;
    }
    swift_once();
    goto LABEL_9;
  }
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v6 = &qword_1EDA0FEF8;
LABEL_10:
  v7 = (id)*v6;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_1BC2B3C98();
  if (qword_1EF3F8148 != -1)
    swift_once();
  v8 = (id)qword_1EF3FE7F0;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  return sub_1BC2B3B6C();
}

uint64_t sub_1BC2595F8@<X0>(char a1@<W0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  id v7;

  v4 = sub_1BC2B3CD4();
  v5 = MEMORY[0x1E0DC2398];
  a2[3] = v4;
  a2[4] = v5;
  __swift_allocate_boxed_opaque_existential_1(a2);
  sub_1BC2B3C80();
  if (a1)
  {
    if (a1 == 1)
    {
      if (qword_1EF3F8148 == -1)
      {
LABEL_9:
        v6 = &qword_1EF3FE7F0;
        goto LABEL_10;
      }
    }
    else if (qword_1EF3F8148 == -1)
    {
      goto LABEL_9;
    }
    swift_once();
    goto LABEL_9;
  }
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v6 = &qword_1EDA0FEF8;
LABEL_10:
  v7 = (id)*v6;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return sub_1BC2B3C98();
}

void sub_1BC2597A4(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  objc_class *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  _BYTE v19[24];
  uint64_t v20;
  uint64_t v21;
  char v22;

  v14 = (objc_class *)type metadata accessor for MedicationSecondaryEducationViewController();
  v22 = a2;
  sub_1BC0E79F0(a3, (uint64_t)v19);
  v16 = v20;
  v15 = v21;
  v17 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v20);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18 = sub_1BC16E650((uint64_t)&v22, v17, a4, a5, a6, a7, v14, v16, v15);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
  objc_msgSend(a1, sel_showAdaptively_sender_, v18, 0);
  sub_1BC2B37E8();

}

uint64_t sub_1BC2598B0(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1BC2598F0()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1BC25992C(void *a1)
{
  uint64_t v1;

  sub_1BC2597A4(a1, *(_BYTE *)(v1 + 16), v1 + 24, *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88));
}

uint64_t type metadata accessor for MedicationDetailEditViewController()
{
  uint64_t result;

  result = qword_1EF400C08;
  if (!qword_1EF400C08)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC259980()
{
  return swift_initClassMetadata2();
}

void sub_1BC2599E8(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, void *);
  id v6;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

id sub_1BC259A48()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = qword_1EF400BF8;
  v2 = *(void **)(v0 + qword_1EF400BF8);
  if (v2)
  {
    v3 = *(id *)(v0 + qword_1EF400BF8);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6D40]), sel_initWithHealthStore_, *(_QWORD *)(v0 + qword_1EF400BE0));
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void sub_1BC259AC8(char *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  id v6;

  *(_QWORD *)&a1[qword_1EF400BF8] = 0;
  v5 = qword_1EF400C00;
  sub_1BC25A764();
  swift_allocObject();
  v6 = a3;
  *(_QWORD *)&a1[v5] = sub_1BC2B3EF0();

  sub_1BC2B52B8();
  __break(1u);
}

void sub_1BC259B80()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  objc_super v6;

  sub_1BC259C94();
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for MedicationDetailEditViewController();
  objc_msgSendSuper2(&v6, sel_viewDidLoad);
  v1 = objc_msgSend(v0, sel_collectionView);
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, sel_setPreservesSuperviewLayoutMargins_, 1);

    v3 = objc_msgSend(v0, sel_collectionView);
    if (v3)
    {
      v4 = v3;
      v5 = objc_msgSend((id)objc_opt_self(), sel_systemBackgroundColor);
      objc_msgSend(v4, sel_setBackgroundColor_, v5);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1BC259C60(void *a1)
{
  id v1;

  v1 = a1;
  sub_1BC259B80();

}

void sub_1BC259C94()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;

  v1 = objc_msgSend(v0, sel_navigationItem);
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithBarButtonSystemItem_target_action_, 1, v0, sel_didTapCancel);
  objc_msgSend(v1, sel_setLeftBarButtonItem_, v2);

  v3 = objc_msgSend(v0, sel_navigationItem);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithBarButtonSystemItem_target_action_, 0, v0, sel_didTapDone);
  objc_msgSend(v3, sel_setRightBarButtonItem_, v4);

  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v5 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  v6 = (id)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setTitle_, v6, 0xE000000000000000);

}

id sub_1BC259E50(void *a1)
{
  return objc_msgSend(a1, sel_dismissViewControllerAnimated_completion_, 1, 0);
}

void sub_1BC259E64()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  void *v24;
  char *v25;
  id v26;
  uint64_t aBlock;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, void *);
  void *v30;
  uint64_t (*v31)(uint64_t, void *);
  uint64_t v32;

  v1 = v0;
  v2 = sub_1BC2B3608();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0ECC0, v6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v26 - v8;
  v26 = *(id *)&v0[qword_1EF400BE8];
  swift_retain();
  sub_1BC2B3ED8();
  swift_release();
  v10 = v28;
  if (v28 == 1 || (v11 = aBlock, swift_bridgeObjectRetain(), sub_1BC1E1930(v11, v10), !v10))
    swift_bridgeObjectRelease();
  v12 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  swift_retain();
  sub_1BC2B3ED8();
  swift_release();
  v13 = v28;
  if (v28 == 1 || (v14 = v30, v15 = aBlock, swift_bridgeObjectRetain(), sub_1BC1E1930(v15, v13), !v14))
    swift_bridgeObjectRelease();
  v16 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  v17 = *(_QWORD *)&v1[qword_1EF400BF0] + qword_1EF402D20;
  swift_beginAccess();
  sub_1BC11C330(v17, (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v9, 1, v2))
  {
    sub_1BC1092C0((uint64_t)v9);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v9, v2);
    sub_1BC1092C0((uint64_t)v9);
    sub_1BC2B35C0();
    v20 = v19;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    if (v20)
    {
      v18 = (void *)sub_1BC2B4430();
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
  }
  v18 = 0;
LABEL_12:
  v21 = objc_msgSend(v26, sel_copyMedicationByUpdatingUserSpecifiedName_userSpecifiedNotes_userVisualizationConfigJSONString_, v12, v16, v18);

  v22 = sub_1BC259A48();
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = v1;
  v31 = sub_1BC25A840;
  v32 = v23;
  aBlock = MEMORY[0x1E0C809B0];
  v28 = 1107296256;
  v29 = sub_1BC2599E8;
  v30 = &block_descriptor_29;
  v24 = _Block_copy(&aBlock);
  v25 = v1;
  swift_release();
  objc_msgSend(v22, sel_saveOrUpdateUserDomainConcept_completion_, v21, v24);
  _Block_release(v24);

}

uint64_t sub_1BC25A1B8(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v18;
  uint64_t v19;
  _QWORD aBlock[6];

  v5 = sub_1BC2B42E0();
  v19 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BC2B4304();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC16C140();
  v12 = (void *)sub_1BC2B4A0C();
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a2;
  *(_QWORD *)(v13 + 24) = a3;
  aBlock[4] = sub_1BC25A874;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC1AEAE4;
  aBlock[3] = &block_descriptor_6;
  v14 = _Block_copy(aBlock);
  v15 = a2;
  v16 = a3;
  swift_release();
  sub_1BC2B42F8();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1BC1E0100();
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0FFD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC17219C();
  sub_1BC2B509C();
  MEMORY[0x1BCCEE194](0, v11, v7, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

id sub_1BC25A3A8(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  uint8_t *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;

  v4 = sub_1BC2B39E0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v8 = a1;
    sub_1BC2B39A4();
    v9 = a1;
    v10 = a1;
    v11 = sub_1BC2B39D4();
    v12 = sub_1BC2B48C8();
    if (os_log_type_enabled(v11, v12))
    {
      v20 = a2;
      v13 = (uint8_t *)swift_slowAlloc();
      v14 = swift_slowAlloc();
      v21 = (uint64_t)a1;
      v22 = v14;
      *(_DWORD *)v13 = 136446210;
      v19 = v13 + 4;
      v15 = a1;
      sub_1BC0E8778(0, (unint64_t *)&qword_1EDA0FEA0);
      v16 = sub_1BC2B4478();
      v21 = sub_1BC12540C(v16, v17, &v22);
      sub_1BC2B4FD0();
      a2 = v20;
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BC0DC000, v11, v12, "Failed to save medication: %{public}s", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v14, -1, -1);
      MEMORY[0x1BCCEF3A0](v13, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return objc_msgSend(a2, sel_dismissViewControllerAnimated_completion_, 1, 0);
}

void sub_1BC25A5D4(void *a1)
{
  id v1;

  v1 = a1;
  sub_1BC259E64();

}

void sub_1BC25A608()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1BC25A634(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC25A664()
{
  uint64_t v0;

  swift_release();
  return swift_release();
}

id sub_1BC25A6C0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationDetailEditViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC25A6F4(uint64_t a1)
{

  swift_release();
  return swift_release();
}

uint64_t sub_1BC25A75C()
{
  return type metadata accessor for MedicationDetailEditViewController();
}

void sub_1BC25A764()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF400C58)
  {
    sub_1BC25A7C8();
    v0 = sub_1BC2B3EE4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF400C58);
  }
}

void sub_1BC25A7C8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF400C60)
  {
    v0 = sub_1BC2B4FA0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF400C60);
  }
}

uint64_t sub_1BC25A81C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BC25A840(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_1BC25A1B8(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_1BC25A848()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1BC25A874()
{
  uint64_t v0;

  return sub_1BC25A3A8(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1BC25A87C(void *a1, void *a2)
{
  char *v2;
  uint64_t v5;
  char *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v25;
  __int128 v26;
  __int128 v27;

  *(_QWORD *)&v2[qword_1EF400BF8] = 0;
  v5 = qword_1EF400C00;
  v25 = xmmword_1BC2C4A90;
  sub_1BC25A764();
  v26 = 0uLL;
  swift_allocObject();
  v6 = v2;
  *(_QWORD *)&v2[v5] = sub_1BC2B3EF0();
  *(_QWORD *)&v6[qword_1EF400BE0] = a1;
  *(_QWORD *)&v6[qword_1EF400BE8] = a2;
  v7 = a1;
  v8 = a2;
  swift_retain();
  v9 = objc_msgSend(v8, sel_userSpecifiedName, v25, v26);
  if (v9)
  {
    v10 = v9;
    v11 = sub_1BC2B4460();
    v13 = v12;

  }
  else
  {
    v11 = 0;
    v13 = 0;
  }
  v14 = objc_msgSend(v8, sel_userSpecifiedNotes);
  if (v14)
  {
    v15 = v14;
    v16 = sub_1BC2B4460();
    v18 = v17;

  }
  else
  {
    v16 = 0;
    v18 = 0;
  }
  *(_QWORD *)&v25 = v11;
  *((_QWORD *)&v25 + 1) = v13;
  *(_QWORD *)&v26 = v16;
  *((_QWORD *)&v26 + 1) = v18;
  sub_1BC2B3EC0();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for MedmojiPreviewDataSource();
  swift_allocObject();
  v19 = sub_1BC28B4E0(v8);
  v20 = qword_1EF400BF0;
  *(_QWORD *)&v6[qword_1EF400BF0] = v19;

  sub_1BC2B2DEC();
  sub_1BC0E8710();
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1BC2B92C0;
  v22 = MEMORY[0x1E0D2B148];
  *(_QWORD *)(v21 + 32) = *(_QWORD *)&v6[v20];
  *(_QWORD *)(v21 + 40) = v22;
  type metadata accessor for NicknameAndNotesDataSource();
  v25 = 0u;
  v26 = 0u;
  v27 = 0u;
  swift_allocObject();
  swift_retain();
  v23 = swift_retain();
  *(_QWORD *)(v21 + 48) = sub_1BC1E0214(v23, &v25);
  *(_QWORD *)(v21 + 56) = v22;
  sub_1BC2B2E10();
  return sub_1BC2B2FE4();
}

uint64_t MedicationScheduleDataSource.__allocating_init(schedulePublisher:medication:concept:presentationContext:)(uint64_t a1, void *a2, void *a3, uint64_t *a4)
{
  swift_allocObject();
  return MedicationScheduleDataSource.init(schedulePublisher:medication:concept:presentationContext:)(a1, a2, a3, a4);
}

uint64_t MedicationScheduleDataSource.currentValuePublisher.getter()
{
  return swift_retain();
}

uint64_t sub_1BC25AB2C(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  v27 = MEMORY[0x1E0DEE9D8];
  sub_1BC125B54(0, v1, 0);
  v2 = v27;
  result = sub_1BC2644A0(a1);
  v6 = result;
  v7 = 0;
  v8 = a1 + 64;
  v23 = v1;
  v24 = v5;
  v25 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(a1 + 32))
  {
    v11 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(a1 + 36) != v5)
      goto LABEL_24;
    v26 = v7;
    swift_getObjectType();
    swift_unknownObjectRetain();
    v12 = sub_1BC2B2A14();
    v14 = v13;
    result = swift_unknownObjectRelease();
    v15 = *(_QWORD *)(v27 + 16);
    v16 = *(_QWORD *)(v27 + 24);
    if (v15 >= v16 >> 1)
      result = sub_1BC125B54(v16 > 1, v15 + 1, 1);
    *(_QWORD *)(v27 + 16) = v15 + 1;
    v17 = v27 + 16 * v15;
    *(_QWORD *)(v17 + 32) = v12;
    *(_QWORD *)(v17 + 40) = v14;
    v9 = 1 << *(_BYTE *)(a1 + 32);
    if (v6 >= v9)
      goto LABEL_25;
    v8 = a1 + 64;
    v18 = *(_QWORD *)(v25 + 8 * v11);
    if ((v18 & (1 << v6)) == 0)
      goto LABEL_26;
    v5 = v24;
    if (*(_DWORD *)(a1 + 36) != v24)
      goto LABEL_27;
    v19 = v18 & (-2 << (v6 & 0x3F));
    if (v19)
    {
      v9 = __clz(__rbit64(v19)) | v6 & 0xFFFFFFFFFFFFFFC0;
      v10 = v23;
    }
    else
    {
      v20 = v11 + 1;
      v21 = (unint64_t)(v9 + 63) >> 6;
      v10 = v23;
      if (v11 + 1 < v21)
      {
        v22 = *(_QWORD *)(v25 + 8 * v20);
        if (v22)
        {
LABEL_20:
          v9 = __clz(__rbit64(v22)) + (v20 << 6);
        }
        else
        {
          while (v21 - 2 != v11)
          {
            v22 = *(_QWORD *)(a1 + 80 + 8 * v11++);
            if (v22)
            {
              v20 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    v7 = v26 + 1;
    v6 = v9;
    if (v26 + 1 == v10)
      return v2;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1BC25AD78(uint64_t *a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(uint64_t), uint64_t (*a4)(_QWORD *))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _QWORD v11[2];

  v7 = *(_QWORD *)(a2(0) - 8);
  v8 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v8 = a3(v8);
  v9 = *(_QWORD *)(v8 + 16);
  v11[0] = v8 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v11[1] = v9;
  result = a4(v11);
  *a1 = v8;
  return result;
}

uint64_t sub_1BC25AE08(uint64_t a1)
{
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong || (v3 = Strong, swift_beginAccess(), v4 = *(_QWORD *)(v3 + 80), result = swift_release(), v4 != a1))
  {
    swift_beginAccess();
    result = swift_weakLoadStrong();
    if (result)
    {
      v6 = result;
      swift_beginAccess();
      *(_QWORD *)(v6 + 80) = a1;
      sub_1BC25AF04();
      sub_1BC26478C(0);
      sub_1BC0E519C(&qword_1EF400CE0, (uint64_t (*)(uint64_t))sub_1BC26478C, (uint64_t)&protocol conformance descriptor for DynamicDataSource<A>);
      sub_1BC2B2A2C();
      return swift_release();
    }
  }
  return result;
}

void sub_1BC25AF04()
{
  uint64_t *v0;
  uint64_t *v1;
  void *v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;

  v1 = v0;
  swift_beginAccess();
  swift_getObjectType();
  swift_unknownObjectRetain();
  v2 = (void *)sub_1BC2B2A20();
  swift_unknownObjectRelease();
  objc_msgSend(v2, sel_unregisterObserver_, v0);

  v3 = v0[8];
  swift_beginAccess();
  if (*(_QWORD *)(v3 + 16) && (v4 = sub_1BC107E08(v1[10]), (v5 & 1) != 0))
  {
    v6 = (uint64_t *)(*(_QWORD *)(v3 + 56) + 24 * v4);
    v7 = v6 + 1;
    v8 = v6 + 2;
  }
  else
  {
    v6 = v1 + 5;
    v7 = v1 + 6;
    v8 = v1 + 7;
  }
  v9 = *v7;
  v10 = *v6;
  v11 = *v8;
  v1[12] = v10;
  v1[13] = v9;
  v1[14] = v11;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  swift_getObjectType();
  swift_unknownObjectRetain();
  v12 = (void *)sub_1BC2B2A20();
  swift_unknownObjectRelease();
  objc_msgSend(v12, sel_registerObserver_, v1);

}

uint64_t sub_1BC25B054(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + qword_1EF402B08);
  swift_beginAccess();
  *v3 = v2;
  swift_retain();
  return swift_release();
}

uint64_t sub_1BC25B0BC()
{
  swift_beginAccess();
  return swift_retain();
}

uint64_t sub_1BC25B104(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + qword_1EF402B08);
  swift_beginAccess();
  *v3 = a1;
  return swift_release();
}

uint64_t (*sub_1BC25B154())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t MedicationScheduleDataSource.init(schedulePublisher:medication:concept:presentationContext:)(uint64_t a1, void *a2, void *a3, uint64_t *a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  void *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint8_t *v61;
  id v62;
  id v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  char v71;
  uint64_t v72;
  id v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  char *v88;
  uint64_t v89;
  id *v90;
  uint64_t v91;
  uint64_t (*v92)(id *, uint64_t, uint64_t);
  int v93;
  Swift::Int active;
  id *v95;
  Swift::Int v96;
  id v97;
  id v98;
  uint64_t v99;
  id *v100;
  int v101;
  uint64_t v102;
  uint64_t v103;
  Swift::Int v104;
  id v105;
  id v106;
  id v107;
  id v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  uint64_t v124;
  BOOL v125;
  void *v126;
  void *v127;
  uint64_t v128;
  id v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t (*v137)(uint64_t, uint64_t);
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  _QWORD *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  _QWORD *v153;
  void *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  id v159;
  uint64_t inited;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  void *v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  unint64_t v174;
  uint64_t v175;
  uint64_t v176;
  _QWORD *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t result;
  _QWORD *v185;
  uint64_t v186;
  id v187;
  uint64_t v188;
  char *v189;
  uint64_t v190;
  id *v191;
  char *v192;
  uint64_t v193;
  char *v194;
  void *v195;
  char *v196;
  uint64_t v197;
  id v198;
  id v199;
  uint64_t v200;
  char *v201;
  void *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  char *v206;
  __int128 v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  id *v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  __int128 v217;
  uint64_t v218;
  __int128 v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;

  v5 = v4;
  v187 = (id)*v5;
  v208 = sub_1BC2B2AE0();
  *(_QWORD *)&v207 = *(_QWORD *)(v208 - 8);
  MEMORY[0x1E0C80A78](v208);
  v206 = (char *)&v185 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BC2B2594();
  MEMORY[0x1E0C80A78](v11);
  v213 = (char *)&v185 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC0E7998(0, &qword_1EF3F9D40, (uint64_t (*)(uint64_t))type metadata accessor for CycleData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v15 = MEMORY[0x1E0C80A78](v14);
  v191 = (id *)((char *)&v185 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v15);
  v212 = (id *)((char *)&v185 - v17);
  sub_1BC0E7998(0, &qword_1EF3FECD8, type metadata accessor for WeekdaysAndDosages, v13);
  MEMORY[0x1E0C80A78](v18);
  v188 = (uint64_t)&v185 - v19;
  v20 = sub_1BC2B39E0();
  v193 = *(_QWORD *)(v20 - 8);
  v194 = (char *)v20;
  MEMORY[0x1E0C80A78](v20);
  v189 = (char *)&v185 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC237854();
  v23 = MEMORY[0x1E0C80A78](v22);
  v203 = (uint64_t)&v185 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x1E0C80A78](v23);
  v192 = (char *)&v185 - v26;
  MEMORY[0x1E0C80A78](v25);
  v28 = (char *)&v185 - v27;
  v29 = sub_1BC2B23F0();
  v209 = *(_QWORD *)(v29 - 8);
  v210 = v29;
  v30 = MEMORY[0x1E0C80A78](v29);
  v196 = (char *)&v185 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v30);
  v211 = (char *)&v185 - v32;
  sub_1BC264640(0);
  MEMORY[0x1E0C80A78](v33);
  v35 = (char *)&v185 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = *a4;
  v218 = a4[1];
  v216 = a4[2];
  *(_QWORD *)&v217 = v36;
  v214 = a4[3];
  v37 = qword_1EF400C70;
  *(_QWORD *)((char *)v5 + qword_1EF400C70) = 0;
  *(_QWORD *)((char *)v5 + qword_1EF402B10) = 0;
  *(_QWORD *)((char *)v5 + qword_1EF402B18) = 0;
  *(_QWORD *)((char *)v5 + qword_1EF402B20) = 0;
  *(_QWORD *)((char *)v5 + qword_1EF402B28) = 0;
  *(_QWORD *)((char *)v5 + qword_1EF402B30) = 0;
  *(_QWORD *)((char *)v5 + qword_1EF402B38) = 0;
  *(_QWORD *)((char *)v5 + qword_1EF402B40) = 0;
  *(_QWORD *)((char *)v5 + qword_1EF402B48) = 0;
  *(_QWORD *)((char *)v5 + qword_1EF402B50) = 0;
  *(_QWORD *)((char *)v5 + qword_1EF402B58) = 0;
  v38 = qword_1EF402B60;
  v39 = objc_allocWithZone(MEMORY[0x1E0CB6360]);
  swift_retain();
  *(_QWORD *)((char *)v5 + v38) = objc_msgSend(v39, sel_init);
  v205 = qword_1EF400C78;
  *(_QWORD *)((char *)v5 + qword_1EF400C78) = a2;
  v204 = qword_1EF400C80;
  *(_QWORD *)((char *)v5 + qword_1EF400C80) = a3;
  v202 = a3;
  v199 = a3;
  v198 = a2;
  sub_1BC2B3ED8();
  v40 = *(void **)((char *)v5 + v37);
  v215 = v37;
  *(_QWORD *)((char *)v5 + v37) = v219;

  sub_1BC2B3ED8();
  v41 = (void *)v219;
  if ((_QWORD)v219)
  {
    v42 = objc_msgSend((id)v219, sel_UUID);

    sub_1BC2B2420();
    v43 = sub_1BC2B2438();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v35, 0, 1, v43);
  }
  else
  {
    v44 = sub_1BC2B2438();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v35, 1, 1, v44);
  }
  sub_1BC0F1B94((uint64_t)v35, (uint64_t)v5 + qword_1EF402B68, (uint64_t (*)(_QWORD))sub_1BC264640);
  sub_1BC2B3ED8();
  v222 = v219;
  sub_1BC13BE80(0, (unint64_t *)&qword_1EF3F9DA0, (void (*)(uint64_t))sub_1BC13BA28);
  swift_allocObject();
  v45 = sub_1BC2B3EF0();
  v197 = qword_1EF402B00;
  *(_QWORD *)((char *)v5 + qword_1EF402B00) = v45;
  v46 = (_QWORD *)((char *)v5 + qword_1EF402B70);
  v48 = v216;
  v47 = v217;
  v49 = v218;
  *v46 = v217;
  v46[1] = v49;
  v50 = v214;
  v46[2] = v48;
  v46[3] = v50;
  v51 = *(void **)((char *)v5 + v215);
  v53 = v210;
  v52 = v211;
  v200 = a1;
  v201 = v28;
  v195 = v51;
  if (!v51)
  {
    v66 = 2;
    v67 = 4;
    if (v49)
      v67 = 2;
    v194 = (char *)v67;
    sub_1BC1BAC0C(v47, v49);
    sub_1BC2B23E4();
    v68 = v209;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v209 + 56))(v28, 1, 1, v53);
    v187 = 0;
    v188 = 0;
    v69 = 0;
    LODWORD(v191) = 255;
    v70 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v193 = MEMORY[0x1E0DEE9D8];
    v71 = -1;
    goto LABEL_44;
  }
  sub_1BC1BAC0C(v47, v49);
  v186 = v51;
  v54 = v189;
  sub_1BC2B39A4();
  v55 = sub_1BC2B39D4();
  v56 = sub_1BC2B48B0();
  if (os_log_type_enabled(v55, v56))
  {
    v57 = (uint8_t *)swift_slowAlloc();
    v58 = swift_slowAlloc();
    *(_QWORD *)&v219 = v58;
    *(_DWORD *)v57 = 136315138;
    v59 = sub_1BC2B54F8();
    v222 = sub_1BC12540C(v59, v60, (uint64_t *)&v219);
    sub_1BC2B4FD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC0DC000, v55, v56, "[%s] Previous schedule found. Parsing values to populate \"Edit Schedule\" UI.", v57, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v58, -1, -1);
    v61 = v57;
    v53 = v210;
    MEMORY[0x1BCCEF3A0](v61, -1, -1);
  }

  (*(void (**)(char *, char *))(v193 + 8))(v54, v194);
  v62 = (id)v186;
  v63 = objc_msgSend((id)v186, sel_scheduleType);
  v64 = (char *)objc_msgSend(v62, sel_scheduleType);
  sub_1BC243AE0((uint64_t)&v219);
  if ((BYTE8(v219) & 1) != 0)
  {
    v65 = 2;
  }
  else
  {
    v72 = v219;
    v73 = objc_msgSend(v62, sel_timeIntervals);
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDB8);
    v74 = sub_1BC2B458C();

    if (v74 >> 62)
    {
      swift_bridgeObjectRetain();
      v75 = sub_1BC2B52D0();
      swift_bridgeObjectRelease();
    }
    else
    {
      v75 = *(_QWORD *)((v74 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (v75)
      v65 = v72;
    else
      v65 = 2;
  }
  v76 = (unint64_t)objc_msgSend(v62, sel_scheduleType);
  v77 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v187 = v63;
  v189 = (char *)v65;
  if (v76 > 8)
    goto LABEL_26;
  if (((1 << v76) & 0x186) != 0)
  {
    v78 = sub_1BC124A2C();
    v79 = v78[2];
    v80 = type metadata accessor for WeekdaysAndDosages(0);
    v81 = *(_QWORD *)(v80 - 8);
    if (v79)
    {
      v82 = v188;
      sub_1BC0FC574((uint64_t)v78 + ((*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80)), v188, type metadata accessor for WeekdaysAndDosages);
      v83 = 0;
    }
    else
    {
      v83 = 1;
      v82 = v188;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v81 + 56))(v82, v83, 1, v80);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v81 + 48))(v82, 1, v80) == 1)
    {
      sub_1BC0F2444(v82, &qword_1EF3FECD8, type metadata accessor for WeekdaysAndDosages);
      v77 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_26:
      v84 = v77;
      goto LABEL_28;
    }
    v85 = *(int *)(v80 + 24);
    v86 = v82;
    v84 = *(_QWORD **)(v82 + v85);
    swift_bridgeObjectRetain();
    sub_1BC0E8594(v86, type metadata accessor for WeekdaysAndDosages);
    v77 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v84 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if (((1 << v76) & 0x28) != 0)
    {
      v77 = sub_1BC124A2C();
      v84 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
  }
LABEL_28:
  v193 = (uint64_t)v77;
  v87 = v62;
  v88 = v213;
  sub_1BC2B251C();
  v89 = (uint64_t)v88;
  v90 = v212;
  sub_1BC20BBE8(v87, v89, (uint64_t)v212);
  v91 = type metadata accessor for CycleData();
  v92 = *(uint64_t (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 48);
  v93 = v92(v90, 1, v91);
  v194 = v64;
  if (v93 == 1)
  {
    sub_1BC0F2444((uint64_t)v90, &qword_1EF3F9D40, (uint64_t (*)(uint64_t))type metadata accessor for CycleData);
    v186 = 0;
    v71 = -1;
  }
  else
  {
    active = CycleData.calculateTotalActiveDays()();
    v95 = v212;
    v96 = active;
    v97 = objc_msgSend(*v212, sel_scheduleType);
    if (v97 == (id)7)
    {
      v186 = v96;
      sub_1BC0E8594((uint64_t)v95, (uint64_t (*)(_QWORD))type metadata accessor for CycleData);
      v71 = 1;
    }
    else
    {
      if (v97 != (id)8)
        goto LABEL_49;
      v186 = v96 / 7;
      sub_1BC0E8594((uint64_t)v95, (uint64_t (*)(_QWORD))type metadata accessor for CycleData);
      v71 = 0;
    }
  }
  v98 = v87;
  v99 = (uint64_t)v213;
  sub_1BC2B251C();
  v100 = v191;
  sub_1BC20BBE8(v98, v99, (uint64_t)v191);
  v101 = v92(v100, 1, v91);
  v185 = v84;
  if (v101 != 1)
  {
    v104 = CycleData.calculateTotalPauseDays()();
    v105 = objc_msgSend(*v100, sel_scheduleType);
    v103 = (uint64_t)v192;
    v52 = v211;
    if (v105 == (id)7)
    {
      v102 = v104;
      sub_1BC0E8594((uint64_t)v100, (uint64_t (*)(_QWORD))type metadata accessor for CycleData);
      LODWORD(v191) = 1;
      goto LABEL_40;
    }
    if (v105 == (id)8)
    {
      v102 = v104 / 7;
      sub_1BC0E8594((uint64_t)v100, (uint64_t (*)(_QWORD))type metadata accessor for CycleData);
      LODWORD(v191) = 0;
      goto LABEL_40;
    }
LABEL_49:
    result = sub_1BC2B52B8();
    __break(1u);
    return result;
  }
  sub_1BC0F2444((uint64_t)v100, &qword_1EF3F9D40, (uint64_t (*)(uint64_t))type metadata accessor for CycleData);
  v102 = 0;
  LODWORD(v191) = 255;
  v103 = (uint64_t)v192;
  v52 = v211;
LABEL_40:
  v106 = objc_msgSend(v98, sel_startDateTime, v185);
  sub_1BC2B23A8();

  v107 = objc_msgSend(v98, sel_endDateTime);
  if (v107)
  {
    v108 = v107;
    sub_1BC2B23A8();

    v109 = 0;
    v98 = v108;
  }
  else
  {
    v109 = 1;
  }

  v68 = v209;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v209 + 56))(v103, v109, 1, v53);
  v28 = v201;
  sub_1BC0F1B94(v103, (uint64_t)v201, (uint64_t (*)(_QWORD))sub_1BC237854);
  v66 = (uint64_t)v189;
  v188 = v102;
  v70 = v185;
  v69 = v186;
LABEL_44:
  *(_QWORD *)&v219 = v66;
  BYTE8(v219) = 0;
  sub_1BC26465C(0, &qword_1EF400C88, &qword_1EF400C90, (uint64_t)&type metadata for FrequencyInterval);
  swift_allocObject();
  v110 = sub_1BC2B3EF0();
  v213 = (char *)qword_1EF402B78;
  *(_QWORD *)((char *)v5 + qword_1EF402B78) = v110;
  *(_QWORD *)&v219 = v70;
  sub_1BC13BE80(0, &qword_1EF400C98, sub_1BC2646CC);
  swift_allocObject();
  v111 = sub_1BC2B3EF0();
  v189 = (char *)qword_1EF402B80;
  *(_QWORD *)((char *)v5 + qword_1EF402B80) = v111;
  (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v196, v52, v53);
  sub_1BC13BE80(0, (unint64_t *)&qword_1EF3FCC20, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  swift_allocObject();
  v112 = sub_1BC2B3EF0();
  v113 = v5;
  v212 = (id *)qword_1EF402B88;
  *(_QWORD *)((char *)v5 + qword_1EF402B88) = v112;
  sub_1BC0FC574((uint64_t)v28, v203, (uint64_t (*)(_QWORD))sub_1BC237854);
  sub_1BC13BE80(0, (unint64_t *)&qword_1EF3FCC28, (void (*)(uint64_t))sub_1BC237854);
  swift_allocObject();
  v114 = sub_1BC2B3EF0();
  v115 = qword_1EF402B90;
  *(_QWORD *)((char *)v5 + qword_1EF402B90) = v114;
  *(_QWORD *)&v219 = v69;
  BYTE8(v219) = v71;
  sub_1BC26465C(0, &qword_1EF400CB0, &qword_1EF400CB8, (uint64_t)&type metadata for PauseUsePeriod);
  swift_allocObject();
  v116 = sub_1BC2B3EF0();
  v192 = (char *)qword_1EF402B98;
  *(_QWORD *)((char *)v5 + qword_1EF402B98) = v116;
  *(_QWORD *)&v219 = v188;
  BYTE8(v219) = (_BYTE)v191;
  swift_allocObject();
  v117 = sub_1BC2B3EF0();
  v191 = (id *)qword_1EF402BA0;
  *(_QWORD *)((char *)v5 + qword_1EF402BA0) = v117;
  LOBYTE(v219) = (v71 & 1) == 0;
  sub_1BC26465C(0, &qword_1EF3FC448, (unint64_t *)&qword_1EF3FC450, (uint64_t)&type metadata for DisplayUnit);
  swift_allocObject();
  v118 = sub_1BC2B3EF0();
  v119 = qword_1EF402BA8;
  *(_QWORD *)((char *)v113 + qword_1EF402BA8) = v118;
  *(_QWORD *)&v219 = v193;
  sub_1BC13BE80(0, (unint64_t *)&qword_1EF3FED08, sub_1BC264704);
  swift_allocObject();
  v120 = sub_1BC2B3EF0();
  v193 = qword_1EF402BB0;
  *(_QWORD *)((char *)v113 + qword_1EF402BB0) = v120;
  *(_QWORD *)&v219 = v194;
  sub_1BC13BE80(0, (unint64_t *)&qword_1EF3FC440, type metadata accessor for HKMedicationScheduleType);
  swift_allocObject();
  v121 = sub_1BC2B3EF0();
  v122 = qword_1EF402BB8;
  *(_QWORD *)((char *)v113 + qword_1EF402BB8) = v121;
  v123 = v113;
  v124 = *(_QWORD *)((char *)v113 + v215);
  v125 = v124 != 0;
  if (v195)
  {
    if (!v124)
      v125 = v187 == (id)4;
  }
  LOBYTE(v219) = v125;
  sub_1BC0E4A14();
  swift_allocObject();
  *(_QWORD *)((char *)v113 + qword_1EF402B08) = sub_1BC2B3EF0();
  v126 = *(void **)((char *)v113 + v205);
  v127 = *(void **)((char *)v113 + v204);
  v128 = *(_QWORD *)&v189[(_QWORD)v113];
  type metadata accessor for DosagesPerDaySectionDataSource();
  swift_allocObject();
  v129 = v127;
  swift_retain();
  v130 = sub_1BC1B52AC(v126, v127, v128);
  v131 = *(_QWORD *)((char *)v123 + v122);
  v132 = *(_QWORD *)&v213[(_QWORD)v123];
  v133 = *(_QWORD *)((char *)v123 + v119);
  *(_QWORD *)&v219 = v217;
  *((_QWORD *)&v219 + 1) = v218;
  v220 = v216;
  v221 = v214;
  type metadata accessor for FrequencyPickerDataSource();
  swift_allocObject();
  swift_retain();
  swift_retain();
  swift_retain();
  v196 = (char *)FrequencyPickerDataSource.init(frequencyPublisher:frequencyIntervalPublisher:cycleUnitPublisher:context:)(v131, v132, v133, &v219);
  v134 = *(uint64_t *)((char *)v212 + (_QWORD)v123);
  v135 = *(_QWORD *)((char *)v123 + v115);
  type metadata accessor for StartDateDataSource();
  swift_allocObject();
  swift_retain();
  swift_retain();
  v218 = sub_1BC1A7930(v134, v135);
  sub_1BC2B2F30();
  v136 = v206;
  sub_1BC2B2AD4();
  sub_1BC2B2A8C();
  (*(void (**)(char *, uint64_t))(v207 + 8))(v136, v208);
  v208 = sub_1BC2B2F0C();
  v212 = (id *)sub_1BC2B2DEC();
  v137 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF400100, (uint64_t (*)(uint64_t))sub_1BC0FFFBC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v214 = v138;
  v139 = swift_allocObject();
  *(_OWORD *)(v139 + 16) = xmmword_1BC2BB4F0;
  v140 = MEMORY[0x1E0D2B148];
  v215 = v130;
  *(_QWORD *)(v139 + 32) = v130;
  *(_QWORD *)(v139 + 40) = v140;
  v213 = (char *)type metadata accessor for NotificationFooterDataSource();
  *(_BYTE *)(swift_allocObject() + qword_1EF3FA450) = 0;
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8C50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], v137);
  v205 = v141;
  v142 = *(_QWORD *)(sub_1BC2B2BC4() - 8);
  v143 = *(_QWORD *)(v142 + 72);
  v144 = *(unsigned __int8 *)(v142 + 80);
  v216 = (v144 + 32) & ~v144;
  v203 = v144 | 7;
  v204 = v216 + v143;
  v145 = swift_allocObject();
  v217 = xmmword_1BC2B92D0;
  *(_OWORD *)(v145 + 16) = xmmword_1BC2B92D0;
  v146 = v122;
  v194 = (char *)v122;
  swift_retain();
  sub_1BC2B2B94();
  *(_QWORD *)(v139 + 48) = sub_1BC2B2F18();
  v147 = MEMORY[0x1E0D2B148];
  *(_QWORD *)(v139 + 56) = MEMORY[0x1E0D2B148];
  v148 = v123;
  v149 = *(_QWORD *)((char *)v123 + v119);
  v150 = *(_QWORD *)&v192[(_QWORD)v123];
  v151 = *(uint64_t *)((char *)v191 + (_QWORD)v123);
  v152 = *(_QWORD *)((char *)v123 + v146);
  v153 = v148;
  type metadata accessor for PauseDataSource(0);
  swift_allocObject();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  *(_QWORD *)(v139 + 64) = sub_1BC1837C8(v149, v150, v151, v152);
  *(_QWORD *)(v139 + 72) = v147;
  v190 = (uint64_t)v153;
  type metadata accessor for NextPauseDataSource(0);
  swift_allocObject();
  v154 = (void *)swift_retain();
  v155 = sub_1BC184ACC(v154);
  swift_release();
  v156 = sub_1BC0E519C(&qword_1EF400CC0, type metadata accessor for NextPauseDataSource, MEMORY[0x1E0D2AF68]);
  *(_QWORD *)(v139 + 80) = v155;
  *(_QWORD *)(v139 + 88) = v156;
  *(_QWORD *)(v139 + 96) = v218;
  *(_QWORD *)(v139 + 104) = v147;
  swift_retain();
  v206 = (char *)sub_1BC2B2E10();
  v157 = swift_allocObject();
  v207 = xmmword_1BC2B9600;
  *(_OWORD *)(v157 + 16) = xmmword_1BC2B9600;
  v158 = *(_QWORD *)((char *)v153 + v193);
  type metadata accessor for ListOfWeekdaysAndDosagesPickerDataSource(0);
  swift_allocObject();
  v159 = v198;
  v198 = v159;
  v199 = v199;
  swift_retain();
  *(_QWORD *)(v157 + 32) = sub_1BC1EAFDC(v159, v202, v158);
  *(_QWORD *)(v157 + 40) = v147;
  *(_BYTE *)(swift_allocObject() + qword_1EF3FA450) = 1;
  *(_OWORD *)(swift_allocObject() + 16) = v217;
  sub_1BC2B2B94();
  *(_QWORD *)(v157 + 48) = sub_1BC2B2F18();
  *(_QWORD *)(v157 + 56) = v147;
  *(_QWORD *)(v157 + 64) = v218;
  *(_QWORD *)(v157 + 72) = v147;
  swift_retain();
  v202 = (void *)sub_1BC2B2E10();
  sub_1BC0E7998(0, &qword_1EF400CC8, (uint64_t (*)(uint64_t))sub_1BC264720, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 32) = 4;
  v197 = inited + 32;
  v161 = MEMORY[0x1E0D2B748];
  *(_OWORD *)(inited + 16) = xmmword_1BC2C4AE0;
  *(_QWORD *)(inited + 40) = v208;
  *(_QWORD *)(inited + 48) = v161;
  *(_QWORD *)(inited + 56) = v147;
  *(_QWORD *)(inited + 64) = 2;
  v162 = swift_allocObject();
  *(_OWORD *)(v162 + 16) = v207;
  *(_QWORD *)(v162 + 32) = v215;
  *(_QWORD *)(v162 + 40) = v147;
  *(_BYTE *)(swift_allocObject() + qword_1EF3FA450) = 0;
  *(_OWORD *)(swift_allocObject() + 16) = v217;
  swift_retain();
  swift_retain();
  sub_1BC2B2B94();
  *(_QWORD *)(v162 + 48) = sub_1BC2B2F18();
  v163 = MEMORY[0x1E0D2B148];
  v164 = v218;
  *(_QWORD *)(v162 + 56) = MEMORY[0x1E0D2B148];
  *(_QWORD *)(v162 + 64) = v164;
  *(_QWORD *)(v162 + 72) = v163;
  v165 = v163;
  swift_retain();
  v166 = sub_1BC2B2E10();
  v167 = MEMORY[0x1E0D2B4A0];
  *(_QWORD *)(inited + 72) = v166;
  *(_QWORD *)(inited + 80) = v167;
  v168 = MEMORY[0x1E0D2B498];
  *(_QWORD *)(inited + 88) = MEMORY[0x1E0D2B498];
  *(_QWORD *)(inited + 96) = 3;
  v169 = v202;
  *(_QWORD *)(inited + 104) = v202;
  *(_QWORD *)(inited + 112) = v167;
  *(_QWORD *)(inited + 120) = v168;
  *(_QWORD *)(inited + 128) = 5;
  *(_QWORD *)(inited + 136) = v169;
  *(_QWORD *)(inited + 144) = v167;
  *(_QWORD *)(inited + 152) = v168;
  *(_QWORD *)(inited + 160) = 7;
  v170 = v206;
  *(_QWORD *)(inited + 168) = v206;
  *(_QWORD *)(inited + 176) = v167;
  *(_QWORD *)(inited + 184) = v168;
  *(_QWORD *)(inited + 192) = 8;
  *(_QWORD *)(inited + 200) = v170;
  *(_QWORD *)(inited + 208) = v167;
  *(_QWORD *)(inited + 216) = v168;
  *(_QWORD *)(inited + 224) = 1;
  v171 = swift_allocObject();
  *(_OWORD *)(v171 + 16) = v207;
  *(_QWORD *)(v171 + 32) = v215;
  *(_QWORD *)(v171 + 40) = v165;
  *(_BYTE *)(swift_allocObject() + qword_1EF3FA450) = 0;
  *(_OWORD *)(swift_allocObject() + 16) = v217;
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  sub_1BC2B2B94();
  *(_QWORD *)(v171 + 48) = sub_1BC2B2F18();
  v172 = MEMORY[0x1E0D2B148];
  v173 = v218;
  *(_QWORD *)(v171 + 56) = MEMORY[0x1E0D2B148];
  *(_QWORD *)(v171 + 64) = v173;
  *(_QWORD *)(v171 + 72) = v172;
  swift_retain();
  *(_QWORD *)(inited + 232) = sub_1BC2B2E10();
  *(_QWORD *)(inited + 240) = MEMORY[0x1E0D2B4A0];
  *(_QWORD *)(inited + 248) = v168;
  v174 = sub_1BC108B90(inited);
  swift_setDeallocating();
  sub_1BC264720();
  swift_arrayDestroy();
  v175 = v190;
  v176 = *(_QWORD *)&v194[v190];
  sub_1BC26478C(0);
  swift_allocObject();
  swift_retain();
  v177 = sub_1BC264804(v174, v176, 0, 0, 0);
  swift_release();
  v178 = qword_1EF402BC0;
  *(_QWORD *)(v175 + qword_1EF402BC0) = v177;
  v179 = v175;
  swift_release();
  v180 = swift_allocObject();
  *(_OWORD *)(v180 + 16) = xmmword_1BC2B92C0;
  *(_QWORD *)(v180 + 32) = v196;
  *(_QWORD *)(v180 + 40) = v172;
  v181 = *(_QWORD *)(v179 + v178);
  v182 = sub_1BC0E519C(&qword_1EF400CE0, (uint64_t (*)(uint64_t))sub_1BC26478C, (uint64_t)&protocol conformance descriptor for DynamicDataSource<A>);
  *(_QWORD *)(v180 + 48) = v181;
  *(_QWORD *)(v180 + 56) = v182;
  swift_retain();
  swift_retain();
  v183 = sub_1BC2B2E04();
  swift_retain();
  sub_1BC25C98C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  sub_1BC0E8594((uint64_t)v201, (uint64_t (*)(_QWORD))sub_1BC237854);
  (*(void (**)(char *, uint64_t))(v209 + 8))(v211, v210);
  return v183;
}

uint64_t sub_1BC25C940()
{
  swift_retain();
  sub_1BC2B3EC0();
  return swift_release();
}

uint64_t sub_1BC25C98C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = v0;
  sub_1BC2650C0();
  v3 = v2;
  v17 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(_QWORD *)(v0 + qword_1EF402BB8);
  swift_allocObject();
  swift_weakInit();
  sub_1BC13BE80(0, (unint64_t *)&qword_1EF3FC440, type metadata accessor for HKMedicationScheduleType);
  sub_1BC2651E0();
  swift_retain();
  v6 = sub_1BC2B40A0();
  swift_release();
  swift_release();
  *(_QWORD *)(v1 + qword_1EF402B58) = v6;
  swift_release();
  v19 = *(_QWORD *)(v1 + qword_1EF402B78);
  swift_allocObject();
  swift_weakInit();
  sub_1BC26465C(0, &qword_1EF400C88, &qword_1EF400C90, (uint64_t)&type metadata for FrequencyInterval);
  sub_1BC265174(&qword_1EF400D80, &qword_1EF400C88, &qword_1EF400C90, (uint64_t)&type metadata for FrequencyInterval);
  swift_retain();
  v7 = sub_1BC2B40A0();
  swift_release();
  swift_release();
  *(_QWORD *)(v1 + qword_1EF402B18) = v7;
  swift_release();
  v19 = *(_QWORD *)(v1 + qword_1EF402B80);
  swift_allocObject();
  swift_weakInit();
  sub_1BC13BE80(0, &qword_1EF400C98, sub_1BC2646CC);
  sub_1BC265258();
  swift_retain();
  v8 = sub_1BC2B40A0();
  swift_release();
  swift_release();
  *(_QWORD *)(v1 + qword_1EF402B28) = v8;
  swift_release();
  v19 = *(_QWORD *)(v1 + qword_1EF402BB0);
  swift_allocObject();
  swift_weakInit();
  sub_1BC13BE80(0, (unint64_t *)&qword_1EF3FED08, sub_1BC264704);
  sub_1BC2652B0();
  swift_retain();
  v9 = sub_1BC2B40A0();
  swift_release();
  swift_release();
  *(_QWORD *)(v1 + qword_1EF402B30) = v9;
  swift_release();
  v19 = *(_QWORD *)(v1 + qword_1EF402B88);
  swift_allocObject();
  swift_weakInit();
  sub_1BC13BE80(0, (unint64_t *)&qword_1EF3FCC20, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  sub_1BC265308();
  swift_retain();
  v10 = sub_1BC2B40A0();
  swift_release();
  swift_release();
  *(_QWORD *)(v1 + qword_1EF402B38) = v10;
  swift_release();
  v19 = *(_QWORD *)(v1 + qword_1EF402B90);
  swift_allocObject();
  swift_weakInit();
  sub_1BC13BE80(0, (unint64_t *)&qword_1EF3FCC28, (void (*)(uint64_t))sub_1BC237854);
  sub_1BC265360();
  swift_retain();
  v11 = sub_1BC2B40A0();
  swift_release();
  swift_release();
  *(_QWORD *)(v1 + qword_1EF402B40) = v11;
  swift_release();
  v12 = *(_QWORD *)(v1 + qword_1EF402BA0);
  v18 = *(_QWORD *)(v1 + qword_1EF402B98);
  v19 = v12;
  sub_1BC26465C(0, &qword_1EF400CB0, &qword_1EF400CB8, (uint64_t)&type metadata for PauseUsePeriod);
  sub_1BC265174(&qword_1EF400D78, &qword_1EF400CB0, &qword_1EF400CB8, (uint64_t)&type metadata for PauseUsePeriod);
  sub_1BC2B3FF8();
  swift_allocObject();
  swift_weakInit();
  sub_1BC0E519C(&qword_1EF400D90, (uint64_t (*)(uint64_t))sub_1BC2650C0, MEMORY[0x1E0C95698]);
  v13 = sub_1BC2B40A0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v5, v3);
  *(_QWORD *)(v1 + qword_1EF402B50) = v13;
  swift_release();
  v19 = *(_QWORD *)(v1 + qword_1EF402B00);
  swift_allocObject();
  swift_weakInit();
  sub_1BC13BE80(0, (unint64_t *)&qword_1EF3F9DA0, (void (*)(uint64_t))sub_1BC13BA28);
  sub_1BC2653C8();
  swift_retain();
  v14 = sub_1BC2B40A0();
  swift_release();
  swift_release();
  *(_QWORD *)(v1 + qword_1EF402B48) = v14;
  return swift_release();
}

void sub_1BC25CFAC(_QWORD *a1)
{
  id v1;

  if (*a1 != 3)
  {
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      swift_retain();
      swift_release();
      swift_beginAccess();
      if (swift_weakLoadStrong())
      {
        v1 = sub_1BC25D07C();
        swift_release();
      }
      else
      {
        v1 = 0;
      }
      sub_1BC2B3EC0();
      swift_release();

    }
  }
}

id sub_1BC25D07C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  id v55;
  id v56;
  char *v57;
  uint64_t v58;
  void (*v59)(char *, char *, uint64_t);
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  uint8_t *v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  BOOL v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t (*v80)(uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t (*v83)(uint64_t);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  double v89;
  uint64_t v90;
  char *v91;
  NSObject *v92;
  os_log_type_t v93;
  _BOOL4 v94;
  uint64_t v95;
  uint8_t *v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  char *v100;
  NSObject *v101;
  os_log_type_t v102;
  _BOOL4 v103;
  uint8_t *v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  id v108;
  char *v110;
  NSObject *v111;
  os_log_type_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  double v129;
  char *v130;
  char v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  int64_t v138;
  int64_t v139;
  int isUniquelyReferenced_nonNull_native;
  int64_t v141;
  uint64_t v142;
  unint64_t v143;
  uint64_t v144;
  unint64_t v145;
  uint64_t v147;
  BOOL v148;
  uint64_t v149;
  char *v150;
  NSObject *v151;
  os_log_type_t v152;
  uint8_t *v153;
  uint64_t v154;
  uint64_t v155;
  unint64_t v156;
  uint64_t v157;
  id v158;
  id v159;
  char *v160;
  void *v161;
  void *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  void *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  id v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  id v177;
  id v178;
  char *v179;
  void *v180;
  void *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  void *v185;
  unint64_t v186;
  void *v187;
  id v188;
  id v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  void *v193;
  void *v194;
  uint64_t v195;
  void *v196;
  uint64_t v197;
  void *v198;
  void *v199;
  void *v200;
  id v201;
  uint64_t v202;
  void *v203;
  uint64_t v204;
  void *v205;
  void *v206;
  void *v207;
  id v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  uint64_t v212;
  id v213;
  char *v214;
  uint64_t v215;
  uint64_t v216;
  void *v217;
  size_t v218;
  uint64_t v219;
  uint64_t v220;
  id v221;
  id v222;
  char *v223;
  void *v224;
  uint64_t v225;
  uint64_t v226;
  void *v227;
  uint64_t v228;
  uint64_t v229;
  void *v230;
  void *v231;
  void *v232;
  void *v233;
  uint64_t v234;
  void *v235;
  void *v236;
  id v237;
  void *v238;
  char v239[8];
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  char *v249;
  uint64_t v250;
  uint64_t v251;
  char *v252;
  uint64_t v253;
  char *v254;
  uint64_t v255;
  char *v256;
  int v257;
  int v258;
  uint64_t v259;
  char *v260;
  uint64_t v261;
  char *v262;
  uint64_t v263;
  uint64_t v264;
  char *v265;
  uint64_t v266;
  char *v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  char *v274;
  char *v275;
  char *v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  char *v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  char v284;
  uint64_t v285;
  unsigned __int8 v286;

  v1 = v0;
  v264 = *v0;
  v255 = sub_1BC2B25B8();
  v253 = *(_QWORD *)(v255 - 8);
  MEMORY[0x1E0C80A78](v255);
  v254 = (char *)&v242 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v282 = type metadata accessor for Dosage();
  v261 = *(_QWORD *)(v282 - 8);
  v3 = MEMORY[0x1E0C80A78](v282);
  v265 = (char *)&v242 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v242 - v5;
  v270 = sub_1BC2B39E0();
  v269 = *(_QWORD *)(v270 - 8);
  v7 = MEMORY[0x1E0C80A78](v270);
  v268 = (uint64_t)&v242 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v260 = (char *)&v242 - v10;
  v11 = MEMORY[0x1E0C80A78](v9);
  v249 = (char *)&v242 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v252 = (char *)&v242 - v14;
  MEMORY[0x1E0C80A78](v13);
  v262 = (char *)&v242 - v15;
  v16 = type metadata accessor for WeekdaysAndDosages(0);
  v263 = *(_QWORD *)(v16 - 8);
  v17 = MEMORY[0x1E0C80A78](v16);
  v266 = (uint64_t)&v242 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v242 - v19;
  v281 = sub_1BC2B2438();
  v21 = *(_QWORD *)(v281 - 8);
  v22 = MEMORY[0x1E0C80A78](v281);
  v267 = (char *)&v242 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x1E0C80A78](v22);
  v26 = (char *)&v242 - v25;
  MEMORY[0x1E0C80A78](v24);
  v280 = (char *)&v242 - v27;
  sub_1BC237854();
  v29 = MEMORY[0x1E0C80A78](v28);
  v247 = (uint64_t)&v242 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = MEMORY[0x1E0C80A78](v29);
  v246 = (uint64_t)&v242 - v32;
  v33 = MEMORY[0x1E0C80A78](v31);
  v248 = (uint64_t)&v242 - v34;
  v35 = MEMORY[0x1E0C80A78](v33);
  v245 = (uint64_t)&v242 - v36;
  v37 = MEMORY[0x1E0C80A78](v35);
  v243 = (uint64_t)&v242 - v38;
  v39 = MEMORY[0x1E0C80A78](v37);
  v242 = (uint64_t)&v242 - v40;
  v41 = MEMORY[0x1E0C80A78](v39);
  v244 = (uint64_t)&v242 - v42;
  MEMORY[0x1E0C80A78](v41);
  v44 = (char *)&v242 - v43;
  v45 = sub_1BC2B23F0();
  v272 = *(_QWORD *)(v45 - 8);
  v273 = v45;
  MEMORY[0x1E0C80A78](v45);
  v47 = (char *)&v242 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v278 = sub_1BC2B2594();
  v271 = *(_QWORD *)(v278 - 8);
  MEMORY[0x1E0C80A78](v278);
  v49 = (char *)&v242 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = objc_msgSend(*(id *)((char *)v0 + qword_1EF402B60), sel_currentCalendar);
  v276 = v49;
  sub_1BC2B2528();

  swift_retain();
  v275 = v47;
  sub_1BC2B3ED8();
  swift_release();
  swift_retain();
  v274 = v44;
  sub_1BC2B3ED8();
  swift_release();
  swift_retain();
  sub_1BC2B3ED8();
  swift_release();
  v51 = v285;
  if (!v285)
    v51 = MEMORY[0x1E0DEE9D8];
  v277 = v51;
  swift_retain();
  sub_1BC2B3ED8();
  swift_release();
  v279 = v285;
  swift_retain();
  sub_1BC2B3ED8();
  swift_release();
  v251 = v285;
  v258 = v286;
  swift_retain();
  sub_1BC2B3ED8();
  swift_release();
  v52 = v285;
  v257 = v286;
  v250 = qword_1EF402BB0;
  swift_retain();
  sub_1BC2B3ED8();
  swift_release();
  v53 = v285;
  sub_1BC2B242C();
  v256 = (char *)v1;
  v54 = *(void **)((char *)v1 + qword_1EF400C70);
  if (v54)
  {
    v55 = v54;
    v56 = objc_msgSend(v55, sel_UUID);
    v57 = v267;
    sub_1BC2B2420();

    v58 = v281;
    (*(void (**)(char *, uint64_t))(v21 + 8))(v26, v281);
    v59 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
    v59(v26, v57, v58);
  }
  else
  {
    v59 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
    v58 = v281;
  }
  v60 = v280;
  v59(v280, v26, v58);
  v61 = v279;
  if (v279 == 4)
  {
    v62 = v58;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v63 = v268;
    sub_1BC2B39A4();
    v64 = sub_1BC2B39D4();
    v65 = sub_1BC2B48C8();
    if (os_log_type_enabled(v64, v65))
    {
      v66 = (uint8_t *)swift_slowAlloc();
      v67 = swift_slowAlloc();
      v285 = v67;
      *(_DWORD *)v66 = 136315138;
      v68 = sub_1BC2B54F8();
      v283 = sub_1BC12540C(v68, v69, &v285);
      sub_1BC2B4FD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v64, v65, "[%s] Frequency is nil or as needed. Unable to create schedule.", v66, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v67, -1, -1);
      MEMORY[0x1BCCEF3A0](v66, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v269 + 8))(v268, v270);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v269 + 8))(v63, v270);
    }
    (*(void (**)(char *, uint64_t))(v21 + 8))(v60, v62);
    goto LABEL_22;
  }
  v70 = *(char **)(v53 + 16);
  v259 = v21;
  if (v70)
  {
    v268 = v52;
    v71 = v53 + ((*(unsigned __int8 *)(v263 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v263 + 80));
    v72 = *(_QWORD *)(v263 + 72);
    swift_bridgeObjectRetain();
    v73 = v70;
    v74 = v70 - 1;
    do
    {
      sub_1BC0FC574(v71, (uint64_t)v20, type metadata accessor for WeekdaysAndDosages);
      v75 = *(_QWORD *)(*(_QWORD *)&v20[*(int *)(v16 + 24)] + 16);
      sub_1BC0E8594((uint64_t)v20, type metadata accessor for WeekdaysAndDosages);
      if (v75)
        v76 = 1;
      else
        v76 = v74 == 0;
      --v74;
      v71 += v72;
    }
    while (!v76);
    swift_bridgeObjectRelease();
    v61 = v279;
    v58 = v281;
    v77 = (uint64_t)v265;
    v78 = v277;
    v21 = v259;
    v70 = v73;
    if (v279 == 3 || v279 == 5)
    {
      if (!v75)
        goto LABEL_31;
      goto LABEL_29;
    }
  }
  else
  {
    v77 = (uint64_t)v265;
    v78 = v277;
    if (v279 == 3)
    {
      swift_bridgeObjectRelease();
      v82 = v278;
      goto LABEL_43;
    }
    v268 = v52;
    if (v279 == 5)
    {
LABEL_31:
      swift_bridgeObjectRelease();
      v82 = v278;
      v60 = v280;
LABEL_43:
      swift_bridgeObjectRelease();
      v100 = v262;
      sub_1BC2B39A4();
      v101 = sub_1BC2B39D4();
      v102 = sub_1BC2B48C8();
      v103 = os_log_type_enabled(v101, v102);
      v95 = (uint64_t)v276;
      if (!v103)
      {

        (*(void (**)(char *, uint64_t))(v269 + 8))(v100, v270);
        (*(void (**)(char *, uint64_t))(v21 + 8))(v60, v58);
        sub_1BC0E8594((uint64_t)v274, (uint64_t (*)(_QWORD))sub_1BC237854);
        (*(void (**)(char *, uint64_t))(v272 + 8))(v275, v273);
        (*(void (**)(uint64_t, uint64_t))(v271 + 8))(v95, v82);
        return 0;
      }
      v104 = (uint8_t *)swift_slowAlloc();
      v105 = swift_slowAlloc();
      v285 = v105;
      *(_DWORD *)v104 = 136315138;
      v106 = sub_1BC2B54F8();
      v283 = sub_1BC12540C(v106, v107, &v285);
      sub_1BC2B4FD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v101, v102, "[%s] Dosages is nil. Unable to create schedule.", v104, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v105, -1, -1);
      MEMORY[0x1BCCEF3A0](v104, -1, -1);

      (*(void (**)(char *, uint64_t))(v269 + 8))(v262, v270);
      (*(void (**)(char *, uint64_t))(v259 + 8))(v60, v58);
      goto LABEL_45;
    }
  }
  if (!*(_QWORD *)(v78 + 16))
    goto LABEL_31;
  if ((unint64_t)(v61 - 7) <= 1 && (v258 == 255 || v257 == 255))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v110 = v252;
    sub_1BC2B39A4();
    v111 = sub_1BC2B39D4();
    v112 = sub_1BC2B48C8();
    if (!os_log_type_enabled(v111, v112))
    {

      (*(void (**)(char *, uint64_t))(v269 + 8))(v110, v270);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v280, v58);
LABEL_22:
      sub_1BC0E8594((uint64_t)v274, (uint64_t (*)(_QWORD))sub_1BC237854);
      (*(void (**)(char *, uint64_t))(v272 + 8))(v275, v273);
      (*(void (**)(char *, uint64_t))(v271 + 8))(v276, v278);
      return 0;
    }
    v113 = -1;
    v114 = swift_slowAlloc();
    v115 = swift_slowAlloc();
    v285 = v115;
    *(_DWORD *)v114 = 136315650;
    v116 = sub_1BC2B54F8();
    v283 = sub_1BC12540C(v116, v117, &v285);
    sub_1BC2B4FD0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v114 + 12) = 2048;
    v118 = v278;
    v119 = v280;
    if (v258 == 255
      || (v113 = v251, (v258 & 1) != 0)
      || (v113 = 7 * v251, (unsigned __int128)(v251 * (__int128)7) >> 64 == (7 * v251) >> 63))
    {
      v283 = v113;
      sub_1BC2B4FD0();
      *(_WORD *)(v114 + 22) = 2048;
      if (v257 == 255)
      {
        v120 = -1;
        v121 = (uint64_t)v276;
        v123 = v272;
        v122 = v273;
      }
      else
      {
        v121 = (uint64_t)v276;
        v123 = v272;
        v122 = v273;
        v120 = v268;
        if ((v257 & 1) == 0)
        {
          v120 = 7 * v268;
          if ((unsigned __int128)(v268 * (__int128)7) >> 64 != (7 * v268) >> 63)
            goto LABEL_154;
        }
      }
      v283 = v120;
      sub_1BC2B4FD0();
      _os_log_impl(&dword_1BC0DC000, v111, v112, "[%s] No take for value %ld or pause For Value %ld. Unable to create schedule.", (uint8_t *)v114, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v115, -1, -1);
      MEMORY[0x1BCCEF3A0](v114, -1, -1);

      (*(void (**)(char *, uint64_t))(v269 + 8))(v252, v270);
      (*(void (**)(char *, uint64_t))(v259 + 8))(v119, v58);
      sub_1BC0E8594((uint64_t)v274, (uint64_t (*)(_QWORD))sub_1BC237854);
      (*(void (**)(char *, uint64_t))(v123 + 8))(v275, v122);
      (*(void (**)(uint64_t, uint64_t))(v271 + 8))(v121, v118);
      return 0;
    }
LABEL_153:
    __break(1u);
LABEL_154:
    __break(1u);
LABEL_155:
    LODWORD(v241) = 0;
    v240 = 1092;
    v239[0] = 2;
    sub_1BC2B5318();
    __break(1u);
    swift_release();
    __break(1u);
    JUMPOUT(0x1BC25F528);
  }
LABEL_29:
  if (!v70)
    goto LABEL_57;
  v252 = v70;
  v262 = (char *)(v53 + ((*(unsigned __int8 *)(v263 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v263 + 80)));
  v267 = *(char **)(v263 + 72);
  swift_bridgeObjectRetain();
  v79 = 0;
  v80 = type metadata accessor for WeekdaysAndDosages;
  v81 = v266;
  while (2)
  {
    v83 = v80;
    sub_1BC0FC574((uint64_t)&v262[(_QWORD)v267 * (_QWORD)v79], v81, v80);
    v84 = *(_QWORD *)(v81 + *(int *)(v16 + 24));
    v85 = *(_QWORD *)(v84 + 16);
    if (!v85)
      goto LABEL_32;
    v86 = v261;
    v87 = v84 + ((*(unsigned __int8 *)(v261 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v261 + 80));
    swift_bridgeObjectRetain();
    v88 = *(_QWORD *)(v86 + 72);
    do
    {
      sub_1BC0FC574(v87, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      v89 = *(double *)&v6[*(int *)(v282 + 24)];
      sub_1BC0E8594((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      if (v89 <= 0.0)
      {
        swift_bridgeObjectRelease();
        sub_1BC0E8594(v266, type metadata accessor for WeekdaysAndDosages);
        swift_bridgeObjectRelease();
        v90 = v278;
        v58 = v281;
        v21 = v259;
LABEL_39:
        swift_bridgeObjectRelease_n();
        v91 = v260;
        sub_1BC2B39A4();
        v92 = sub_1BC2B39D4();
        v93 = sub_1BC2B48C8();
        v94 = os_log_type_enabled(v92, v93);
        v95 = (uint64_t)v276;
        if (!v94)
        {

          (*(void (**)(char *, uint64_t))(v269 + 8))(v91, v270);
          (*(void (**)(char *, uint64_t))(v21 + 8))(v280, v58);
          sub_1BC0E8594((uint64_t)v274, (uint64_t (*)(_QWORD))sub_1BC237854);
          (*(void (**)(char *, uint64_t))(v272 + 8))(v275, v273);
          (*(void (**)(uint64_t, uint64_t))(v271 + 8))(v95, v90);
          return 0;
        }
        v96 = (uint8_t *)swift_slowAlloc();
        v97 = swift_slowAlloc();
        v285 = v97;
        *(_DWORD *)v96 = 136315138;
        v98 = sub_1BC2B54F8();
        v283 = sub_1BC12540C(v98, v99, &v285);
        sub_1BC2B4FD0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BC0DC000, v92, v93, "[%s] Unable to create schedule with a dosage less than or equal to 0", v96, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCEF3A0](v97, -1, -1);
        MEMORY[0x1BCCEF3A0](v96, -1, -1);

        (*(void (**)(char *, uint64_t))(v269 + 8))(v260, v270);
        (*(void (**)(char *, uint64_t))(v21 + 8))(v280, v58);
LABEL_45:
        sub_1BC0E8594((uint64_t)v274, (uint64_t (*)(_QWORD))sub_1BC237854);
        (*(void (**)(char *, uint64_t))(v272 + 8))(v275, v273);
        (*(void (**)(uint64_t, uint64_t))(v271 + 8))(v95, v278);
        return 0;
      }
      v87 += v88;
      --v85;
    }
    while (v85);
    swift_bridgeObjectRelease();
    v58 = v281;
LABEL_32:
    ++v79;
    v81 = v266;
    v80 = v83;
    sub_1BC0E8594(v266, v83);
    if (v79 != v252)
      continue;
    break;
  }
  swift_bridgeObjectRelease();
  v77 = (uint64_t)v265;
  v78 = v277;
  v21 = v259;
LABEL_57:
  v124 = swift_bridgeObjectRelease();
  v125 = *(_QWORD *)(v78 + 16);
  v90 = v278;
  v126 = v268;
  if (v125)
  {
    v127 = v78 + ((*(unsigned __int8 *)(v261 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v261 + 80));
    v128 = *(_QWORD *)(v261 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1BC0FC574(v127, v77, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      v129 = *(double *)(v77 + *(int *)(v282 + 24));
      sub_1BC0E8594(v77, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      if (v129 <= 0.0)
        goto LABEL_39;
      v127 += v128;
      --v125;
    }
    while (v125);
    v78 = v277;
    v124 = swift_bridgeObjectRelease();
  }
  switch(v279)
  {
    case 0:
      swift_bridgeObjectRelease();
      goto LABEL_115;
    case 1:
      v285 = MEMORY[0x1E0DEE9D8];
      v167 = *(_QWORD *)(v78 + 16);
      if (v167)
      {
        v168 = v78 + ((*(unsigned __int8 *)(v261 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v261 + 80));
        v169 = *(_QWORD *)(v261 + 72);
        swift_bridgeObjectRetain();
        v170 = v256;
        v171 = v264;
        do
        {
          sub_1BC2606D4(&v285, v168, v170, v78, v171, &v283);
          swift_bridgeObjectRelease();
          v285 = v283;
          v168 += v169;
          --v167;
        }
        while (v167);
        swift_bridgeObjectRelease_n();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      v184 = v273;
      v282 = sub_1BC2B2408();
      v213 = objc_msgSend(*(id *)&v256[qword_1EF400C78], sel_semanticIdentifier);
      v178 = objc_msgSend(v213, sel_stringValue);

      if (!v178)
      {
        sub_1BC2B4460();
        v178 = (id)sub_1BC2B4430();
        swift_bridgeObjectRelease();
      }
      v214 = v254;
      sub_1BC2B2570();
      v180 = (void *)sub_1BC2B25A0();
      (*(void (**)(char *, uint64_t))(v253 + 8))(v214, v255);
      v181 = (void *)sub_1BC2B2360();
      v215 = v248;
      sub_1BC0FC574((uint64_t)v274, v248, (uint64_t (*)(_QWORD))sub_1BC237854);
      v183 = v272;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v272 + 48))(v215, 1, v184) == 1)
      {
        v185 = 0;
      }
      else
      {
        v185 = (void *)sub_1BC2B2360();
        (*(void (**)(uint64_t, uint64_t))(v183 + 8))(v215, v184);
      }
      v216 = objc_opt_self();
      sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDB8);
      v205 = (void *)sub_1BC2B4580();
      swift_bridgeObjectRelease();
      v217 = (void *)v216;
      v207 = (void *)v282;
      v208 = objc_msgSend(v217, sel_everyXDaysScheduleWithUUID_medicationIdentifier_createdUTCOffset_startDateTime_endDateTime_timeIntervals_cycleStartDateComponents_note_, v282, v178, v180, v181, v185, v205, 0, 0);
      goto LABEL_135;
    case 2:
      MEMORY[0x1E0C80A78](v124);
      v241 = (uint64_t)v276;
      sub_1BC1B4D74((void (*)(uint64_t *__return_ptr, uint64_t))sub_1BC265BE8, (uint64_t)v239, v78);
      swift_bridgeObjectRelease();
      v282 = sub_1BC2B2408();
      v177 = objc_msgSend(*(id *)&v256[qword_1EF400C78], sel_semanticIdentifier);
      v178 = objc_msgSend(v177, sel_stringValue);

      if (!v178)
      {
        sub_1BC2B4460();
        v178 = (id)sub_1BC2B4430();
        swift_bridgeObjectRelease();
      }
      v179 = v254;
      sub_1BC2B2570();
      v180 = (void *)sub_1BC2B25A0();
      (*(void (**)(char *, uint64_t))(v253 + 8))(v179, v255);
      v181 = (void *)sub_1BC2B2360();
      v182 = v245;
      sub_1BC0FC574((uint64_t)v274, v245, (uint64_t (*)(_QWORD))sub_1BC237854);
      v183 = v272;
      v184 = v273;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v272 + 48))(v182, 1, v273) == 1)
      {
        v185 = 0;
      }
      else
      {
        v185 = (void *)sub_1BC2B2360();
        (*(void (**)(uint64_t, uint64_t))(v183 + 8))(v182, v184);
      }
      v204 = objc_opt_self();
      sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDB8);
      v205 = (void *)sub_1BC2B4580();
      swift_bridgeObjectRelease();
      v206 = (void *)v204;
      v207 = (void *)v282;
      v208 = objc_msgSend(v206, sel_dailyScheduleWithUUID_medicationIdentifier_createdUTCOffset_startDateTime_endDateTime_timeIntervals_note_, v282, v178, v180, v181, v185, v205, 0);
LABEL_135:
      v108 = v208;

      (*(void (**)(char *, uint64_t))(v259 + 8))(v280, v281);
      sub_1BC0E8594((uint64_t)v274, (uint64_t (*)(_QWORD))sub_1BC237854);
      (*(void (**)(char *, uint64_t))(v183 + 8))(v275, v184);
      goto LABEL_148;
    case 3:
    case 5:
      swift_bridgeObjectRelease();
      v130 = v256;
      swift_retain();
      sub_1BC2B3ED8();
      swift_release();
      v131 = sub_1BC25FD70(v285);
      swift_bridgeObjectRelease();
      if ((v131 & 1) != 0)
      {
        swift_retain();
        sub_1BC2B3ED8();
        swift_release();
        v132 = *(_QWORD *)(v285 + 16);
        if (v132)
        {
          v133 = v285 + ((*(unsigned __int8 *)(v263 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v263 + 80));
          v279 = *(_QWORD *)(v263 + 72);
          swift_bridgeObjectRetain();
          v134 = MEMORY[0x1E0DEE9D8];
          while (1)
          {
            v135 = v90;
            v136 = *(_QWORD *)(v133 + *(int *)(v16 + 24));
            v137 = *(_QWORD *)(v136 + 16);
            v138 = *(_QWORD *)(v134 + 16);
            v139 = v138 + v137;
            if (__OFADD__(v138, v137))
              break;
            swift_bridgeObjectRetain();
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            if (!isUniquelyReferenced_nonNull_native || v139 > *(_QWORD *)(v134 + 24) >> 1)
            {
              if (v138 <= v139)
                v141 = v138 + v137;
              else
                v141 = v138;
              v134 = sub_1BC0F9E08(isUniquelyReferenced_nonNull_native, v141, 1, v134);
            }
            v90 = v135;
            if (*(_QWORD *)(v136 + 16))
            {
              v142 = *(_QWORD *)(v134 + 16);
              if ((*(_QWORD *)(v134 + 24) >> 1) - v142 < v137)
                goto LABEL_151;
              v143 = (*(unsigned __int8 *)(v261 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v261 + 80);
              v144 = *(_QWORD *)(v261 + 72);
              v145 = v134 + v143 + v144 * v142;
              if (v136 + v143 < v145 + v144 * v137 && v145 < v136 + v143 + v144 * v137)
                goto LABEL_155;
              swift_arrayInitWithCopy();
              if (v137)
              {
                v147 = *(_QWORD *)(v134 + 16);
                v148 = __OFADD__(v147, v137);
                v149 = v147 + v137;
                if (v148)
                  goto LABEL_152;
                *(_QWORD *)(v134 + 16) = v149;
              }
            }
            else if (v137)
            {
              goto LABEL_150;
            }
            swift_bridgeObjectRelease();
            v133 += v279;
            if (!--v132)
            {
              swift_bridgeObjectRelease();
              goto LABEL_137;
            }
          }
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
          goto LABEL_153;
        }
        v134 = MEMORY[0x1E0DEE9D8];
LABEL_137:
        swift_bridgeObjectRelease();
        v218 = sub_1BC1B83A4(v134);
        swift_bridgeObjectRelease();
        v285 = v218;
        swift_bridgeObjectRetain();
        sub_1BC25AD78(&v285, (uint64_t (*)(_QWORD))type metadata accessor for Dosage, (uint64_t (*)(uint64_t))sub_1BC26E290, sub_1BC2618A8);
        v219 = v273;
        swift_bridgeObjectRelease();
        v220 = v285;
        v282 = sub_1BC2B2408();
        v221 = objc_msgSend(*(id *)&v256[qword_1EF400C78], sel_semanticIdentifier);
        v222 = objc_msgSend(v221, sel_stringValue);

        if (!v222)
        {
          sub_1BC2B4460();
          v222 = (id)sub_1BC2B4430();
          swift_bridgeObjectRelease();
        }
        v223 = v254;
        sub_1BC2B2570();
        v279 = sub_1BC2B25A0();
        (*(void (**)(char *, uint64_t))(v253 + 8))(v223, v255);
        v224 = (void *)sub_1BC2B2360();
        v225 = v244;
        sub_1BC0FC574((uint64_t)v274, v244, (uint64_t (*)(_QWORD))sub_1BC237854);
        v226 = v272;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v272 + 48))(v225, 1, v219) == 1)
        {
          v227 = 0;
        }
        else
        {
          v227 = (void *)sub_1BC2B2360();
          (*(void (**)(uint64_t, uint64_t))(v226 + 8))(v225, v219);
        }
        v228 = objc_opt_self();
        MEMORY[0x1E0C80A78](v228);
        v229 = (uint64_t)v276;
        sub_1BC1B4D74((void (*)(uint64_t *__return_ptr, uint64_t))sub_1BC265CD4, (uint64_t)v239, v220);
        swift_release();
        sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDB8);
        v230 = (void *)sub_1BC2B4580();
        swift_bridgeObjectRelease();
        v231 = (void *)v228;
        v232 = (void *)v282;
        v233 = (void *)v279;
        v108 = objc_msgSend(v231, sel_dailyScheduleWithUUID_medicationIdentifier_createdUTCOffset_startDateTime_endDateTime_timeIntervals_note_, v282, v222, v279, v224, v227, v230, 0);

        (*(void (**)(char *, uint64_t))(v259 + 8))(v280, v281);
        sub_1BC0E8594((uint64_t)v274, (uint64_t (*)(_QWORD))sub_1BC237854);
        (*(void (**)(char *, uint64_t))(v226 + 8))(v275, v273);
        (*(void (**)(uint64_t, uint64_t))(v271 + 8))(v229, v90);
      }
      else
      {
        sub_1BC2600F4();
        swift_retain();
        sub_1BC2B3ED8();
        swift_release();
        v186 = *(_QWORD *)(v285 + 16);
        swift_bridgeObjectRelease();
        v187 = (void *)sub_1BC2B2408();
        v188 = objc_msgSend(*(id *)&v130[qword_1EF400C78], sel_semanticIdentifier);
        v189 = objc_msgSend(v188, sel_stringValue);

        if (v186 < 2)
        {
          v209 = v272;
          v210 = v273;
          if (!v189)
          {
            sub_1BC2B4460();
            v189 = (id)sub_1BC2B4430();
            swift_bridgeObjectRelease();
          }
          v211 = v254;
          sub_1BC2B2570();
          v193 = (void *)sub_1BC2B25A0();
          (*(void (**)(char *, uint64_t))(v253 + 8))(v211, v255);
          v194 = (void *)sub_1BC2B2360();
          v212 = v243;
          sub_1BC0FC574((uint64_t)v274, v243, (uint64_t (*)(_QWORD))sub_1BC237854);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v209 + 48))(v212, 1, v210) == 1)
          {
            v196 = 0;
          }
          else
          {
            v196 = (void *)sub_1BC2B2360();
            (*(void (**)(uint64_t, uint64_t))(v209 + 8))(v212, v210);
          }
          v234 = v209;
          v238 = (void *)objc_opt_self();
          sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDB8);
          v236 = (void *)sub_1BC2B4580();
          swift_bridgeObjectRelease();
          v237 = objc_msgSend(v238, sel_daysOfWeekScheduleWithUUID_medicationIdentifier_createdUTCOffset_startDateTime_endDateTime_timeIntervals_note_, v187, v189, v193, v194, v196, v236, 0);
        }
        else
        {
          v190 = v272;
          v191 = v273;
          if (!v189)
          {
            sub_1BC2B4460();
            v189 = (id)sub_1BC2B4430();
            swift_bridgeObjectRelease();
          }
          v192 = v254;
          sub_1BC2B2570();
          v193 = (void *)sub_1BC2B25A0();
          (*(void (**)(char *, uint64_t))(v253 + 8))(v192, v255);
          v194 = (void *)sub_1BC2B2360();
          v195 = v242;
          sub_1BC0FC574((uint64_t)v274, v242, (uint64_t (*)(_QWORD))sub_1BC237854);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v190 + 48))(v195, 1, v191) == 1)
          {
            v196 = 0;
          }
          else
          {
            v196 = (void *)sub_1BC2B2360();
            (*(void (**)(uint64_t, uint64_t))(v190 + 8))(v195, v191);
          }
          v234 = v190;
          v235 = (void *)objc_opt_self();
          sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDB8);
          v236 = (void *)sub_1BC2B4580();
          swift_bridgeObjectRelease();
          v237 = objc_msgSend(v235, sel_differentDosesDaysOfWeekScheduleWithUUID_medicationIdentifier_createdUTCOffset_startDateTime_endDateTime_timeIntervals_note_, v187, v189, v193, v194, v196, v236, 0);
        }
        v108 = v237;

        (*(void (**)(char *, uint64_t))(v259 + 8))(v280, v281);
        sub_1BC0E8594((uint64_t)v274, (uint64_t (*)(_QWORD))sub_1BC237854);
        (*(void (**)(char *, uint64_t))(v234 + 8))(v275, v273);
LABEL_148:
        (*(void (**)(char *, uint64_t))(v271 + 8))(v276, v90);
      }
      return v108;
    case 7:
      v285 = v126;
      v286 = v257;
      v283 = v251;
      v284 = v258;
      v282 = sub_1BC265420(v78, (uint64_t)v276, (uint64_t)&v285, &v283);
      swift_bridgeObjectRelease();
      v157 = sub_1BC2B2408();
      v158 = objc_msgSend(*(id *)&v256[qword_1EF400C78], sel_semanticIdentifier);
      v159 = objc_msgSend(v158, sel_stringValue);

      if (!v159)
      {
        sub_1BC2B4460();
        v159 = (id)sub_1BC2B4430();
        swift_bridgeObjectRelease();
      }
      v160 = v254;
      sub_1BC2B2570();
      v161 = (void *)sub_1BC2B25A0();
      (*(void (**)(char *, uint64_t))(v253 + 8))(v160, v255);
      v162 = (void *)sub_1BC2B2360();
      v163 = v246;
      sub_1BC0FC574((uint64_t)v274, v246, (uint64_t (*)(_QWORD))sub_1BC237854);
      v164 = v272;
      v165 = v273;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v272 + 48))(v163, 1, v273) == 1)
      {
        v166 = 0;
      }
      else
      {
        v166 = (void *)sub_1BC2B2360();
        (*(void (**)(uint64_t, uint64_t))(v164 + 8))(v163, v165);
      }
      v197 = objc_opt_self();
      sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDB8);
      v198 = (void *)sub_1BC2B4580();
      swift_bridgeObjectRelease();
      v199 = (void *)v197;
      v200 = (void *)v157;
      v201 = objc_msgSend(v199, sel_activeXDaysPauseYDaysWithUUID_medicationIdentifier_createdUTCOffset_startDateTime_endDateTime_timeIntervals_cycleStartDateComponents_note_, v157, v159, v161, v162, v166, v198, 0, 0);
      goto LABEL_121;
    case 8:
      v285 = v126;
      v286 = v257;
      v283 = v251;
      v284 = v258;
      v282 = sub_1BC2656A0(v78, (uint64_t)v276, (uint64_t)&v285, (uint64_t)&v283);
      swift_bridgeObjectRelease();
      v172 = sub_1BC2B2408();
      v173 = objc_msgSend(*(id *)&v256[qword_1EF400C78], sel_semanticIdentifier);
      v159 = objc_msgSend(v173, sel_stringValue);

      if (!v159)
      {
        sub_1BC2B4460();
        v159 = (id)sub_1BC2B4430();
        swift_bridgeObjectRelease();
      }
      v174 = v254;
      sub_1BC2B2570();
      v161 = (void *)sub_1BC2B25A0();
      (*(void (**)(char *, uint64_t))(v253 + 8))(v174, v255);
      v162 = (void *)sub_1BC2B2360();
      v175 = v247;
      sub_1BC0FC574((uint64_t)v274, v247, (uint64_t (*)(_QWORD))sub_1BC237854);
      v164 = v272;
      v176 = v273;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v272 + 48))(v175, 1, v273) == 1)
      {
        v166 = 0;
      }
      else
      {
        v166 = (void *)sub_1BC2B2360();
        (*(void (**)(uint64_t, uint64_t))(v164 + 8))(v175, v176);
      }
      v202 = objc_opt_self();
      sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDB8);
      v198 = (void *)sub_1BC2B4580();
      swift_bridgeObjectRelease();
      v203 = (void *)v202;
      v200 = (void *)v172;
      v201 = objc_msgSend(v203, sel_activeXWeeksPauseYWeeksWithUUID_medicationIdentifier_createdUTCOffset_startDateTime_endDateTime_timeIntervals_cycleStartDateComponents_note_, v172, v159, v161, v162, v166, v198, 0, 0);
LABEL_121:
      v108 = v201;

      (*(void (**)(char *, uint64_t))(v259 + 8))(v280, v281);
      sub_1BC0E8594((uint64_t)v274, (uint64_t (*)(_QWORD))sub_1BC237854);
      (*(void (**)(char *, uint64_t))(v164 + 8))(v275, v273);
      goto LABEL_148;
    default:
      swift_bridgeObjectRelease();
      v150 = v249;
      sub_1BC2B39A4();
      v151 = sub_1BC2B39D4();
      v152 = sub_1BC2B48C8();
      if (os_log_type_enabled(v151, v152))
      {
        v153 = (uint8_t *)swift_slowAlloc();
        v154 = swift_slowAlloc();
        v285 = v154;
        *(_DWORD *)v153 = 136315138;
        v155 = sub_1BC2B54F8();
        v283 = sub_1BC12540C(v155, v156, &v285);
        sub_1BC2B4FD0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BC0DC000, v151, v152, "%s encountered unsupported scheduleType when attempting to save schedule.", v153, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCEF3A0](v154, -1, -1);
        MEMORY[0x1BCCEF3A0](v153, -1, -1);

        (*(void (**)(char *, uint64_t))(v269 + 8))(v249, v270);
        (*(void (**)(char *, uint64_t))(v21 + 8))(v280, v58);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v269 + 8))(v150, v270);
LABEL_115:
        (*(void (**)(char *, uint64_t))(v21 + 8))(v280, v58);
      }
      sub_1BC0E8594((uint64_t)v274, (uint64_t (*)(_QWORD))sub_1BC237854);
      (*(void (**)(char *, uint64_t))(v272 + 8))(v275, v273);
      (*(void (**)(char *, uint64_t))(v271 + 8))(v276, v90);
      return 0;
  }
}

void sub_1BC25F54C()
{
  id v0;

  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_retain();
    swift_release();
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      v0 = sub_1BC25D07C();
      swift_release();
    }
    else
    {
      v0 = 0;
    }
    sub_1BC2B3EC0();
    swift_release();

  }
}

void sub_1BC25F610()
{
  id v0;

  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    if (sub_1BC25F804())
    {
      swift_retain();
      v0 = sub_1BC25D07C();
      sub_1BC2B3EC0();
      swift_release();
      swift_release();

    }
    else
    {
      swift_release();
    }
  }
}

uint64_t sub_1BC25F6BC()
{
  uint64_t result;
  void *v1;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_beginAccess();
    swift_retain();
    swift_release();
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      swift_retain();
      sub_1BC2B3ED8();
      swift_release();
      if (v1 == (void *)4)
      {
        swift_release();
      }
      else
      {
        swift_retain();
        sub_1BC2B3ED8();
        swift_release();
        swift_release();
        if (v1)

      }
    }
    sub_1BC2B3EC0();
    return swift_release();
  }
  return result;
}

BOOL sub_1BC25F804()
{
  _BOOL8 result;
  uint64_t v1;
  unsigned __int8 v2;

  swift_retain();
  sub_1BC2B3ED8();
  swift_release();
  swift_retain();
  sub_1BC2B3ED8();
  swift_release();
  swift_retain();
  sub_1BC2B3ED8();
  swift_release();
  result = 0;
  if (v2 != 255)
  {
    swift_retain();
    sub_1BC2B3ED8();
    swift_release();
    if ((v2 & 1) == 0 && v1 == 8)
      return 1;
    if (v1 == 7 && (v2 & 1) != 0)
      return 1;
  }
  return result;
}

void MedicationScheduleDataSource.__allocating_init(_:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void MedicationScheduleDataSource.init(_:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1BC25F970()
{
  uint64_t v0;

  sub_1BC0E8594(v0 + qword_1EF402B68, (uint64_t (*)(_QWORD))sub_1BC264640);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1BC1BAC3C(*(_QWORD *)(v0 + qword_1EF402B70), *(_QWORD *)(v0 + qword_1EF402B70 + 8));

}

uint64_t MedicationScheduleDataSource.deinit()
{
  uint64_t v0;

  v0 = sub_1BC2B2DF8();

  sub_1BC0E8594(v0 + qword_1EF402B68, (uint64_t (*)(_QWORD))sub_1BC264640);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1BC1BAC3C(*(_QWORD *)(v0 + qword_1EF402B70), *(_QWORD *)(v0 + qword_1EF402B70 + 8));

  return v0;
}

uint64_t MedicationScheduleDataSource.__deallocating_deinit()
{
  MedicationScheduleDataSource.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC25FD60()
{
  return swift_retain();
}

uint64_t sub_1BC25FD70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t (*v28)(void);
  uint64_t (*v29)(uint64_t);
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  char *v32;
  void (*v33)(char *, uint64_t);
  _BOOL4 v34;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v39 = a1;
  v44 = type metadata accessor for WeekdaysAndDosages(0);
  v1 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v45 = (uint64_t)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1BC2B38E4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v36 - v9;
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v36 - v12;
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v36 - v15;
  MEMORY[0x1E0C80A78](v14);
  v38 = (char *)&v36 - v17;
  v47 = 0;
  v19 = sub_1BC0E519C(&qword_1EDA0FAC0, v18, MEMORY[0x1E0D2CC20]);
  sub_1BC2B54EC();
  v20 = v4;
  v21 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v37 = v16;
  v21(v13, v16, v3);
  v22 = *(_QWORD *)(v39 + 16);
  if (v22)
  {
    v23 = *(unsigned __int8 *)(v1 + 80);
    v43 = (void (*)(char *, uint64_t, uint64_t))v21;
    v24 = v39 + ((v23 + 32) & ~v23);
    v42 = *(_QWORD *)(v1 + 72);
    swift_bridgeObjectRetain();
    v40 = v7;
    v41 = v19;
    v25 = v45;
    do
    {
      sub_1BC0FC574(v24, v25, type metadata accessor for WeekdaysAndDosages);
      v26 = v25 + *(int *)(v44 + 20);
      v27 = v13;
      v28 = MEMORY[0x1E0D2CBF0];
      sub_1BC0E519C(&qword_1EF3FA2A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2CBF0], MEMORY[0x1E0D2CC10]);
      sub_1BC2B4568();
      sub_1BC2B54EC();
      v43(v40, v26, v3);
      v29 = (uint64_t (*)(uint64_t))v28;
      v13 = v27;
      sub_1BC0E519C(&qword_1EF3FA2A8, v29, MEMORY[0x1E0D2CC18]);
      sub_1BC2B5078();
      v25 = v45;
      sub_1BC0E8594(v45, type metadata accessor for WeekdaysAndDosages);
      (*(void (**)(char *, uint64_t))(v20 + 8))(v27, v3);
      v30 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
      v30(v27, v10, v3);
      v24 += v42;
      --v22;
    }
    while (v22);
    v31 = v39;
    swift_bridgeObjectRelease();
  }
  else
  {
    v30 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
    v31 = v39;
  }
  v32 = v38;
  v30(v38, v13, v3);
  v33 = *(void (**)(char *, uint64_t))(v20 + 8);
  v33(v37, v3);
  sub_1BC2B3890();
  sub_1BC0E519C(&qword_1EF3FA2A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2CBF0], MEMORY[0x1E0D2CC10]);
  sub_1BC2B4568();
  sub_1BC2B4568();
  v34 = v47 == v46;
  v33(v10, v3);
  v33(v32, v3);
  return v34 & sub_1BC261718(v31);
}

uint64_t sub_1BC2600F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  id v34;
  id v35;
  void *v36;
  id v37;
  void (*v38)(char *, uint64_t);
  id v39;
  char *v40;
  uint64_t result;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v1 = sub_1BC2B25B8();
  v56 = *(_QWORD *)(v1 - 8);
  v57 = v1;
  MEMORY[0x1E0C80A78](v1);
  v55 = (char *)&v42 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1BC2B20FC();
  v64 = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x1E0C80A78](v3);
  v54 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v42 - v6;
  v53 = type metadata accessor for Dosage();
  v45 = *(_QWORD *)(v53 - 8);
  MEMORY[0x1E0C80A78](v53);
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for WeekdaysAndDosages(0);
  v48 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1BC2B2594();
  v59 = *(_QWORD *)(v13 - 8);
  v60 = v13;
  v14 = MEMORY[0x1E0C80A78](v13);
  v52 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v42 - v16;
  v18 = objc_msgSend(*(id *)(v0 + qword_1EF402B60), sel_currentCalendar);
  v58 = v17;
  sub_1BC2B2528();

  v67 = MEMORY[0x1E0DEE9D8];
  swift_retain();
  sub_1BC2B3ED8();
  swift_release();
  v65 = v66;
  swift_bridgeObjectRetain();
  sub_1BC25AD78(&v65, type metadata accessor for WeekdaysAndDosages, (uint64_t (*)(uint64_t))sub_1BC26E2A4, sub_1BC262318);
  swift_bridgeObjectRelease();
  v19 = v65;
  v47 = *(_QWORD *)(v65 + 16);
  if (v47)
  {
    v20 = 0;
    v46 = v65 + ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80));
    v44 = v10;
    v43 = v12;
    v42 = v65;
    v51 = v7;
    while (v20 < *(_QWORD *)(v19 + 16))
    {
      sub_1BC0FC574(v46 + *(_QWORD *)(v48 + 72) * v20, (uint64_t)v12, type metadata accessor for WeekdaysAndDosages);
      v21 = *(_QWORD *)&v12[*(int *)(v10 + 24)];
      v22 = *(_QWORD *)(v21 + 16);
      if (v22)
      {
        v50 = v20;
        v63 = &v12[*(int *)(v10 + 20)];
        v23 = v21;
        v62 = (id)objc_opt_self();
        v24 = v45;
        v25 = v23 + ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80));
        v49 = v23;
        swift_bridgeObjectRetain();
        v61 = *(_QWORD *)(v24 + 72);
        do
        {
          sub_1BC0FC574(v25, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
          v26 = v55;
          sub_1BC2B2570();
          v27 = v53;
          sub_1BC2B24C8();
          (*(void (**)(char *, uint64_t))(v56 + 8))(v26, v57);
          v28 = v54;
          v29 = (*(uint64_t (**)(char *, char *, uint64_t))(v64 + 16))(v54, v7, v3);
          v66 = 0;
          MEMORY[0x1E0C80A78](v29);
          *(&v42 - 2) = (uint64_t)&v66;
          v30 = objc_msgSend(v62, sel_hk_gregorianCalendar);
          v31 = v3;
          v32 = v52;
          sub_1BC2B2528();

          sub_1BC2B38CC();
          (*(void (**)(char *, uint64_t))(v59 + 8))(v32, v60);
          v33 = v66;
          v34 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, *(double *)&v9[*(int *)(v27 + 24)]);
          v35 = objc_allocWithZone(MEMORY[0x1E0D2C4A0]);
          v36 = (void *)sub_1BC2B2060();
          v37 = objc_msgSend(v35, sel_initWithStartTimeComponent_daysOfWeek_cycleIndex_cycleIntervalDays_dose_, v36, v33, 0, 0, v34);

          v38 = *(void (**)(char *, uint64_t))(v64 + 8);
          v38(v28, v31);
          v39 = v37;
          MEMORY[0x1BCCEDCF0]();
          if (*(_QWORD *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1BC2B45C8();
          sub_1BC2B4604();
          sub_1BC2B45A4();

          v40 = v51;
          v38(v51, v31);
          sub_1BC0E8594((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
          v25 += v61;
          --v22;
          v3 = v31;
          v7 = v40;
        }
        while (v22);
        swift_bridgeObjectRelease();
        v10 = v44;
        v12 = v43;
        v19 = v42;
        v20 = v50;
      }
      ++v20;
      sub_1BC0E8594((uint64_t)v12, type metadata accessor for WeekdaysAndDosages);
      if (v20 == v47)
        goto LABEL_11;
    }
    __break(1u);
    result = swift_release();
    __break(1u);
  }
  else
  {
LABEL_11:
    swift_release();
    (*(void (**)(char *, uint64_t))(v59 + 8))(v58, v60);
    return v67;
  }
  return result;
}

uint64_t sub_1BC2606D4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, char *a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, _QWORD *a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t result;
  uint64_t v36;
  void *v37;
  void *v38;
  uint64_t v39;
  id v40;
  id v41;
  void *v42;
  id v43;
  id v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  unsigned int (*v58)(uint64_t, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  char *v62;
  uint64_t v63;
  void *v64;
  id v65;
  id v66;
  id v67;
  void *v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;

  v84 = a3;
  v71 = a5;
  v75 = a4;
  v83 = a6;
  v8 = type metadata accessor for Dosage();
  v76 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v70 = (uint64_t)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC265C0C();
  v74 = v10;
  MEMORY[0x1E0C80A78](v10);
  v78 = (char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC265C6C(0);
  v13 = MEMORY[0x1E0C80A78](v12);
  v77 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v13);
  v79 = (uint64_t)&v70 - v16;
  MEMORY[0x1E0C80A78](v15);
  v80 = (uint64_t)&v70 - v17;
  v18 = (_QWORD *)sub_1BC2B39E0();
  v72 = *(v18 - 1);
  v73 = v18;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1BC2B25B8();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v70 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_1BC2B20FC();
  v81 = *(_QWORD *)(v25 - 8);
  v82 = v25;
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v70 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = *a1;
  swift_bridgeObjectRetain();
  sub_1BC2B2570();
  v28 = a2;
  sub_1BC2B24C8();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  swift_retain();
  sub_1BC2B3ED8();
  swift_release();
  if (v87 != 1)
  {
    v72 = v86;
    v36 = sub_1BC0E1D38(0, &qword_1EDA0FDE8);
    v37 = (void *)sub_1BC2B4D6C();
    v71 = v36;
    v38 = (void *)sub_1BC2B4D6C();
    v39 = v28;
    v40 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, *(double *)(v28 + *(int *)(v8 + 24)));
    v41 = objc_allocWithZone(MEMORY[0x1E0D2C4A0]);
    v42 = (void *)sub_1BC2B2060();
    v43 = objc_msgSend(v41, sel_initWithStartTimeComponent_daysOfWeek_cycleIndex_cycleIntervalDays_dose_, v42, 0, v37, v38, v40);

    v44 = v43;
    MEMORY[0x1BCCEDCF0]();
    v46 = *(_QWORD *)((v88 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v45 = *(_QWORD *)((v88 & 0xFFFFFFFFFFFFFF8) + 0x18);
    v84 = v27;
    if (v46 >= v45 >> 1)
      sub_1BC2B45C8();
    v73 = v44;
    sub_1BC2B4604();
    sub_1BC2B45A4();
    v47 = v39;
    v48 = v80;
    sub_1BC0FC574(v47, v80, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
    v49 = v76;
    v50 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v76 + 56);
    v51 = 1;
    v50(v48, 0, 1, v8);
    v52 = *(_QWORD *)(v75 + 16);
    v54 = (uint64_t)v77;
    v53 = (uint64_t)v78;
    v55 = v79;
    if (v52)
    {
      sub_1BC0FC574(v75+ ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80))+ *(_QWORD *)(v49 + 72) * (v52 - 1), v79, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      v51 = 0;
    }
    v50(v55, v51, 1, v8);
    v56 = v53 + *(int *)(v74 + 48);
    v57 = sub_1BC265C6C;
    sub_1BC0FC574(v48, v53, (uint64_t (*)(_QWORD))sub_1BC265C6C);
    sub_1BC0FC574(v55, v56, (uint64_t (*)(_QWORD))sub_1BC265C6C);
    v58 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48);
    if (v58(v53, 1, v8) == 1)
    {
      sub_1BC0E8594(v55, (uint64_t (*)(_QWORD))sub_1BC265C6C);
      sub_1BC0E8594(v48, (uint64_t (*)(_QWORD))sub_1BC265C6C);
      if (v58(v56, 1, v8) == 1)
      {
        sub_1BC0E8594(v53, (uint64_t (*)(_QWORD))sub_1BC265C6C);
        v59 = v72;
LABEL_16:
        if (v59 != 1)
        {
          v62 = v84;
          v63 = v59 - 1;
          if (__OFSUB__(v59, 1))
          {
            __break(1u);
          }
          else
          {
            v64 = (void *)sub_1BC2B4D6C();
            v65 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, v63);
            v66 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, 0);
            v67 = objc_allocWithZone(MEMORY[0x1E0D2C4A0]);
            v68 = (void *)sub_1BC2B2060();
            v69 = objc_msgSend(v67, sel_initWithStartTimeComponent_daysOfWeek_cycleIndex_cycleIntervalDays_dose_, v68, 0, v64, v65, v66);

            v57 = v69;
            MEMORY[0x1BCCEDCF0]();
            if (*(_QWORD *)((v88 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((v88 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            {
LABEL_19:
              sub_1BC2B4604();
              sub_1BC2B45A4();

              result = (*(uint64_t (**)(char *, uint64_t))(v81 + 8))(v62, v82);
              goto LABEL_21;
            }
          }
          sub_1BC2B45C8();
          goto LABEL_19;
        }
LABEL_20:

        result = (*(uint64_t (**)(char *, uint64_t))(v81 + 8))(v84, v82);
        goto LABEL_21;
      }
    }
    else
    {
      sub_1BC0FC574(v53, v54, (uint64_t (*)(_QWORD))sub_1BC265C6C);
      if (v58(v56, 1, v8) != 1)
      {
        v57 = type metadata accessor for Dosage;
        v60 = v70;
        sub_1BC0F1B94(v56, v70, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
        v61 = _s19HealthMedicationsUI6DosageV2eeoiySbAC_ACtFZ_0(v54, v60);
        sub_1BC0E8594(v60, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
        sub_1BC0E8594(v79, (uint64_t (*)(_QWORD))sub_1BC265C6C);
        sub_1BC0E8594(v80, (uint64_t (*)(_QWORD))sub_1BC265C6C);
        sub_1BC0E8594(v54, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
        sub_1BC0E8594(v53, (uint64_t (*)(_QWORD))sub_1BC265C6C);
        v59 = v72;
        if (!v61)
          goto LABEL_20;
        goto LABEL_16;
      }
      sub_1BC0E8594(v79, (uint64_t (*)(_QWORD))sub_1BC265C6C);
      sub_1BC0E8594(v80, (uint64_t (*)(_QWORD))sub_1BC265C6C);
      sub_1BC0E8594(v54, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
    }
    sub_1BC0E8594(v53, (uint64_t (*)(_QWORD))sub_1BC265C0C);
    goto LABEL_20;
  }
  sub_1BC2B39A4();
  v29 = sub_1BC2B39D4();
  v30 = sub_1BC2B48C8();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = (uint8_t *)swift_slowAlloc();
    v32 = swift_slowAlloc();
    v86 = v32;
    *(_DWORD *)v31 = 136315138;
    v33 = sub_1BC2B54F8();
    v85 = sub_1BC12540C(v33, v34, &v86);
    sub_1BC2B4FD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC0DC000, v29, v30, "%s encountered HKMedicationScheduleIntervalData with nil frequencyInterval.", v31, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v32, -1, -1);
    MEMORY[0x1BCCEF3A0](v31, -1, -1);
  }

  (*(void (**)(char *, id))(v72 + 8))(v20, v73);
  result = (*(uint64_t (**)(char *, uint64_t))(v81 + 8))(v27, v82);
LABEL_21:
  *v83 = v88;
  return result;
}

uint64_t sub_1BC260EC8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  uint64_t result;
  _QWORD *v17;

  v17 = a2;
  v3 = sub_1BC2B25B8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BC2B20FC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B2570();
  v11 = type metadata accessor for Dosage();
  sub_1BC2B24C8();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, *(double *)(a1 + *(int *)(v11 + 24)));
  v13 = objc_allocWithZone(MEMORY[0x1E0D2C4A0]);
  v14 = (void *)sub_1BC2B2060();
  v15 = objc_msgSend(v13, sel_initWithStartTimeComponent_daysOfWeek_cycleIndex_cycleIntervalDays_dose_, v14, 0, 0, 0, v12);

  result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  *v17 = v15;
  return result;
}

uint64_t sub_1BC261050@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, unsigned __int8 a3@<W3>, _QWORD *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  void (*v23)(char *, uint64_t);
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  int v29;

  v28 = a4;
  v25 = a2;
  v29 = a3;
  v5 = sub_1BC2B25B8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC2B20FC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v25 - v14;
  sub_1BC2B2570();
  v26 = type metadata accessor for Dosage();
  v27 = a1;
  sub_1BC2B24C8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
  sub_1BC0E1D38(0, &qword_1EDA0FDE8);
  v16 = (void *)sub_1BC2B4D6C();
  v17 = 0;
  if (v29 != 255)
  {
    if ((v29 & 1) != 0)
    {
LABEL_5:
      v17 = v25;
      goto LABEL_6;
    }
    v17 = 7 * v25;
    if ((unsigned __int128)(v25 * (__int128)7) >> 64 != (7 * v25) >> 63)
    {
      __break(1u);
      goto LABEL_5;
    }
  }
LABEL_6:
  v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, v17);
  v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, *(double *)(v27 + *(int *)(v26 + 24)));
  v20 = objc_allocWithZone(MEMORY[0x1E0D2C4A0]);
  v21 = (void *)sub_1BC2B2060();
  v22 = objc_msgSend(v20, sel_initWithStartTimeComponent_daysOfWeek_cycleIndex_cycleIntervalDays_dose_, v21, 0, v16, v18, v19);

  v23 = *(void (**)(char *, uint64_t))(v10 + 8);
  v23(v13, v9);
  result = ((uint64_t (*)(char *, uint64_t))v23)(v15, v9);
  *v28 = v22;
  return result;
}

uint64_t sub_1BC2612A8@<X0>(uint64_t a1@<X0>, void *a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  uint64_t result;
  id v19;
  uint64_t v20;
  _QWORD *v21;

  v21 = a3;
  v19 = a2;
  v4 = sub_1BC2B25B8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1BC2B20FC();
  v8 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B2570();
  v11 = type metadata accessor for Dosage();
  sub_1BC2B24C8();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v12 = (void *)sub_1BC2B47FC();
  v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, *(double *)(a1 + *(int *)(v11 + 24)));
  v14 = objc_allocWithZone(MEMORY[0x1E0D2C4A0]);
  v15 = v19;
  v16 = (void *)sub_1BC2B2060();
  v17 = objc_msgSend(v14, sel_initWithStartTimeComponent_daysOfWeek_cycleIndex_cycleIntervalDays_dose_, v16, 0, v15, v12, v13);

  result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v20);
  *v21 = v17;
  return result;
}

BOOL sub_1BC261458(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[2];
  void (*v25)(char *, uint64_t);
  uint64_t v26;

  v24[1] = a2;
  v2 = sub_1BC2B2594();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, &qword_1EF3F9D68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2CB80], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v24 - v10;
  type metadata accessor for WeekdaysAndDosages(0);
  sub_1BC2B2564();
  v12 = sub_1BC2B3824();
  v13 = *(void (**)(char *, uint64_t))(v3 + 8);
  v26 = v2;
  v25 = v13;
  v13(v5, v2);
  v14 = *(_QWORD *)(v12 + 16);
  v15 = sub_1BC2B3848();
  v16 = *(_QWORD *)(v15 - 8);
  if (v14)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v16 + 16))(v11, v12 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80)), v15);
    v17 = 0;
  }
  else
  {
    v17 = 1;
  }
  v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  v18(v11, v17, 1, v15);
  swift_bridgeObjectRelease();
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  if (v19(v11, 1, v15) == 1)
  {
    sub_1BC0F2444((uint64_t)v11, &qword_1EF3F9D68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2CB80]);
    v24[0] = 0;
  }
  else
  {
    v24[0] = sub_1BC2B383C();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v11, v15);
  }
  sub_1BC2B2564();
  v20 = sub_1BC2B3824();
  v25(v5, v26);
  if (*(_QWORD *)(v20 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v16 + 16))(v9, v20 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80)), v15);
    v21 = 0;
  }
  else
  {
    v21 = 1;
  }
  v18(v9, v21, 1, v15);
  swift_bridgeObjectRelease();
  if (v19(v9, 1, v15) == 1)
  {
    sub_1BC0F2444((uint64_t)v9, &qword_1EF3F9D68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2CB80]);
    v22 = 0;
  }
  else
  {
    v22 = sub_1BC2B383C();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v9, v15);
  }
  return v24[0] < v22;
}

uint64_t sub_1BC261718(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  size_t v16;
  uint64_t v17;
  uint64_t v19;
  size_t v20;

  v2 = type metadata accessor for WeekdaysAndDosages(0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    v7 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    v8 = swift_bridgeObjectRetain();
    v9 = sub_1BC1B83A4(v8);
    swift_bridgeObjectRelease();
    v10 = v6 - 1;
    if (v6 == 1)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      return 1;
    }
    v11 = *(int *)(v2 + 24);
    v12 = *(_QWORD *)(v9 + 16);
    v13 = *(_QWORD *)(v3 + 72);
    v19 = swift_bridgeObjectRetain();
    v14 = v19 + v13 + v7;
    while (1)
    {
      sub_1BC0FC574(v14, (uint64_t)v5, type metadata accessor for WeekdaysAndDosages);
      v15 = *(_QWORD *)&v5[v11];
      swift_bridgeObjectRetain();
      sub_1BC0E8594((uint64_t)v5, type metadata accessor for WeekdaysAndDosages);
      v20 = v9;
      swift_bridgeObjectRetain();
      sub_1BC130FA8(v15);
      v16 = sub_1BC1B83A4(v20);
      swift_bridgeObjectRelease();
      v17 = *(_QWORD *)(v16 + 16);
      swift_bridgeObjectRelease();
      if (v17 != v12)
        break;
      v14 += v13;
      if (!--v10)
      {
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_1BC2618A8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  char *v59;
  char *v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  unint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  BOOL v82;
  uint64_t v83;
  char v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  BOOL v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  unint64_t v107;
  char *v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;

  v2 = v1;
  v130 = type metadata accessor for Dosage();
  v123 = *(_QWORD *)(v130 - 8);
  v4 = MEMORY[0x1E0C80A78](v130);
  v120 = (uint64_t)&v115 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v4);
  v131 = (uint64_t)&v115 - v7;
  v8 = MEMORY[0x1E0C80A78](v6);
  v127 = (uint64_t)&v115 - v9;
  MEMORY[0x1E0C80A78](v8);
  v126 = (uint64_t)&v115 - v10;
  v11 = a1[1];
  result = sub_1BC2B5390();
  if (result >= v11)
  {
    if (v11 < 0)
      goto LABEL_137;
    if (v11)
      return sub_1BC2632C0(0, v11, 1, a1);
    return result;
  }
  if (v11 >= 0)
    v13 = v11;
  else
    v13 = v11 + 1;
  if (v11 < -1)
    goto LABEL_145;
  v117 = result;
  if (v11 < 2)
  {
    v17 = (char *)MEMORY[0x1E0DEE9D8];
    v122 = MEMORY[0x1E0DEE9D8]
         + ((*(unsigned __int8 *)(v123 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v123 + 80));
    v116 = MEMORY[0x1E0DEE9D8];
    if (v11 != 1)
    {
      v19 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_103:
      v108 = v17;
      if (v19 >= 2)
      {
        v109 = *a1;
        do
        {
          v110 = v19 - 2;
          if (v19 < 2)
            goto LABEL_132;
          if (!v109)
            goto LABEL_144;
          v111 = *(_QWORD *)&v108[16 * v110 + 32];
          v112 = *(_QWORD *)&v108[16 * v19 + 24];
          sub_1BC2639FC(v109 + *(_QWORD *)(v123 + 72) * v111, v109 + *(_QWORD *)(v123 + 72) * *(_QWORD *)&v108[16 * v19 + 16], v109 + *(_QWORD *)(v123 + 72) * v112, v122);
          if (v2)
            break;
          if (v112 < v111)
            goto LABEL_133;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v108 = sub_1BC26E1A0((uint64_t)v108);
          if (v110 >= *((_QWORD *)v108 + 2))
            goto LABEL_134;
          v113 = &v108[16 * v110 + 32];
          *(_QWORD *)v113 = v111;
          *((_QWORD *)v113 + 1) = v112;
          v114 = *((_QWORD *)v108 + 2);
          if (v19 > v114)
            goto LABEL_135;
          memmove(&v108[16 * v19 + 16], &v108[16 * v19 + 32], 16 * (v114 - v19));
          *((_QWORD *)v108 + 2) = v114 - 1;
          v19 = v114 - 1;
        }
        while (v114 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v116 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v14 = v13 >> 1;
    v15 = sub_1BC2B45F8();
    *(_QWORD *)(v15 + 16) = v14;
    v16 = *(unsigned __int8 *)(v123 + 80);
    v116 = v15;
    v122 = v15 + ((v16 + 32) & ~v16);
  }
  v18 = 0;
  v17 = (char *)MEMORY[0x1E0DEE9D8];
  v129 = a1;
  while (1)
  {
    v20 = v18;
    v21 = v18 + 1;
    if (v18 + 1 >= v11)
    {
      v30 = v18 + 1;
      v37 = v18;
    }
    else
    {
      v119 = *a1;
      v22 = v119;
      v23 = *(_QWORD *)(v123 + 72);
      v133 = v23;
      v24 = v126;
      sub_1BC0FC574(v119 + v23 * v21, v126, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      v25 = v22 + v23 * v20;
      v26 = v127;
      sub_1BC0FC574(v25, v127, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      sub_1BC2B23F0();
      v27 = *(int *)(v130 + 20);
      v132 = v11;
      v128 = v26 + v27;
      v28 = sub_1BC0E519C(qword_1EDA0EA98, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
      v11 = v132;
      v125 = v28;
      LODWORD(v128) = sub_1BC2B4418();
      sub_1BC0E8594(v26, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      sub_1BC0E8594(v24, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      v29 = v133;
      v121 = v20;
      v30 = v20 + 2;
      if (v20 + 2 < v11)
      {
        v118 = v17;
        v124 = v133 * v21;
        v31 = v119;
        v32 = v133 * v30;
        while (1)
        {
          v33 = v30;
          v34 = v126;
          sub_1BC0FC574(v31 + v32, v126, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
          v35 = v127;
          sub_1BC0FC574(v31 + v124, v127, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
          v36 = sub_1BC2B4418();
          sub_1BC0E8594(v35, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
          sub_1BC0E8594(v34, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
          if (((v128 ^ v36) & 1) != 0)
            break;
          v30 = v33 + 1;
          v29 = v133;
          v31 += v133;
          v11 = v132;
          if (v132 == v33 + 1)
          {
            v30 = v132;
            a1 = v129;
            v17 = v118;
            goto LABEL_23;
          }
        }
        a1 = v129;
        v17 = v118;
        v30 = v33;
        v11 = v132;
        v29 = v133;
      }
LABEL_23:
      v37 = v121;
      if ((v128 & 1) != 0)
      {
        if (v30 < v121)
          goto LABEL_138;
        if (v121 < v30)
        {
          v118 = v17;
          v115 = v2;
          v38 = 0;
          v39 = v29 * (v30 - 1);
          v40 = v30 * v29;
          v41 = v121;
          v42 = v121 * v29;
          do
          {
            if (v41 != v30 + v38 - 1)
            {
              v43 = v119;
              if (!v119)
                goto LABEL_143;
              v44 = v119 + v42;
              sub_1BC0F1B94(v119 + v42, v120, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
              if (v42 < v39 || v44 >= v43 + v40)
              {
                swift_arrayInitWithTakeFrontToBack();
              }
              else if (v42 != v39)
              {
                swift_arrayInitWithTakeBackToFront();
              }
              sub_1BC0F1B94(v120, v43 + v39, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
              v29 = v133;
            }
            ++v41;
            --v38;
            v39 -= v29;
            v40 -= v29;
            v42 += v29;
          }
          while (v41 < v30 + v38);
          v2 = v115;
          a1 = v129;
          v17 = v118;
          v37 = v121;
          v11 = v132;
        }
      }
    }
    if (v30 < v11)
    {
      if (__OFSUB__(v30, v37))
        goto LABEL_136;
      if (v30 - v37 < v117)
        break;
    }
LABEL_55:
    if (v30 < v37)
      goto LABEL_131;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v17 = sub_1BC26DEB8(0, *((_QWORD *)v17 + 2) + 1, 1, v17);
    v58 = *((_QWORD *)v17 + 2);
    v57 = *((_QWORD *)v17 + 3);
    v19 = v58 + 1;
    if (v58 >= v57 >> 1)
      v17 = sub_1BC26DEB8((char *)(v57 > 1), v58 + 1, 1, v17);
    *((_QWORD *)v17 + 2) = v19;
    v59 = v17 + 32;
    v60 = &v17[16 * v58 + 32];
    *(_QWORD *)v60 = v37;
    *((_QWORD *)v60 + 1) = v30;
    v128 = v30;
    if (v58)
    {
      while (1)
      {
        v61 = v19 - 1;
        if (v19 >= 4)
        {
          v66 = &v59[16 * v19];
          v67 = *((_QWORD *)v66 - 8);
          v68 = *((_QWORD *)v66 - 7);
          v72 = __OFSUB__(v68, v67);
          v69 = v68 - v67;
          if (v72)
            goto LABEL_120;
          v71 = *((_QWORD *)v66 - 6);
          v70 = *((_QWORD *)v66 - 5);
          v72 = __OFSUB__(v70, v71);
          v64 = v70 - v71;
          v65 = v72;
          if (v72)
            goto LABEL_121;
          v73 = v19 - 2;
          v74 = &v59[16 * v19 - 32];
          v76 = *(_QWORD *)v74;
          v75 = *((_QWORD *)v74 + 1);
          v72 = __OFSUB__(v75, v76);
          v77 = v75 - v76;
          if (v72)
            goto LABEL_123;
          v72 = __OFADD__(v64, v77);
          v78 = v64 + v77;
          if (v72)
            goto LABEL_126;
          if (v78 >= v69)
          {
            v96 = &v59[16 * v61];
            v98 = *(_QWORD *)v96;
            v97 = *((_QWORD *)v96 + 1);
            v72 = __OFSUB__(v97, v98);
            v99 = v97 - v98;
            if (v72)
              goto LABEL_130;
            v89 = v64 < v99;
            goto LABEL_92;
          }
        }
        else
        {
          if (v19 != 3)
          {
            v90 = *((_QWORD *)v17 + 4);
            v91 = *((_QWORD *)v17 + 5);
            v72 = __OFSUB__(v91, v90);
            v83 = v91 - v90;
            v84 = v72;
            goto LABEL_86;
          }
          v63 = *((_QWORD *)v17 + 4);
          v62 = *((_QWORD *)v17 + 5);
          v72 = __OFSUB__(v62, v63);
          v64 = v62 - v63;
          v65 = v72;
        }
        if ((v65 & 1) != 0)
          goto LABEL_122;
        v73 = v19 - 2;
        v79 = &v59[16 * v19 - 32];
        v81 = *(_QWORD *)v79;
        v80 = *((_QWORD *)v79 + 1);
        v82 = __OFSUB__(v80, v81);
        v83 = v80 - v81;
        v84 = v82;
        if (v82)
          goto LABEL_125;
        v85 = &v59[16 * v61];
        v87 = *(_QWORD *)v85;
        v86 = *((_QWORD *)v85 + 1);
        v72 = __OFSUB__(v86, v87);
        v88 = v86 - v87;
        if (v72)
          goto LABEL_128;
        if (__OFADD__(v83, v88))
          goto LABEL_129;
        if (v83 + v88 >= v64)
        {
          v89 = v64 < v88;
LABEL_92:
          if (v89)
            v61 = v73;
          goto LABEL_94;
        }
LABEL_86:
        if ((v84 & 1) != 0)
          goto LABEL_124;
        v92 = &v59[16 * v61];
        v94 = *(_QWORD *)v92;
        v93 = *((_QWORD *)v92 + 1);
        v72 = __OFSUB__(v93, v94);
        v95 = v93 - v94;
        if (v72)
          goto LABEL_127;
        if (v95 < v83)
          goto LABEL_14;
LABEL_94:
        v100 = v61 - 1;
        if (v61 - 1 >= v19)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        v101 = *a1;
        if (!*a1)
          goto LABEL_142;
        v102 = v17;
        v103 = &v59[16 * v100];
        v104 = *(_QWORD *)v103;
        v105 = &v59[16 * v61];
        v106 = *((_QWORD *)v105 + 1);
        sub_1BC2639FC(v101 + *(_QWORD *)(v123 + 72) * *(_QWORD *)v103, v101 + *(_QWORD *)(v123 + 72) * *(_QWORD *)v105, v101 + *(_QWORD *)(v123 + 72) * v106, v122);
        if (v2)
          goto LABEL_114;
        if (v106 < v104)
          goto LABEL_117;
        if (v61 > *((_QWORD *)v102 + 2))
          goto LABEL_118;
        *(_QWORD *)v103 = v104;
        *(_QWORD *)&v59[16 * v100 + 8] = v106;
        v107 = *((_QWORD *)v102 + 2);
        if (v61 >= v107)
          goto LABEL_119;
        v17 = v102;
        v19 = v107 - 1;
        memmove(&v59[16 * v61], v105 + 16, 16 * (v107 - 1 - v61));
        *((_QWORD *)v102 + 2) = v107 - 1;
        a1 = v129;
        if (v107 <= 2)
          goto LABEL_14;
      }
    }
    v19 = 1;
LABEL_14:
    v11 = a1[1];
    v18 = v128;
    if (v128 >= v11)
      goto LABEL_103;
  }
  if (__OFADD__(v37, v117))
    goto LABEL_139;
  if (v37 + v117 >= v11)
    v45 = v11;
  else
    v45 = v37 + v117;
  if (v45 >= v37)
  {
    if (v30 != v45)
    {
      v121 = v37;
      v118 = v17;
      v115 = v2;
      sub_1BC2B23F0();
      v46 = *(_QWORD *)(v123 + 72);
      v133 = v46 * (v30 - 1);
      v124 = v46;
      v47 = v30 * v46;
      v119 = v45;
      do
      {
        v49 = 0;
        v50 = v121;
        v128 = v30;
        v125 = v47;
        while (1)
        {
          v132 = v50;
          v51 = *a1;
          v52 = v47 + v49 + *a1;
          v53 = v126;
          sub_1BC0FC574(v52, v126, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
          v54 = v127;
          sub_1BC0FC574(v133 + v49 + v51, v127, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
          sub_1BC0E519C(qword_1EDA0EA98, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
          LOBYTE(v51) = sub_1BC2B4418();
          sub_1BC0E8594(v54, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
          sub_1BC0E8594(v53, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
          if ((v51 & 1) == 0)
            break;
          v55 = *a1;
          if (!*a1)
            goto LABEL_141;
          v47 = v125;
          v56 = v55 + v133 + v49;
          sub_1BC0F1B94(v55 + v125 + v49, v131, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
          swift_arrayInitWithTakeFrontToBack();
          sub_1BC0F1B94(v131, v56, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
          v49 -= v124;
          v50 = v132 + 1;
          v48 = v128;
          a1 = v129;
          if (v128 == v132 + 1)
            goto LABEL_48;
        }
        v48 = v128;
        v47 = v125;
LABEL_48:
        v30 = v48 + 1;
        v133 += v124;
        v47 += v124;
      }
      while (v30 != v119);
      v30 = v119;
      v2 = v115;
      v17 = v118;
      v37 = v121;
    }
    goto LABEL_55;
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  result = sub_1BC2B52AC();
  __break(1u);
  return result;
}

uint64_t sub_1BC262318(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t, uint64_t, uint64_t);
  unsigned int (*v60)(uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  void (*v85)(char *, uint64_t);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v91)(char *, uint64_t, uint64_t);
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unsigned int v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  BOOL v118;
  unint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  BOOL v128;
  uint64_t v129;
  char v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  BOOL v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  char *v147;
  char *v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  uint64_t v154;
  unint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  unint64_t v160;
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  char *v169;
  char *v170;
  uint64_t v171;
  unint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t *v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;

  v2 = v1;
  v190 = sub_1BC2B2594();
  v181 = *(_QWORD *)(v190 - 8);
  MEMORY[0x1E0C80A78](v190);
  v189 = (char *)&v161 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, &qword_1EF3F9D68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2CB80], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v6 = MEMORY[0x1E0C80A78](v5);
  v176 = (char *)&v161 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v161 - v9;
  v11 = MEMORY[0x1E0C80A78](v8);
  v170 = (char *)&v161 - v12;
  MEMORY[0x1E0C80A78](v11);
  v169 = (char *)&v161 - v13;
  v191 = type metadata accessor for WeekdaysAndDosages(0);
  v173 = *(_QWORD *)(v191 - 8);
  v14 = MEMORY[0x1E0C80A78](v191);
  v168 = (uint64_t)&v161 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v183 = (uint64_t)&v161 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v192 = (uint64_t)&v161 - v19;
  v20 = MEMORY[0x1E0C80A78](v18);
  v187 = (uint64_t)&v161 - v21;
  v22 = MEMORY[0x1E0C80A78](v20);
  v174 = (uint64_t)&v161 - v23;
  v24 = MEMORY[0x1E0C80A78](v22);
  v26 = (char *)&v161 - v25;
  v27 = MEMORY[0x1E0C80A78](v24);
  v29 = (char *)&v161 - v28;
  MEMORY[0x1E0C80A78](v27);
  v31 = (char *)&v161 - v30;
  v188 = a1;
  v32 = a1[1];
  result = sub_1BC2B5390();
  if (result >= v32)
  {
    if (v32 < 0)
      goto LABEL_169;
    if (v32)
      return sub_1BC263544(0, v32, 1, v188);
    return result;
  }
  if (v32 >= 0)
    v34 = v32;
  else
    v34 = v32 + 1;
  if (v32 < -1)
    goto LABEL_177;
  v167 = v26;
  v164 = result;
  if (v32 < 2)
  {
    v38 = (char *)MEMORY[0x1E0DEE9D8];
    v172 = MEMORY[0x1E0DEE9D8]
         + ((*(unsigned __int8 *)(v173 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v173 + 80));
    v161 = MEMORY[0x1E0DEE9D8];
    if (v32 != 1)
    {
      v103 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_133:
      v175 = v2;
      if (v103 >= 2)
      {
        v154 = *v188;
        do
        {
          v155 = v103 - 2;
          if (v103 < 2)
            goto LABEL_163;
          if (!v154)
            goto LABEL_176;
          v156 = *(_QWORD *)&v38[16 * v155 + 32];
          v157 = *(_QWORD *)&v38[16 * v103 + 24];
          v158 = v175;
          sub_1BC263F24(v154 + *(_QWORD *)(v173 + 72) * v156, v154 + *(_QWORD *)(v173 + 72) * *(_QWORD *)&v38[16 * v103 + 16], v154 + *(_QWORD *)(v173 + 72) * v157, v172);
          v175 = v158;
          if (v158)
            break;
          if (v157 < v156)
            goto LABEL_165;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v38 = sub_1BC26E1A0((uint64_t)v38);
          if (v155 >= *((_QWORD *)v38 + 2))
            goto LABEL_166;
          v159 = &v38[16 * v155 + 32];
          *(_QWORD *)v159 = v156;
          *((_QWORD *)v159 + 1) = v157;
          v160 = *((_QWORD *)v38 + 2);
          if (v103 > v160)
            goto LABEL_167;
          memmove(&v38[16 * v103 + 16], &v38[16 * v103 + 32], 16 * (v160 - v103));
          *((_QWORD *)v38 + 2) = v160 - 1;
          v103 = v160 - 1;
        }
        while (v160 > 2);
      }
LABEL_146:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v161 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v162 = v31;
    v163 = v29;
    v175 = v1;
  }
  else
  {
    v162 = v31;
    v163 = v29;
    v175 = v1;
    v35 = v34 >> 1;
    v36 = sub_1BC2B45F8();
    *(_QWORD *)(v36 + 16) = v35;
    v37 = *(unsigned __int8 *)(v173 + 80);
    v161 = v36;
    v172 = v36 + ((v37 + 32) & ~v37);
  }
  v39 = 0;
  v38 = (char *)MEMORY[0x1E0DEE9D8];
  v180 = v10;
  while (1)
  {
    v40 = v39;
    v41 = v39 + 1;
    v171 = v39;
    if (v39 + 1 >= v32)
    {
      v48 = v39 + 1;
    }
    else
    {
      v42 = *v188;
      v43 = *(_QWORD *)(v173 + 72);
      v44 = (uint64_t)v162;
      sub_1BC0FC574(*v188 + v43 * v41, (uint64_t)v162, type metadata accessor for WeekdaysAndDosages);
      v177 = v42;
      v186 = v43;
      v45 = v42 + v43 * v40;
      v46 = (uint64_t)v163;
      sub_1BC0FC574(v45, (uint64_t)v163, type metadata accessor for WeekdaysAndDosages);
      v47 = v175;
      LODWORD(v185) = sub_1BC261458(v44, v46);
      v175 = v47;
      if (v47)
      {
        sub_1BC0E8594(v46, type metadata accessor for WeekdaysAndDosages);
        sub_1BC0E8594(v44, type metadata accessor for WeekdaysAndDosages);
        goto LABEL_146;
      }
      sub_1BC0E8594(v46, type metadata accessor for WeekdaysAndDosages);
      sub_1BC0E8594(v44, type metadata accessor for WeekdaysAndDosages);
      v48 = v40 + 2;
      if (v40 + 2 < v32)
      {
        v165 = v38;
        v49 = v177;
        v178 = v186 * v48;
        v179 = v186 * v41;
        v50 = (uint64_t)v167;
        v184 = v32;
        while (1)
        {
          v182 = v48;
          sub_1BC0FC574(v49 + v178, v50, type metadata accessor for WeekdaysAndDosages);
          sub_1BC0FC574(v49 + v179, v174, type metadata accessor for WeekdaysAndDosages);
          v51 = v189;
          sub_1BC2B2564();
          v52 = sub_1BC2B3824();
          v53 = *(void (**)(char *, uint64_t))(v181 + 8);
          v53(v51, v190);
          v54 = *(_QWORD *)(v52 + 16);
          v55 = sub_1BC2B3848();
          v56 = *(_QWORD *)(v55 - 8);
          if (v54)
          {
            v57 = (uint64_t)v169;
            (*(void (**)(char *, unint64_t, uint64_t))(v56 + 16))(v169, v52 + ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80)), v55);
            v58 = 0;
          }
          else
          {
            v58 = 1;
            v57 = (uint64_t)v169;
          }
          v59 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v56 + 56);
          v59(v57, v58, 1, v55);
          swift_bridgeObjectRelease();
          v60 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48);
          if (v60(v57, 1, v55) == 1)
          {
            sub_1BC0F2444(v57, &qword_1EF3F9D68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2CB80]);
            v61 = 0;
          }
          else
          {
            v61 = sub_1BC2B383C();
            (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v57, v55);
          }
          v62 = v189;
          sub_1BC2B2564();
          v63 = sub_1BC2B3824();
          v53(v62, v190);
          if (*(_QWORD *)(v63 + 16))
          {
            v64 = (uint64_t)v170;
            (*(void (**)(char *, unint64_t, uint64_t))(v56 + 16))(v170, v63 + ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80)), v55);
            v65 = 0;
          }
          else
          {
            v65 = 1;
            v64 = (uint64_t)v170;
          }
          v50 = (uint64_t)v167;
          v59(v64, v65, 1, v55);
          swift_bridgeObjectRelease();
          if (v60(v64, 1, v55) == 1)
          {
            sub_1BC0F2444(v64, &qword_1EF3F9D68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2CB80]);
            v66 = 0;
          }
          else
          {
            v66 = sub_1BC2B383C();
            (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v64, v55);
          }
          v32 = v184;
          sub_1BC0E8594(v174, type metadata accessor for WeekdaysAndDosages);
          sub_1BC0E8594(v50, type metadata accessor for WeekdaysAndDosages);
          if ((v185 & 1) == v61 >= v66)
            break;
          v48 = v182 + 1;
          v49 += v186;
          v10 = v180;
          if (v32 == v182 + 1)
          {
            v48 = v32;
            v38 = v165;
            goto LABEL_36;
          }
        }
        v10 = v180;
        v38 = v165;
        v48 = v182;
LABEL_36:
        v40 = v171;
      }
      v67 = v177;
      if ((v185 & 1) != 0)
      {
        if (v48 < v40)
          goto LABEL_172;
        if (v40 < v48)
        {
          v184 = v32;
          v165 = v38;
          v68 = 0;
          v69 = v186 * (v48 - 1);
          v70 = v48 * v186;
          v71 = v40;
          v72 = v40 * v186;
          do
          {
            if (v71 != v48 + v68 - 1)
            {
              if (!v67)
                goto LABEL_175;
              v185 = v67 + v69;
              sub_1BC0F1B94(v67 + v72, v168, type metadata accessor for WeekdaysAndDosages);
              if (v72 < v69 || v67 + v72 >= (unint64_t)(v67 + v70))
              {
                v73 = v185;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                v73 = v185;
                if (v72 != v69)
                  swift_arrayInitWithTakeBackToFront();
              }
              sub_1BC0F1B94(v168, v73, type metadata accessor for WeekdaysAndDosages);
              v40 = v171;
              v67 = v177;
            }
            ++v71;
            --v68;
            v69 -= v186;
            v70 -= v186;
            v72 += v186;
          }
          while (v71 < v48 + v68);
          v38 = v165;
          v32 = v184;
        }
      }
    }
    if (v48 < v32)
    {
      if (__OFSUB__(v48, v40))
        goto LABEL_168;
      if (v48 - v40 < v164)
        break;
    }
LABEL_81:
    if (v48 < v40)
      goto LABEL_164;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v182 = v48;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v38 = sub_1BC26DEB8(0, *((_QWORD *)v38 + 2) + 1, 1, v38);
    v102 = *((_QWORD *)v38 + 2);
    v101 = *((_QWORD *)v38 + 3);
    v103 = v102 + 1;
    if (v102 >= v101 >> 1)
      v38 = sub_1BC26DEB8((char *)(v101 > 1), v102 + 1, 1, v38);
    *((_QWORD *)v38 + 2) = v103;
    v104 = v38 + 32;
    v105 = &v38[16 * v102 + 32];
    v106 = v182;
    *(_QWORD *)v105 = v40;
    *((_QWORD *)v105 + 1) = v106;
    if (v102)
    {
      while (1)
      {
        v107 = v103 - 1;
        if (v103 >= 4)
        {
          v112 = &v104[16 * v103];
          v113 = *((_QWORD *)v112 - 8);
          v114 = *((_QWORD *)v112 - 7);
          v118 = __OFSUB__(v114, v113);
          v115 = v114 - v113;
          if (v118)
            goto LABEL_152;
          v117 = *((_QWORD *)v112 - 6);
          v116 = *((_QWORD *)v112 - 5);
          v118 = __OFSUB__(v116, v117);
          v110 = v116 - v117;
          v111 = v118;
          if (v118)
            goto LABEL_153;
          v119 = v103 - 2;
          v120 = &v104[16 * v103 - 32];
          v122 = *(_QWORD *)v120;
          v121 = *((_QWORD *)v120 + 1);
          v118 = __OFSUB__(v121, v122);
          v123 = v121 - v122;
          if (v118)
            goto LABEL_155;
          v118 = __OFADD__(v110, v123);
          v124 = v110 + v123;
          if (v118)
            goto LABEL_158;
          if (v124 >= v115)
          {
            v142 = &v104[16 * v107];
            v144 = *(_QWORD *)v142;
            v143 = *((_QWORD *)v142 + 1);
            v118 = __OFSUB__(v143, v144);
            v145 = v143 - v144;
            if (v118)
              goto LABEL_162;
            v135 = v110 < v145;
            goto LABEL_118;
          }
        }
        else
        {
          if (v103 != 3)
          {
            v136 = *((_QWORD *)v38 + 4);
            v137 = *((_QWORD *)v38 + 5);
            v118 = __OFSUB__(v137, v136);
            v129 = v137 - v136;
            v130 = v118;
            goto LABEL_112;
          }
          v109 = *((_QWORD *)v38 + 4);
          v108 = *((_QWORD *)v38 + 5);
          v118 = __OFSUB__(v108, v109);
          v110 = v108 - v109;
          v111 = v118;
        }
        if ((v111 & 1) != 0)
          goto LABEL_154;
        v119 = v103 - 2;
        v125 = &v104[16 * v103 - 32];
        v127 = *(_QWORD *)v125;
        v126 = *((_QWORD *)v125 + 1);
        v128 = __OFSUB__(v126, v127);
        v129 = v126 - v127;
        v130 = v128;
        if (v128)
          goto LABEL_157;
        v131 = &v104[16 * v107];
        v133 = *(_QWORD *)v131;
        v132 = *((_QWORD *)v131 + 1);
        v118 = __OFSUB__(v132, v133);
        v134 = v132 - v133;
        if (v118)
          goto LABEL_160;
        if (__OFADD__(v129, v134))
          goto LABEL_161;
        if (v129 + v134 >= v110)
        {
          v135 = v110 < v134;
LABEL_118:
          if (v135)
            v107 = v119;
          goto LABEL_120;
        }
LABEL_112:
        if ((v130 & 1) != 0)
          goto LABEL_156;
        v138 = &v104[16 * v107];
        v140 = *(_QWORD *)v138;
        v139 = *((_QWORD *)v138 + 1);
        v118 = __OFSUB__(v139, v140);
        v141 = v139 - v140;
        if (v118)
          goto LABEL_159;
        if (v141 < v129)
          goto LABEL_129;
LABEL_120:
        v146 = v107 - 1;
        if (v107 - 1 >= v103)
        {
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          __break(1u);
LABEL_167:
          __break(1u);
LABEL_168:
          __break(1u);
LABEL_169:
          __break(1u);
LABEL_170:
          __break(1u);
          goto LABEL_171;
        }
        if (!*v188)
          goto LABEL_174;
        v147 = v38;
        v148 = &v104[16 * v146];
        v149 = *(_QWORD *)v148;
        v150 = &v104[16 * v107];
        v151 = *((_QWORD *)v150 + 1);
        v152 = v175;
        sub_1BC263F24(*v188 + *(_QWORD *)(v173 + 72) * *(_QWORD *)v148, *v188 + *(_QWORD *)(v173 + 72) * *(_QWORD *)v150, *v188 + *(_QWORD *)(v173 + 72) * v151, v172);
        v175 = v152;
        if (v152)
          goto LABEL_146;
        if (v151 < v149)
          goto LABEL_149;
        if (v107 > *((_QWORD *)v147 + 2))
          goto LABEL_150;
        *(_QWORD *)v148 = v149;
        *(_QWORD *)&v104[16 * v146 + 8] = v151;
        v153 = *((_QWORD *)v147 + 2);
        if (v107 >= v153)
          goto LABEL_151;
        v38 = v147;
        v103 = v153 - 1;
        memmove(&v104[16 * v107], v150 + 16, 16 * (v153 - 1 - v107));
        *((_QWORD *)v147 + 2) = v153 - 1;
        if (v153 <= 2)
          goto LABEL_129;
      }
    }
    v103 = 1;
LABEL_129:
    v32 = v188[1];
    v39 = v182;
    if (v182 >= v32)
    {
      v2 = v175;
      goto LABEL_133;
    }
  }
  if (__OFADD__(v40, v164))
    goto LABEL_170;
  if (v40 + v164 >= v32)
    v74 = v32;
  else
    v74 = v40 + v164;
  if (v74 >= v40)
  {
    if (v48 != v74)
    {
      v165 = v38;
      v75 = *(_QWORD *)(v173 + 72);
      v76 = v75 * (v48 - 1);
      v177 = v75;
      v77 = v48 * v75;
      v166 = v74;
      do
      {
        v79 = 0;
        v80 = v40;
        v178 = v77;
        v179 = v76;
        v182 = v48;
        while (1)
        {
          v81 = *v188;
          v82 = v77 + v79;
          sub_1BC0FC574(v82 + *v188, v187, type metadata accessor for WeekdaysAndDosages);
          v184 = v76 + v79;
          sub_1BC0FC574(v76 + v79 + v81, v192, type metadata accessor for WeekdaysAndDosages);
          v83 = v189;
          sub_1BC2B2564();
          v84 = sub_1BC2B3824();
          v85 = *(void (**)(char *, uint64_t))(v181 + 8);
          v85(v83, v190);
          v86 = *(_QWORD *)(v84 + 16);
          v87 = sub_1BC2B3848();
          v88 = *(_QWORD *)(v87 - 8);
          v185 = v82;
          if (v86)
          {
            (*(void (**)(char *, unint64_t, uint64_t))(v88 + 16))(v10, v84 + ((*(unsigned __int8 *)(v88 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80)), v87);
            v89 = 0;
          }
          else
          {
            v89 = 1;
          }
          v90 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v88 + 56);
          v90(v10, v89, 1, v87);
          swift_bridgeObjectRelease();
          v91 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v88 + 48);
          if (v91(v10, 1, v87) == 1)
          {
            sub_1BC0F2444((uint64_t)v10, &qword_1EF3F9D68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2CB80]);
            v186 = 0;
          }
          else
          {
            v186 = sub_1BC2B383C();
            (*(void (**)(char *, uint64_t))(v88 + 8))(v10, v87);
          }
          v92 = v189;
          sub_1BC2B2564();
          v93 = sub_1BC2B3824();
          v85(v92, v190);
          if (*(_QWORD *)(v93 + 16))
          {
            v94 = (uint64_t)v176;
            (*(void (**)(char *, unint64_t, uint64_t))(v88 + 16))(v176, v93 + ((*(unsigned __int8 *)(v88 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80)), v87);
            v95 = 0;
          }
          else
          {
            v95 = 1;
            v94 = (uint64_t)v176;
          }
          v90((char *)v94, v95, 1, v87);
          swift_bridgeObjectRelease();
          v96 = v91((char *)v94, 1, v87);
          v10 = v180;
          if (v96 == 1)
          {
            sub_1BC0F2444(v94, &qword_1EF3F9D68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2CB80]);
            v97 = 0;
          }
          else
          {
            v97 = sub_1BC2B383C();
            (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v94, v87);
          }
          v77 = v178;
          v76 = v179;
          sub_1BC0E8594(v192, type metadata accessor for WeekdaysAndDosages);
          sub_1BC0E8594(v187, type metadata accessor for WeekdaysAndDosages);
          if (v186 >= v97)
            break;
          v98 = *v188;
          if (!*v188)
            goto LABEL_173;
          v99 = v98 + v76 + v79;
          sub_1BC0F1B94(v98 + v77 + v79, v183, type metadata accessor for WeekdaysAndDosages);
          swift_arrayInitWithTakeFrontToBack();
          sub_1BC0F1B94(v183, v99, type metadata accessor for WeekdaysAndDosages);
          v79 -= v177;
          ++v80;
          v78 = v182;
          if (v182 == v80)
            goto LABEL_62;
        }
        v78 = v182;
LABEL_62:
        v48 = v78 + 1;
        v76 += v177;
        v77 += v177;
        v40 = v171;
      }
      while (v48 != v166);
      v48 = v166;
      v38 = v165;
    }
    goto LABEL_81;
  }
LABEL_171:
  __break(1u);
LABEL_172:
  __break(1u);
LABEL_173:
  __break(1u);
LABEL_174:
  __break(1u);
LABEL_175:
  __break(1u);
LABEL_176:
  __break(1u);
LABEL_177:
  result = sub_1BC2B52AC();
  __break(1u);
  return result;
}

uint64_t sub_1BC2632C0(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;

  v29 = a1;
  v36 = type metadata accessor for Dosage();
  v7 = *(_QWORD *)(v36 - 8);
  v8 = MEMORY[0x1E0C80A78](v36);
  v37 = (uint64_t)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v31 = (uint64_t)&v27 - v11;
  result = MEMORY[0x1E0C80A78](v10);
  v30 = (uint64_t)&v27 - v13;
  v35 = a3;
  v28 = a2;
  if (a3 != a2)
  {
    sub_1BC2B23F0();
    v14 = *(_QWORD *)(v7 + 72);
    v15 = v14 * (v35 - 1);
    v32 = v14;
    v16 = v14 * v35;
    v38 = a4;
LABEL_5:
    v17 = 0;
    v39 = v29;
    v33 = v16;
    v34 = v15;
    while (1)
    {
      v18 = *a4;
      v19 = v16 + v17 + *a4;
      v20 = v30;
      sub_1BC0FC574(v19, v30, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      v21 = v15 + v17 + v18;
      v22 = v31;
      sub_1BC0FC574(v21, v31, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      sub_1BC0E519C(qword_1EDA0EA98, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
      a4 = v38;
      LOBYTE(v18) = sub_1BC2B4418();
      v23 = v22;
      v15 = v34;
      sub_1BC0E8594(v23, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      v24 = v20;
      v16 = v33;
      result = sub_1BC0E8594(v24, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      if ((v18 & 1) == 0)
      {
LABEL_4:
        v15 += v32;
        v16 += v32;
        if (++v35 == v28)
          return result;
        goto LABEL_5;
      }
      v25 = *a4;
      if (!*a4)
        break;
      v26 = v25 + v15 + v17;
      sub_1BC0F1B94(v25 + v16 + v17, v37, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      swift_arrayInitWithTakeFrontToBack();
      result = sub_1BC0F1B94(v37, v26, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
      v17 -= v32;
      ++v39;
      a4 = v38;
      if (v35 == v39)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC263544(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  unsigned int (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v55 = a4;
  v44 = a1;
  v57 = sub_1BC2B2594();
  v48 = *(_QWORD *)(v57 - 8);
  MEMORY[0x1E0C80A78](v57);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, &qword_1EF3F9D68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2CB80], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v47 = (char *)&v42 - v12;
  v59 = type metadata accessor for WeekdaysAndDosages(0);
  v13 = MEMORY[0x1E0C80A78](v59);
  v52 = (uint64_t)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v13);
  v60 = (uint64_t)&v42 - v16;
  result = MEMORY[0x1E0C80A78](v15);
  v20 = (char *)&v42 - v19;
  v51 = a3;
  v43 = a2;
  if (a3 != a2)
  {
    v21 = *(_QWORD *)(v18 + 72);
    v22 = v21 * (v51 - 1);
    v49 = v21;
    v58 = v21 * v51;
    v45 = (char *)&v42 - v19;
    v46 = v11;
LABEL_5:
    v23 = 0;
    v24 = v44;
    v50 = v22;
    while (1)
    {
      v25 = *v55;
      v54 = v58 + v23;
      sub_1BC0FC574(v58 + v23 + v25, (uint64_t)v20, type metadata accessor for WeekdaysAndDosages);
      v53 = v22 + v23;
      sub_1BC0FC574(v22 + v23 + v25, v60, type metadata accessor for WeekdaysAndDosages);
      sub_1BC2B2564();
      v26 = sub_1BC2B3824();
      v27 = *(void (**)(char *, uint64_t))(v48 + 8);
      v27(v7, v57);
      v28 = *(_QWORD *)(v26 + 16);
      v29 = sub_1BC2B3848();
      v30 = *(_QWORD *)(v29 - 8);
      if (v28)
      {
        v31 = v47;
        (*(void (**)(char *, unint64_t, uint64_t))(v30 + 16))(v47, v26 + ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80)), v29);
        v32 = 0;
      }
      else
      {
        v32 = 1;
        v31 = v47;
      }
      v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56);
      v33(v31, v32, 1, v29);
      swift_bridgeObjectRelease();
      v34 = (uint64_t)v31;
      v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48);
      if (v35(v34, 1, v29) == 1)
      {
        sub_1BC0F2444(v34, &qword_1EF3F9D68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2CB80]);
        v56 = 0;
      }
      else
      {
        v56 = sub_1BC2B383C();
        (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v34, v29);
      }
      sub_1BC2B2564();
      v36 = sub_1BC2B3824();
      v27(v7, v57);
      if (*(_QWORD *)(v36 + 16))
      {
        v37 = (uint64_t)v46;
        (*(void (**)(char *, unint64_t, uint64_t))(v30 + 16))(v46, v36 + ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80)), v29);
        v38 = 0;
      }
      else
      {
        v38 = 1;
        v37 = (uint64_t)v46;
      }
      v33((char *)v37, v38, 1, v29);
      swift_bridgeObjectRelease();
      if (v35(v37, 1, v29) == 1)
      {
        sub_1BC0F2444(v37, &qword_1EF3F9D68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2CB80]);
        v39 = 0;
      }
      else
      {
        v39 = sub_1BC2B383C();
        (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v37, v29);
      }
      v20 = v45;
      v22 = v50;
      sub_1BC0E8594(v60, type metadata accessor for WeekdaysAndDosages);
      result = sub_1BC0E8594((uint64_t)v20, type metadata accessor for WeekdaysAndDosages);
      if (v56 >= v39)
      {
LABEL_4:
        v22 += v49;
        v58 += v49;
        if (++v51 == v43)
          return result;
        goto LABEL_5;
      }
      v40 = *v55;
      if (!*v55)
        break;
      v41 = v40 + v22 + v23;
      sub_1BC0F1B94(v40 + v58 + v23, v52, type metadata accessor for WeekdaysAndDosages);
      swift_arrayInitWithTakeFrontToBack();
      result = sub_1BC0F1B94(v52, v41, type metadata accessor for WeekdaysAndDosages);
      v23 -= v49;
      if (v51 == ++v24)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC2639FC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  BOOL v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t result;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;

  v45 = type metadata accessor for Dosage();
  v8 = MEMORY[0x1E0C80A78](v45);
  v44 = (uint64_t)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v39 - v10;
  v13 = *(_QWORD *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  if (a2 - a1 == 0x8000000000000000 && v13 == -1)
    goto LABEL_62;
  v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1)
    goto LABEL_63;
  v15 = (uint64_t)(a2 - a1) / v13;
  v48 = a1;
  v47 = a4;
  v16 = v14 / v13;
  if (v15 >= v14 / v13)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      v18 = v16 * v13;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v25 = a4 + v18;
      v46 = a4 + v18;
      v48 = a2;
      v42 = a1;
      if (v18 >= 1 && a1 < a2)
      {
        v27 = sub_1BC2B23F0();
        v40 = a4;
        v41 = v27;
        v28 = -v13;
        do
        {
          v43 = a3 + v28;
          sub_1BC0FC574(v25 + v28, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
          v29 = a2 + v28;
          v30 = a3;
          v31 = (uint64_t)v11;
          v32 = v44;
          sub_1BC0FC574(a2 + v28, v44, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
          sub_1BC0E519C(qword_1EDA0EA98, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
          v33 = sub_1BC2B4418();
          v34 = v32;
          v11 = (char *)v31;
          sub_1BC0E8594(v34, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
          sub_1BC0E8594(v31, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
          if ((v33 & 1) != 0)
          {
            a3 = v43;
            if (v30 < a2 || v43 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              v36 = v40;
            }
            else
            {
              v35 = v30 == a2;
              v36 = v40;
              if (!v35)
                swift_arrayInitWithTakeBackToFront();
            }
            v48 += v28;
          }
          else
          {
            v37 = v46;
            v46 += v28;
            a3 = v43;
            if (v30 < v37 || v43 >= v37)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v30 != v37)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v29 = a2;
            v36 = v40;
          }
          v25 = v46;
          if (v46 <= v36)
            break;
          a2 = v29;
        }
        while (v29 > v42);
      }
      goto LABEL_60;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    v17 = v15 * v13;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v43 = a4 + v17;
    v46 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      sub_1BC2B23F0();
      do
      {
        sub_1BC0FC574(a2, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
        v20 = v44;
        sub_1BC0FC574(a4, v44, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
        sub_1BC0E519C(qword_1EDA0EA98, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
        v21 = sub_1BC2B4418();
        sub_1BC0E8594(v20, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
        sub_1BC0E8594((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
        v22 = v48;
        if ((v21 & 1) != 0)
        {
          v23 = a2 + v13;
          if (v48 < a2 || v48 >= v23)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v48 == a2)
          {
            v22 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          v24 = v47 + v13;
          if (v48 < v47 || v48 >= v24)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v48 != v47)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v47 = v24;
          v23 = a2;
        }
        v48 = v22 + v13;
        a4 = v47;
        if (v47 >= v43)
          break;
        a2 = v23;
      }
      while (v23 < a3);
    }
LABEL_60:
    sub_1BC26E07C(&v48, &v47, (uint64_t *)&v46);
    return 1;
  }
LABEL_64:
  result = sub_1BC2B5318();
  __break(1u);
  return result;
}

uint64_t sub_1BC263F24(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  BOOL v26;
  BOOL v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  BOOL v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t result;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char *v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;

  v5 = v4;
  v51 = type metadata accessor for WeekdaysAndDosages(0);
  v10 = MEMORY[0x1E0C80A78](v51);
  v11 = MEMORY[0x1E0C80A78](v10);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v45 - v13;
  MEMORY[0x1E0C80A78](v12);
  v18 = (char *)&v45 - v17;
  v52 = *(_QWORD *)(v19 + 72);
  if (!v52)
  {
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  if (a2 - a1 == 0x8000000000000000 && v52 == -1)
    goto LABEL_68;
  v20 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v52 == -1)
    goto LABEL_69;
  v21 = (uint64_t)(a2 - a1) / v52;
  v55 = a1;
  v54 = a4;
  v22 = v20 / v52;
  if (v21 >= v20 / v52)
  {
    if ((v22 & 0x8000000000000000) == 0)
    {
      v24 = v22 * v52;
      v18 = v16;
      v49 = (char *)v15;
      if (a4 < a2 || a2 + v24 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v31 = a4 + v24;
      v53 = a4 + v24;
      v55 = a2;
      if (v24 < 1 || a1 >= a2)
        goto LABEL_65;
      v46 = a1;
      v33 = -v52;
      v47 = -v52;
      v48 = a4;
      while (1)
      {
        sub_1BC0FC574(v31 + v33, (uint64_t)v18, type metadata accessor for WeekdaysAndDosages);
        v34 = a2;
        v35 = a2 + v33;
        v36 = a2 + v33;
        v37 = v33;
        v14 = v49;
        sub_1BC0FC574(v36, (uint64_t)v49, type metadata accessor for WeekdaysAndDosages);
        v38 = sub_1BC261458((uint64_t)v18, (uint64_t)v14);
        if (v5)
          goto LABEL_64;
        v39 = v38;
        v52 = 0;
        v50 = a3 + v37;
        sub_1BC0E8594((uint64_t)v14, type metadata accessor for WeekdaysAndDosages);
        sub_1BC0E8594((uint64_t)v18, type metadata accessor for WeekdaysAndDosages);
        if (v39)
        {
          v40 = a3;
          v25 = a3 >= v34;
          a3 = v50;
          if (v25 && v50 < v34)
          {
            v41 = v48;
            if (v40 != v34)
              swift_arrayInitWithTakeBackToFront();
          }
          else
          {
            swift_arrayInitWithTakeFrontToBack();
            v41 = v48;
          }
          v33 = v47;
          v55 += v47;
        }
        else
        {
          v42 = v53;
          v53 += v37;
          v43 = a3;
          v25 = a3 >= v42;
          a3 = v50;
          if (v25 && v50 < v42)
          {
            v41 = v48;
            if (v43 != v42)
              swift_arrayInitWithTakeBackToFront();
            v35 = v34;
            v33 = v47;
          }
          else
          {
            swift_arrayInitWithTakeFrontToBack();
            v35 = v34;
            v33 = v47;
            v41 = v48;
          }
        }
        v31 = v53;
        if (v53 > v41)
        {
          a2 = v35;
          v5 = v52;
          if (v35 > v46)
            continue;
        }
        goto LABEL_65;
      }
    }
  }
  else if ((v21 & 0x8000000000000000) == 0)
  {
    v23 = v21 * v52;
    if (a4 < a1 || a1 + v23 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v50 = a4 + v23;
    v53 = a4 + v23;
    v25 = v23 < 1 || a2 >= a3;
    if (v25)
      goto LABEL_65;
    while (1)
    {
      sub_1BC0FC574(a2, (uint64_t)v18, type metadata accessor for WeekdaysAndDosages);
      sub_1BC0FC574(a4, (uint64_t)v14, type metadata accessor for WeekdaysAndDosages);
      v26 = sub_1BC261458((uint64_t)v18, (uint64_t)v14);
      if (v4)
        break;
      v27 = v26;
      sub_1BC0E8594((uint64_t)v14, type metadata accessor for WeekdaysAndDosages);
      sub_1BC0E8594((uint64_t)v18, type metadata accessor for WeekdaysAndDosages);
      v28 = v55;
      if (v27)
      {
        v29 = a2 + v52;
        if (v55 < a2 || v55 >= v29)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v55 == a2)
        {
          v28 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      else
      {
        v30 = v54 + v52;
        if (v55 < v54 || v55 >= v30)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v55 != v54)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        v54 = v30;
        v29 = a2;
      }
      v55 = v28 + v52;
      a4 = v54;
      if (v54 < v50)
      {
        a2 = v29;
        if (v29 < a3)
          continue;
      }
      goto LABEL_65;
    }
LABEL_64:
    sub_1BC0E8594((uint64_t)v14, type metadata accessor for WeekdaysAndDosages);
    sub_1BC0E8594((uint64_t)v18, type metadata accessor for WeekdaysAndDosages);
LABEL_65:
    sub_1BC26E088(&v55, &v54, (uint64_t *)&v53);
    return 1;
  }
LABEL_70:
  result = sub_1BC2B5318();
  __break(1u);
  return result;
}

uint64_t sub_1BC2644A0(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t _s19HealthMedicationsUI28MedicationScheduleDataSourceC19PresentationContextO2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  char v11;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = *a2;
  v7 = a2[1];
  v8 = a2[2];
  v9 = a2[3];
  if (v3)
  {
    if (v7)
    {
      v10 = v2 == v6 && v3 == v7;
      if (v10 || (v11 = 0, (sub_1BC2B53CC() & 1) != 0))
      {
        if (v4 == v8 && v5 == v9)
          v11 = 1;
        else
          v11 = sub_1BC2B53CC();
      }
      goto LABEL_16;
    }
  }
  else if (!v7)
  {
    v3 = 0;
    v11 = 1;
    goto LABEL_17;
  }
  v11 = 0;
LABEL_16:
  sub_1BC1BAC0C(v6, v7);
  sub_1BC1BAC0C(v2, v3);
LABEL_17:
  sub_1BC1BAC3C(v2, v3);
  sub_1BC1BAC3C(v6, v7);
  return v11 & 1;
}

void sub_1BC264640(uint64_t a1)
{
  sub_1BC0E7998(a1, &qword_1EF400C68, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1BC26465C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_1BC0E2130(255, a3, a4, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    v5 = sub_1BC2B3EE4();
    if (!v6)
      atomic_store(v5, a2);
  }
}

void sub_1BC2646CC(uint64_t a1)
{
  sub_1BC0E7998(a1, &qword_1EF400CA0, (uint64_t (*)(uint64_t))sub_1BC2646E8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1BC2646E8(uint64_t a1)
{
  sub_1BC0E7998(a1, &qword_1EF400CA8, (uint64_t (*)(uint64_t))type metadata accessor for Dosage, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

void sub_1BC264704(uint64_t a1)
{
  sub_1BC0E7998(a1, &qword_1EF3FED10, type metadata accessor for WeekdaysAndDosages, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

void sub_1BC264720()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF400CD0)
  {
    type metadata accessor for HKMedicationScheduleType(255);
    sub_1BC108D94();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF400CD0);
  }
}

void sub_1BC26478C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF400CD8)
  {
    type metadata accessor for HKMedicationScheduleType(255);
    v3 = v2;
    v4 = sub_1BC0E519C(&qword_1EF3F9948, (uint64_t (*)(uint64_t))type metadata accessor for HKMedicationScheduleType, (uint64_t)&unk_1BC2B893C);
    v6 = type metadata accessor for DynamicDataSource(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF400CD8);
  }
}

_QWORD *sub_1BC264804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;

  v6 = v5;
  v27 = a3;
  v11 = sub_1BC2B2AE0();
  v25 = *(_QWORD *)(v11 - 8);
  v26 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EF3FEDB0);
  v14 = (void *)sub_1BC2B4F7C();
  v15 = objc_allocWithZone(MEMORY[0x1E0CB6CA8]);
  v16 = (void *)sub_1BC2B4430();
  v17 = objc_msgSend(v15, sel_initWithName_loggingCategory_, v16, v14);

  v6[2] = v17;
  v6[11] = 0;
  v29 = 0;
  v30 = 0xE000000000000000;
  sub_1BC2B51BC();
  swift_bridgeObjectRelease();
  v29 = 0xD000000000000012;
  v30 = 0x80000001BC2D13E0;
  v18 = swift_bridgeObjectRetain();
  v19 = sub_1BC25AB2C(v18);
  swift_bridgeObjectRelease();
  v28 = v19;
  sub_1BC0E2130(0, (unint64_t *)&qword_1EF3FA018, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC11BF0C();
  sub_1BC2B440C();
  swift_bridgeObjectRelease();
  sub_1BC2B44FC();
  v20 = v27;
  swift_bridgeObjectRelease();
  sub_1BC2B44FC();
  v21 = v30;
  v6[3] = v29;
  v6[4] = v21;
  v6[8] = a1;
  v6[9] = a2;
  swift_retain();
  sub_1BC2B3ED8();
  v6[10] = v29;
  if (v20)
  {
    v22 = v20;
  }
  else
  {
    sub_1BC2B2F30();
    sub_1BC2B2AD4();
    sub_1BC2B2A8C();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v13, v26);
    v22 = sub_1BC2B2F0C();
    a5 = MEMORY[0x1E0D2B148];
    a4 = MEMORY[0x1E0D2B748];
  }
  v6[5] = v22;
  v6[6] = a4;
  v6[7] = a5;
  v6[12] = v22;
  v6[13] = a4;
  v6[14] = a5;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  sub_1BC25AF04();
  sub_1BC26478C(0);
  sub_1BC0E519C(&qword_1EF400CE0, (uint64_t (*)(uint64_t))sub_1BC26478C, (uint64_t)&protocol conformance descriptor for DynamicDataSource<A>);
  sub_1BC2B2A2C();
  v29 = v6[9];
  swift_allocObject();
  swift_weakInit();
  sub_1BC13BE80(0, (unint64_t *)&qword_1EF3FC440, type metadata accessor for HKMedicationScheduleType);
  sub_1BC2651E0();
  swift_retain();
  swift_retain();
  v23 = sub_1BC2B40A0();
  swift_release();
  swift_release();
  swift_release();
  v6[11] = v23;
  swift_release();
  return v6;
}

unint64_t sub_1BC264B88()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF400CE8;
  if (!qword_1EF400CE8)
  {
    v1 = sub_1BC0E1D38(255, &qword_1EDA0FCF8);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0DEFD00], v1);
    atomic_store(result, (unint64_t *)&qword_1EF400CE8);
  }
  return result;
}

uint64_t sub_1BC264BE0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;

  v3 = (_QWORD *)(*a1 + qword_1EF402B08);
  swift_beginAccess();
  *a2 = *v3;
  return swift_retain();
}

uint64_t type metadata accessor for MedicationScheduleDataSource()
{
  uint64_t result;

  result = qword_1EF400D20;
  if (!qword_1EF400D20)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BC264C74()
{
  unint64_t v0;

  sub_1BC264640(319);
  if (v0 <= 0x3F)
    swift_initClassMetadata2();
}

uint64_t method lookup function for MedicationScheduleDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicationScheduleDataSource.validUserSelectionPublisher.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for MedicationScheduleDataSource + *v0 + 488))();
}

uint64_t dispatch thunk of MedicationScheduleDataSource.validUserSelectionPublisher.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for MedicationScheduleDataSource + *v0 + 496))();
}

uint64_t dispatch thunk of MedicationScheduleDataSource.validUserSelectionPublisher.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for MedicationScheduleDataSource + *v0 + 504))();
}

uint64_t dispatch thunk of MedicationScheduleDataSource.__allocating_init(schedulePublisher:medication:concept:presentationContext:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(class metadata base offset for MedicationScheduleDataSource + v0 + 776))();
}

uint64_t dispatch thunk of MedicationScheduleDataSource.triggerResetToDefault()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for MedicationScheduleDataSource + *v0 + 784))();
}

uint64_t sub_1BC264DD4()
{
  return type metadata accessor for MedicationScheduleDataSource();
}

unint64_t destroy for MedicationScheduleDataSource.PresentationContext(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for MedicationScheduleDataSource.PresentationContext(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  __int128 v5;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    v4 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

_QWORD *assignWithCopy for MedicationScheduleDataSource.PresentationContext(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  __int128 v5;

  v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    v5 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v5;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MedicationScheduleDataSource.PresentationContext(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  __int128 v6;

  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MedicationScheduleDataSource.PresentationContext(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MedicationScheduleDataSource.PresentationContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

uint64_t sub_1BC265074(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_1BC26508C(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    result[2] = 0;
    result[3] = 0;
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicationScheduleDataSource.PresentationContext()
{
  return &type metadata for MedicationScheduleDataSource.PresentationContext;
}

void sub_1BC2650C0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF400D70)
  {
    sub_1BC26465C(255, &qword_1EF400CB0, &qword_1EF400CB8, (uint64_t)&type metadata for PauseUsePeriod);
    sub_1BC265174(&qword_1EF400D78, &qword_1EF400CB0, &qword_1EF400CB8, (uint64_t)&type metadata for PauseUsePeriod);
    v0 = sub_1BC2B3D64();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF400D70);
  }
}

uint64_t sub_1BC265174(unint64_t *a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    sub_1BC26465C(255, a2, a3, a4);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C95FB8], v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BC2651B4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

void sub_1BC2651D8(_QWORD *a1)
{
  sub_1BC25CFAC(a1);
}

unint64_t sub_1BC2651E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3FC458;
  if (!qword_1EF3FC458)
  {
    sub_1BC13BE80(255, (unint64_t *)&qword_1EF3FC440, type metadata accessor for HKMedicationScheduleType);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C95FB8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF3FC458);
  }
  return result;
}

void sub_1BC265238()
{
  sub_1BC25F54C();
}

void sub_1BC265240()
{
  sub_1BC25F54C();
}

unint64_t sub_1BC265258()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF400D88;
  if (!qword_1EF400D88)
  {
    sub_1BC13BE80(255, &qword_1EF400C98, sub_1BC2646CC);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C95FB8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF400D88);
  }
  return result;
}

unint64_t sub_1BC2652B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3FED18;
  if (!qword_1EF3FED18)
  {
    sub_1BC13BE80(255, (unint64_t *)&qword_1EF3FED08, sub_1BC264704);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C95FB8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF3FED18);
  }
  return result;
}

unint64_t sub_1BC265308()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3FCC30;
  if (!qword_1EF3FCC30)
  {
    sub_1BC13BE80(255, (unint64_t *)&qword_1EF3FCC20, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C95FB8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF3FCC30);
  }
  return result;
}

unint64_t sub_1BC265360()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3FCC38;
  if (!qword_1EF3FCC38)
  {
    sub_1BC13BE80(255, (unint64_t *)&qword_1EF3FCC28, (void (*)(uint64_t))sub_1BC237854);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C95FB8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF3FCC38);
  }
  return result;
}

void sub_1BC2653B8()
{
  sub_1BC25F610();
}

uint64_t sub_1BC2653C0()
{
  return sub_1BC25F6BC();
}

unint64_t sub_1BC2653C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3F9DA8;
  if (!qword_1EF3F9DA8)
  {
    sub_1BC13BE80(255, (unint64_t *)&qword_1EF3F9DA0, (void (*)(uint64_t))sub_1BC13BA28);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C95FB8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF3F9DA8);
  }
  return result;
}

uint64_t sub_1BC265420(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  char v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  uint64_t result;
  void *v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  uint64_t v30;
  _BYTE v31[16];
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;

  v8 = sub_1BC2B20FC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = &v31[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = *(_QWORD *)a3;
  v13 = *(unsigned __int8 *)(a3 + 8);
  v14 = *a4;
  v15 = *((_BYTE *)a4 + 8);
  v32 = a2;
  v33 = v14;
  v34 = v15;
  v16 = 0;
  v17 = sub_1BC1B4D74((void (*)(uint64_t *__return_ptr, uint64_t))sub_1BC265C88, (uint64_t)v31, a1);
  v18 = v17;
  if ((v17 & 0xC000000000000001) != 0)
  {
    v19 = (id)MEMORY[0x1BCCEE950](0, v17);
  }
  else
  {
    if (!*(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_11;
    }
    v19 = *(id *)(v17 + 32);
  }
  v20 = v19;
  v21 = objc_msgSend(v19, sel_startTimeComponent);

  sub_1BC2B2078();
  sub_1BC0E1D38(0, &qword_1EDA0FDE8);
  result = sub_1BC2B4D6C();
  v23 = (void *)result;
  v24 = 0;
  if (v13 == 255
    || (v24 = v12, (v13 & 1) != 0)
    || (v24 = 7 * v12, (unsigned __int128)(v12 * (__int128)7) >> 64 == (7 * v12) >> 63))
  {
    v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, v24);
    v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, 0);
    v27 = objc_allocWithZone(MEMORY[0x1E0D2C4A0]);
    v28 = (void *)sub_1BC2B2060();
    v29 = objc_msgSend(v27, sel_initWithStartTimeComponent_daysOfWeek_cycleIndex_cycleIntervalDays_dose_, v28, 0, v23, v25, v26);

    (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v8);
    v35 = v18;
    swift_bridgeObjectRetain();
    v16 = v29;
    MEMORY[0x1BCCEDCF0]();
    if (*(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    {
LABEL_8:
      sub_1BC2B4604();
      sub_1BC2B45A4();
      v30 = v35;
      swift_bridgeObjectRelease();

      return v30;
    }
LABEL_11:
    sub_1BC2B45C8();
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC2656A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  uint64_t v16;
  char *v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  unint64_t v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  void *v35;
  void *v36;
  id v37;
  void *v38;
  id v39;
  void *v40;
  uint64_t v41;
  id v42;
  id v43;
  id v44;
  void *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  int v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  uint64_t v64;

  v58 = a1;
  v59 = a2;
  v7 = sub_1BC2B23F0();
  v56 = *(_QWORD *)(v7 - 8);
  v57 = v7;
  MEMORY[0x1E0C80A78](v7);
  v55 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC2B25B8();
  v53 = *(_QWORD *)(v9 - 8);
  v54 = v9;
  MEMORY[0x1E0C80A78](v9);
  v52 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BC2B20FC();
  v60 = *(_QWORD *)(v11 - 8);
  v61 = v11;
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v48 - v16;
  v18 = *(unsigned __int8 *)(a4 + 8);
  if (v18 == 255)
    goto LABEL_29;
  v19 = *(_QWORD *)a3;
  v51 = *(unsigned __int8 *)(a3 + 8);
  v20 = *(_QWORD *)a4;
  if ((v18 & 1) != 0 || (v21 = (unsigned __int128)(v20 * (__int128)7) >> 64, v20 *= 7, v21 == v20 >> 63))
  {
    v64 = MEMORY[0x1E0DEE9D8];
    if (v20 >= -6)
    {
      if ((unint64_t)(v20 + 6) < 0xD)
      {
        v4 = MEMORY[0x1E0DEE9D8];
LABEL_13:
        if ((v4 & 0xC000000000000001) == 0)
        {
          if (!*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_26;
          }
          v36 = *(void **)(v4 + 32);
          swift_bridgeObjectRetain();
          v37 = v36;
          goto LABEL_16;
        }
LABEL_24:
        swift_bridgeObjectRetain();
        v37 = (id)MEMORY[0x1BCCEE950](0, v4);
LABEL_16:
        v38 = v37;
        v39 = objc_msgSend(v37, sel_startTimeComponent, v48);

        sub_1BC2B2078();
        result = sub_1BC2B47FC();
        v40 = (void *)result;
        if (v51 == 255)
        {
          v19 = 0;
          goto LABEL_20;
        }
        if ((v51 & 1) != 0 || (v41 = (unsigned __int128)(v19 * (__int128)7) >> 64, v19 *= 7, v41 == v19 >> 63))
        {
LABEL_20:
          v42 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, v19);
          v43 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, 0);
          v44 = objc_allocWithZone(MEMORY[0x1E0D2C4A0]);
          v45 = (void *)sub_1BC2B2060();
          v46 = objc_msgSend(v44, sel_initWithStartTimeComponent_daysOfWeek_cycleIndex_cycleIntervalDays_dose_, v45, 0, v40, v42, v43);

          (*(void (**)(char *, uint64_t))(v60 + 8))(v14, v61);
          v63 = v4;
          swift_bridgeObjectRetain();
          a4 = (uint64_t)v46;
          MEMORY[0x1BCCEDCF0]();
          if (*(_QWORD *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          {
LABEL_21:
            sub_1BC2B4604();
            sub_1BC2B45A4();
            v47 = v63;
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            return v47;
          }
LABEL_26:
          sub_1BC2B45C8();
          goto LABEL_21;
        }
        goto LABEL_28;
      }
      v49 = v19;
      v50 = v14;
      v4 = 0;
      v19 = 0x4000000000000000;
      v48 = v20 / 7;
      v22 = v20 / 7;
      a4 = 1;
      while (v19)
      {
        v23 = (void *)sub_1BC2B47FC();
        v24 = (void *)sub_1BC2B47FC();
        v25 = v52;
        v26 = v59;
        sub_1BC2B2570();
        v27 = v55;
        sub_1BC2B23B4();
        sub_1BC2B24C8();
        (*(void (**)(char *, uint64_t))(v56 + 8))(v27, v57);
        v28 = (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v25, v54);
        MEMORY[0x1E0C80A78](v28);
        *(&v48 - 4) = v26;
        *(&v48 - 3) = (uint64_t)v23;
        v62 = v23;
        *(&v48 - 2) = 1;
        v29 = sub_1BC1B4D74((void (*)(uint64_t *__return_ptr, uint64_t))sub_1BC265CA8, (uint64_t)(&v48 - 6), v58);
        sub_1BC131B94(v29);
        v30 = v24;
        v31 = (void *)sub_1BC2B47FC();
        v32 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
        v33 = objc_msgSend(v32, sel_initWithInteger_, 0, v48);
        v14 = v17;
        v34 = objc_allocWithZone(MEMORY[0x1E0D2C4A0]);
        v35 = (void *)sub_1BC2B2060();
        objc_msgSend(v34, sel_initWithStartTimeComponent_daysOfWeek_cycleIndex_cycleIntervalDays_dose_, v35, 0, v30, v31, v33);

        MEMORY[0x1BCCEDCF0]();
        if (*(_QWORD *)((v64 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v64 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BC2B45C8();
        sub_1BC2B4604();
        sub_1BC2B45A4();

        (*(void (**)(char *, uint64_t))(v60 + 8))(v14, v61);
        --v19;
        a4 += 2;
        --v22;
        v17 = v14;
        if (!v22)
        {
          v4 = v64;
          v19 = v49;
          v14 = v50;
          goto LABEL_13;
        }
      }
      __break(1u);
    }
    __break(1u);
    goto LABEL_24;
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1BC265BE8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1BC260EC8(a1, a2);
}

uint64_t sub_1BC265C04(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC16EC1C(a1, *(_QWORD **)(v1 + 16));
}

void sub_1BC265C0C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF400D98)
  {
    sub_1BC265C6C(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF400D98);
  }
}

void sub_1BC265C6C(uint64_t a1)
{
  sub_1BC0E7998(a1, &qword_1EF3FD980, (uint64_t (*)(uint64_t))type metadata accessor for Dosage, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1BC265C88@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1BC261050(a1, *(_QWORD *)(v2 + 24), *(_BYTE *)(v2 + 32), a2);
}

uint64_t sub_1BC265CA8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1BC2612A8(a1, *(void **)(v2 + 24), a2);
}

uint64_t sub_1BC265CC8(uint64_t *a1)
{
  return sub_1BC25AE08(*a1);
}

uint64_t sub_1BC265CD4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1BC265BE8(a1, a2);
}

uint64_t type metadata accessor for MedicationSourceListCell(uint64_t a1)
{
  return sub_1BC0E5428(a1, (uint64_t *)&unk_1EF400DA0);
}

uint64_t sub_1BC265D00()
{
  return sub_1BC0E5468();
}

uint64_t sub_1BC265D0C()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t (*v17)(void);
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC0E7998(0, &qword_1EDA0FAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1C58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v23 - v2;
  v24 = sub_1BC2B3A94();
  v4 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BC2B3A34();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, &qword_1EDA0FAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], v0);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v23 - v15;
  sub_1BC2B29D8();
  v17 = (uint64_t (*)(void))sub_1BC2B29E4();
  v18 = v17();
  MEMORY[0x1BCCEE230](v18);
  v19 = sub_1BC2B3B48();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v16, 1, v19))
  {
    sub_1BC1640DC((uint64_t)v16, (uint64_t)v14);
    MEMORY[0x1BCCEE23C](v14);
    sub_1BC1C61FC((uint64_t)v16, (uint64_t)&qword_1EDA0FAF0, (uint64_t)MEMORY[0x1E0DC2130], (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1BC0E7998);
  }
  else
  {
    v20 = objc_msgSend((id)objc_opt_self(), sel_tertiarySystemBackgroundColor);
    sub_1BC2B3B18();
    MEMORY[0x1BCCEE23C](v16);
  }
  sub_1BC0E7998(0, (unint64_t *)&unk_1EDA0FE70, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1D38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BC2B3AD0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BC2B92D0;
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DC1C20], v7);
  v21 = sub_1BC2B3A40();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v3, 1, 1, v21);
  sub_1BC2B3A88();
  sub_1BC2B3A64();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v24);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return sub_1BC2B4AFC();
}

void sub_1BC266024()
{
  uint64_t ObjectType;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD v22[5];

  ObjectType = swift_getObjectType();
  v1 = sub_1BC2B39E0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v22[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B29CC();
  if (v22[3])
  {
    sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0F7C0);
    type metadata accessor for MedicationSourceListItem();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v5 = v21;
      v6 = objc_msgSend(*(id *)(v21 + 24), sel_source);
      v7 = objc_msgSend(v6, sel_name);

      sub_1BC2B4460();
      sub_1BC2B2888();
      v8 = (void *)sub_1BC2B287C();
      sub_1BC2B29C0();
      swift_bridgeObjectRelease();

      v9 = objc_msgSend((id)objc_opt_self(), sel_sharedImageManager);
      v10 = objc_msgSend(*(id *)(v5 + 24), sel_source);
      v11 = objc_msgSend(v9, sel_iconForSource_productType_, v10, 0);

      if (v11)
      {
        v12 = objc_msgSend(*(id *)(v5 + 24), sel_source);
        v13 = objc_msgSend(v12, sel_name);

        sub_1BC2B4460();
        v14 = v11;
        sub_1BC2B29C0();
        swift_release();
        swift_bridgeObjectRelease();

      }
      else
      {
        swift_release();
      }
      return;
    }
  }
  else
  {
    sub_1BC1C61FC((uint64_t)v22, (uint64_t)&qword_1EDA0F7D0, (uint64_t)&qword_1EDA0F7C0, MEMORY[0x1E0D2A060], (uint64_t (*)(_QWORD))sub_1BC0E7A84);
  }
  sub_1BC2B39C8();
  v15 = sub_1BC2B39D4();
  v16 = sub_1BC2B48D4();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc();
    v18 = swift_slowAlloc();
    v21 = v18;
    v22[0] = ObjectType;
    *(_DWORD *)v17 = 136446210;
    swift_getMetatypeMetadata();
    v19 = sub_1BC2B4478();
    v22[0] = sub_1BC12540C(v19, v20, &v21);
    sub_1BC2B4FD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC0DC000, v15, v16, "[%{public}s] item is not an MedicationSourceListItem", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v18, -1, -1);
    MEMORY[0x1BCCEF3A0](v17, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

id sub_1BC2663B4(void *a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  return sub_1BC2669B4(a1, a3, a4, a5, a6, a2, type metadata accessor for MedicationSourceListCell);
}

id sub_1BC2663C0(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BC266A30(a1, a2, a3, type metadata accessor for MedicationSourceListCell);
}

id sub_1BC2663CC()
{
  return sub_1BC128598(type metadata accessor for MedicationSourceListCell);
}

uint64_t sub_1BC2663D8()
{
  return type metadata accessor for MedicationSourceListCell(0);
}

void sub_1BC2663E0(uint64_t a1, void *a2)
{
  sub_1BC266B08(a2);
}

uint64_t sub_1BC266404()
{
  id *v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MedicationSourceListItem()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for MedicationSourceListNoneCell(uint64_t a1)
{
  return sub_1BC0E5428(a1, (uint64_t *)&unk_1EF400EB0);
}

uint64_t sub_1BC26647C()
{
  return sub_1BC0E5468();
}

uint64_t sub_1BC266488()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

id sub_1BC2664B8()
{
  void *v0;
  uint64_t ObjectType;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void (*v11)(uint64_t, uint64_t, _QWORD);
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD v20[5];

  ObjectType = swift_getObjectType();
  v2 = sub_1BC2B39E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v20[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B29CC();
  if (v20[3])
  {
    sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0F7C0);
    type metadata accessor for MedicationSourceListNoneItem();
    if ((swift_dynamicCast() & 1) != 0)
    {
      swift_release();
      if (qword_1EDA0FEE8 != -1)
        swift_once();
      v6 = (id)qword_1EDA0FEF8;
      swift_bridgeObjectRetain();
      v7 = sub_1BC2B2144();
      v9 = v8;
      swift_bridgeObjectRelease();

      v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3870]), sel_init);
      sub_1BC2B29D8();
      v11 = (void (*)(uint64_t, uint64_t, _QWORD))sub_1BC2B29E4();
      v11(v7, v9, 0);
      swift_bridgeObjectRetain();
      sub_1BC267018();

      swift_bridgeObjectRelease_n();
      return objc_msgSend(v0, sel_setUserInteractionEnabled_, 0);
    }
  }
  else
  {
    sub_1BC1C61FC((uint64_t)v20, (uint64_t)&qword_1EDA0F7D0, (uint64_t)&qword_1EDA0F7C0, MEMORY[0x1E0D2A060], (uint64_t (*)(_QWORD))sub_1BC0E7A84);
  }
  sub_1BC2B39C8();
  v13 = sub_1BC2B39D4();
  v14 = sub_1BC2B48D4();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    v16 = swift_slowAlloc();
    v19 = v16;
    v20[0] = ObjectType;
    *(_DWORD *)v15 = 136446210;
    swift_getMetatypeMetadata();
    v17 = sub_1BC2B4478();
    v20[0] = sub_1BC12540C(v17, v18, &v19);
    sub_1BC2B4FD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC0DC000, v13, v14, "[%{public}s] item is not an MedicationSourceListNoneItem", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v16, -1, -1);
    MEMORY[0x1BCCEF3A0](v15, -1, -1);
  }

  return (id)(*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1BC2667F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(void);
  uint64_t v7;
  uint64_t v8;
  id v10;
  uint64_t v11;

  sub_1BC0E7998(0, &qword_1EDA0FAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v1 = MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v11 - v4;
  sub_1BC2B29D8();
  v6 = (uint64_t (*)(void))sub_1BC2B29E4();
  v7 = v6();
  MEMORY[0x1BCCEE230](v7);
  v8 = sub_1BC2B3B48();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v5, 1, v8))
  {
    sub_1BC1640DC((uint64_t)v5, (uint64_t)v3);
    MEMORY[0x1BCCEE23C](v3);
    return sub_1BC1C61FC((uint64_t)v5, (uint64_t)&qword_1EDA0FAF0, (uint64_t)MEMORY[0x1E0DC2130], (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1BC0E7998);
  }
  else
  {
    v10 = objc_msgSend((id)objc_opt_self(), sel_tertiarySystemBackgroundColor);
    sub_1BC2B3B18();
    return MEMORY[0x1BCCEE23C](v5);
  }
}

uint64_t sub_1BC26693C(uint64_t a1, uint64_t a2)
{
  void (*v4)(uint64_t, uint64_t, _QWORD);

  sub_1BC2B29D8();
  v4 = (void (*)(uint64_t, uint64_t, _QWORD))sub_1BC2B29E4();
  v4(a1, a2, 0);
  swift_bridgeObjectRetain();
  sub_1BC267018();
  return swift_bridgeObjectRelease();
}

id sub_1BC2669A8(void *a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  return sub_1BC2669B4(a1, a3, a4, a5, a6, a2, type metadata accessor for MedicationSourceListNoneCell);
}

id sub_1BC2669B4(void *a1, double a2, double a3, double a4, double a5, uint64_t a6, uint64_t (*a7)(_QWORD))
{
  objc_super v12;

  v12.receiver = a1;
  v12.super_class = (Class)a7(0);
  return objc_msgSendSuper2(&v12, sel_initWithFrame_, a2, a3, a4, a5);
}

id sub_1BC266A24(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BC266A30(a1, a2, a3, type metadata accessor for MedicationSourceListNoneCell);
}

id sub_1BC266A30(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  objc_super v6;

  v6.receiver = a1;
  v6.super_class = (Class)a4(0);
  return objc_msgSendSuper2(&v6, sel_initWithCoder_, a3);
}

id sub_1BC266A78()
{
  return sub_1BC128598(type metadata accessor for MedicationSourceListNoneCell);
}

uint64_t sub_1BC266A84()
{
  return type metadata accessor for MedicationSourceListNoneCell(0);
}

uint64_t sub_1BC266A8C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MedicationSourceListNoneItem()
{
  return objc_opt_self();
}

uint64_t sub_1BC266AD8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

void sub_1BC266B08(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  objc_class *v20;
  char *v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  objc_super v38;
  uint64_t v39;
  _QWORD v40[5];

  v2 = v1;
  ObjectType = swift_getObjectType();
  v5 = sub_1BC2B39E0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B29CC();
  if (!v40[3])
  {
    sub_1BC1C61FC((uint64_t)v40, (uint64_t)&qword_1EDA0F7D0, (uint64_t)&qword_1EDA0F7C0, MEMORY[0x1E0D2A060], (uint64_t (*)(_QWORD))sub_1BC0E7A84);
    goto LABEL_7;
  }
  sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0F7C0);
  type metadata accessor for MedicationSourceListItem();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_7:
    sub_1BC2B39C8();
    v32 = sub_1BC2B39D4();
    v33 = sub_1BC2B48D4();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc();
      v35 = swift_slowAlloc();
      v39 = v35;
      v40[0] = ObjectType;
      *(_DWORD *)v34 = 136446210;
      swift_getMetatypeMetadata();
      v36 = sub_1BC2B4478();
      v40[0] = sub_1BC12540C(v36, v37, &v39);
      sub_1BC2B4FD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v32, v33, "[%{public}s] item is not an MedicationSourceListItem", v34, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v35, -1, -1);
      MEMORY[0x1BCCEF3A0](v34, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return;
  }
  v9 = v39;
  v10 = objc_msgSend((id)objc_opt_self(), sel_sharedInstanceForHealthStore_, *(_QWORD *)(v39 + 32));
  v11 = objc_msgSend(v10, sel_profile);

  v12 = objc_msgSend(v11, sel_displayTypeController);
  if (v12)
  {
    v13 = v12;
    sub_1BC266FDC();
    v14 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_medicationDoseEventTypeForIdentifier_, *MEMORY[0x1E0CB5418]);
    v15 = objc_msgSend(v13, sel_displayTypeForObjectType_, v14);

    if (v15)
    {
      v16 = (void *)objc_opt_self();
      v17 = objc_msgSend(*(id *)(v9 + 24), sel_source);
      v18 = objc_msgSend(v16, sel_predicateForObjectsFromSource_, v17);

      v19 = *(void **)(v9 + 16);
      v20 = (objc_class *)type metadata accessor for MedicationListAllDataProvider();
      v21 = (char *)objc_allocWithZone(v20);
      v22 = OBJC_IVAR____TtC19HealthMedicationsUI29MedicationListAllDataProvider_predicate;
      *(_QWORD *)&v21[OBJC_IVAR____TtC19HealthMedicationsUI29MedicationListAllDataProvider_predicate] = 0;
      *(_QWORD *)&v21[OBJC_IVAR____TtC19HealthMedicationsUI29MedicationListAllDataProvider_medication] = v19;
      v23 = *(void **)&v21[v22];
      *(_QWORD *)&v21[v22] = v18;
      v24 = v19;
      v25 = v18;
      v26 = v24;
      v27 = v25;
      v28 = v15;
      v29 = v11;

      v38.receiver = v21;
      v38.super_class = v20;
      v30 = objc_msgSendSuper2(&v38, sel_initWithDisplayType_profile_, v28, v29);

      v31 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F2C0]), sel_initWithDisplayType_profile_dataProvider_usingInsetStyling_, v28, v29, v30, 1);
      objc_msgSend(a1, sel_showViewController_sender_, v31, v2);
      swift_release();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  v40[0] = 0;
  v40[1] = 0xE000000000000000;
  sub_1BC2B51BC();
  swift_getObjectType();
  sub_1BC2B54F8();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  sub_1BC2B44FC();
  sub_1BC2B52B8();
  __break(1u);
}

unint64_t sub_1BC266FDC()
{
  unint64_t result;

  result = qword_1EF400510;
  if (!qword_1EF400510)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF400510);
  }
  return result;
}

uint64_t sub_1BC267018()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  id v9;
  void (*v10)(uint64_t *, _QWORD);
  uint64_t *boxed_opaque_existential_1;
  uint64_t v14[3];
  uint64_t v15;
  uint64_t v16;

  sub_1BC0E7998(0, &qword_1EF400FA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC23A0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v14[-1] - v1;
  v3 = sub_1BC2B3CD4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v14[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1BCCEE218](v14, v5);
  if (v15)
  {
    sub_1BC0E7AD8(0, &qword_1EF400FB8);
    v8 = swift_dynamicCast();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v2, v8 ^ 1u, 1, v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v2, v3);
      v9 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
      v10 = (void (*)(uint64_t *, _QWORD))sub_1BC2B3BE4();
      sub_1BC2B3BB4();
      v10(v14, 0);
      v15 = v3;
      v16 = MEMORY[0x1E0DC2398];
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v14);
      (*(void (**)(uint64_t *, char *, uint64_t))(v4 + 16))(boxed_opaque_existential_1, v7, v3);
      MEMORY[0x1BCCEE224](v14);
      return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    }
  }
  else
  {
    sub_1BC1C61FC((uint64_t)v14, (uint64_t)&unk_1EF400FB0, (uint64_t)&qword_1EF400FB8, MEMORY[0x1E0DC1F00], (uint64_t (*)(_QWORD))sub_1BC0E7A84);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  }
  return sub_1BC1C61FC((uint64_t)v2, (uint64_t)&qword_1EF400FA8, (uint64_t)MEMORY[0x1E0DC23A0], (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1BC0E7998);
}

uint64_t type metadata accessor for ScheduleStepViewController()
{
  uint64_t result;

  result = qword_1EF400FC0;
  if (!qword_1EF400FC0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC267290()
{
  return swift_initClassMetadata2();
}

void sub_1BC2672CC(_BYTE *a1@<X8>)
{
  *a1 = 96;
}

uint64_t sub_1BC2672D8()
{
  swift_beginAccess();
  sub_1BC0E4A14();
  sub_1BC0E519C(&qword_1EF3F8780, (uint64_t (*)(uint64_t))sub_1BC0E4A14, MEMORY[0x1E0C95FB8]);
  return sub_1BC2B3FBC();
}

void sub_1BC267370()
{
  sub_1BC2B52B8();
  __break(1u);
}

void sub_1BC2673C8()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id sub_1BC2673F4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ScheduleStepViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC267428()
{
  return type metadata accessor for ScheduleStepViewController();
}

uint64_t sub_1BC267430(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, _OWORD *a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __int128 v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD v24[2];

  v7 = v6;
  sub_1BC128A44();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a6[1];
  v24[0] = *a6;
  v24[1] = v17;
  type metadata accessor for MedicationScheduleDataSource();
  swift_allocObject();
  v18 = a5;
  swift_retain();
  v19 = MedicationScheduleDataSource.init(schedulePublisher:medication:concept:presentationContext:)(a3, a4, a5, (uint64_t *)v24);
  sub_1BC0E8644(a1, (uint64_t)v16);
  sub_1BC0E8644((uint64_t)v16, v7 + qword_1EF402658);
  sub_1BC2675A8(0);
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = v19;
  v21 = *(_QWORD *)(v19 + qword_1EF402B00);
  *(_QWORD *)(v7 + qword_1EF3FAD98) = v20;
  *(_QWORD *)(v20 + 24) = v21;
  *(_QWORD *)(v7 + qword_1EF3FADA0) = a2;
  swift_retain();
  swift_retain();
  v22 = sub_1BC2B2FE4();
  sub_1BC1D7578((uint64_t)v16);
  sub_1BC1D7578(a1);
  return v22;
}

void sub_1BC2675A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1EF401010)
  {
    v2 = type metadata accessor for MedicationScheduleDataSource();
    v3 = sub_1BC0E519C(&qword_1EF401018, (uint64_t (*)(uint64_t))type metadata accessor for MedicationScheduleDataSource, (uint64_t)&protocol conformance descriptor for MedicationScheduleDataSource);
    v5 = type metadata accessor for SpecificationStepViewController.MedicationOnboardingStepObservableDataSource(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1EF401010);
  }
}

uint64_t sub_1BC267620()
{
  void *v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  id v6;
  void *v7;

  v0 = (void *)sub_1BC2B2D14();
  objc_msgSend(v0, sel_setContentInsetsReference_, 1);
  objc_msgSend(v0, sel_setSupplementaryContentInsetsReference_, 1);
  v1 = objc_msgSend(v0, sel_boundarySupplementaryItems);
  sub_1BC2677E4();
  v2 = sub_1BC2B458C();

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_1BC2B52D0();
    v3 = result;
  }
  else
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
  }
  if (!v3)
  {
LABEL_10:
    swift_bridgeObjectRelease_n();
    sub_1BC2B4AD8();
    objc_msgSend(v0, sel_contentInsets);
    objc_msgSend(v0, sel_setContentInsets_);
    sub_1BC2B4AD8();
    objc_msgSend(v0, sel_contentInsets);
    objc_msgSend(v0, sel_setContentInsets_);
    return (uint64_t)v0;
  }
  if (v3 >= 1)
  {
    v5 = 0;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
        v6 = (id)MEMORY[0x1BCCEE950](v5, v2);
      else
        v6 = *(id *)(v2 + 8 * v5 + 32);
      v7 = v6;
      ++v5;
      objc_msgSend(v6, sel_contentInsets);
      objc_msgSend(v7, sel_setContentInsets_);
      objc_msgSend(v7, sel_contentInsets);
      objc_msgSend(v7, sel_setContentInsets_);

    }
    while (v3 != v5);
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

unint64_t sub_1BC2677E4()
{
  unint64_t result;

  result = qword_1EF3FAFA8;
  if (!qword_1EF3FAFA8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF3FAFA8);
  }
  return result;
}

uint64_t sub_1BC267820(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
    return MEMORY[0x1E0DEE9D8];
  v2 = v1;
  v4 = type metadata accessor for MedicationsDayHistoryHeaderItem();
  v5 = swift_allocObject();
  sub_1BC2B242C();
  v6 = (uint64_t *)(v5 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationsDayHistoryHeaderItem_reuseIdentifier);
  type metadata accessor for MedicationsDayHistoryHeaderCell();
  sub_1BC0E519C(&qword_1EF3F81B0, (uint64_t (*)(uint64_t))type metadata accessor for MedicationsDayHistoryHeaderCell, (uint64_t)&unk_1BC2B89C0);
  *v6 = sub_1BC2B2930();
  v6[1] = v7;
  *(_BYTE *)(v5 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationsDayHistoryHeaderItem_displayContext) = 0;
  v8 = sub_1BC0FA038(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v10 = v8[2];
  v9 = v8[3];
  if (v10 >= v9 >> 1)
    v8 = sub_1BC0FA038((_QWORD *)(v9 > 1), v10 + 1, 1, v8);
  v14 = v4;
  v15 = sub_1BC0E519C(&qword_1EF401020, (uint64_t (*)(uint64_t))type metadata accessor for MedicationsDayHistoryHeaderItem, (uint64_t)&protocol conformance descriptor for MedicationsDayHistoryHeaderItem);
  *(_QWORD *)&v13 = v5;
  v8[2] = v10 + 1;
  sub_1BC0F2730(&v13, (uint64_t)&v8[5 * v10 + 4]);
  *(_QWORD *)&v13 = v8;
  v11 = sub_1BC2682A0(a1, (void (*)(uint64_t))sub_1BC26842C, v2);
  sub_1BC130FBC(v11);
  return v13;
}

uint64_t sub_1BC2679B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
    return MEMORY[0x1E0DEE9D8];
  v2 = v1;
  v4 = type metadata accessor for MedicationsDayHistoryHeaderItem();
  v5 = swift_allocObject();
  sub_1BC2B242C();
  v6 = (uint64_t *)(v5 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationsDayHistoryHeaderItem_reuseIdentifier);
  type metadata accessor for MedicationsDayHistoryHeaderCell();
  sub_1BC0E519C(&qword_1EF3F81B0, (uint64_t (*)(uint64_t))type metadata accessor for MedicationsDayHistoryHeaderCell, (uint64_t)&unk_1BC2B89C0);
  *v6 = sub_1BC2B2930();
  v6[1] = v7;
  *(_BYTE *)(v5 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationsDayHistoryHeaderItem_displayContext) = 1;
  v8 = sub_1BC0FA038(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v10 = v8[2];
  v9 = v8[3];
  if (v10 >= v9 >> 1)
    v8 = sub_1BC0FA038((_QWORD *)(v9 > 1), v10 + 1, 1, v8);
  v14 = v4;
  v15 = sub_1BC0E519C(&qword_1EF401020, (uint64_t (*)(uint64_t))type metadata accessor for MedicationsDayHistoryHeaderItem, (uint64_t)&protocol conformance descriptor for MedicationsDayHistoryHeaderItem);
  *(_QWORD *)&v13 = v5;
  v8[2] = v10 + 1;
  sub_1BC0F2730(&v13, (uint64_t)&v8[5 * v10 + 4]);
  *(_QWORD *)&v13 = v8;
  v11 = sub_1BC2682A0(a1, (void (*)(uint64_t))sub_1BC268484, v2);
  sub_1BC130FBC(v11);
  return v13;
}

uint64_t HistoryItemsProviderDataSource.makeHistoryItems(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[7];
  __int128 v20;
  uint64_t v21;
  uint64_t v22;

  if (!*(_QWORD *)(a1 + 16))
    return MEMORY[0x1E0DEE9D8];
  v4 = v3;
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(a3 + 16))(&v20, a2, a3);
  v8 = v20;
  v9 = type metadata accessor for MedicationsDayHistoryHeaderItem();
  v10 = swift_allocObject();
  sub_1BC2B242C();
  v11 = (uint64_t *)(v10 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationsDayHistoryHeaderItem_reuseIdentifier);
  type metadata accessor for MedicationsDayHistoryHeaderCell();
  sub_1BC0E519C(&qword_1EF3F81B0, (uint64_t (*)(uint64_t))type metadata accessor for MedicationsDayHistoryHeaderCell, (uint64_t)&unk_1BC2B89C0);
  *v11 = sub_1BC2B2930();
  v11[1] = v12;
  *(_BYTE *)(v10 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationsDayHistoryHeaderItem_displayContext) = v8;
  v13 = sub_1BC0FA038(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v15 = v13[2];
  v14 = v13[3];
  if (v15 >= v14 >> 1)
    v13 = sub_1BC0FA038((_QWORD *)(v14 > 1), v15 + 1, 1, v13);
  v21 = v9;
  v22 = sub_1BC0E519C(&qword_1EF401020, (uint64_t (*)(uint64_t))type metadata accessor for MedicationsDayHistoryHeaderItem, (uint64_t)&protocol conformance descriptor for MedicationsDayHistoryHeaderItem);
  *(_QWORD *)&v20 = v10;
  v13[2] = v15 + 1;
  v16 = sub_1BC0F2730(&v20, (uint64_t)&v13[5 * v15 + 4]);
  *(_QWORD *)&v20 = v13;
  MEMORY[0x1E0C80A78](v16);
  v19[2] = a2;
  v19[3] = a3;
  v19[4] = v4;
  v17 = sub_1BC2682A0(a1, (void (*)(uint64_t))sub_1BC26827C, (uint64_t)v19);
  sub_1BC130FBC(v17);
  return v20;
}

uint64_t sub_1BC267D38@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  int *v18;
  id v19;
  uint64_t *v20;
  uint64_t result;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27[40];

  sub_1BC0E79F0((uint64_t)a1, (uint64_t)v27);
  sub_1BC268430();
  sub_1BC0FC2C0(0);
  v5 = swift_dynamicCast();
  v6 = v26;
  if (!v5)
    v6 = 0;
  v25 = v6;
  v7 = a1[3];
  v8 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v7);
  v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
  v10 = v9;
  v11 = a1[3];
  v12 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v11);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 16))(v11, v12);
  v14 = *(void **)(v2 + qword_1EDA0F940);
  v15 = a1[3];
  v16 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v15);
  v17 = *(void (**)(uint64_t, uint64_t))(v16 + 24);
  v18 = (int *)type metadata accessor for MedicationsDayHistoryItem();
  v19 = v14;
  v17(v15, v16);
  sub_1BC2B242C();
  v20 = (uint64_t *)(a2 + v18[11]);
  type metadata accessor for MedicationsDayHistoryCell();
  sub_1BC0E519C(&qword_1EF3FFC80, (uint64_t (*)(uint64_t))type metadata accessor for MedicationsDayHistoryCell, (uint64_t)&unk_1BC2C6AEC);
  result = sub_1BC2B2930();
  *v20 = result;
  v20[1] = v22;
  v23 = (uint64_t *)(a2 + v18[5]);
  *v23 = v24;
  v23[1] = v10;
  *(_QWORD *)(a2 + v18[6]) = v13;
  *(_QWORD *)(a2 + v18[7]) = v25;
  *(_QWORD *)(a2 + v18[8]) = v19;
  *(_BYTE *)(a2 + v18[10]) = 0;
  return result;
}

uint64_t sub_1BC267EEC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  int *v18;
  id v19;
  uint64_t *v20;
  uint64_t result;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27[40];

  sub_1BC0E79F0((uint64_t)a1, (uint64_t)v27);
  sub_1BC268430();
  sub_1BC0FC2C0(0);
  v5 = swift_dynamicCast();
  v6 = v26;
  if (!v5)
    v6 = 0;
  v25 = v6;
  v7 = a1[3];
  v8 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v7);
  v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
  v10 = v9;
  v11 = a1[3];
  v12 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v11);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 16))(v11, v12);
  v14 = *(void **)(v2 + qword_1EF4014A0);
  v15 = a1[3];
  v16 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v15);
  v17 = *(void (**)(uint64_t, uint64_t))(v16 + 24);
  v18 = (int *)type metadata accessor for MedicationsDayHistoryItem();
  v19 = v14;
  v17(v15, v16);
  sub_1BC2B242C();
  v20 = (uint64_t *)(a2 + v18[11]);
  type metadata accessor for MedicationsDayHistoryCell();
  sub_1BC0E519C(&qword_1EF3FFC80, (uint64_t (*)(uint64_t))type metadata accessor for MedicationsDayHistoryCell, (uint64_t)&unk_1BC2C6AEC);
  result = sub_1BC2B2930();
  *v20 = result;
  v20[1] = v22;
  v23 = (uint64_t *)(a2 + v18[5]);
  *v23 = v24;
  v23[1] = v10;
  *(_QWORD *)(a2 + v18[6]) = v13;
  *(_QWORD *)(a2 + v18[7]) = v25;
  *(_QWORD *)(a2 + v18[8]) = v19;
  *(_BYTE *)(a2 + v18[10]) = 1;
  return result;
}

uint64_t sub_1BC2680A4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  int *v20;
  char v21;
  uint64_t *v22;
  uint64_t result;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[5];

  sub_1BC0E79F0((uint64_t)a1, (uint64_t)v31);
  sub_1BC268430();
  sub_1BC0FC2C0(0);
  v8 = swift_dynamicCast();
  v9 = v30;
  if (!v8)
    v9 = 0;
  v29 = v9;
  v10 = a1[3];
  v11 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v10);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v10, v11);
  v27 = v13;
  v28 = v12;
  v14 = a1[3];
  v15 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v14);
  v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 16))(v14, v15);
  v16 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 8))(a2, a3);
  v17 = a1[3];
  v18 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v17);
  v19 = *(void (**)(uint64_t, uint64_t))(v18 + 24);
  v20 = (int *)type metadata accessor for MedicationsDayHistoryItem();
  v19(v17, v18);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a3 + 16))(v31, a2, a3);
  v21 = v31[0];
  sub_1BC2B242C();
  v22 = (uint64_t *)(a4 + v20[11]);
  type metadata accessor for MedicationsDayHistoryCell();
  sub_1BC0E519C(&qword_1EF3FFC80, (uint64_t (*)(uint64_t))type metadata accessor for MedicationsDayHistoryCell, (uint64_t)&unk_1BC2C6AEC);
  result = sub_1BC2B2930();
  *v22 = result;
  v22[1] = v24;
  v25 = (uint64_t *)(a4 + v20[5]);
  *v25 = v28;
  v25[1] = v27;
  *(_QWORD *)(a4 + v20[6]) = v26;
  *(_QWORD *)(a4 + v20[7]) = v29;
  *(_QWORD *)(a4 + v20[8]) = v16;
  *(_BYTE *)(a4 + v20[10]) = v21;
  return result;
}

uint64_t sub_1BC26827C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BC2680A4(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1BC2682A0(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t *boxed_opaque_existential_1;
  _QWORD v16[3];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v16[2] = a3;
  v6 = type metadata accessor for MedicationsDayHistoryItem();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = MEMORY[0x1E0DEE9D8];
  if (v9)
  {
    v16[1] = v3;
    v20 = MEMORY[0x1E0DEE9D8];
    sub_1BC125B04(0, v9, 0);
    v10 = v20;
    v11 = a1 + 32;
    do
    {
      a2(v11);
      v20 = v10;
      v13 = *(_QWORD *)(v10 + 16);
      v12 = *(_QWORD *)(v10 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1BC125B04(v12 > 1, v13 + 1, 1);
        v10 = v20;
      }
      v18 = v6;
      v19 = sub_1BC0E519C(&qword_1EF401028, (uint64_t (*)(uint64_t))type metadata accessor for MedicationsDayHistoryItem, (uint64_t)&unk_1BC2BBF30);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v17);
      sub_1BC143860((uint64_t)v8, (uint64_t)boxed_opaque_existential_1);
      *(_QWORD *)(v10 + 16) = v13 + 1;
      sub_1BC0F2730(&v17, v10 + 40 * v13 + 32);
      sub_1BC1438A4((uint64_t)v8);
      v11 += 40;
      --v9;
    }
    while (v9);
  }
  return v10;
}

uint64_t dispatch thunk of HistoryItemsProviderDataSource.healthStore.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of HistoryItemsProviderDataSource.context.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of HistoryItemsProviderDataSource.makeHistoryItems(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

unint64_t sub_1BC268430()
{
  unint64_t result;

  result = qword_1EF3FA2B8;
  if (!qword_1EF3FA2B8)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF3FA2B8);
  }
  return result;
}

uint64_t HKMedicationUserDomainConcept.educationSideEffects.getter()
{
  return sub_1BC2684A0((uint64_t (*)(uint64_t, _QWORD))MEMORY[0x1E0D2F130]);
}

uint64_t HKMedicationUserDomainConcept.educationPregnancyDescription.getter()
{
  return sub_1BC2684A0((uint64_t (*)(uint64_t, _QWORD))MEMORY[0x1E0D2F140]);
}

uint64_t sub_1BC2684A0(uint64_t (*a1)(uint64_t, _QWORD))
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v3 = objc_msgSend(v1, sel_localizedOntologyEducationContent);
  if (!v3)
    return 0;
  v4 = v3;
  v5 = sub_1BC0E1D38(0, (unint64_t *)&unk_1EF3FB490);
  v6 = a1(v5, MEMORY[0x1E0D2F1A0]);

  return v6;
}

uint64_t sub_1BC268538()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v0 = _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE8doseFormSSSgvg_0();
  if (v1)
  {
    v2 = v0;
    v3 = v1;
    v4 = _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE8strengthSSSgvg_0();
    if (v5)
    {
      v6 = v4;
      v7 = v5;
      if (qword_1EDA0FEE8 != -1)
        swift_once();
      v8 = (void *)qword_1EDA0FEF8;
      sub_1BC0F1278(0, qword_1EDA0ED40, (unint64_t *)&qword_1EDA0FED0, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_1BC2B92C0;
      v10 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEA968];
      v11 = sub_1BC0F2748();
      *(_QWORD *)(v9 + 32) = v2;
      *(_QWORD *)(v9 + 40) = v3;
      *(_QWORD *)(v9 + 96) = v10;
      *(_QWORD *)(v9 + 104) = v11;
      *(_QWORD *)(v9 + 64) = v11;
      *(_QWORD *)(v9 + 72) = v6;
      *(_QWORD *)(v9 + 80) = v7;
      v12 = v8;
      swift_bridgeObjectRetain();
      sub_1BC2B2144();
      v13 = sub_1BC2B443C();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v13;
    }
    swift_bridgeObjectRelease();
  }
  v14 = _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE8doseFormSSSgvg_0();
  if (!v15)
    return _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE8strengthSSSgvg_0();
  return v14;
}

uint64_t HKMedicationUserDomainConcept.educationLactationDescription.getter()
{
  return sub_1BC2684A0((uint64_t (*)(uint64_t, _QWORD))MEMORY[0x1E0D2F138]);
}

BOOL HKMedicationUserDomainConcept.isOntologyBacked.getter()
{
  void *v0;
  id v1;
  id v2;

  v1 = objc_msgSend(v0, sel_firstOntologyCoding);
  v2 = v1;
  if (v1)

  return v2 != 0;
}

id HKMedicationUserDomainConcept.educationContentProviding.getter@<X0>(_QWORD *a1@<X8>)
{
  id v3;

  a1[3] = sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
  a1[4] = sub_1BC0F1488(&qword_1EF401030, (unint64_t *)&qword_1EDA0FDA0, 0x1E0D2C4D8, (uint64_t)&protocol conformance descriptor for HKMedicationUserDomainConcept);
  *a1 = v3;
  return v3;
}

uint64_t HKMedicationUserDomainConcept.hasEducation.getter()
{
  void *v0;
  id v1;
  void *v2;
  char v3;

  v1 = objc_msgSend(v0, sel_localizedOntologyEducationContent);
  if (v1)
  {
    v2 = v1;
    sub_1BC0E1D38(0, (unint64_t *)&unk_1EF3FB490);
    v3 = sub_1BC2B2870();

  }
  else
  {
    v3 = 0;
  }
  return v3 & 1;
}

uint64_t HKMedicationUserDomainConcept.educationPrimaryContent.getter()
{
  return sub_1BC2684A0(MEMORY[0x1E0D2F150]);
}

uint64_t HKMedicationUserDomainConcept.educationTitle.getter()
{
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
  return sub_1BC2B3758();
}

void *HKMedicationUserDomainConcept.attributions.getter()
{
  void *v0;
  id v1;
  void *v2;
  id v3;

  v1 = objc_msgSend(v0, sel_localizedOntologyEducationContent);
  v2 = v1;
  if (v1)
  {
    v3 = objc_msgSend(v1, sel_primarySection);

    if (v3)
    {
      sub_1BC2B4C34();

      sub_1BC18C440();
      sub_1BC0E519C((unint64_t *)&qword_1EF3FB1E0, (uint64_t (*)(uint64_t))sub_1BC18C440, MEMORY[0x1E0DEAF20]);
      v2 = (void *)sub_1BC2B440C();
      swift_bridgeObjectRelease();
    }
    else
    {
      return 0;
    }
  }
  return v2;
}

uint64_t HKMedicationUserDomainConcept.isPregnancyDescriptionCritical.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v7;

  sub_1BC0E1C64(0, &qword_1EDA0ECC8, (void (*)(uint64_t))MEMORY[0x1E0D2CAB8]);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v7 - v1;
  sub_1BC2B4BD4();
  v3 = sub_1BC2B3788();
  v4 = *(_QWORD *)(v3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_1BC0E1CFC((uint64_t)v2, &qword_1EDA0ECC8, (void (*)(uint64_t))MEMORY[0x1E0D2CAB8]);
    v5 = 0;
  }
  else
  {
    v5 = sub_1BC2B3770();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v2, v3);
  }
  return v5 & 1;
}

uint64_t HKMedicationUserDomainConcept.isLactationDescriptionCritical.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char v6;
  uint64_t v7;

  sub_1BC0E1C64(0, &qword_1EDA0ECC8, (void (*)(uint64_t))MEMORY[0x1E0D2CAB8]);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v7 - v1;
  sub_1BC2B4BD4();
  v3 = sub_1BC2B3788();
  v4 = *(_QWORD *)(v3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_1BC0E1CFC((uint64_t)v2, &qword_1EDA0ECC8, (void (*)(uint64_t))MEMORY[0x1E0D2CAB8]);
    return 2;
  }
  else
  {
    v6 = sub_1BC2B377C();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v2, v3);
    return v6 & 1;
  }
}

uint64_t HKMedicationUserDomainConcept.uniqueIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_1BC2B2438();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B242C();
  v4 = sub_1BC2B23FC();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_1BC268BA4()
{
  id *v0;
  id v1;
  void *v2;
  char v3;

  v1 = objc_msgSend(*v0, sel_localizedOntologyEducationContent);
  if (v1)
  {
    v2 = v1;
    sub_1BC0E1D38(0, (unint64_t *)&unk_1EF3FB490);
    v3 = sub_1BC2B2870();

  }
  else
  {
    v3 = 0;
  }
  return v3 & 1;
}

uint64_t sub_1BC268C24(uint64_t a1, uint64_t a2)
{
  return sub_1BC268C8C(a1, a2, MEMORY[0x1E0D2F150]);
}

uint64_t sub_1BC268C30()
{
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
  return sub_1BC2B3758();
}

uint64_t sub_1BC268C80(uint64_t a1, uint64_t a2)
{
  return sub_1BC268C8C(a1, a2, (uint64_t (*)(uint64_t, _QWORD))MEMORY[0x1E0D2F130]);
}

uint64_t sub_1BC268C8C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, _QWORD))
{
  id *v3;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  v5 = objc_msgSend(*v3, sel_localizedOntologyEducationContent);
  if (!v5)
    return 0;
  v6 = v5;
  v7 = sub_1BC0E1D38(0, (unint64_t *)&unk_1EF3FB490);
  v8 = a3(v7, MEMORY[0x1E0D2F1A0]);

  return v8;
}

uint64_t sub_1BC268D24(uint64_t a1, uint64_t a2)
{
  return sub_1BC268C8C(a1, a2, (uint64_t (*)(uint64_t, _QWORD))MEMORY[0x1E0D2F140]);
}

uint64_t sub_1BC268D30()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v7;

  sub_1BC0E1C64(0, &qword_1EDA0ECC8, (void (*)(uint64_t))MEMORY[0x1E0D2CAB8]);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v7 - v1;
  sub_1BC2B4BD4();
  v3 = sub_1BC2B3788();
  v4 = *(_QWORD *)(v3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_1BC0E1CFC((uint64_t)v2, &qword_1EDA0ECC8, (void (*)(uint64_t))MEMORY[0x1E0D2CAB8]);
    v5 = 0;
  }
  else
  {
    v5 = sub_1BC2B3770();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v2, v3);
  }
  return v5 & 1;
}

uint64_t sub_1BC268E0C(uint64_t a1, uint64_t a2)
{
  return sub_1BC268C8C(a1, a2, (uint64_t (*)(uint64_t, _QWORD))MEMORY[0x1E0D2F138]);
}

uint64_t sub_1BC268E18()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char v6;
  uint64_t v7;

  sub_1BC0E1C64(0, &qword_1EDA0ECC8, (void (*)(uint64_t))MEMORY[0x1E0D2CAB8]);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v7 - v1;
  sub_1BC2B4BD4();
  v3 = sub_1BC2B3788();
  v4 = *(_QWORD *)(v3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_1BC0E1CFC((uint64_t)v2, &qword_1EDA0ECC8, (void (*)(uint64_t))MEMORY[0x1E0D2CAB8]);
    return 2;
  }
  else
  {
    v6 = sub_1BC2B377C();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v2, v3);
    return v6 & 1;
  }
}

void *sub_1BC268EF4()
{
  return HKMedicationUserDomainConcept.attributions.getter();
}

uint64_t sub_1BC268F14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_1BC2B2438();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B242C();
  v4 = sub_1BC2B23FC();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t HKMedicationUserDomainConcept.doseFormStrength.getter()
{
  void *v0;
  id v1;
  uint64_t v2;

  v1 = v0;
  v2 = sub_1BC268538();

  return v2;
}

BOOL sub_1BC268FEC()
{
  id *v0;
  id v1;
  id v2;

  v1 = objc_msgSend(*v0, sel_firstOntologyCoding);
  v2 = v1;
  if (v1)

  return v2 != 0;
}

uint64_t sub_1BC269030()
{
  return _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE7medmoji0eF10Experience29MedicationVisualizationConfigVSgvg_0();
}

uint64_t sub_1BC269050()
{
  return _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE5titleSSvg_0();
}

uint64_t sub_1BC269070()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = *v0;
  v2 = sub_1BC268538();

  return v2;
}

id sub_1BC2690B4@<X0>(_QWORD *a1@<X8>)
{
  id *v1;
  id v4;

  v4 = *v1;
  a1[3] = sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
  a1[4] = sub_1BC0F1488(&qword_1EF401030, (unint64_t *)&qword_1EDA0FDA0, 0x1E0D2C4D8, (uint64_t)&protocol conformance descriptor for HKMedicationUserDomainConcept);
  *a1 = v4;
  return v4;
}

uint64_t MedicationCompactEducationDataSource.__allocating_init(with:analyticsManager:)(uint64_t a1, uint64_t a2)
{
  swift_allocObject();
  return MedicationCompactEducationDataSource.init(with:analyticsManager:)(a1, a2);
}

uint64_t MedicationCompactEducationDataSource.init(with:analyticsManager:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  void *v14;

  v5 = qword_1EF401038;
  *(_QWORD *)(v2 + qword_1EF401038) = 0;
  *(_QWORD *)(v2 + qword_1EF401040) = MEMORY[0x1E0DEE9E8];
  v6 = qword_1EDA0FEE8;
  swift_retain();
  if (v6 != -1)
    swift_once();
  v7 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  v8 = sub_1BC2B2144();
  v10 = v9;
  swift_bridgeObjectRelease();

  v11 = (uint64_t *)(v2 + qword_1EF401048);
  *v11 = v8;
  v11[1] = v10;
  *(_QWORD *)(v2 + v5) = a1;
  swift_retain();
  swift_release();
  *(_QWORD *)(v2 + qword_1EF401050) = a2;
  swift_retain();
  swift_release();
  v12 = sub_1BC2B2750();
  swift_retain();
  sub_1BC2693A8(a1);
  sub_1BC2B3ED8();
  sub_1BC269BE8(v14, v12);

  swift_release();
  swift_release();
  swift_release();
  return v12;
}

uint64_t MedicationCompactEducationDataSource.__allocating_init(with:analyticsManager:)(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;

  swift_allocObject();
  v4 = sub_1BC26AA44(a1, a2);
  swift_release();
  return v4;
}

uint64_t MedicationCompactEducationDataSource.init(with:analyticsManager:)(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;

  v2 = sub_1BC26AA44(a1, a2);
  swift_release();
  return v2;
}

uint64_t sub_1BC2693A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;

  sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0FCC0, (void (*)(uint64_t))MEMORY[0x1E0DEF868]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v13 - v3;
  sub_1BC18C600();
  v6 = v5;
  v14 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1;
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FFF0);
  v16 = (id)sub_1BC2B4A0C();
  v9 = sub_1BC2B49C4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 1, 1, v9);
  sub_1BC106408();
  sub_1BC0E519C(&qword_1EF3F9748, (uint64_t (*)(uint64_t))sub_1BC106408, MEMORY[0x1E0C95FB8]);
  sub_1BC0F1488((unint64_t *)&qword_1EDA0FCC8, (unint64_t *)&qword_1EDA0FFF0, 0x1E0C80610, MEMORY[0x1E0DEF7F8]);
  sub_1BC2B4064();
  sub_1BC0E1CFC((uint64_t)v4, (unint64_t *)&qword_1EDA0FCC0, (void (*)(uint64_t))MEMORY[0x1E0DEF868]);

  v10 = swift_allocObject();
  swift_weakInit();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = a1;
  sub_1BC0E519C((unint64_t *)&unk_1EF3FC700, (uint64_t (*)(uint64_t))sub_1BC18C600, MEMORY[0x1E0C95CB8]);
  swift_retain();
  sub_1BC2B40A0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v6);
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BC269630()
{
  uint64_t result;
  uint64_t v1;
  void *v2;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    sub_1BC2B3ED8();
    sub_1BC269BE8(v2, v1);

    return swift_release();
  }
  return result;
}

void MedicationCompactEducationDataSource.__allocating_init(arrangedSections:isHidden:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void MedicationCompactEducationDataSource.init(arrangedSections:isHidden:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC2696F8()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t MedicationCompactEducationDataSource.deinit()
{
  uint64_t v0;

  v0 = _s19HealthMedicationsUI34InteractionSeperatorLineDataSourceCfd_0();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MedicationCompactEducationDataSource.__deallocating_deinit()
{
  _s19HealthMedicationsUI34InteractionSeperatorLineDataSourceCfd_0();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC269820()
{
  MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for MedicationCompactEducationDataSource);
  return sub_1BC2B3074();
}

Swift::Void __swiftcall MedicationCompactEducationDataSource.registerCells(for:)(UICollectionView *a1)
{
  sub_1BC2B3038();
  sub_1BC2B497C();
  sub_1BC2B2F78();
  sub_1BC2B4994();
  type metadata accessor for MedicationComponentsItemCell();
  sub_1BC0E519C(&qword_1EF3FBE00, (uint64_t (*)(uint64_t))type metadata accessor for MedicationComponentsItemCell, (uint64_t)&protocol conformance descriptor for MedicationComponentsItemCell);
  sub_1BC2B497C();
  type metadata accessor for MedicationEducationItemCell();
  sub_1BC0E519C(&qword_1EF3FE550, (uint64_t (*)(uint64_t))type metadata accessor for MedicationEducationItemCell, (uint64_t)&protocol conformance descriptor for MedicationEducationItemCell);
  sub_1BC2B497C();
}

uint64_t sub_1BC269928()
{
  sub_1BC2B3038();
  sub_1BC2B497C();
  sub_1BC2B2F78();
  sub_1BC2B4994();
  type metadata accessor for MedicationComponentsItemCell();
  sub_1BC0E519C(&qword_1EF3FBE00, (uint64_t (*)(uint64_t))type metadata accessor for MedicationComponentsItemCell, (uint64_t)&protocol conformance descriptor for MedicationComponentsItemCell);
  sub_1BC2B497C();
  type metadata accessor for MedicationEducationItemCell();
  sub_1BC0E519C(&qword_1EF3FE550, (uint64_t (*)(uint64_t))type metadata accessor for MedicationEducationItemCell, (uint64_t)&protocol conformance descriptor for MedicationEducationItemCell);
  return sub_1BC2B497C();
}

uint64_t MedicationCompactEducationDataSource.supplementaryItem(ofKind:at:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t result;

  v2 = sub_1BC2B3CD4();
  MEMORY[0x1E0C80A78](v2);
  swift_bridgeObjectRetain();
  sub_1BC2B3C68();
  v3 = sub_1BC2B28F4();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2A8B8];
  swift_allocObject();
  v5 = sub_1BC2B28E8();
  a1[3] = v3;
  result = sub_1BC0E519C((unint64_t *)&qword_1EF3F96B8, v4, MEMORY[0x1E0D2A8A0]);
  a1[4] = result;
  *a1 = v5;
  return result;
}

uint64_t sub_1BC269AE4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t result;

  v2 = sub_1BC2B3CD4();
  MEMORY[0x1E0C80A78](v2);
  swift_bridgeObjectRetain();
  sub_1BC2B3C68();
  v3 = sub_1BC2B28F4();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2A8B8];
  swift_allocObject();
  v5 = sub_1BC2B28E8();
  a1[3] = v3;
  result = sub_1BC0E519C((unint64_t *)&qword_1EF3F96B8, v4, MEMORY[0x1E0D2A8A0]);
  a1[4] = result;
  *a1 = v5;
  return result;
}

uint64_t sub_1BC269BE8(void *a1, uint64_t a2)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  id v18;
  unint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56[5];
  _QWORD v57[3];
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD v61[6];

  v50 = a2;
  v49 = sub_1BC2B2438();
  v48 = *(_QWORD *)(v49 - 8);
  MEMORY[0x1E0C80A78](v49);
  v4 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E1C64(0, &qword_1EF3FC6F0, (void (*)(uint64_t))MEMORY[0x1E0D2B090]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v48 - v6;
  v8 = sub_1BC2B2BC4();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v48 - v14;
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v48 - v16;
  v61[3] = sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
  v61[4] = &protocol witness table for HKMedicationUserDomainConcept;
  v61[0] = a1;
  v60 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1BC0E79F0((uint64_t)v61, (uint64_t)v57);
  v18 = a1;
  sub_1BC258050((uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_1BC0E1CFC((uint64_t)v7, &qword_1EF3FC6F0, (void (*)(uint64_t))MEMORY[0x1E0D2B090]);
    v19 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v20 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v20(v17, v7, v8);
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v15, v17, v8);
    v19 = sub_1BC0FA280(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v22 = *(_QWORD *)(v19 + 16);
    v21 = *(_QWORD *)(v19 + 24);
    if (v22 >= v21 >> 1)
      v19 = sub_1BC0FA280(v21 > 1, v22 + 1, 1, v19);
    *(_QWORD *)(v19 + 16) = v22 + 1;
    v20((char *)(v19+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v22), v15, v8);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v17, v8);
  }
  sub_1BC258258(1, (uint64_t)&v53);
  if (v54)
  {
    sub_1BC0F2730(&v53, (uint64_t)v56);
    sub_1BC0E79F0((uint64_t)v56, (uint64_t)&v53);
    v23 = v60;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v23 = sub_1BC0FA038(0, v23[2] + 1, 1, v23);
      v60 = v23;
    }
    v25 = v23[2];
    v24 = v23[3];
    if (v25 >= v24 >> 1)
      v60 = sub_1BC0FA038((_QWORD *)(v24 > 1), v25 + 1, 1, v23);
    v26 = v54;
    v27 = v55;
    v28 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v53, v54);
    MEMORY[0x1E0C80A78](v28);
    v30 = (char *)&v48 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v31 + 16))(v30);
    sub_1BC26E1B4(v25, (uint64_t)v30, (uint64_t *)&v60, v26, v27);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v53);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v56);
  }
  else
  {
    sub_1BC18C5BC((uint64_t)&v53, (unint64_t *)&qword_1EDA0F7D0, (unint64_t *)&qword_1EDA0F7C0, MEMORY[0x1E0D2A060]);
  }
  v32 = *(_QWORD *)(v50 + qword_1EF401050);
  LOBYTE(v56[0]) = 0;
  sub_1BC258D6C(v56, v32, (uint64_t)&v53);
  if (v54)
  {
    sub_1BC0F2730(&v53, (uint64_t)v56);
  }
  else
  {
    sub_1BC18C5BC((uint64_t)&v53, (unint64_t *)&qword_1EDA0F7D0, (unint64_t *)&qword_1EDA0F7C0, MEMORY[0x1E0D2A060]);
    sub_1BC258A5C(v56);
  }
  sub_1BC0E79F0((uint64_t)v56, (uint64_t)&v53);
  v33 = v60;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v33 = sub_1BC0FA038(0, v33[2] + 1, 1, v33);
    v60 = v33;
  }
  v35 = v33[2];
  v34 = v33[3];
  if (v35 >= v34 >> 1)
    v60 = sub_1BC0FA038((_QWORD *)(v34 > 1), v35 + 1, 1, v33);
  v36 = v54;
  v37 = v55;
  v38 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v53, v54);
  MEMORY[0x1E0C80A78](v38);
  v40 = (char *)&v48 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v41 + 16))(v40);
  sub_1BC26E1B4(v35, (uint64_t)v40, (uint64_t *)&v60, v36, v37);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v53);
  sub_1BC258860((uint64_t)&v51);
  if (v52)
  {
    sub_1BC0F2730(&v51, (uint64_t)&v53);
    v42 = v58;
    v43 = v59;
    __swift_project_boxed_opaque_existential_0(v57, v58);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v43 + 48))(&v51, v42, v43);
    if (v52)
    {
      __swift_project_boxed_opaque_existential_0(&v51, v52);
      v44 = sub_1BC2B2780();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v51);
      if ((v44 & 1) != 0)
      {
        sub_1BC0E79F0((uint64_t)&v53, (uint64_t)&v51);
        sub_1BC1354CC(0, 0, (uint64_t)&v51);
      }
    }
    else
    {
      sub_1BC18C5BC((uint64_t)&v51, (unint64_t *)&qword_1EF3FC688, (unint64_t *)&qword_1EF3FC690, MEMORY[0x1E0D2F0A0]);
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v53);
  }
  else
  {
    sub_1BC18C5BC((uint64_t)&v51, (unint64_t *)&qword_1EDA0F7D0, (unint64_t *)&qword_1EDA0F7C0, MEMORY[0x1E0D2A060]);
  }
  sub_1BC2B242C();
  sub_1BC2B23FC();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v4, v49);
  sub_1BC2B2BAC();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v19 = sub_1BC0FA280(0, *(_QWORD *)(v19 + 16) + 1, 1, v19);
  v46 = *(_QWORD *)(v19 + 16);
  v45 = *(_QWORD *)(v19 + 24);
  if (v46 >= v45 >> 1)
    v19 = sub_1BC0FA280(v45 > 1, v46 + 1, 1, v19);
  *(_QWORD *)(v19 + 16) = v46 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v19+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v46, v12, v8);
  sub_1BC2B2744();
  sub_1BC2B2A08();
  swift_release();
  sub_1BC2B2C18();
  swift_release();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v56);
  sub_1BC18C40C((uint64_t)v57);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v61);
}

uint64_t sub_1BC26A318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t *boxed_opaque_existential_1;
  unint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60[5];
  _QWORD v61[3];
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65[6];

  v54 = a2;
  v53 = sub_1BC2B2438();
  v52 = *(_QWORD *)(v53 - 8);
  MEMORY[0x1E0C80A78](v53);
  v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E1C64(0, &qword_1EF3FC6F0, (void (*)(uint64_t))MEMORY[0x1E0D2B090]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v52 - v10;
  v12 = sub_1BC2B2BC4();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v14);
  v19 = (char *)&v52 - v18;
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v52 - v20;
  v65[3] = a3;
  v65[4] = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v65);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_1, a1, a3);
  v64 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1BC0E79F0((uint64_t)v65, (uint64_t)v61);
  sub_1BC258050((uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_1BC0E1CFC((uint64_t)v11, &qword_1EF3FC6F0, (void (*)(uint64_t))MEMORY[0x1E0D2B090]);
    v23 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v24 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
    v24(v21, v11, v12);
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v19, v21, v12);
    v23 = sub_1BC0FA280(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v26 = *(_QWORD *)(v23 + 16);
    v25 = *(_QWORD *)(v23 + 24);
    if (v26 >= v25 >> 1)
      v23 = sub_1BC0FA280(v25 > 1, v26 + 1, 1, v23);
    *(_QWORD *)(v23 + 16) = v26 + 1;
    v24((char *)(v23+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(_QWORD *)(v13 + 72) * v26), v19, v12);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v21, v12);
  }
  sub_1BC258258(1, (uint64_t)&v57);
  if (v58)
  {
    sub_1BC0F2730(&v57, (uint64_t)v60);
    sub_1BC0E79F0((uint64_t)v60, (uint64_t)&v57);
    v27 = v64;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v27 = sub_1BC0FA038(0, v27[2] + 1, 1, v27);
      v64 = v27;
    }
    v29 = v27[2];
    v28 = v27[3];
    if (v29 >= v28 >> 1)
      v64 = sub_1BC0FA038((_QWORD *)(v28 > 1), v29 + 1, 1, v27);
    v30 = v58;
    v31 = v59;
    v32 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v57, v58);
    MEMORY[0x1E0C80A78](v32);
    v34 = (char *)&v52 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v35 + 16))(v34);
    sub_1BC26E1B4(v29, (uint64_t)v34, (uint64_t *)&v64, v30, v31);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v57);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v60);
  }
  else
  {
    sub_1BC18C5BC((uint64_t)&v57, (unint64_t *)&qword_1EDA0F7D0, (unint64_t *)&qword_1EDA0F7C0, MEMORY[0x1E0D2A060]);
  }
  v36 = *(_QWORD *)(v54 + qword_1EF401050);
  LOBYTE(v60[0]) = 0;
  sub_1BC258D6C(v60, v36, (uint64_t)&v57);
  if (v58)
  {
    sub_1BC0F2730(&v57, (uint64_t)v60);
  }
  else
  {
    sub_1BC18C5BC((uint64_t)&v57, (unint64_t *)&qword_1EDA0F7D0, (unint64_t *)&qword_1EDA0F7C0, MEMORY[0x1E0D2A060]);
    sub_1BC258A5C(v60);
  }
  sub_1BC0E79F0((uint64_t)v60, (uint64_t)&v57);
  v37 = v64;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v37 = sub_1BC0FA038(0, v37[2] + 1, 1, v37);
    v64 = v37;
  }
  v39 = v37[2];
  v38 = v37[3];
  if (v39 >= v38 >> 1)
    v64 = sub_1BC0FA038((_QWORD *)(v38 > 1), v39 + 1, 1, v37);
  v40 = v58;
  v41 = v59;
  v42 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v57, v58);
  MEMORY[0x1E0C80A78](v42);
  v44 = (char *)&v52 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v45 + 16))(v44);
  sub_1BC26E1B4(v39, (uint64_t)v44, (uint64_t *)&v64, v40, v41);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v57);
  sub_1BC258860((uint64_t)&v55);
  if (v56)
  {
    sub_1BC0F2730(&v55, (uint64_t)&v57);
    v46 = v62;
    v47 = v63;
    __swift_project_boxed_opaque_existential_0(v61, v62);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v47 + 48))(&v55, v46, v47);
    if (v56)
    {
      __swift_project_boxed_opaque_existential_0(&v55, v56);
      v48 = sub_1BC2B2780();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v55);
      if ((v48 & 1) != 0)
      {
        sub_1BC0E79F0((uint64_t)&v57, (uint64_t)&v55);
        sub_1BC1354CC(0, 0, (uint64_t)&v55);
      }
    }
    else
    {
      sub_1BC18C5BC((uint64_t)&v55, (unint64_t *)&qword_1EF3FC688, (unint64_t *)&qword_1EF3FC690, MEMORY[0x1E0D2F0A0]);
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v57);
  }
  else
  {
    sub_1BC18C5BC((uint64_t)&v55, (unint64_t *)&qword_1EDA0F7D0, (unint64_t *)&qword_1EDA0F7C0, MEMORY[0x1E0D2A060]);
  }
  sub_1BC2B242C();
  sub_1BC2B23FC();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v8, v53);
  sub_1BC2B2BAC();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v23 = sub_1BC0FA280(0, *(_QWORD *)(v23 + 16) + 1, 1, v23);
  v50 = *(_QWORD *)(v23 + 16);
  v49 = *(_QWORD *)(v23 + 24);
  if (v50 >= v49 >> 1)
    v23 = sub_1BC0FA280(v49 > 1, v50 + 1, 1, v23);
  *(_QWORD *)(v23 + 16) = v50 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v23+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(_QWORD *)(v13 + 72) * v50, v16, v12);
  sub_1BC2B2744();
  sub_1BC2B2A08();
  swift_release();
  sub_1BC2B2C18();
  swift_release();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v60);
  sub_1BC18C40C((uint64_t)v61);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v65);
}

uint64_t sub_1BC26AA44(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  *(_QWORD *)(v2 + qword_1EF401038) = 0;
  *(_QWORD *)(v2 + qword_1EF401040) = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v2 + qword_1EF401050) = a2;
  v4 = qword_1EDA0FEE8;
  swift_retain();
  swift_retain();
  if (v4 != -1)
    swift_once();
  v5 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  v6 = sub_1BC2B2144();
  v8 = v7;
  swift_bridgeObjectRelease();

  v9 = (uint64_t *)(v2 + qword_1EF401048);
  *v9 = v6;
  v9[1] = v8;
  swift_release();
  v10 = sub_1BC2B2750();
  v11 = a1[3];
  v12 = a1[4];
  v13 = __swift_project_boxed_opaque_existential_0(a1, v11);
  swift_retain();
  sub_1BC26A318((uint64_t)v13, v10, v11, v12);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v10;
}

uint64_t sub_1BC26ABC0()
{
  return sub_1BC0E519C(&qword_1EF401058, (uint64_t (*)(uint64_t))type metadata accessor for MedicationCompactEducationDataSource, (uint64_t)&protocol conformance descriptor for MedicationCompactEducationDataSource);
}

uint64_t type metadata accessor for MedicationCompactEducationDataSource()
{
  uint64_t result;

  result = qword_1EF401060;
  if (!qword_1EF401060)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC26AC28()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for MedicationCompactEducationDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicationCompactEducationDataSource.__allocating_init(with:analyticsManager:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(class metadata base offset for MedicationCompactEducationDataSource + v0 + 104))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(class metadata base offset for MedicationCompactEducationDataSource + v0 + 112))();
}

uint64_t dispatch thunk of MedicationCompactEducationDataSource.layout(for:environment:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for MedicationCompactEducationDataSource + *v0 + 128))();
}

uint64_t sub_1BC26ACE0()
{
  return type metadata accessor for MedicationCompactEducationDataSource();
}

uint64_t sub_1BC26ACE8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC26AD0C()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC26AD38()
{
  return sub_1BC269630();
}

uint64_t type metadata accessor for MedicationFormsDataSource()
{
  uint64_t result;

  result = qword_1EF4010C8;
  if (!qword_1EF4010C8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC26AD7C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1BC26ADE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  v3 = sub_1BC26E988(a1, a2, a3);
  swift_release();
  return v3;
}

uint64_t sub_1BC26AE2C()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD v12[3];
  id v13;

  v1 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868];
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0FCC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v12 - v3;
  sub_1BC26F190(0, &qword_1EF401140, (void (*)(uint64_t))sub_1BC16EB5C, (void (*)(void))sub_1BC26F12C);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v12 - v8;
  v12[0] = *(_QWORD *)(v0 + qword_1EF3FB588);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FFF0);
  swift_retain();
  v13 = (id)sub_1BC2B4A0C();
  v10 = sub_1BC2B49C4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v4, 1, 1, v10);
  sub_1BC16EB5C();
  sub_1BC26F12C();
  sub_1BC1019D8();
  sub_1BC2B4064();
  sub_1BC0F2444((uint64_t)v4, (unint64_t *)&qword_1EDA0FCC0, v1);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_1BC26F150(&qword_1EF401150, &qword_1EF401140, (void (*)(uint64_t))sub_1BC16EB5C, (void (*)(void))sub_1BC26F12C);
  sub_1BC2B40A0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BC26B088()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD v12[3];
  id v13;

  v1 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868];
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0FCC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v12 - v3;
  sub_1BC26F190(0, &qword_1EF401158, (void (*)(uint64_t))sub_1BC1285D8, (void (*)(void))sub_1BC128690);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v12 - v8;
  v12[0] = *(_QWORD *)(v0 + qword_1EF3FB588);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FFF0);
  swift_retain();
  v13 = (id)sub_1BC2B4A0C();
  v10 = sub_1BC2B49C4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v4, 1, 1, v10);
  sub_1BC1285D8();
  sub_1BC128690();
  sub_1BC1019D8();
  sub_1BC2B4064();
  sub_1BC0F2444((uint64_t)v4, (unint64_t *)&qword_1EDA0FCC0, v1);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_1BC26F150(&qword_1EF401160, &qword_1EF401158, (void (*)(uint64_t))sub_1BC1285D8, (void (*)(void))sub_1BC128690);
  sub_1BC2B40A0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  return swift_release();
}

_QWORD *sub_1BC26B2E4()
{
  _QWORD *result;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  swift_beginAccess();
  result = (_QWORD *)swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    (*(void (**)(void))(class metadata base offset for MedicationOptionsDataSource + *result + 80))();
    sub_1BC2B2C24();
    v2 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t))(class metadata base offset for MedicationOptionsDataSource + *v1 + 88))(v2);
    sub_1BC2B2C24();
    v3 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t))(class metadata base offset for MedicationOptionsDataSource + *v1 + 96))(v3);
    sub_1BC2B2C24();
    swift_release();
    return (_QWORD *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BC26B3D8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(_BYTE *, uint64_t);
  void (*v18)(_BYTE *, _QWORD);
  uint64_t v19;
  uint64_t v20;
  void (*v21)(_BYTE *, uint64_t);
  _BYTE v23[32];

  v3 = sub_1BC2B2D20();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = &v23[-v9];
  MEMORY[0x1E0C80A78](v8);
  v12 = &v23[-v11];
  sub_1BC2B2CC0();
  (*(void (**)(uint64_t))(class metadata base offset for MedicationOptionsDataSource + *v1 + 104))(a1);
  v14 = v13;
  swift_bridgeObjectRelease();
  if (v14)
  {
    sub_1BC2B2C9C();
    (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v12, v3);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 32))(v12, v10, v3);
  }
  (*(void (**)(uint64_t))(class metadata base offset for MedicationOptionsDataSource + *v1 + 112))(a1);
  v16 = v15;
  swift_bridgeObjectRelease();
  if (v16)
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v10, v12, v3);
    sub_1BC2B2C90();
    v17 = *(void (**)(_BYTE *, uint64_t))(v4 + 8);
    v17(v10, v3);
    v17(v12, v3);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 32))(v12, v7, v3);
  }
  v18 = (void (*)(_BYTE *, _QWORD))sub_1BC2B2CF0();
  *(_QWORD *)(v19 + 16) = 0;
  v18(v23, 0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v10, v12, v3);
  v20 = sub_1BC267620();
  v21 = *(void (**)(_BYTE *, uint64_t))(v4 + 8);
  v21(v10, v3);
  v21(v12, v3);
  return v20;
}

_QWORD *sub_1BC26B5D0(uint64_t a1, uint64_t a2)
{
  swift_allocObject();
  return sub_1BC26BA7C(a1, a2);
}

uint64_t sub_1BC26B618()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = qword_1EF4010C0;
  if (*(_QWORD *)(v0 + qword_1EF4010C0))
  {
    v2 = *(_QWORD *)(v0 + qword_1EF4010C0);
  }
  else
  {
    v2 = sub_1BC26B67C(v0);
    *(_QWORD *)(v0 + v1) = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1BC26B67C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v2 = sub_1BC2B37C4();
  v29 = *(_QWORD *)(v2 - 8);
  v30 = v2;
  MEMORY[0x1E0C80A78](v2);
  v28 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BC2B34A0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v27 - v9;
  v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8980, type metadata accessor for MedicationSearchItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v27 - v13;
  sub_1BC0E7998(0, &qword_1EF401118, type metadata accessor for MedicationSearchItem.Source, v11);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v27 - v19;
  sub_1BC118700(a1 + qword_1EF4026C0, (uint64_t)v14, (unint64_t *)&qword_1EF3F8980, type metadata accessor for MedicationSearchItem);
  v21 = type metadata accessor for MedicationSearchItem(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v14, 1, v21) == 1)
  {
    sub_1BC0F2444((uint64_t)v14, (unint64_t *)&qword_1EF3F8980, type metadata accessor for MedicationSearchItem);
    v22 = type metadata accessor for MedicationSearchItem.Source(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v20, 1, 1, v22);
LABEL_6:
    v25 = MEMORY[0x1E0DEE9D8];
    goto LABEL_7;
  }
  sub_1BC0FC574((uint64_t)v14, (uint64_t)v20, type metadata accessor for MedicationSearchItem.Source);
  sub_1BC0E8594((uint64_t)v14, type metadata accessor for MedicationSearchItem);
  v23 = type metadata accessor for MedicationSearchItem.Source(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v20, 0, 1, v23);
  sub_1BC118700((uint64_t)v20, (uint64_t)v18, &qword_1EF401118, type metadata accessor for MedicationSearchItem.Source);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1BC0E8594((uint64_t)v18, type metadata accessor for MedicationSearchItem.Source);
    goto LABEL_6;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v18, v4);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
  v24 = v28;
  sub_1BC2B37D0();
  v31 = sub_1BC2B37A0();
  swift_getKeyPath();
  sub_1BC0E7998(0, &qword_1EF401120, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C890], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC26EB4C();
  v25 = sub_1BC2B4550();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v24, v30);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
LABEL_7:
  sub_1BC0F2444((uint64_t)v20, &qword_1EF401118, type metadata accessor for MedicationSearchItem.Source);
  return v25;
}

BOOL sub_1BC26BA18()
{
  sub_1BC0FF070();
  return sub_1BC2B5018() == -1;
}

_QWORD *sub_1BC26BA7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v3 = v2;
  v46 = a1;
  v5 = sub_1BC2B3530();
  v42 = *(_QWORD *)(v5 - 8);
  v43 = v5;
  MEMORY[0x1E0C80A78](v5);
  v41 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FormStepResult();
  v47 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v45 = (uint64_t)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v44 = (uint64_t)&v40 - v10;
  v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC0E7998(0, &qword_1EF3FB840, v12, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v40 - v17;
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8980, type metadata accessor for MedicationSearchItem, v11);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v40 - v20;
  *(_BYTE *)(v3 + qword_1EF4010B0) = 0;
  v22 = (_QWORD *)(v3 + qword_1EF4010B8);
  *v22 = 0;
  v22[1] = 0;
  v23 = (uint64_t *)(v3 + qword_1EF402C18);
  v48 = sub_1BC2B4460();
  v49 = v24;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  v25 = v48;
  v26 = v49;
  swift_retain();
  swift_bridgeObjectRelease();
  *v23 = v25;
  v23[1] = v26;
  v27 = v46;
  *(_QWORD *)(v3 + qword_1EF4010C0) = 0;
  swift_release();
  sub_1BC118700(v27, (uint64_t)v21, (unint64_t *)&qword_1EF3F8980, type metadata accessor for MedicationSearchItem);
  swift_retain();
  v28 = sub_1BC26ECE0((uint64_t)v21, a2, (void (*)(uint64_t))sub_1BC26AE2C);
  swift_release();
  swift_retain();
  sub_1BC2B3ED8();
  sub_1BC118700((uint64_t)v18, (uint64_t)v16, &qword_1EF3FB840, (uint64_t (*)(uint64_t))type metadata accessor for FormStepResult);
  v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v47 + 48))(v16, 1, v7);
  v30 = 0;
  v31 = 0;
  if (v29 != 1)
  {
    v32 = v44;
    sub_1BC26F0E8((uint64_t)v16, v44);
    v33 = v45;
    sub_1BC0FC574(v32, v45, (uint64_t (*)(_QWORD))type metadata accessor for FormStepResult);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v30 = 0;
      v31 = 0;
    }
    else
    {
      v35 = v41;
      v34 = v42;
      v36 = v43;
      (*(void (**)(char *, uint64_t, uint64_t))(v42 + 32))(v41, v33, v43);
      v30 = sub_1BC2B3518();
      v31 = v37;
      (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v36);
    }
    sub_1BC0E8594(v32, (uint64_t (*)(_QWORD))type metadata accessor for FormStepResult);
  }
  swift_release();
  swift_release();
  sub_1BC0F2444(v27, (unint64_t *)&qword_1EF3F8980, type metadata accessor for MedicationSearchItem);
  sub_1BC0F2444((uint64_t)v18, &qword_1EF3FB840, (uint64_t (*)(uint64_t))type metadata accessor for FormStepResult);
  v38 = (_QWORD *)((char *)v28 + qword_1EF4010B8);
  *v38 = v30;
  v38[1] = v31;
  swift_bridgeObjectRelease();
  return v28;
}

uint64_t sub_1BC26BE40(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v10;

  v2 = sub_1BC2B2D20();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 < 2)
    return sub_1BC26B3D8(a1);
  if (a1 == 2)
  {
    v7 = (void *)sub_1BC26B3D8(2);
    v6 = (uint64_t)v7;
    if (v7)
    {
      v8 = v7;
      objc_msgSend(v8, sel_contentInsets);
      objc_msgSend(v8, sel_setContentInsets_, 16.0);

    }
  }
  else
  {
    sub_1BC2B2CC0();
    v6 = sub_1BC2B2D14();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return v6;
}

_QWORD *sub_1BC26BF3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD v19[2];
  uint64_t v20;
  void (*v21)(char *, unint64_t, uint64_t);
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26[2];
  _QWORD *v27;

  v0 = sub_1BC2B3530();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BC26B618();
  swift_weakInit();
  v27 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    v6 = v4 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
    v7 = *(_QWORD *)(v1 + 72);
    v21 = *(void (**)(char *, unint64_t, uint64_t))(v1 + 16);
    v22 = v7;
    v19[1] = v4;
    swift_bridgeObjectRetain();
    v20 = v1;
    do
    {
      v21(v3, v6, v0);
      sub_1BC26C1C4((uint64_t)v3, (uint64_t)&v23);
      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
      if (v24)
      {
        sub_1BC0F2730(&v23, (uint64_t)v26);
        sub_1BC0F2730(v26, (uint64_t)&v23);
        v8 = v27;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          v8 = sub_1BC0FA038(0, v8[2] + 1, 1, v8);
          v27 = v8;
        }
        v10 = v8[2];
        v9 = v8[3];
        if (v10 >= v9 >> 1)
          v27 = sub_1BC0FA038((_QWORD *)(v9 > 1), v10 + 1, 1, v8);
        v11 = v24;
        v12 = v25;
        v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v23, v24);
        MEMORY[0x1E0C80A78](v13);
        v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v16 + 16))(v15);
        sub_1BC26E1B4(v10, (uint64_t)v15, (uint64_t *)&v27, v11, v12);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v23);
        v1 = v20;
      }
      else
      {
        sub_1BC0F2444((uint64_t)&v23, (unint64_t *)&qword_1EDA0F7D0, (uint64_t (*)(uint64_t))sub_1BC0E1B94);
      }
      v6 += v22;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease_n();
    v17 = v27;
  }
  else
  {
    swift_bridgeObjectRelease();
    v17 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_weakDestroy();
  return v17;
}

uint64_t sub_1BC26C1C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void (*v30)(uint64_t *, _QWORD);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *boxed_opaque_existential_1;
  void (*v38)(uint64_t *, char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  unint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE *v51;
  char *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(uint64_t);
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _BYTE *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88[5];
  uint64_t v89;

  v5 = sub_1BC2B2FA8();
  v80 = *(_QWORD *)(v5 - 8);
  v81 = v5;
  MEMORY[0x1E0C80A78](v5);
  v83 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC0E7998(0, &qword_1EDA0FAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v82 = (char *)&v61 - v9;
  v10 = sub_1BC2B2C6C();
  v77 = *(_QWORD *)(v10 - 8);
  v78 = v10;
  MEMORY[0x1E0C80A78](v10);
  v79 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BC2B3530();
  v75 = *(_QWORD *)(v12 - 8);
  v76 = v12;
  MEMORY[0x1E0C80A78](v12);
  v73 = v13;
  v74 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_1BC2B3A34();
  v71 = *(_QWORD *)(v72 - 8);
  MEMORY[0x1E0C80A78](v72);
  v15 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, &qword_1EDA0FAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1C58], v7);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v61 - v17;
  v19 = sub_1BC2B3A58();
  v70 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v61 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = sub_1BC2B3CD4();
  v85 = *(_QWORD *)(v89 - 8);
  MEMORY[0x1E0C80A78](v89);
  v23 = (char *)&v61 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v25 = result;
    v64 = v19;
    v68 = (uint64_t *)a2;
    v69 = v2;
    v26 = sub_1BC2B350C();
    v28 = v27;
    sub_1BC2B3C80();
    swift_bridgeObjectRetain();
    v66 = v26;
    v67 = v28;
    sub_1BC2B3C98();
    v63 = (id)objc_opt_self();
    v29 = objc_msgSend(v63, sel_labelColor);
    v30 = (void (*)(uint64_t *, _QWORD))sub_1BC2B3BE4();
    sub_1BC2B3BB4();
    v30(v88, 0);
    v31 = sub_1BC2B3518();
    v33 = *(_QWORD *)(v25 + qword_1EF4010B8 + 8);
    v84 = v31;
    v34 = v23;
    if (v33)
    {
      if (v31 == *(_QWORD *)(v25 + qword_1EF4010B8) && v33 == v32)
      {
        v35 = v32;
      }
      else
      {
        v35 = v32;
        sub_1BC2B53CC();
      }
    }
    else
    {
      v35 = v32;
    }
    v36 = v89;
    v88[3] = v89;
    v88[4] = MEMORY[0x1E0DC2398];
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v88);
    v38 = *(void (**)(uint64_t *, char *, uint64_t))(v85 + 16);
    v65 = v34;
    v38(boxed_opaque_existential_1, v34, v36);
    sub_1BC0E7998(0, (unint64_t *)&unk_1EDA0FE70, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1D38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    sub_1BC2B3AD0();
    v62 = swift_allocObject();
    *(_OWORD *)(v62 + 16) = xmmword_1BC2B92D0;
    v39 = sub_1BC2B3A40();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v18, 1, 1, v39);
    sub_1BC2B3A4C();
    v40 = v71;
    v41 = v72;
    (*(void (**)(char *, _QWORD, uint64_t))(v71 + 104))(v15, *MEMORY[0x1E0DC1C20], v72);
    sub_1BC2B3AC4();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v15, v41);
    (*(void (**)(char *, uint64_t))(v70 + 8))(v21, v64);
    v42 = swift_allocObject();
    swift_weakInit();
    v44 = v75;
    v43 = v76;
    v45 = v74;
    (*(void (**)(char *, uint64_t, uint64_t))(v75 + 16))(v74, a1, v76);
    v46 = (*(unsigned __int8 *)(v44 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
    v47 = (char *)swift_allocObject();
    v48 = v84;
    *((_QWORD *)v47 + 2) = v42;
    *((_QWORD *)v47 + 3) = v48;
    *((_QWORD *)v47 + 4) = v35;
    (*(void (**)(char *, char *, uint64_t))(v44 + 32))(&v47[v46], v45, v43);
    v49 = v25;
    v61 = v25;
    v50 = v78;
    v51 = v79;
    *v79 = 1;
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v77 + 104))(v51, *MEMORY[0x1E0D2B168], v50);
    swift_retain();
    swift_bridgeObjectRetain();
    v52 = v82;
    sub_1BC2B3B24();
    v53 = objc_msgSend(v63, sel_secondarySystemBackgroundColor);
    sub_1BC2B3B18();
    v54 = sub_1BC2B3B48();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v52, 0, 1, v54);
    v55 = v49 + qword_1EF402C18;
    v56 = *(_QWORD *)(v49 + qword_1EF402C18);
    v57 = *(_QWORD *)(v55 + 8);
    v86 = 46;
    v87 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    sub_1BC2B44FC();
    swift_bridgeObjectRelease();
    v86 = v56;
    v87 = v57;
    swift_bridgeObjectRetain();
    sub_1BC2B44FC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, _QWORD, uint64_t))(v80 + 104))(v83, *MEMORY[0x1E0D2B8C8], v81);
    v58 = sub_1BC2B2D98();
    v59 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B350];
    v60 = v68;
    v68[3] = v58;
    v60[4] = sub_1BC0E519C((unint64_t *)&qword_1EF3F8CE8, v59, MEMORY[0x1E0D2B340]);
    __swift_allocate_boxed_opaque_existential_1(v60);
    sub_1BC2B2D8C();
    swift_release();
    (*(void (**)(char *, uint64_t))(v85 + 8))(v65, v89);
    return swift_release();
  }
  else
  {
    *(_QWORD *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1BC26C914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t Strong;
  _QWORD *v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[24];

  sub_1BC0E7998(0, &qword_1EF3FB840, (uint64_t (*)(uint64_t))type metadata accessor for FormStepResult, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v16[-v9];
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v12 = (_QWORD *)(Strong + qword_1EF4010B8);
    *v12 = a3;
    v12[1] = a4;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_release();
  }
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    v14 = sub_1BC2B3530();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v10, a5, v14);
    v15 = type metadata accessor for FormStepResult();
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v10, 0, 1, v15);
    sub_1BC2B3EC0();
    swift_release();
    return sub_1BC0F2444((uint64_t)v10, &qword_1EF3FB840, (uint64_t (*)(uint64_t))type metadata accessor for FormStepResult);
  }
  return result;
}

uint64_t sub_1BC26CAB8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30[5];

  v1 = (uint64_t)v0;
  v2 = *v0;
  v3 = sub_1BC2B2FA8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BC2B2C6C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, &qword_1EDA0FAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v25 - v13;
  if (*(_BYTE *)(v1 + qword_1EF4010B0) == 1)
  {
    v30[0] = MEMORY[0x1BCCEE3A4](v12);
    swift_bridgeObjectRetain();
    sub_1BC22F49C(v30);
    swift_bridgeObjectRelease();
    v15 = v30[0];
    swift_retain();
    v16 = sub_1BC26E2B8(v15, v1);
    swift_release();
    swift_release();
    swift_retain();
    v17 = sub_1BC26ADE0(v16, v1, v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0FE38, (uint64_t (*)(uint64_t))sub_1BC0E1B94, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v18 = swift_allocObject();
    v26 = v3;
    v17 = v18;
    *(_OWORD *)(v18 + 16) = xmmword_1BC2B92D0;
    v27 = (uint64_t *)(v18 + 32);
    sub_1BC26CEEC(v30);
    swift_allocObject();
    swift_weakInit();
    swift_retain();
    sub_1BC2B3B24();
    v19 = objc_msgSend((id)objc_opt_self(), sel_secondarySystemBackgroundColor);
    sub_1BC2B3B18();
    v20 = sub_1BC2B3B48();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v14, 0, 1, v20);
    v21 = *(_QWORD *)(v1 + qword_1EF402C18 + 8);
    v28 = *(_QWORD *)(v1 + qword_1EF402C18);
    v29 = v21;
    swift_bridgeObjectRetain();
    sub_1BC2B44FC();
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0D2B170], v7);
    (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0D2B8C8], v26);
    v22 = sub_1BC2B2D98();
    v23 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B350];
    *(_QWORD *)(v17 + 56) = v22;
    *(_QWORD *)(v17 + 64) = sub_1BC0E519C((unint64_t *)&qword_1EF3F8CE8, v23, MEMORY[0x1E0D2B340]);
    __swift_allocate_boxed_opaque_existential_1(v27);
    sub_1BC2B2D8C();
    swift_release();
  }
  return v17;
}

uint64_t sub_1BC26CE2C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v1 = *v0;
  v6 = MEMORY[0x1BCCEE3A4]();
  swift_bridgeObjectRetain();
  sub_1BC22F49C(&v6);
  swift_bridgeObjectRelease();
  v2 = v6;
  swift_retain();
  v3 = sub_1BC26E2B8(v2, (uint64_t)v0);
  swift_release();
  swift_release();
  swift_retain();
  v4 = sub_1BC26ADE0(v3, (uint64_t)v0, v1);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1BC26CEEC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  uint64_t (*v6)(_BYTE *, _QWORD);
  _BYTE v8[32];

  v2 = sub_1BC2B3CD4();
  v3 = MEMORY[0x1E0DC2398];
  a1[3] = v2;
  a1[4] = v3;
  __swift_allocate_boxed_opaque_existential_1(a1);
  sub_1BC2B3C80();
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v4 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  sub_1BC2B3C98();
  v5 = objc_msgSend((id)objc_opt_self(), sel_tintColor, 0xE000000000000000);
  v6 = (uint64_t (*)(_BYTE *, _QWORD))sub_1BC2B3BE4();
  sub_1BC2B3BB4();
  return v6(v8, 0);
}

uint64_t sub_1BC26D034()
{
  uint64_t Strong;
  uint64_t result;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    *(_BYTE *)(Strong + qword_1EF4010B0) = 1;
    swift_release();
  }
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      sub_1BC26CE2C();
      swift_release();
    }
    sub_1BC2B2C24();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC26D11C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  id v24;
  char *v25;
  void (*v26)(uint64_t *, _QWORD);
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t *boxed_opaque_existential_1;
  void (*v31)(uint64_t *, char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  char *v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t);
  uint64_t *v46;
  _QWORD v48[2];
  uint64_t v49;
  id v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68[10];
  uint64_t v69;

  v49 = a3;
  v64 = a4;
  v6 = sub_1BC2B2FA8();
  v60 = *(_QWORD *)(v6 - 8);
  v61 = v6;
  MEMORY[0x1E0C80A78](v6);
  v63 = (char *)v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC0E7998(0, &qword_1EDA0FAF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC2130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v62 = (char *)v48 - v10;
  v57 = sub_1BC2B2C6C();
  v56 = *(_QWORD *)(v57 - 8);
  MEMORY[0x1E0C80A78](v57);
  v59 = (char *)v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = sub_1BC2B3A34();
  v54 = *(_QWORD *)(v55 - 8);
  MEMORY[0x1E0C80A78](v55);
  v13 = (char *)v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, &qword_1EDA0FAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1C58], v8);
  MEMORY[0x1E0C80A78](v14);
  v51 = (char *)v48 - v15;
  v53 = sub_1BC2B3A58();
  v52 = *(_QWORD *)(v53 - 8);
  MEMORY[0x1E0C80A78](v53);
  v17 = (char *)v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, &qword_1EF3FB840, (uint64_t (*)(uint64_t))type metadata accessor for FormStepResult, v8);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v48 - v19;
  v65 = sub_1BC2B3CD4();
  v69 = *(_QWORD *)(v65 - 8);
  MEMORY[0x1E0C80A78](v65);
  v22 = (char *)v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *a1;
  sub_1BC2B3C80();
  sub_1BC2B4C10();
  sub_1BC2B3C98();
  v50 = (id)objc_opt_self();
  v24 = objc_msgSend(v50, sel_labelColor);
  v25 = v22;
  v26 = (void (*)(uint64_t *, _QWORD))sub_1BC2B3BE4();
  sub_1BC2B3BB4();
  v26(v68, 0);
  v58 = a2;
  sub_1BC2B3ED8();
  v27 = type metadata accessor for FormStepResult();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48))(v20, 1, v27) == 1)
  {
    sub_1BC0F2444((uint64_t)v20, &qword_1EF3FB840, (uint64_t (*)(uint64_t))type metadata accessor for FormStepResult);
  }
  else
  {
    sub_1BC18E254();
    sub_1BC0E8594((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for FormStepResult);
  }
  sub_1BC2B5450();
  sub_1BC2B5480();
  sub_1BC2B548C();
  v66 = sub_1BC2B54F8();
  v67 = v28;
  sub_1BC2B44FC();
  sub_1BC2B5450();
  sub_1BC2B5480();
  v68[0] = sub_1BC2B548C();
  sub_1BC2B539C();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v49 = v66;
  v48[1] = v67;
  v29 = v65;
  v68[3] = v65;
  v68[4] = MEMORY[0x1E0DC2398];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v68);
  v31 = *(void (**)(uint64_t *, char *, uint64_t))(v69 + 16);
  v48[0] = v25;
  v31(boxed_opaque_existential_1, v25, v29);
  sub_1BC0E7998(0, (unint64_t *)&unk_1EDA0FE70, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1D38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BC2B3AD0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BC2B92D0;
  v32 = sub_1BC2B3A40();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v51, 1, 1, v32);
  sub_1BC2B3A4C();
  v33 = v54;
  v34 = v55;
  (*(void (**)(char *, _QWORD, uint64_t))(v54 + 104))(v13, *MEMORY[0x1E0DC1C20], v55);
  sub_1BC2B3AC4();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v13, v34);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v17, v53);
  v35 = swift_allocObject();
  v36 = v58;
  swift_weakInit();
  v37 = swift_allocObject();
  *(_QWORD *)(v37 + 16) = v35;
  *(_QWORD *)(v37 + 24) = v23;
  v38 = v59;
  *v59 = 1;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v56 + 104))(v38, *MEMORY[0x1E0D2B168], v57);
  swift_retain();
  v39 = v62;
  sub_1BC2B3B24();
  v40 = objc_msgSend(v50, sel_secondarySystemBackgroundColor);
  sub_1BC2B3B18();
  v41 = sub_1BC2B3B48();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v39, 0, 1, v41);
  v43 = *(_QWORD *)(v36 + qword_1EF402C18);
  v42 = *(_QWORD *)(v36 + qword_1EF402C18 + 8);
  v66 = 46;
  v67 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  sub_1BC2B4C10();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v66 = v43;
  v67 = v42;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, _QWORD, uint64_t))(v60 + 104))(v63, *MEMORY[0x1E0D2B8C8], v61);
  v44 = sub_1BC2B2D98();
  v45 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B350];
  v46 = v64;
  v64[3] = v44;
  v46[4] = sub_1BC0E519C((unint64_t *)&qword_1EF3F8CE8, v45, MEMORY[0x1E0D2B340]);
  __swift_allocate_boxed_opaque_existential_1(v46);
  sub_1BC2B2D8C();
  (*(void (**)(_QWORD, uint64_t))(v69 + 8))(v48[0], v65);
  return swift_release();
}

uint64_t sub_1BC26D87C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t Strong;
  _QWORD *v8;
  uint64_t result;
  uint64_t v10;
  _BYTE v11[24];

  sub_1BC0E7998(0, &qword_1EF3FB840, (uint64_t (*)(uint64_t))type metadata accessor for FormStepResult, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v11[-v5];
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v8 = (_QWORD *)(Strong + qword_1EF4010B8);
    *v8 = 0;
    v8[1] = 0;
    swift_release();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    *v6 = a3;
    v10 = type metadata accessor for FormStepResult();
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v6, 0, 1, v10);
    sub_1BC2B3EC0();
    swift_release();
    return sub_1BC0F2444((uint64_t)v6, &qword_1EF3FB840, (uint64_t (*)(uint64_t))type metadata accessor for FormStepResult);
  }
  return result;
}

uint64_t sub_1BC26D9E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;

  v1 = sub_1BC2B2438();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BC2B34A0();
  v27 = *(_QWORD *)(v5 - 8);
  v28 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8980, type metadata accessor for MedicationSearchItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v25 - v10;
  sub_1BC0E7998(0, &qword_1EF401118, type metadata accessor for MedicationSearchItem.Source, v8);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v25 - v16;
  sub_1BC118700(v0 + qword_1EF4026C0, (uint64_t)v11, (unint64_t *)&qword_1EF3F8980, type metadata accessor for MedicationSearchItem);
  v18 = type metadata accessor for MedicationSearchItem(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v11, 1, v18) == 1)
  {
    sub_1BC0F2444((uint64_t)v11, (unint64_t *)&qword_1EF3F8980, type metadata accessor for MedicationSearchItem);
    v19 = type metadata accessor for MedicationSearchItem.Source(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v17, 1, 1, v19);
LABEL_6:
    v21 = MEMORY[0x1E0DEE9D8];
    goto LABEL_7;
  }
  sub_1BC0FC574((uint64_t)v11, (uint64_t)v17, type metadata accessor for MedicationSearchItem.Source);
  sub_1BC0E8594((uint64_t)v11, type metadata accessor for MedicationSearchItem);
  v20 = type metadata accessor for MedicationSearchItem.Source(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v17, 0, 1, v20);
  sub_1BC118700((uint64_t)v17, (uint64_t)v15, &qword_1EF401118, type metadata accessor for MedicationSearchItem.Source);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1BC0E8594((uint64_t)v15, type metadata accessor for MedicationSearchItem.Source);
    goto LABEL_6;
  }
  (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v7, v15, v28);
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0FE38, (uint64_t (*)(uint64_t))sub_1BC0E1B94, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1BC2B92D0;
  v26 = (uint64_t *)(v21 + 32);
  sub_1BC2B3488();
  sub_1BC26E5EC();
  swift_bridgeObjectRelease();
  v29 = 0x74497265746F6F46;
  v30 = 0xEB000000005F6D65;
  sub_1BC2B242C();
  sub_1BC2B23FC();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v22 = sub_1BC2B2EDC();
  v23 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B6C0];
  *(_QWORD *)(v21 + 56) = v22;
  *(_QWORD *)(v21 + 64) = sub_1BC0E519C(&qword_1EF3F8B78, v23, MEMORY[0x1E0D2B6A8]);
  __swift_allocate_boxed_opaque_existential_1(v26);
  sub_1BC2B2EC4();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v28);
LABEL_7:
  sub_1BC0F2444((uint64_t)v17, &qword_1EF401118, type metadata accessor for MedicationSearchItem.Source);
  return v21;
}

uint64_t sub_1BC26DDBC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC26DE00()
{
  uint64_t v0;

  v0 = sub_1BC2B2C60();
  swift_release();
  sub_1BC0F2444(v0 + qword_1EF4026C0, (unint64_t *)&qword_1EF3F8980, type metadata accessor for MedicationSearchItem);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC26DEB0()
{
  return type metadata accessor for MedicationFormsDataSource();
}

char *sub_1BC26DEB8(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC0E7998(0, &qword_1EF401130, (uint64_t (*)(uint64_t))sub_1BC26EBAC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1BC26DFC4(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 7;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -8)
  {
    result = (char *)sub_1BC2B5318();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
      return (char *)memmove(result, v3, 8 * v7);
  }
  return result;
}

uint64_t sub_1BC26E06C(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_1BC26E094(a1, a2, a3, (uint64_t (*)(_QWORD))sub_1BC118890);
}

uint64_t sub_1BC26E07C(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_1BC26E094(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for Dosage);
}

uint64_t sub_1BC26E088(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_1BC26E094(a1, a2, a3, type metadata accessor for WeekdaysAndDosages);
}

uint64_t sub_1BC26E094(unint64_t *a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(_QWORD))
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  v4 = *a1;
  v5 = *a2;
  v6 = *a3;
  result = a4(0);
  v8 = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
  if (!v8)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v9 = v6 - v5;
  if (v6 - v5 == 0x8000000000000000 && v8 == -1)
    goto LABEL_14;
  if (v9 / v8 < 0)
  {
LABEL_15:
    result = sub_1BC2B5318();
    __break(1u);
    return result;
  }
  if (v4 < v5 || v4 >= v5 + v9 / v8 * v8)
    return swift_arrayInitWithTakeFrontToBack();
  if (v4 != v5)
    return swift_arrayInitWithTakeBackToFront();
  return result;
}

char *sub_1BC26E1A0(uint64_t a1)
{
  return sub_1BC26DEB8(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1BC26E1B4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = a4;
  v14 = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(boxed_opaque_existential_1, a2, a4);
  v10 = *a3;
  *(_QWORD *)(v10 + 16) = a1 + 1;
  return sub_1BC0F2730(&v12, v10 + 40 * a1 + 32);
}

uint64_t sub_1BC26E22C(uint64_t a1)
{
  return sub_1BC1266D4(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1BC26E240(_QWORD *a1)
{
  return sub_1BC126844(0, a1[2], 0, a1);
}

void sub_1BC26E254()
{
  JUMPOUT(0x1BCCEEB00);
}

uint64_t sub_1BC26E268(_QWORD *a1)
{
  return sub_1BC126B88(0, a1[2], 0, a1);
}

uint64_t sub_1BC26E27C(_QWORD *a1)
{
  return sub_1BC126E8C(0, a1[2], 0, a1);
}

uint64_t sub_1BC26E290(_QWORD *a1)
{
  return sub_1BC12736C(0, a1[2], 0, a1);
}

uint64_t sub_1BC26E2A4(_QWORD *a1)
{
  return sub_1BC125EEC(0, a1[2], 0, a1);
}

uint64_t sub_1BC26E2B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void (*v16)(char *, unint64_t, uint64_t);
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;

  v44 = a2;
  v3 = sub_1BC2B3530();
  v4 = *(_QWORD *)(v3 - 8);
  v50 = v3;
  v51 = v4;
  result = MEMORY[0x1E0C80A78](v3);
  v49 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (!v7)
    return MEMORY[0x1E0DEE9D8];
  v9 = 0;
  v42 = *(_QWORD *)(a1 + 16);
  v43 = a1 + 32;
  v41 = MEMORY[0x1E0DEE9D8];
  do
  {
    if (v9 > v7)
      v7 = v9;
    v45 = v7;
    while (1)
    {
      if (v9 == v45)
        goto LABEL_41;
      v10 = *(_QWORD *)(v43 + 8 * v9);
      v47 = v9;
      v48 = v10;
      v11 = sub_1BC26B618();
      v12 = *(_QWORD *)(v11 + 16);
      if (v12)
      {
        v52 = v8;
        sub_1BC125B54(0, v12, 0);
        v13 = (*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
        v46 = v11;
        v14 = v11 + v13;
        v15 = *(_QWORD *)(v51 + 72);
        v16 = *(void (**)(char *, unint64_t, uint64_t))(v51 + 16);
        do
        {
          v17 = v49;
          v18 = v50;
          v16(v49, v14, v50);
          v19 = sub_1BC2B350C();
          v21 = v20;
          (*(void (**)(char *, uint64_t))(v51 + 8))(v17, v18);
          v22 = v52;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1BC125B54(0, v22[2] + 1, 1);
            v22 = v52;
          }
          v24 = v22[2];
          v23 = v22[3];
          if (v24 >= v23 >> 1)
          {
            sub_1BC125B54(v23 > 1, v24 + 1, 1);
            v22 = v52;
          }
          v22[2] = v24 + 1;
          v25 = &v22[2 * v24];
          v25[4] = v19;
          v25[5] = v21;
          v14 += v15;
          --v12;
        }
        while (v12);
        swift_bridgeObjectRelease();
        v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      }
      else
      {
        swift_bridgeObjectRelease();
        v22 = v8;
      }
      v9 = v47 + 1;
      v26 = sub_1BC2B4C04();
      v28 = v27;
      v29 = v22[2];
      if (!v29)
        goto LABEL_32;
      v30 = v26;
      if (v22[4] != v26 || v22[5] != v27)
      {
        result = sub_1BC2B53CC();
        if ((result & 1) == 0)
          break;
      }
LABEL_6:
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      if (v9 == v42)
        return v41;
    }
    if (v29 != 1)
    {
      v32 = v22 + 7;
      v33 = 1;
      while (1)
      {
        v34 = v33 + 1;
        if (__OFADD__(v33, 1))
          break;
        if (*(v32 - 1) == v30 && *v32 == v28)
          goto LABEL_6;
        result = sub_1BC2B53CC();
        if ((result & 1) != 0)
          goto LABEL_6;
        v32 += 2;
        ++v33;
        if (v34 == v29)
          goto LABEL_32;
      }
      __break(1u);
LABEL_41:
      __break(1u);
      return result;
    }
LABEL_32:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v36 = v41;
    result = swift_isUniquelyReferenced_nonNull_native();
    v53 = v36;
    if ((result & 1) == 0)
    {
      result = sub_1BC125B70(0, *(_QWORD *)(v36 + 16) + 1, 1);
      v36 = v53;
    }
    v38 = *(_QWORD *)(v36 + 16);
    v37 = *(_QWORD *)(v36 + 24);
    v39 = v36;
    if (v38 >= v37 >> 1)
    {
      result = sub_1BC125B70(v37 > 1, v38 + 1, 1);
      v39 = v53;
    }
    *(_QWORD *)(v39 + 16) = v38 + 1;
    v41 = v39;
    *(_QWORD *)(v39 + 8 * v38 + 32) = v48;
    v7 = v42;
  }
  while (v9 != v42);
  return v41;
}

id sub_1BC26E5EC()
{
  void *v0;
  uint64_t v1;
  id result;
  void *v3;
  id v4;
  uint64_t inited;
  void *v6;
  uint64_t v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  void *v21;

  v0 = (void *)objc_opt_self();
  v1 = *MEMORY[0x1E0DC4AB8];
  result = objc_msgSend(v0, sel__preferredFontForTextStyle_weight_, *MEMORY[0x1E0DC4AB8], *MEMORY[0x1E0DC1448]);
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  v3 = result;
  result = objc_msgSend(v0, sel__preferredFontForTextStyle_weight_, v1, *MEMORY[0x1E0DC1440]);
  if (!result)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  v21 = result;
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v4 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  sub_1BC0E7998(0, (unint64_t *)&unk_1EDA0FE80, (uint64_t (*)(uint64_t))sub_1BC1306C0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC2B92D0;
  v6 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  v7 = sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
  *(_QWORD *)(inited + 64) = v7;
  *(_QWORD *)(inited + 40) = v3;
  v8 = v6;
  v20 = v3;
  sub_1BC1069C0(inited);
  v9 = objc_allocWithZone(MEMORY[0x1E0CB3778]);
  v10 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1BC0E519C((unint64_t *)&qword_1EDA0FD20, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1BC2B897C);
  v11 = (void *)sub_1BC2B43AC();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(v9, sel_initWithString_attributes_, v10, v11, 0xE000000000000000);

  v13 = swift_initStackObject();
  *(_OWORD *)(v13 + 16) = xmmword_1BC2B92D0;
  *(_QWORD *)(v13 + 64) = v7;
  *(_QWORD *)(v13 + 32) = v8;
  *(_QWORD *)(v13 + 40) = v21;
  swift_bridgeObjectRetain();
  v14 = v8;
  v15 = v21;
  sub_1BC1069C0(v13);
  v16 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v17 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  v18 = (void *)sub_1BC2B43AC();
  swift_bridgeObjectRelease();
  v19 = objc_msgSend(v16, sel_initWithString_attributes_, v17, v18);

  objc_msgSend(v12, sel_appendAttributedString_, v19);
  return v12;
}

uint64_t sub_1BC26E95C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC26E980()
{
  return sub_1BC26D034();
}

uint64_t sub_1BC26E988(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23[3];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v4 = v3;
  v21 = a3;
  v5 = *(_QWORD *)(a1 + 16);
  v6 = MEMORY[0x1E0DEE9D8];
  if (v5)
  {
    v26 = MEMORY[0x1E0DEE9D8];
    sub_1BC125B04(0, v5, 0);
    v6 = v26;
    v9 = (uint64_t *)(a1 + 32);
    while (1)
    {
      v10 = *v9++;
      v22 = v10;
      sub_1BC26D11C(&v22, a2, v21, v23);
      if (v4)
        break;
      v4 = 0;
      v26 = v6;
      v12 = *(_QWORD *)(v6 + 16);
      v11 = *(_QWORD *)(v6 + 24);
      if (v12 >= v11 >> 1)
        sub_1BC125B04(v11 > 1, v12 + 1, 1);
      v13 = v24;
      v14 = v25;
      v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v24);
      MEMORY[0x1E0C80A78](v15);
      v17 = (char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v18 + 16))(v17);
      sub_1BC2241D0(v12, (uint64_t)v17, &v26, v13, v14);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v23);
      v6 = v26;
      if (!--v5)
        return v6;
    }
    swift_release();
  }
  return v6;
}

uint64_t sub_1BC26EAF8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC26EB1C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC26D87C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1BC26EB24@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1BC2B350C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1BC26EB4C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF401128;
  if (!qword_1EF401128)
  {
    sub_1BC0E7998(255, &qword_1EF401120, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C890], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1EF401128);
  }
  return result;
}

void sub_1BC26EBAC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF401138)
  {
    v0 = sub_1BC2B4850();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF401138);
  }
}

uint64_t sub_1BC26EC08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1BC2B3530();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1BC26EC84(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_1BC2B3530() - 8) + 80);
  return sub_1BC26C914(a1, v1[2], v1[3], v1[4], (uint64_t)v1 + ((v3 + 40) & ~v3));
}

_QWORD *sub_1BC26ECC8(uint64_t a1, uint64_t a2)
{
  return sub_1BC26ECE0(a1, a2, (void (*)(uint64_t))sub_1BC26AE2C);
}

_QWORD *sub_1BC26ECD4(uint64_t a1, uint64_t a2)
{
  return sub_1BC26ECE0(a1, a2, (void (*)(uint64_t))sub_1BC26B088);
}

_QWORD *sub_1BC26ECE0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  void (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[2];

  v5 = v3;
  v8 = sub_1BC2B2438();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v5 + qword_1EF3FB590) = MEMORY[0x1E0DEE9E8];
  sub_1BC118700(a1, v5 + qword_1EF4026C0, (unint64_t *)&qword_1EF3F8980, type metadata accessor for MedicationSearchItem);
  *(_QWORD *)(v5 + qword_1EF3FB588) = a2;
  v19[0] = 0;
  v19[1] = 0xE000000000000000;
  swift_retain();
  sub_1BC2B51BC();
  swift_bridgeObjectRelease();
  strcpy((char *)v19, "MutableArray<");
  HIWORD(v19[1]) = -4864;
  sub_1BC2B242C();
  sub_1BC2B23FC();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  sub_1BC2B44FC();
  v12 = (_QWORD *)sub_1BC2B2C00();
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8C50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BC2B2BC4();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BC2B9600;
  v13 = *(void (**)(uint64_t))(class metadata base offset for MedicationOptionsDataSource + *v12 + 80);
  v14 = swift_retain_n();
  v13(v14);
  v15 = sub_1BC2B2BAC();
  (*(void (**)(uint64_t))(class metadata base offset for MedicationOptionsDataSource + *v12 + 88))(v15);
  v16 = sub_1BC2B2BAC();
  (*(void (**)(uint64_t))(class metadata base offset for MedicationOptionsDataSource + *v12 + 96))(v16);
  sub_1BC2B2BAC();
  sub_1BC2B2C18();
  swift_release();
  v17 = swift_bridgeObjectRelease();
  a3(v17);
  swift_release();
  sub_1BC0F2444(a1, (unint64_t *)&qword_1EF3F8980, type metadata accessor for MedicationSearchItem);
  return v12;
}

_QWORD *sub_1BC26EFF8()
{
  _QWORD *result;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  swift_beginAccess();
  result = (_QWORD *)swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    (*(void (**)(void))(class metadata base offset for MedicationOptionsDataSource + *result + 80))();
    sub_1BC2B2C24();
    v2 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t))(class metadata base offset for MedicationOptionsDataSource + *v1 + 88))(v2);
    sub_1BC2B2C24();
    v3 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t))(class metadata base offset for MedicationOptionsDataSource + *v1 + 96))(v3);
    sub_1BC2B2C24();
    swift_release();
    return (_QWORD *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BC26F0E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormStepResult();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC26F12C()
{
  return sub_1BC0E519C(&qword_1EF401148, (uint64_t (*)(uint64_t))sub_1BC16EB5C, MEMORY[0x1E0C95FB8]);
}

_QWORD *sub_1BC26F148()
{
  return sub_1BC26B2E4();
}

uint64_t sub_1BC26F150(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    sub_1BC26F190(255, a2, a3, a4);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C95CB8], v6);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BC26F190(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    sub_1BC0E1D38(255, (unint64_t *)&qword_1EDA0FFF0);
    a4();
    sub_1BC1019D8();
    v6 = sub_1BC2B3E60();
    if (!v7)
      atomic_store(v6, a2);
  }
}

_QWORD *sub_1BC26F22C()
{
  return sub_1BC26EFF8();
}

uint64_t InteractionFactorsInfoItem.reuseIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InteractionFactorsInfoItem.reuseIdentifier.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*InteractionFactorsInfoItem.reuseIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t InteractionFactorsInfoItem.uniqueIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InteractionFactorsInfoItem.uniqueIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*InteractionFactorsInfoItem.uniqueIdentifier.modify())()
{
  return nullsub_1;
}

__n128 sub_1BC26F320()
{
  __n128 result;

  __asm { FMOV            V0.2D, #16.0 }
  xmmword_1EF402C30 = (__int128)result;
  *(__n128 *)&qword_1EF402C40 = result;
  return result;
}

uint64_t sub_1BC26F334(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _BYTE v5[40];

  sub_1BC0E5774(a1, (uint64_t)v5);
  v3 = *a2 + OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell_item;
  swift_beginAccess();
  sub_1BC0E1B40((uint64_t)v5, v3);
  return swift_endAccess();
}

uint64_t sub_1BC26F398@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a1);
}

uint64_t sub_1BC26F3E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell_item;
  swift_beginAccess();
  sub_1BC0E1B40(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_1BC26F440())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1BC26F484()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___settingsManager;
  if (*(_QWORD *)(v0
                 + OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___settingsManager))
  {
    v2 = *(_QWORD *)(v0
                   + OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___settingsManager);
  }
  else
  {
    v3 = v0;
    sub_1BC2B3278();
    sub_1BC2B326C();
    sub_1BC2B3248();
    swift_release();
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FC98);
    sub_1BC2B48EC();
    sub_1BC2B31F4();
    swift_allocObject();
    v2 = sub_1BC2B314C();
    *(_QWORD *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

id sub_1BC26F554()
{
  return sub_1BC26FC0C(&OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___criticalHeaderLabel, 1);
}

id sub_1BC26F564()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___criticalBodyLabel;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___criticalBodyLabel);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___criticalBodyLabel);
  }
  else
  {
    v4 = v0;
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
    sub_1BC2B44FC();
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v6 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    v7 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_setText_, v7, 0xE000000000000000);

    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
    v8 = (void *)sub_1BC2B4C64();
    objc_msgSend(v5, sel_setFont_, v8);

    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v5, sel_setNumberOfLines_, 0);
    objc_msgSend(v5, sel_setAdjustsFontForContentSizeCategory_, 1);
    v9 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v10 = v2;
  return v3;
}

id sub_1BC26F78C()
{
  return sub_1BC26FC0C(&OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___seriousHeaderLabel, 2);
}

id sub_1BC26F79C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___seriousBodyLabel;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___seriousBodyLabel);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___seriousBodyLabel);
  }
  else
  {
    v4 = v0;
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
    sub_1BC2B44FC();
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v6 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    v7 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_setText_, v7, 0xE000000000000000);

    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
    v8 = (void *)sub_1BC2B4C64();
    objc_msgSend(v5, sel_setFont_, v8);

    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v5, sel_setNumberOfLines_, 0);
    objc_msgSend(v5, sel_setAdjustsFontForContentSizeCategory_, 1);
    v9 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v10 = v2;
  return v3;
}

id sub_1BC26F9C4()
{
  return sub_1BC26FC0C(&OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___moderateHeaderLabel, 3);
}

id sub_1BC26F9D4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___moderateBodyLabel;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___moderateBodyLabel);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___moderateBodyLabel);
  }
  else
  {
    v4 = v0;
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
    sub_1BC2B44FC();
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v6 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    v7 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_setText_, v7, 0xE000000000000000);

    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
    v8 = (void *)sub_1BC2B4C64();
    objc_msgSend(v5, sel_setFont_, v8);

    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v5, sel_setNumberOfLines_, 0);
    objc_msgSend(v5, sel_setAdjustsFontForContentSizeCategory_, 1);
    v9 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v10 = v2;
  return v3;
}

id sub_1BC26FBFC()
{
  return sub_1BC26FC0C(&OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___minorHeaderLabel, 4);
}

id sub_1BC26FC0C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;

  v3 = *a1;
  v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    v5 = *(id *)(v2 + *a1);
  }
  else
  {
    v6 = sub_1BC2717D0(a2);
    v7 = *(void **)(v2 + v3);
    *(_QWORD *)(v2 + v3) = v6;
    v5 = v6;

    v4 = 0;
  }
  v8 = v4;
  return v5;
}

id sub_1BC26FC68()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___minorBodyLabel;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___minorBodyLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___minorBodyLabel);
  }
  else
  {
    v4 = v0;
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
    sub_1BC2B44FC();
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v6 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    v7 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_setText_, v7, 0xE000000000000000);

    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
    v8 = (void *)sub_1BC2B4C64();
    objc_msgSend(v5, sel_setFont_, v8);

    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v5, sel_setNumberOfLines_, 0);
    objc_msgSend(v5, sel_setAdjustsFontForContentSizeCategory_, 1);
    v9 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v10 = v2;
  return v3;
}

id sub_1BC26FE8C(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  id v10;
  objc_super v12;

  v9 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell_item];
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_QWORD *)v9 + 4) = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___settingsManager] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___criticalHeaderLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___criticalBodyLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___seriousHeaderLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___seriousBodyLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___moderateHeaderLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___moderateBodyLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___minorHeaderLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___minorBodyLabel] = 0;
  v12.receiver = v4;
  v12.super_class = (Class)type metadata accessor for InteractionFactorsInfoCell();
  v10 = objc_msgSendSuper2(&v12, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1BC270184();
  sub_1BC27046C();

  return v10;
}

id sub_1BC26FFB0(void *a1)
{
  char *v1;
  char *v3;
  id v4;
  objc_super v6;

  v3 = &v1[OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell_item];
  *(_OWORD *)v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((_QWORD *)v3 + 4) = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___settingsManager] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___criticalHeaderLabel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___criticalBodyLabel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___seriousHeaderLabel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___seriousBodyLabel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___moderateHeaderLabel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___moderateBodyLabel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___minorHeaderLabel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___minorBodyLabel] = 0;
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for InteractionFactorsInfoCell();
  v4 = objc_msgSendSuper2(&v6, sel_initWithCoder_, a1);

  return v4;
}

uint64_t type metadata accessor for InteractionFactorsInfoCell()
{
  return objc_opt_self();
}

void sub_1BC270184()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  unsigned int v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;

  v1 = v0;
  objc_msgSend(v0, sel_setUserInteractionEnabled_, 0);
  v2 = sub_1BC26F554();
  v3 = sub_1BC26F564();
  v4 = sub_1BC26F78C();
  v5 = sub_1BC26F79C();
  v6 = sub_1BC26F9C4();
  v7 = sub_1BC26F9D4();
  v8 = v2;
  v9 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v9, sel_addSubview_, v8);

  v10 = v3;
  v11 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v11, sel_addSubview_, v10);

  v12 = v4;
  v13 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v13, sel_addSubview_, v12);

  v14 = v5;
  v15 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v15, sel_addSubview_, v14);

  v16 = v6;
  v17 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v17, sel_addSubview_, v16);

  v18 = v7;
  v19 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v19, sel_addSubview_, v18);

  sub_1BC26F484();
  LOBYTE(v18) = sub_1BC2B3170();
  swift_release();
  if ((v18 & 1) != 0)
  {
    v20 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
    if (v20)
    {
      v21 = v20;
      v22 = objc_msgSend(v20, sel_isAppleInternalInstall);

      if (v22)
      {
        v23 = sub_1BC26FBFC();
        v24 = sub_1BC26FC68();
        v25 = v23;
        v26 = objc_msgSend(v1, sel_contentView);
        objc_msgSend(v26, sel_addSubview_, v25);

        v27 = v24;
        v28 = objc_msgSend(v1, sel_contentView);
        objc_msgSend(v28, sel_addSubview_, v27);

      }
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1BC27046C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  uint64_t v95;
  void *v96;
  id v97;
  void *v98;
  unsigned int v99;
  uint64_t v100;
  id v101;
  id v102;
  id v103;
  id v104;
  id v105;
  id v106;
  id v107;
  id v108;
  id v109;
  id v110;
  id v111;
  id v112;
  id v113;
  id v114;
  id v115;
  id v116;
  id v117;
  id v118;
  id v119;
  id v120;
  id v121;
  id v122;
  id v123;
  id v124;
  id v125;
  id v126;
  id v127;
  id v128;
  id v129;
  id v130;
  id v131;
  id v132;
  id v133;
  id v134;
  id v135;
  uint64_t v136;
  id v137;
  id v138;
  id v139;
  id v140;
  id v141;
  id v142;
  id v143;

  v1 = v0;
  v142 = (id)objc_opt_self();
  sub_1BC0E7940();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BC2BB9B0;
  v3 = sub_1BC26F554();
  v4 = objc_msgSend(v3, sel_leadingAnchor);

  v5 = objc_msgSend(v1, sel_contentView);
  v6 = objc_msgSend(v5, sel_layoutMarginsGuide);

  v7 = objc_msgSend(v6, sel_leadingAnchor);
  v8 = objc_msgSend(v4, sel_constraintEqualToAnchor_, v7);

  *(_QWORD *)(v2 + 32) = v8;
  v9 = sub_1BC26F554();
  v10 = objc_msgSend(v9, sel_trailingAnchor);

  v11 = objc_msgSend(v1, sel_contentView);
  v12 = objc_msgSend(v11, sel_layoutMarginsGuide);

  v13 = objc_msgSend(v12, sel_trailingAnchor);
  v14 = objc_msgSend(v10, sel_constraintEqualToAnchor_, v13);

  *(_QWORD *)(v2 + 40) = v14;
  v15 = sub_1BC26F554();
  v16 = objc_msgSend(v15, sel_topAnchor);

  v17 = objc_msgSend(v1, sel_contentView);
  v18 = objc_msgSend(v17, sel_topAnchor);

  if (qword_1EF3F8170 != -1)
    swift_once();
  v19 = objc_msgSend(v16, sel_constraintEqualToAnchor_constant_, v18, *(double *)&xmmword_1EF402C30);

  *(_QWORD *)(v2 + 48) = v19;
  v20 = sub_1BC26F564();
  v21 = objc_msgSend(v20, sel_leadingAnchor);

  v22 = sub_1BC26F554();
  v23 = objc_msgSend(v22, sel_leadingAnchor);

  v24 = objc_msgSend(v21, sel_constraintEqualToAnchor_, v23);
  *(_QWORD *)(v2 + 56) = v24;
  v25 = sub_1BC26F564();
  v26 = objc_msgSend(v25, sel_trailingAnchor);

  v27 = sub_1BC26F554();
  v28 = objc_msgSend(v27, sel_trailingAnchor);

  v29 = objc_msgSend(v26, sel_constraintEqualToAnchor_, v28);
  *(_QWORD *)(v2 + 64) = v29;
  v30 = sub_1BC26F564();
  v31 = objc_msgSend(v30, sel_topAnchor);

  v32 = sub_1BC26F554();
  v33 = objc_msgSend(v32, sel_bottomAnchor);

  v34 = objc_msgSend(v31, sel_constraintEqualToAnchor_constant_, v33, 8.0);
  *(_QWORD *)(v2 + 72) = v34;
  v35 = sub_1BC26F78C();
  v36 = objc_msgSend(v35, sel_leadingAnchor);

  v37 = sub_1BC26F554();
  v38 = objc_msgSend(v37, sel_leadingAnchor);

  v39 = objc_msgSend(v36, sel_constraintEqualToAnchor_, v38);
  *(_QWORD *)(v2 + 80) = v39;
  v40 = sub_1BC26F78C();
  v41 = objc_msgSend(v40, sel_trailingAnchor);

  v42 = sub_1BC26F554();
  v43 = objc_msgSend(v42, sel_trailingAnchor);

  v44 = objc_msgSend(v41, sel_constraintEqualToAnchor_, v43);
  *(_QWORD *)(v2 + 88) = v44;
  v45 = sub_1BC26F78C();
  v46 = objc_msgSend(v45, sel_topAnchor);

  v47 = sub_1BC26F564();
  v48 = objc_msgSend(v47, sel_bottomAnchor);

  v49 = objc_msgSend(v46, sel_constraintEqualToAnchor_constant_, v48, 16.0);
  *(_QWORD *)(v2 + 96) = v49;
  v50 = sub_1BC26F79C();
  v51 = objc_msgSend(v50, sel_leadingAnchor);

  v52 = sub_1BC26F554();
  v53 = objc_msgSend(v52, sel_leadingAnchor);

  v54 = objc_msgSend(v51, sel_constraintEqualToAnchor_, v53);
  *(_QWORD *)(v2 + 104) = v54;
  v55 = sub_1BC26F79C();
  v56 = objc_msgSend(v55, sel_trailingAnchor);

  v57 = sub_1BC26F554();
  v58 = objc_msgSend(v57, sel_trailingAnchor);

  v59 = objc_msgSend(v56, sel_constraintEqualToAnchor_, v58);
  *(_QWORD *)(v2 + 112) = v59;
  v60 = sub_1BC26F79C();
  v61 = objc_msgSend(v60, sel_topAnchor);

  v62 = sub_1BC26F78C();
  v63 = objc_msgSend(v62, sel_bottomAnchor);

  v64 = objc_msgSend(v61, sel_constraintEqualToAnchor_constant_, v63, 8.0);
  *(_QWORD *)(v2 + 120) = v64;
  v65 = sub_1BC26F9C4();
  v66 = objc_msgSend(v65, sel_leadingAnchor);

  v67 = sub_1BC26F554();
  v68 = objc_msgSend(v67, sel_leadingAnchor);

  v69 = objc_msgSend(v66, sel_constraintEqualToAnchor_, v68);
  *(_QWORD *)(v2 + 128) = v69;
  v70 = sub_1BC26F9C4();
  v71 = objc_msgSend(v70, sel_trailingAnchor);

  v72 = sub_1BC26F554();
  v73 = objc_msgSend(v72, sel_trailingAnchor);

  v74 = objc_msgSend(v71, sel_constraintEqualToAnchor_, v73);
  *(_QWORD *)(v2 + 136) = v74;
  v75 = sub_1BC26F9C4();
  v76 = objc_msgSend(v75, sel_topAnchor);

  v77 = sub_1BC26F79C();
  v78 = objc_msgSend(v77, sel_bottomAnchor);

  v79 = objc_msgSend(v76, (SEL)&selRef_estimatedDimension_ + 7, v78, 16.0);
  *(_QWORD *)(v2 + 144) = v79;
  v80 = sub_1BC26F9D4();
  v81 = objc_msgSend(v80, sel_leadingAnchor);

  v82 = sub_1BC26F554();
  v83 = objc_msgSend(v82, sel_leadingAnchor);

  v84 = objc_msgSend(v81, sel_constraintEqualToAnchor_, v83);
  *(_QWORD *)(v2 + 152) = v84;
  v85 = sub_1BC26F9D4();
  v86 = objc_msgSend(v85, sel_trailingAnchor);

  v87 = sub_1BC26F554();
  v88 = objc_msgSend(v87, sel_trailingAnchor);

  v89 = objc_msgSend(v86, sel_constraintEqualToAnchor_, v88);
  *(_QWORD *)(v2 + 160) = v89;
  v90 = sub_1BC26F9D4();
  v91 = objc_msgSend(v90, sel_topAnchor);

  v92 = sub_1BC26F9C4();
  v93 = objc_msgSend(v92, sel_bottomAnchor);

  v94 = objc_msgSend(v91, sel_constraintEqualToAnchor_constant_, v93, 8.0);
  *(_QWORD *)(v2 + 168) = v94;
  sub_1BC2B45A4();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
  v95 = sub_1BC2B4580();
  swift_bridgeObjectRelease();
  v96 = v142;
  objc_msgSend(v142, sel_activateConstraints_, v95);

  sub_1BC26F484();
  LOBYTE(v95) = sub_1BC2B3170();
  swift_release();
  if ((v95 & 1) == 0)
    goto LABEL_7;
  v97 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (v97)
  {
    v98 = v97;
    v99 = objc_msgSend(v97, sel_isAppleInternalInstall);

    if (v99)
    {
      v100 = swift_allocObject();
      *(_OWORD *)(v100 + 16) = xmmword_1BC2BAF60;
      v101 = sub_1BC26FBFC();
      v102 = objc_msgSend(v101, sel_leadingAnchor);

      v103 = sub_1BC26F554();
      v104 = objc_msgSend(v103, sel_leadingAnchor);

      v105 = objc_msgSend(v102, sel_constraintEqualToAnchor_, v104);
      *(_QWORD *)(v100 + 32) = v105;
      v106 = sub_1BC26FBFC();
      v107 = objc_msgSend(v106, sel_trailingAnchor);

      v108 = sub_1BC26F554();
      v109 = objc_msgSend(v108, sel_trailingAnchor);

      v110 = objc_msgSend(v107, sel_constraintEqualToAnchor_, v109);
      *(_QWORD *)(v100 + 40) = v110;
      v111 = sub_1BC26FBFC();
      v112 = objc_msgSend(v111, sel_topAnchor);

      v113 = sub_1BC26F9D4();
      v114 = objc_msgSend(v113, sel_bottomAnchor);

      v115 = objc_msgSend(v112, sel_constraintEqualToAnchor_constant_, v114, 16.0);
      *(_QWORD *)(v100 + 48) = v115;
      v116 = sub_1BC26FC68();
      v117 = objc_msgSend(v116, sel_leadingAnchor);

      v118 = sub_1BC26F554();
      v119 = objc_msgSend(v118, sel_leadingAnchor);

      v120 = objc_msgSend(v117, sel_constraintEqualToAnchor_, v119);
      *(_QWORD *)(v100 + 56) = v120;
      v121 = sub_1BC26FC68();
      v122 = objc_msgSend(v121, sel_trailingAnchor);

      v123 = sub_1BC26F554();
      v124 = objc_msgSend(v123, sel_trailingAnchor);

      v125 = objc_msgSend(v122, sel_constraintEqualToAnchor_, v124);
      *(_QWORD *)(v100 + 64) = v125;
      v126 = sub_1BC26FC68();
      v127 = objc_msgSend(v126, sel_topAnchor);

      v128 = sub_1BC26FBFC();
      v129 = objc_msgSend(v128, sel_bottomAnchor);

      v130 = objc_msgSend(v127, sel_constraintEqualToAnchor_constant_, v129, 8.0);
      v96 = v142;
      *(_QWORD *)(v100 + 72) = v130;
      v131 = objc_msgSend(v1, sel_contentView);
      v132 = objc_msgSend(v131, sel_bottomAnchor);

      v133 = sub_1BC26FC68();
      v134 = objc_msgSend(v133, sel_bottomAnchor);

      v135 = objc_msgSend(v132, sel_constraintEqualToAnchor_constant_, v134, *(double *)&qword_1EF402C40);
      *(_QWORD *)(v100 + 80) = v135;
LABEL_8:
      sub_1BC2B45A4();
      v143 = (id)sub_1BC2B4580();
      swift_bridgeObjectRelease();
      objc_msgSend(v96, sel_activateConstraints_, v143);

      return;
    }
LABEL_7:
    v136 = swift_allocObject();
    *(_OWORD *)(v136 + 16) = xmmword_1BC2B7770;
    v137 = objc_msgSend(v1, sel_contentView);
    v138 = objc_msgSend(v137, sel_bottomAnchor);

    v139 = sub_1BC26F9D4();
    v140 = objc_msgSend(v139, sel_bottomAnchor);

    v141 = objc_msgSend(v138, sel_constraintEqualToAnchor_constant_, v140, *(double *)&qword_1EF402C40);
    *(_QWORD *)(v136 + 32) = v141;
    goto LABEL_8;
  }
  __break(1u);
}

void sub_1BC2712DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;

  v4 = sub_1BC2B39E0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v8 = sub_1BC26F564();
    v20 = a1;
    v21 = a2;
    swift_bridgeObjectRetain();
    sub_1BC2B44FC();
    v9 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    objc_msgSend(v8, sel_setAccessibilityIdentifier_, v9);

    v10 = sub_1BC26F79C();
    v20 = a1;
    v21 = a2;
    swift_bridgeObjectRetain();
    sub_1BC2B44FC();
    v11 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    objc_msgSend(v10, sel_setAccessibilityIdentifier_, v11);

    v12 = sub_1BC26F9D4();
    v20 = a1;
    v21 = a2;
    swift_bridgeObjectRetain();
    sub_1BC2B44FC();
    v13 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    objc_msgSend(v12, sel_setAccessibilityIdentifier_, v13);

    v14 = sub_1BC26FC68();
    v20 = a1;
    v21 = a2;
    swift_bridgeObjectRetain();
    sub_1BC2B44FC();
    v19 = (id)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    objc_msgSend(v14, sel_setAccessibilityIdentifier_, v19);

  }
  else
  {
    sub_1BC2B39C8();
    v15 = sub_1BC2B39D4();
    v16 = sub_1BC2B48E0();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_1BC0DC000, v15, v16, "Could not set Interaction Factors Info Cell AXIDs because base ID was unexpectedly nil.", v17, 2u);
      MEMORY[0x1BCCEF3A0](v17, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

id InteractionFactorsInfoCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InteractionFactorsInfoCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t (*sub_1BC271688())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

void sub_1BC2716CC(uint64_t a1, uint64_t a2)
{
  sub_1BC2712DC(a1, a2);
}

uint64_t sub_1BC2716EC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a2);
}

ValueMetadata *type metadata accessor for InteractionFactorsInfoItem()
{
  return &type metadata for InteractionFactorsInfoItem;
}

uint64_t method lookup function for InteractionFactorsInfoCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InteractionFactorsInfoCell.item.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of InteractionFactorsInfoCell.item.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of InteractionFactorsInfoCell.item.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of InteractionFactorsInfoCell.updateAutomationIdentifiers(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1B0))();
}

id sub_1BC2717D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  _QWORD v13[2];

  sub_1BC0E1C64(0, (unint64_t *)&qword_1EF3FBD28, (void (*)(uint64_t))MEMORY[0x1E0D2F3A8]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v13 - v3;
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  if (a1 == 1)
  {
    sub_1BC0E1D38(0, (unint64_t *)&unk_1EDA0FCD0);
    v6 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
    v7 = sub_1BC2B4A60();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v4, 1, 1, v7);
    v13[0] = 0xD000000000000015;
    v13[1] = 0x80000001BC2CFDB0;
    sub_1BC2B44FC();
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v8 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
    sub_1BC2B4C64();
    v9 = (void *)sub_1BC2B4A48();
    objc_msgSend(v5, sel_setAttributedText_, v9);
  }
  else
  {
    sub_1BC253DF0(0xD000000000000015, 0x80000001BC2CFDB0, a1);
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v10 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    v11 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_setText_, v11);

    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
    v9 = (void *)sub_1BC2B4C64();
    objc_msgSend(v5, sel_setFont_, v9);
  }

  objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v5, sel_setNumberOfLines_, 0);
  objc_msgSend(v5, sel_setAdjustsFontForContentSizeCategory_, 1);
  return v5;
}

uint64_t sub_1BC271BE4(unint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD v18[2];
  uint64_t v19;

  v2 = v1;
  sub_1BC127C04();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
    goto LABEL_15;
  v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    if (!v8)
      return v9;
    v19 = MEMORY[0x1E0DEE9D8];
    result = sub_1BC125E94(0, v8 & ~(v8 >> 63), 0);
    if (v8 < 0)
      break;
    v18[1] = v2;
    v11 = 0;
    v9 = v19;
    while (v8 != v11)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v12 = (id)MEMORY[0x1BCCEE950](v11, a1);
      else
        v12 = *(id *)(a1 + 8 * v11 + 32);
      v13 = v12;
      sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDE0);
      v14 = v13;
      sub_1BC2B434C();
      sub_1BC0FB4F4();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v7, 0, 1, v15);

      v19 = v9;
      v17 = *(_QWORD *)(v9 + 16);
      v16 = *(_QWORD *)(v9 + 24);
      v2 = v17 + 1;
      if (v17 >= v16 >> 1)
      {
        sub_1BC125E94(v16 > 1, v17 + 1, 1);
        v9 = v19;
      }
      ++v11;
      *(_QWORD *)(v9 + 16) = v2;
      sub_1BC0F1B94((uint64_t)v7, v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v17, (uint64_t (*)(_QWORD))sub_1BC127C04);
      if (v8 == v11)
        return v9;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v8 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

BOOL static VisualizationDataSourceDisplayContext.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1BC271DF4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  void (*v14)(char *, unint64_t, uint64_t);
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD v21[2];
  unint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;

  v2 = sub_1BC2B3698();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v21 - v7;
  v9 = MEMORY[0x1E0DEE9D8];
  v25 = MEMORY[0x1E0DEE9D8];
  v10 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v10)
  {
    v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    v12 = *(_QWORD *)(v3 + 72);
    v21[1] = a1;
    v22 = v11;
    v13 = a1 + v11;
    v14 = *(void (**)(char *, unint64_t, uint64_t))(v3 + 16);
    v23 = v6;
    v24 = v3;
    v14(v8, a1 + v11, v2);
    while (1)
    {
      if ((sub_1BC2B368C() & 1) != 0)
      {
        v15 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
        v15(v6, v8, v2);
        v16 = v25;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BC125D24(0, *(_QWORD *)(v16 + 16) + 1, 1);
          v16 = v25;
        }
        v18 = *(_QWORD *)(v16 + 16);
        v17 = *(_QWORD *)(v16 + 24);
        if (v18 >= v17 >> 1)
        {
          sub_1BC125D24(v17 > 1, v18 + 1, 1);
          v16 = v25;
        }
        *(_QWORD *)(v16 + 16) = v18 + 1;
        v19 = v16 + v22 + v18 * v12;
        v6 = v23;
        v15((char *)v19, v23, v2);
        v25 = v16;
        v3 = v24;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      }
      v13 += v12;
      if (!--v10)
        break;
      v14(v8, v13, v2);
    }
    v9 = v25;
  }
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t VisualizationDataSourceDisplayContext.hash(into:)()
{
  return sub_1BC2B545C();
}

uint64_t VisualizationDataSourceDisplayContext.hashValue.getter()
{
  sub_1BC2B5450();
  sub_1BC2B545C();
  return sub_1BC2B548C();
}

uint64_t sub_1BC272020()
{
  swift_beginAccess();
  return swift_retain();
}

uint64_t sub_1BC272068(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + qword_1EF4011E0);
  swift_beginAccess();
  *v3 = v2;
  swift_retain();
  return swift_release();
}

uint64_t sub_1BC2720D0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + qword_1EF4011E0);
  swift_beginAccess();
  *v3 = a1;
  return swift_release();
}

uint64_t (*sub_1BC272120())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1BC272164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  _BYTE v25[4];
  int v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  void *v31;

  v6 = v5;
  v12 = sub_1BC2B3350();
  v27 = *(_QWORD *)(v12 - 8);
  v28 = v12;
  MEMORY[0x1E0C80A78](v12);
  v14 = &v25[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BC10926C();
  MEMORY[0x1E0C80A78](v15);
  v17 = &v25[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v26 = *a5;
  v18 = qword_1EF4011E0;
  v19 = sub_1BC2B3608();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v17, 1, 1, v19);
  sub_1BC13BE80(0, &qword_1EF3FB540, (void (*)(uint64_t))sub_1BC10926C);
  swift_allocObject();
  swift_retain();
  *(_QWORD *)(v6 + v18) = sub_1BC2B3EF0();
  *(_QWORD *)(v6 + qword_1EF401208) = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v6 + qword_1EF4011E8) = a1;
  *(_QWORD *)(v6 + qword_1EF4011F0) = a2;
  *(_QWORD *)(v6 + qword_1EF4011F8) = a3;
  *(_QWORD *)(v6 + qword_1EF401200) = a4;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  sub_1BC2B3ED8();
  sub_1BC2B3ED8();
  v20 = v31;
  sub_1BC2B3ED8();
  v21 = v30;
  sub_1BC2B3ED8();
  v22 = v29;
  sub_1BC274DF4((uint64_t)v14, v20, v21, v29);

  (*(void (**)(_BYTE *, uint64_t))(v27 + 8))(v14, v28);
  *(_BYTE *)(swift_allocObject() + 16) = v26;
  v23 = sub_1BC2B2F18();
  swift_retain();
  sub_1BC272958();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v23;
}

uint64_t sub_1BC2723E8(uint64_t a1, void *a2, char a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  double v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  void *v25;
  void *v26;
  double v27;
  double v28;
  id v29;
  void *v30;
  double v31;
  double v32;
  double v33;
  double v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  id v43;
  void *v44;
  id v45;
  id v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t v52;

  v50 = a1;
  v4 = a3 & 1;
  v5 = sub_1BC2B2D20();
  v48 = *(_QWORD *)(v5 - 8);
  v49 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = a2;
  v8 = objc_msgSend(a2, sel_traitCollection);
  v9 = sub_1BC2B4A3C();

  if ((v4 & (v9 > 2)) != 0)
    v10 = 44.0;
  else
    v10 = 4.0;
  v11 = (void *)objc_opt_self();
  v12 = objc_msgSend(v11, sel_fractionalWidthDimension_, 0.166666667);
  v13 = objc_msgSend(v11, sel_fractionalHeightDimension_, 1.0);
  v14 = (void *)objc_opt_self();
  v15 = objc_msgSend(v14, sel_sizeWithWidthDimension_heightDimension_, v12, v13);

  v16 = (void *)objc_opt_self();
  v47 = v15;
  v17 = objc_msgSend(v16, sel_itemWithLayoutSize_, v15);
  sub_1BC2B4AF0();
  objc_msgSend(v17, sel_setContentInsets_);
  v18 = objc_msgSend(v11, sel_fractionalWidthDimension_, 1.0);
  v19 = objc_msgSend(v11, sel_fractionalWidthDimension_, 0.166666667);
  v20 = objc_msgSend(v14, sel_sizeWithWidthDimension_heightDimension_, v18, v19);

  v21 = (void *)objc_opt_self();
  sub_1BC0E7940();
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1BC2B7770;
  *(_QWORD *)(v22 + 32) = v17;
  v52 = v22;
  sub_1BC2B45A4();
  sub_1BC0E1D38(0, &qword_1EF3FAFA0);
  v45 = v17;
  v23 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  v46 = v20;
  v24 = objc_msgSend(v21, sel_horizontalGroupWithLayoutSize_subitems_, v20, v23);

  sub_1BC2B2C9C();
  if (!v50 && v4)
  {
    v25 = (void *)sub_1BC2B2CA8();
    if (v25)
    {
      v26 = v25;
      objc_msgSend(v25, sel_dimension);
      v28 = v27;

    }
    else
    {
      v28 = 30.0;
    }
    v29 = objc_msgSend(v11, sel_absoluteDimension_, v28);
    sub_1BC2B2CB4();
  }
  v30 = (void *)sub_1BC2B2D14();
  objc_msgSend(v30, sel_contentInsets);
  v32 = v31;
  objc_msgSend(v30, sel_contentInsets);
  v34 = v33;
  v35 = (void *)objc_opt_self();
  v51 = v24;
  v36 = objc_msgSend(v35, sel_sectionWithGroup_, v24);
  objc_msgSend(v36, sel_setContentInsets_, v32, v10, v34, v10);
  v37 = objc_msgSend(v30, sel_boundarySupplementaryItems);
  if (!v37)
  {
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EF3FAFA8);
    sub_1BC2B458C();
    v37 = (id)sub_1BC2B4580();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v36, sel_setBoundarySupplementaryItems_, v37);

  objc_msgSend(v36, sel_setSupplementaryContentInsetsReference_, 3);
  v38 = objc_msgSend(v36, sel_boundarySupplementaryItems);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EF3FAFA8);
  v39 = sub_1BC2B458C();

  if (!(v39 >> 62))
  {
    v40 = *(_QWORD *)((v39 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v40)
      goto LABEL_14;
LABEL_21:

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v7, v49);
    return (uint64_t)v36;
  }
  swift_bridgeObjectRetain();
  result = sub_1BC2B52D0();
  v40 = result;
  if (!result)
    goto LABEL_21;
LABEL_14:
  if (v40 >= 1)
  {
    v42 = 0;
    do
    {
      if ((v39 & 0xC000000000000001) != 0)
        v43 = (id)MEMORY[0x1BCCEE950](v42, v39);
      else
        v43 = *(id *)(v39 + 8 * v42 + 32);
      v44 = v43;
      ++v42;
      objc_msgSend(v43, sel_contentInsets);
      objc_msgSend(v44, sel_setContentInsets_);
      objc_msgSend(v44, sel_contentInsets);
      objc_msgSend(v44, sel_setContentInsets_);

    }
    while (v40 != v42);
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC272958()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v27 = *v0;
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0FCC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v22 - v2;
  sub_1BC275AF0();
  v22 = v4;
  v24 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC275BD4();
  v8 = *(_QWORD *)(v7 - 8);
  v25 = v7;
  v26 = v8;
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B3350();
  v23 = swift_allocBox();
  v11 = qword_1EF4011E8;
  swift_retain();
  sub_1BC2B3ED8();
  swift_release();
  v12 = *(uint64_t *)((char *)v0 + qword_1EF4011F0);
  v28 = *(id *)((char *)v0 + v11);
  v30 = *(uint64_t *)((char *)v0 + qword_1EF4011F8);
  v31 = v12;
  v29 = *(uint64_t *)((char *)v0 + qword_1EF401200);
  sub_1BC275BC0(0);
  sub_1BC1665C0();
  v13 = MEMORY[0x1E0C95FB8];
  sub_1BC0E519C(&qword_1EF4012B0, (uint64_t (*)(uint64_t))sub_1BC275BC0, MEMORY[0x1E0C95FB8]);
  sub_1BC0E519C(&qword_1EF4012B8, (uint64_t (*)(uint64_t))sub_1BC1665C0, v13);
  sub_1BC2B3FEC();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FFF0);
  v28 = (id)sub_1BC2B4A0C();
  v14 = sub_1BC2B49C4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v3, 1, 1, v14);
  sub_1BC0E519C(&qword_1EF4012C8, (uint64_t (*)(uint64_t))sub_1BC275AF0, MEMORY[0x1E0C956D8]);
  sub_1BC1019D8();
  v15 = v22;
  sub_1BC2B4064();
  sub_1BC101BB8((uint64_t)v3);

  (*(void (**)(char *, uint64_t))(v24 + 8))(v6, v15);
  v16 = swift_allocObject();
  swift_weakInit();
  v17 = (_QWORD *)swift_allocObject();
  v18 = v23;
  v17[2] = v16;
  v17[3] = v18;
  v17[4] = v27;
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = sub_1BC275CD8;
  *(_QWORD *)(v19 + 24) = v17;
  sub_1BC0E519C(&qword_1EF4012D0, (uint64_t (*)(uint64_t))sub_1BC275BD4, MEMORY[0x1E0C95CB8]);
  swift_retain();
  v20 = v25;
  sub_1BC2B40A0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v20);
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  swift_release();
  return swift_release();
}

uint64_t sub_1BC272D38(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t result;
  char v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;

  v31 = a3;
  v32 = a4;
  v30 = a2;
  sub_1BC10926C();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_1BC2B3608();
  v8 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BC2B3350();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = swift_projectBox();
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v28 = v7;
    v29 = v10;
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v11);
    sub_1BC0E519C(&qword_1EF3FAEF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C6F0], MEMORY[0x1E0D2C708]);
    v17 = sub_1BC2B4424();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    v18 = a1;
    v19 = a1;
    v21 = v30;
    v20 = v31;
    if ((v17 & 1) != 0)
    {
      v22 = v32;
      sub_1BC273624(v19, v30, v31, (uint64_t)v32);
    }
    else
    {
      v27 = v8;
      v23 = v32;
      sub_1BC274DF4(v19, v30, v31, v32);
      sub_1BC2B2C18();
      v22 = v23;
      v8 = v27;
      swift_bridgeObjectRelease();
    }
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 24))(v15, v18, v11);
    v24 = (uint64_t)v29;
    sub_1BC27301C(v18, v21, v20, v22, (uint64_t)v29);
    swift_beginAccess();
    v25 = (uint64_t)v28;
    v26 = v33;
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v28, v24, v33);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v25, 0, 1, v26);
    swift_retain();
    sub_1BC2B3EC0();
    swift_release();
    swift_release();
    sub_1BC0E8594(v25, (uint64_t (*)(_QWORD))sub_1BC10926C);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v24, v26);
  }
  return result;
}

uint64_t sub_1BC27301C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t inited;
  unint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;

  v43 = a2;
  v44 = a5;
  v8 = sub_1BC2B37DC();
  v40 = *(_QWORD *)(v8 - 8);
  v41 = v8;
  MEMORY[0x1E0C80A78](v8);
  v42 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BC2B3350();
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C6F0];
  v12 = *(_QWORD *)(v10 - 8);
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v39 - v16;
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))((char *)&v39 - v16, *MEMORY[0x1E0D2C6D8], v10);
  sub_1BC0E519C(&qword_1EF4012A0, v11, MEMORY[0x1E0D2C710]);
  sub_1BC2B4568();
  sub_1BC2B4568();
  if (v47 == v45 && v48 == v46)
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v10);
  }
  else
  {
    v18 = sub_1BC2B53CC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v10);
    if ((v18 & 1) == 0)
    {
      v27 = sub_1BC2B3344();
      v28 = sub_1BC271DF4(v27);
      swift_bridgeObjectRelease();
      sub_1BC0E7998(0, &qword_1EF3FA238, (uint64_t (*)(uint64_t))sub_1BC127C04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      sub_1BC127C04();
      v30 = *(unsigned __int8 *)(*(_QWORD *)(v29 - 8) + 80);
      v31 = (v30 + 32) & ~v30;
      v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = xmmword_1BC2B92D0;
      sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDE0);
      v33 = a3;
      sub_1BC2B434C();
      sub_1BC0FB4F4();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v32 + v31, 0, 1, v34);
      v26 = sub_1BC2742C4(v28, v32);
      swift_bridgeObjectRelease();
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      goto LABEL_7;
    }
  }
  v19 = sub_1BC2B3344();
  v20 = sub_1BC271DF4(v19);
  swift_bridgeObjectRelease();
  sub_1BC0E7940();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC2B92B0;
  *(_QWORD *)(inited + 32) = a3;
  *(_QWORD *)(inited + 40) = a4;
  v47 = inited;
  sub_1BC2B45A4();
  v22 = v47;
  v23 = a3;
  v24 = a4;
  v25 = sub_1BC271BE4(v22);
  swift_bridgeObjectRelease();
  v26 = sub_1BC2742C4(v20, v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_7:
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a1, v10);
  v35 = sub_1BC2B3344();
  v36 = sub_1BC273400(v35);
  swift_bridgeObjectRelease();
  v47 = v26;
  sub_1BC131D5C(v36);
  (*(void (**)(char *, _QWORD, uint64_t))(v40 + 104))(v42, *MEMORY[0x1E0D2CAF0], v41);
  v37 = v43;
  return sub_1BC2B35E4();
}

uint64_t sub_1BC273400(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  uint64_t v13;
  void (*v14)(char *, unint64_t, uint64_t);
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = sub_1BC2B3698();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0FB470();
  v24 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BC273D84(a1);
  v11 = *(_QWORD *)(v10 + 16);
  if (v11)
  {
    v25 = MEMORY[0x1E0DEE9D8];
    sub_1BC125B8C(0, v11, 0);
    v12 = v10 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v13 = *(_QWORD *)(v3 + 72);
    v21[1] = v10;
    v22 = v13;
    v14 = *(void (**)(char *, unint64_t, uint64_t))(v3 + 16);
    v23 = v3;
    do
    {
      v14(v5, v12, v2);
      v15 = &v9[*(int *)(v24 + 48)];
      v14(v9, (unint64_t)v5, v2);
      sub_1BC0FB4F4();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      v17 = v25;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BC125B8C(0, *(_QWORD *)(v17 + 16) + 1, 1);
        v17 = v25;
      }
      v19 = *(_QWORD *)(v17 + 16);
      v18 = *(_QWORD *)(v17 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_1BC125B8C(v18 > 1, v19 + 1, 1);
        v17 = v25;
      }
      *(_QWORD *)(v17 + 16) = v19 + 1;
      sub_1BC0F1B94((uint64_t)v9, v17+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v19, (uint64_t (*)(_QWORD))sub_1BC0FB470);
      v3 = v23;
      v12 += v22;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v17;
}

uint64_t sub_1BC273624(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v18 = a4;
  v19 = a2;
  v5 = sub_1BC2B3350();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C6F0];
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BC2B3284();
  v11 = a3;
  sub_1BC275508(v10, (uint64_t)v11);
  swift_bridgeObjectRelease();

  sub_1BC2B2C24();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0D2C6D8], v5);
  sub_1BC0E519C(&qword_1EF4012A0, v6, MEMORY[0x1E0D2C710]);
  sub_1BC2B4568();
  sub_1BC2B4568();
  if (v22 == v20 && v23 == v21)
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
LABEL_5:
    v13 = sub_1BC2B3284();
    v14 = MEMORY[0x1E0C80A78](v13);
    *(&v18 - 2) = v18;
    sub_1BC275728(v14, (void (*)(uint64_t))sub_1BC275AE8, (uint64_t)(&v18 - 4));
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  v12 = sub_1BC2B53CC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
  if ((v12 & 1) != 0)
    goto LABEL_5;
LABEL_6:
  sub_1BC2B2C24();
  swift_bridgeObjectRelease();
  v15 = sub_1BC2B3290();
  v16 = v19;
  sub_1BC2758C4(v15, (uint64_t)v16);
  swift_bridgeObjectRelease();

  sub_1BC2B2C24();
  return swift_bridgeObjectRelease();
}

void sub_1BC27389C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  void *v5;
  char v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = sub_1BC2B32B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EF3FBD20);
  v5 = (void *)sub_1BC2B32A8();
  v6 = sub_1BC2B4D84();

  sub_1BC0FBE74(0);
  *(_BYTE *)(a2 + *(int *)(v7 + 36)) = v6 & 1;
  v8 = (_QWORD *)(a2 + *(int *)(v7 + 40));
  *v8 = 0xD000000000000012;
  v8[1] = 0x80000001BC2CADC0;
}

void VisualizationModificationDataSource.__allocating_init(arrangedSections:collapseEmptySections:layoutConstructor:)()
{
  sub_1BC2739A8();
}

void VisualizationModificationDataSource.init(arrangedSections:collapseEmptySections:layoutConstructor:)()
{
  sub_1BC2739A8();
}

void VisualizationModificationDataSource.__allocating_init(arrangedSections:collapseEmptySections:layoutSectionProvider:)()
{
  sub_1BC2739A8();
}

void sub_1BC2739A8()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void VisualizationModificationDataSource.init(arrangedSections:collapseEmptySections:layoutSectionProvider:)()
{
  sub_1BC2739A8();
}

uint64_t sub_1BC2739E8()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t VisualizationModificationDataSource.deinit()
{
  uint64_t v0;

  v0 = sub_1BC2B2F3C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t VisualizationModificationDataSource.__deallocating_deinit()
{
  sub_1BC2B2F3C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

unint64_t VisualizationModificationDataSource.supplementaryItem(ofKind:at:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;

  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8E68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B320], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v18 - v3;
  v5 = sub_1BC2B2BC4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC2B2C0C();
  result = sub_1BC2B25F4();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (result >= *(_QWORD *)(v9 + 16))
  {
LABEL_8:
    __break(1u);
    return result;
  }
  (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v9+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * result, v5);
  swift_bridgeObjectRelease();
  sub_1BC2B2BB8();
  v12 = v11;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (v12)
  {
    v13 = sub_1BC2B2D68();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v4, 1, 1, v13);
    v14 = sub_1BC2B2D80();
    v15 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B338];
    a1[3] = v14;
    a1[4] = sub_1BC0E519C((unint64_t *)&qword_1EF3F8E80, v15, MEMORY[0x1E0D2B310]);
    __swift_allocate_boxed_opaque_existential_1(a1);
    return sub_1BC2B2D74();
  }
  else
  {
    v16 = sub_1BC2B296C();
    v17 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2AB30];
    a1[3] = v16;
    a1[4] = sub_1BC0E519C(&qword_1EF3F8B68, v17, MEMORY[0x1E0D2AB20]);
    __swift_allocate_boxed_opaque_existential_1(a1);
    return sub_1BC2B2960();
  }
}

unint64_t sub_1BC273D64@<X0>(uint64_t *a1@<X8>)
{
  return VisualizationModificationDataSource.supplementaryItem(ofKind:at:)(a1);
}

uint64_t sub_1BC273D84(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  void (*v14)(char *, unint64_t, uint64_t);
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD v21[2];
  unint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;

  v2 = sub_1BC2B3698();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v21 - v7;
  v9 = MEMORY[0x1E0DEE9D8];
  v25 = MEMORY[0x1E0DEE9D8];
  v10 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v10)
  {
    v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    v12 = *(_QWORD *)(v3 + 72);
    v21[1] = a1;
    v22 = v11;
    v13 = a1 + v11;
    v14 = *(void (**)(char *, unint64_t, uint64_t))(v3 + 16);
    v23 = v6;
    v24 = v3;
    v14(v8, a1 + v11, v2);
    while (1)
    {
      if ((sub_1BC2B368C() & 1) != 0)
      {
        (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      }
      else
      {
        v15 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
        v15(v6, v8, v2);
        v16 = v25;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BC125D24(0, *(_QWORD *)(v16 + 16) + 1, 1);
          v16 = v25;
        }
        v18 = *(_QWORD *)(v16 + 16);
        v17 = *(_QWORD *)(v16 + 24);
        if (v18 >= v17 >> 1)
        {
          sub_1BC125D24(v17 > 1, v18 + 1, 1);
          v16 = v25;
        }
        *(_QWORD *)(v16 + 16) = v18 + 1;
        v19 = v16 + v22 + v18 * v12;
        v6 = v23;
        v15((char *)v19, v23, v2);
        v25 = v16;
        v3 = v24;
      }
      v13 += v12;
      if (!--v10)
        break;
      v14(v8, v13, v2);
    }
    v9 = v25;
  }
  swift_bridgeObjectRelease();
  return v9;
}

Swift::Void __swiftcall VisualizationModificationDataSource.registerCells(for:)(UICollectionView *a1)
{
  type metadata accessor for ColorCell(0);
  sub_1BC0E519C(&qword_1EF401210, type metadata accessor for ColorCell, (uint64_t)&unk_1BC2C6294);
  sub_1BC2B497C();
  sub_1BC2B2D5C();
  sub_1BC2B4994();
}

unint64_t sub_1BC273FB4()
{
  unint64_t result;

  result = qword_1EF401218;
  if (!qword_1EF401218)
  {
    result = MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for VisualizationDataSourceDisplayContext, &type metadata for VisualizationDataSourceDisplayContext);
    atomic_store(result, (unint64_t *)&qword_1EF401218);
  }
  return result;
}

uint64_t sub_1BC273FF8()
{
  return sub_1BC0E519C(&qword_1EF3FC320, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950], MEMORY[0x1E0D2C960]);
}

uint64_t sub_1BC274024()
{
  type metadata accessor for ColorCell(0);
  sub_1BC0E519C(&qword_1EF401210, type metadata accessor for ColorCell, (uint64_t)&unk_1BC2C6294);
  sub_1BC2B497C();
  sub_1BC2B2D5C();
  return sub_1BC2B4994();
}

uint64_t sub_1BC274090@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;

  v3 = (_QWORD *)(*a1 + qword_1EF4011E0);
  swift_beginAccess();
  *a2 = *v3;
  return swift_retain();
}

uint64_t storeEnumTagSinglePayload for VisualizationDataSourceDisplayContext(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BC274134 + 4 * byte_1BC2C5155[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BC274168 + 4 * byte_1BC2C5150[v4]))();
}

uint64_t sub_1BC274168(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC274170(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC274178);
  return result;
}

uint64_t sub_1BC274184(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC27418CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BC274190(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC274198(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VisualizationDataSourceDisplayContext()
{
  return &type metadata for VisualizationDataSourceDisplayContext;
}

uint64_t type metadata accessor for VisualizationModificationDataSource()
{
  uint64_t result;

  result = qword_1EF401250;
  if (!qword_1EF401250)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC2741F0()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for VisualizationModificationDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of VisualizationModificationDataSource.currentValuePublisher.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for VisualizationModificationDataSource + *v0 + 48))();
}

uint64_t dispatch thunk of VisualizationModificationDataSource.medmojiPublisher.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for VisualizationModificationDataSource + *v0 + 152))();
}

uint64_t dispatch thunk of VisualizationModificationDataSource.medmojiPublisher.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for VisualizationModificationDataSource + *v0 + 160))();
}

uint64_t dispatch thunk of VisualizationModificationDataSource.medmojiPublisher.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for VisualizationModificationDataSource + *v0 + 168))();
}

uint64_t sub_1BC2742BC()
{
  return type metadata accessor for VisualizationModificationDataSource();
}

uint64_t sub_1BC2742C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  unint64_t v46;
  int64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  BOOL v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;

  v4 = sub_1BC2B3698();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v69 = (char *)&v63 - v9;
  sub_1BC0FB470();
  v75 = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v12);
  v66 = (char *)&v63 - v16;
  MEMORY[0x1E0C80A78](v15);
  v67 = v11;
  v68 = (uint64_t)&v63 - v17;
  v18 = *(_QWORD *)(a1 + 16);
  v73 = *(_QWORD *)(a2 + 16);
  v74 = v18;
  if (v73 >= v18)
    v19 = v18;
  else
    v19 = v73;
  v72 = a1;
  v76 = a2;
  if (v19)
  {
    sub_1BC0E7998(0, &qword_1EF3F9108, (uint64_t (*)(uint64_t))sub_1BC0FB470, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v20 = *(_QWORD *)(v11 + 72);
    v21 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v64 = *(unsigned __int8 *)(v11 + 80);
    v70 = (char *)swift_allocObject();
    result = _swift_stdlib_malloc_size(v70);
    if (!v20)
    {
LABEL_60:
      __break(1u);
      goto LABEL_61;
    }
    if (result - v21 == 0x8000000000000000 && v20 == -1)
      goto LABEL_62;
    v71 = v4;
    v24 = 0;
    v25 = v20;
    v26 = (uint64_t)(result - v21) / v20;
    v27 = v70;
    *((_QWORD *)v70 + 2) = v19;
    *((_QWORD *)v27 + 3) = 2 * v26;
    v65 = v21;
    v28 = (uint64_t)&v27[v21];
    v63 = v26 & 0x7FFFFFFFFFFFFFFFLL;
    v29 = v71;
    while (v74 != v24)
    {
      result = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v5 + 16))(v8, a1+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v24, v29);
      if (v73 == v24)
        goto LABEL_53;
      v30 = v24 + 1;
      sub_1BC127C04();
      v32 = v76
          + ((*(unsigned __int8 *)(*(_QWORD *)(v31 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v31 - 8) + 80))
          + *(_QWORD *)(*(_QWORD *)(v31 - 8) + 72) * v24;
      v33 = (uint64_t)&v14[*(int *)(v75 + 48)];
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v14, v8, v29);
      v34 = v32;
      a1 = v72;
      sub_1BC0FC574(v34, v33, (uint64_t (*)(_QWORD))sub_1BC127C04);
      result = sub_1BC0F1B94((uint64_t)v14, v28, (uint64_t (*)(_QWORD))sub_1BC0FB470);
      v28 += v25;
      v24 = v30;
      if (v19 == v30)
      {
        swift_bridgeObjectRetain();
        result = swift_bridgeObjectRetain();
        v35 = v64;
        v36 = v63 - v30;
        v4 = v71;
        goto LABEL_16;
      }
    }
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  v35 = *(unsigned __int8 *)(v11 + 80);
  v37 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 24);
  v65 = (v35 + 32) & ~v35;
  v70 = (char *)MEMORY[0x1E0DEE9D8];
  v28 = MEMORY[0x1E0DEE9D8] + v65;
  v36 = v37 >> 1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRetain();
LABEL_16:
  v39 = v73;
  v38 = v74;
  if (v74 > v73)
  {
    v64 = v35 | 7;
    if (v19 <= (uint64_t)v73)
      v40 = v73;
    else
      v40 = v19;
    v71 = v40;
    while (v38 != v19)
    {
      result = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v5 + 16))(v69, a1+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v19, v4);
      if (v39 == v19)
      {
        (*(void (**)(char *, uint64_t))(v5 + 8))(v69, v4);
        goto LABEL_47;
      }
      if (v71 == v19)
        goto LABEL_55;
      sub_1BC127C04();
      v42 = v76
          + ((*(unsigned __int8 *)(*(_QWORD *)(v41 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v41 - 8) + 80))
          + *(_QWORD *)(*(_QWORD *)(v41 - 8) + 72) * v19;
      v43 = (uint64_t)v66;
      v44 = (uint64_t)&v66[*(int *)(v75 + 48)];
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v66, v69, v4);
      sub_1BC0FC574(v42, v44, (uint64_t (*)(_QWORD))sub_1BC127C04);
      result = sub_1BC0F1B94(v43, v68, (uint64_t (*)(_QWORD))sub_1BC0FB470);
      if (v36)
      {
        v45 = v70;
      }
      else
      {
        v46 = *((_QWORD *)v70 + 3);
        if ((uint64_t)((v46 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_57;
        v47 = v46 & 0xFFFFFFFFFFFFFFFELL;
        if (v47 <= 1)
          v48 = 1;
        else
          v48 = v47;
        sub_1BC0E7998(0, &qword_1EF3F9108, (uint64_t (*)(uint64_t))sub_1BC0FB470, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
        v49 = *(_QWORD *)(v67 + 72);
        v50 = v65;
        v45 = (char *)swift_allocObject();
        result = _swift_stdlib_malloc_size(v45);
        if (!v49)
          goto LABEL_58;
        v51 = result - v50;
        if (result - v50 == 0x8000000000000000 && v49 == -1)
          goto LABEL_59;
        v53 = v51 / v49;
        *((_QWORD *)v45 + 2) = v48;
        *((_QWORD *)v45 + 3) = 2 * (v51 / v49);
        v54 = &v45[v50];
        v55 = *((_QWORD *)v70 + 3) >> 1;
        v56 = v55 * v49;
        if (*((_QWORD *)v70 + 2))
        {
          v57 = &v70[v50];
          v58 = v70;
          if (v45 < v70 || v54 >= &v57[v56])
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v45 != v70)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          *((_QWORD *)v58 + 2) = 0;
        }
        v28 = (uint64_t)&v54[v56];
        v36 = (v53 & 0x7FFFFFFFFFFFFFFFLL) - v55;
        result = swift_release();
        a1 = v72;
      }
      v39 = v73;
      v38 = v74;
      v59 = __OFSUB__(v36--, 1);
      if (v59)
        goto LABEL_56;
      ++v19;
      result = sub_1BC0F1B94(v68, v28, (uint64_t (*)(_QWORD))sub_1BC0FB470);
      v28 += *(_QWORD *)(v67 + 72);
      v70 = v45;
      if (v38 == v19)
        goto LABEL_48;
    }
    goto LABEL_54;
  }
LABEL_47:
  v45 = v70;
LABEL_48:
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v60 = *((_QWORD *)v45 + 3);
  if (v60 < 2)
    return (uint64_t)v45;
  v61 = v60 >> 1;
  v59 = __OFSUB__(v61, v36);
  v62 = v61 - v36;
  if (!v59)
  {
    *((_QWORD *)v45 + 2) = v62;
    return (uint64_t)v45;
  }
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
  return result;
}

uint64_t sub_1BC274838(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  char v15;
  char *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v25 = a2;
  sub_1BC0FBE74(0);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = MEMORY[0x1E0DEE9D8];
  if (v9)
  {
    v20 = v2;
    v26 = MEMORY[0x1E0DEE9D8];
    sub_1BC125BB8(0, v9, 0);
    v10 = v26;
    v24 = sub_1BC2B32B4();
    v11 = *(_QWORD *)(v24 - 8);
    v12 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    v13 = sub_1BC0E1D38(0, (unint64_t *)&qword_1EF3FBD20);
    v22 = *(_QWORD *)(v11 + 72);
    v23 = v13;
    v21 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    do
    {
      v21(v8, v12, v24);
      v14 = (void *)sub_1BC2B32A8();
      v15 = sub_1BC2B4D84();

      v8[*(int *)(v5 + 36)] = v15 & 1;
      v16 = &v8[*(int *)(v5 + 40)];
      *(_QWORD *)v16 = 0x756F72676B636162;
      *((_QWORD *)v16 + 1) = 0xEF726F6C6F43646ELL;
      v26 = v10;
      v18 = *(_QWORD *)(v10 + 16);
      v17 = *(_QWORD *)(v10 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_1BC125BB8(v17 > 1, v18 + 1, 1);
        v10 = v26;
      }
      *(_QWORD *)(v10 + 16) = v18 + 1;
      sub_1BC0F1B94((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v18, (uint64_t (*)(_QWORD))sub_1BC0FBE74);
      v12 += v22;
      --v9;
    }
    while (v9);
  }
  return v10;
}

uint64_t sub_1BC274A24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  void *v15;
  char v16;
  char *v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD v21[2];
  unint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v27 = a2;
  sub_1BC0FBE74(0);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = MEMORY[0x1E0DEE9D8];
  if (v9)
  {
    v21[1] = v2;
    v28 = MEMORY[0x1E0DEE9D8];
    sub_1BC125BB8(0, v9, 0);
    v10 = v28;
    v26 = sub_1BC2B32B4();
    v11 = *(_QWORD *)(v26 - 8);
    v12 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    v13 = sub_1BC0E1D38(0, (unint64_t *)&qword_1EF3FBD20);
    v24 = *(_QWORD *)(v11 + 72);
    v25 = v13;
    v14 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    v22 = 0x80000001BC2CADA0;
    v23 = v14;
    do
    {
      v23(v8, v12, v26);
      v15 = (void *)sub_1BC2B32A8();
      v16 = sub_1BC2B4D84();

      v8[*(int *)(v5 + 36)] = v16 & 1;
      v17 = &v8[*(int *)(v5 + 40)];
      *(_QWORD *)v17 = 0xD000000000000011;
      *((_QWORD *)v17 + 1) = v22;
      v28 = v10;
      v19 = *(_QWORD *)(v10 + 16);
      v18 = *(_QWORD *)(v10 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_1BC125BB8(v18 > 1, v19 + 1, 1);
        v10 = v28;
      }
      *(_QWORD *)(v10 + 16) = v19 + 1;
      sub_1BC0F1B94((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v19, (uint64_t (*)(_QWORD))sub_1BC0FBE74);
      v12 += v24;
      --v9;
    }
    while (v9);
  }
  return v10;
}

uint64_t sub_1BC274C0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  void *v15;
  char v16;
  char *v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD v21[2];
  unint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v27 = a2;
  sub_1BC0FBE74(0);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = MEMORY[0x1E0DEE9D8];
  if (v9)
  {
    v21[1] = v2;
    v28 = MEMORY[0x1E0DEE9D8];
    sub_1BC125BB8(0, v9, 0);
    v10 = v28;
    v26 = sub_1BC2B32B4();
    v11 = *(_QWORD *)(v26 - 8);
    v12 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    v13 = sub_1BC0E1D38(0, (unint64_t *)&qword_1EF3FBD20);
    v24 = *(_QWORD *)(v11 + 72);
    v25 = v13;
    v14 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    v22 = 0x80000001BC2CADC0;
    v23 = v14;
    do
    {
      v23(v8, v12, v26);
      v15 = (void *)sub_1BC2B32A8();
      v16 = sub_1BC2B4D84();

      v8[*(int *)(v5 + 36)] = v16 & 1;
      v17 = &v8[*(int *)(v5 + 40)];
      *(_QWORD *)v17 = 0xD000000000000012;
      *((_QWORD *)v17 + 1) = v22;
      v28 = v10;
      v19 = *(_QWORD *)(v10 + 16);
      v18 = *(_QWORD *)(v10 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_1BC125BB8(v18 > 1, v19 + 1, 1);
        v10 = v28;
      }
      *(_QWORD *)(v10 + 16) = v19 + 1;
      sub_1BC0F1B94((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v19, (uint64_t (*)(_QWORD))sub_1BC0FBE74);
      v12 += v24;
      --v9;
    }
    while (v9);
  }
  return v10;
}

uint64_t sub_1BC274DF4(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  char v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v39;
  id v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  id v46;
  void (*v47)(char *, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v40 = a4;
  v45 = a2;
  v46 = a3;
  v5 = sub_1BC2B3350();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C6F0];
  v7 = *(_QWORD *)(v5 - 8);
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v39 - v12;
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v39 - v14;
  v16 = *MEMORY[0x1E0D2C6D8];
  v47 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 104);
  v47((char *)&v39 - v14, v16, v5);
  sub_1BC0E519C(&qword_1EF4012A0, v6, MEMORY[0x1E0D2C710]);
  v48 = a1;
  sub_1BC2B4568();
  sub_1BC2B4568();
  if (v51 == v49 && v52 == v50)
  {
    swift_bridgeObjectRelease_n();
    v17 = *(void (**)(char *, uint64_t))(v7 + 8);
    v17(v15, v5);
    goto LABEL_5;
  }
  v18 = sub_1BC2B53CC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v17 = *(void (**)(char *, uint64_t))(v7 + 8);
  v17(v15, v5);
  if ((v18 & 1) != 0)
  {
LABEL_5:
    if (qword_1EDA0FEE8 == -1)
      goto LABEL_8;
    goto LABEL_25;
  }
  if (qword_1EDA0FEE8 != -1)
LABEL_25:
    swift_once();
LABEL_8:
  v19 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  v20 = sub_1BC2B2144();
  v43 = v21;
  v44 = v20;
  swift_bridgeObjectRelease();

  v47(v13, v16, v5);
  sub_1BC2B4568();
  sub_1BC2B4568();
  if (v51 == v49 && v52 == v50)
  {
    swift_bridgeObjectRelease_n();
    v17(v13, v5);
  }
  else
  {
    v22 = sub_1BC2B53CC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v17(v13, v5);
    if ((v22 & 1) == 0)
    {
      v41 = 0xE000000000000000;
      v42 = 0;
      goto LABEL_16;
    }
  }
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v23 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  v24 = sub_1BC2B2144();
  v41 = v25;
  v42 = v24;
  swift_bridgeObjectRelease();

LABEL_16:
  v26 = sub_1BC2B3290();
  v27 = v45;
  v28 = sub_1BC274838(v26, (uint64_t)v27);
  swift_bridgeObjectRelease();

  v29 = sub_1BC2B3284();
  v30 = v46;
  v31 = sub_1BC274A24(v29, (uint64_t)v30);
  swift_bridgeObjectRelease();

  v47(v10, v16, v5);
  sub_1BC2B4568();
  sub_1BC2B4568();
  if (v51 == v49 && v52 == v50)
  {
    swift_bridgeObjectRelease_n();
    v17(v10, v5);
LABEL_20:
    v33 = sub_1BC2B3284();
    v34 = v40;
    v35 = sub_1BC274C0C(v33, (uint64_t)v34);
    swift_bridgeObjectRelease();

    goto LABEL_22;
  }
  v32 = sub_1BC2B53CC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v17(v10, v5);
  if ((v32 & 1) != 0)
    goto LABEL_20;
  v35 = MEMORY[0x1E0DEE9D8];
LABEL_22:
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8C50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BC2B2BC4();
  v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_1BC2B9600;
  sub_1BC0F79E0(v31);
  swift_bridgeObjectRelease();
  sub_1BC2B2BAC();
  sub_1BC0F79E0(v35);
  swift_bridgeObjectRelease();
  sub_1BC2B2BAC();
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v37 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  sub_1BC0F79E0(v28);
  swift_bridgeObjectRelease();
  sub_1BC2B2BAC();
  return v36;
}

uint64_t sub_1BC275508(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  void *v14;
  char v15;
  char *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v21;
  unint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v27 = a2;
  sub_1BC0FBE74(0);
  v5 = v4;
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = MEMORY[0x1E0DEE9D8];
  if (v8)
  {
    v21 = v2;
    v31 = MEMORY[0x1E0DEE9D8];
    sub_1BC125B04(0, v8, 0);
    v9 = v31;
    v26 = sub_1BC2B32B4();
    v10 = *(_QWORD *)(v26 - 8);
    v11 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v12 = sub_1BC0E1D38(0, (unint64_t *)&qword_1EF3FBD20);
    v24 = *(_QWORD *)(v10 + 72);
    v25 = v12;
    v13 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    v22 = 0x80000001BC2CADA0;
    v23 = v13;
    do
    {
      v23(v7, v11, v26);
      v14 = (void *)sub_1BC2B32A8();
      v15 = sub_1BC2B4D84();

      v7[*(int *)(v5 + 36)] = v15 & 1;
      v16 = &v7[*(int *)(v5 + 40)];
      *(_QWORD *)v16 = 0xD000000000000011;
      *((_QWORD *)v16 + 1) = v22;
      v31 = v9;
      v18 = *(_QWORD *)(v9 + 16);
      v17 = *(_QWORD *)(v9 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_1BC125B04(v17 > 1, v18 + 1, 1);
        v9 = v31;
      }
      v29 = v5;
      v30 = sub_1BC0E519C(&qword_1EF3F9138, (uint64_t (*)(uint64_t))sub_1BC0FBE74, (uint64_t)&protocol conformance descriptor for MedmojiConfigItem<A>);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v28);
      sub_1BC0FC574((uint64_t)v7, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))sub_1BC0FBE74);
      *(_QWORD *)(v9 + 16) = v18 + 1;
      sub_1BC0F2730(&v28, v9 + 40 * v18 + 32);
      sub_1BC0E8594((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1BC0FBE74);
      v11 += v24;
      --v8;
    }
    while (v8);
  }
  return v9;
}

uint64_t sub_1BC275728(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t *boxed_opaque_existential_1;
  _QWORD v17[2];
  uint64_t v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v19 = a2;
  v20 = a3;
  sub_1BC0FBE74(0);
  v18 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = MEMORY[0x1E0DEE9D8];
  if (v8)
  {
    v17[1] = v3;
    v24 = MEMORY[0x1E0DEE9D8];
    sub_1BC125B04(0, v8, 0);
    v9 = v24;
    v10 = *(_QWORD *)(sub_1BC2B32B4() - 8);
    v11 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v12 = *(_QWORD *)(v10 + 72);
    do
    {
      v19(v11);
      v24 = v9;
      v14 = *(_QWORD *)(v9 + 16);
      v13 = *(_QWORD *)(v9 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1BC125B04(v13 > 1, v14 + 1, 1);
        v9 = v24;
      }
      v22 = v18;
      v23 = sub_1BC0E519C(&qword_1EF3F9138, (uint64_t (*)(uint64_t))sub_1BC0FBE74, (uint64_t)&protocol conformance descriptor for MedmojiConfigItem<A>);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v21);
      sub_1BC0FC574((uint64_t)v7, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))sub_1BC0FBE74);
      *(_QWORD *)(v9 + 16) = v14 + 1;
      sub_1BC0F2730(&v21, v9 + 40 * v14 + 32);
      sub_1BC0E8594((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1BC0FBE74);
      v11 += v12;
      --v8;
    }
    while (v8);
  }
  return v9;
}

uint64_t sub_1BC2758C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char v14;
  char *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t *boxed_opaque_existential_1;
  _QWORD v20[2];
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v25 = a2;
  sub_1BC0FBE74(0);
  v5 = v4;
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = MEMORY[0x1E0DEE9D8];
  if (v8)
  {
    v20[1] = v2;
    v29 = MEMORY[0x1E0DEE9D8];
    sub_1BC125B04(0, v8, 0);
    v9 = v29;
    v24 = sub_1BC2B32B4();
    v10 = *(_QWORD *)(v24 - 8);
    v11 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v12 = sub_1BC0E1D38(0, (unint64_t *)&qword_1EF3FBD20);
    v22 = *(_QWORD *)(v10 + 72);
    v23 = v12;
    v21 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    do
    {
      v21(v7, v11, v24);
      v13 = (void *)sub_1BC2B32A8();
      v14 = sub_1BC2B4D84();

      v7[*(int *)(v5 + 36)] = v14 & 1;
      v15 = &v7[*(int *)(v5 + 40)];
      *(_QWORD *)v15 = 0x756F72676B636162;
      *((_QWORD *)v15 + 1) = 0xEF726F6C6F43646ELL;
      v29 = v9;
      v17 = *(_QWORD *)(v9 + 16);
      v16 = *(_QWORD *)(v9 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1BC125B04(v16 > 1, v17 + 1, 1);
        v9 = v29;
      }
      v27 = v5;
      v28 = sub_1BC0E519C(&qword_1EF3F9138, (uint64_t (*)(uint64_t))sub_1BC0FBE74, (uint64_t)&protocol conformance descriptor for MedmojiConfigItem<A>);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v26);
      sub_1BC0FC574((uint64_t)v7, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))sub_1BC0FBE74);
      *(_QWORD *)(v9 + 16) = v17 + 1;
      sub_1BC0F2730(&v26, v9 + 40 * v17 + 32);
      sub_1BC0E8594((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1BC0FBE74);
      v11 += v22;
      --v8;
    }
    while (v8);
  }
  return v9;
}

void sub_1BC275AE8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1BC27389C(a1, a2);
}

void sub_1BC275AF0()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EF4012A8)
  {
    sub_1BC275BC0(255);
    sub_1BC1665C0();
    v0 = MEMORY[0x1E0C95FB8];
    sub_1BC0E519C(&qword_1EF4012B0, (uint64_t (*)(uint64_t))sub_1BC275BC0, MEMORY[0x1E0C95FB8]);
    sub_1BC0E519C(&qword_1EF4012B8, (uint64_t (*)(uint64_t))sub_1BC1665C0, v0);
    v1 = sub_1BC2B3D88();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EF4012A8);
  }
}

void sub_1BC275BC0(uint64_t a1)
{
  sub_1BC13BE80(a1, &qword_1EF3FAA38, (void (*)(uint64_t))MEMORY[0x1E0D2C6F0]);
}

void sub_1BC275BD4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF4012C0)
  {
    sub_1BC275AF0();
    sub_1BC0E1D38(255, (unint64_t *)&qword_1EDA0FFF0);
    sub_1BC0E519C(&qword_1EF4012C8, (uint64_t (*)(uint64_t))sub_1BC275AF0, MEMORY[0x1E0C956D8]);
    sub_1BC1019D8();
    v0 = sub_1BC2B3E60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF4012C0);
  }
}

uint64_t sub_1BC275C88()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC275CAC()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC275CD8(uint64_t a1, void *a2, void *a3, void *a4)
{
  return sub_1BC272D38(a1, a2, a3, a4);
}

uint64_t sub_1BC275CE4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC275D08(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, _QWORD, _QWORD, _QWORD);
  int *v4;

  v3 = *(uint64_t (**)(uint64_t, _QWORD, _QWORD, _QWORD))(v1 + 16);
  sub_1BC275D58();
  return v3(a1, *(_QWORD *)(a1 + v4[12]), *(_QWORD *)(a1 + v4[16]), *(_QWORD *)(a1 + v4[20]));
}

void sub_1BC275D58()
{
  unint64_t TupleTypeMetadata;
  uint64_t v1;

  if (!qword_1EF4012D8)
  {
    sub_1BC2B3350();
    sub_1BC0E1D38(255, (unint64_t *)&qword_1EDA0FDE0);
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1)
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1EF4012D8);
  }
}

uint64_t sub_1BC275DE4()
{
  return swift_deallocObject();
}

uint64_t sub_1BC275DF4(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_1BC2723E8(a1, a2, *(_BYTE *)(v2 + 16));
}

uint64_t sub_1BC275DFC()
{
  uint64_t v0;
  uint64_t ObjectType;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  int v14;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[5];

  ObjectType = swift_getObjectType();
  v2 = sub_1BC2B39E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E1C64(0, qword_1EF401318, (void (*)(uint64_t))type metadata accessor for DayPickerItem);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v22 - v7;
  v9 = type metadata accessor for DayPickerItem();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI27DayPickerCollectionViewCell_item;
  swift_beginAccess();
  sub_1BC0E1CB0(v13, (uint64_t)v24, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
  if (v24[3])
  {
    sub_1BC0E1B94();
    v14 = swift_dynamicCast();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, v14 ^ 1u, 1, v9);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
    {
      sub_1BC276E48((uint64_t)v8, (uint64_t)v12);
      sub_1BC2765E8((uint64_t)v12);
      return sub_1BC276E8C((uint64_t)v12);
    }
  }
  else
  {
    sub_1BC0E1CFC((uint64_t)v24, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
  }
  sub_1BC0E1CFC((uint64_t)v8, qword_1EF401318, (void (*)(uint64_t))type metadata accessor for DayPickerItem);
  sub_1BC2B39A4();
  v16 = sub_1BC2B39D4();
  v17 = sub_1BC2B48C8();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    v19 = swift_slowAlloc();
    v23 = v19;
    *(_DWORD *)v18 = 136446210;
    v24[0] = ObjectType;
    swift_getMetatypeMetadata();
    v20 = sub_1BC2B4478();
    v24[0] = sub_1BC12540C(v20, v21, &v23);
    sub_1BC2B4FD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC0DC000, v16, v17, "[%{public}s]: Unexpected view model.", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v19, -1, -1);
    MEMORY[0x1BCCEF3A0](v18, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_1BC276118()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  id v22;
  _BYTE v23[24];
  _BYTE v24[24];
  uint64_t v25;

  sub_1BC0E1C64(0, qword_1EF401318, (void (*)(uint64_t))type metadata accessor for DayPickerItem);
  MEMORY[0x1E0C80A78](v1);
  v3 = &v23[-v2];
  sub_1BC0E1C64(0, &qword_1EDA0FAF0, (void (*)(uint64_t))MEMORY[0x1E0DC2130]);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v5);
  v9 = &v23[-v8];
  v10 = sub_1BC2B3B48();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = &v23[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = (uint64_t)v0 + OBJC_IVAR____TtC19HealthMedicationsUI27DayPickerCollectionViewCell_item;
  swift_beginAccess();
  sub_1BC0E1CB0(v14, (uint64_t)v24, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
  if (!v25)
  {
    sub_1BC0E1CFC((uint64_t)v24, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
    v18 = type metadata accessor for DayPickerItem();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v3, 1, 1, v18);
    goto LABEL_6;
  }
  sub_1BC0E1B94();
  v15 = type metadata accessor for DayPickerItem();
  v16 = swift_dynamicCast();
  v17 = *(_QWORD *)(v15 - 8);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v3, v16 ^ 1u, 1, v15);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v17 + 48))(v3, 1, v15) == 1)
  {
LABEL_6:
    sub_1BC0E1CFC((uint64_t)v3, qword_1EF401318, (void (*)(uint64_t))type metadata accessor for DayPickerItem);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
    goto LABEL_7;
  }
  sub_1BC0E1CB0((uint64_t)&v3[*(int *)(v15 + 28)], (uint64_t)v9, &qword_1EDA0FAF0, (void (*)(uint64_t))MEMORY[0x1E0DC2130]);
  sub_1BC276E8C((uint64_t)v3);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
LABEL_7:
    sub_1BC0E1CFC((uint64_t)v9, &qword_1EDA0FAF0, (void (*)(uint64_t))MEMORY[0x1E0DC2130]);
    v19 = objc_msgSend(v0, sel_contentView);
    v20 = objc_msgSend((id)objc_opt_self(), sel_systemBackgroundColor);
    objc_msgSend(v19, sel_setBackgroundColor_, v20);

    goto LABEL_8;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 32))(v13, v9, v10);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 16))(v7, v13, v10);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
  MEMORY[0x1BCCEE23C](v7);
  (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v13, v10);
LABEL_8:
  v21 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v21, sel_setPreservesSuperviewLayoutMargins_, 0);

  v22 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v22, sel_setLayoutMargins_, *MEMORY[0x1E0DC49E8], *(double *)(MEMORY[0x1E0DC49E8] + 8), *(double *)(MEMORY[0x1E0DC49E8] + 16), *(double *)(MEMORY[0x1E0DC49E8] + 24));

}

void sub_1BC2764C0()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;

  v1 = *(void **)&v0[OBJC_IVAR____TtC19HealthMedicationsUI27DayPickerCollectionViewCell_dayPicker];
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v0, sel_contentView);
    v4 = objc_msgSend(v3, sel_layoutMarginsGuide);

    UIView.alignConstraints(to:)((UILayoutGuide)v4);
    sub_1BC2B4460();
    swift_bridgeObjectRetain();
    sub_1BC2B44FC();
    v5 = v2;
    swift_bridgeObjectRelease();
    v6 = (id)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_setAccessibilityIdentifier_, v6);

  }
}

void sub_1BC2765E8(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  objc_class *v13;
  char *v14;
  id v15;
  void (*v16)(char *, uint64_t);
  id v17;
  void *v18;
  id v19;
  objc_super v20;

  v2 = v1;
  v4 = sub_1BC2B38E4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v20 - v9;
  v11 = type metadata accessor for DayPickerItem();
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v12(v10, a1 + *(int *)(v11 + 20), v4);
  v12(v8, a1 + *(int *)(v11 + 24), v4);
  v13 = (objc_class *)type metadata accessor for DayPicker();
  v14 = (char *)objc_allocWithZone(v13);
  *(_QWORD *)&v14[OBJC_IVAR____TtC19HealthMedicationsUI9DayPicker_dayViews] = MEMORY[0x1E0DEE9D8];
  v12(&v14[OBJC_IVAR____TtC19HealthMedicationsUI9DayPicker_selectedDays], (uint64_t)v10, v4);
  v12(&v14[OBJC_IVAR____TtC19HealthMedicationsUI9DayPicker_disabledDays], (uint64_t)v8, v4);
  v20.receiver = v14;
  v20.super_class = v13;
  v15 = objc_msgSendSuper2(&v20, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_1BC1462C0();
  sub_1BC1467D0();
  objc_msgSend(v15, sel_setLayoutMargins_, 5.0, 10.0, 5.0, 10.0);
  v16 = *(void (**)(char *, uint64_t))(v5 + 8);
  v16(v8, v4);
  v16(v10, v4);
  objc_msgSend(v15, sel_addTarget_action_forControlEvents_, v2, sel_selectedDaysDidChange_, 4096);
  v17 = objc_msgSend(v2, sel_contentView);
  objc_msgSend(v17, sel_addSubview_, v15);

  v18 = *(void **)&v2[OBJC_IVAR____TtC19HealthMedicationsUI27DayPickerCollectionViewCell_dayPicker];
  *(_QWORD *)&v2[OBJC_IVAR____TtC19HealthMedicationsUI27DayPickerCollectionViewCell_dayPicker] = v15;
  v19 = v15;
  if (v18)
  {
    objc_msgSend(v18, sel_removeFromSuperview);

  }
  sub_1BC276118();
  sub_1BC2764C0();

}

uint64_t sub_1BC276818(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  int v15;
  void (*v16)(_BYTE *);
  uint64_t v17;
  _BYTE v19[24];
  _BYTE v20[24];
  uint64_t v21;

  v3 = sub_1BC2B38E4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BC0E1C64(0, qword_1EF401318, (void (*)(uint64_t))type metadata accessor for DayPickerItem);
  MEMORY[0x1E0C80A78](v7);
  v9 = &v19[-v8];
  v10 = type metadata accessor for DayPickerItem();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = &v19[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI27DayPickerCollectionViewCell_item;
  swift_beginAccess();
  sub_1BC0E1CB0(v14, (uint64_t)v20, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
  if (v21)
  {
    sub_1BC0E1B94();
    v15 = swift_dynamicCast();
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, v15 ^ 1u, 1, v10);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
    {
      sub_1BC276E48((uint64_t)v9, (uint64_t)v13);
      v16 = *(void (**)(_BYTE *))&v13[*(int *)(v10 + 32)];
      v17 = a1 + OBJC_IVAR____TtC19HealthMedicationsUI9DayPicker_selectedDays;
      swift_beginAccess();
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 16))(v6, v17, v3);
      swift_retain();
      v16(v6);
      swift_release();
      (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
      return sub_1BC276E8C((uint64_t)v13);
    }
  }
  else
  {
    sub_1BC0E1CFC((uint64_t)v20, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
  }
  return sub_1BC0E1CFC((uint64_t)v9, qword_1EF401318, (void (*)(uint64_t))type metadata accessor for DayPickerItem);
}

id sub_1BC276BBC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DayPickerCollectionViewCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for DayPickerCollectionViewCell()
{
  return objc_opt_self();
}

uint64_t sub_1BC276C54@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI27DayPickerCollectionViewCell_item;
  swift_beginAccess();
  return sub_1BC0E1CB0(v3, a1, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
}

uint64_t sub_1BC276CB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI27DayPickerCollectionViewCell_item;
  swift_beginAccess();
  sub_1BC0F3E44(a1, v3);
  swift_endAccess();
  sub_1BC275DFC();
  return sub_1BC0E1CFC(a1, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
}

uint64_t (*sub_1BC276D30(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC276D78;
}

uint64_t sub_1BC276D78(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_1BC275DFC();
  return result;
}

uint64_t sub_1BC276DA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1BCCEF2BC](&unk_1BC2C532C, a3);
  return sub_1BC2B2B34();
}

uint64_t type metadata accessor for DayPickerItem()
{
  uint64_t result;

  result = qword_1EF401378;
  if (!qword_1EF401378)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC276E48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DayPickerItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC276E8C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DayPickerItem();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_1BC276EC8(uint64_t *a1, uint64_t *a2, int *a3)
{
  char *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  _QWORD *v23;
  uint64_t v24;
  char *v25;
  _QWORD *v26;
  uint64_t v27;

  v4 = (char *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = (char *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1BC2B38E4();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v12(&v4[a3[6]], (char *)a2 + a3[6], v11);
    v13 = a3[7];
    v14 = &v4[v13];
    v15 = (char *)a2 + v13;
    v16 = sub_1BC2B3B48();
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      sub_1BC0E1C64(0, &qword_1EDA0FAF0, (void (*)(uint64_t))MEMORY[0x1E0DC2130]);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    v20 = a3[8];
    v21 = a3[9];
    v22 = &v4[v20];
    v23 = (uint64_t *)((char *)a2 + v20);
    v24 = v23[1];
    *(_QWORD *)v22 = *v23;
    *((_QWORD *)v22 + 1) = v24;
    v25 = &v4[v21];
    v26 = (uint64_t *)((char *)a2 + v21);
    v27 = v26[1];
    *(_QWORD *)v25 = *v26;
    *((_QWORD *)v25 + 1) = v27;
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1BC277048(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = sub_1BC2B38E4();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(a1 + a2[6], v5);
  v7 = a1 + a2[7];
  v8 = sub_1BC2B3B48();
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  swift_release();
  return swift_bridgeObjectRelease();
}

char *sub_1BC277114(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  v7 = a3[5];
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_1BC2B38E4();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v11(&a1[a3[6]], &a2[a3[6]], v10);
  v12 = a3[7];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_1BC2B3B48();
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    sub_1BC0E1C64(0, &qword_1EDA0FAF0, (void (*)(uint64_t))MEMORY[0x1E0DC2130]);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  v18 = a3[8];
  v19 = a3[9];
  v20 = &a1[v18];
  v21 = &a2[v18];
  v22 = *((_QWORD *)v21 + 1);
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *((_QWORD *)v20 + 1) = v22;
  v23 = &a1[v19];
  v24 = &a2[v19];
  v25 = *((_QWORD *)v24 + 1);
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *((_QWORD *)v23 + 1) = v25;
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_1BC277268(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1BC2B38E4();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  v11 = a3[7];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = sub_1BC2B3B48();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  LODWORD(v10) = v16(v12, 1, v14);
  v17 = v16(v13, 1, v14);
  if (!(_DWORD)v10)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 24))(v12, v13, v14);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    sub_1BC0E1C64(0, &qword_1EDA0FAF0, (void (*)(uint64_t))MEMORY[0x1E0DC2130]);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
LABEL_7:
  v19 = a3[8];
  v20 = &a1[v19];
  v21 = &a2[v19];
  v22 = *((_QWORD *)v21 + 1);
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *((_QWORD *)v20 + 1) = v22;
  swift_retain();
  swift_release();
  v23 = a3[9];
  v24 = &a1[v23];
  v25 = &a2[v23];
  *(_QWORD *)v24 = *(_QWORD *)v25;
  *((_QWORD *)v24 + 1) = *((_QWORD *)v25 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_1BC277438(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1BC2B38E4();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  v11 = a3[7];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = sub_1BC2B3B48();
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    sub_1BC0E1C64(0, &qword_1EDA0FAF0, (void (*)(uint64_t))MEMORY[0x1E0DC2130]);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v17 = a3[9];
  *(_OWORD *)&a1[a3[8]] = *(_OWORD *)&a2[a3[8]];
  *(_OWORD *)&a1[v17] = *(_OWORD *)&a2[v17];
  return a1;
}

char *sub_1BC277568(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_1BC2B38E4();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11(&a1[a3[6]], &a2[a3[6]], v10);
  v12 = a3[7];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_1BC2B3B48();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  LODWORD(v11) = v17(v13, 1, v15);
  v18 = v17(v14, 1, v15);
  if (!(_DWORD)v11)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v13, v14, v15);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    sub_1BC0E1C64(0, &qword_1EDA0FAF0, (void (*)(uint64_t))MEMORY[0x1E0DC2130]);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_7:
  *(_OWORD *)&a1[a3[8]] = *(_OWORD *)&a2[a3[8]];
  swift_release();
  v20 = a3[9];
  v21 = &a1[v20];
  v22 = (uint64_t *)&a2[v20];
  v24 = *v22;
  v23 = v22[1];
  *(_QWORD *)v21 = v24;
  *((_QWORD *)v21 + 1) = v23;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BC27770C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC277718(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1BC2B38E4();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      sub_1BC0E1C64(0, &qword_1EDA0FAF0, (void (*)(uint64_t))MEMORY[0x1E0DC2130]);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1BC2777C8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC2777D4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_1BC2B38E4();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      sub_1BC0E1C64(0, &qword_1EDA0FAF0, (void (*)(uint64_t))MEMORY[0x1E0DC2130]);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a4 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_1BC277880()
{
  unint64_t v0;
  unint64_t v1;

  sub_1BC2B38E4();
  if (v0 <= 0x3F)
  {
    sub_1BC0E1C64(319, &qword_1EDA0FAF0, (void (*)(uint64_t))MEMORY[0x1E0DC2130]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

id sub_1BC277AC8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationsHistoryViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for MedicationsHistoryViewController()
{
  return objc_opt_self();
}

uint64_t sub_1BC277B18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t result;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v11 = v10;
  v43 = a8;
  v19 = sub_1BC2B2438();
  v41 = *(_QWORD *)(v19 - 8);
  v42 = v19;
  MEMORY[0x1E0C80A78](v19);
  v39 = (char *)&v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v11 + qword_1EF4013E8) = a1;
  v45 = a2;
  sub_1BC0E79F0(a2, v11 + qword_1EF4013F0);
  v21 = (uint64_t *)(v11 + qword_1EF4013F8);
  v38 = a3;
  *v21 = a3;
  v21[1] = a4;
  v46 = a5;
  sub_1BC0E79F0(a5, v11 + qword_1EF401400);
  *(_QWORD *)(v11 + qword_1EF401408) = a6;
  v22 = (uint64_t *)(v11 + qword_1EF401410);
  v40 = a7;
  *v22 = a7;
  v23 = v43;
  v22[1] = v43;
  sub_1BC0E79F0(a9, v11 + qword_1EF401418);
  *(_QWORD *)(v11 + qword_1EF401420) = a10;
  swift_beginAccess();
  v24 = *(_QWORD *)(a1 + 16);
  v44 = a1;
  if (!(v24 >> 62))
  {
    v25 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
    if (v25)
      goto LABEL_3;
LABEL_8:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  result = sub_1BC2B52D0();
  if (!result)
    goto LABEL_8;
LABEL_3:
  if ((v24 & 0xC000000000000001) != 0)
  {
LABEL_9:
    v27 = (id)MEMORY[0x1BCCEE950](0, v24);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v27 = *(id *)(v24 + 32);
LABEL_6:
    v28 = v27;
    swift_bridgeObjectRelease();
    v37 = a9;
    v29 = sub_1BC278568(v28, v45, v38, a4, v46, a6, v40, v23, a9, a10);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v43 = sub_1BC2787B8(v44);
    sub_1BC11D238();
    sub_1BC2B2BC4();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BC2B92C0;
    sub_1BC1187A4(0, (unint64_t *)&qword_1EDA0FE38, (unint64_t *)&qword_1EDA0F7C0);
    v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = xmmword_1BC2B92D0;
    sub_1BC19F5EC(0);
    *(_QWORD *)(v30 + 56) = v31;
    *(_QWORD *)(v30 + 64) = sub_1BC0E519C(&qword_1EF401488, (uint64_t (*)(uint64_t))sub_1BC19F5EC, (uint64_t)&protocol conformance descriptor for InteractionResultItem<A, B>);
    v40 = v29;
    *(_QWORD *)(v30 + 32) = v29;
    swift_retain();
    v32 = v39;
    sub_1BC2B242C();
    sub_1BC2B23FC();
    v33 = v42;
    v34 = *(void (**)(char *, uint64_t))(v41 + 8);
    v34(v32, v42);
    sub_1BC2B2BAC();
    sub_1BC2B242C();
    sub_1BC2B23FC();
    v34(v32, v33);
    sub_1BC2B2BAC();
    v35 = sub_1BC2B2750();
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_0(v37);
    __swift_destroy_boxed_opaque_existential_0(v46);
    __swift_destroy_boxed_opaque_existential_0(v45);
    return v35;
  }
  __break(1u);
  return result;
}

void InteractionDetailDataSource.__allocating_init(arrangedSections:isHidden:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void InteractionDetailDataSource.init(arrangedSections:isHidden:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC277F9C()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + qword_1EF4013F0);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + qword_1EF401400);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + qword_1EF401418);
  return swift_bridgeObjectRelease();
}

uint64_t InteractionDetailDataSource.deinit()
{
  uint64_t v0;

  v0 = _s19HealthMedicationsUI34InteractionSeperatorLineDataSourceCfd_0();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + qword_1EF4013F0);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + qword_1EF401400);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + qword_1EF401418);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t InteractionDetailDataSource.__deallocating_deinit()
{
  InteractionDetailDataSource.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC2780F8()
{
  MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for InteractionDetailDataSource);
  return sub_1BC2B3074();
}

Swift::Void __swiftcall InteractionDetailDataSource.registerCells(for:)(UICollectionView *a1)
{
  type metadata accessor for InteractionResultDetailCell();
  sub_1BC0E519C((unint64_t *)&qword_1EF3FCE90, (uint64_t (*)(uint64_t))type metadata accessor for InteractionResultDetailCell, (uint64_t)&protocol conformance descriptor for InteractionResultDetailCell);
  sub_1BC2B497C();
  type metadata accessor for InteractionResultDetailEducationCell();
  sub_1BC0E519C(&qword_1EF401428, (uint64_t (*)(uint64_t))type metadata accessor for InteractionResultDetailEducationCell, (uint64_t)&protocol conformance descriptor for InteractionResultDetailEducationCell);
  sub_1BC2B497C();
  sub_1BC2B2EB8();
  sub_1BC2B4988();
}

uint64_t sub_1BC2781E8()
{
  type metadata accessor for InteractionResultDetailCell();
  sub_1BC0E519C((unint64_t *)&qword_1EF3FCE90, (uint64_t (*)(uint64_t))type metadata accessor for InteractionResultDetailCell, (uint64_t)&protocol conformance descriptor for InteractionResultDetailCell);
  sub_1BC2B497C();
  type metadata accessor for InteractionResultDetailEducationCell();
  sub_1BC0E519C(&qword_1EF401428, (uint64_t (*)(uint64_t))type metadata accessor for InteractionResultDetailEducationCell, (uint64_t)&protocol conformance descriptor for InteractionResultDetailEducationCell);
  sub_1BC2B497C();
  sub_1BC2B2EB8();
  return sub_1BC2B4988();
}

uint64_t InteractionDetailDataSource.supplementaryItem(ofKind:at:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t);
  _QWORD v22[2];

  v6 = sub_1BC2B2438();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_1BC2B4460() == a1 && v10 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = sub_1BC2B53CC();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
    {
      v13 = sub_1BC2B296C();
      v14 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2AB30];
      a3[3] = v13;
      a3[4] = sub_1BC0E519C(&qword_1EF3F8B68, v14, MEMORY[0x1E0D2AB20]);
      __swift_allocate_boxed_opaque_existential_1(a3);
      return sub_1BC2B2960();
    }
  }
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v16 = (void *)qword_1EDA0FEF8;
  sub_1BC1187A4(0, qword_1EDA0ED40, (unint64_t *)&qword_1EDA0FED0);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1BC2B92D0;
  v18 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v17 + 56) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v17 + 64) = v18;
  *(_QWORD *)(v17 + 32) = 1;
  v19 = v16;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  sub_1BC2B443C();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v22[0] = 0x74497265746F6F46;
  v22[1] = 0xEB000000005F6D65;
  sub_1BC2B242C();
  sub_1BC2B23FC();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v20 = sub_1BC2B2EDC();
  v21 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B6C0];
  a3[3] = v20;
  a3[4] = sub_1BC0E519C(&qword_1EF3F8B78, v21, MEMORY[0x1E0D2B6A8]);
  __swift_allocate_boxed_opaque_existential_1(a3);
  return sub_1BC2B2ED0();
}

uint64_t sub_1BC278554@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return InteractionDetailDataSource.supplementaryItem(ofKind:at:)(a1, a2, a3);
}

uint64_t sub_1BC278568(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  __int128 v29;
  ValueMetadata *v30;
  _UNKNOWN **v31;
  id v32;
  _QWORD v33[7];
  _QWORD v34[8];
  _QWORD v35[11];

  v17 = objc_msgSend(a1, sel_educationContent);
  v18 = v17;
  if (!v17)
    goto LABEL_5;
  v19 = objc_msgSend(v17, sel_primarySection);

  if (!v19)
  {
    v18 = 0;
    goto LABEL_7;
  }
  v18 = objc_msgSend(v19, sel_attributions);

  if (v18)
  {
    sub_1BC2B458C();

    v19 = (id)sub_1BC2B45BC();
    v18 = v20;
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_5:
    v19 = 0;
  }
LABEL_7:
  sub_1BC0E79F0(a2, (uint64_t)v33);
  sub_1BC0E79F0(a5, (uint64_t)v34);
  sub_1BC0E79F0(a9, (uint64_t)v35);
  swift_bridgeObjectRetain();
  v21 = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v22 = sub_1BC196180();
  v32 = v21;
  v33[5] = a3;
  v33[6] = a4;
  v34[5] = a6;
  v34[6] = a7;
  v34[7] = a8;
  v35[5] = a10;
  v35[6] = v22;
  v35[7] = v23;
  v35[8] = v19;
  v35[9] = v18;
  v30 = &type metadata for InteractionResultDetailDataProvider;
  v31 = &protocol witness table for InteractionResultDetailDataProvider;
  *(_QWORD *)&v29 = swift_allocObject();
  sub_1BC0FF670((uint64_t)&v32, v29 + 16);
  sub_1BC19F5EC(0);
  v24 = swift_allocObject();
  sub_1BC2B242C();
  v25 = (uint64_t *)(v24 + qword_1EF402910);
  type metadata accessor for InteractionResultDetailCell();
  sub_1BC0E519C((unint64_t *)&qword_1EF3FCE90, (uint64_t (*)(uint64_t))type metadata accessor for InteractionResultDetailCell, (uint64_t)&protocol conformance descriptor for InteractionResultDetailCell);
  *v25 = sub_1BC2B2930();
  v25[1] = v26;
  sub_1BC0F2730(&v29, v24 + *(_QWORD *)(*(_QWORD *)v24 + 120));
  sub_1BC1E94F0(&v32);
  return v24;
}

uint64_t sub_1BC2787B8(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  swift_beginAccess();
  v2 = *(_QWORD *)(a1 + 16);
  if (!(v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRetain();
  v3 = sub_1BC2B52D0();
  if (!v3)
    goto LABEL_13;
LABEL_3:
  v28 = MEMORY[0x1E0DEE9D8];
  result = sub_1BC125B04(0, v3 & ~(v3 >> 63), 0);
  if ((v3 & 0x8000000000000000) == 0)
  {
    v5 = v28;
    type metadata accessor for InteractionResultDetailEducationCell();
    v6 = 0;
    v24 = v2 & 0xC000000000000001;
    v7 = v2;
    do
    {
      if (v24)
        v8 = (id)MEMORY[0x1BCCEE950](v6, v2);
      else
        v8 = *(id *)(v2 + 8 * v6 + 32);
      v9 = v8;
      sub_1BC278C9C(0);
      v11 = v10;
      v12 = swift_allocObject();
      v13 = v9;
      sub_1BC2B242C();
      v14 = (uint64_t *)(v12 + qword_1EF402910);
      sub_1BC0E519C(&qword_1EF401428, (uint64_t (*)(uint64_t))type metadata accessor for InteractionResultDetailEducationCell, (uint64_t)&protocol conformance descriptor for InteractionResultDetailEducationCell);
      *v14 = sub_1BC2B2930();
      v14[1] = v15;
      *(_QWORD *)(v12 + *(_QWORD *)(*(_QWORD *)v12 + 120)) = v13;
      v26 = v11;
      v27 = sub_1BC0E519C(&qword_1EF401498, (uint64_t (*)(uint64_t))sub_1BC278C9C, (uint64_t)&protocol conformance descriptor for InteractionResultItem<A, B>);

      v25[0] = v12;
      v28 = v5;
      v17 = *(_QWORD *)(v5 + 16);
      v16 = *(_QWORD *)(v5 + 24);
      if (v17 >= v16 >> 1)
        sub_1BC125B04(v16 > 1, v17 + 1, 1);
      ++v6;
      v18 = v26;
      v19 = v27;
      v20 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v25, v26);
      MEMORY[0x1E0C80A78](v20);
      v22 = (char *)&v25[-1] - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v23 + 16))(v22);
      sub_1BC2241D0(v17, (uint64_t)v22, &v28, v18, v19);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v25);
      v5 = v28;
      v2 = v7;
    }
    while (v3 != v6);
    swift_bridgeObjectRelease();
    return v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC278A58(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  void (*v9)(_BYTE *, uint64_t);
  uint64_t v10;
  void (*v11)(_BYTE *, _QWORD);
  _QWORD *v12;
  _BYTE v14[32];

  v2 = sub_1BC2B2D20();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v14[-v7];
  sub_1BC2B2CC0();
  if (a1)
  {
    sub_1BC2B2C90();
    v9 = *(void (**)(_BYTE *, uint64_t))(v3 + 8);
    v9(v6, v2);
    sub_1BC2B2CD8();
    v10 = sub_1BC2B2D14();
  }
  else
  {
    v11 = (void (*)(_BYTE *, _QWORD))sub_1BC2B2CF0();
    *v12 = 0x4034000000000000;
    v11(v14, 0);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v3 + 16))(v6, v8, v2);
    v10 = sub_1BC2B2D14();
    v9 = *(void (**)(_BYTE *, uint64_t))(v3 + 8);
    v9(v6, v2);
  }
  v9(v8, v2);
  return v10;
}

uint64_t sub_1BC278B98()
{
  return sub_1BC0E519C(&qword_1EF401430, (uint64_t (*)(uint64_t))type metadata accessor for InteractionDetailDataSource, (uint64_t)&protocol conformance descriptor for InteractionDetailDataSource);
}

uint64_t type metadata accessor for InteractionDetailDataSource()
{
  uint64_t result;

  result = qword_1EF401438;
  if (!qword_1EF401438)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC278C00()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for InteractionDetailDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InteractionDetailDataSource.layout(for:environment:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for InteractionDetailDataSource + *v0 + 72))();
}

uint64_t sub_1BC278C94()
{
  return type metadata accessor for InteractionDetailDataSource();
}

void sub_1BC278C9C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1EF401490)
  {
    v2 = type metadata accessor for InteractionResultDetailEducationCell();
    v3 = sub_1BC278D30();
    v4 = sub_1BC0E519C(&qword_1EF401428, (uint64_t (*)(uint64_t))type metadata accessor for InteractionResultDetailEducationCell, (uint64_t)&protocol conformance descriptor for InteractionResultDetailEducationCell);
    v5 = type metadata accessor for InteractionResultItem(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1EF401490);
  }
}

unint64_t sub_1BC278D30()
{
  unint64_t result;

  result = qword_1EDA0FD68;
  if (!qword_1EDA0FD68)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDA0FD68);
  }
  return result;
}

uint64_t sub_1BC278D6C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 24);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 144);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

id MedicationsDayHistoryDataSource.healthStore.getter()
{
  uint64_t v0;

  return *(id *)(v0 + qword_1EF4014A0);
}

uint64_t MedicationsDayHistoryDataSource.__allocating_init(doseEventPublisher:healthStore:)(uint64_t a1, void *a2)
{
  swift_allocObject();
  return MedicationsDayHistoryDataSource.init(doseEventPublisher:healthStore:)(a1, a2);
}

uint64_t MedicationsDayHistoryDataSource.init(doseEventPublisher:healthStore:)(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  id v21;
  uint64_t v22;
  id v23;
  _QWORD v24[2];

  v3 = v2;
  v20 = a1;
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0FCC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v20 - v6;
  sub_1BC279174();
  v9 = v8;
  v22 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BC2B2438();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v3 + qword_1EF4014C0) = 0;
  *(_QWORD *)(v3 + qword_1EF4014A0) = a2;
  v24[0] = 0;
  v24[1] = 0xE000000000000000;
  v21 = a2;
  sub_1BC2B51BC();
  swift_bridgeObjectRelease();
  strcpy((char *)v24, "MutableArray<");
  HIWORD(v24[1]) = -4864;
  sub_1BC2B242C();
  sub_1BC2B23FC();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  sub_1BC2B44FC();
  v16 = sub_1BC2B2C00();
  v24[0] = v20;
  sub_1BC16C140();
  swift_retain();
  v23 = (id)sub_1BC2B4A0C();
  v17 = sub_1BC2B49C4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v7, 1, 1, v17);
  sub_1BC27923C();
  sub_1BC0E519C(&qword_1EF4014B8, (uint64_t (*)(uint64_t))sub_1BC27923C, MEMORY[0x1E0C95D90]);
  sub_1BC0E519C((unint64_t *)&qword_1EDA0FCC8, (uint64_t (*)(uint64_t))sub_1BC16C140, MEMORY[0x1E0DEF7F8]);
  sub_1BC2B4064();
  sub_1BC101BB8((uint64_t)v7);

  swift_allocObject();
  swift_weakInit();
  sub_1BC0E519C(&qword_1EF4014C8, (uint64_t (*)(uint64_t))sub_1BC279174, MEMORY[0x1E0C95CB8]);
  v18 = sub_1BC2B40A0();
  swift_release();

  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v11, v9);
  *(_QWORD *)(v16 + qword_1EF4014C0) = v18;
  swift_release();
  return v16;
}

void sub_1BC279174()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF4014A8)
  {
    sub_1BC27923C();
    sub_1BC16C140();
    sub_1BC0E519C(&qword_1EF4014B8, (uint64_t (*)(uint64_t))sub_1BC27923C, MEMORY[0x1E0C95D90]);
    sub_1BC0E519C((unint64_t *)&qword_1EDA0FCC8, (uint64_t (*)(uint64_t))sub_1BC16C140, MEMORY[0x1E0DEF7F8]);
    v0 = sub_1BC2B3E60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF4014A8);
  }
}

void sub_1BC27923C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF4014B0)
  {
    sub_1BC0E7998(255, &qword_1EF3FC8F0, (uint64_t (*)(uint64_t))sub_1BC268430, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1BC2B3E78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF4014B0);
  }
}

uint64_t sub_1BC2792B8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC2792DC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t result;

  v1 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1BC2679B4(v1);
    sub_1BC2B2C24();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BC279354(uint64_t *a1)
{
  return sub_1BC2792DC(a1);
}

uint64_t sub_1BC27935C()
{
  type metadata accessor for MedicationsDayHistoryCell();
  sub_1BC0E519C(&qword_1EF3FFC80, (uint64_t (*)(uint64_t))type metadata accessor for MedicationsDayHistoryCell, (uint64_t)&unk_1BC2C6AEC);
  sub_1BC2B497C();
  type metadata accessor for MedicationsDayHistoryEmptyCell();
  sub_1BC0E519C(&qword_1EF4014D0, (uint64_t (*)(uint64_t))type metadata accessor for MedicationsDayHistoryEmptyCell, (uint64_t)&unk_1BC2C0478);
  sub_1BC2B497C();
  type metadata accessor for MedicationsDayHistoryHeaderCell();
  sub_1BC0E519C(&qword_1EF3F81B0, (uint64_t (*)(uint64_t))type metadata accessor for MedicationsDayHistoryHeaderCell, (uint64_t)&unk_1BC2B89C0);
  return sub_1BC2B497C();
}

void MedicationsDayHistoryDataSource.__allocating_init(arrangedSections:identifier:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void MedicationsDayHistoryDataSource.init(arrangedSections:identifier:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1BC279478()
{
  uint64_t v0;

  swift_release();

}

uint64_t MedicationsDayHistoryDataSource.deinit()
{
  uint64_t v0;

  v0 = sub_1BC2B2C60();
  swift_release();

  return v0;
}

uint64_t MedicationsDayHistoryDataSource.__deallocating_deinit()
{
  uint64_t v0;

  v0 = sub_1BC2B2C60();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1BC279534()
{
  return sub_1BC0E519C(&qword_1EF4014D8, (uint64_t (*)(uint64_t))type metadata accessor for MedicationsDayHistoryDataSource, (uint64_t)&protocol conformance descriptor for MedicationsDayHistoryDataSource);
}

uint64_t type metadata accessor for MedicationsDayHistoryDataSource()
{
  uint64_t result;

  result = qword_1EF4014E0;
  if (!qword_1EF4014E0)
    return swift_getSingletonMetadata();
  return result;
}

id sub_1BC27959C()
{
  uint64_t v0;

  return *(id *)(v0 + qword_1EF4014A0);
}

uint64_t sub_1BC2795AC()
{
  MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for MedicationsDayHistoryDataSource);
  return sub_1BC2B3074();
}

uint64_t sub_1BC2795F8()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for MedicationsDayHistoryDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicationsDayHistoryDataSource.context.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for MedicationsDayHistoryDataSource + *v0 + 40))();
}

uint64_t dispatch thunk of MedicationsDayHistoryDataSource.__allocating_init(doseEventPublisher:healthStore:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(class metadata base offset for MedicationsDayHistoryDataSource + v0 + 48))();
}

uint64_t dispatch thunk of MedicationsDayHistoryDataSource.registerCells(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for MedicationsDayHistoryDataSource + *v0 + 56))();
}

uint64_t dispatch thunk of MedicationsDayHistoryDataSource.layout(for:environment:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for MedicationsDayHistoryDataSource + *v0 + 64))();
}

uint64_t sub_1BC2796B4()
{
  return type metadata accessor for MedicationsDayHistoryDataSource();
}

double sub_1BC2796BC()
{
  double result;

  result = 13.0;
  xmmword_1EF402C80 = xmmword_1BC2C55F0;
  *(_OWORD *)&qword_1EF402C90 = xmmword_1BC2C5600;
  return result;
}

void sub_1BC2796DC()
{
  qword_1EF402CA0 = 0x4020000000000000;
}

void sub_1BC2796EC()
{
  qword_1EF402CA8 = 0x4032000000000000;
}

uint64_t sub_1BC2796FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI26InteractionSummaryItemCell_item;
  swift_beginAccess();
  return sub_1BC0E1CB0(v3, a1, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
}

uint64_t sub_1BC27975C(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  void *v5;

  v2 = v1;
  v4 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI26InteractionSummaryItemCell_item;
  swift_beginAccess();
  sub_1BC0F3E44(a1, v4);
  swift_endAccess();
  sub_1BC27A860();
  sub_1BC2B4460();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v5 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setAccessibilityIdentifier_, v5);

  return sub_1BC0E1CFC(a1, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
}

void (*sub_1BC279858(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC2798A0;
}

void sub_1BC2798A0(uint64_t a1, char a2)
{
  void *v4;
  id v5;

  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    v4 = *(void **)(a1 + 24);
    sub_1BC27A860();
    sub_1BC2B4460();
    swift_bridgeObjectRetain();
    sub_1BC2B44FC();
    swift_bridgeObjectRelease();
    v5 = (id)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    objc_msgSend(v4, sel_setAccessibilityIdentifier_, v5);

  }
}

id sub_1BC279970()
{
  id v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  double v5;
  id v6;
  void *v7;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v1 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  v2 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setText_, v2, 0xE000000000000000);

  v3 = objc_msgSend((id)objc_opt_self(), sel_systemCyanColor);
  objc_msgSend(v0, sel_setTextColor_, v3);

  v4 = objc_msgSend((id)objc_opt_self(), sel__preferredFontForTextStyle_variant_, *MEMORY[0x1E0DC4B10], 1024);
  objc_msgSend(v0, sel_setFont_, v4);

  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  objc_msgSend(v0, sel_setLineBreakMode_, 0);
  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  LODWORD(v5) = 1148846080;
  objc_msgSend(v0, sel_setContentHuggingPriority_forAxis_, 1, v5);
  sub_1BC2B4460();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  v6 = v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v7 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setAccessibilityIdentifier_, v7);

  objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return v6;
}

id sub_1BC279C34()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI26InteractionSummaryItemCell____lazy_storage___subtitleView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI26InteractionSummaryItemCell____lazy_storage___subtitleView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI26InteractionSummaryItemCell____lazy_storage___subtitleView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for InteractionSummaryContentView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC279CB4(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  objc_super v15;

  v9 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI26InteractionSummaryItemCell_item];
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_QWORD *)v9 + 4) = 0;
  v10 = OBJC_IVAR____TtC19HealthMedicationsUI26InteractionSummaryItemCell_titleLabel;
  v11 = v4;
  *(_QWORD *)&v4[v10] = sub_1BC279970();
  v12 = OBJC_IVAR____TtC19HealthMedicationsUI26InteractionSummaryItemCell_chevronView;
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDD0);
  *(_QWORD *)&v11[v12] = MEMORY[0x1BCCEE3EC]();
  *(_QWORD *)&v11[OBJC_IVAR____TtC19HealthMedicationsUI26InteractionSummaryItemCell____lazy_storage___subtitleView] = 0;

  v15.receiver = v11;
  v15.super_class = (Class)type metadata accessor for InteractionSummaryItemCell();
  v13 = objc_msgSendSuper2(&v15, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1BC279EFC();

  return v13;
}

id sub_1BC279DC4(void *a1)
{
  char *v1;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  id v7;
  objc_super v9;

  v3 = &v1[OBJC_IVAR____TtC19HealthMedicationsUI26InteractionSummaryItemCell_item];
  *(_OWORD *)v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((_QWORD *)v3 + 4) = 0;
  v4 = OBJC_IVAR____TtC19HealthMedicationsUI26InteractionSummaryItemCell_titleLabel;
  v5 = v1;
  *(_QWORD *)&v1[v4] = sub_1BC279970();
  v6 = OBJC_IVAR____TtC19HealthMedicationsUI26InteractionSummaryItemCell_chevronView;
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDD0);
  *(_QWORD *)&v5[v6] = MEMORY[0x1BCCEE3EC]();
  *(_QWORD *)&v5[OBJC_IVAR____TtC19HealthMedicationsUI26InteractionSummaryItemCell____lazy_storage___subtitleView] = 0;

  v9.receiver = v5;
  v9.super_class = (Class)type metadata accessor for InteractionSummaryItemCell();
  v7 = objc_msgSendSuper2(&v9, sel_initWithCoder_, a1);

  return v7;
}

void sub_1BC279EFC()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  void *v49;
  id v50;

  v1 = objc_msgSend(v0, sel_contentView);
  v2 = *(void **)&v0[OBJC_IVAR____TtC19HealthMedicationsUI26InteractionSummaryItemCell_titleLabel];
  objc_msgSend(v1, sel_addSubview_, v2);

  v3 = objc_msgSend(v0, sel_contentView);
  v4 = *(void **)&v0[OBJC_IVAR____TtC19HealthMedicationsUI26InteractionSummaryItemCell_chevronView];
  objc_msgSend(v3, sel_addSubview_, v4);

  v5 = objc_msgSend(v0, sel_contentView);
  v6 = sub_1BC279C34();
  objc_msgSend(v5, sel_addSubview_, v6);

  v49 = (void *)objc_opt_self();
  sub_1BC0E7940();
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BC2C2BF0;
  v8 = objc_msgSend(v2, sel_leadingAnchor);
  v9 = objc_msgSend(v0, sel_contentView);
  v10 = objc_msgSend(v9, sel_layoutMarginsGuide);

  v11 = objc_msgSend(v10, sel_leadingAnchor);
  v12 = objc_msgSend(v8, sel_constraintEqualToAnchor_, v11);

  *(_QWORD *)(v7 + 32) = v12;
  v13 = objc_msgSend(v2, sel_topAnchor);
  v14 = objc_msgSend(v0, sel_contentView);
  v15 = objc_msgSend(v14, sel_topAnchor);

  if (qword_1EF3F8178 != -1)
    swift_once();
  v16 = objc_msgSend(v13, sel_constraintEqualToAnchor_constant_, v15, *(double *)&xmmword_1EF402C80);

  *(_QWORD *)(v7 + 40) = v16;
  v17 = objc_msgSend(v4, sel_leadingAnchor);
  v18 = objc_msgSend(v2, sel_trailingAnchor);
  if (qword_1EF3F8180 != -1)
    swift_once();
  v19 = objc_msgSend(v17, sel_constraintGreaterThanOrEqualToAnchor_constant_, v18, *(double *)&qword_1EF402CA0);

  *(_QWORD *)(v7 + 48) = v19;
  v20 = objc_msgSend(v4, sel_trailingAnchor);
  v21 = objc_msgSend(v0, sel_contentView);
  v22 = objc_msgSend(v21, sel_layoutMarginsGuide);

  v23 = objc_msgSend(v22, sel_trailingAnchor);
  v24 = objc_msgSend(v20, sel_constraintEqualToAnchor_, v23);

  *(_QWORD *)(v7 + 56) = v24;
  v25 = objc_msgSend(v4, sel_centerYAnchor);
  v26 = objc_msgSend(v2, sel_centerYAnchor);
  v27 = objc_msgSend(v25, sel_constraintEqualToAnchor_, v26);

  *(_QWORD *)(v7 + 64) = v27;
  v28 = sub_1BC279C34();
  v29 = objc_msgSend(v28, sel_leadingAnchor);

  v30 = objc_msgSend(v0, (SEL)&selRef_userInfo);
  v31 = objc_msgSend(v30, (SEL)&selRef_initWithRootViewController_ + 5);

  v32 = objc_msgSend(v31, sel_leadingAnchor);
  v33 = objc_msgSend(v29, sel_constraintEqualToAnchor_, v32);

  *(_QWORD *)(v7 + 72) = v33;
  v34 = sub_1BC279C34();
  v35 = objc_msgSend(v34, sel_topAnchor);

  v36 = objc_msgSend(v2, sel_lastBaselineAnchor);
  if (qword_1EF3F8188 != -1)
    swift_once();
  v37 = objc_msgSend(v35, sel_constraintEqualToAnchor_constant_, v36, *(double *)&qword_1EF402CA8);

  *(_QWORD *)(v7 + 80) = v37;
  v38 = sub_1BC279C34();
  v39 = objc_msgSend(v38, sel_trailingAnchor);

  v40 = objc_msgSend(v0, (SEL)&selRef_userInfo);
  v41 = objc_msgSend(v40, (SEL)&selRef_initWithRootViewController_ + 5);

  v42 = objc_msgSend(v41, sel_trailingAnchor);
  v43 = objc_msgSend(v39, sel_constraintEqualToAnchor_, v42);

  *(_QWORD *)(v7 + 88) = v43;
  v44 = sub_1BC279C34();
  v45 = objc_msgSend(v44, sel_bottomAnchor);

  v46 = objc_msgSend(v0, (SEL)&selRef_userInfo);
  v47 = objc_msgSend(v46, sel_bottomAnchor);

  v48 = objc_msgSend(v45, sel_constraintEqualToAnchor_constant_, v47, -*(double *)&qword_1EF402C90);
  *(_QWORD *)(v7 + 96) = v48;
  sub_1BC2B45A4();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
  v50 = (id)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  objc_msgSend(v49, sel_activateConstraints_, v50);

}

uint64_t sub_1BC27A590()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void *v11;
  objc_class *v12;
  uint64_t v13;
  void (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  char *v18;
  id v19;
  objc_super v20;

  v1 = v0;
  sub_1BC0E1C64(0, &qword_1EDA0FAF0, (void (*)(uint64_t))MEMORY[0x1E0DC2130]);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v3);
  v8 = (char *)&v20 - v7;
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v20 - v9;
  v11 = (void *)sub_1BC2B3AE8();
  v12 = (objc_class *)type metadata accessor for InteractionSummaryItemCell();
  v20.receiver = v1;
  v20.super_class = v12;
  objc_msgSendSuper2(&v20, sel__bridgedUpdateConfigurationUsingState_, v11);

  if (objc_msgSend(v1, sel_isHighlighted))
  {
    MEMORY[0x1BCCEE230]();
    v13 = sub_1BC2B3B48();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v10, 1, v13))
    {
      v14 = (void (*)(uint64_t))MEMORY[0x1E0DC2130];
      sub_1BC0E1CB0((uint64_t)v10, (uint64_t)v8, &qword_1EDA0FAF0, (void (*)(uint64_t))MEMORY[0x1E0DC2130]);
      MEMORY[0x1BCCEE23C](v8);
      v15 = (uint64_t)v10;
      return sub_1BC0E1CFC(v15, &qword_1EDA0FAF0, v14);
    }
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDE0);
    sub_1BC2B4D00();
    sub_1BC2B3B18();
    v18 = v10;
  }
  else
  {
    MEMORY[0x1BCCEE230]();
    v16 = sub_1BC2B3B48();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v5, 1, v16))
    {
      v14 = (void (*)(uint64_t))MEMORY[0x1E0DC2130];
      sub_1BC0E1CB0((uint64_t)v5, (uint64_t)v8, &qword_1EDA0FAF0, (void (*)(uint64_t))MEMORY[0x1E0DC2130]);
      MEMORY[0x1BCCEE23C](v8);
      v15 = (uint64_t)v5;
      return sub_1BC0E1CFC(v15, &qword_1EDA0FAF0, v14);
    }
    v19 = objc_msgSend((id)objc_opt_self(), sel_tertiarySystemBackgroundColor);
    sub_1BC2B3B18();
    v18 = v5;
  }
  return MEMORY[0x1BCCEE23C](v18);
}

void sub_1BC27A860()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[5];

  v1 = sub_1BC2B39E0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t)v0 + OBJC_IVAR____TtC19HealthMedicationsUI26InteractionSummaryItemCell_item;
  swift_beginAccess();
  sub_1BC0E1CB0(v5, (uint64_t)v20, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
  if (v20[3])
  {
    sub_1BC0E1B94();
    type metadata accessor for InteractionSummaryItem();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v6 = v19;
      v7 = sub_1BC279C34();
      sub_1BC27B4A4(v6);
      swift_release();

      return;
    }
  }
  else
  {
    sub_1BC0E1CFC((uint64_t)v20, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
  }
  sub_1BC2B39A4();
  v8 = v0;
  v9 = sub_1BC2B39D4();
  v10 = sub_1BC2B48C8();
  if (os_log_type_enabled(v9, v10))
  {
    v18 = v1;
    v11 = swift_slowAlloc();
    v17 = v2;
    v12 = (uint8_t *)v11;
    v13 = swift_slowAlloc();
    v19 = v13;
    *(_DWORD *)v12 = 136446210;
    v16 = v12 + 4;
    sub_1BC0E1CB0(v5, (uint64_t)v20, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
    sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
    v14 = sub_1BC2B4490();
    v20[0] = sub_1BC12540C(v14, v15, &v19);
    sub_1BC2B4FD0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC0DC000, v9, v10, "Incorrect view model for InteractionSummaryItemCell: %{public}s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v13, -1, -1);
    MEMORY[0x1BCCEF3A0](v12, -1, -1);

    (*(void (**)(char *, uint64_t))(v17 + 8))(v4, v18);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
}

uint64_t type metadata accessor for InteractionSummaryItemCell()
{
  return objc_opt_self();
}

id InteractionSummaryItemCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InteractionSummaryItemCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void (*sub_1BC27ABC8(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1BC279858((uint64_t)v2);
  return sub_1BC0F78F0;
}

uint64_t sub_1BC27AC0C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI26InteractionSummaryItemCell_item;
  swift_beginAccess();
  return sub_1BC0E1CB0(v3, a2, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
}

uint64_t sub_1BC27AC70(uint64_t a1)
{
  _BYTE v2[40];

  sub_1BC0E1CB0(a1, (uint64_t)v2, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
  return sub_1BC27975C((uint64_t)v2);
}

uint64_t method lookup function for InteractionSummaryItemCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InteractionSummaryItemCell.item.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of InteractionSummaryItemCell.item.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of InteractionSummaryItemCell.item.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

id InteractionSummaryContentView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

id sub_1BC27AD68()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v13;
  uint64_t v14;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI29InteractionSummaryContentView____lazy_storage___titleLabel;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI29InteractionSummaryContentView____lazy_storage___titleLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI29InteractionSummaryContentView____lazy_storage___titleLabel);
  }
  else
  {
    v4 = v0;
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v13 = sub_1BC2B4460();
    v14 = v6;
    swift_bridgeObjectRetain();
    sub_1BC2B44FC();
    v7 = v5;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1BC2B44FC();
    swift_bridgeObjectRelease();
    v8 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setAccessibilityIdentifier_, v8, v13, v14);

    objc_msgSend(v7, sel_setNumberOfLines_, 0);
    objc_msgSend(v7, sel_setAdjustsFontForContentSizeCategory_, 1);
    objc_msgSend(v7, sel_setLineBreakMode_, 4);
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
    v9 = (void *)sub_1BC2B4C64();
    objc_msgSend(v7, sel_setFont_, v9);

    v10 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v7;
    v3 = v7;

    v2 = 0;
  }
  v11 = v2;
  return v3;
}

id InteractionSummaryContentView.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  id v9;
  id v10;
  objc_super v12;

  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI29InteractionSummaryContentView____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI29InteractionSummaryContentView_viewModel] = 0;
  v12.receiver = v4;
  v12.super_class = (Class)type metadata accessor for InteractionSummaryContentView();
  v9 = objc_msgSendSuper2(&v12, sel_initWithFrame_, a1, a2, a3, a4);
  objc_msgSend(v9, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v10 = sub_1BC27AD68();
  objc_msgSend(v9, sel_addSubview_, v10);

  sub_1BC27B244();
  return v9;
}

uint64_t type metadata accessor for InteractionSummaryContentView()
{
  return objc_opt_self();
}

id InteractionSummaryContentView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void InteractionSummaryContentView.init(coder:)()
{
  char *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI29InteractionSummaryContentView____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI29InteractionSummaryContentView_viewModel] = 0;

  sub_1BC2B52B8();
  __break(1u);
}

void sub_1BC27B244()
{
  void *v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;

  v1 = (void *)objc_opt_self();
  sub_1BC0E7940();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BC2BA730;
  v3 = sub_1BC27AD68();
  v4 = objc_msgSend(v3, sel_leadingAnchor);

  v5 = objc_msgSend(v0, sel_leadingAnchor);
  v6 = objc_msgSend(v4, sel_constraintEqualToAnchor_, v5);

  *(_QWORD *)(v2 + 32) = v6;
  v7 = sub_1BC27AD68();
  v8 = objc_msgSend(v7, sel_trailingAnchor);

  v9 = objc_msgSend(v0, sel_trailingAnchor);
  v10 = objc_msgSend(v8, sel_constraintEqualToAnchor_, v9);

  *(_QWORD *)(v2 + 40) = v10;
  v11 = sub_1BC27AD68();
  v12 = objc_msgSend(v11, sel_topAnchor);

  v13 = objc_msgSend(v0, sel_topAnchor);
  v14 = objc_msgSend(v12, sel_constraintEqualToAnchor_constant_, v13, 8.0);

  *(_QWORD *)(v2 + 48) = v14;
  v15 = sub_1BC27AD68();
  v16 = objc_msgSend(v15, sel_bottomAnchor);

  v17 = objc_msgSend(v0, sel_bottomAnchor);
  v18 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v17);

  *(_QWORD *)(v2 + 56) = v18;
  sub_1BC2B45A4();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
  v19 = (id)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_activateConstraints_, v19);

}

void sub_1BC27B4A4(uint64_t a1)
{
  id v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  unint64_t v7;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  void *v12;
  char **v13;
  unint64_t v14;
  id v15;

  v2 = sub_1BC27AD68();
  v3 = objc_msgSend(v2, sel_font);

  if (v3)
  {
    v4 = (void *)sub_1BC27B6D0(v3);

    v5 = sub_1BC27AD68();
    v6 = v5;
    if (v4)
    {
      objc_msgSend(v5, sel_setAttributedText_, v4);
    }
    else
    {
      v7 = *(_QWORD *)(a1 + 16);
      if (v7)
      {
        if (v7 != 1)
          Array<A>.interactionSummaryTitle()(v7);
      }
      else
      {
        if (qword_1EDA0FEE8 != -1)
          swift_once();
        v8 = (id)qword_1EDA0FEF8;
        swift_bridgeObjectRetain();
        v14 = 0xE000000000000000;
        sub_1BC2B2144();
        swift_bridgeObjectRelease();

      }
      v9 = sub_1BC2B4430();
      swift_bridgeObjectRelease();
      objc_msgSend(v6, sel_setText_, v9);
      v4 = v6;
      v6 = (void *)v9;
    }

    v10 = sub_1BC27AD68();
    v11 = *(_QWORD *)(a1 + 16);
    v12 = (void *)objc_opt_self();
    v13 = &selRef_secondaryLabelColor;
    if (v11)
      v13 = &selRef_labelColor;
    v15 = objc_msgSend(v12, *v13, v14);
    objc_msgSend(v10, sel_setTextColor_, v15);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1BC27B6D0(void *a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  id v8;
  uint64_t v9;

  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    if (v2 != 1)
    {
      v4 = Array<A>.countBySeverityLevel.getter(*(_QWORD *)(v1 + 16));
      if (*(_QWORD *)(v4 + 16) && (v5 = sub_1BC107E08(1), (v6 & 1) != 0))
      {
        v7 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v5);
        swift_bridgeObjectRelease();
        if (v7 > 0)
        {
          v8 = Array<A>.interactionSummaryTitle()(v2);
          v2 = sub_1BC27B830((uint64_t)v8, v9, a1);
          swift_bridgeObjectRelease();
          return v2;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      return 0;
    }
    return sub_1BC27B830(0x6C616E7265746E49, 0xEE00726F72724520, a1);
  }
  return v2;
}

id InteractionSummaryContentView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InteractionSummaryContentView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for InteractionSummaryContentView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InteractionSummaryContentView.updateFor(viewModel:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t sub_1BC27B830(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[0] = a1;
  sub_1BC27BA2C();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E1D38(0, (unint64_t *)&unk_1EDA0FCD0);
  sub_1BC0E7940();
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BC2B7770;
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDE0);
  v8 = (void *)objc_opt_self();
  v9 = objc_msgSend(v8, sel_systemBlackColor, v14[0]);
  v10 = objc_msgSend(v8, sel_systemWhiteColor);
  v11 = sub_1BC2B4CF4();

  *(_QWORD *)(v7 + 32) = v11;
  v14[1] = v7;
  sub_1BC2B45A4();
  v12 = sub_1BC2B4A60();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v6, 1, 1, v12);
  swift_bridgeObjectRetain();
  objc_msgSend(v8, sel_labelColor);
  a3;
  return sub_1BC2B4A54();
}

void sub_1BC27BA2C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FBD28)
  {
    sub_1BC2B4A60();
    v0 = sub_1BC2B4FA0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FBD28);
  }
}

uint64_t MedicationDetailsDataSource.__allocating_init(with:healthStore:)(void *a1, void *a2)
{
  swift_allocObject();
  return MedicationDetailsDataSource.init(with:healthStore:)(a1, a2);
}

uint64_t MedicationDetailsDataSource.init(with:healthStore:)(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v19;

  v3 = v2;
  v6 = qword_1EF401588;
  *(_QWORD *)(v3 + qword_1EF401588) = 0;
  *(_QWORD *)(v3 + qword_1EF401590) = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v3 + qword_1EF401598) = a2;
  *(_QWORD *)(v3 + v6) = a1;
  swift_retain();
  v7 = a2;
  swift_retain();
  swift_release();
  sub_1BC2B36F8();
  swift_allocObject();
  v8 = v7;
  *(_QWORD *)(v3 + qword_1EF4015A0) = sub_1BC2B36EC();
  sub_1BC2B3ED8();
  v9 = objc_msgSend(v19, sel_localizedOntologyEducationContent);
  if (v9)
  {
    v10 = v9;
    sub_1BC0E1D38(0, (unint64_t *)&unk_1EF3FB490);
    sub_1BC2B284C();
    v12 = v11;

    if (v12)
      swift_bridgeObjectRelease();
  }
  else
  {

  }
  sub_1BC2B3ED8();
  v13 = objc_msgSend(v19, sel_localizedOntologyEducationContent);
  if (v13)
  {
    v14 = v13;
    sub_1BC0E1D38(0, (unint64_t *)&unk_1EF3FB490);
    sub_1BC2B2864();
    v16 = v15;

    if (v16)
      swift_bridgeObjectRelease();
  }
  else
  {

  }
  sub_1BC2B3818();
  swift_allocObject();
  *(_QWORD *)(v3 + qword_1EF4015A8) = sub_1BC2B37F4();
  swift_release();
  v17 = sub_1BC2B2750();
  swift_retain();
  sub_1BC27C040(a1);
  swift_release();
  swift_release();

  return v17;
}

uint64_t MedicationDetailsDataSource.__allocating_init(with:)(uint64_t a1)
{
  swift_allocObject();
  return MedicationDetailsDataSource.init(with:)(a1);
}

uint64_t MedicationDetailsDataSource.init(with:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  id v8;
  id v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *boxed_opaque_existential_1;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22[2];

  v2 = v1;
  v4 = sub_1BC2B2438();
  v20 = *(_QWORD *)(v4 - 8);
  v21 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v1 + qword_1EF401588) = 0;
  *(_QWORD *)(v1 + qword_1EF401590) = MEMORY[0x1E0DEE9E8];
  v7 = objc_allocWithZone(MEMORY[0x1E0CB6780]);
  swift_retain();
  v8 = objc_msgSend(v7, sel_init);
  *(_QWORD *)(v2 + qword_1EF401598) = v8;
  sub_1BC2B36F8();
  swift_allocObject();
  v9 = v8;
  *(_QWORD *)(v2 + qword_1EF4015A0) = sub_1BC2B36EC();
  sub_1BC2B3818();
  swift_allocObject();
  *(_QWORD *)(v2 + qword_1EF4015A8) = sub_1BC2B37F4();
  swift_release();
  v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8C50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BC2B2BC4();
  v11 = swift_allocObject();
  v19 = xmmword_1BC2B92D0;
  *(_OWORD *)(v11 + 16) = xmmword_1BC2B92D0;
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0FE38, (uint64_t (*)(uint64_t))sub_1BC0E1B94, v10);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = v19;
  sub_1BC0E79F0(a1, (uint64_t)v22);
  v13 = type metadata accessor for MedicationDetailsCardItem();
  *(_QWORD *)(v12 + 56) = v13;
  *(_QWORD *)(v12 + 64) = sub_1BC0E519C(&qword_1EF4015B0, (uint64_t (*)(uint64_t))type metadata accessor for MedicationDetailsCardItem, (uint64_t)&protocol conformance descriptor for MedicationDetailsCardItem);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v12 + 32));
  sub_1BC2B242C();
  v15 = (uint64_t *)((char *)boxed_opaque_existential_1 + *(int *)(v13 + 28));
  type metadata accessor for MedicationDetailsCardCell();
  sub_1BC0E519C((unint64_t *)&unk_1EF3FB080, (uint64_t (*)(uint64_t))type metadata accessor for MedicationDetailsCardCell, (uint64_t)&protocol conformance descriptor for MedicationDetailsCardCell);
  *v15 = sub_1BC2B2930();
  v15[1] = v16;
  sub_1BC0F2730(v22, (uint64_t)boxed_opaque_existential_1);
  *(uint64_t *)((char *)boxed_opaque_existential_1 + *(int *)(v13 + 24)) = 0;
  sub_1BC2B242C();
  sub_1BC2B23FC();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v21);
  sub_1BC2B2BAC();
  v17 = sub_1BC2B2750();
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v17;
}

uint64_t sub_1BC27C040(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  id v20;

  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0FCC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v18 - v3;
  sub_1BC27D198();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC27D22C();
  v11 = v10;
  v19 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = a1;
  sub_1BC106408();
  type metadata accessor for MedicationDetailsDataProvider(0);
  sub_1BC0E519C(&qword_1EF3F9748, (uint64_t (*)(uint64_t))sub_1BC106408, MEMORY[0x1E0C95FB8]);
  sub_1BC2B4004();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FFF0);
  v20 = (id)sub_1BC2B4A0C();
  v14 = sub_1BC2B49C4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v4, 1, 1, v14);
  sub_1BC0E519C(&qword_1EF401620, (uint64_t (*)(uint64_t))sub_1BC27D198, MEMORY[0x1E0C95950]);
  sub_1BC1019D8();
  sub_1BC2B4064();
  sub_1BC101BB8((uint64_t)v4);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v15 = swift_allocObject();
  swift_weakInit();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v15;
  *(_QWORD *)(v16 + 24) = a1;
  sub_1BC0E519C(&qword_1EF401628, (uint64_t (*)(uint64_t))sub_1BC27D22C, MEMORY[0x1E0C95CB8]);
  swift_retain();
  sub_1BC2B40A0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v13, v11);
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BC27C334@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t *v27;
  uint64_t v28;
  void *v29;

  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0ECC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v28 - v5;
  v29 = *a1;
  v7 = v29;
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
  v28 = sub_1BC2B3758();
  v9 = v8;
  v10 = sub_1BC2B4B80();
  v12 = v11;
  v13 = _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE8strengthSSSgvg_0();
  v15 = v14;
  _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE7medmoji0eF10Experience29MedicationVisualizationConfigVSgvg_0();
  v16 = objc_msgSend(v7, sel_userSpecifiedNotes);
  if (v16)
  {
    v17 = v16;
    v18 = sub_1BC2B4460();
    v20 = v19;

  }
  else
  {
    v18 = 0;
    v20 = 0;
  }
  v21 = 0xE000000000000000;
  if (v15)
    v22 = v15;
  else
    v22 = 0xE000000000000000;
  if (v15)
    v23 = v13;
  else
    v23 = 0;
  *a2 = v28;
  a2[1] = v9;
  if (v12)
  {
    v21 = v12;
    v24 = v10;
  }
  else
  {
    v24 = 0;
  }
  a2[2] = v24;
  a2[3] = v21;
  a2[4] = v23;
  a2[5] = v22;
  v25 = type metadata accessor for MedicationDetailsDataProvider(0);
  result = sub_1BC109D88((uint64_t)v6, (uint64_t)a2 + *(int *)(v25 + 28));
  v27 = (uint64_t *)((char *)a2 + *(int *)(v25 + 32));
  *v27 = v18;
  v27[1] = v20;
  return result;
}

uint64_t sub_1BC27C4B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  _UNKNOWN **v25;

  v2 = sub_1BC2B2438();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    sub_1BC2B2744();
    swift_release();
    v21 = sub_1BC2B2A08();
    swift_release();
    v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
    sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8C50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v8 = *(unsigned __int8 *)(*(_QWORD *)(sub_1BC2B2BC4() - 8) + 80);
    v20 = v2;
    v9 = (v8 + 32) & ~v8;
    v10 = swift_allocObject();
    v18 = xmmword_1BC2B92D0;
    *(_OWORD *)(v10 + 16) = xmmword_1BC2B92D0;
    v19 = v10 + v9;
    sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0FE38, (uint64_t (*)(uint64_t))sub_1BC0E1B94, v7);
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = v18;
    v24 = type metadata accessor for MedicationDetailsDataProvider(0);
    v25 = &protocol witness table for MedicationDetailsDataProvider;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v23);
    sub_1BC27D314(a1, (uint64_t)boxed_opaque_existential_1);
    sub_1BC2B3ED8();
    v13 = v22;
    v14 = type metadata accessor for MedicationDetailsCardItem();
    *(_QWORD *)(v11 + 56) = v14;
    *(_QWORD *)(v11 + 64) = sub_1BC0E519C(&qword_1EF4015B0, (uint64_t (*)(uint64_t))type metadata accessor for MedicationDetailsCardItem, (uint64_t)&protocol conformance descriptor for MedicationDetailsCardItem);
    v15 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v11 + 32));
    sub_1BC2B242C();
    v16 = (uint64_t *)((char *)v15 + *(int *)(v14 + 28));
    type metadata accessor for MedicationDetailsCardCell();
    sub_1BC0E519C((unint64_t *)&unk_1EF3FB080, (uint64_t (*)(uint64_t))type metadata accessor for MedicationDetailsCardCell, (uint64_t)&protocol conformance descriptor for MedicationDetailsCardCell);
    *v16 = sub_1BC2B2930();
    v16[1] = v17;
    sub_1BC0F2730(&v23, (uint64_t)v15);
    *(uint64_t *)((char *)v15 + *(int *)(v14 + 24)) = v13;
    sub_1BC2B242C();
    sub_1BC2B23FC();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v20);
    sub_1BC2B2BAC();
    sub_1BC2B2C18();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BC27C770(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v2 = sub_1BC2B2D20();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
    sub_1BC2B2CC0();
  else
    sub_1BC2B2C9C();
  v6 = sub_1BC2B2D14();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v6;
}

void MedicationDetailsDataSource.__allocating_init(arrangedSections:isHidden:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void MedicationDetailsDataSource.init(arrangedSections:isHidden:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC27C86C()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t MedicationDetailsDataSource.deinit()
{
  uint64_t v0;

  v0 = _s19HealthMedicationsUI34InteractionSeperatorLineDataSourceCfd_0();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  return v0;
}

uint64_t MedicationDetailsDataSource.__deallocating_deinit()
{
  uint64_t v0;

  v0 = _s19HealthMedicationsUI34InteractionSeperatorLineDataSourceCfd_0();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC27C9B8()
{
  MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for MedicationDetailsDataSource);
  return sub_1BC2B3074();
}

Swift::Void __swiftcall MedicationDetailsDataSource.registerCells(for:)(UICollectionView *a1)
{
  sub_1BC2B2D5C();
  sub_1BC2B4994();
  sub_1BC2B2F78();
  sub_1BC2B4994();
  type metadata accessor for MedicationDetailsCardCell();
  sub_1BC0E519C((unint64_t *)&unk_1EF3FB080, (uint64_t (*)(uint64_t))type metadata accessor for MedicationDetailsCardCell, (uint64_t)&protocol conformance descriptor for MedicationDetailsCardCell);
  sub_1BC2B497C();
}

uint64_t sub_1BC27CA88()
{
  sub_1BC2B2D5C();
  sub_1BC2B4994();
  sub_1BC2B2F78();
  sub_1BC2B4994();
  type metadata accessor for MedicationDetailsCardCell();
  sub_1BC0E519C((unint64_t *)&unk_1EF3FB080, (uint64_t (*)(uint64_t))type metadata accessor for MedicationDetailsCardCell, (uint64_t)&protocol conformance descriptor for MedicationDetailsCardCell);
  return sub_1BC2B497C();
}

uint64_t MedicationDetailsDataSource.supplementaryItem(ofKind:at:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t result;
  void *v10;

  v3 = sub_1BC2B3CD4();
  MEMORY[0x1E0C80A78](v3);
  if (*(_QWORD *)(v1 + qword_1EF401588))
  {
    swift_retain();
    sub_1BC2B3ED8();
    swift_release();

    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v4 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();
    swift_bridgeObjectRelease();

    v5 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();
    swift_bridgeObjectRelease();

    swift_allocObject();
    swift_weakInit();
    swift_retain();
    sub_1BC2B3C68();
    v6 = sub_1BC2B28F4();
    swift_allocObject();
    v7 = sub_1BC2B28E8();
    swift_release();
  }
  else
  {
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v8 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();
    swift_bridgeObjectRelease();

    sub_1BC2B3C68();
    v6 = sub_1BC2B28F4();
    swift_allocObject();
    v7 = sub_1BC2B28E8();
  }
  a1[3] = v6;
  result = sub_1BC0E519C((unint64_t *)&qword_1EF3F96B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2A8B8], MEMORY[0x1E0D2A8A0]);
  a1[4] = result;
  *a1 = v7;
  return result;
}

uint64_t sub_1BC27CE70()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

void sub_1BC27CE94(void *a1)
{
  uint64_t Strong;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v3 = Strong;
    if (*(_QWORD *)(Strong + qword_1EF401588))
    {
      swift_retain();
      sub_1BC2B3ED8();
      swift_release();
      swift_retain();
      sub_1BC2B37E8();
      swift_release();
      v4 = *(void **)(v3 + qword_1EF401598);
      v5 = objc_allocWithZone((Class)type metadata accessor for MedicationDetailEditViewController());
      v6 = v4;
      v7 = v12;
      v8 = (void *)sub_1BC25A87C(v6, v7);

      v9 = objc_msgSend(a1, sel_viewController);
      if (v9)
      {
        v10 = v9;
        v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F7B8]), sel_initWithRootViewController_, v8);
        objc_msgSend(v11, sel_setModalPresentationStyle_, 2);
        objc_msgSend(v11, sel_setModalInPresentation_, 1);
        objc_msgSend(v10, sel_presentViewController_animated_completion_, v11, 1, 0);

        swift_release();
      }
      else
      {
        swift_release();

      }
    }
    else
    {
      swift_release();
    }
  }
}

void sub_1BC27D040(void *a1)
{
  sub_1BC27CE94(a1);
}

uint64_t sub_1BC27D048()
{
  return sub_1BC0E519C(&qword_1EF4015B8, (uint64_t (*)(uint64_t))type metadata accessor for MedicationDetailsDataSource, (uint64_t)&protocol conformance descriptor for MedicationDetailsDataSource);
}

uint64_t type metadata accessor for MedicationDetailsDataSource()
{
  uint64_t result;

  result = qword_1EF4015C0;
  if (!qword_1EF4015C0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC27D0B0@<X0>(uint64_t *a1@<X8>)
{
  return MedicationDetailsDataSource.supplementaryItem(ofKind:at:)(a1);
}

uint64_t sub_1BC27D0D0()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for MedicationDetailsDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicationDetailsDataSource.__allocating_init(with:healthStore:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(class metadata base offset for MedicationDetailsDataSource + v0 + 168))();
}

uint64_t dispatch thunk of MedicationDetailsDataSource.__allocating_init(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(class metadata base offset for MedicationDetailsDataSource + v0 + 176))();
}

uint64_t dispatch thunk of MedicationDetailsDataSource.layout(for:environment:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for MedicationDetailsDataSource + *v0 + 192))();
}

uint64_t sub_1BC27D190()
{
  return type metadata accessor for MedicationDetailsDataSource();
}

void sub_1BC27D198()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF401610)
  {
    sub_1BC106408();
    type metadata accessor for MedicationDetailsDataProvider(255);
    sub_1BC0E519C(&qword_1EF3F9748, (uint64_t (*)(uint64_t))sub_1BC106408, MEMORY[0x1E0C95FB8]);
    v0 = sub_1BC2B3DF4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF401610);
  }
}

void sub_1BC27D22C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF401618)
  {
    sub_1BC27D198();
    sub_1BC0E1D38(255, (unint64_t *)&qword_1EDA0FFF0);
    sub_1BC0E519C(&qword_1EF401620, (uint64_t (*)(uint64_t))sub_1BC27D198, MEMORY[0x1E0C95950]);
    sub_1BC1019D8();
    v0 = sub_1BC2B3E60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF401618);
  }
}

uint64_t sub_1BC27D2E0()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC27D30C(uint64_t a1)
{
  return sub_1BC27C4B0(a1);
}

uint64_t sub_1BC27D314(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MedicationDetailsDataProvider(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BC27D4D4()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  id v27;

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3438]), sel_initWithActivityIndicatorStyle_, 101);
  v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  v2 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
  objc_msgSend(v27, sel_setTextColor_, v2);

  objc_msgSend(v27, sel_setNumberOfLines_, 0);
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v3 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  v4 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v27, sel_setText_, v4, 0xE000000000000000);

  if (objc_msgSend((id)objc_opt_self(), sel_isAppleInternalInstall))
  {
    v5 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();
    swift_bridgeObjectRelease();

    v6 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    objc_msgSend(v27, sel_setText_, v6, 0xE000000000000000);

  }
  objc_msgSend(v27, sel_setTextAlignment_, 1);
  objc_msgSend(v27, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v7 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v7, sel_addSubview_, v27);

  v8 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v8, sel_addSubview_, v1);

  objc_msgSend(v1, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v9 = (void *)objc_opt_self();
  sub_1BC0E7940();
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1BC2BA730;
  v11 = objc_msgSend(v1, sel_centerYAnchor);
  v12 = objc_msgSend(v0, sel_contentView);
  v13 = objc_msgSend(v12, sel_centerYAnchor);

  v14 = objc_msgSend(v11, sel_constraintEqualToAnchor_, v13);
  *(_QWORD *)(v10 + 32) = v14;
  v15 = objc_msgSend(v1, sel_centerXAnchor);
  v16 = objc_msgSend(v0, sel_contentView);
  v17 = objc_msgSend(v16, sel_centerXAnchor);

  v18 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v17);
  *(_QWORD *)(v10 + 40) = v18;
  v19 = objc_msgSend(v27, sel_topAnchor);
  v20 = objc_msgSend(v1, sel_bottomAnchor);
  v21 = objc_msgSend(v19, sel_constraintEqualToAnchor_constant_, v20, 8.0);

  *(_QWORD *)(v10 + 48) = v21;
  v22 = objc_msgSend(v27, sel_centerXAnchor);
  v23 = objc_msgSend(v0, sel_contentView);
  v24 = objc_msgSend(v23, sel_centerXAnchor);

  v25 = objc_msgSend(v22, sel_constraintEqualToAnchor_, v24);
  *(_QWORD *)(v10 + 56) = v25;
  sub_1BC2B45A4();
  sub_1BC11BF6C();
  v26 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_activateConstraints_, v26);

  objc_msgSend(v1, sel_startAnimating);
}

id sub_1BC27DA00()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ShardSpinnerDownloadCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ShardSpinnerDownloadCell()
{
  return objc_opt_self();
}

uint64_t sub_1BC27DA60@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI24ShardSpinnerDownloadCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a1);
}

uint64_t sub_1BC27DAB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI24ShardSpinnerDownloadCell_item;
  swift_beginAccess();
  sub_1BC0E1B40(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_1BC27DB08())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1BC27DB4C()
{
  uint64_t result;
  uint64_t v1;

  type metadata accessor for ShardSpinnerDownloadCell();
  sub_1BC27DC08();
  result = sub_1BC2B2930();
  qword_1EF402CC0 = result;
  *(_QWORD *)algn_1EF402CC8 = v1;
  return result;
}

uint64_t type metadata accessor for ShardSpinnerDownloadItem()
{
  return objc_opt_self();
}

uint64_t sub_1BC27DBAC()
{
  uint64_t v0;

  if (qword_1EF3F8190 != -1)
    swift_once();
  v0 = qword_1EF402CC0;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_1BC27DC08()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3F8EB0;
  if (!qword_1EF3F8EB0)
  {
    v1 = type metadata accessor for ShardSpinnerDownloadCell();
    result = MEMORY[0x1BCCEF2BC](&unk_1BC2C582C, v1);
    atomic_store(result, (unint64_t *)&qword_1EF3F8EB0);
  }
  return result;
}

BOOL static HistoryDisplayContext.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t HistoryDisplayContext.hash(into:)()
{
  return sub_1BC2B545C();
}

uint64_t HistoryDisplayContext.hashValue.getter()
{
  sub_1BC2B5450();
  sub_1BC2B545C();
  return sub_1BC2B548C();
}

unint64_t sub_1BC27DCD4()
{
  unint64_t result;

  result = qword_1EF401708;
  if (!qword_1EF401708)
  {
    result = MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for HistoryDisplayContext, &type metadata for HistoryDisplayContext);
    atomic_store(result, (unint64_t *)&qword_1EF401708);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for HistoryDisplayContext(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BC27DD64 + 4 * byte_1BC2C5895[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BC27DD98 + 4 * byte_1BC2C5890[v4]))();
}

uint64_t sub_1BC27DD98(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC27DDA0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC27DDA8);
  return result;
}

uint64_t sub_1BC27DDB4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC27DDBCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BC27DDC0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC27DDC8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HistoryDisplayContext()
{
  return &type metadata for HistoryDisplayContext;
}

uint64_t type metadata accessor for MedicationLogDetailsDataSource()
{
  uint64_t result;

  result = qword_1EF401718;
  if (!qword_1EF401718)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC27DE20()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for MedicationLogDetailsHeaderItem();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void sub_1BC27DEB8()
{
  qword_1EF402CD0 = (uint64_t)&unk_1E74AFDD8;
}

_QWORD *sub_1BC27DECC@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 1)
    v2 = 1;
  else
    v2 = 2;
  if (*result)
    v3 = v2;
  else
    v3 = 0;
  *a2 = v3;
  return result;
}

void sub_1BC27DEEC(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

void sub_1BC27DEF8(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E74B0200;
}

uint64_t *sub_1BC27DF08@<X0>(uint64_t *result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  v2 = *result;
  if ((unint64_t)*result >= 3)
    LOBYTE(v2) = 3;
  *a2 = v2;
  return result;
}

void sub_1BC27DF20(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E74B0228;
}

uint64_t sub_1BC27DF30(unint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = sub_1BC2B2D20();
  v4 = *(_QWORD *)(v3 - 8);
  result = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  v8 = *(_QWORD *)(v1 + qword_1EF401710);
  if (*(_QWORD *)(v8 + 16) <= a1)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  if ((*(_BYTE *)(v8 + a1 + 32) & 1) != 0)
    sub_1BC2B2CC0();
  else
    sub_1BC2B2C9C();
  v9 = sub_1BC2B2D14();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  return v9;
}

uint64_t sub_1BC27E004@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  char v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v12;
  uint64_t *boxed_opaque_existential_1;

  if (sub_1BC2B4460() == a1 && v6 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = sub_1BC2B53CC();
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0)
    {
      v9 = sub_1BC2B296C();
      v10 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2AB30];
      a3[3] = v9;
      a3[4] = sub_1BC0E519C(&qword_1EF3F8B68, v10, MEMORY[0x1E0D2AB20]);
      __swift_allocate_boxed_opaque_existential_1(a3);
      return sub_1BC2B2960();
    }
  }
  v12 = v3 + qword_1EF402CD8;
  a3[3] = type metadata accessor for MedicationLogDetailsHeaderItem();
  a3[4] = sub_1BC0E519C(&qword_1EF4017B8, (uint64_t (*)(uint64_t))type metadata accessor for MedicationLogDetailsHeaderItem, (uint64_t)&unk_1BC2C2410);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a3);
  return sub_1BC1FE12C(v12, (uint64_t)boxed_opaque_existential_1);
}

void sub_1BC27E118()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC27E144()
{
  uint64_t v0;

  sub_1BC1FDFB8(v0 + qword_1EF402CD8);
  swift_release();
  sub_1BC0F0430(v0 + qword_1EF402CE8);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC27E190()
{
  uint64_t v0;

  v0 = sub_1BC2B2C60();
  sub_1BC1FDFB8(v0 + qword_1EF402CD8);
  swift_release();
  sub_1BC0F0430(v0 + qword_1EF402CE8);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC27E200()
{
  return type metadata accessor for MedicationLogDetailsDataSource();
}

uint64_t storeEnumTagSinglePayload for LogDetailsSection(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BC27E254 + 4 * byte_1BC2C5935[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BC27E288 + 4 * byte_1BC2C5930[v4]))();
}

uint64_t sub_1BC27E288(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC27E290(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC27E298);
  return result;
}

uint64_t sub_1BC27E2A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC27E2ACLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BC27E2B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC27E2B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LogDetailsSection()
{
  return &type metadata for LogDetailsSection;
}

uint64_t storeEnumTagSinglePayload for LogDetailsRow(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BC27E320 + 4 * byte_1BC2C593F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BC27E354 + 4 * byte_1BC2C593A[v4]))();
}

uint64_t sub_1BC27E354(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC27E35C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC27E364);
  return result;
}

uint64_t sub_1BC27E370(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC27E378);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BC27E37C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC27E384(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LogDetailsRow()
{
  return &type metadata for LogDetailsRow;
}

uint64_t sub_1BC27E3A0()
{
  return sub_1BC27E440(&qword_1EF401768, &qword_1EF401770);
}

unint64_t sub_1BC27E3D0()
{
  unint64_t result;

  result = qword_1EF401778;
  if (!qword_1EF401778)
  {
    result = MEMORY[0x1BCCEF2BC](&unk_1BC2C5A70, &type metadata for LogDetailsRow);
    atomic_store(result, (unint64_t *)&qword_1EF401778);
  }
  return result;
}

uint64_t sub_1BC27E414()
{
  return sub_1BC27E440(&qword_1EF401780, &qword_1EF401788);
}

uint64_t sub_1BC27E440(unint64_t *a1, unint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    sub_1BC27E480(255, a2);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0DEAF50], v4);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BC27E480(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1BC2B4610();
    if (!v4)
      atomic_store(v3, a2);
  }
}

unint64_t sub_1BC27E4C8()
{
  unint64_t result;

  result = qword_1EF401790;
  if (!qword_1EF401790)
  {
    result = MEMORY[0x1BCCEF2BC](&unk_1BC2C5B48, &type metadata for LogDetailsSection);
    atomic_store(result, (unint64_t *)&qword_1EF401790);
  }
  return result;
}

uint64_t sub_1BC27E50C(unint64_t a1)
{
  return sub_1BC27DF30(a1);
}

uint64_t sub_1BC27E52C()
{
  type metadata accessor for MedicationLogDetailsUnitCell();
  sub_1BC0E519C(&qword_1EF4017A0, (uint64_t (*)(uint64_t))type metadata accessor for MedicationLogDetailsUnitCell, (uint64_t)&unk_1BC2BD618);
  sub_1BC2B497C();
  type metadata accessor for MedicationLogDetailsTimeCell();
  sub_1BC0E519C(&qword_1EF4017A8, (uint64_t (*)(uint64_t))type metadata accessor for MedicationLogDetailsTimeCell, (uint64_t)&unk_1BC2BFA60);
  sub_1BC2B497C();
  type metadata accessor for MedicationLogDetailsTimePickerCell();
  sub_1BC0E519C(&qword_1EF3FF860, (uint64_t (*)(uint64_t))type metadata accessor for MedicationLogDetailsTimePickerCell, (uint64_t)&unk_1BC2B9974);
  sub_1BC2B497C();
  type metadata accessor for MedicationLogDetailsHeader();
  sub_1BC0E519C(&qword_1EF4017B0, (uint64_t (*)(uint64_t))type metadata accessor for MedicationLogDetailsHeader, (uint64_t)&unk_1BC2C2480);
  sub_1BC2B4994();
  sub_1BC2B2EB8();
  return sub_1BC2B4988();
}

uint64_t sub_1BC27E640@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BC27E004(a1, a2, a3);
}

uint64_t sub_1BC27E660()
{
  MEMORY[0x1BCCEF2BC](&unk_1BC2C5BF0);
  return sub_1BC2B3074();
}

uint64_t sub_1BC27E6AC()
{
  return sub_1BC0E519C(&qword_1EF401798, (uint64_t (*)(uint64_t))type metadata accessor for MedicationLogDetailsDataSource, (uint64_t)&unk_1BC2C5B70);
}

uint64_t sub_1BC27E6D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *boxed_opaque_existential_1;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  char *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  _QWORD v32[2];
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[2];

  v3 = v2;
  v6 = sub_1BC2B2438();
  v39 = *(_QWORD *)(v6 - 8);
  v40 = v6;
  MEMORY[0x1E0C80A78](v6);
  v38 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MedicationLogDetailsUnitItem();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v2 + qword_1EF402CE8;
  *(_QWORD *)(v2 + qword_1EF402CE8 + 8) = 0;
  swift_unknownObjectWeakInit();
  v12 = qword_1EF401710;
  v13 = qword_1EF3F8198;
  swift_retain();
  if (v13 != -1)
    swift_once();
  *(_QWORD *)(v3 + v12) = qword_1EF402CD0;
  sub_1BC1FE12C(a2, v3 + qword_1EF402CD8);
  *(_QWORD *)(v3 + qword_1EF402CE0) = a1;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  sub_1BC100284(0, (unint64_t *)&qword_1EDA0FE38, (void (*)(uint64_t))sub_1BC0E1B94);
  v37 = v3;
  v14 = swift_allocObject();
  v33 = xmmword_1BC2B92D0;
  *(_OWORD *)(v14 + 16) = xmmword_1BC2B92D0;
  v15 = type metadata accessor for MedicationLogDetailsTimeItem(0);
  v36 = a2;
  v16 = v15;
  *(_QWORD *)(v14 + 56) = v15;
  *(_QWORD *)(v14 + 64) = sub_1BC0E519C(&qword_1EF4017C8, type metadata accessor for MedicationLogDetailsTimeItem, (uint64_t)&unk_1BC2BFB60);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v14 + 32));
  swift_retain();
  sub_1BC2B242C();
  v18 = (uint64_t *)((char *)boxed_opaque_existential_1 + *(int *)(v16 + 24));
  type metadata accessor for MedicationLogDetailsTimeCell();
  sub_1BC0E519C(&qword_1EF4017A8, (uint64_t (*)(uint64_t))type metadata accessor for MedicationLogDetailsTimeCell, (uint64_t)&unk_1BC2BFA60);
  *v18 = sub_1BC2B2930();
  v18[1] = v19;
  *(uint64_t *)((char *)boxed_opaque_existential_1 + *(int *)(v16 + 20)) = a1;
  sub_1BC100284(0, (unint64_t *)&qword_1EF3F8C50, (void (*)(uint64_t))MEMORY[0x1E0D2B090]);
  v20 = *(_QWORD *)(sub_1BC2B2BC4() - 8);
  v34 = *(_QWORD *)(v20 + 72);
  v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v22 = swift_allocObject();
  v35 = v22;
  *(_OWORD *)(v22 + 16) = xmmword_1BC2B92C0;
  v32[1] = v22 + v21;
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = v33;
  MEMORY[0x1BCCEF478](v11);
  *(_QWORD *)&v33 = *(_QWORD *)(v11 + 8);
  *(_QWORD *)(v23 + 56) = v8;
  *(_QWORD *)(v23 + 64) = sub_1BC0E519C(&qword_1EF3F9148, (uint64_t (*)(uint64_t))type metadata accessor for MedicationLogDetailsUnitItem, (uint64_t)&unk_1BC2BD738);
  v24 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v23 + 32));
  swift_retain();
  sub_1BC2B242C();
  v25 = &v10[*(int *)(v8 + 24)];
  *((_QWORD *)v25 + 1) = 0;
  swift_unknownObjectWeakInit();
  v26 = v8;
  v27 = (uint64_t *)&v10[*(int *)(v8 + 28)];
  type metadata accessor for MedicationLogDetailsUnitCell();
  sub_1BC0E519C(&qword_1EF4017A0, (uint64_t (*)(uint64_t))type metadata accessor for MedicationLogDetailsUnitCell, (uint64_t)&unk_1BC2BD618);
  *v27 = sub_1BC2B2930();
  v27[1] = v28;
  *(_QWORD *)&v10[*(int *)(v26 + 20)] = a1;
  *((_QWORD *)v25 + 1) = v33;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  sub_1BC171D0C((uint64_t)v10, (uint64_t)v24);
  sub_1BC2B2BAC();
  sub_1BC2B2BAC();
  v41[0] = 0;
  v41[1] = 0xE000000000000000;
  sub_1BC2B51BC();
  swift_bridgeObjectRelease();
  strcpy((char *)v41, "MutableArray<");
  HIWORD(v41[1]) = -4864;
  v29 = v38;
  sub_1BC2B242C();
  sub_1BC2B23FC();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v29, v40);
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  sub_1BC2B44FC();
  v30 = sub_1BC2B2C00();
  sub_1BC1FDFB8(v36);
  return v30;
}

uint64_t sub_1BC27EB7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v4 = (int *)type metadata accessor for MedicationLogDetailsUnitItem();
  v5 = *((_QWORD *)v4 - 1);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v2 + qword_1EF402CE8;
  v9 = v2;
  v19 = v2;
  *(_QWORD *)(v2 + qword_1EF402CE8 + 8) = a2;
  swift_unknownObjectWeakAssign();
  sub_1BC100284(0, &qword_1EF4017C0, (void (*)(uint64_t))type metadata accessor for MedicationLogDetailsUnitItem);
  v10 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1BC2B92D0;
  v12 = *(_QWORD *)(v9 + qword_1EF402CE0);
  MEMORY[0x1BCCEF478](v8);
  v13 = *(_QWORD *)(v8 + 8);
  swift_retain();
  sub_1BC2B242C();
  v14 = &v7[v4[6]];
  *((_QWORD *)v14 + 1) = 0;
  swift_unknownObjectWeakInit();
  v15 = (uint64_t *)&v7[v4[7]];
  type metadata accessor for MedicationLogDetailsUnitCell();
  sub_1BC0E519C(&qword_1EF4017A0, (uint64_t (*)(uint64_t))type metadata accessor for MedicationLogDetailsUnitCell, (uint64_t)&unk_1BC2BD618);
  *v15 = sub_1BC2B2930();
  v15[1] = v16;
  *(_QWORD *)&v7[v4[5]] = v12;
  *((_QWORD *)v14 + 1) = v13;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  sub_1BC171D0C((uint64_t)v7, v11 + v10);
  sub_1BC0F7F9C(v11);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1BC2B2C24();
  return swift_bridgeObjectRelease();
}

uint64_t MedicationChartCodableData.startDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1BC2B23F0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t MedicationChartCodableData.endDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MedicationChartCodableData() + 20);
  v4 = sub_1BC2B23F0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for MedicationChartCodableData()
{
  uint64_t result;

  result = qword_1EDA0E828;
  if (!qword_1EDA0E828)
    return swift_getSingletonMetadata();
  return result;
}

double MedicationChartCodableData.takenCount.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for MedicationChartCodableData() + 24));
}

double MedicationChartCodableData.skippedCount.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for MedicationChartCodableData() + 28));
}

uint64_t MedicationChartCodableData.statisticsInterval.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MedicationChartCodableData() + 32);
  v4 = sub_1BC2B20FC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MedicationChartCodableData.windowTakenCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for MedicationChartCodableData() + 36));
}

uint64_t MedicationChartCodableData.windowSkippedCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for MedicationChartCodableData() + 40));
}

uint64_t sub_1BC27EEF0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BC27EF28 + 4 * byte_1BC2C5C20[a1]))(0x7461447472617473, 0xE900000000000065);
}

uint64_t sub_1BC27EF28()
{
  return 0x65746144646E65;
}

uint64_t sub_1BC27EF40()
{
  return 0x756F436E656B6174;
}

uint64_t sub_1BC27EF5C()
{
  return 0x4364657070696B73;
}

unint64_t sub_1BC27EF7C()
{
  return 0xD000000000000012;
}

uint64_t sub_1BC27EFC4()
{
  unsigned __int8 *v0;

  return sub_1BC27EEF0(*v0);
}

uint64_t sub_1BC27EFCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC2836B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BC27EFF0()
{
  return 0;
}

void sub_1BC27EFFC(_BYTE *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_1BC27F008()
{
  sub_1BC27F2D4();
  return sub_1BC2B54C8();
}

uint64_t sub_1BC27F030()
{
  sub_1BC27F2D4();
  return sub_1BC2B54D4();
}

uint64_t MedicationChartCodableData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;

  sub_1BC27F810(0, &qword_1EDA0EA00, MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_0(a1, a1[3]);
  sub_1BC27F2D4();
  sub_1BC2B54B0();
  v16 = 0;
  sub_1BC2B23F0();
  sub_1BC0E519C((unint64_t *)&unk_1EDA0E700, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
  sub_1BC2B5378();
  if (!v1)
  {
    type metadata accessor for MedicationChartCodableData();
    v15 = 1;
    sub_1BC2B5378();
    v14 = 2;
    sub_1BC2B5360();
    v13 = 3;
    sub_1BC2B5360();
    v12 = 4;
    sub_1BC2B20FC();
    sub_1BC0E519C(&qword_1EDA0E6F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAEAB0], MEMORY[0x1E0CAEAD0]);
    sub_1BC2B5378();
    v11 = 5;
    sub_1BC2B536C();
    v10 = 6;
    sub_1BC2B536C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1BC27F2D4()
{
  unint64_t result;

  result = qword_1EDA0E7F8;
  if (!qword_1EDA0E7F8)
  {
    result = MEMORY[0x1BCCEF2BC](&unk_1BC2C5EE0, &type metadata for MedicationChartCodableData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDA0E7F8);
  }
  return result;
}

uint64_t MedicationChartCodableData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  char *v24;
  int *v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  _QWORD *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char v50;
  char v51;
  char v52;
  char v53;
  char v54;
  char v55;
  char v56;

  v40 = a2;
  v3 = sub_1BC2B20FC();
  v42 = *(_QWORD *)(v3 - 8);
  v43 = v3;
  MEMORY[0x1E0C80A78](v3);
  v41 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BC2B23F0();
  v6 = *(_QWORD *)(v5 - 8);
  v45 = v5;
  v46 = v6;
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v44 = (char *)&v36 - v10;
  sub_1BC27F810(0, &qword_1EF4017D0, MEMORY[0x1E0DED048]);
  v47 = v11;
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v36 - v13;
  v15 = type metadata accessor for MedicationChartCodableData();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_0(a1, a1[3]);
  sub_1BC27F2D4();
  v48 = v14;
  v18 = v49;
  sub_1BC2B54A4();
  if (v18)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v49 = v12;
  v37 = v15;
  v38 = v17;
  v19 = v46;
  v39 = a1;
  v56 = 0;
  sub_1BC0E519C(&qword_1EF4017D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
  v20 = v44;
  v21 = v45;
  sub_1BC2B5354();
  v22 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
  v23 = (uint64_t)v38;
  v22(v38, v20, v21);
  v55 = 1;
  v24 = v9;
  sub_1BC2B5354();
  v25 = (int *)v37;
  v22((char *)(v23 + *(int *)(v37 + 20)), v24, v21);
  v54 = 2;
  sub_1BC2B533C();
  v26 = v25;
  *(_QWORD *)(v23 + v25[6]) = v27;
  v53 = 3;
  sub_1BC2B533C();
  v28 = v23;
  *(_QWORD *)(v23 + v26[7]) = v29;
  v52 = 4;
  sub_1BC0E519C(&qword_1EF4017E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAEAB0], MEMORY[0x1E0CAEAE8]);
  v30 = v41;
  v31 = v43;
  sub_1BC2B5354();
  (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(v28 + v26[8], v30, v31);
  v51 = 5;
  v32 = sub_1BC2B5348();
  v33 = v49;
  *(_QWORD *)(v28 + v26[9]) = v32;
  v50 = 6;
  v34 = sub_1BC2B5348();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v48, v47);
  *(_QWORD *)(v28 + v26[10]) = v34;
  sub_1BC0FC574(v28, v40, (uint64_t (*)(_QWORD))type metadata accessor for MedicationChartCodableData);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v39);
  return sub_1BC0E8594(v28, (uint64_t (*)(_QWORD))type metadata accessor for MedicationChartCodableData);
}

void sub_1BC27F810(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BC27F2D4();
    v7 = a3(a1, &type metadata for MedicationChartCodableData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BC27F86C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MedicationChartCodableData.init(from:)(a1, a2);
}

uint64_t sub_1BC27F880(_QWORD *a1)
{
  return MedicationChartCodableData.encode(to:)(a1);
}

uint64_t sub_1BC27F894()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

id MedicationChartDataSource.__allocating_init(with:displayType:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return MedicationChartDataSource.init(with:displayType:)(a1, a2);
}

id MedicationChartDataSource.init(with:displayType:)(void *a1, void *a2)
{
  char *v2;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  objc_super v14;
  uint64_t v15;

  v5 = OBJC_IVAR____TtC19HealthMedicationsUI25MedicationChartDataSource_encoder;
  sub_1BC2B1FA0();
  swift_allocObject();
  v6 = v2;
  *(_QWORD *)&v2[v5] = sub_1BC2B1F94();
  v7 = OBJC_IVAR____TtC19HealthMedicationsUI25MedicationChartDataSource_decoder;
  sub_1BC2B1F7C();
  swift_allocObject();
  *(_QWORD *)&v6[v7] = sub_1BC2B1F70();
  v8 = OBJC_IVAR____TtC19HealthMedicationsUI25MedicationChartDataSource_sortDescriptors;
  sub_1BC0E2130(0, (unint64_t *)&qword_1EDA0FEF0, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BC2B7770;
  sub_1BC0E1D38(0, (unint64_t *)&unk_1EDA0E9D8);
  swift_getKeyPath();
  *(_QWORD *)(v9 + 32) = sub_1BC2B4970();
  v15 = v9;
  sub_1BC2B45A4();
  *(_QWORD *)&v6[v8] = v9;
  *(_QWORD *)&v6[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationChartDataSource_medication] = a1;
  v10 = a1;

  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6780]), sel_init);
  v14.receiver = v6;
  v14.super_class = (Class)type metadata accessor for MedicationChartDataSource();
  v12 = objc_msgSendSuper2(&v14, sel_initWithDisplayType_healthStore_, a2, v11);

  return v12;
}

uint64_t type metadata accessor for MedicationChartDataSource()
{
  return objc_opt_self();
}

uint64_t sub_1BC27FB50()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC27FB74()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1BC27FB98(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, NSObject *a5)
{
  void *v10;
  id v11;

  if (a1)
  {
    swift_beginAccess();
    *(_QWORD *)(a3 + 16) = a1;
    swift_retain();
    swift_release();
  }
  else
  {
    swift_beginAccess();
    v10 = *(void **)(a4 + 16);
    *(_QWORD *)(a4 + 16) = a2;
    v11 = a2;

  }
  dispatch_group_leave(a5);
}

uint64_t sub_1BC27FC44(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(__int128 *, id), uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  id v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  id v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  id v41;
  os_log_t v42;
  NSObject *v43;
  os_log_type_t v44;
  int v45;
  uint64_t v46;
  NSObject *v47;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  id v59;
  id v60;
  _QWORD v62[2];
  int v63;
  os_log_t v64;
  uint64_t v65;
  id *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(__int128 *, id);
  uint64_t v71;
  __int128 v72;
  __int128 v73;

  v69 = a6;
  v70 = a5;
  v68 = sub_1BC2B39E0();
  v67 = *(_QWORD *)(v68 - 8);
  v10 = MEMORY[0x1E0C80A78](v68);
  v12 = (char *)v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)v62 - v13;
  v15 = (uint64_t *)(a2 + 16);
  swift_beginAccess();
  v16 = *(_QWORD *)(a1 + 16);
  if (v16 && (swift_beginAccess(), (v17 = *v15) != 0))
  {
    sub_1BC0E2130(0, (unint64_t *)&qword_1EDA0FEF0, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1BC2B92B0;
    *(_QWORD *)(v18 + 32) = v16;
    *(_QWORD *)(v18 + 40) = v17;
    *(_QWORD *)&v72 = v18;
    sub_1BC2B45A4();
    v19 = v72;
    sub_1BC0E7998(0, &qword_1EDA0E9B0, (uint64_t (*)(uint64_t))type metadata accessor for MedicationStatsContext, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    *((_QWORD *)&v73 + 1) = v20;
    *(_QWORD *)&v72 = v19;
    swift_retain_n();
    swift_retain_n();
    v70(&v72, 0);
    swift_release();
    swift_release();
    v21 = MEMORY[0x1E0DEE9B8] + 8;
  }
  else
  {
    v22 = (id *)(a3 + 16);
    swift_beginAccess();
    v23 = *v22;
    if (*v22)
    {
      v24 = v23;
      sub_1BC2B39A4();
      v25 = a4;
      v26 = v23;
      v27 = v25;
      v28 = v23;
      v29 = sub_1BC2B39D4();
      v30 = sub_1BC2B48C8();
      if (os_log_type_enabled(v29, v30))
      {
        v31 = swift_slowAlloc();
        v65 = swift_slowAlloc();
        *(_QWORD *)&v72 = v65;
        *(_DWORD *)v31 = 136446466;
        v66 = v22;
        v32 = v27;
        v33 = objc_msgSend(v32, sel_description);
        v34 = sub_1BC2B4460();
        v36 = v35;

        v71 = sub_1BC12540C(v34, v36, (uint64_t *)&v72);
        sub_1BC2B4FD0();

        swift_bridgeObjectRelease();
        *(_WORD *)(v31 + 12) = 2082;
        v71 = (uint64_t)v23;
        v37 = v23;
        sub_1BC0F6274();
        v38 = sub_1BC2B4478();
        v71 = sub_1BC12540C(v38, v39, (uint64_t *)&v72);
        sub_1BC2B4FD0();
        v22 = v66;
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1BC0DC000, v29, v30, "[%{public}s] Error executing statistics queries for dose event chart: %{public}s", (uint8_t *)v31, 0x16u);
        v40 = v65;
        swift_arrayDestroy();
        MEMORY[0x1BCCEF3A0](v40, -1, -1);
        MEMORY[0x1BCCEF3A0](v31, -1, -1);

      }
      else
      {

      }
      (*(void (**)(char *, uint64_t))(v67 + 8))(v12, v68);
    }
    else
    {
      sub_1BC2B39A4();
      v41 = a4;
      swift_retain_n();
      swift_retain_n();
      v42 = (os_log_t)v41;
      v43 = sub_1BC2B39D4();
      v44 = sub_1BC2B48C8();
      v45 = v44;
      if (os_log_type_enabled(v43, v44))
      {
        v46 = swift_slowAlloc();
        v65 = swift_slowAlloc();
        *(_QWORD *)&v72 = v65;
        *(_DWORD *)v46 = 136446722;
        v62[1] = v46 + 4;
        v47 = v42;
        v48 = -[NSObject description](v47, sel_description);
        v64 = v43;
        v49 = v48;
        v50 = sub_1BC2B4460();
        v63 = v45;
        v51 = v50;
        v66 = v22;
        v53 = v52;

        v71 = sub_1BC12540C(v51, v53, (uint64_t *)&v72);
        sub_1BC2B4FD0();

        swift_bridgeObjectRelease();
        *(_WORD *)(v46 + 12) = 2082;
        swift_beginAccess();
        v71 = *(_QWORD *)(a1 + 16);
        sub_1BC0E7998(0, &qword_1EF401848, (uint64_t (*)(uint64_t))type metadata accessor for MedicationStatsContext, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        swift_retain();
        v54 = sub_1BC2B4478();
        v71 = sub_1BC12540C(v54, v55, (uint64_t *)&v72);
        sub_1BC2B4FD0();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v46 + 22) = 2082;
        swift_beginAccess();
        v71 = *(_QWORD *)(a2 + 16);
        swift_retain();
        v56 = sub_1BC2B4478();
        v71 = sub_1BC12540C(v56, v57, (uint64_t *)&v72);
        v22 = v66;
        sub_1BC2B4FD0();
        swift_release_n();
        swift_bridgeObjectRelease();
        v42 = v64;
        _os_log_impl(&dword_1BC0DC000, v64, (os_log_type_t)v63, "[%{public}s] Found a nil statistic without an error takenDoseEventStatsContext is nil: %{public}s, skippedDoseEventStatsContext is nil: %{public}s", (uint8_t *)v46, 0x20u);
        v58 = v65;
        swift_arrayDestroy();
        MEMORY[0x1BCCEF3A0](v58, -1, -1);
        MEMORY[0x1BCCEF3A0](v46, -1, -1);
      }
      else
      {

        swift_release_n();
        swift_release_n();

      }
      (*(void (**)(char *, uint64_t))(v67 + 8))(v14, v68);
    }
    v72 = 0u;
    v73 = 0u;
    swift_beginAccess();
    v59 = *v22;
    v60 = *v22;
    v70(&v72, v59);

    v21 = MEMORY[0x1E0DEE9B8] + 8;
  }
  return sub_1BC12A654((uint64_t)&v72, (uint64_t)&qword_1EDA10000, v21, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC0E2130);
}

void sub_1BC280468(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD v11[3];
  uint64_t v12;

  sub_1BC285AC4(a1, (uint64_t)v11);
  v5 = v12;
  if (!v12)
  {
    v10 = 0;
    if (!a2)
      goto LABEL_4;
    goto LABEL_3;
  }
  v6 = __swift_project_boxed_opaque_existential_0(v11, v12);
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v9);
  v10 = sub_1BC2B53C0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
  if (a2)
LABEL_3:
    a2 = (void *)sub_1BC2B21D4();
LABEL_4:
  (*(void (**)(uint64_t, uint64_t, void *))(a3 + 16))(a3, v10, a2);
  swift_unknownObjectRelease();

}

uint64_t sub_1BC280570(uint64_t a1, void *a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(_QWORD, _QWORD), uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  id v45;
  uint64_t v46;
  unint64_t v47;
  os_log_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t result;
  uint64_t v53;
  id v54;
  id v55;
  _QWORD v56[2];
  os_log_t v57;
  int v58;
  uint64_t v59;
  uint64_t (*v60)(_QWORD, _QWORD);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67[2];

  v64 = a8;
  v14 = sub_1BC2B20FC();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1BC2B39E0();
  v19 = MEMORY[0x1E0C80A78](v18);
  v65 = (char *)v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    v62 = v20;
    v63 = v19;
    v22 = a3;
    sub_1BC2B39A4();
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a5, v14);
    v23 = a3;
    v24 = a4;
    v25 = a3;
    v26 = v24;
    v27 = sub_1BC2B39D4();
    v28 = sub_1BC2B48C8();
    v29 = v28;
    if (os_log_type_enabled(v27, v28))
    {
      v30 = swift_slowAlloc();
      v61 = a6;
      v31 = v30;
      v59 = swift_slowAlloc();
      v67[0] = v59;
      *(_DWORD *)v31 = 136446978;
      v56[1] = v31 + 4;
      v32 = v26;
      v33 = objc_msgSend(v32, sel_description);
      v58 = v29;
      v34 = v33;
      v35 = sub_1BC2B4460();
      v57 = v27;
      v36 = a2;
      v37 = v35;
      v60 = a7;
      v39 = v38;

      v40 = v37;
      a2 = v36;
      v66 = sub_1BC12540C(v40, v39, v67);
      sub_1BC2B4FD0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 12) = 2082;
      sub_1BC0E519C(&qword_1EF401828, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAEAB0], MEMORY[0x1E0CAEAF0]);
      v41 = sub_1BC2B539C();
      v66 = sub_1BC12540C(v41, v42, v67);
      sub_1BC2B4FD0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      *(_WORD *)(v31 + 22) = 2082;
      v66 = v61;
      type metadata accessor for HKMedicationDoseEventStatus(0);
      v43 = sub_1BC2B4478();
      v66 = sub_1BC12540C(v43, v44, v67);
      sub_1BC2B4FD0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 32) = 2082;
      a7 = v60;
      v66 = (uint64_t)a3;
      v45 = a3;
      sub_1BC0F6274();
      v46 = sub_1BC2B4478();
      v66 = sub_1BC12540C(v46, v47, v67);
      sub_1BC2B4FD0();
      swift_bridgeObjectRelease();

      v48 = v57;
      _os_log_impl(&dword_1BC0DC000, v57, (os_log_type_t)v58, "[%{public}s] Error querying for statistic collection query with date interval %{public}s with dose event status %{public}s: %{public}s", (uint8_t *)v31, 0x2Au);
      v49 = v59;
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v49, -1, -1);
      v50 = v31;
      a6 = v61;
      MEMORY[0x1BCCEF3A0](v50, -1, -1);

    }
    else
    {

      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    }
    (*(void (**)(char *, uint64_t))(v62 + 8))(v65, v63);
  }
  if (!a2)
    return a7(0, a3);
  if (a6 == 4)
  {
    v51 = 0;
  }
  else
  {
    if (a6 != 5)
    {
      v67[0] = 0;
      v67[1] = 0xE000000000000000;
      v55 = a2;
      sub_1BC2B51BC();
      sub_1BC2B44FC();
      v66 = a6;
      type metadata accessor for HKMedicationDoseEventStatus(0);
      sub_1BC2B5270();
      result = sub_1BC2B52B8();
      __break(1u);
      return result;
    }
    v51 = 1;
  }
  type metadata accessor for MedicationStatsContext();
  v53 = swift_allocObject();
  *(_QWORD *)(v53 + 16) = a2;
  *(_BYTE *)(v53 + 24) = v51;
  v54 = a2;
  a7(v53, 0);
  return swift_release();
}

void sub_1BC280A78(uint64_t a1, void *a2, void *a3, void *a4)
{
  void (*v7)(id, void *, void *);
  id v8;
  id v9;
  id v10;

  v7 = *(void (**)(id, void *, void *))(a1 + 32);
  swift_retain();
  v10 = a2;
  v8 = a3;
  v9 = a4;
  v7(v10, a3, a4);
  swift_release();

}

id sub_1BC280B00(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void (*v30)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  os_log_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  os_log_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  int v50;
  _BOOL4 v51;
  char *v52;
  uint64_t v53;
  id v54;
  id v55;
  uint64_t v56;
  os_log_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  void (*v67)(char *, uint64_t);
  os_log_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  id v72;
  id v73;
  char *v74;
  id v75;
  id v76;
  void *v77;
  void *v78;
  id v79;
  void (*v80)(char *, uint64_t);
  uint64_t v82;
  uint64_t v83;
  char *v84;
  id v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  os_log_t v93;
  uint64_t v94;
  void (*v95)(char *, uint64_t);
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104[2];

  v86 = a3;
  v91 = a1;
  v4 = sub_1BC2B39E0();
  v87 = *(_QWORD *)(v4 - 8);
  v88 = v4;
  MEMORY[0x1E0C80A78](v4);
  v98 = (char *)&v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0E710, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v90 = (char *)&v82 - v8;
  v99 = sub_1BC2B23F0();
  v94 = *(_QWORD *)(v99 - 8);
  v9 = MEMORY[0x1E0C80A78](v99);
  v93 = (os_log_t)((char *)&v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v9);
  v84 = (char *)&v82 - v11;
  v12 = sub_1BC2B2594();
  v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11F0];
  v14 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v101 = (char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, &qword_1EDA0E740, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], v6);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v82 - v17;
  sub_1BC0E7998(0, (unint64_t *)&unk_1EDA0E730, v13, v6);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v82 - v20;
  v22 = sub_1BC2B20FC();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = MEMORY[0x1E0C80A78](v22);
  v92 = (char *)&v82 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x1E0C80A78](v24);
  v102 = (char *)&v82 - v27;
  MEMORY[0x1E0C80A78](v26);
  v29 = (char *)&v82 - v28;
  v96 = v14;
  v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  v100 = v12;
  v30(v21, 1, 1, v12);
  v31 = sub_1BC2B25B8();
  v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56);
  v32(v18, 1, 1, v31);
  sub_1BC2B20E4();
  v89 = a2;
  LOBYTE(a2) = MEMORY[0x1BCCEB7E8](a2, v29);
  v95 = *(void (**)(char *, uint64_t))(v23 + 8);
  v95(v29, v22);
  v83 = v23;
  v97 = v22;
  if ((a2 & 1) != 0)
  {
    v33 = v89;
    (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v102, v89, v22);
    v34 = v101;
    v35 = v98;
    v36 = v99;
    v37 = v93;
    v38 = v94;
    v39 = v92;
  }
  else
  {
    v30(v21, 1, 1, v100);
    v32(v18, 1, 1, v31);
    sub_1BC2B20E4();
    v34 = v101;
    v35 = v98;
    v36 = v99;
    v37 = v93;
    v38 = v94;
    v39 = v92;
    v33 = v89;
  }
  v41 = (uint64_t)v90;
  v40 = v91;
  v42 = v34;
  sub_1BC2B2564();
  type metadata accessor for MedicationChartStatisticsFormatter();
  sub_1BC149068(v40, v33, v41);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v41, 1, v36) == 1)
  {
    sub_1BC12A654(v41, (uint64_t)&qword_1EDA0E710, (uint64_t)MEMORY[0x1E0CB0870], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC0E7998);
    sub_1BC2B39A4();
    v43 = v37;
    (*(void (**)(os_log_t, uint64_t, uint64_t))(v38 + 16))(v37, v40, v36);
    v44 = v33;
    v45 = v97;
    (*(void (**)(char *, uint64_t, uint64_t))(v83 + 16))(v39, v44, v97);
    v46 = v85;
    v47 = v45;
    v48 = sub_1BC2B39D4();
    v49 = sub_1BC2B48C8();
    v50 = v49;
    v51 = os_log_type_enabled(v48, v49);
    v52 = v102;
    if (v51)
    {
      v53 = swift_slowAlloc();
      v94 = swift_slowAlloc();
      v104[0] = v94;
      *(_DWORD *)v53 = 136446722;
      v54 = v46;
      v55 = objc_msgSend(v54, sel_description);
      v56 = sub_1BC2B4460();
      v93 = v48;
      v57 = v43;
      LODWORD(v92) = v50;
      v58 = v36;
      v59 = v56;
      v61 = v60;

      v103 = sub_1BC12540C(v59, v61, v104);
      sub_1BC2B4FD0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v53 + 12) = 2082;
      sub_1BC0E519C(&qword_1EF401820, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
      v62 = sub_1BC2B539C();
      v103 = sub_1BC12540C(v62, v63, v104);
      sub_1BC2B4FD0();
      swift_bridgeObjectRelease();
      (*(void (**)(os_log_t, uint64_t))(v38 + 8))(v57, v58);
      *(_WORD *)(v53 + 22) = 2082;
      sub_1BC0E519C(&qword_1EF401828, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAEAB0], MEMORY[0x1E0CAEAF0]);
      v64 = v97;
      v65 = sub_1BC2B539C();
      v103 = sub_1BC12540C(v65, v66, v104);
      sub_1BC2B4FD0();
      swift_bridgeObjectRelease();
      v67 = v95;
      v95(v39, v64);
      v68 = v93;
      _os_log_impl(&dword_1BC0DC000, v93, (os_log_type_t)v92, "[%{public}s] Could not generate anchor date for start date with statistic interval <%{public}s %{public}s>", (uint8_t *)v53, 0x20u);
      v69 = v94;
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v69, -1, -1);
      MEMORY[0x1BCCEF3A0](v53, -1, -1);

      (*(void (**)(char *, uint64_t))(v87 + 8))(v98, v88);
      (*(void (**)(char *, uint64_t))(v96 + 8))(v101, v100);
      v67(v102, v64);
    }
    else
    {

      v80 = v95;
      v95(v39, v47);
      (*(void (**)(os_log_t, uint64_t))(v38 + 8))(v43, v36);

      (*(void (**)(char *, uint64_t))(v87 + 8))(v35, v88);
      (*(void (**)(char *, uint64_t))(v96 + 8))(v101, v100);
      v80(v52, v47);
    }
    return 0;
  }
  else
  {
    v70 = v41;
    v71 = v84;
    (*(void (**)(char *, uint64_t, uint64_t))(v38 + 32))(v84, v70, v36);
    v72 = objc_msgSend((id)objc_opt_self(), sel_medicationDoseEventType);
    v73 = objc_allocWithZone(MEMORY[0x1E0CB6C80]);
    v74 = v102;
    v75 = v73;
    v76 = v86;
    v77 = (void *)sub_1BC2B2360();
    v78 = (void *)sub_1BC2B2060();
    v79 = objc_msgSend(v75, sel_initWithSampleType_samplePredicate_options_anchorDate_intervalComponents_, v72, v76, 16, v77, v78);

    (*(void (**)(char *, uint64_t))(v38 + 8))(v71, v99);
    (*(void (**)(char *, uint64_t))(v96 + 8))(v42, v100);
    v95(v74, v97);
  }
  return v79;
}

uint64_t (*sub_1BC2813D8(void *a1, void *a2, uint64_t a3, uint64_t a4))()
{
  void *v4;
  void *v5;
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  id v15;
  id v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t (*result)();
  uint64_t i;
  id v21;
  void *v22;
  uint64_t v23;
  id v24;
  _QWORD v25[6];

  v5 = v4;
  ObjectType = swift_getObjectType();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = MEMORY[0x1E0DEE9E0];
  v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v12;
  v13[3] = a3;
  v13[4] = a4;
  v13[5] = a1;
  v13[6] = v11;
  v13[7] = ObjectType;
  v25[4] = sub_1BC284338;
  v25[5] = v13;
  v25[0] = MEMORY[0x1E0C809B0];
  v25[1] = 1107296256;
  v25[2] = sub_1BC28243C;
  v25[3] = &block_descriptor_19_1;
  v14 = _Block_copy(v25);
  swift_retain();
  v15 = a1;
  swift_retain();
  swift_release();
  v16 = objc_msgSend(v5, sel_queriesForRequest_completionHandler_, v15, v14);
  _Block_release(v14);
  sub_1BC0E1D38(0, &qword_1EDA0E9E8);
  v17 = sub_1BC2B458C();

  if (!(v17 >> 62))
  {
    v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (uint64_t (*)())swift_bridgeObjectRetain();
    if (v18)
      goto LABEL_3;
LABEL_10:
    swift_bridgeObjectRelease();
    v23 = swift_allocObject();
    *(_QWORD *)(v23 + 16) = v17;
    *(_QWORD *)(v23 + 24) = a2;
    v24 = a2;
    swift_release();
    return sub_1BC284374;
  }
  swift_bridgeObjectRetain();
  result = (uint64_t (*)())sub_1BC2B52D0();
  v18 = (uint64_t)result;
  if (!result)
    goto LABEL_10;
LABEL_3:
  if (v18 >= 1)
  {
    for (i = 0; i != v18; ++i)
    {
      if ((v17 & 0xC000000000000001) != 0)
        v21 = (id)MEMORY[0x1BCCEE950](i, v17);
      else
        v21 = *(id *)(v17 + 8 * i + 32);
      v22 = v21;
      objc_msgSend(a2, sel_executeQuery_, v21);

    }
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

void sub_1BC281634(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *, uint64_t), uint64_t a5, void *a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  BOOL v35;
  unint64_t v36;
  void *v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t);
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t);
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  double *v57;
  double v58;
  uint64_t v59;
  double v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  void (*v64)(uint64_t, uint64_t, uint64_t);
  char v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  _BOOL8 v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  _QWORD *v78;
  unint64_t v79;
  void (*v80)(uint64_t, uint64_t, uint64_t);
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  unint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  _BOOL8 v90;
  uint64_t v91;
  unint64_t v92;
  char v93;
  _QWORD *v94;
  uint64_t v95;
  int v96;
  unint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  _BOOL8 v101;
  uint64_t v102;
  unint64_t v103;
  char v104;
  _QWORD *v105;
  uint64_t v106;
  int isUniquelyReferenced_nonNull_native;
  unint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  _BOOL8 v112;
  uint64_t v113;
  unint64_t v114;
  char v115;
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  id v136;
  id v137;
  uint64_t v138;
  id v139;
  uint64_t v140;
  id v141;
  uint64_t v142;
  void *v143;
  void *v144;
  void (*v145)(uint64_t, uint64_t);
  uint64_t v146;
  _QWORD v147[2];
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  void (*v151)(void *, uint64_t);
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  unint64_t v155;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  id v164;
  uint64_t v165;
  unint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  id v173;
  unint64_t v174;
  uint64_t v175;
  uint64_t v176;
  int v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  unint64_t v181;
  char v182[8];
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;

  v164 = a6;
  v150 = a5;
  v151 = (void (*)(void *, uint64_t))a4;
  v149 = a2;
  v10 = sub_1BC2B2024();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v168 = (uint64_t)v147 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v179 = (uint64_t)v147 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  v167 = (uint64_t)v147 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v178 = (uint64_t)v147 - v19;
  MEMORY[0x1E0C80A78](v18);
  v21 = (uint64_t)v147 - v20;
  sub_1BC0FC440();
  v156 = v22;
  v180 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v171 = (uint64_t)v147 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v163 = sub_1BC2B20FC();
  v162 = *(_QWORD *)(v163 - 8);
  MEMORY[0x1E0C80A78](v163);
  v160 = (char *)v147 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v161 = sub_1BC2B23F0();
  v159 = *(_QWORD *)(v161 - 8);
  v25 = MEMORY[0x1E0C80A78](v161);
  v158 = (char *)v147 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v157 = (char *)v147 - v27;
  swift_beginAccess();
  v28 = MEMORY[0x1BCCEF478](a3 + 16);
  if (!v28)
    return;
  v29 = (void *)v28;
  sub_1BC285AC4(a1, (uint64_t)v182);
  if (!v183)
  {
    sub_1BC12A654((uint64_t)v182, (uint64_t)&qword_1EDA10000, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC0E2130);
    goto LABEL_85;
  }
  sub_1BC0E7998(0, &qword_1EDA0E9B0, (uint64_t (*)(uint64_t))type metadata accessor for MedicationStatsContext, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_85:
    v151(0, v149);
    goto LABEL_86;
  }
  v147[0] = v29;
  v30 = (uint64_t *)(a7 + 16);
  v155 = v181;
  if (v181 >> 62)
    goto LABEL_99;
  if (*(_QWORD *)((v181 & 0xFFFFFFFFFFFFF8) + 0x10) == 2)
  {
    v152 = 2;
    while (1)
    {
      v31 = type metadata accessor for MedicationChartStatisticsFormatter();
      v32 = v155;
      v153 = v31;
      v33 = 0;
      v154 = v155 & 0xC000000000000001;
      v148 = v155 & 0xFFFFFFFFFFFFFF8;
      v147[1] = v155 + 32;
      v170 = v21;
      v169 = v11;
      while (1)
      {
        if (v154)
        {
          v34 = MEMORY[0x1BCCEE950](v33, v32);
          v35 = __OFADD__(v33, 1);
          v36 = v33 + 1;
          if (v35)
            break;
          goto LABEL_16;
        }
        if (v33 >= *(_QWORD *)(v148 + 16))
          goto LABEL_98;
        v34 = swift_retain();
        v35 = __OFADD__(v33, 1);
        v36 = v33 + 1;
        if (v35)
          break;
LABEL_16:
        v166 = v36;
        v37 = *(void **)(v34 + 16);
        v165 = v34;
        v177 = *(unsigned __int8 *)(v34 + 24);
        v38 = v37;
        v39 = v164;
        v40 = objc_msgSend(v164, sel_startDate);
        v41 = (uint64_t)v157;
        sub_1BC2B23A8();

        v42 = objc_msgSend(v39, sel_endDate);
        v11 = (uint64_t)v158;
        sub_1BC2B23A8();

        v43 = objc_msgSend(v39, sel_statisticsInterval);
        v44 = (uint64_t)v160;
        sub_1BC2B2078();

        v45 = sub_1BC149C08(v41, v11, v44, v38);
        (*(void (**)(uint64_t, uint64_t))(v162 + 8))(v44, v163);
        v46 = *(void (**)(uint64_t, uint64_t))(v159 + 8);
        v47 = v161;
        v46(v11, v161);
        v46(v41, v47);
        v176 = *(_QWORD *)(v45 + 16);
        if (v176)
        {
          v48 = 0;
          v49 = *(int *)(v156 + 48);
          v174 = v45 + ((*(unsigned __int8 *)(v180 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v180 + 80));
          v175 = v49;
          v11 = v169;
          v172 = v45;
          v173 = v38;
          while (1)
          {
            if (v48 >= *(_QWORD *)(v45 + 16))
            {
              __break(1u);
LABEL_89:
              __break(1u);
LABEL_90:
              __break(1u);
LABEL_91:
              __break(1u);
LABEL_92:
              __break(1u);
LABEL_93:
              __break(1u);
LABEL_94:
              __break(1u);
LABEL_95:
              __break(1u);
LABEL_96:
              __break(1u);
              goto LABEL_97;
            }
            v54 = v171;
            sub_1BC0FC574(v174 + *(_QWORD *)(v180 + 72) * v48, v171, (uint64_t (*)(_QWORD))sub_1BC0FC440);
            v55 = *(_QWORD *)(v54 + v175);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v21, v54, v10);
            v56 = *(_QWORD *)(v55 + 16);
            if (v56)
            {
              v57 = (double *)(v55 + 32);
              v58 = 0.0;
              v59 = *(_QWORD *)(v55 + 16);
              do
              {
                v60 = *v57++;
                v58 = v58 + v60;
                --v59;
              }
              while (v59);
            }
            else
            {
              v58 = 0.0;
            }
            swift_bridgeObjectRelease();
            swift_beginAccess();
            v61 = *v30;
            v62 = *(_QWORD *)(*v30 + 16);
            if ((v177 & 1) == 0)
            {
              if (!v62)
              {
                v80 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
LABEL_50:
                v106 = v178;
                v80(v178, v21, v10);
                isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                v181 = *v30;
                v108 = v181;
                *v30 = 0x8000000000000000;
                v110 = sub_1BC10826C(v106);
                v111 = *(_QWORD *)(v108 + 16);
                v112 = (v109 & 1) == 0;
                v113 = v111 + v112;
                if (__OFADD__(v111, v112))
                  goto LABEL_90;
                v21 = v109;
                if (*(_QWORD *)(v108 + 24) >= v113)
                {
                  if ((isUniquelyReferenced_nonNull_native & 1) != 0)
                  {
                    v116 = (_QWORD *)v181;
                    if ((v109 & 1) == 0)
                      goto LABEL_71;
                  }
                  else
                  {
                    sub_1BC15C390();
                    v116 = (_QWORD *)v181;
                    if ((v21 & 1) == 0)
                      goto LABEL_71;
                  }
                }
                else
                {
                  sub_1BC15B714(v113, isUniquelyReferenced_nonNull_native);
                  v114 = sub_1BC10826C(v178);
                  if ((v21 & 1) != (v115 & 1))
                  {
LABEL_103:
                    sub_1BC2B53F0();
                    __break(1u);
                    return;
                  }
                  v110 = v114;
                  v116 = (_QWORD *)v181;
                  if ((v21 & 1) == 0)
                  {
LABEL_71:
                    v116[(v110 >> 6) + 8] |= 1 << v110;
                    v80(v116[6] + *(_QWORD *)(v11 + 72) * v110, v178, v10);
                    v123 = v116[7] + 32 * v110;
                    *(double *)v123 = v58;
                    *(_QWORD *)(v123 + 8) = v56;
                    *(_QWORD *)(v123 + 16) = 0;
                    *(_QWORD *)(v123 + 24) = 0;
                    v124 = v116[2];
                    v35 = __OFADD__(v124, 1);
                    v125 = v124 + 1;
                    if (v35)
                      goto LABEL_91;
                    v116[2] = v125;
                    goto LABEL_73;
                  }
                }
                v120 = v116[7] + 32 * v110;
                *(double *)v120 = v58;
                *(_QWORD *)(v120 + 16) = 0;
                *(_QWORD *)(v120 + 24) = 0;
                *(_QWORD *)(v120 + 8) = v56;
LABEL_73:
                *v30 = (uint64_t)v116;
                swift_bridgeObjectRelease();
                v51 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
                v51(v178, v10);
                goto LABEL_21;
              }
              v79 = sub_1BC10826C(v21);
              v80 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
              if ((v81 & 1) == 0)
                goto LABEL_50;
              v82 = *(_QWORD *)(v61 + 56) + 32 * v79;
              v83 = *(_QWORD *)(v82 + 16);
              v11 = *(_QWORD *)(v82 + 24);
              v84 = v167;
              v80(v167, v21, v10);
              v85 = swift_isUniquelyReferenced_nonNull_native();
              v181 = *v30;
              v86 = v181;
              *v30 = 0x8000000000000000;
              v88 = sub_1BC10826C(v84);
              v89 = *(_QWORD *)(v86 + 16);
              v90 = (v87 & 1) == 0;
              v91 = v89 + v90;
              if (__OFADD__(v89, v90))
                goto LABEL_94;
              v21 = v87;
              if (*(_QWORD *)(v86 + 24) >= v91)
              {
                if ((v85 & 1) != 0)
                {
                  v94 = (_QWORD *)v181;
                  if ((v87 & 1) == 0)
                    goto LABEL_79;
                }
                else
                {
                  sub_1BC15C390();
                  v94 = (_QWORD *)v181;
                  if ((v21 & 1) == 0)
                    goto LABEL_79;
                }
              }
              else
              {
                sub_1BC15B714(v91, v85);
                v92 = sub_1BC10826C(v167);
                if ((v21 & 1) != (v93 & 1))
                  goto LABEL_103;
                v88 = v92;
                v94 = (_QWORD *)v181;
                if ((v21 & 1) == 0)
                {
LABEL_79:
                  v94[(v88 >> 6) + 8] |= 1 << v88;
                  v80(v94[6] + *(_QWORD *)(v169 + 72) * v88, v167, v10);
                  v130 = v94[7] + 32 * v88;
                  *(double *)v130 = v58;
                  *(_QWORD *)(v130 + 8) = v56;
                  *(_QWORD *)(v130 + 16) = v83;
                  *(_QWORD *)(v130 + 24) = v11;
                  v131 = v94[2];
                  v35 = __OFADD__(v131, 1);
                  v132 = v131 + 1;
                  if (v35)
                    goto LABEL_96;
                  v94[2] = v132;
                  goto LABEL_81;
                }
              }
              v122 = v94[7] + 32 * v88;
              *(double *)v122 = v58;
              *(_QWORD *)(v122 + 8) = v56;
              *(_QWORD *)(v122 + 16) = v83;
              *(_QWORD *)(v122 + 24) = v11;
LABEL_81:
              *v30 = (uint64_t)v94;
              swift_bridgeObjectRelease();
              v11 = v169;
              v51 = *(void (**)(uint64_t, uint64_t))(v169 + 8);
              v129 = &v184;
              goto LABEL_82;
            }
            if (v62)
            {
              v63 = sub_1BC10826C(v21);
              v64 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
              if ((v65 & 1) != 0)
              {
                v66 = (uint64_t *)(*(_QWORD *)(v61 + 56) + 32 * v63);
                v67 = *v66;
                v11 = v66[1];
                v68 = v168;
                v64(v168, v21, v10);
                v69 = swift_isUniquelyReferenced_nonNull_native();
                v181 = *v30;
                v70 = v181;
                *v30 = 0x8000000000000000;
                v72 = sub_1BC10826C(v68);
                v73 = *(_QWORD *)(v70 + 16);
                v74 = (v71 & 1) == 0;
                v75 = v73 + v74;
                if (__OFADD__(v73, v74))
                  goto LABEL_93;
                v21 = v71;
                if (*(_QWORD *)(v70 + 24) >= v75)
                {
                  if ((v69 & 1) != 0)
                  {
                    v78 = (_QWORD *)v181;
                    if ((v71 & 1) == 0)
                      goto LABEL_75;
                  }
                  else
                  {
                    sub_1BC15C390();
                    v78 = (_QWORD *)v181;
                    if ((v21 & 1) == 0)
                      goto LABEL_75;
                  }
                }
                else
                {
                  sub_1BC15B714(v75, v69);
                  v76 = sub_1BC10826C(v168);
                  if ((v21 & 1) != (v77 & 1))
                    goto LABEL_103;
                  v72 = v76;
                  v78 = (_QWORD *)v181;
                  if ((v21 & 1) == 0)
                  {
LABEL_75:
                    v78[(v72 >> 6) + 8] |= 1 << v72;
                    v64(v78[6] + *(_QWORD *)(v169 + 72) * v72, v168, v10);
                    v126 = v78[7] + 32 * v72;
                    *(_QWORD *)v126 = v67;
                    *(_QWORD *)(v126 + 8) = v11;
                    *(double *)(v126 + 16) = v58;
                    *(_QWORD *)(v126 + 24) = v56;
                    v127 = v78[2];
                    v35 = __OFADD__(v127, 1);
                    v128 = v127 + 1;
                    if (v35)
                      goto LABEL_95;
                    v78[2] = v128;
LABEL_77:
                    *v30 = (uint64_t)v78;
                    swift_bridgeObjectRelease();
                    v11 = v169;
                    v51 = *(void (**)(uint64_t, uint64_t))(v169 + 8);
                    v129 = &v185;
LABEL_82:
                    v52 = *(v129 - 32);
                    goto LABEL_20;
                  }
                }
                v121 = v78[7] + 32 * v72;
                *(_QWORD *)v121 = v67;
                *(_QWORD *)(v121 + 8) = v11;
                *(double *)(v121 + 16) = v58;
                *(_QWORD *)(v121 + 24) = v56;
                goto LABEL_77;
              }
            }
            else
            {
              v64 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
            }
            v95 = v179;
            v64(v179, v21, v10);
            v96 = swift_isUniquelyReferenced_nonNull_native();
            v181 = *v30;
            v97 = v181;
            *v30 = 0x8000000000000000;
            v99 = sub_1BC10826C(v95);
            v100 = *(_QWORD *)(v97 + 16);
            v101 = (v98 & 1) == 0;
            v102 = v100 + v101;
            if (__OFADD__(v100, v101))
              goto LABEL_89;
            v21 = v98;
            if (*(_QWORD *)(v97 + 24) >= v102)
            {
              if ((v96 & 1) != 0)
              {
                v105 = (_QWORD *)v181;
                if ((v98 & 1) == 0)
                  goto LABEL_57;
              }
              else
              {
                sub_1BC15C390();
                v105 = (_QWORD *)v181;
                if ((v21 & 1) == 0)
                  goto LABEL_57;
              }
            }
            else
            {
              sub_1BC15B714(v102, v96);
              v103 = sub_1BC10826C(v179);
              if ((v21 & 1) != (v104 & 1))
                goto LABEL_103;
              v99 = v103;
              v105 = (_QWORD *)v181;
              if ((v21 & 1) == 0)
              {
LABEL_57:
                v105[(v99 >> 6) + 8] |= 1 << v99;
                v64(v105[6] + *(_QWORD *)(v11 + 72) * v99, v179, v10);
                v117 = v105[7] + 32 * v99;
                *(_QWORD *)v117 = 0;
                *(_QWORD *)(v117 + 8) = 0;
                *(double *)(v117 + 16) = v58;
                *(_QWORD *)(v117 + 24) = v56;
                v118 = v105[2];
                v35 = __OFADD__(v118, 1);
                v119 = v118 + 1;
                if (v35)
                  goto LABEL_92;
                v105[2] = v119;
                goto LABEL_19;
              }
            }
            v50 = v105[7] + 32 * v99;
            *(_QWORD *)v50 = 0;
            *(_QWORD *)(v50 + 8) = 0;
            *(double *)(v50 + 16) = v58;
            *(_QWORD *)(v50 + 24) = v56;
LABEL_19:
            *v30 = (uint64_t)v105;
            swift_bridgeObjectRelease();
            v51 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
            v52 = v179;
LABEL_20:
            v51(v52, v10);
LABEL_21:
            v21 = v170;
            v45 = v172;
            v53 = v173;
            ++v48;
            swift_endAccess();
            v51(v21, v10);
            if (v48 == v176)
            {

              goto LABEL_9;
            }
          }
        }

LABEL_9:
        swift_bridgeObjectRelease();
        swift_release();
        v33 = v166;
        v32 = v155;
        if (v166 == v152)
          goto LABEL_101;
      }
LABEL_97:
      __break(1u);
LABEL_98:
      __break(1u);
LABEL_99:
      swift_bridgeObjectRetain();
      v133 = sub_1BC2B52D0();
      swift_bridgeObjectRelease();
      if (v133 != 2)
        break;
      swift_bridgeObjectRetain();
      v134 = sub_1BC2B52D0();
      swift_bridgeObjectRelease();
      v152 = v134;
      if (!v134)
      {
LABEL_101:
        swift_bridgeObjectRelease();
        swift_beginAccess();
        v135 = *v30;
        swift_bridgeObjectRetain();
        v136 = v164;
        v137 = objc_msgSend(v164, sel_startDate);
        v138 = (uint64_t)v157;
        sub_1BC2B23A8();

        v139 = objc_msgSend(v136, sel_endDate);
        v140 = (uint64_t)v158;
        sub_1BC2B23A8();

        v141 = objc_msgSend(v136, sel_statisticsInterval);
        v142 = (uint64_t)v160;
        sub_1BC2B2078();

        v143 = (void *)v147[0];
        v144 = sub_1BC282714(v135, v138, v140, v142);
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v162 + 8))(v142, v163);
        v145 = *(void (**)(uint64_t, uint64_t))(v159 + 8);
        v146 = v161;
        v145(v140, v161);
        v145(v138, v146);
        v151(v144, v149);

        v29 = v144;
        goto LABEL_86;
      }
    }
  }
  swift_bridgeObjectRelease();
  v29 = (void *)v147[0];
  v151(0, v149);
LABEL_86:

}

uint64_t sub_1BC28243C(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(__int128 *, void *);
  id v6;
  __int128 v8;
  __int128 v9;

  v5 = *(void (**)(__int128 *, void *))(a1 + 32);
  if (a2)
  {
    *((_QWORD *)&v9 + 1) = swift_getObjectType();
    *(_QWORD *)&v8 = a2;
  }
  else
  {
    v8 = 0u;
    v9 = 0u;
  }
  swift_retain();
  swift_unknownObjectRetain();
  v6 = a3;
  v5(&v8, a3);
  swift_release();

  return sub_1BC12A654((uint64_t)&v8, (uint64_t)&qword_1EDA10000, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC0E2130);
}

uint64_t sub_1BC2824E4(unint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t i;
  id v7;
  void *v8;

  if (!(a1 >> 62))
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v4)
      goto LABEL_3;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  result = sub_1BC2B52D0();
  v4 = result;
  if (!result)
    return swift_bridgeObjectRelease();
LABEL_3:
  if (v4 >= 1)
  {
    for (i = 0; i != v4; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v7 = (id)MEMORY[0x1BCCEE950](i, a1);
      else
        v7 = *(id *)(a1 + 8 * i + 32);
      v8 = v7;
      objc_msgSend(a2, sel_stopQuery_, v7);

    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void sub_1BC2826BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  id v6;

  if (a2)
    v5 = sub_1BC2B21D4();
  else
    v5 = 0;
  v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);

}

void *sub_1BC282714(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  void *v13;
  _QWORD v15[5];

  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F638]), sel_init);
  v7 = v6;
  if (v6)
  {
    sub_1BC2B2264();
    objc_msgSend(v7, sel_setStartDate_);
    v8 = v7;
    sub_1BC2B2264();
    objc_msgSend(v8, sel_setEndDate_);

  }
  MEMORY[0x1E0C80A78](v6);
  v15[2] = a4;
  v15[4] = sub_1BC2832B0(a1, (void (*)(uint64_t, _QWORD, _QWORD, double, double))sub_1BC2859DC, (uint64_t)v15);
  sub_1BC0E7998(0, &qword_1EDA0E9B8, (uint64_t (*)(uint64_t))type metadata accessor for MedicationChartCodableData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC285B80(&qword_1EDA0E9C0, (unint64_t *)&unk_1EDA0E818, (uint64_t)&protocol conformance descriptor for MedicationChartCodableData, MEMORY[0x1E0DEAF10]);
  v9 = sub_1BC2B1F88();
  v11 = v10;
  swift_bridgeObjectRelease();
  if (v7)
  {
    v12 = v7;
    v13 = (void *)sub_1BC2B2240();
    objc_msgSend(v12, sel_setQueryDataObject_, v13);
    sub_1BC2859E4(v9, v11);

  }
  else
  {
    sub_1BC2859E4(v9, v11);
  }
  return v7;
}

uint64_t sub_1BC282974@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>)
{
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;

  sub_1BC2B200C();
  v12 = (int *)type metadata accessor for MedicationChartCodableData();
  sub_1BC2B1FF4();
  v13 = a4 + v12[8];
  v14 = sub_1BC2B20FC();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v13, a3, v14);
  *(double *)(a4 + v12[6]) = a5;
  *(double *)(a4 + v12[7]) = a6;
  *(_QWORD *)(a4 + v12[9]) = a1;
  *(_QWORD *)(a4 + v12[10]) = a2;
  return result;
}

id MedicationChartDataSource.__allocating_init(displayType:healthStore:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithDisplayType_healthStore_, a1, a2);

  return v5;
}

void MedicationChartDataSource.init(displayType:healthStore:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id MedicationChartDataSource.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void MedicationChartDataSource.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id MedicationChartDataSource.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationChartDataSource();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_1BC282C2C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BC108EF0();
  v2 = sub_1BC2B5300();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1BC0FC574(v6, (uint64_t)&v15, (uint64_t (*)(_QWORD))sub_1BC108F58);
    v7 = v15;
    v8 = v16;
    result = sub_1BC282D5C(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_1BC0FC3C4(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BC282D5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC2B5450();
  sub_1BC2B44D8();
  v4 = sub_1BC2B548C();
  return sub_1BC282DC0(a1, a2, v4);
}

unint64_t sub_1BC282DC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v15;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (sub_1BC2B53CC() & 1) == 0)
    {
      v12 = ~v5;
      i = (i + 1) & v12;
      if (((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
      {
        v13 = (_QWORD *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (sub_1BC2B53CC() & 1) == 0)
        {
          for (i = (i + 1) & v12; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v12)
          {
            v15 = (_QWORD *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2)
              break;
            if ((sub_1BC2B53CC() & 1) != 0)
              break;
          }
        }
      }
    }
  }
  return i;
}

uint64_t sub_1BC282F08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  int *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  objc_class *v24;
  char *v25;
  void *v26;
  char *v27;
  id v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  _QWORD v31[2];
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  void *v34;
  int *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  objc_super v46;
  _QWORD v47[6];
  uint64_t v48;

  v39 = sub_1BC2B20FC();
  v44 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v43 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_1BC2B23F0();
  v6 = *(_QWORD *)(v38 - 8);
  v7 = MEMORY[0x1E0C80A78](v38);
  v37 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v45 = (char *)v31 - v9;
  result = MEMORY[0x1E0DEE9D8];
  v48 = MEMORY[0x1E0DEE9D8];
  v11 = *(_QWORD *)(a1 + 16);
  if (v11)
  {
    v31[1] = v2;
    v12 = type metadata accessor for MedicationChartCodableData();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = a1 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    v34 = *(void **)(a2 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationChartDataSource_medication);
    v35 = (int *)v12;
    v33 = *(_QWORD *)(v13 + 72);
    v36 = v6;
    v32 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v31[0] = a1;
    swift_bridgeObjectRetain();
    v15 = v37;
    v16 = v39;
    do
    {
      v42 = v11;
      v17 = v38;
      v18 = v32;
      v32(v45, v14, v38);
      v19 = v35;
      v18(v15, v14 + v35[5], v17);
      v20 = *(_QWORD *)(v14 + v19[6]);
      v21 = *(_QWORD *)(v14 + v19[7]);
      v22 = *(void (**)(char *, uint64_t, uint64_t))(v44 + 16);
      v22(v43, v14 + v19[8], v16);
      v23 = *(_QWORD *)(v14 + v19[10]);
      v40 = *(_QWORD *)(v14 + v19[9]);
      v41 = v23;
      v24 = (objc_class *)type metadata accessor for MedicationChartPoint(0);
      v25 = (char *)objc_allocWithZone(v24);
      v47[3] = sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
      v47[4] = MEMORY[0x1E0D2CCB8];
      v26 = v34;
      v47[0] = v34;
      *(_QWORD *)&v25[OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_takenCount] = v20;
      *(_QWORD *)&v25[OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_skippedCount] = v21;
      v18(&v25[OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_startDate], (uint64_t)v45, v17);
      v18(&v25[OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_endDate], (uint64_t)v15, v17);
      v27 = v43;
      v22(&v25[OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_statisticsInterval], (uint64_t)v43, v16);
      sub_1BC0E79F0((uint64_t)v47, (uint64_t)&v25[OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_medication]);
      *(_QWORD *)&v25[OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_windowTakenCount] = v40;
      *(_QWORD *)&v25[OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_windowSkippedCount] = v41;
      v46.receiver = v25;
      v46.super_class = v24;
      v28 = v26;
      objc_msgSendSuper2(&v46, sel_init);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v47);
      (*(void (**)(char *, uint64_t))(v44 + 8))(v27, v16);
      v29 = *(void (**)(char *, uint64_t))(v36 + 8);
      v29(v15, v17);
      v30 = ((uint64_t (*)(char *, uint64_t))v29)(v45, v17);
      MEMORY[0x1BCCEDCF0](v30);
      if (*(_QWORD *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1BC2B45C8();
      v14 += v33;
      sub_1BC2B4604();
      sub_1BC2B45A4();
      v11 = v42 - 1;
    }
    while (v42 != 1);
    swift_bridgeObjectRelease();
    return v48;
  }
  return result;
}

uint64_t sub_1BC2832B0(uint64_t a1, void (*a2)(uint64_t, _QWORD, _QWORD, double, double), uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  int64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t, _QWORD, _QWORD, double, double);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v61 = a2;
  v62 = a3;
  sub_1BC285A28();
  v60 = v5;
  v6 = MEMORY[0x1E0C80A78](v5);
  v59 = (uint64_t)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v58 = (char *)&v49 - v9;
  MEMORY[0x1E0C80A78](v8);
  v57 = (char *)&v49 - v10;
  v11 = type metadata accessor for MedicationChartCodableData();
  v56 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = MEMORY[0x1E0DEE9D8];
  if (!v14)
    return v15;
  v49 = v3;
  v65 = MEMORY[0x1E0DEE9D8];
  sub_1BC125EC0(0, v14, 0);
  result = sub_1BC2644A0(a1);
  v18 = result;
  v19 = 0;
  v20 = a1 + 64;
  v50 = a1 + 80;
  v51 = v14;
  v54 = v13;
  v55 = a1;
  v52 = v17;
  v53 = a1 + 64;
  v21 = (uint64_t)v57;
  while ((v18 & 0x8000000000000000) == 0 && v18 < 1 << *(_BYTE *)(a1 + 32))
  {
    v24 = (unint64_t)v18 >> 6;
    if ((*(_QWORD *)(v20 + 8 * ((unint64_t)v18 >> 6)) & (1 << v18)) == 0)
      goto LABEL_25;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v17)
      goto LABEL_26;
    v63 = v19;
    v64 = 1 << v18;
    v25 = v60;
    v26 = (uint64_t *)(v21 + *(int *)(v60 + 48));
    v27 = *(_QWORD *)(a1 + 48);
    v28 = sub_1BC2B2024();
    v29 = *(_QWORD *)(v28 - 8);
    v30 = v27 + *(_QWORD *)(v29 + 72) * v18;
    v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16);
    v31(v21, v30, v28);
    v32 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 32 * v18);
    v33 = *v32;
    v34 = v32[1];
    v35 = v32[2];
    v36 = v32[3];
    *v26 = *v32;
    v26[1] = v34;
    v26[2] = v35;
    v26[3] = v36;
    v37 = (uint64_t)v58;
    v31((uint64_t)v58, v21, v28);
    v38 = (_QWORD *)(v37 + *(int *)(v25 + 48));
    *v38 = v33;
    v38[1] = v34;
    v38[2] = v35;
    v38[3] = v36;
    v39 = v59;
    sub_1BC0F1B94(v37, v59, (uint64_t (*)(_QWORD))sub_1BC285A28);
    sub_1BC0E8594(v21, (uint64_t (*)(_QWORD))sub_1BC285A28);
    v40 = *(int *)(v25 + 48);
    v41 = (uint64_t)v54;
    v61(v39, *(_QWORD *)(v39 + v40 + 8), *(_QWORD *)(v39 + v40 + 24), *(double *)(v39 + v40), *(double *)(v39 + v40 + 16));
    sub_1BC0E8594(v39, (uint64_t (*)(_QWORD))sub_1BC285A28);
    v15 = v65;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1BC125EC0(0, *(_QWORD *)(v15 + 16) + 1, 1);
      v15 = v65;
    }
    v43 = *(_QWORD *)(v15 + 16);
    v42 = *(_QWORD *)(v15 + 24);
    a1 = v55;
    if (v43 >= v42 >> 1)
    {
      sub_1BC125EC0(v42 > 1, v43 + 1, 1);
      v15 = v65;
    }
    *(_QWORD *)(v15 + 16) = v43 + 1;
    result = sub_1BC0F1B94(v41, v15+ ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80))+ *(_QWORD *)(v56 + 72) * v43, (uint64_t (*)(_QWORD))type metadata accessor for MedicationChartCodableData);
    v22 = 1 << *(_BYTE *)(a1 + 32);
    if (v18 >= v22)
      goto LABEL_27;
    v20 = v53;
    v44 = *(_QWORD *)(v53 + 8 * v24);
    if ((v44 & v64) == 0)
      goto LABEL_28;
    LODWORD(v17) = v52;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v52)
      goto LABEL_29;
    v45 = v44 & (-2 << (v18 & 0x3F));
    if (v45)
    {
      v22 = __clz(__rbit64(v45)) | v18 & 0xFFFFFFFFFFFFFFC0;
      v23 = v51;
    }
    else
    {
      v46 = v24 + 1;
      v47 = (unint64_t)(v22 + 63) >> 6;
      v23 = v51;
      if (v24 + 1 < v47)
      {
        v48 = *(_QWORD *)(v53 + 8 * v46);
        if (v48)
        {
LABEL_22:
          v22 = __clz(__rbit64(v48)) + (v46 << 6);
        }
        else
        {
          while (v47 - 2 != v24)
          {
            v48 = *(_QWORD *)(v50 + 8 * v24++);
            if (v48)
            {
              v46 = v24 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    v19 = v63 + 1;
    v18 = v22;
    if (v63 + 1 == v23)
      return v15;
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1BC2836B0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7461447472617473 && a2 == 0xE900000000000065;
  if (v2 || (sub_1BC2B53CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65746144646E65 && a2 == 0xE700000000000000 || (sub_1BC2B53CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x756F436E656B6174 && a2 == 0xEA0000000000746ELL || (sub_1BC2B53CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4364657070696B73 && a2 == 0xEC000000746E756FLL || (sub_1BC2B53CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001BC2CDE40 || (sub_1BC2B53CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BC2CDE60 || (sub_1BC2B53CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001BC2CDE80)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_1BC2B53CC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

id sub_1BC2839AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  NSObject *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  void *v43;
  char *v44;
  void *v45;
  void *v46;
  id v47;
  dispatch_group_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD aBlock[7];

  v55 = a3;
  v14 = sub_1BC2B20FC();
  v53 = *(_QWORD *)(v14 - 8);
  v54 = v14;
  MEMORY[0x1E0C80A78](v14);
  v51 = v15;
  v52 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a6;
  v16[3] = a7;
  v16[4] = a8;
  v17 = *(void **)&a5[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationChartDataSource_medication];
  swift_retain();
  swift_retain();
  v49 = a8;
  v18 = objc_msgSend(v17, sel_semanticIdentifier);
  v19 = objc_msgSend(v18, sel_stringValue);

  if (!v19)
  {
    sub_1BC2B4460();
    v19 = (id)sub_1BC2B4430();
    swift_bridgeObjectRelease();
  }
  v20 = (void *)objc_opt_self();
  v21 = objc_msgSend(v20, sel_predicateForMedicationDoseEventWithMedicationIdentifier_, v19);

  v22 = (void *)sub_1BC2B2360();
  v23 = (void *)sub_1BC2B2360();
  v24 = objc_msgSend(v20, sel_predicateForSamplesWithStartDate_endDate_options_, v22, v23, 0);

  v25 = objc_msgSend(v20, sel_predicateForMedicationDoseEventWithStatus_, a4);
  sub_1BC0E2130(0, (unint64_t *)&qword_1EDA0FEF0, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1BC2BB4D0;
  *(_QWORD *)(v26 + 32) = v24;
  *(_QWORD *)(v26 + 40) = v21;
  *(_QWORD *)(v26 + 48) = v25;
  aBlock[0] = v26;
  sub_1BC2B45A4();
  sub_1BC0E1D38(0, &qword_1EDA0E9D0);
  v50 = a4;
  v27 = v24;
  v28 = v21;
  v29 = v25;
  v30 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  v31 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v30);

  v32 = a1;
  v33 = v55;
  v34 = sub_1BC280B00(v32, v55, v31);
  if (v34)
  {
    v35 = v33;
    v49 = v31;
    v37 = v52;
    v36 = v53;
    v38 = v54;
    (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v52, v35, v54);
    v39 = (*(unsigned __int8 *)(v36 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
    v40 = (v51 + v39 + 7) & 0xFFFFFFFFFFFFFFF8;
    v41 = swift_allocObject();
    *(_QWORD *)(v41 + 16) = a5;
    (*(void (**)(unint64_t, char *, uint64_t))(v36 + 32))(v41 + v39, v37, v38);
    *(_QWORD *)(v41 + v40) = v50;
    v42 = (_QWORD *)(v41 + ((v40 + 15) & 0xFFFFFFFFFFFFFFF8));
    *v42 = sub_1BC285E20;
    v42[1] = v16;
    aBlock[4] = sub_1BC285C90;
    aBlock[5] = v41;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BC280A78;
    aBlock[3] = &block_descriptor_60_0;
    v43 = _Block_copy(aBlock);
    v44 = a5;
    swift_retain();
    swift_release();
    objc_msgSend(v34, sel_setInitialResultsHandler_, v43);
    _Block_release(v43);
    swift_release();

  }
  else
  {
    type metadata accessor for HKError(0);
    aBlock[0] = 0;
    sub_1BC282C2C(MEMORY[0x1E0DEE9D8]);
    sub_1BC0E519C(&qword_1EF3F8460, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_1BC2B882C);
    sub_1BC2B21BC();
    v45 = (void *)aBlock[6];
    swift_beginAccess();
    v46 = *(void **)(a7 + 16);
    *(_QWORD *)(a7 + 16) = v45;
    v47 = v45;

    dispatch_group_leave(v49);
    swift_release();

  }
  return v34;
}

id sub_1BC283E30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, void *);
  void *v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  NSObject *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  void (**v42)(uint64_t, void *);
  void *v43;
  char *v44;
  void *v45;
  void *v46;
  id v47;
  dispatch_group_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD aBlock[7];

  v55 = a3;
  v14 = sub_1BC2B20FC();
  v53 = *(_QWORD *)(v14 - 8);
  v54 = v14;
  MEMORY[0x1E0C80A78](v14);
  v51 = v15;
  v52 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (void (*)(uint64_t, void *))swift_allocObject();
  *((_QWORD *)v16 + 2) = a6;
  *((_QWORD *)v16 + 3) = a7;
  *((_QWORD *)v16 + 4) = a8;
  v17 = *(void **)&a5[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationChartDataSource_medication];
  swift_retain();
  swift_retain();
  v49 = a8;
  v18 = objc_msgSend(v17, sel_semanticIdentifier);
  v19 = objc_msgSend(v18, sel_stringValue);

  if (!v19)
  {
    sub_1BC2B4460();
    v19 = (id)sub_1BC2B4430();
    swift_bridgeObjectRelease();
  }
  v20 = (void *)objc_opt_self();
  v21 = objc_msgSend(v20, sel_predicateForMedicationDoseEventWithMedicationIdentifier_, v19);

  v22 = (void *)sub_1BC2B2360();
  v23 = (void *)sub_1BC2B2360();
  v24 = objc_msgSend(v20, sel_predicateForSamplesWithStartDate_endDate_options_, v22, v23, 0);

  v25 = objc_msgSend(v20, sel_predicateForMedicationDoseEventWithStatus_, a4);
  sub_1BC0E2130(0, (unint64_t *)&qword_1EDA0FEF0, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1BC2BB4D0;
  *(_QWORD *)(v26 + 32) = v24;
  *(_QWORD *)(v26 + 40) = v21;
  *(_QWORD *)(v26 + 48) = v25;
  aBlock[0] = v26;
  sub_1BC2B45A4();
  sub_1BC0E1D38(0, &qword_1EDA0E9D0);
  v50 = a4;
  v27 = v24;
  v28 = v21;
  v29 = v25;
  v30 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  v31 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v30);

  v32 = a1;
  v33 = v55;
  v34 = sub_1BC280B00(v32, v55, v31);
  if (v34)
  {
    v35 = v33;
    v49 = v31;
    v37 = v52;
    v36 = v53;
    v38 = v54;
    (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v52, v35, v54);
    v39 = (*(unsigned __int8 *)(v36 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
    v40 = (v51 + v39 + 7) & 0xFFFFFFFFFFFFFFF8;
    v41 = swift_allocObject();
    *(_QWORD *)(v41 + 16) = a5;
    (*(void (**)(unint64_t, char *, uint64_t))(v36 + 32))(v41 + v39, v37, v38);
    *(_QWORD *)(v41 + v40) = v50;
    v42 = (void (**)(uint64_t, void *))(v41 + ((v40 + 15) & 0xFFFFFFFFFFFFFFF8));
    *v42 = sub_1BC285C70;
    v42[1] = v16;
    aBlock[4] = sub_1BC285C90;
    aBlock[5] = v41;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BC280A78;
    aBlock[3] = &block_descriptor_50;
    v43 = _Block_copy(aBlock);
    v44 = a5;
    swift_retain();
    swift_release();
    objc_msgSend(v34, sel_setInitialResultsHandler_, v43);
    _Block_release(v43);
    swift_release();

  }
  else
  {
    type metadata accessor for HKError(0);
    aBlock[0] = 0;
    sub_1BC282C2C(MEMORY[0x1E0DEE9D8]);
    sub_1BC0E519C(&qword_1EF3F8460, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_1BC2B882C);
    sub_1BC2B21BC();
    v45 = (void *)aBlock[6];
    swift_beginAccess();
    v46 = *(void **)(a7 + 16);
    *(_QWORD *)(a7 + 16) = v45;
    v47 = v45;

    dispatch_group_leave(v49);
    swift_release();

  }
  return v34;
}

uint64_t sub_1BC2842B4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC2842D8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC2842FC()
{
  uint64_t v0;

  swift_release();
  swift_release();

  swift_release();
  return swift_deallocObject();
}

void sub_1BC284338(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BC281634(a1, a2, *(_QWORD *)(v2 + 16), *(void (**)(void *, uint64_t))(v2 + 24), *(_QWORD *)(v2 + 32), *(void **)(v2 + 40), *(_QWORD *)(v2 + 48));
}

uint64_t sub_1BC284348()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1BC284374()
{
  uint64_t v0;

  return sub_1BC2824E4(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1BC28437C(void *a1, char *a2, void (**a3)(const void *, uint64_t, void *))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  NSObject *v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  NSObject *v24;
  id v25;
  void (*v26)(char *, uint64_t);
  void (*v27)(char *, uint64_t);
  id v28;
  id v29;
  id v30;
  NSObject *v31;
  uint64_t v32;
  char *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  void *v39;
  _QWORD *v40;
  uint64_t v41;
  void *v42;
  char *v43;
  char *v44;
  uint64_t (*v45)(uint64_t);
  char *v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  void *v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  _QWORD *v61;
  NSObject *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t);
  void (**v68)(const void *, uint64_t, void *);
  void *v69;
  void *v70;
  void *v71;
  uint64_t v73;
  id v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  void (**v84)(const void *, uint64_t, void *);
  uint64_t v85;
  dispatch_group_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  char *v90;
  __int128 aBlock;
  __int128 v92;
  uint64_t (*v93)();
  _QWORD *v94;
  _QWORD v95[3];
  uint64_t v96;
  void *v97;

  v90 = a2;
  v5 = sub_1BC2B42E0();
  v82 = *(_QWORD *)(v5 - 8);
  v83 = v5;
  MEMORY[0x1E0C80A78](v5);
  v81 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = sub_1BC2B4304();
  v79 = *(_QWORD *)(v80 - 8);
  MEMORY[0x1E0C80A78](v80);
  v78 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = sub_1BC2B42EC();
  v76 = *(_QWORD *)(v77 - 8);
  MEMORY[0x1E0C80A78](v77);
  v75 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC2B20FC();
  v88 = *(_QWORD **)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BC2B23F0();
  v87 = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v73 - v16;
  v18 = swift_allocObject();
  v84 = a3;
  v85 = v18;
  *(_QWORD *)(v18 + 16) = a3;
  _Block_copy(a3);
  v86 = dispatch_group_create();
  v19 = swift_allocObject();
  v19[2].isa = 0;
  v89 = swift_allocObject();
  *(_QWORD *)(v89 + 16) = 0;
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = 0;
  v21 = objc_msgSend(a1, sel_startDate);
  sub_1BC2B23A8();

  v22 = objc_msgSend(a1, sel_endDate);
  sub_1BC2B23A8();

  v23 = objc_msgSend(a1, sel_statisticsInterval);
  sub_1BC2B2078();

  swift_retain();
  swift_retain();
  v24 = v86;
  v25 = sub_1BC2839AC((uint64_t)v17, (uint64_t)v15, (uint64_t)v11, 4, v90, (uint64_t)v19, v20, v24);

  swift_release();
  v86 = v19;
  swift_release();
  v26 = (void (*)(char *, uint64_t))v88[1];
  v88 = (_QWORD *)v9;
  v26(v11, v9);
  v27 = *(void (**)(char *, uint64_t))(v87 + 8);
  v27(v15, v12);
  v87 = v12;
  v27(v17, v12);
  if (!v25)
  {
    aBlock = 0u;
    v92 = 0u;
    type metadata accessor for HKError(0);
    v95[0] = 0;
    sub_1BC282C2C(MEMORY[0x1E0DEE9D8]);
    sub_1BC0E519C(&qword_1EF3F8460, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_1BC2B882C);
    sub_1BC2B21BC();
    v52 = v97;
    sub_1BC285AC4((uint64_t)&aBlock, (uint64_t)v95);
    v53 = v96;
    if (v96)
    {
      v54 = __swift_project_boxed_opaque_existential_0(v95, v96);
      v55 = *(_QWORD *)(v53 - 8);
      MEMORY[0x1E0C80A78](v54);
      v57 = (char *)&v73 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v55 + 16))(v57);
      v58 = sub_1BC2B53C0();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v57, v53);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v95);
    }
    else
    {
      v58 = 0;
    }
    v68 = v84;
    v69 = (void *)sub_1BC2B21D4();
    v68[2](v68, v58, v69);

    swift_unknownObjectRelease();
    sub_1BC12A654((uint64_t)&aBlock, (uint64_t)&qword_1EDA10000, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC0E2130);
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    return MEMORY[0x1E0DEE9D8];
  }
  v74 = v25;
  v28 = objc_msgSend(a1, sel_startDate);
  sub_1BC2B23A8();

  v29 = objc_msgSend(a1, sel_endDate);
  sub_1BC2B23A8();

  v30 = objc_msgSend(a1, sel_statisticsInterval);
  sub_1BC2B2078();

  swift_retain();
  v31 = v24;
  v32 = v89;
  swift_retain();
  v33 = v90;
  v34 = sub_1BC283E30((uint64_t)v17, (uint64_t)v15, (uint64_t)v11, 5, v90, v32, v20, v31);
  swift_release();
  swift_release();

  v26(v11, (uint64_t)v88);
  v35 = v87;
  v27(v15, v87);
  v27(v17, v35);
  if (!v34)
  {
    aBlock = 0u;
    v92 = 0u;
    type metadata accessor for HKError(0);
    v95[0] = 0;
    sub_1BC282C2C(MEMORY[0x1E0DEE9D8]);
    sub_1BC0E519C(&qword_1EF3F8460, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_1BC2B882C);
    sub_1BC2B21BC();
    v59 = v97;
    sub_1BC285AC4((uint64_t)&aBlock, (uint64_t)v95);
    v60 = v96;
    if (v96)
    {
      v61 = __swift_project_boxed_opaque_existential_0(v95, v96);
      v62 = v31;
      v63 = *(_QWORD *)(v60 - 8);
      MEMORY[0x1E0C80A78](v61);
      v65 = (char *)&v73 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v63 + 16))(v65);
      v66 = sub_1BC2B53C0();
      v67 = *(void (**)(char *, uint64_t))(v63 + 8);
      v31 = v62;
      v67(v65, v60);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v95);
    }
    else
    {
      v66 = 0;
    }
    v70 = v74;
    v71 = (void *)sub_1BC2B21D4();
    v84[2](v84, v66, v71);

    swift_unknownObjectRelease();
    sub_1BC12A654((uint64_t)&aBlock, (uint64_t)&qword_1EDA10000, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC0E2130);
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    return MEMORY[0x1E0DEE9D8];
  }
  v88 = v34;
  dispatch_group_enter(v31);
  dispatch_group_enter(v31);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FFF0);
  v36 = v76;
  v37 = v75;
  v38 = v77;
  (*(void (**)(char *, _QWORD, uint64_t))(v76 + 104))(v75, *MEMORY[0x1E0DEF530], v77);
  v39 = (void *)sub_1BC2B4A30();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v38);
  v40 = (_QWORD *)swift_allocObject();
  v41 = v85;
  v40[2] = v86;
  v40[3] = v32;
  v40[4] = v20;
  v40[5] = v33;
  v40[6] = sub_1BC285ABC;
  v40[7] = v41;
  v93 = sub_1BC285B6C;
  v94 = v40;
  *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v92 = sub_1BC1AEAE4;
  *((_QWORD *)&v92 + 1) = &block_descriptor_41;
  v42 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  v43 = v33;
  swift_retain();
  v44 = v78;
  sub_1BC2B42F8();
  v95[0] = MEMORY[0x1E0DEE9D8];
  v45 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1BC0E519C((unint64_t *)&qword_1EDA0FFC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  v90 = (char *)v20;
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0FFD0, v45, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC17219C();
  v46 = v81;
  v47 = v83;
  sub_1BC2B509C();
  sub_1BC2B49AC();
  _Block_release(v42);

  (*(void (**)(char *, uint64_t))(v82 + 8))(v46, v47);
  (*(void (**)(char *, uint64_t))(v79 + 8))(v44, v80);
  swift_release();
  sub_1BC0E2130(0, (unint64_t *)&qword_1EDA0FEF0, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v48 = swift_allocObject();
  *(_OWORD *)(v48 + 16) = xmmword_1BC2B92B0;
  v49 = v74;
  v50 = v88;
  *(_QWORD *)(v48 + 32) = v74;
  *(_QWORD *)(v48 + 40) = v50;
  *(_QWORD *)&aBlock = v48;
  sub_1BC2B45A4();
  v51 = aBlock;
  swift_release();

  swift_release();
  swift_release();
  swift_release();

  return v51;
}

uint64_t sub_1BC284D90(void *a1)
{
  void *v1;
  void *v2;
  unint64_t v3;
  uint64_t v4;
  id v6;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  id v12;
  unint64_t v13;
  void *v14;
  uint64_t result;
  id v16;
  uint64_t v17;

  v6 = objc_msgSend(a1, sel_queryDataObject);
  if (v6)
  {
    v7 = v6;
    sub_1BC0E7998(0, &qword_1EDA0E9B8, (uint64_t (*)(uint64_t))type metadata accessor for MedicationChartCodableData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v8 = sub_1BC2B224C();
    v10 = v9;

    sub_1BC285B80(&qword_1EF401830, &qword_1EF401838, (uint64_t)&protocol conformance descriptor for MedicationChartCodableData, MEMORY[0x1E0DEAF40]);
    sub_1BC2B1F64();
    sub_1BC2859E4(v8, v10);
    v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F740]), sel_init);
    v12 = v1;
    v13 = sub_1BC282F08(v17, (uint64_t)v12);
    swift_bridgeObjectRelease();

    if (v13 >> 62)
    {
      sub_1BC285C18();
      swift_bridgeObjectRetain();
      sub_1BC2B52C4();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1BC2B53D8();
      sub_1BC285C18();
    }
    swift_bridgeObjectRelease();
    sub_1BC285C18();
    v14 = (void *)sub_1BC2B4580();
    swift_bridgeObjectRelease();
    objc_msgSend(v11, sel_setChartPoints_, v14);

    return (uint64_t)v11;
  }
  else
  {
    __break(1u);

    sub_1BC2859E4(v4, v3);
    sub_1BC2B51BC();
    sub_1BC2B44FC();
    v16 = objc_msgSend(a1, sel_description);
    sub_1BC2B4460();

    sub_1BC2B44FC();
    swift_bridgeObjectRelease();
    result = sub_1BC2B52B8();
    __break(1u);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for MedicationChartCodableData(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1BC2B23F0();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + a3[5]), (uint64_t *)((char *)a2 + a3[5]), v7);
    v9 = a3[7];
    *(uint64_t *)((char *)a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    v10 = a3[8];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_1BC2B20FC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
    v14 = a3[10];
    *(uint64_t *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    *(uint64_t *)((char *)a1 + v14) = *(uint64_t *)((char *)a2 + v14);
  }
  return a1;
}

uint64_t destroy for MedicationChartCodableData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;

  v4 = sub_1BC2B23F0();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + *(int *)(a2 + 20), v4);
  v6 = a1 + *(int *)(a2 + 32);
  v7 = sub_1BC2B20FC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

uint64_t initializeWithCopy for MedicationChartCodableData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_1BC2B23F0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v9 = a3[8];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_1BC2B20FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  v13 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  return a1;
}

uint64_t assignWithCopy for MedicationChartCodableData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1BC2B23F0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v8 = a3[8];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1BC2B20FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  return a1;
}

uint64_t initializeWithTake for MedicationChartCodableData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_1BC2B23F0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v9 = a3[8];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_1BC2B20FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  v13 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  return a1;
}

uint64_t assignWithTake for MedicationChartCodableData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_1BC2B23F0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v9 = a3[8];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_1BC2B20FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  v13 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for MedicationChartCodableData()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC2854CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = sub_1BC2B23F0();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_1BC2B20FC();
    v10 = a1 + *(int *)(a3 + 32);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for MedicationChartCodableData()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC28554C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = sub_1BC2B23F0();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_1BC2B20FC();
    v12 = a1 + *(int *)(a4 + 32);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_1BC2855C8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1BC2B23F0();
  if (v1 <= 0x3F)
  {
    result = sub_1BC2B20FC();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for MedicationStatsContext()
{
  return objc_opt_self();
}

uint64_t method lookup function for MedicationChartDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicationChartDataSource.__allocating_init(with:displayType:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t storeEnumTagSinglePayload for MedicationStatsContext.PredicateType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BC2856E0 + 4 * byte_1BC2C5C2C[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BC285714 + 4 * byte_1BC2C5C27[v4]))();
}

uint64_t sub_1BC285714(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC28571C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC285724);
  return result;
}

uint64_t sub_1BC285730(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC285738);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BC28573C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC285744(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MedicationStatsContext.PredicateType()
{
  return &type metadata for MedicationStatsContext.PredicateType;
}

uint64_t getEnumTagSinglePayload for MedicationChartCodableData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MedicationChartCodableData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1BC28583C + 4 * byte_1BC2C5C36[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1BC285870 + 4 * byte_1BC2C5C31[v4]))();
}

uint64_t sub_1BC285870(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC285878(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC285880);
  return result;
}

uint64_t sub_1BC28588C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC285894);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1BC285898(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC2858A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MedicationChartCodableData.CodingKeys()
{
  return &type metadata for MedicationChartCodableData.CodingKeys;
}

unint64_t sub_1BC2858C0()
{
  unint64_t result;

  result = qword_1EF401808;
  if (!qword_1EF401808)
  {
    result = MEMORY[0x1BCCEF2BC](&unk_1BC2C5E50, &type metadata for MedicationChartCodableData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF401808);
  }
  return result;
}

unint64_t sub_1BC285908()
{
  unint64_t result;

  result = qword_1EF401810;
  if (!qword_1EF401810)
  {
    result = MEMORY[0x1BCCEF2BC](&unk_1BC2C5EB8, &type metadata for MedicationStatsContext.PredicateType);
    atomic_store(result, (unint64_t *)&qword_1EF401810);
  }
  return result;
}

unint64_t sub_1BC285950()
{
  unint64_t result;

  result = qword_1EDA0E808;
  if (!qword_1EDA0E808)
  {
    result = MEMORY[0x1BCCEF2BC](&unk_1BC2C5DC0, &type metadata for MedicationChartCodableData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDA0E808);
  }
  return result;
}

unint64_t sub_1BC285998()
{
  unint64_t result;

  result = qword_1EDA0E800;
  if (!qword_1EDA0E800)
  {
    result = MEMORY[0x1BCCEF2BC](&unk_1BC2C5DE8, &type metadata for MedicationChartCodableData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDA0E800);
  }
  return result;
}

uint64_t sub_1BC2859DC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v5;

  return sub_1BC282974(a1, a2, *(_QWORD *)(v5 + 16), a3, a4, a5);
}

uint64_t sub_1BC2859E4(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

void sub_1BC285A28()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EDA0E6B0)
  {
    sub_1BC2B2024();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EDA0E6B0);
  }
}

uint64_t sub_1BC285A90()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_1BC285AB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BC2826BC(a1, a2, *(_QWORD *)(v2 + 16));
}

void sub_1BC285ABC(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_1BC280468(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1BC285AC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC0E2130(0, (unint64_t *)&qword_1EDA10000, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t objectdestroy_6Tm()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC285B70()
{
  uint64_t v0;

  return sub_1BC27FC44(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(void **)(v0 + 40), *(void (**)(__int128 *, id))(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t sub_1BC285B80(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = *a1;
  if (!result)
  {
    sub_1BC0E7998(255, &qword_1EDA0E9B8, (uint64_t (*)(uint64_t))type metadata accessor for MedicationChartCodableData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v10 = v9;
    v11 = sub_1BC0E519C(a2, (uint64_t (*)(uint64_t))type metadata accessor for MedicationChartCodableData, a3);
    result = MEMORY[0x1BCCEF2BC](a4, v10, &v11);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BC285C18()
{
  unint64_t result;

  result = qword_1EF401840;
  if (!qword_1EF401840)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF401840);
  }
  return result;
}

void sub_1BC285C70(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_1BC27FB98(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(NSObject **)(v2 + 32));
}

uint64_t objectdestroy_43Tm()
{
  uint64_t v0;

  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t objectdestroy_46Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1BC2B20FC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC285D6C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v7 = *(_QWORD *)(sub_1BC2B20FC() - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1BC280570(a1, a2, a3, *(void **)(v3 + 16), v3 + v8, *(_QWORD *)(v3 + v9), *(uint64_t (**)(_QWORD, _QWORD))(v3 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v3 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

ValueMetadata *type metadata accessor for MedicationStatisticCollector()
{
  return &type metadata for MedicationStatisticCollector;
}

__n128 sub_1BC285E24()
{
  __n128 result;

  __asm { FMOV            V0.2D, #16.0 }
  xmmword_1EF402D00 = (__int128)result;
  *(__n128 *)&qword_1EF402D10 = result;
  return result;
}

uint64_t sub_1BC285E38(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _BYTE v5[40];

  sub_1BC0E5774(a1, (uint64_t)v5);
  v3 = *a2 + OBJC_IVAR____TtC19HealthMedicationsUI36InteractionResultDetailEducationCell_item;
  swift_beginAccess();
  sub_1BC0F3E44((uint64_t)v5, v3);
  swift_endAccess();
  sub_1BC28646C();
  return sub_1BC0F7954((uint64_t)v5);
}

uint64_t sub_1BC285EA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI36InteractionResultDetailEducationCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a1);
}

uint64_t sub_1BC285EF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI36InteractionResultDetailEducationCell_item;
  swift_beginAccess();
  sub_1BC0F3E44(a1, v3);
  swift_endAccess();
  sub_1BC28646C();
  return sub_1BC0F7954(a1);
}

void (*sub_1BC285F64(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC285FAC;
}

void sub_1BC285FAC(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    sub_1BC28646C();
}

id sub_1BC285FDC(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  id v10;
  id v11;
  id v12;
  objc_super v14;

  v9 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI36InteractionResultDetailEducationCell_item];
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_QWORD *)v9 + 4) = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI36InteractionResultDetailEducationCell____lazy_storage___stackView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI36InteractionResultDetailEducationCell____lazy_storage___attributionLabel] = 0;
  v14.receiver = v4;
  v14.super_class = (Class)type metadata accessor for InteractionResultDetailEducationCell();
  v10 = objc_msgSendSuper2(&v14, sel_initWithFrame_, a1, a2, a3, a4);
  objc_msgSend(v10, sel_setUserInteractionEnabled_, 0);
  v11 = objc_msgSend(v10, sel_contentView);
  v12 = sub_1BC2861D0();
  objc_msgSend(v11, sel_addSubview_, v12);

  return v10;
}

id sub_1BC2861D0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI36InteractionResultDetailEducationCell____lazy_storage___stackView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI36InteractionResultDetailEducationCell____lazy_storage___stackView);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI36InteractionResultDetailEducationCell____lazy_storage___stackView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3CA8]), sel_init);
    objc_msgSend(v4, sel_setAxis_, 1);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v4, sel_setSpacing_, 20.0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC28627C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v16;
  uint64_t v17;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI36InteractionResultDetailEducationCell____lazy_storage___attributionLabel;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI36InteractionResultDetailEducationCell____lazy_storage___attributionLabel);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI36InteractionResultDetailEducationCell____lazy_storage___attributionLabel);
  }
  else
  {
    v4 = v0;
    v5 = objc_msgSend(objc_allocWithZone((Class)sub_1BC2B2990()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    v6 = (id)*MEMORY[0x1E0DC4B10];
    sub_1BC2B2984();
    sub_1BC2B2978();
    objc_msgSend(v5, sel_setNumberOfLines_, 0);
    v16 = sub_1BC2B4460();
    v17 = v7;
    swift_bridgeObjectRetain();
    sub_1BC2B44FC();
    v8 = v5;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1BC2B44FC();
    swift_bridgeObjectRelease();
    v9 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    objc_msgSend(v8, sel_setAccessibilityIdentifier_, v9, v16, v17);

    v10 = (void *)objc_opt_self();
    v11 = v8;
    v12 = objc_msgSend(v10, sel_secondaryLabelColor);
    objc_msgSend(v11, sel_setTextColor_, v12);

    objc_msgSend(v11, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v13 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v11;
    v3 = v11;

    v2 = 0;
  }
  v14 = v2;
  return v3;
}

void sub_1BC28646C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD v54[5];

  v1 = v0;
  v2 = sub_1BC2B39E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI36InteractionResultDetailEducationCell_item;
  swift_beginAccess();
  sub_1BC0E5774(v6, (uint64_t)v54);
  if (!v54[3])
  {
    sub_1BC0F7954((uint64_t)v54);
LABEL_12:
    sub_1BC2B39A4();
    v16 = v1;
    v17 = sub_1BC2B39D4();
    v18 = sub_1BC2B48C8();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc();
      v52 = v2;
      v20 = (uint8_t *)v19;
      v21 = swift_slowAlloc();
      v53 = v21;
      *(_DWORD *)v20 = 136446210;
      sub_1BC0E5774(v6, (uint64_t)v54);
      sub_1BC0E84E8();
      v22 = sub_1BC2B4490();
      v54[0] = sub_1BC12540C(v22, v23, &v53);
      sub_1BC2B4FD0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v17, v18, "Incorrect view model for InteractionResultDetailEducationCell: %{public}s", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v21, -1, -1);
      MEMORY[0x1BCCEF3A0](v20, -1, -1);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v52);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
    return;
  }
  sub_1BC0E1B94();
  sub_1BC278C9C(0);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_12;
  v7 = v53;
  v8 = sub_1BC2861D0();
  v9 = objc_msgSend(v8, sel_arrangedSubviews);

  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDD0);
  v10 = sub_1BC2B458C();

  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    v11 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
    if (v11)
      goto LABEL_5;
  }
  else
  {
    v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v11)
    {
LABEL_5:
      if (v11 < 1)
      {
        __break(1u);
        return;
      }
      v12 = 0;
      do
      {
        if ((v10 & 0xC000000000000001) != 0)
          v13 = (id)MEMORY[0x1BCCEE950](v12, v10);
        else
          v13 = *(id *)(v10 + 8 * v12 + 32);
        v14 = v13;
        ++v12;
        v15 = sub_1BC2861D0();
        objc_msgSend(v15, sel_removeArrangedSubview_, v14);

        objc_msgSend(v14, sel_removeFromSuperview);
      }
      while (v11 != v12);
    }
  }
  swift_bridgeObjectRelease();
  v24 = *(id *)(v7 + *(_QWORD *)(*(_QWORD *)v7 + 120));
  v25 = objc_msgSend(v24, sel_severity);
  v26 = objc_msgSend(v25, sel_severityLevel);

  v27 = sub_1BC196180();
  v29 = v28;
  v30 = objc_allocWithZone((Class)type metadata accessor for InteractionDetailEducationView());
  v31 = sub_1BC1FA9FC((uint64_t)v26, v27, v29);
  v32 = sub_1BC2861D0();
  objc_msgSend(v32, sel_addArrangedSubview_, v31);

  v33 = sub_1BC28627C();
  sub_1BC1962C4();
  v34 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v33, sel_setText_, v34);

  v35 = sub_1BC2861D0();
  v36 = sub_1BC28627C();
  objc_msgSend(v35, sel_addArrangedSubview_, v36);

  v37 = sub_1BC2861D0();
  v38 = objc_msgSend(v1, sel_contentView);
  v52 = v7;
  if (qword_1EF3F81A0 != -1)
    swift_once();
  objc_msgSend(v37, sel_hk_alignVerticalConstraintsWithView_insets_, v38, xmmword_1EF402D00, *(double *)&qword_1EF402D10, unk_1EF402D18, v52);

  v39 = sub_1BC2861D0();
  v40 = objc_msgSend(v39, sel_leadingAnchor);

  v41 = objc_msgSend(v1, sel_contentView);
  v42 = objc_msgSend(v41, sel_layoutMarginsGuide);

  v43 = objc_msgSend(v42, sel_leadingAnchor);
  v44 = objc_msgSend(v40, sel_constraintEqualToAnchor_, v43);

  objc_msgSend(v44, sel_setActive_, 1);
  v45 = sub_1BC2861D0();
  v46 = objc_msgSend(v45, sel_trailingAnchor);

  v47 = objc_msgSend(v1, sel_contentView);
  v48 = objc_msgSend(v47, sel_layoutMarginsGuide);

  v49 = objc_msgSend(v48, sel_trailingAnchor);
  v50 = objc_msgSend(v46, sel_constraintEqualToAnchor_, v49);

  objc_msgSend(v50, sel_setActive_, 1);
  v51 = sub_1BC2861D0();
  objc_msgSend(v51, sel_setCustomSpacing_afterView_, v31, 10.0);
  swift_release();

}

uint64_t type metadata accessor for InteractionResultDetailEducationCell()
{
  return objc_opt_self();
}

id InteractionResultDetailEducationCell.__deallocating_deinit()
{
  return sub_1BC286B1C((SEL *)&selRef_dealloc);
}

id sub_1BC286B1C(SEL *a1)
{
  void *v1;
  objc_super v4;

  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for InteractionResultDetailEducationCell();
  return objc_msgSendSuper2(&v4, *a1);
}

uint64_t sub_1BC286B9C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI36InteractionResultDetailEducationCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a2);
}

uint64_t method lookup function for InteractionResultDetailEducationCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InteractionResultDetailEducationCell.item.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of InteractionResultDetailEducationCell.item.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of InteractionResultDetailEducationCell.item.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t MedmojiConfigItem.init(_:isSelected:sectionIdentifier:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v13;
  uint64_t result;
  _QWORD *v15;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 32))(a7, a1, a5);
  result = type metadata accessor for MedmojiConfigItem(0, a5, a6, v13);
  *(_BYTE *)(a7 + *(int *)(result + 36)) = a2;
  v15 = (_QWORD *)(a7 + *(int *)(result + 40));
  *v15 = a3;
  v15[1] = a4;
  return result;
}

uint64_t type metadata accessor for MedmojiConfigItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MedmojiConfigItem);
}

uint64_t MedmojiColor.cellIdentifier.getter()
{
  return sub_1BC286D44(type metadata accessor for ColorCell, &qword_1EF401210, (uint64_t)&unk_1BC2C6294);
}

uint64_t type metadata accessor for ColorCell(uint64_t a1)
{
  return sub_1BC0E5428(a1, (uint64_t *)&unk_1EDA0E5C0);
}

uint64_t sub_1BC286D0C(uint64_t a1, uint64_t a2)
{
  return sub_1BC286DCC(a1, a2, type metadata accessor for ColorCell, &qword_1EF401210, (uint64_t)&unk_1BC2C6294);
}

uint64_t MedicationShape.cellIdentifier.getter()
{
  return sub_1BC286D44(type metadata accessor for ShapeCell, &qword_1EF3FAEE8, (uint64_t)&unk_1BC2C62BC);
}

uint64_t sub_1BC286D44(uint64_t (*a1)(uint64_t), unint64_t *a2, uint64_t a3)
{
  a1(0);
  sub_1BC0E519C(a2, a1, a3);
  return sub_1BC2B2930();
}

uint64_t type metadata accessor for ShapeCell(uint64_t a1)
{
  return sub_1BC0E5428(a1, (uint64_t *)&unk_1EDA0E560);
}

uint64_t sub_1BC286DB0(uint64_t a1, uint64_t a2)
{
  return sub_1BC286DCC(a1, a2, type metadata accessor for ShapeCell, &qword_1EF3FAEE8, (uint64_t)&unk_1BC2C62BC);
}

uint64_t sub_1BC286DCC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  a3(0);
  sub_1BC0E519C(a4, a3, a5);
  return sub_1BC2B2930();
}

uint64_t MedmojiConfigItem.uniqueIdentifier.getter(uint64_t a1)
{
  uint64_t v2;

  v2 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)(a1 + 24) + 16))(*(_QWORD *)(a1 + 16));
  sub_1BC2B44FC();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  sub_1BC2B44FC();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  sub_1BC2B44FC();
  MedmojiConfigItem.hashValue.getter();
  sub_1BC2B539C();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t MedmojiConfigItem.reuseIdentifier.getter(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(a1 + 24) + 16))(*(_QWORD *)(a1 + 16));
}

uint64_t MedmojiConfigItem.hashValue.getter()
{
  sub_1BC2B5450();
  MedmojiConfigItem.hash(into:)();
  return sub_1BC2B548C();
}

uint64_t MedmojiConfigItem.item.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t MedmojiConfigItem.isSelected.getter(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 36));
}

uint64_t MedmojiConfigItem.sectionIdentifier.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 40));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t static MedmojiConfigItem.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char v18;
  void (*v19)(char *, uint64_t, uint64_t);
  int v20;
  void (*v21)(char *, uint64_t);
  int v22;
  char *v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v31;
  uint64_t v32;

  v6 = type metadata accessor for MedmojiConfigItem(0, a3, a4, a4);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v31 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v31 - v11;
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v31 - v14;
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v31 - v16;
  v18 = sub_1BC2B4424();
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v19(v17, a1, v6);
  v32 = a2;
  v19(v15, a2, v6);
  if ((v18 & 1) != 0)
  {
    v20 = v17[*(int *)(v6 + 36)];
    v21 = *(void (**)(char *, uint64_t))(v7 + 8);
    v21(v17, v6);
    v22 = v15[*(int *)(v6 + 36)];
    v21(v15, v6);
    v19(v12, a1, v6);
    v23 = v31;
    v19(v31, v32, v6);
    if (v20 == v22)
    {
      v25 = *(int *)(v6 + 40);
      v26 = *(_QWORD *)&v12[v25];
      v27 = *(_QWORD *)&v12[v25 + 8];
      v28 = &v23[v25];
      if (v26 == *(_QWORD *)v28 && v27 == *((_QWORD *)v28 + 1))
        v24 = 1;
      else
        v24 = sub_1BC2B53CC();
    }
    else
    {
      v24 = 0;
    }
  }
  else
  {
    v21 = *(void (**)(char *, uint64_t))(v7 + 8);
    v21(v15, v6);
    v21(v17, v6);
    v19(v12, a1, v6);
    v23 = v31;
    v19(v31, v32, v6);
    v24 = 0;
  }
  v21(v12, v6);
  v21(v23, v6);
  return v24 & 1;
}

uint64_t MedmojiConfigItem.hash(into:)()
{
  sub_1BC2B43F4();
  sub_1BC2B5468();
  swift_bridgeObjectRetain();
  sub_1BC2B44D8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC2872A4()
{
  sub_1BC2B5450();
  MedmojiConfigItem.hash(into:)();
  return sub_1BC2B548C();
}

uint64_t sub_1BC2872E4(uint64_t a1)
{
  uint64_t result;

  result = sub_1BC0E519C(&qword_1EF401898, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C660], MEMORY[0x1E0D2C670]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BC287320(uint64_t a1)
{
  uint64_t result;

  result = sub_1BC0E519C(qword_1EF4018A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C6F0], MEMORY[0x1E0D2C700]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_1BC28735C()
{
  JUMPOUT(0x1BCCEF2BCLL);
}

uint64_t sub_1BC28736C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static MedmojiConfigItem.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t dispatch thunk of MedmojiConfigurationItem.cellIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1BC287388()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1BC287390()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_1BC287410(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || (v6 & 0xFFFFFFFFFFFFFFF8) != 0 && (v6 & 0xFFFFFFFFFFFFFFF8) < 0xFFFFFFFFFFFFFFE8)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(_QWORD *, _QWORD *))(v5 + 16))(a1, a2);
    *((_BYTE *)v4 + v6) = *((_BYTE *)a2 + v6);
    v10 = ((unint64_t)v4 + v6) & 0xFFFFFFFFFFFFFFF8;
    v11 = ((unint64_t)a2 + v6) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)(v10 + 8) = *(_QWORD *)(v11 + 8);
    *(_QWORD *)(v10 + 16) = *(_QWORD *)(v11 + 16);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1BC2874C8(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC287504(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  *(_BYTE *)v7 = *(_BYTE *)v8;
  v7 &= 0xFFFFFFFFFFFFFFF8;
  v8 &= 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v7 + 8) = *(_QWORD *)(v8 + 8);
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v8 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BC287570(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  *(_BYTE *)v7 = *(_BYTE *)v8;
  v7 &= 0xFFFFFFFFFFFFFFF8;
  v8 &= 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v7 + 8) = *(_QWORD *)(v8 + 8);
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v8 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BC2875E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  *(_BYTE *)v7 = *(_BYTE *)v8;
  *(_OWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 8) = *(_OWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 8);
  return a1;
}

uint64_t sub_1BC287648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  *(_BYTE *)v7 = *(_BYTE *)v8;
  v7 &= 0xFFFFFFFFFFFFFFF8;
  v8 &= 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v7 + 8) = *(_QWORD *)(v8 + 8);
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v8 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BC2876B8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)(((v7 + a1) & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if ((((v7 & 0xFFFFFFFFFFFFFFF8) + 24) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1BC287730 + 4 * byte_1BC2C5FD0[v10]))();
  }
}

void sub_1BC2877B0(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if ((*(_DWORD *)(v5 + 64) & 0xFFFFFFF8) == 0xFFFFFFE8)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if ((*(_DWORD *)(v5 + 64) & 0xFFFFFFF8) != 0xFFFFFFE8)
  {
    v10 = ~v6 + a2;
    bzero(a1, (*(_QWORD *)(v5 + 64) & 0xFFFFFFFFFFFFFFF8) + 24);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_1BC2878A0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1BC287914);
}

void sub_1BC2878A8(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1BC2878B0);
  JUMPOUT(0x1BC287914);
}

void sub_1BC2878F0()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1BC287914);
}

void sub_1BC2878F8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1BC287914);
}

uint64_t sub_1BC287900(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)(v6 + v7) = 0;
  if (!a2)
    goto LABEL_6;
  if (a3 < 0x7FFFFFFF)
  {
    if (a2 < 0)
      JUMPOUT(0x1BC28790CLL);
    *(_QWORD *)(((v5 + v6) & 0xFFFFFFFFFFFFFFF8) + 16) = (a2 - 1);
LABEL_6:
    JUMPOUT(0x1BC287914);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v6);
}

id sub_1BC28792C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI9ColorCell____lazy_storage___gradientView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI9ColorCell____lazy_storage___gradientView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI9ColorCell____lazy_storage___gradientView);
  }
  else
  {
    sub_1BC2B35A8();
    v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC2879A0(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  objc_class *ObjectType;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  id v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  double v27;
  CGFloat v28;
  double v29;
  CGFloat v30;
  objc_super v32;
  CGRect v33;
  CGRect v34;

  ObjectType = (objc_class *)swift_getObjectType();
  sub_1BC0E1C64(0, &qword_1EDA0FAF0, (void (*)(uint64_t))MEMORY[0x1E0DC2130]);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v32 - v11;
  v13 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI9ColorCell_deselectionBehavior];
  v4[OBJC_IVAR____TtC19HealthMedicationsUI9ColorCell_deselectionBehavior] = 1;
  v14 = *MEMORY[0x1E0D2B168];
  v15 = sub_1BC2B2C6C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v13, v14, v15);
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI9ColorCell____lazy_storage___gradientView] = 0;
  v16 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI9ColorCell_item];
  *(_OWORD *)v16 = 0u;
  *((_OWORD *)v16 + 1) = 0u;
  *((_QWORD *)v16 + 4) = 0;
  v32.receiver = v4;
  v32.super_class = ObjectType;
  v17 = objc_msgSendSuper2(&v32, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1BC2B3B30();
  v18 = sub_1BC2B3B48();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v12, 0, 1, v18);
  MEMORY[0x1BCCEE23C](v12);
  v19 = objc_msgSend(v17, sel_contentView);
  v20 = sub_1BC28792C();
  objc_msgSend(v19, sel_addSubview_, v20);

  v21 = sub_1BC28792C();
  v22 = objc_msgSend(v17, sel_contentView);
  objc_msgSend(v22, sel_bounds);
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v30 = v29;

  v33.origin.x = v24;
  v33.origin.y = v26;
  v33.size.width = v28;
  v33.size.height = v30;
  v34 = CGRectInset(v33, 6.0, 6.0);
  objc_msgSend(v21, sel_setFrame_, v34.origin.x, v34.origin.y, v34.size.width, v34.size.height);

  return v17;
}

void sub_1BC287BF8()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  id v12;
  id v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  id v22;
  id v23;
  id v24;
  double v25;
  CGFloat v26;
  double v27;
  CGFloat v28;
  double v29;
  CGFloat v30;
  double v31;
  CGFloat v32;
  objc_super v33;
  CGRect v34;
  CGRect v35;
  CGRect v36;
  CGRect v37;
  CGRect v38;

  v33.receiver = v0;
  v33.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v33, sel_layoutSubviews);
  v1 = objc_msgSend(v0, sel_contentView);
  v2 = objc_msgSend(v1, sel_layer);

  v3 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v3, sel_bounds);
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;

  v34.origin.x = v5;
  v34.origin.y = v7;
  v34.size.width = v9;
  v34.size.height = v11;
  objc_msgSend(v2, sel_setCornerRadius_, CGRectGetHeight(v34) * 0.5);

  v12 = sub_1BC28792C();
  v13 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v13, sel_bounds);
  v15 = v14;
  v17 = v16;
  v19 = v18;
  v21 = v20;

  v35.origin.x = v15;
  v35.origin.y = v17;
  v35.size.width = v19;
  v35.size.height = v21;
  v36 = CGRectInset(v35, 6.0, 6.0);
  objc_msgSend(v12, sel_setFrame_, v36.origin.x, v36.origin.y, v36.size.width, v36.size.height);

  v22 = sub_1BC28792C();
  v23 = objc_msgSend(v22, sel_layer);

  v24 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v24, sel_bounds);
  v26 = v25;
  v28 = v27;
  v30 = v29;
  v32 = v31;

  v37.origin.x = v26;
  v37.origin.y = v28;
  v37.size.width = v30;
  v37.size.height = v32;
  v38 = CGRectInset(v37, 6.0, 6.0);
  objc_msgSend(v23, sel_setCornerRadius_, CGRectGetHeight(v38) * 0.5);

}

uint64_t sub_1BC287E2C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  int v11;
  id v12;
  id v13;
  double v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  void *v28;
  double v29;
  _BYTE v31[24];
  _BYTE v32[24];
  uint64_t v33;

  v1 = v0;
  sub_1BC289DC4();
  MEMORY[0x1E0C80A78](v2);
  v4 = &v31[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BC289EE8(0, (unint64_t *)&qword_1EF3F9128, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C660], &qword_1EF3F9130, (uint64_t)&protocol conformance descriptor for MedmojiColor);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v31[-v8];
  v10 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI9ColorCell_item;
  swift_beginAccess();
  sub_1BC0E1CB0(v10, (uint64_t)v32, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
  if (!v33)
  {
    sub_1BC0E1CFC((uint64_t)v32, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v4, 1, 1, v6);
    return sub_1BC0E8594((uint64_t)v4, (uint64_t (*)(_QWORD))sub_1BC289DC4);
  }
  sub_1BC0E1B94();
  v11 = swift_dynamicCast();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v4, v11 ^ 1u, 1, v6);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
    return sub_1BC0E8594((uint64_t)v4, (uint64_t (*)(_QWORD))sub_1BC289DC4);
  sub_1BC289F68((uint64_t)v4, (uint64_t)v9, (unint64_t *)&qword_1EF3F9128, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C660], &qword_1EF3F9130, (uint64_t)&protocol conformance descriptor for MedmojiColor);
  v12 = objc_msgSend(v1, sel_contentView);
  v13 = objc_msgSend(v12, sel_layer);

  v14 = 3.0;
  if (!v9[*(int *)(v6 + 36)])
    v14 = 0.0;
  objc_msgSend(v13, sel_setBorderWidth_, v14);

  v15 = objc_msgSend(v1, sel_contentView);
  v16 = objc_msgSend(v15, sel_layer);

  v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.780392157, 0.780392157, 0.8, 1.0);
  v18 = objc_msgSend(v17, sel_CGColor);

  objc_msgSend(v16, sel_setBorderColor_, v18);
  v19 = sub_1BC28792C();
  v20 = (void *)sub_1BC2B32A8();
  objc_msgSend(v19, sel_setBackgroundColor_, v20);

  v21 = sub_1BC28792C();
  v22 = objc_msgSend(v21, sel_layer);

  v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.780392157, 0.780392157, 0.8, 1.0);
  v24 = objc_msgSend(v23, sel_CGColor);

  objc_msgSend(v22, sel_setBorderColor_, v24);
  v25 = sub_1BC28792C();
  v26 = objc_msgSend(v25, sel_layer);

  sub_1BC12A328();
  v27 = (void *)sub_1BC2B32A8();
  v28 = (void *)sub_1BC2B4D18();
  LOBYTE(v25) = sub_1BC2B4D84();

  if ((v25 & 1) != 0)
    v29 = 1.0;
  else
    v29 = 0.0;
  objc_msgSend(v26, sel_setBorderWidth_, v29);

  sub_1BC288278();
  return sub_1BC289E38((uint64_t)v9, (unint64_t *)&qword_1EF3F9128, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C660], &qword_1EF3F9130, (uint64_t)&protocol conformance descriptor for MedmojiColor);
}

void sub_1BC288278()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  id v6;

  v1 = v0;
  swift_getObjectType();
  objc_msgSend(v0, sel_setIsAccessibilityElement_, 1);
  sub_1BC2B329C();
  if (v2)
  {
    v3 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = 0;
  }
  objc_msgSend(v1, sel_setAccessibilityLabel_, v3);

  sub_1BC2B4460();
  sub_1BC2B51BC();
  swift_bridgeObjectRelease();
  sub_1BC289EE8(0, (unint64_t *)&qword_1EF3F9128, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C660], &qword_1EF3F9130, (uint64_t)&protocol conformance descriptor for MedmojiColor);
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  sub_1BC2B44FC();
  sub_1BC0E519C(&qword_1EF401210, type metadata accessor for ColorCell, (uint64_t)&unk_1BC2C6294);
  sub_1BC2B2930();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  sub_1BC2B44FC();
  v4 = objc_msgSend(v1, sel_accessibilityLabel);
  if (v4)
  {
    v5 = v4;
    sub_1BC2B4460();

  }
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = (id)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setAccessibilityIdentifier_, v6);

}

uint64_t sub_1BC288500()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  int v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  _BYTE v14[24];
  _BYTE v15[24];
  uint64_t v16;

  sub_1BC289DC4();
  MEMORY[0x1E0C80A78](v1);
  v3 = &v14[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BC289EE8(0, (unint64_t *)&qword_1EF3F9128, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C660], &qword_1EF3F9130, (uint64_t)&protocol conformance descriptor for MedmojiColor);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = &v14[-v7];
  v9 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI9ColorCell_item;
  swift_beginAccess();
  sub_1BC0E1CB0(v9, (uint64_t)v15, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
  if (!v16)
  {
    sub_1BC0E1CFC((uint64_t)v15, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v3, 1, 1, v5);
    goto LABEL_5;
  }
  sub_1BC0E1B94();
  v10 = swift_dynamicCast();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v3, v10 ^ 1u, 1, v5);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48))(v3, 1, v5) == 1)
  {
LABEL_5:
    sub_1BC0E8594((uint64_t)v3, (uint64_t (*)(_QWORD))sub_1BC289DC4);
    return 0;
  }
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C660];
  sub_1BC289F68((uint64_t)v3, (uint64_t)v8, (unint64_t *)&qword_1EF3F9128, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C660], &qword_1EF3F9130, (uint64_t)&protocol conformance descriptor for MedmojiColor);
  v12 = v8[*(int *)(v5 + 36)];
  sub_1BC289E38((uint64_t)v8, (unint64_t *)&qword_1EF3F9128, v11, &qword_1EF3F9130, (uint64_t)&protocol conformance descriptor for MedmojiColor);
  return v12;
}

uint64_t sub_1BC288720()
{
  return type metadata accessor for ColorCell(0);
}

uint64_t sub_1BC28872C@<X0>(uint64_t a1@<X8>)
{
  return sub_1BC289B88(&OBJC_IVAR____TtC19HealthMedicationsUI9ColorCell_item, a1);
}

uint64_t sub_1BC288738(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BC289BF8(a1, a2, a3, &OBJC_IVAR____TtC19HealthMedicationsUI9ColorCell_item, (void (*)(uint64_t))sub_1BC287E2C);
}

uint64_t (*sub_1BC28874C(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC288794;
}

uint64_t sub_1BC288794(uint64_t a1, char a2)
{
  return sub_1BC289CC8(a1, a2, (uint64_t (*)(uint64_t))sub_1BC287E2C);
}

uint64_t sub_1BC2887A0()
{
  sub_1BC0E519C(&qword_1EF401928, type metadata accessor for ColorCell, (uint64_t)&unk_1BC2C625C);
  return sub_1BC2B2B34();
}

uint64_t sub_1BC288810@<X0>(uint64_t a1@<X8>)
{
  return sub_1BC289D80(&OBJC_IVAR____TtC19HealthMedicationsUI9ColorCell_deselectionBehavior, a1);
}

id sub_1BC28881C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI9ShapeCell____lazy_storage___shapeView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI9ShapeCell____lazy_storage___shapeView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI9ShapeCell____lazy_storage___shapeView);
  }
  else
  {
    v4 = v0;
    v5 = objc_msgSend(objc_allocWithZone((Class)sub_1BC2B3320()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    sub_1BC2B3314();
    v6 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

id sub_1BC2888AC(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  objc_class *ObjectType;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  double v27;
  CGFloat v28;
  id v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  id v34;
  double v35;
  CGFloat v36;
  double v37;
  CGFloat v38;
  double v39;
  CGFloat v40;
  double v41;
  CGFloat v42;
  objc_super v44;
  CGRect v45;
  CGRect v46;
  CGRect v47;

  ObjectType = (objc_class *)swift_getObjectType();
  sub_1BC0E1C64(0, &qword_1EDA0FAF0, (void (*)(uint64_t))MEMORY[0x1E0DC2130]);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v44 - v11;
  v13 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI9ShapeCell_deselectionBehavior];
  v4[OBJC_IVAR____TtC19HealthMedicationsUI9ShapeCell_deselectionBehavior] = 1;
  v14 = *MEMORY[0x1E0D2B168];
  v15 = sub_1BC2B2C6C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v13, v14, v15);
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI9ShapeCell____lazy_storage___shapeView] = 0;
  v16 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI9ShapeCell_item];
  *(_OWORD *)v16 = 0u;
  *((_OWORD *)v16 + 1) = 0u;
  *((_QWORD *)v16 + 4) = 0;
  v44.receiver = v4;
  v44.super_class = ObjectType;
  v17 = objc_msgSendSuper2(&v44, sel_initWithFrame_, a1, a2, a3, a4);
  v18 = objc_msgSend(v17, sel_contentView);
  v19 = objc_msgSend(v18, sel_layer);

  v20 = objc_msgSend(v17, sel_contentView);
  objc_msgSend(v20, sel_bounds);
  v22 = v21;
  v24 = v23;
  v26 = v25;
  v28 = v27;

  v45.origin.x = v22;
  v45.origin.y = v24;
  v45.size.width = v26;
  v45.size.height = v28;
  objc_msgSend(v19, sel_setCornerRadius_, CGRectGetHeight(v45) * 0.5);

  v29 = v17;
  sub_1BC2B3B30();
  v30 = sub_1BC2B3B48();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v12, 0, 1, v30);
  MEMORY[0x1BCCEE23C](v12);

  v31 = objc_msgSend(v29, sel_contentView);
  v32 = sub_1BC28881C();
  objc_msgSend(v31, sel_addSubview_, v32);

  v33 = sub_1BC28881C();
  v34 = objc_msgSend(v29, sel_contentView);
  objc_msgSend(v34, sel_bounds);
  v36 = v35;
  v38 = v37;
  v40 = v39;
  v42 = v41;

  v46.origin.x = v36;
  v46.origin.y = v38;
  v46.size.width = v40;
  v46.size.height = v42;
  v47 = CGRectInset(v46, 6.0, 6.0);
  objc_msgSend(v33, sel_setFrame_, v47.origin.x, v47.origin.y, v47.size.width, v47.size.height);

  return v29;
}

void sub_1BC288BA4(char *a1, uint64_t a2, void *a3, _QWORD *a4, _QWORD *a5, _QWORD *a6)
{
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;

  v10 = &a1[*a4];
  *v10 = 1;
  v11 = *MEMORY[0x1E0D2B168];
  v12 = sub_1BC2B2C6C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v10, v11, v12);
  *(_QWORD *)&a1[*a5] = 0;
  v13 = &a1[*a6];
  *((_QWORD *)v13 + 4) = 0;
  *(_OWORD *)v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  v14 = a3;

  sub_1BC2B52B8();
  __break(1u);
}

void sub_1BC288C7C()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  id v12;
  id v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  objc_super v22;
  CGRect v23;
  CGRect v24;
  CGRect v25;

  v22.receiver = v0;
  v22.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v22, sel_layoutSubviews);
  v1 = objc_msgSend(v0, sel_contentView);
  v2 = objc_msgSend(v1, sel_layer);

  v3 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v3, sel_bounds);
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;

  v23.origin.x = v5;
  v23.origin.y = v7;
  v23.size.width = v9;
  v23.size.height = v11;
  objc_msgSend(v2, sel_setCornerRadius_, CGRectGetHeight(v23) * 0.5);

  v12 = sub_1BC28881C();
  v13 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v13, sel_bounds);
  v15 = v14;
  v17 = v16;
  v19 = v18;
  v21 = v20;

  v24.origin.x = v15;
  v24.origin.y = v17;
  v24.size.width = v19;
  v24.size.height = v21;
  v25 = CGRectInset(v24, 6.0, 6.0);
  objc_msgSend(v12, sel_setFrame_, v25.origin.x, v25.origin.y, v25.size.width, v25.size.height);

}

uint64_t sub_1BC288E18()
{
  void *v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  int v26;
  int v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  void (*v41)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v42;
  void (*v43)(uint64_t);
  unsigned int (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  void (*v46)(uint64_t);
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  void (*v53)(uint64_t);
  id v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  _BYTE v62[24];
  uint64_t v63;

  v1 = sub_1BC2B3608();
  v2 = (void (*)(uint64_t))MEMORY[0x1E0D2C950];
  v60 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v56 = (char *)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC183688();
  v59 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0ECC0, v2);
  v8 = MEMORY[0x1E0C80A78](v7);
  v58 = (uint64_t)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v57 = (uint64_t)&v56 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v56 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v56 - v15;
  sub_1BC289E74();
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC289EE8(0, (unint64_t *)&qword_1EF3F8968, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C6F0], &qword_1EF3F8970, (uint64_t)&protocol conformance descriptor for MedicationShape);
  v21 = v20;
  v22 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v56 - v23;
  v61 = v0;
  v25 = (uint64_t)v0 + OBJC_IVAR____TtC19HealthMedicationsUI9ShapeCell_item;
  swift_beginAccess();
  sub_1BC0E1CB0(v25, (uint64_t)v62, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
  if (!v63)
  {
    sub_1BC0E1CFC((uint64_t)v62, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v19, 1, 1, v21);
    return sub_1BC0E8594((uint64_t)v19, (uint64_t (*)(_QWORD))sub_1BC289E74);
  }
  sub_1BC0E1B94();
  v26 = swift_dynamicCast();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, v26 ^ 1u, 1, v21);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v19, 1, v21) == 1)
    return sub_1BC0E8594((uint64_t)v19, (uint64_t (*)(_QWORD))sub_1BC289E74);
  sub_1BC289F68((uint64_t)v19, (uint64_t)v24, (unint64_t *)&qword_1EF3F8968, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C6F0], &qword_1EF3F8970, (uint64_t)&protocol conformance descriptor for MedicationShape);
  v27 = v24[*(int *)(v21 + 36)];
  v28 = v61;
  v29 = objc_msgSend(v61, sel_contentView);
  v30 = objc_msgSend(v29, sel_layer);

  if (v27 == 1)
  {
    v31 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.780392157, 0.780392157, 0.8, 1.0);
    v32 = objc_msgSend(v31, sel_CGColor);

    objc_msgSend(v30, sel_setBorderColor_, v32);
    v33 = objc_msgSend(v28, sel_contentView);
    v34 = objc_msgSend(v33, sel_layer);

    objc_msgSend(v34, sel_setBorderWidth_, 3.0);
  }
  else
  {
    v36 = objc_msgSend((id)objc_opt_self(), sel_secondarySystemFillColor);
    v37 = objc_msgSend(v36, sel_CGColor);

    objc_msgSend(v30, sel_setBorderColor_, v37);
    v38 = objc_msgSend(v28, sel_contentView);
    v34 = objc_msgSend(v38, sel_layer);

    objc_msgSend(v34, sel_setBorderWidth_, 0.0);
  }

  v39 = sub_1BC28881C();
  sub_1BC2B32FC();

  MedicationShape.previewConfig.getter((uint64_t)v14);
  v40 = v60;
  v41 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56);
  v41(v14, 0, 1, v1);
  v42 = (uint64_t)&v6[*(int *)(v59 + 48)];
  v43 = (void (*)(uint64_t))MEMORY[0x1E0D2C950];
  sub_1BC0E1CB0((uint64_t)v16, (uint64_t)v6, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
  sub_1BC0E1CB0((uint64_t)v14, v42, (unint64_t *)&qword_1EDA0ECC0, v43);
  v44 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48);
  if (v44((uint64_t)v6, 1, v1) != 1)
  {
    v45 = v57;
    sub_1BC0E1CB0((uint64_t)v6, v57, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
    if (v44(v42, 1, v1) != 1)
    {
      v47 = v60;
      v48 = v45;
      v49 = v56;
      (*(void (**)(char *, uint64_t, uint64_t))(v60 + 32))(v56, v42, v1);
      sub_1BC0E519C(&qword_1EF3FC320, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950], MEMORY[0x1E0D2C960]);
      v50 = sub_1BC2B4424();
      v51 = *(void (**)(char *, uint64_t))(v47 + 8);
      v51(v49, v1);
      v52 = (uint64_t)v14;
      v53 = (void (*)(uint64_t))MEMORY[0x1E0D2C950];
      sub_1BC0E1CFC(v52, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
      sub_1BC0E1CFC((uint64_t)v16, (unint64_t *)&qword_1EDA0ECC0, v53);
      v51((char *)v48, v1);
      sub_1BC0E1CFC((uint64_t)v6, (unint64_t *)&qword_1EDA0ECC0, v53);
      if ((v50 & 1) != 0)
        goto LABEL_16;
LABEL_15:
      v54 = sub_1BC28881C();
      v55 = v58;
      MedicationShape.previewConfig.getter(v58);
      v41((char *)v55, 0, 1, v1);
      sub_1BC2B3308();

      goto LABEL_16;
    }
    v46 = (void (*)(uint64_t))MEMORY[0x1E0D2C950];
    sub_1BC0E1CFC((uint64_t)v14, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
    sub_1BC0E1CFC((uint64_t)v16, (unint64_t *)&qword_1EDA0ECC0, v46);
    (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v45, v1);
LABEL_13:
    sub_1BC0E8594((uint64_t)v6, (uint64_t (*)(_QWORD))sub_1BC183688);
    goto LABEL_15;
  }
  sub_1BC0E1CFC((uint64_t)v14, (unint64_t *)&qword_1EDA0ECC0, v43);
  sub_1BC0E1CFC((uint64_t)v16, (unint64_t *)&qword_1EDA0ECC0, v43);
  if (v44(v42, 1, v1) != 1)
    goto LABEL_13;
  sub_1BC0E1CFC((uint64_t)v6, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
LABEL_16:
  sub_1BC289568();
  return sub_1BC289E38((uint64_t)v24, (unint64_t *)&qword_1EF3F8968, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C6F0], &qword_1EF3F8970, (uint64_t)&protocol conformance descriptor for MedicationShape);
}

void sub_1BC289568()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  id v6;

  v1 = v0;
  swift_getObjectType();
  objc_msgSend(v0, sel_setIsAccessibilityElement_, 1);
  sub_1BC2B332C();
  if (v2)
  {
    v3 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = 0;
  }
  objc_msgSend(v1, sel_setAccessibilityLabel_, v3);

  sub_1BC2B4460();
  sub_1BC2B51BC();
  swift_bridgeObjectRelease();
  sub_1BC0E519C(&qword_1EF3FAEE8, type metadata accessor for ShapeCell, (uint64_t)&unk_1BC2C62BC);
  sub_1BC2B2930();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  sub_1BC2B44FC();
  v4 = objc_msgSend(v1, sel_accessibilityLabel);
  if (v4)
  {
    v5 = v4;
    sub_1BC2B4460();

  }
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = (id)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setAccessibilityIdentifier_, v6);

}

uint64_t sub_1BC28982C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  int v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  _BYTE v14[24];
  _BYTE v15[24];
  uint64_t v16;

  sub_1BC289E74();
  MEMORY[0x1E0C80A78](v1);
  v3 = &v14[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BC289EE8(0, (unint64_t *)&qword_1EF3F8968, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C6F0], &qword_1EF3F8970, (uint64_t)&protocol conformance descriptor for MedicationShape);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = &v14[-v7];
  v9 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI9ShapeCell_item;
  swift_beginAccess();
  sub_1BC0E1CB0(v9, (uint64_t)v15, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
  if (!v16)
  {
    sub_1BC0E1CFC((uint64_t)v15, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v3, 1, 1, v5);
    goto LABEL_5;
  }
  sub_1BC0E1B94();
  v10 = swift_dynamicCast();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v3, v10 ^ 1u, 1, v5);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48))(v3, 1, v5) == 1)
  {
LABEL_5:
    sub_1BC0E8594((uint64_t)v3, (uint64_t (*)(_QWORD))sub_1BC289E74);
    return 0;
  }
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C6F0];
  sub_1BC289F68((uint64_t)v3, (uint64_t)v8, (unint64_t *)&qword_1EF3F8968, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C6F0], &qword_1EF3F8970, (uint64_t)&protocol conformance descriptor for MedicationShape);
  v12 = v8[*(int *)(v5 + 36)];
  sub_1BC289E38((uint64_t)v8, (unint64_t *)&qword_1EF3F8968, v11, &qword_1EF3F8970, (uint64_t)&protocol conformance descriptor for MedicationShape);
  return v12;
}

id sub_1BC289A2C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC289A7C(uint64_t a1, uint64_t a2, _QWORD *a3, _QWORD *a4, _QWORD *a5)
{
  uint64_t v8;
  uint64_t v9;

  v8 = a1 + *a3;
  v9 = sub_1BC2B2C6C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);

  return sub_1BC0E1CFC(a1 + *a5, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
}

uint64_t sub_1BC289AF4()
{
  return type metadata accessor for ShapeCell(0);
}

uint64_t sub_1BC289AFC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC2B2C6C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1BC289B7C@<X0>(uint64_t a1@<X8>)
{
  return sub_1BC289B88(&OBJC_IVAR____TtC19HealthMedicationsUI9ShapeCell_item, a1);
}

uint64_t sub_1BC289B88@<X0>(_QWORD *a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + *a1;
  swift_beginAccess();
  return sub_1BC0E1CB0(v4, a2, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
}

uint64_t sub_1BC289BE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BC289BF8(a1, a2, a3, &OBJC_IVAR____TtC19HealthMedicationsUI9ShapeCell_item, (void (*)(uint64_t))sub_1BC288E18);
}

uint64_t sub_1BC289BF8(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, void (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;

  v8 = v5 + *a4;
  swift_beginAccess();
  sub_1BC0F3E44(a1, v8);
  v9 = swift_endAccess();
  a5(v9);
  return sub_1BC0E1CFC(a1, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
}

uint64_t (*sub_1BC289C74(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC289CBC;
}

uint64_t sub_1BC289CBC(uint64_t a1, char a2)
{
  return sub_1BC289CC8(a1, a2, (uint64_t (*)(uint64_t))sub_1BC288E18);
}

uint64_t sub_1BC289CC8(uint64_t a1, char a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return a3(result);
  return result;
}

uint64_t sub_1BC289D04()
{
  sub_1BC0E519C(&qword_1EF401930, type metadata accessor for ShapeCell, (uint64_t)&unk_1BC2C61DC);
  return sub_1BC2B2B34();
}

uint64_t sub_1BC289D74@<X0>(uint64_t a1@<X8>)
{
  return sub_1BC289D80(&OBJC_IVAR____TtC19HealthMedicationsUI9ShapeCell_deselectionBehavior, a1);
}

uint64_t sub_1BC289D80@<X0>(_QWORD *a1@<X2>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2 + *a1;
  v5 = sub_1BC2B2C6C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

void sub_1BC289DC4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3FAA28)
  {
    sub_1BC289EE8(255, (unint64_t *)&qword_1EF3F9128, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C660], &qword_1EF3F9130, (uint64_t)&protocol conformance descriptor for MedmojiColor);
    v0 = sub_1BC2B4FA0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3FAA28);
  }
}

uint64_t sub_1BC289E38(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v6;

  sub_1BC289EE8(0, a2, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

void sub_1BC289E74()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF3F8960)
  {
    sub_1BC289EE8(255, (unint64_t *)&qword_1EF3F8968, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C6F0], &qword_1EF3F8970, (uint64_t)&protocol conformance descriptor for MedicationShape);
    v0 = sub_1BC2B4FA0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF3F8960);
  }
}

void sub_1BC289EE8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  if (!*a2)
  {
    v10 = a3(255);
    v11 = sub_1BC0E519C(a4, a3, a5);
    v13 = type metadata accessor for MedmojiConfigItem(a1, v10, v11, v12);
    if (!v14)
      atomic_store(v13, a2);
  }
}

uint64_t sub_1BC289F68(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t), unint64_t *a5, uint64_t a6)
{
  uint64_t v8;

  sub_1BC289EE8(0, a3, a4, a5, a6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a2, a1, v8);
  return a2;
}

Swift::Bool __swiftcall PregnancyTrimesterLactationRatings.isCritical(for:)(HealthMedicationsUI::MedicationSecondaryEducationType a1)
{
  if (*(_BYTE *)a1 == 1)
    return sub_1BC2B3770();
  else
    return sub_1BC2B377C();
}

Swift::Bool __swiftcall PregnancyTrimesterLactationRatings.shouldIncludeMedication(for:importance:)(HealthMedicationsUI::MedicationSecondaryEducationType a1, HealthMedicationsUI::MedicationInformationImportance importance)
{
  char v2;
  char v3;

  v2 = *(_BYTE *)importance;
  if (*(_BYTE *)a1 == 1)
    v3 = sub_1BC2B3770();
  else
    v3 = sub_1BC2B377C();
  return (v2 ^ v3) & 1;
}

uint64_t sub_1BC28A010()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 8);
  sub_1BC2B5450();
  sub_1BC2B4D90();
  sub_1BC2B5468();
  if (v1)
  {
    v2 = v1;
    sub_1BC2B4D90();

  }
  return sub_1BC2B548C();
}

void sub_1BC28A08C()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 8);
  sub_1BC2B4D90();
  sub_1BC2B5468();
  if (v1)
  {
    v2 = v1;
    sub_1BC2B4D90();

  }
}

uint64_t sub_1BC28A110()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 8);
  sub_1BC2B5450();
  sub_1BC2B4D90();
  sub_1BC2B5468();
  if (v1)
  {
    v2 = v1;
    sub_1BC2B4D90();

  }
  return sub_1BC2B548C();
}

uint64_t sub_1BC28A188(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  char v6;

  v2 = *(void **)(a1 + 8);
  v3 = *(void **)(a2 + 8);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EF3FBD20);
  if ((sub_1BC2B4D84() & 1) != 0)
  {
    if (v2)
    {
      if (v3)
      {
        sub_1BC0E1D38(0, &qword_1EF401960);
        v4 = v3;
        v5 = v2;
        v6 = sub_1BC2B4D84();

        if ((v6 & 1) != 0)
          return 1;
      }
    }
    else if (!v3)
    {
      return 1;
    }
  }
  return 0;
}

id sub_1BC28A23C()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(), sel_medicationDoseEventTypeForIdentifier_, *MEMORY[0x1E0CB5418]);
  if (!result)
    __break(1u);
  return result;
}

void *sub_1BC28A284()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 8);
  v2 = v1;
  return v1;
}

void sub_1BC28A2A8(void *a1)
{
  void **v1;

  sub_1BC28AA04(a1, *v1);
}

uint64_t sub_1BC28A2B8()
{
  sub_1BC2B2C78();
  return sub_1BC2B2930();
}

uint64_t sub_1BC28A2E8()
{
  id *v0;
  id v1;
  id v2;

  v1 = objc_msgSend(*v0, sel_semanticIdentifier);
  v2 = objc_msgSend(v1, sel_description);
  sub_1BC2B4460();

  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  return 0x6574497472616843;
}

id sub_1BC28A390(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5, void *a6, void *a7, void *a8, void *a9, _QWORD *a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  id v28;
  void *v29;
  void *v30;
  void *v31;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  void *v39;
  void *v40;
  id v41;

  v38 = a6;
  v39 = a7;
  v40 = a8;
  v41 = a5;
  sub_1BC28B260();
  v35 = sub_1BC2B4580();
  swift_bridgeObjectRelease();
  if (a3)
  {
    sub_1BC0E1D38(0, &qword_1EDA0FDE8);
    v36 = sub_1BC2B4580();
    swift_bridgeObjectRelease();
    v16 = a10[3];
    if (v16)
    {
LABEL_3:
      v17 = __swift_project_boxed_opaque_existential_0(a10, v16);
      v18 = *(_QWORD *)(v16 - 8);
      MEMORY[0x1E0C80A78](v17);
      v20 = (char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v18 + 16))(v20);
      v21 = sub_1BC2B53C0();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v16);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)a10);
      goto LABEL_6;
    }
  }
  else
  {
    v36 = 0;
    v16 = a10[3];
    if (v16)
      goto LABEL_3;
  }
  v21 = 0;
LABEL_6:
  v22 = sub_1BC2B2594();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(a11, 1, v22) != 1)
  {
    v24 = (void *)sub_1BC2B2510();
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(a11, v22);
  }
  if (a13)
  {
    sub_1BC0E1D38(0, &qword_1EDA0FDE8);
    sub_1BC0E1D38(0, &qword_1EF3F98D8);
    sub_1BC0F64D8();
    v25 = (void *)sub_1BC2B43AC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v25 = 0;
  }
  v33 = v21;
  v26 = v40;
  v27 = v39;
  v29 = (void *)v36;
  v28 = v37;
  v30 = (void *)v35;
  v37 = a9;
  v31 = v38;
  v34 = objc_msgSend(v28, sel_initWithStackedDisplayTypes_primaryDisplayTypeStackIndex_stackedDisplayTypeHeights_healthStore_unitPreferenceController_dateCache_chartDataCacheController_selectedTimeScopeController_sampleTypeDateRangeController_initialXValue_currentCalendarOverride_options_timeScopeRanges_, v35, a2, v36, a4, v41, v38, v39, v40, a9, v33, v24, a12, v25);

  swift_unknownObjectRelease();
  return v34;
}

id _sSo18HKStackedBarSeriesC19HealthMedicationsUIE019makeMedicationEventC0AByFZ_0()
{
  id v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  void *v18;
  id v20;
  id v21;
  id v22;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F898]), sel_init);
  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F8A8]), (SEL)&selRef_initForCHRImportWithExistingMedications_sinceDate_limit_resultsHandler_);
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_clearColor);
  objc_msgSend(v1, sel_setStrokeColor_, v3);

  objc_msgSend(v1, sel_setLineWidth_, 1.0);
  objc_msgSend(v1, sel_setBlendMode_, 22);
  objc_msgSend(v0, sel_setUnselectedStrokeStyle_, v1);
  objc_msgSend(v0, sel_setCornerRadii_, 1.5, 1.5);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F870]), (SEL)&selRef_initForCHRImportWithExistingMedications_sinceDate_limit_resultsHandler_);
  v5 = objc_msgSend(v2, sel_hk_medicationDoseEventTakenColor);
  objc_msgSend(v4, sel_setColor_, v5);

  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F870]), (SEL)&selRef_initForCHRImportWithExistingMedications_sinceDate_limit_resultsHandler_);
  v7 = objc_msgSend(v2, sel_hk_medicationDoseEventSkippedColor);
  objc_msgSend(v6, (SEL)&selRef_hasSameAncestorIdentifiersAsInteractionResult_, v7);

  v8 = objc_msgSend(v2, sel_hk_chartBackgroundColor);
  v22 = objc_msgSend((id)objc_opt_self(), sel_strokeStyleWithColor_lineWidth_, v8, 1.0);

  objc_msgSend(v0, sel_setTiledStrokeStyle_, v22);
  sub_1BC0E7940();
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BC2B92B0;
  *(_QWORD *)(v9 + 32) = v4;
  *(_QWORD *)(v9 + 40) = v6;
  sub_1BC2B45A4();
  sub_1BC0E1D38(0, (unint64_t *)&unk_1EDA0E570);
  v21 = v4;
  v20 = v6;
  v10 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setUnselectedFillStyles_, v10);

  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F870]), sel_init);
  v12 = objc_msgSend(v2, sel_hk_chartGrayGraphColor);
  objc_msgSend(v11, sel_setColor_, v12);

  v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F870]), sel_init);
  v14 = objc_msgSend(v2, sel_hk_chartInactiveSeriesColor);
  objc_msgSend(v13, sel_setColor_, v14);

  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1BC2B92B0;
  *(_QWORD *)(v15 + 32) = v11;
  *(_QWORD *)(v15 + 40) = v13;
  sub_1BC2B45A4();
  v16 = v11;
  v17 = v13;
  v18 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setInactiveFillStyles_, v18);

  return v0;
}

void sub_1BC28AA04(void *a1, void *a2)
{
  _QWORD *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  char *v61;
  id v62;
  uint64_t v63[4];
  ValueMetadata *v64;

  v60 = a2;
  v3 = (_QWORD *)sub_1BC2B39E0();
  v58 = (id)*(v3 - 1);
  v59 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, (unint64_t *)&unk_1EDA0E730, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11F0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v61 = (char *)&v54 - v7;
  v62 = objc_msgSend(a1, sel_CHRRoomApplicationItems);
  v8 = objc_msgSend(v62, sel_timeScopeController);
  objc_msgSend(v8, sel_setSelectedTimeScope_, 5);

  v9 = _sSo18HKStackedBarSeriesC19HealthMedicationsUIE019makeMedicationEventC0AByFZ_0();
  v10 = objc_msgSend((id)objc_opt_self(), sel_standardNumericYAxisWithConfigurationOverrides_, 0);
  objc_msgSend(v9, sel_setYAxis_, v10);
  sub_1BC0E1D38(0, &qword_1EDA0FDE8);
  v11 = (void *)sub_1BC2B4D6C();
  v12 = (void *)sub_1BC2B4D6C();
  v13 = objc_msgSend((id)objc_opt_self(), sel_valueRangeWithMinValue_maxValue_, v11, v12);

  sub_1BC106EF8(MEMORY[0x1E0DEE9D8]);
  sub_1BC0E1D38(0, &qword_1EF3F98D8);
  sub_1BC0F64D8();
  v14 = (void *)sub_1BC2B43AC();
  swift_bridgeObjectRelease();
  v15 = objc_msgSend((id)objc_opt_self(), sel_ruleWithDefaultAxisBounds_axisBoundsOverrides_, v13, v14);

  objc_msgSend(v9, sel_setAxisScalingRule_, v15);
  objc_msgSend(v9, sel_setIsCriticalForAutoscale_, 1);
  objc_msgSend(v9, sel_setInvertYAxis_, 0);
  v16 = (void *)objc_opt_self();
  v17 = objc_msgSend(a1, sel_healthStore);
  v18 = objc_msgSend(v16, sel_sharedInstanceForHealthStore_, v17);

  if (v18)
  {
    v19 = objc_msgSend((id)objc_opt_self(), sel_medicationDoseEventType);
    v20 = objc_msgSend(v18, sel_displayTypeForObjectType_, v19);

    if (v20)
    {
      v21 = objc_allocWithZone((Class)type metadata accessor for MedicationChartDataFormatter());
      v22 = v9;
      v23 = v20;
      v59 = v23;
      v24 = objc_msgSend(v21, sel_init);
      v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F770]), sel_initWithGraphSeries_baseDisplayType_valueFormatter_dataTypeCode_, v22, v23, v24, 273);

      v56 = v22;
      v26 = objc_allocWithZone((Class)type metadata accessor for MedicationChartDataSource());
      v27 = v60;
      v60 = v15;
      v28 = v27;
      v29 = v25;
      v30 = MedicationChartDataSource.init(with:displayType:)(v28, v29);
      v58 = v30;
      v31 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F600]), sel_init);
      objc_msgSend(v31, sel_setDataSource_, v30);
      v32 = objc_msgSend((id)objc_opt_self(), sel_sharedOperationManager);
      objc_msgSend(v31, sel_setOperationManager_, v32);

      v33 = v31;
      v57 = v10;
      v34 = v62;
      v35 = objc_msgSend(v62, sel_chartDataCacheController);
      objc_msgSend(v35, sel_addCustomChartCache_forDisplayType_, v33, v29);

      v36 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F5F0]), sel_init);
      objc_msgSend(v36, sel_setChartCache_, v33);
      objc_msgSend(v22, sel_setDataSource_, v36);
      sub_1BC0E7998(0, &qword_1EF401940, (uint64_t (*)(uint64_t))sub_1BC28B260, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v37 = swift_allocObject();
      *(_OWORD *)(v37 + 16) = xmmword_1BC2B92D0;
      sub_1BC0E7940();
      v38 = swift_allocObject();
      *(_OWORD *)(v38 + 16) = xmmword_1BC2B7770;
      *(_QWORD *)(v38 + 32) = v29;
      v63[0] = v38;
      sub_1BC2B45A4();
      *(_QWORD *)(v37 + 32) = v63[0];
      v55 = v29;
      v54 = objc_msgSend(a1, sel_healthStore);
      v39 = objc_msgSend(v34, sel_unitController);
      v40 = objc_msgSend(v34, sel_dateCache);
      v41 = objc_msgSend(v34, sel_chartDataCacheController);
      v42 = objc_msgSend(v34, sel_timeScopeController);
      v43 = objc_msgSend(v34, sel_sampleDateRangeController);
      v63[3] = sub_1BC2B23F0();
      __swift_allocate_boxed_opaque_existential_1(v63);
      sub_1BC2B23E4();
      v44 = sub_1BC2B2594();
      v45 = (uint64_t)v61;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v61, 1, 1, v44);
      v46 = objc_allocWithZone(MEMORY[0x1E0D2F788]);
      sub_1BC28A390(v37, 0, 0, v54, v39, v40, v41, v42, v43, v63, v45, 0x2000, 0);

    }
    else
    {
      sub_1BC2B39C8();
      v47 = sub_1BC2B39D4();
      v48 = sub_1BC2B48C8();
      if (os_log_type_enabled(v47, v48))
      {
        v49 = (uint8_t *)swift_slowAlloc();
        v50 = swift_slowAlloc();
        v60 = v15;
        v51 = v50;
        *(_DWORD *)v49 = 136446210;
        v63[0] = v50;
        v64 = &type metadata for MedicationChartItem;
        sub_1BC28B228();
        v52 = sub_1BC2B4478();
        v64 = (ValueMetadata *)sub_1BC12540C(v52, v53, v63);
        sub_1BC2B4FD0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BC0DC000, v47, v48, "[%{public}s] DisplayType not found for medication dose event type", v49, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCEF3A0](v51, -1, -1);
        MEMORY[0x1BCCEF3A0](v49, -1, -1);

      }
      else
      {

      }
      (*((void (**)(char *, id))v58 + 1))(v5, v59);
    }
  }
  else
  {
    __break(1u);
  }
}

unint64_t sub_1BC28B228()
{
  unint64_t result;

  result = qword_1EF401938;
  if (!qword_1EF401938)
  {
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF401938);
  }
  return result;
}

void sub_1BC28B260()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF401948)
  {
    sub_1BC0E1D38(255, &qword_1EF401950);
    v0 = sub_1BC2B4610();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF401948);
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for MedicationChartItem(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  v6 = v4;
  return a1;
}

void destroy for MedicationChartItem(id *a1)
{

}

uint64_t assignWithCopy for MedicationChartItem(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a1 + 8);
  v8 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v8;
  v9 = v8;

  return a1;
}

uint64_t assignWithTake for MedicationChartItem(uint64_t a1, _OWORD *a2)
{
  void *v4;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for MedicationChartItem()
{
  return &type metadata for MedicationChartItem;
}

unint64_t sub_1BC28B3C0()
{
  unint64_t result;

  result = qword_1EF401958;
  if (!qword_1EF401958)
  {
    result = MEMORY[0x1BCCEF2BC](&unk_1BC2C63A4, &type metadata for MedicationChartItem);
    atomic_store(result, (unint64_t *)&qword_1EF401958);
  }
  return result;
}

uint64_t type metadata accessor for MedmojiPreviewDataSource()
{
  uint64_t result;

  result = qword_1EF401970;
  if (!qword_1EF401970)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BC28B444()
{
  unint64_t v0;

  sub_1BC0E7998(319, (unint64_t *)&qword_1EDA0ECC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
    swift_initClassMetadata2();
}

uint64_t sub_1BC28B4E0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *boxed_opaque_existential_1;
  uint64_t (**v25)(uint64_t, uint64_t);
  uint64_t *v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  _QWORD v31[2];
  uint64_t v32;
  _QWORD v33[2];

  v2 = v1;
  v4 = sub_1BC2B2438();
  v5 = *(_QWORD *)(v4 - 8);
  v32 = v4;
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0ECC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v31 - v9;
  v11 = v2 + qword_1EF402D20;
  v12 = sub_1BC2B3608();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *(_QWORD *)(v2 + qword_1EF401968) = a1;
  swift_retain();
  v13 = a1;
  _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE7medmoji0eF10Experience29MedicationVisualizationConfigVSgvg_0();
  swift_beginAccess();
  sub_1BC1A5974((uint64_t)v10, v11);
  swift_endAccess();
  swift_release();
  v33[0] = 0;
  v33[1] = 0xE000000000000000;
  sub_1BC2B51BC();
  swift_bridgeObjectRelease();
  strcpy((char *)v33, "MutableArray<");
  HIWORD(v33[1]) = -4864;
  sub_1BC2B242C();
  sub_1BC2B23FC();
  v14 = *(void (**)(char *, uint64_t))(v5 + 8);
  v14(v7, v4);
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  sub_1BC2B44FC();
  v15 = sub_1BC2B2C00();
  v16 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8C50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v17 = *(unsigned __int8 *)(*(_QWORD *)(sub_1BC2B2BC4() - 8) + 80);
  v18 = (v17 + 32) & ~v17;
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1BC2B92D0;
  v31[1] = v19 + v18;
  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0FE38, (uint64_t (*)(uint64_t))sub_1BC0E1B94, v16);
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1BC2B92C0;
  v21 = v15 + qword_1EF402D20;
  swift_beginAccess();
  sub_1BC11C330(v21, (uint64_t)v10);
  v22 = swift_allocObject();
  swift_weakInit();
  v23 = type metadata accessor for MedicationAvatarItem();
  *(_QWORD *)(v20 + 56) = v23;
  *(_QWORD *)(v20 + 64) = sub_1BC0E519C(&qword_1EF4019D8, (uint64_t (*)(uint64_t))type metadata accessor for MedicationAvatarItem, (uint64_t)&protocol conformance descriptor for MedicationAvatarItem);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v20 + 32));
  sub_1BC109D88((uint64_t)v10, (uint64_t)boxed_opaque_existential_1);
  v25 = (uint64_t (**)(uint64_t, uint64_t))((char *)boxed_opaque_existential_1 + *(int *)(v23 + 20));
  *v25 = sub_1BC28BD2C;
  v25[1] = (uint64_t (*)(uint64_t, uint64_t))v22;
  swift_retain();
  swift_retain();
  sub_1BC2B242C();
  v26 = (uint64_t *)((char *)boxed_opaque_existential_1 + *(int *)(v23 + 28));
  type metadata accessor for MedicationAvatarCell();
  sub_1BC0E519C(&qword_1EF4019C8, (uint64_t (*)(uint64_t))type metadata accessor for MedicationAvatarCell, (uint64_t)&unk_1BC2BB078);
  *v26 = sub_1BC2B2930();
  v26[1] = v27;
  swift_release();
  *(_QWORD *)(v20 + 96) = &type metadata for MedicationDetailItem;
  *(_QWORD *)(v20 + 104) = sub_1BC28BD34();
  *(_QWORD *)(v20 + 72) = v13;
  type metadata accessor for MedicationDetailCell();
  sub_1BC0E519C(&qword_1EF4019D0, (uint64_t (*)(uint64_t))type metadata accessor for MedicationDetailCell, (uint64_t)&unk_1BC2C00E8);
  v28 = v13;
  *(_QWORD *)(v20 + 80) = sub_1BC2B2930();
  *(_QWORD *)(v20 + 88) = v29;
  sub_1BC2B242C();
  sub_1BC2B23FC();
  v14(v7, v32);
  sub_1BC2B2BAC();
  sub_1BC2B2C18();
  swift_release();
  swift_bridgeObjectRelease();

  return v15;
}

uint64_t sub_1BC28B954(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[24];

  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0ECC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C950], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v14[-v7];
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v10 = result;
    v11 = sub_1BC2B3608();
    v12 = *(_QWORD *)(v11 - 8);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v12 + 16))(v8, a2, v11);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
    sub_1BC109D88((uint64_t)v8, (uint64_t)v6);
    v13 = v10 + qword_1EF402D20;
    swift_beginAccess();
    sub_1BC1A5974((uint64_t)v6, v13);
    swift_endAccess();
    return swift_release();
  }
  return result;
}

void sub_1BC28BAA0()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC28BACC()
{
  uint64_t v0;

  return sub_1BC1092C0(v0 + qword_1EF402D20);
}

uint64_t sub_1BC28BAF8()
{
  uint64_t v0;

  v0 = sub_1BC2B2C60();

  sub_1BC1092C0(v0 + qword_1EF402D20);
  return swift_deallocClassInstance();
}

uint64_t sub_1BC28BB48()
{
  return type metadata accessor for MedmojiPreviewDataSource();
}

uint64_t sub_1BC28BB50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_1BC2B2D20();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B2CC0();
  v4 = objc_msgSend((id)objc_opt_self(), sel_systemBackgroundColor);
  sub_1BC2B2CCC();
  sub_1BC2B2CD8();
  v5 = sub_1BC2B2D14();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v5;
}

uint64_t sub_1BC28BC04()
{
  type metadata accessor for MedicationAvatarCell();
  sub_1BC0E519C(&qword_1EF4019C8, (uint64_t (*)(uint64_t))type metadata accessor for MedicationAvatarCell, (uint64_t)&unk_1BC2BB078);
  sub_1BC2B497C();
  type metadata accessor for MedicationDetailCell();
  sub_1BC0E519C(&qword_1EF4019D0, (uint64_t (*)(uint64_t))type metadata accessor for MedicationDetailCell, (uint64_t)&unk_1BC2C00E8);
  return sub_1BC2B497C();
}

uint64_t sub_1BC28BC90()
{
  MEMORY[0x1BCCEF2BC](&unk_1BC2C64A0);
  return sub_1BC2B3074();
}

uint64_t sub_1BC28BCDC()
{
  return sub_1BC0E519C(&qword_1EF4019C0, (uint64_t (*)(uint64_t))type metadata accessor for MedmojiPreviewDataSource, (uint64_t)&unk_1BC2C6448);
}

uint64_t sub_1BC28BD08()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC28BD2C(uint64_t a1, uint64_t a2)
{
  return sub_1BC28B954(a1, a2);
}

unint64_t sub_1BC28BD34()
{
  unint64_t result;

  result = qword_1EF4019E0;
  if (!qword_1EF4019E0)
  {
    result = MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for MedicationDetailItem, &type metadata for MedicationDetailItem);
    atomic_store(result, (unint64_t *)&qword_1EF4019E0);
  }
  return result;
}

void sub_1BC28BD84()
{
  id v0;
  void *v1;
  void *v2;
  id v3;

  v0 = objc_msgSend((id)objc_opt_self(), sel_defaultWorkspace);
  if (v0)
  {
    v1 = v0;
    v2 = (void *)sub_1BC2B2210();
    sub_1BC1069E4(MEMORY[0x1E0DEE9D8]);
    v3 = (id)sub_1BC2B43AC();
    swift_bridgeObjectRelease();
    objc_msgSend(v1, sel_openSensitiveURL_withOptions_, v2, v3);

  }
}

uint64_t MedicationsTapToRadar.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t MedicationsTapToRadar.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

void _s19HealthMedicationsUI0B10TapToRadarC15promptBeforeTTR7message14viewController6actionySS_So06UIViewL0CyyctFZ_0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  _QWORD v18[6];

  swift_bridgeObjectRetain();
  v8 = (void *)sub_1BC2B4430();
  v9 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  v10 = objc_msgSend((id)objc_opt_self(), sel_alertControllerWithTitle_message_preferredStyle_, v8, v9, 1);

  v11 = (void *)sub_1BC2B4430();
  v12 = (void *)objc_opt_self();
  v13 = objc_msgSend(v12, sel_actionWithTitle_style_handler_, v11, 1, 0);

  objc_msgSend(v10, sel_addAction_, v13);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a4;
  *(_QWORD *)(v14 + 24) = a5;
  swift_retain();
  v15 = (void *)sub_1BC2B4430();
  v18[4] = sub_1BC118CE4;
  v18[5] = v14;
  v18[0] = MEMORY[0x1E0C809B0];
  v18[1] = 1107296256;
  v18[2] = sub_1BC1D2994;
  v18[3] = &block_descriptor_30;
  v16 = _Block_copy(v18);
  swift_release();
  v17 = objc_msgSend(v12, sel_actionWithTitle_style_handler_, v15, 0, v16);
  _Block_release(v16);

  objc_msgSend(v10, sel_addAction_, v17);
  objc_msgSend(a3, sel_presentViewController_animated_completion_, v10, 1, 0);

}

id _s19HealthMedicationsUI0B10TapToRadarC19medicationsTracking14viewControllerySo06UIViewJ0CSg_tFZ_0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  id result;
  void *v14;
  unsigned int v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  void *v20;
  void *v21;
  void *v22;
  uint64_t v23;

  v2 = sub_1BC2B2234();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v23 - v7;
  v9 = (void *)objc_opt_self();
  v10 = (void *)sub_1BC2B4430();
  v11 = (void *)sub_1BC2B4430();
  v12 = objc_msgSend(v9, sel_hk_tapToRadarURLForBundleID_component_title_description_classification_reproducibility_keywords_autoDiagnostics_attachments_collaborationContactHandles_diagnosticExtensionOptions_, 0, 1330752, v10, v11, 7, 0, 0, 3, 0, 0, 1);

  sub_1BC2B221C();
  result = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (result)
  {
    v14 = result;
    v15 = objc_msgSend(result, sel_showSensitiveLogItems);

    if (v15 && a1)
    {
      (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
      v16 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
      v17 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v17 + v16, v6, v2);
      v18 = a1;
      _s19HealthMedicationsUI0B10TapToRadarC15promptBeforeTTR7message14viewController6actionySS_So06UIViewL0CyyctFZ_0(0x10000000000000D2, 0x80000001BC2D5CA0, v18, (uint64_t)sub_1BC28C67C, v17);

      swift_release();
    }
    else
    {
      v19 = objc_msgSend((id)objc_opt_self(), sel_defaultWorkspace);
      if (v19)
      {
        v20 = v19;
        v21 = (void *)sub_1BC2B2210();
        sub_1BC1069E4(MEMORY[0x1E0DEE9D8]);
        v22 = (void *)sub_1BC2B43AC();
        swift_bridgeObjectRelease();
        objc_msgSend(v20, sel_openSensitiveURL_withOptions_, v21, v22);

      }
    }
    return (id)(*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id _s19HealthMedicationsUI0B10TapToRadarC16drugInteractions14viewControllerySo06UIViewJ0C_tFZ_0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  id result;
  void *v14;
  unsigned int v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;

  v2 = sub_1BC2B2234();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v22 - v7;
  v9 = (void *)objc_opt_self();
  v10 = (void *)sub_1BC2B4430();
  v11 = (void *)sub_1BC2B4430();
  v12 = objc_msgSend(v9, sel_hk_tapToRadarURLForBundleID_component_title_description_classification_reproducibility_keywords_autoDiagnostics_attachments_collaborationContactHandles_diagnosticExtensionOptions_, 0, 1330752, v10, v11, 7, 0, 0, 2, 0, 0, 1);

  sub_1BC2B221C();
  result = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (result)
  {
    v14 = result;
    v15 = objc_msgSend(result, sel_showSensitiveLogItems);

    if (v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
      v16 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
      v17 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v17 + v16, v6, v2);
      _s19HealthMedicationsUI0B10TapToRadarC15promptBeforeTTR7message14viewController6actionySS_So06UIViewL0CyyctFZ_0(0x10000000000000D2, 0x80000001BC2D5CA0, a1, (uint64_t)sub_1BC28C67C, v17);
      swift_release();
    }
    else
    {
      v18 = objc_msgSend((id)objc_opt_self(), sel_defaultWorkspace);
      if (v18)
      {
        v19 = v18;
        v20 = (void *)sub_1BC2B2210();
        sub_1BC1069E4(MEMORY[0x1E0DEE9D8]);
        v21 = (void *)sub_1BC2B43AC();
        swift_bridgeObjectRelease();
        objc_msgSend(v19, sel_openSensitiveURL_withOptions_, v20, v21);

      }
    }
    return (id)(*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for MedicationsTapToRadar()
{
  return objc_opt_self();
}

uint64_t method lookup function for MedicationsTapToRadar()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BC28C654()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_2Tm_2()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1BC2B2234();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

void sub_1BC28C6E4()
{
  sub_1BC2B2234();
  sub_1BC28BD84();
}

void sub_1BC28C714(double a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;

  if (a3)
  {
    v5 = objc_allocWithZone(MEMORY[0x1E0DC1288]);
    swift_bridgeObjectRetain();
    v6 = objc_msgSend(v5, sel_init);
    objc_msgSend(v6, sel_setLineSpacing_, a1);
    objc_msgSend(v6, sel_setAlignment_, objc_msgSend(v3, sel_textAlignment));
    v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3778]), sel_init);
    v7 = objc_msgSend(v3, sel_attributedText);

    if (!v7)
    {
      v10 = objc_msgSend(v3, sel_font);
      if (!v10)
      {
        swift_bridgeObjectRelease();
        goto LABEL_9;
      }
      v11 = v10;
      v12 = objc_allocWithZone(MEMORY[0x1E0CB3778]);
      v13 = (void *)sub_1BC2B4430();
      swift_bridgeObjectRelease();
      v14 = objc_msgSend(v12, sel_initWithString_, v13);

      objc_msgSend(v18, sel_appendAttributedString_, v14);
      v15 = *MEMORY[0x1E0DC1138];
      v9 = v11;
      objc_msgSend(v18, sel_addAttribute_value_range_, v15, v9, 0, objc_msgSend(v18, sel_length));

LABEL_8:
      v16 = *MEMORY[0x1E0DC1178];
      v17 = v6;
      objc_msgSend(v18, sel_addAttribute_value_range_, v16, v17, 0, objc_msgSend(v18, sel_length));

      objc_msgSend(v3, sel_setAttributedText_, v18);
LABEL_9:

      return;
    }
    swift_bridgeObjectRelease();
    v8 = objc_msgSend(v3, sel_attributedText);
    if (v8)
    {
      v9 = v8;
      objc_msgSend(v18, sel_appendAttributedString_, v8);
      goto LABEL_8;
    }
    __break(1u);
  }
}

uint64_t sub_1BC28C998()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  id v32;

  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0FCC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v0);
  v30 = (char *)&v23 - v1;
  sub_1BC1A4F80();
  v3 = v2;
  v24 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC28E9B0();
  v7 = v6;
  v25 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC28EA30();
  v27 = v10;
  v29 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC28EAA8();
  v28 = v13;
  v31 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v26 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  v15 = (void *)sub_1BC2B3950();
  swift_release();
  v32 = v15;
  sub_1BC24382C();
  sub_1BC106304(0, (unint64_t *)&qword_1EDA0FC60, (unint64_t *)&qword_1EDA0FDA0, 0x1E0D2C4D8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC0E519C((unint64_t *)&qword_1EDA0FB58, (uint64_t (*)(uint64_t))sub_1BC24382C, MEMORY[0x1E0C95D90]);
  sub_1BC2B3FC8();
  swift_release();
  swift_retain();
  sub_1BC2B3DA0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v5, v3);
  sub_1BC0E519C(&qword_1EF401C40, (uint64_t (*)(uint64_t))sub_1BC28E9B0, MEMORY[0x1E0C95708]);
  sub_1BC2B4088();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v7);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FFF0);
  v32 = (id)sub_1BC2B4A0C();
  v16 = sub_1BC2B49C4();
  v17 = (uint64_t)v30;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v30, 1, 1, v16);
  sub_1BC0E519C(&qword_1EF401C50, (uint64_t (*)(uint64_t))sub_1BC28EA30, MEMORY[0x1E0C958E0]);
  sub_1BC1019D8();
  v19 = v26;
  v18 = v27;
  sub_1BC2B4064();
  sub_1BC101BB8(v17);

  (*(void (**)(char *, uint64_t))(v29 + 8))(v12, v18);
  sub_1BC0E519C(&qword_1EF401C58, (uint64_t (*)(uint64_t))sub_1BC28EAA8, MEMORY[0x1E0C95CB8]);
  v20 = v28;
  v21 = sub_1BC2B3FBC();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v19, v20);
  return v21;
}

uint64_t sub_1BC28CD68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  id v32;

  sub_1BC0E7998(0, (unint64_t *)&qword_1EDA0FCC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v0);
  v30 = (char *)&v23 - v1;
  sub_1BC1A4F80();
  v3 = v2;
  v24 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC28E9B0();
  v7 = v6;
  v25 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC28EA30();
  v27 = v10;
  v29 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC28EAA8();
  v28 = v13;
  v31 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v26 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  v15 = (void *)sub_1BC2B3950();
  swift_release();
  v32 = v15;
  sub_1BC24382C();
  sub_1BC106304(0, (unint64_t *)&qword_1EDA0FC60, (unint64_t *)&qword_1EDA0FDA0, 0x1E0D2C4D8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC0E519C((unint64_t *)&qword_1EDA0FB58, (uint64_t (*)(uint64_t))sub_1BC24382C, MEMORY[0x1E0C95D90]);
  sub_1BC2B3FC8();
  swift_release();
  swift_retain();
  sub_1BC2B3DA0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v5, v3);
  sub_1BC0E519C(&qword_1EF401C40, (uint64_t (*)(uint64_t))sub_1BC28E9B0, MEMORY[0x1E0C95708]);
  sub_1BC2B4088();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v7);
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FFF0);
  v32 = (id)sub_1BC2B4A0C();
  v16 = sub_1BC2B49C4();
  v17 = (uint64_t)v30;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v30, 1, 1, v16);
  sub_1BC0E519C(&qword_1EF401C50, (uint64_t (*)(uint64_t))sub_1BC28EA30, MEMORY[0x1E0C958E0]);
  sub_1BC1019D8();
  v19 = v26;
  v18 = v27;
  sub_1BC2B4064();
  sub_1BC101BB8(v17);

  (*(void (**)(char *, uint64_t))(v29 + 8))(v12, v18);
  sub_1BC0E519C(&qword_1EF401C58, (uint64_t (*)(uint64_t))sub_1BC28EAA8, MEMORY[0x1E0C95CB8]);
  v20 = v28;
  v21 = sub_1BC2B3FBC();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v19, v20);
  return v21;
}

uint64_t sub_1BC28D12C(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  char v14;

  if (a1 >> 62)
    goto LABEL_17;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; v4 = sub_1BC2B52D0())
  {
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EF3FBD20);
    if ((a1 & 0xC000000000000001) != 0)
    {
      v5 = 0;
      while (1)
      {
        MEMORY[0x1BCCEE950](v5, a1);
        v6 = v5 + 1;
        if (__OFADD__(v5, 1))
          break;
        v7 = *(id *)(a2 + 24);
        v8 = sub_1BC2B4D84();
        swift_unknownObjectRelease();

        if ((v8 & 1) != 0)
          goto LABEL_14;
        ++v5;
        if (v6 == v4)
          goto LABEL_13;
      }
      __break(1u);
    }
    else
    {
      v9 = 0;
      while (1)
      {
        v10 = v9 + 1;
        if (__OFADD__(v9, 1))
          break;
        v11 = *(void **)(a2 + 24);
        v12 = *(id *)(a1 + 8 * v9 + 32);
        v13 = v11;
        v14 = sub_1BC2B4D84();

        if ((v14 & 1) != 0)
        {
LABEL_14:
          swift_bridgeObjectRelease();
          return 1;
        }
        ++v9;
        if (v10 == v4)
          goto LABEL_13;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
LABEL_13:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1BC28D298(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  id v15;

  if (a3 >> 62)
    goto LABEL_16;
  v5 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; v5 = sub_1BC2B52D0())
  {
    v6 = 4;
    while (1)
    {
      v7 = (a3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1BCCEE950](v6 - 4, a3) : *(id *)(a3 + 8 * v6);
      v8 = v7;
      v9 = v6 - 3;
      if (__OFADD__(v6 - 4, 1))
        break;
      v15 = v7;
      v10 = a1(&v15);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return v12 & 1;
      }
      v11 = v10;

      if ((v11 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v12 = 1;
        return v12 & 1;
      }
      ++v6;
      if (v9 == v5)
        goto LABEL_11;
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  v12 = 0;
  return v12 & 1;
}

uint64_t sub_1BC28D3C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;

  if (*(_QWORD *)(v0 + 56))
  {
    v1 = *(_QWORD *)(v0 + 56);
  }
  else
  {
    v2 = v0;
    v3 = *(void **)(v0 + 24);
    sub_1BC106408();
    swift_allocObject();
    v4 = v3;
    v1 = sub_1BC2B3EF0();
    *(_QWORD *)(v2 + 56) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

_QWORD *sub_1BC28D450()
{
  void **v0;
  void **v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t inited;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  id v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v64;
  id v65;
  uint64_t v66;
  void *v67[4];
  __int128 v68;
  uint64_t v69;
  _QWORD v70[15];

  v1 = v0;
  sub_1BC28E8D0(0, (unint64_t *)&qword_1EF400100, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BC2B92C0;
  v3 = (void *)sub_1BC28D3C8();
  v4 = v0[4];
  type metadata accessor for RelatedCHRRecordsDataSource();
  swift_allocObject();
  v5 = v4;
  v6 = RelatedCHRRecordsDataSource.init(with:healthStore:)(v3, v5);
  v7 = MEMORY[0x1E0D2F070];
  v8 = sub_1BC0E519C(&qword_1EF401BF0, (uint64_t (*)(uint64_t))type metadata accessor for RelatedCHRRecordsDataSource, MEMORY[0x1E0D2F070]);
  *(_QWORD *)(v2 + 32) = v6;
  *(_QWORD *)(v2 + 40) = v8;
  v9 = sub_1BC28D3C8();
  v10 = (uint64_t)v0[2];
  v11 = (uint64_t)v0[5];
  type metadata accessor for OptionsDataSource();
  swift_allocObject();
  v65 = v5;
  swift_retain();
  swift_retain();
  v12 = OptionsDataSource.init(with:listManager:healthStore:analyticsManager:)(v9, v10, v65, v11);
  v13 = sub_1BC0E519C(&qword_1EF401BF8, (uint64_t (*)(uint64_t))type metadata accessor for OptionsDataSource, v7);
  *(_QWORD *)(v2 + 48) = v12;
  *(_QWORD *)(v2 + 56) = v13;
  sub_1BC2B2DEC();
  swift_allocObject();
  swift_bridgeObjectRetain();
  v14 = sub_1BC2B2E04();
  v15 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BC0E7998(0, &qword_1EF401BD8, (uint64_t (*)(uint64_t))sub_1BC28DEF0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC2B92C0;
  *(_QWORD *)(inited + 32) = 2;
  sub_1BC2B2B7C();
  v17 = sub_1BC2B2B88();
  v18 = MEMORY[0x1E0D2B748];
  *(_QWORD *)(inited + 40) = v17;
  *(_QWORD *)(inited + 48) = v18;
  v19 = MEMORY[0x1E0D2B4A0];
  *(_QWORD *)(inited + 56) = MEMORY[0x1E0D2B148];
  *(_QWORD *)(inited + 64) = 1;
  *(_QWORD *)(inited + 72) = v14;
  *(_QWORD *)(inited + 80) = v19;
  *(_QWORD *)(inited + 88) = MEMORY[0x1E0D2B498];
  sub_1BC108BB4(inited);
  swift_setDeallocating();
  sub_1BC28DEF0();
  swift_retain();
  swift_arrayDestroy();
  sub_1BC2B2EAC();
  swift_allocObject();
  swift_retain();
  v66 = sub_1BC2B2EA0();
  v68 = xmmword_1BC2C6500;
  v20 = v1[3];
  type metadata accessor for MedicationChartCellDataSource();
  *(_QWORD *)(swift_allocObject() + qword_1EF3F89A0) = v20;
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8C50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], v15);
  sub_1BC2B2BC4();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BC2B92D0;
  sub_1BC195EAC();
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1BC2B92D0;
  *(_QWORD *)(v21 + 56) = &type metadata for MedicationChartItem;
  *(_QWORD *)(v21 + 64) = sub_1BC28E93C();
  *(_QWORD *)(v21 + 32) = v20;
  *(_QWORD *)(v21 + 40) = 0;
  v22 = v20;
  sub_1BC2B2BAC();
  v23 = sub_1BC2B2750();

  v24 = MEMORY[0x1E0D2F070];
  v25 = sub_1BC0E519C(&qword_1EF401C08, (uint64_t (*)(uint64_t))type metadata accessor for MedicationChartCellDataSource, MEMORY[0x1E0D2F070]);
  v69 = v23;
  v70[0] = v25;
  v26 = v1[3];
  v27 = (uint64_t)v1[6];
  type metadata accessor for MedicationsRecordDoseDataSource();
  swift_allocObject();
  v28 = v26;
  v29 = v65;
  v64 = v10;
  swift_retain();
  swift_retain();
  v30 = v28;
  swift_retain();
  v31 = MedicationsRecordDoseDataSource.init(healthStore:listManager:medication:incompatibilityCache:didTapRecordDoseHandler:)(v29, v10, v30, v27, (uint64_t)sub_1BC28E980, v11);

  v70[1] = v31;
  v70[2] = MEMORY[0x1E0D2B148];
  v32 = v1[3];
  v33 = v29;
  v34 = v32;
  v35 = sub_1BC28CD68();
  type metadata accessor for ScheduleDataSource(0);
  v36 = swift_allocObject();
  swift_retain();
  v37 = sub_1BC28E498((uint64_t)v34, v29, v35, v11, 0, v36);
  v38 = sub_1BC0E519C(&qword_1EF3FE988, type metadata accessor for ScheduleDataSource, v24);
  v70[3] = v37;
  v70[4] = v38;
  sub_1BC2B49A0();
  __swift_project_boxed_opaque_existential_0(v67, (uint64_t)v67[3]);
  v39 = (void *)sub_1BC2B2660();
  v40 = v1[3];
  v41 = objc_allocWithZone((Class)type metadata accessor for MedicationHighlightsDataSource());
  v42 = v39;
  v43 = sub_1BC109E5C(v42, v40);

  v44 = sub_1BC0E519C(&qword_1EF401C10, (uint64_t (*)(uint64_t))type metadata accessor for MedicationHighlightsDataSource, MEMORY[0x1E0D2B7F8]);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v67);
  v70[5] = v43;
  v70[6] = v44;
  v45 = (void *)sub_1BC28D3C8();
  type metadata accessor for MedicationDetailsDataSource();
  swift_allocObject();
  v46 = v33;
  v47 = MedicationDetailsDataSource.init(with:healthStore:)(v45, v46);
  v48 = sub_1BC0E519C(&qword_1EF401C18, (uint64_t (*)(uint64_t))type metadata accessor for MedicationDetailsDataSource, v24);
  v70[7] = v47;
  v70[8] = v48;
  sub_1BC28DBBC();
  v70[9] = v49;
  v70[10] = v50;
  v67[0] = v1[3];
  v51 = v67[0];
  type metadata accessor for MedicationInformationDataSource();
  swift_allocObject();
  v52 = v46;
  swift_retain();
  swift_retain();
  v53 = v51;
  v54 = MedicationInformationDataSource.init(displayContext:listManager:healthStore:analyticsManager:)(v67, v64, v52, v11);
  v55 = sub_1BC0E519C(&qword_1EF401C20, (uint64_t (*)(uint64_t))type metadata accessor for MedicationInformationDataSource, v24);
  v70[11] = v54;
  v70[12] = v55;
  v70[13] = v66;
  v70[14] = MEMORY[0x1E0D2B628];
  swift_retain();
  v56 = 0;
  v57 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    v59 = v70[v56 - 1];
    if (v59)
    {
      v60 = v70[v56];
      swift_unknownObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v57 = sub_1BC0FA658(0, v57[2] + 1, 1, v57);
      v62 = v57[2];
      v61 = v57[3];
      if (v62 >= v61 >> 1)
        v57 = sub_1BC0FA658((_QWORD *)(v61 > 1), v62 + 1, 1, v57);
      v57[2] = v62 + 1;
      v58 = &v57[2 * v62];
      v58[4] = v59;
      v58[5] = v60;
    }
    v56 += 2;
  }
  while (v56 != 16);
  swift_release();
  swift_release();
  sub_1BC28E8D0(0, &qword_1EF401C28, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  swift_arrayDestroy();
  return v57;
}

void sub_1BC28DBBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = sub_1BC28D3C8();
  v2 = *(_QWORD *)(v0 + 40);
  type metadata accessor for MedicationCompactEducationDataSource();
  swift_allocObject();
  swift_retain();
  v3 = MedicationCompactEducationDataSource.init(with:analyticsManager:)(v1, v2);
  v4 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (!v4)
  {
    __break(1u);
    goto LABEL_7;
  }
  v5 = v4;
  v6 = objc_msgSend(v4, sel_features);

  if (!v6)
  {
LABEL_7:
    __break(1u);
    return;
  }
  v7 = objc_msgSend(v6, sel_stanley);

  if (v7)
  {
    v8 = sub_1BC28D3C8();
    type metadata accessor for MedicationRegularEducationDataSource();
    swift_allocObject();
    swift_retain();
    v9 = MedicationRegularEducationDataSource.init(with:analyticsManager:)(v8, v2);
    sub_1BC0E7998(0, &qword_1EF401BD8, (uint64_t (*)(uint64_t))sub_1BC28DEF0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BC2B92C0;
    *(_QWORD *)(inited + 32) = 1;
    v11 = sub_1BC0E519C(&qword_1EF401058, (uint64_t (*)(uint64_t))type metadata accessor for MedicationCompactEducationDataSource, (uint64_t)&protocol conformance descriptor for MedicationCompactEducationDataSource);
    v12 = MEMORY[0x1E0D2F070];
    v13 = sub_1BC0E519C(&qword_1EF401BD0, (uint64_t (*)(uint64_t))type metadata accessor for MedicationCompactEducationDataSource, MEMORY[0x1E0D2F070]);
    *(_QWORD *)(inited + 40) = v3;
    *(_QWORD *)(inited + 48) = v11;
    *(_QWORD *)(inited + 56) = v13;
    *(_QWORD *)(inited + 64) = 2;
    v14 = sub_1BC0E519C(&qword_1EF3FC698, (uint64_t (*)(uint64_t))type metadata accessor for MedicationRegularEducationDataSource, (uint64_t)&protocol conformance descriptor for MedicationRegularEducationDataSource);
    v15 = sub_1BC0E519C(&qword_1EF401BE8, (uint64_t (*)(uint64_t))type metadata accessor for MedicationRegularEducationDataSource, v12);
    *(_QWORD *)(inited + 72) = v9;
    *(_QWORD *)(inited + 80) = v14;
    *(_QWORD *)(inited + 88) = v15;
    sub_1BC108BB4(inited);
    swift_setDeallocating();
    sub_1BC28DEF0();
    swift_retain();
    swift_retain();
    swift_arrayDestroy();
    sub_1BC2B2EAC();
    swift_allocObject();
    sub_1BC2B2EA0();
    swift_release();
    swift_release();
  }
  else
  {
    sub_1BC0E519C(&qword_1EF401BD0, (uint64_t (*)(uint64_t))type metadata accessor for MedicationCompactEducationDataSource, MEMORY[0x1E0D2F070]);
  }
}

uint64_t sub_1BC28DE64()
{
  uint64_t v0;

  swift_release();

  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MedicationConceptDetailDataSourceProvider()
{
  return objc_opt_self();
}

_QWORD *sub_1BC28DED0()
{
  return sub_1BC28D450();
}

void sub_1BC28DEF0()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF401BE0)
  {
    type metadata accessor for UIUserInterfaceSizeClass(255);
    sub_1BC108D94();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF401BE0);
  }
}

uint64_t sub_1BC28DF5C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  id v3;
  char v4;

  v2 = *a2;
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EF3FBD20);
  v3 = *(id *)(v2 + qword_1EF3FFC48);
  v4 = sub_1BC2B4D84();

  return v4 & 1;
}

uint64_t sub_1BC28DFD8()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1BC2B2768();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC28E03C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  char v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _OWORD *v16;
  void *v17;
  __int128 v18;
  _QWORD *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[5];

  v11 = a5 & 1;
  sub_1BC118DAC();
  v31 = *(_QWORD *)(v12 - 8);
  v32 = v12;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1BC2B3710();
  MEMORY[0x1E0C80A78](v15);
  v36[3] = &type metadata for TransientSchedule;
  v36[4] = sub_1BC28EB8C();
  v16 = (_OWORD *)swift_allocObject();
  v36[0] = v16;
  v17 = *(void **)(a1 + 40);
  v18 = *(_OWORD *)(a1 + 16);
  v16[1] = *(_OWORD *)a1;
  v16[2] = v18;
  v16[3] = *(_OWORD *)(a1 + 32);
  v19 = (_QWORD *)(a6 + qword_1EF3F9C78);
  *v19 = 0xD000000000000014;
  v19[1] = 0x80000001BC2C9680;
  v20 = qword_1EF3F9C80;
  swift_retain();
  sub_1BC2B3704();
  v21 = objc_allocWithZone((Class)sub_1BC2B3734());
  *(_QWORD *)(a6 + v20) = sub_1BC2B3728();
  v22 = qword_1EF3F9C88;
  *(_QWORD *)(a6 + qword_1EF3F9C88) = 0;
  v23 = qword_1EF3F9C98;
  *(_QWORD *)(a6 + qword_1EF3F9C98) = 0;
  *(_QWORD *)(a6 + qword_1EF3F9CA0) = MEMORY[0x1E0DEE9E8];
  sub_1BC0E79F0((uint64_t)v36, a6 + qword_1EF3F9C68);
  v24 = *(void **)(a6 + v22);
  *(_QWORD *)(a6 + v22) = a2;
  v33 = a2;

  *(_QWORD *)(a6 + qword_1EF3F9C90) = a4;
  v35 = (uint64_t)v17;
  sub_1BC118C10();
  swift_allocObject();
  v34 = a4;
  swift_retain();
  v25 = v17;
  *(_QWORD *)(a6 + qword_1EF3F9C70) = sub_1BC2B3EF0();
  *(_BYTE *)(a6 + qword_1EF3F9C60) = v11;
  *(_QWORD *)(a6 + v23) = a3;
  swift_retain();
  swift_release();
  swift_release();
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8C50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BC2B2BC4();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BC2B92D0;
  sub_1BC2B2BAC();
  v26 = sub_1BC2B2750();
  v27 = *(_QWORD *)(v26 + qword_1EF3F9C98);
  if (v27)
  {
    swift_retain_n();
    v28 = v27;
  }
  else
  {
    LOBYTE(v35) = 1;
    swift_retain_n();
    sub_1BC2B3F14();
    sub_1BC0E519C((unint64_t *)&qword_1EF3F9DD0, (uint64_t (*)(uint64_t))sub_1BC118DAC, MEMORY[0x1E0C960B0]);
    v29 = v32;
    v28 = sub_1BC2B3FBC();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v14, v29);
  }
  swift_retain();
  swift_release();
  v35 = v28;
  swift_allocObject();
  swift_weakInit();
  sub_1BC21F5C8();
  sub_1BC0E519C((unint64_t *)&qword_1EF3F9DE0, (uint64_t (*)(uint64_t))sub_1BC21F5C8, MEMORY[0x1E0C95D90]);
  sub_1BC2B40A0();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  swift_release();
  sub_1BC10EA58();
  swift_release();

  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v36);
  return v26;
}

uint64_t sub_1BC28E498(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[5];

  v11 = a5 & 1;
  sub_1BC118DAC();
  v13 = v12;
  v29 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1BC2B3710();
  MEMORY[0x1E0C80A78](v16);
  v31[3] = sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDA0);
  v31[4] = &protocol witness table for HKMedicationUserDomainConcept;
  v31[0] = a1;
  v17 = (_QWORD *)(a6 + qword_1EF3F9C78);
  *v17 = 0xD000000000000014;
  v17[1] = 0x80000001BC2C9680;
  v18 = qword_1EF3F9C80;
  swift_retain();
  sub_1BC2B3704();
  v19 = objc_allocWithZone((Class)sub_1BC2B3734());
  *(_QWORD *)(a6 + v18) = sub_1BC2B3728();
  v20 = qword_1EF3F9C88;
  *(_QWORD *)(a6 + qword_1EF3F9C88) = 0;
  v21 = qword_1EF3F9C98;
  *(_QWORD *)(a6 + qword_1EF3F9C98) = 0;
  *(_QWORD *)(a6 + qword_1EF3F9CA0) = MEMORY[0x1E0DEE9E8];
  sub_1BC0E79F0((uint64_t)v31, a6 + qword_1EF3F9C68);
  v22 = *(void **)(a6 + v20);
  *(_QWORD *)(a6 + v20) = a2;
  v23 = a2;

  *(_QWORD *)(a6 + qword_1EF3F9C90) = a4;
  v30 = 0;
  sub_1BC118C10();
  swift_allocObject();
  swift_retain();
  *(_QWORD *)(a6 + qword_1EF3F9C70) = sub_1BC2B3EF0();
  *(_BYTE *)(a6 + qword_1EF3F9C60) = v11;
  *(_QWORD *)(a6 + v21) = a3;
  swift_retain();
  swift_release();
  swift_release();
  sub_1BC0E7998(0, (unint64_t *)&qword_1EF3F8C50, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2B090], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BC2B2BC4();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BC2B92D0;
  sub_1BC2B2BAC();
  v24 = sub_1BC2B2750();
  v25 = *(_QWORD *)(v24 + qword_1EF3F9C98);
  if (v25)
  {
    swift_retain_n();
    v26 = v25;
  }
  else
  {
    LOBYTE(v30) = 1;
    swift_retain_n();
    sub_1BC2B3F14();
    sub_1BC0E519C((unint64_t *)&qword_1EF3F9DD0, (uint64_t (*)(uint64_t))sub_1BC118DAC, MEMORY[0x1E0C960B0]);
    v26 = sub_1BC2B3FBC();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v15, v13);
  }
  swift_retain();
  swift_release();
  v30 = v26;
  swift_allocObject();
  swift_weakInit();
  sub_1BC21F5C8();
  sub_1BC0E519C((unint64_t *)&qword_1EF3F9DE0, (uint64_t (*)(uint64_t))sub_1BC21F5C8, MEMORY[0x1E0C95D90]);
  sub_1BC2B40A0();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  swift_release();
  sub_1BC10EA58();
  swift_release();

  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v31);
  return v24;
}

void sub_1BC28E8D0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BC0E8778(255, (unint64_t *)&qword_1EF3F8998);
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BC28E93C()
{
  unint64_t result;

  result = qword_1EF401C00;
  if (!qword_1EF401C00)
  {
    result = MEMORY[0x1BCCEF2BC](&unk_1BC2C6300, &type metadata for MedicationChartItem);
    atomic_store(result, (unint64_t *)&qword_1EF401C00);
  }
  return result;
}

uint64_t sub_1BC28E980()
{
  return sub_1BC2B37E8();
}

uint64_t sub_1BC28E98C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

void sub_1BC28E9B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF401C30)
  {
    sub_1BC24382C();
    sub_1BC0E519C((unint64_t *)&qword_1EDA0FB58, (uint64_t (*)(uint64_t))sub_1BC24382C, MEMORY[0x1E0C95D90]);
    v0 = sub_1BC2B3DAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF401C30);
  }
}

void sub_1BC28EA30()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF401C38)
  {
    sub_1BC28E9B0();
    sub_1BC0E519C(&qword_1EF401C40, (uint64_t (*)(uint64_t))sub_1BC28E9B0, MEMORY[0x1E0C95708]);
    v0 = sub_1BC2B3DE8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF401C38);
  }
}

void sub_1BC28EAA8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF401C48)
  {
    sub_1BC28EA30();
    sub_1BC0E1D38(255, (unint64_t *)&qword_1EDA0FFF0);
    sub_1BC0E519C(&qword_1EF401C50, (uint64_t (*)(uint64_t))sub_1BC28EA30, MEMORY[0x1E0C958E0]);
    sub_1BC1019D8();
    v0 = sub_1BC2B3E60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF401C48);
  }
}

uint64_t sub_1BC28EB5C@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BC28D12C(*a1, v2);
  *a2 = result & 1;
  return result;
}

unint64_t sub_1BC28EB8C()
{
  unint64_t result;

  result = qword_1EF401C60;
  if (!qword_1EF401C60)
  {
    result = MEMORY[0x1BCCEF2BC](&unk_1BC2BACA0, &type metadata for TransientSchedule);
    atomic_store(result, (unint64_t *)&qword_1EF401C60);
  }
  return result;
}

uint64_t sub_1BC28EBD0()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BC28EBFC@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t v3;
  uint64_t result;
  _QWORD v5[5];
  uint64_t v6;

  v3 = *a1;
  v5[2] = &v6;
  result = sub_1BC28D298((uint64_t (*)(id *))sub_1BC28EC54, (uint64_t)v5, v3);
  *a2 = result & 1;
  return result;
}

uint64_t sub_1BC28EC54(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC28DF5C(a1, *(uint64_t **)(v1 + 16)) & 1;
}

void sub_1BC28EC70(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  double v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  uint64_t v28;
  void *v29;
  void *v30;
  _QWORD v31[2];

  v2 = v1;
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v31 - v5;
  v7 = objc_msgSend(v1, sel_headerView);
  v8 = objc_msgSend(v7, sel_customIconContainerView);

  if (v8)
  {
    v9 = objc_msgSend(objc_allocWithZone((Class)sub_1BC2B3320()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    sub_1BC2B3314();
    objc_msgSend(v9, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v10 = objc_msgSend(v2, sel_headerView);
    objc_msgSend(v10, sel_addSubview_, v9);

    sub_1BC0E1CB0(a1, (uint64_t)v6, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
    sub_1BC2B3308();
    sub_1BC0E2130(0, (unint64_t *)&qword_1EDA0FEF0, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1BC2BA730;
    v12 = objc_msgSend(v2, sel_headerView);
    v13 = objc_msgSend(v12, sel_topAnchor);

    v14 = objc_msgSend(v9, sel_topAnchor);
    v15 = (void *)objc_opt_self();
    v16 = 4.0;
    if ((objc_msgSend(v15, sel_hk_currentDeviceHas4InchScreen) & 1) == 0)
    {
      if (objc_msgSend(v15, sel_hk_currentDeviceHas4Point7InchScreen))
        v16 = 4.0;
      else
        v16 = 12.0;
    }
    v17 = (void *)objc_opt_self();
    v18 = objc_msgSend(v13, sel_constraintEqualToAnchor_constant_, v14, v16);

    *(_QWORD *)(v11 + 32) = v18;
    v19 = objc_msgSend(v2, sel_headerView);
    v20 = objc_msgSend(v19, sel_centerXAnchor);

    v21 = objc_msgSend(v9, sel_centerXAnchor);
    v22 = objc_msgSend(v20, sel_constraintEqualToAnchor_, v21);

    *(_QWORD *)(v11 + 40) = v22;
    v23 = objc_msgSend(v9, sel_heightAnchor);
    v24 = objc_msgSend(v23, sel_constraintEqualToConstant_, 104.0);

    *(_QWORD *)(v11 + 48) = v24;
    v25 = objc_msgSend(v9, sel_widthAnchor);
    v26 = objc_msgSend(v25, sel_constraintEqualToConstant_, 104.0);

    *(_QWORD *)(v11 + 56) = v26;
    v31[1] = v11;
    sub_1BC2B45A4();
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
    v27 = (void *)sub_1BC2B4580();
    swift_bridgeObjectRelease();
    objc_msgSend(v17, sel_activateConstraints_, v27);

    v28 = qword_1EF3FAA80;
    v29 = *(void **)&v2[qword_1EF3FAA80];
    if (v29)
    {
      objc_msgSend(v29, sel_removeFromSuperview);
      v30 = *(void **)&v2[v28];
    }
    else
    {
      v30 = 0;
    }
    *(_QWORD *)&v2[v28] = v9;

  }
}

uint64_t sub_1BC28F074()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  void (*v5)(void);
  _QWORD *v6;
  _QWORD *v7;
  void (*v8)(void);
  _QWORD *v9;

  v1 = v0;
  v2 = qword_1EF3FAA88;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC26465C(0, (unint64_t *)&qword_1EF3F93F8, (unint64_t *)&qword_1EF3FB1D0, MEMORY[0x1E0DEA968]);
  sub_1BC1AD9D4();
  swift_retain();
  sub_1BC2B40A0();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  swift_release();
  v3 = *(_QWORD **)(v0 + v2);
  v4 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v5 = *(void (**)(void))(class metadata base offset for SpecificationStepViewController
                        + (*MEMORY[0x1E0DEEDD8] & *v3)
                        + 80);
  v6 = v3;
  v5();

  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC252694(0, (unint64_t *)&qword_1EF3F9DD8, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC118E64();
  sub_1BC2B40A0();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  swift_release();
  v7 = *(_QWORD **)(v1 + v2);
  v8 = *(void (**)(void))(class metadata base offset for SpecificationStepViewController + (*v4 & *v7) + 88);
  v9 = v7;
  v8();

  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC2B40A0();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  swift_release();
  type metadata accessor for MedicationOnboardingFlowManager(0);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC2A2E34(0, &qword_1EF401C78, &qword_1EF3F9730, (unint64_t *)&qword_1EF400130, 0x1E0CB64A0);
  sub_1BC2A5800();
  swift_retain();
  sub_1BC2B40A0();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BC28F40C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  void (*v5)(void);
  _QWORD *v6;
  _QWORD *v7;
  void (*v8)(void);
  _QWORD *v9;

  v1 = v0;
  v2 = qword_1EF3FAA88;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC2A2DD0(0, (unint64_t *)&qword_1EF3FB848, &qword_1EF3FB840, (void (*)(uint64_t))type metadata accessor for FormStepResult);
  sub_1BC2A6680(&qword_1EF401148, (unint64_t *)&qword_1EF3FB848, &qword_1EF3FB840, (void (*)(uint64_t))type metadata accessor for FormStepResult);
  swift_retain();
  sub_1BC2B40A0();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  swift_release();
  v3 = *(_QWORD **)(v0 + v2);
  v4 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v5 = *(void (**)(void))(class metadata base offset for SpecificationStepViewController
                        + (*MEMORY[0x1E0DEEDD8] & *v3)
                        + 80);
  v6 = v3;
  v5();

  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC252694(0, (unint64_t *)&qword_1EF3F9DD8, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC118E64();
  sub_1BC2B40A0();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  swift_release();
  v7 = *(_QWORD **)(v1 + v2);
  v8 = *(void (**)(void))(class metadata base offset for SpecificationStepViewController + (*v4 & *v7) + 88);
  v9 = v7;
  v8();

  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC2B40A0();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  swift_release();
  type metadata accessor for MedicationOnboardingFlowManager(0);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC2A2E34(0, &qword_1EF401C78, &qword_1EF3F9730, (unint64_t *)&qword_1EF400130, 0x1E0CB64A0);
  sub_1BC2A5800();
  swift_retain();
  sub_1BC2B40A0();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BC28F7C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  void (*v5)(void);
  _QWORD *v6;
  _QWORD *v7;
  void (*v8)(void);
  _QWORD *v9;

  v1 = v0;
  v2 = qword_1EF3FAA88;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC2A2DD0(0, (unint64_t *)&qword_1EF3FB848, &qword_1EF3FB840, (void (*)(uint64_t))type metadata accessor for FormStepResult);
  sub_1BC2A6680(&qword_1EF401148, (unint64_t *)&qword_1EF3FB848, &qword_1EF3FB840, (void (*)(uint64_t))type metadata accessor for FormStepResult);
  swift_retain();
  sub_1BC2B40A0();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  swift_release();
  v3 = *(_QWORD **)(v0 + v2);
  v4 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v5 = *(void (**)(void))(class metadata base offset for SpecificationStepViewController
                        + (*MEMORY[0x1E0DEEDD8] & *v3)
                        + 80);
  v6 = v3;
  v5();

  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC252694(0, (unint64_t *)&qword_1EF3F9DD8, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC118E64();
  sub_1BC2B40A0();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  swift_release();
  v7 = *(_QWORD **)(v1 + v2);
  v8 = *(void (**)(void))(class metadata base offset for SpecificationStepViewController + (*v4 & *v7) + 88);
  v9 = v7;
  v8();

  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC2B40A0();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  swift_release();
  type metadata accessor for MedicationOnboardingFlowManager(0);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC2A2E34(0, &qword_1EF401C78, &qword_1EF3F9730, (unint64_t *)&qword_1EF400130, 0x1E0CB64A0);
  sub_1BC2A5800();
  swift_retain();
  sub_1BC2B40A0();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BC28FB7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  void (*v5)(void);
  _QWORD *v6;
  _QWORD *v7;
  void (*v8)(void);
  _QWORD *v9;

  v1 = v0;
  v2 = qword_1EF3FAA88;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC26465C(0, (unint64_t *)&qword_1EF3FA3B0, (unint64_t *)&qword_1EF3FA3B8, (uint64_t)&type metadata for StrengthStepResult);
  sub_1BC128690();
  swift_retain();
  sub_1BC2B40A0();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  swift_release();
  v3 = *(_QWORD **)(v0 + v2);
  v4 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v5 = *(void (**)(void))(class metadata base offset for SpecificationStepViewController
                        + (*MEMORY[0x1E0DEEDD8] & *v3)
                        + 80);
  v6 = v3;
  v5();

  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC252694(0, (unint64_t *)&qword_1EF3F9DD8, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC118E64();
  sub_1BC2B40A0();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  swift_release();
  v7 = *(_QWORD **)(v1 + v2);
  v8 = *(void (**)(void))(class metadata base offset for SpecificationStepViewController + (*v4 & *v7) + 88);
  v9 = v7;
  v8();

  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC2B40A0();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  swift_release();
  type metadata accessor for MedicationOnboardingFlowManager(0);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC2A2E34(0, &qword_1EF401C78, &qword_1EF3F9730, (unint64_t *)&qword_1EF400130, 0x1E0CB64A0);
  sub_1BC2A5800();
  swift_retain();
  sub_1BC2B40A0();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BC28FF14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  void (*v5)(void);
  _QWORD *v6;
  _QWORD *v7;
  void (*v8)(void);
  _QWORD *v9;

  v1 = v0;
  v2 = qword_1EF3FAA88;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC26465C(0, (unint64_t *)&qword_1EF3FA3B0, (unint64_t *)&qword_1EF3FA3B8, (uint64_t)&type metadata for StrengthStepResult);
  sub_1BC128690();
  swift_retain();
  sub_1BC2B40A0();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  swift_release();
  v3 = *(_QWORD **)(v0 + v2);
  v4 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v5 = *(void (**)(void))(class metadata base offset for SpecificationStepViewController
                        + (*MEMORY[0x1E0DEEDD8] & *v3)
                        + 80);
  v6 = v3;
  v5();

  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC252694(0, (unint64_t *)&qword_1EF3F9DD8, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC118E64();
  sub_1BC2B40A0();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  swift_release();
  v7 = *(_QWORD **)(v1 + v2);
  v8 = *(void (**)(void))(class metadata base offset for SpecificationStepViewController + (*v4 & *v7) + 88);
  v9 = v7;
  v8();

  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC2B40A0();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  swift_release();
  type metadata accessor for MedicationOnboardingFlowManager(0);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC2A2E34(0, &qword_1EF401C78, &qword_1EF3F9730, (unint64_t *)&qword_1EF400130, 0x1E0CB64A0);
  sub_1BC2A5800();
  swift_retain();
  sub_1BC2B40A0();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BC2902AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  void (*v5)(void);
  _QWORD *v6;
  _QWORD *v7;
  void (*v8)(void);
  _QWORD *v9;

  v1 = v0;
  v2 = qword_1EF3FAA88;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC2A2E34(0, (unint64_t *)&qword_1EF3F9DA0, (unint64_t *)&qword_1EDA0FD00, &qword_1EDA0FCF8, 0x1E0D2C480);
  sub_1BC2653C8();
  swift_retain();
  sub_1BC2B40A0();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  swift_release();
  v3 = *(_QWORD **)(v0 + v2);
  v4 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v5 = *(void (**)(void))(class metadata base offset for SpecificationStepViewController
                        + (*MEMORY[0x1E0DEEDD8] & *v3)
                        + 80);
  v6 = v3;
  v5();

  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC252694(0, (unint64_t *)&qword_1EF3F9DD8, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC118E64();
  sub_1BC2B40A0();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  swift_release();
  v7 = *(_QWORD **)(v1 + v2);
  v8 = *(void (**)(void))(class metadata base offset for SpecificationStepViewController + (*v4 & *v7) + 88);
  v9 = v7;
  v8();

  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC2B40A0();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  swift_release();
  type metadata accessor for MedicationOnboardingFlowManager(0);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC2A2E34(0, &qword_1EF401C78, &qword_1EF3F9730, (unint64_t *)&qword_1EF400130, 0x1E0CB64A0);
  sub_1BC2A5800();
  swift_retain();
  sub_1BC2B40A0();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BC29064C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  _QWORD *v4;
  _QWORD *v5;
  void (*v6)(void);
  _QWORD *v7;
  _QWORD *v8;
  void (*v9)(void);
  _QWORD *v10;

  v1 = v0;
  v2 = qword_1EF3FAA88;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  v3 = (void (*)(uint64_t))MEMORY[0x1E0D2C6F0];
  sub_1BC2A2DD0(0, (unint64_t *)&qword_1EF3F8978, &qword_1EF3F8958, (void (*)(uint64_t))MEMORY[0x1E0D2C6F0]);
  sub_1BC2A6680(&qword_1EF3FAF90, (unint64_t *)&qword_1EF3F8978, &qword_1EF3F8958, v3);
  swift_retain();
  sub_1BC2B40A0();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  swift_release();
  v4 = *(_QWORD **)(v0 + v2);
  v5 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v6 = *(void (**)(void))(class metadata base offset for SpecificationStepViewController
                        + (*MEMORY[0x1E0DEEDD8] & *v4)
                        + 80);
  v7 = v4;
  v6();

  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC252694(0, (unint64_t *)&qword_1EF3F9DD8, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC118E64();
  sub_1BC2B40A0();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  swift_release();
  v8 = *(_QWORD **)(v1 + v2);
  v9 = *(void (**)(void))(class metadata base offset for SpecificationStepViewController + (*v5 & *v8) + 88);
  v10 = v8;
  v9();

  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC2B40A0();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  swift_release();
  type metadata accessor for MedicationOnboardingFlowManager(0);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC2A2E34(0, &qword_1EF401C78, &qword_1EF3F9730, (unint64_t *)&qword_1EF400130, 0x1E0CB64A0);
  sub_1BC2A5800();
  swift_retain();
  sub_1BC2B40A0();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BC290A04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  _QWORD *v4;
  _QWORD *v5;
  void (*v6)(void);
  _QWORD *v7;
  _QWORD *v8;
  void (*v9)(void);
  _QWORD *v10;

  v1 = v0;
  v2 = qword_1EF3FAA88;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  v3 = (void (*)(uint64_t))MEMORY[0x1E0D2C950];
  sub_1BC2A2DD0(0, &qword_1EF3FB540, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
  sub_1BC2A6680((unint64_t *)&qword_1EF3FB550, &qword_1EF3FB540, (unint64_t *)&qword_1EDA0ECC0, v3);
  swift_retain();
  sub_1BC2B40A0();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  swift_release();
  v4 = *(_QWORD **)(v0 + v2);
  v5 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v6 = *(void (**)(void))(class metadata base offset for SpecificationStepViewController
                        + (*MEMORY[0x1E0DEEDD8] & *v4)
                        + 80);
  v7 = v4;
  v6();

  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC252694(0, (unint64_t *)&qword_1EF3F9DD8, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC118E64();
  sub_1BC2B40A0();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  swift_release();
  v8 = *(_QWORD **)(v1 + v2);
  v9 = *(void (**)(void))(class metadata base offset for SpecificationStepViewController + (*v5 & *v8) + 88);
  v10 = v8;
  v9();

  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC2B40A0();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  swift_release();
  type metadata accessor for MedicationOnboardingFlowManager(0);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC2A2E34(0, &qword_1EF401C78, &qword_1EF3F9730, (unint64_t *)&qword_1EF400130, 0x1E0CB64A0);
  sub_1BC2A5800();
  swift_retain();
  sub_1BC2B40A0();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BC290DBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  void (*v5)(void);
  _QWORD *v6;
  _QWORD *v7;
  void (*v8)(void);
  _QWORD *v9;

  v1 = v0;
  v2 = qword_1EF3FAA88;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC26465C(0, (unint64_t *)&qword_1EF400C58, (unint64_t *)&qword_1EF400C60, (uint64_t)&type metadata for MedicationNicknameNotes);
  sub_1BC2A681C();
  swift_retain();
  sub_1BC2B40A0();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  swift_release();
  v3 = *(_QWORD **)(v0 + v2);
  v4 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v5 = *(void (**)(void))(class metadata base offset for SpecificationStepViewController
                        + (*MEMORY[0x1E0DEEDD8] & *v3)
                        + 80);
  v6 = v3;
  v5();

  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC252694(0, (unint64_t *)&qword_1EF3F9DD8, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC118E64();
  sub_1BC2B40A0();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  swift_release();
  v7 = *(_QWORD **)(v1 + v2);
  v8 = *(void (**)(void))(class metadata base offset for SpecificationStepViewController + (*v4 & *v7) + 88);
  v9 = v7;
  v8();

  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC2B40A0();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  swift_release();
  type metadata accessor for MedicationOnboardingFlowManager(0);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC2A2E34(0, &qword_1EF401C78, &qword_1EF3F9730, (unint64_t *)&qword_1EF400130, 0x1E0CB64A0);
  sub_1BC2A5800();
  swift_retain();
  sub_1BC2B40A0();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BC291154()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  void (*v5)(void);
  _QWORD *v6;
  _QWORD *v7;
  void (*v8)(void);
  _QWORD *v9;

  v1 = v0;
  v2 = qword_1EF3FAA88;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC26465C(0, (unint64_t *)&qword_1EF3FE530, (unint64_t *)&qword_1EF3F9040, MEMORY[0x1E0DEAFA0]);
  sub_1BC2A6A30();
  swift_retain();
  sub_1BC2B40A0();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  swift_release();
  v3 = *(_QWORD **)(v0 + v2);
  v4 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v5 = *(void (**)(void))(class metadata base offset for SpecificationStepViewController
                        + (*MEMORY[0x1E0DEEDD8] & *v3)
                        + 80);
  v6 = v3;
  v5();

  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC252694(0, (unint64_t *)&qword_1EF3F9DD8, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC118E64();
  sub_1BC2B40A0();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  swift_release();
  v7 = *(_QWORD **)(v1 + v2);
  v8 = *(void (**)(void))(class metadata base offset for SpecificationStepViewController + (*v4 & *v7) + 88);
  v9 = v7;
  v8();

  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC2B40A0();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  swift_release();
  type metadata accessor for MedicationOnboardingFlowManager(0);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC2A2E34(0, &qword_1EF401C78, &qword_1EF3F9730, (unint64_t *)&qword_1EF400130, 0x1E0CB64A0);
  sub_1BC2A5800();
  swift_retain();
  sub_1BC2B40A0();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BC2914EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  void *v10;
  __int128 v11;
  __int128 v12;

  v6 = type metadata accessor for MedicationOnboardingFlowManager(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = MEMORY[0x1BCCEF478](a3 + 16);
  if (result)
  {
    v10 = (void *)result;
    sub_1BC0FC574(result + qword_1EF3FAA58, (uint64_t)v8, type metadata accessor for MedicationOnboardingFlowManager);

    if (a2)
    {
      *((_QWORD *)&v12 + 1) = MEMORY[0x1E0DEA968];
      *(_QWORD *)&v11 = a1;
      *((_QWORD *)&v11 + 1) = a2;
    }
    else
    {
      v11 = 0u;
      v12 = 0u;
    }
    swift_bridgeObjectRetain();
    MedicationOnboardingFlowManager.consume(value:)((uint64_t)&v11);
    sub_1BC0E8594((uint64_t)v8, type metadata accessor for MedicationOnboardingFlowManager);
    return sub_1BC10BA60((uint64_t)&v11);
  }
  return result;
}

uint64_t sub_1BC2915E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  void *v11;
  uint64_t v12;
  uint64_t *boxed_opaque_existential_1;
  __int128 v14;
  __int128 v15;

  sub_1BC0E1C64(0, &qword_1EF3FB840, (void (*)(uint64_t))type metadata accessor for FormStepResult);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v14 - v5;
  v7 = type metadata accessor for MedicationOnboardingFlowManager(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = MEMORY[0x1BCCEF478](a2 + 16);
  if (result)
  {
    v11 = (void *)result;
    sub_1BC0FC574(result + qword_1EF3FAA58, (uint64_t)v9, type metadata accessor for MedicationOnboardingFlowManager);

    sub_1BC0E1CB0(a1, (uint64_t)v6, &qword_1EF3FB840, (void (*)(uint64_t))type metadata accessor for FormStepResult);
    v12 = type metadata accessor for FormStepResult();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v6, 1, v12) == 1)
    {
      sub_1BC0E1CFC((uint64_t)v6, &qword_1EF3FB840, (void (*)(uint64_t))type metadata accessor for FormStepResult);
      v14 = 0u;
      v15 = 0u;
    }
    else
    {
      *((_QWORD *)&v15 + 1) = v12;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v14);
      sub_1BC0F1B94((uint64_t)v6, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for FormStepResult);
    }
    MedicationOnboardingFlowManager.consume(value:)((uint64_t)&v14);
    sub_1BC0E8594((uint64_t)v9, type metadata accessor for MedicationOnboardingFlowManager);
    return sub_1BC10BA60((uint64_t)&v14);
  }
  return result;
}

uint64_t sub_1BC29177C(void *a1, uint64_t a2, void *a3, unsigned __int8 a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  void *v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;

  v10 = type metadata accessor for MedicationOnboardingFlowManager(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = MEMORY[0x1BCCEF478](a5 + 16);
  if (result)
  {
    v14 = (void *)result;
    sub_1BC0FC574(result + qword_1EF3FAA58, (uint64_t)v12, type metadata accessor for MedicationOnboardingFlowManager);

    if (a4 == 0xFF)
    {
      v16 = 0u;
      v17 = 0u;
    }
    else
    {
      *((_QWORD *)&v17 + 1) = &type metadata for StrengthStepResult;
      v15 = swift_allocObject();
      *(_QWORD *)&v16 = v15;
      *(_QWORD *)(v15 + 16) = a1;
      *(_QWORD *)(v15 + 24) = a2;
      *(_QWORD *)(v15 + 32) = a3;
      *(_BYTE *)(v15 + 40) = a4 & 1;
    }
    sub_1BC1287A4(a1, a2, a3, a4);
    MedicationOnboardingFlowManager.consume(value:)((uint64_t)&v16);
    sub_1BC0E8594((uint64_t)v12, type metadata accessor for MedicationOnboardingFlowManager);
    return sub_1BC10BA60((uint64_t)&v16);
  }
  return result;
}

uint64_t sub_1BC2918C0(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  void *v8;
  id v9;
  __int128 v10;
  __int128 v11;

  v4 = type metadata accessor for MedicationOnboardingFlowManager(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = MEMORY[0x1BCCEF478](a2 + 16);
  if (result)
  {
    v8 = (void *)result;
    sub_1BC0FC574(result + qword_1EF3FAA58, (uint64_t)v6, type metadata accessor for MedicationOnboardingFlowManager);

    if (a1)
    {
      *((_QWORD *)&v11 + 1) = sub_1BC0E1D38(0, &qword_1EDA0FCF8);
      *(_QWORD *)&v10 = a1;
    }
    else
    {
      v10 = 0u;
      v11 = 0u;
    }
    v9 = a1;
    MedicationOnboardingFlowManager.consume(value:)((uint64_t)&v10);
    sub_1BC0E8594((uint64_t)v6, type metadata accessor for MedicationOnboardingFlowManager);
    return sub_1BC10BA60((uint64_t)&v10);
  }
  return result;
}

uint64_t sub_1BC2919C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(_QWORD, _QWORD, _QWORD);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  unint64_t v37;
  unint64_t v38;
  void (*v39)(char *, unint64_t, uint64_t);
  char v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  void *v52;
  void (*v53)(char *, char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t result;
  void *v57;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v59;
  unsigned int (*v60)(_QWORD, _QWORD, _QWORD);
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  char *v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __int128 v84;
  __int128 v85;

  v78 = a2;
  v3 = type metadata accessor for MedicationOnboardingFlowManager(0);
  MEMORY[0x1E0C80A78](v3);
  v77 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
  MEMORY[0x1E0C80A78](v5);
  v66 = (char *)&v59 - v6;
  v7 = sub_1BC2B3698();
  v83 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0FB470();
  v81 = *(_QWORD *)(v10 - 8);
  v82 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = sub_1BC2B37DC();
  v73 = *(_QWORD *)(v75 - 8);
  MEMORY[0x1E0C80A78](v75);
  v74 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC106304(0, (unint64_t *)&qword_1EF3F9120, (unint64_t *)&qword_1EDA0FDE0, 0x1E0DC3658, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CB4340]);
  v79 = *(_QWORD *)(v14 - 8);
  v80 = v14;
  MEMORY[0x1E0C80A78](v14);
  v70 = (char *)&v59 - v15;
  v16 = (void (*)(uint64_t))MEMORY[0x1E0D2C6F0];
  sub_1BC0E1C64(0, &qword_1EF3F8958, (void (*)(uint64_t))MEMORY[0x1E0D2C6F0]);
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v59 - v21;
  v23 = sub_1BC2B3350();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = MEMORY[0x1E0C80A78](v23);
  v68 = (char *)&v59 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v28 = (char *)&v59 - v27;
  v72 = sub_1BC2B3608();
  v71 = *(_QWORD *)(v72 - 8);
  v29 = MEMORY[0x1E0C80A78](v72);
  v67 = (char *)&v59 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v29);
  v69 = (char *)&v59 - v31;
  v76 = v78 + 16;
  sub_1BC0E1CB0(a1, (uint64_t)v22, &qword_1EF3F8958, v16);
  v32 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v24 + 48);
  if (v32(v22, 1, v23) == 1)
  {
    sub_1BC0E1CFC((uint64_t)v22, &qword_1EF3F8958, (void (*)(uint64_t))MEMORY[0x1E0D2C6F0]);
    v34 = v76;
    v33 = (uint64_t)v77;
  }
  else
  {
    v64 = v20;
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v28, v22, v23);
    v63 = v28;
    v35 = sub_1BC2B3344();
    v36 = *(_QWORD *)(v35 + 16);
    v65 = a1;
    if (v36)
    {
      v60 = v32;
      v61 = v24;
      v62 = v23;
      *(_QWORD *)&v84 = MEMORY[0x1E0DEE9D8];
      sub_1BC125B8C(0, v36, 0);
      v37 = (*(unsigned __int8 *)(v83 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80);
      v59 = v35;
      v38 = v35 + v37;
      v78 = *(_QWORD *)(v83 + 72);
      v39 = *(void (**)(char *, unint64_t, uint64_t))(v83 + 16);
      do
      {
        v39(v9, v38, v7);
        v40 = sub_1BC2B368C();
        v41 = &v12[*(int *)(v82 + 48)];
        v39(v12, (unint64_t)v9, v7);
        if ((v40 & 1) != 0)
        {
          sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDE0);
          sub_1BC2B4D18();
          sub_1BC2B434C();
          v42 = 0;
        }
        else
        {
          v42 = 1;
        }
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v79 + 56))(v41, v42, 1, v80);
        (*(void (**)(char *, uint64_t))(v83 + 8))(v9, v7);
        v43 = v84;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BC125B8C(0, *(_QWORD *)(v43 + 16) + 1, 1);
          v43 = v84;
        }
        v45 = *(_QWORD *)(v43 + 16);
        v44 = *(_QWORD *)(v43 + 24);
        if (v45 >= v44 >> 1)
        {
          sub_1BC125B8C(v44 > 1, v45 + 1, 1);
          v43 = v84;
        }
        *(_QWORD *)(v43 + 16) = v45 + 1;
        sub_1BC0F1B94((uint64_t)v12, v43+ ((*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80))+ *(_QWORD *)(v81 + 72) * v45, (uint64_t (*)(_QWORD))sub_1BC0FB470);
        v38 += v78;
        --v36;
      }
      while (v36);
      swift_bridgeObjectRelease();
      v23 = v62;
      v24 = v61;
      v32 = v60;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v46 = v72;
    v47 = v63;
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v68, v63, v23);
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDE0);
    sub_1BC2B4D0C();
    sub_1BC2B434C();
    (*(void (**)(char *, _QWORD, uint64_t))(v73 + 104))(v74, *MEMORY[0x1E0D2CAF0], v75);
    v48 = v67;
    sub_1BC2B35F0();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v47, v23);
    v49 = v71;
    v50 = v69;
    (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v69, v48, v46);
    v34 = v76;
    swift_beginAccess();
    v51 = MEMORY[0x1BCCEF478](v34);
    v20 = v64;
    if (v51)
    {
      v52 = (void *)v51;
      v53 = *(void (**)(char *, char *, uint64_t))(v49 + 16);
      v54 = v49;
      v55 = (uint64_t)v66;
      v53(v66, v50, v46);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v54 + 56))(v55, 0, 1, v46);
      sub_1BC28EC70(v55);

      sub_1BC0E1CFC(v55, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
      (*(void (**)(char *, uint64_t))(v54 + 8))(v50, v46);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v49 + 8))(v50, v46);
    }
    v33 = (uint64_t)v77;
    a1 = v65;
  }
  swift_beginAccess();
  result = MEMORY[0x1BCCEF478](v34);
  if (result)
  {
    v57 = (void *)result;
    sub_1BC0FC574(result + qword_1EF3FAA58, v33, type metadata accessor for MedicationOnboardingFlowManager);

    sub_1BC0E1CB0(a1, (uint64_t)v20, &qword_1EF3F8958, (void (*)(uint64_t))MEMORY[0x1E0D2C6F0]);
    if (v32(v20, 1, v23) == 1)
    {
      sub_1BC0E1CFC((uint64_t)v20, &qword_1EF3F8958, (void (*)(uint64_t))MEMORY[0x1E0D2C6F0]);
      v84 = 0u;
      v85 = 0u;
    }
    else
    {
      *((_QWORD *)&v85 + 1) = v23;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v84);
      (*(void (**)(uint64_t *, char *, uint64_t))(v24 + 32))(boxed_opaque_existential_1, v20, v23);
    }
    MedicationOnboardingFlowManager.consume(value:)((uint64_t)&v84);
    sub_1BC0E8594(v33, type metadata accessor for MedicationOnboardingFlowManager);
    return sub_1BC10BA60((uint64_t)&v84);
  }
  return result;
}

uint64_t sub_1BC292194(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  void *v26;
  uint64_t result;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;

  v4 = type metadata accessor for MedicationOnboardingFlowManager(0);
  MEMORY[0x1E0C80A78](v4);
  v34 = (uint64_t)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (void (*)(uint64_t))MEMORY[0x1E0D2C950];
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
  v8 = MEMORY[0x1E0C80A78](v7);
  v32 = (uint64_t)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v32 - v11;
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v32 - v13;
  v15 = sub_1BC2B3608();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v32 - v20;
  v22 = a2 + 16;
  v33 = a1;
  sub_1BC0E1CB0(a1, (uint64_t)v14, (unint64_t *)&qword_1EDA0ECC0, v6);
  v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  if (v23(v14, 1, v15) == 1)
  {
    sub_1BC0E1CFC((uint64_t)v14, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
  }
  else
  {
    v24 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
    v24(v19, v14, v15);
    v24(v21, v19, v15);
    swift_beginAccess();
    v25 = MEMORY[0x1BCCEF478](v22);
    if (v25)
    {
      v26 = (void *)v25;
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v12, v21, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v12, 0, 1, v15);
      sub_1BC28EC70((uint64_t)v12);

      sub_1BC0E1CFC((uint64_t)v12, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v21, v15);
  }
  swift_beginAccess();
  result = MEMORY[0x1BCCEF478](v22);
  if (result)
  {
    v28 = (void *)result;
    v29 = v34;
    sub_1BC0FC574(result + qword_1EF3FAA58, v34, type metadata accessor for MedicationOnboardingFlowManager);

    v30 = v32;
    sub_1BC0E1CB0(v33, v32, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
    if (v23((char *)v30, 1, v15) == 1)
    {
      sub_1BC0E1CFC(v30, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
      v35 = 0u;
      v36 = 0u;
    }
    else
    {
      *((_QWORD *)&v36 + 1) = v15;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v35);
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v16 + 32))(boxed_opaque_existential_1, v30, v15);
    }
    MedicationOnboardingFlowManager.consume(value:)((uint64_t)&v35);
    sub_1BC0E8594(v29, type metadata accessor for MedicationOnboardingFlowManager);
    return sub_1BC10BA60((uint64_t)&v35);
  }
  return result;
}

uint64_t sub_1BC2924C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  void *v14;
  _QWORD *v15;
  __int128 v16;
  __int128 v17;

  v10 = type metadata accessor for MedicationOnboardingFlowManager(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = MEMORY[0x1BCCEF478](a5 + 16);
  if (result)
  {
    v14 = (void *)result;
    sub_1BC0FC574(result + qword_1EF3FAA58, (uint64_t)v12, type metadata accessor for MedicationOnboardingFlowManager);

    if (a2 == 1)
    {
      v16 = 0u;
      v17 = 0u;
    }
    else
    {
      *((_QWORD *)&v17 + 1) = &type metadata for MedicationNicknameNotes;
      v15 = (_QWORD *)swift_allocObject();
      *(_QWORD *)&v16 = v15;
      v15[2] = a1;
      v15[3] = a2;
      v15[4] = a3;
      v15[5] = a4;
    }
    sub_1BC2A694C(a1, a2);
    MedicationOnboardingFlowManager.consume(value:)((uint64_t)&v16);
    sub_1BC0E8594((uint64_t)v12, type metadata accessor for MedicationOnboardingFlowManager);
    return sub_1BC10BA60((uint64_t)&v16);
  }
  return result;
}

uint64_t sub_1BC292600(char a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  void *v8;
  __int128 v9;
  __int128 v10;

  v4 = type metadata accessor for MedicationOnboardingFlowManager(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = MEMORY[0x1BCCEF478](a2 + 16);
  if (result)
  {
    v8 = (void *)result;
    sub_1BC0FC574(result + qword_1EF3FAA58, (uint64_t)v6, type metadata accessor for MedicationOnboardingFlowManager);

    if (a1 == 2)
    {
      v9 = 0u;
      v10 = 0u;
    }
    else
    {
      *((_QWORD *)&v10 + 1) = MEMORY[0x1E0DEAFA0];
      LOBYTE(v9) = a1 & 1;
    }
    MedicationOnboardingFlowManager.consume(value:)((uint64_t)&v9);
    sub_1BC0E8594((uint64_t)v6, type metadata accessor for MedicationOnboardingFlowManager);
    return sub_1BC10BA60((uint64_t)&v9);
  }
  return result;
}

void MedicationOnboardingFlowManager.consume(value:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD v16[16];

  v16[7] = a1;
  sub_1BC0E1C64(0, &qword_1EF3F8958, (void (*)(uint64_t))MEMORY[0x1E0D2C6F0]);
  MEMORY[0x1E0C80A78](v2);
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
  MEMORY[0x1E0C80A78](v3);
  sub_1BC0E1C64(0, &qword_1EF3FDF08, (void (*)(uint64_t))MEMORY[0x1E0D2C890]);
  MEMORY[0x1E0C80A78](v4);
  v16[1] = (char *)v16 - v5;
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EF3F8980, (void (*)(uint64_t))type metadata accessor for MedicationSearchItem);
  MEMORY[0x1E0C80A78](v6);
  v16[2] = (char *)v16 - v7;
  v8 = sub_1BC2B3530();
  v16[4] = *(_QWORD *)(v8 - 8);
  v16[5] = v8;
  MEMORY[0x1E0C80A78](v8);
  v16[3] = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E1C64(0, &qword_1EF3FB840, (void (*)(uint64_t))type metadata accessor for FormStepResult);
  v11 = MEMORY[0x1E0C80A78](v10);
  MEMORY[0x1E0C80A78](v11);
  v12 = type metadata accessor for FormStepResult();
  v13 = MEMORY[0x1E0C80A78](v12);
  MEMORY[0x1E0C80A78](v13);
  v16[6] = (char *)v16 - v14;
  v15 = (char *)&loc_1BC292940
      + *((int *)qword_1BC293178
        + (*(unsigned __int8 *)(v1 + *(int *)(type metadata accessor for MedicationOnboardingFlowManager(0) + 28)) >> 5));
  __asm { BR              X11 }
}

uint64_t sub_1BC292950()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  void (*v8)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;

  sub_1BC285AC4(*(_QWORD *)(v6 - 152), v6 - 112);
  if (!*(_QWORD *)(v6 - 88))
  {
    sub_1BC10BA60(v6 - 112);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 56))(v4, 1, 1, v0);
    return sub_1BC0E1CFC(v4, &qword_1EF3FB840, (void (*)(uint64_t))type metadata accessor for FormStepResult);
  }
  v7 = swift_dynamicCast();
  v8 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v1 + 56);
  v8(v4, v7 ^ 1u, 1, v0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v4, 1, v0) == 1)
    return sub_1BC0E1CFC(v4, &qword_1EF3FB840, (void (*)(uint64_t))type metadata accessor for FormStepResult);
  v9 = v4;
  v10 = *(_QWORD *)(v6 - 160);
  sub_1BC0F1B94(v9, v10, (uint64_t (*)(_QWORD))type metadata accessor for FormStepResult);
  sub_1BC0FC574(v10, v2, (uint64_t (*)(_QWORD))type metadata accessor for FormStepResult);
  v8(v2, 0, 1, v0);
  sub_1BC2B3EC0();
  sub_1BC0E1CFC(v2, &qword_1EF3FB840, (void (*)(uint64_t))type metadata accessor for FormStepResult);
  v11 = *(int *)(v5 + 40);
  *(_QWORD *)(v6 - 112) = 0;
  sub_1BC2B3EC0();
  sub_1BC0FC574(v10, v3, (uint64_t (*)(_QWORD))type metadata accessor for FormStepResult);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    *(_QWORD *)(v6 - 152) = v11;
    v14 = *(_QWORD *)(v6 - 184);
    v15 = *(_QWORD *)(v6 - 176);
    v16 = *(_QWORD *)(v6 - 168);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v14, v3, v16);
    v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16);
    v17(v2, v14, v16);
    swift_storeEnumTagMultiPayload();
    v8(v2, 0, 1, v0);
    sub_1BC2B3EC0();
    sub_1BC0E1CFC(v2, &qword_1EF3FB840, (void (*)(uint64_t))type metadata accessor for FormStepResult);
    v18 = *(_QWORD *)(v6 - 192);
    sub_1BC29B5E0();
    v19 = type metadata accessor for MedicationSearchItem(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v18, 1, v19) == 1)
    {
      sub_1BC0E1CFC(v18, (unint64_t *)&qword_1EF3F8980, (void (*)(uint64_t))type metadata accessor for MedicationSearchItem);
LABEL_18:
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
      v12 = *(_QWORD *)(v6 - 160);
      return sub_1BC0E8594(v12, (uint64_t (*)(_QWORD))type metadata accessor for FormStepResult);
    }
    v20 = *(_QWORD *)(v6 - 200);
    v17(v20, v14, v16);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 56))(v20, 0, 1, v16);
    v21 = sub_1BC1C2FE0();
    sub_1BC0E1CFC(v20, &qword_1EF3FDF08, (void (*)(uint64_t))MEMORY[0x1E0D2C890]);
    sub_1BC0E8594(v18, type metadata accessor for MedicationSearchItem);
    if (!v21)
      goto LABEL_18;
    if (v21 >> 62)
    {
      swift_bridgeObjectRetain();
      v24 = sub_1BC2B52D0();
      swift_bridgeObjectRelease();
      if (v24 == 1)
        goto LABEL_12;
    }
    else if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) == 1)
    {
LABEL_12:
      if ((v21 & 0xC000000000000001) != 0)
      {
        v22 = (id)MEMORY[0x1BCCEE950](0, v21);
      }
      else
      {
        if (!*(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          JUMPOUT(0x1BC293178);
        }
        v22 = *(id *)(v21 + 32);
      }
      v23 = v22;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v6 - 112) = v23;
      sub_1BC2B3EC0();

      goto LABEL_18;
    }
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  *(_QWORD *)(v6 - 112) = 0;
  sub_1BC2B3EC0();
  v12 = v10;
  return sub_1BC0E8594(v12, (uint64_t (*)(_QWORD))type metadata accessor for FormStepResult);
}

uint64_t type metadata accessor for MedicationOnboardingFlowManager(uint64_t a1)
{
  return sub_1BC0E5428(a1, qword_1EF401CD8);
}

void sub_1BC2931A4(char a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  _BYTE v14[24];

  v6 = type metadata accessor for MedicationOnboardingFlowManager(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ((a1 & 1) != 0)
  {
    v9 = a2 + 16;
    swift_beginAccess();
    v10 = MEMORY[0x1BCCEF478](v9);
    if (v10)
    {
      v11 = (void *)v10;
      sub_1BC0FC574(v10 + qword_1EF3FAA58, (uint64_t)v8, type metadata accessor for MedicationOnboardingFlowManager);

      swift_retain();
      sub_1BC0E8594((uint64_t)v8, type metadata accessor for MedicationOnboardingFlowManager);
      v14[0] = 1;
      sub_1BC2B3EC0();
      swift_release();
    }
    swift_beginAccess();
    v12 = MEMORY[0x1BCCEF478](v9);
    if (v12)
    {
      v13 = (void *)v12;
      a3();

    }
  }
}

void sub_1BC2932C8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;

  if (a1)
  {
    v6 = a2 + 16;
    swift_beginAccess();
    v7 = MEMORY[0x1BCCEF478](v6);
    if (v7)
    {
      v8 = (void *)v7;
      type metadata accessor for MedicationOnboardingFlowManager(0);
      v9 = a1;
      v10 = sub_1BC2B3254();
      v11 = swift_allocObject();
      swift_unknownObjectWeakInit();
      swift_retain();
      v12 = _sSo17UIAlertControllerC19HealthMedicationsUIE27makeAlertForExsitingConcept7concept11listManager11showHandlerABSgSo9HKConceptC_0C22RecordsConceptsSupport04ListjM0CySo022HKMedicationUserDomainJ0CctFZ_0((uint64_t)v9, v10, a4, v11);
      swift_release();
      swift_release_n();
      if (v12)
      {
        objc_msgSend(v8, sel_presentViewController_animated_completion_, v12, 1, 0);

        v8 = v9;
        v9 = v12;
      }

    }
  }
}

uint64_t sub_1BC2933E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;

  v29 = a2;
  v28 = a1;
  sub_1BC0E1C64(0, &qword_1EDA0FE10, (void (*)(uint64_t))MEMORY[0x1E0CB22E8]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v24 - v3;
  sub_1BC0E1C64(0, &qword_1EF401E20, (void (*)(uint64_t))MEMORY[0x1E0CB2328]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v24 - v6;
  v8 = sub_1BC2B4F70();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BC2B4A84();
  v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1F30];
  v25 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2A5640();
  v17 = *(_QWORD *)(v16 - 8);
  v26 = v16;
  v27 = v17;
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v24 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  sub_1BC2B4A90();

  sub_1BC2B4F64();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
  v30 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
  v21 = sub_1BC2B4F58();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v4, 1, 1, v21);
  sub_1BC0E1D38(0, &qword_1EDA0FE20);
  sub_1BC0E519C((unint64_t *)&qword_1EF3FFCC8, v13, MEMORY[0x1E0CB1F20]);
  sub_1BC2A56F4();
  sub_1BC2B4028();
  sub_1BC0E1CFC((uint64_t)v4, &qword_1EDA0FE10, (void (*)(uint64_t))MEMORY[0x1E0CB22E8]);

  sub_1BC0E1CFC((uint64_t)v7, &qword_1EF401E20, (void (*)(uint64_t))MEMORY[0x1E0CB2328]);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v15, v12);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC0E519C(&qword_1EF401E30, (uint64_t (*)(uint64_t))sub_1BC2A5640, MEMORY[0x1E0C95A20]);
  v22 = v26;
  sub_1BC2B40A0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v19, v22);
  swift_beginAccess();
  sub_1BC2B3E84();
  swift_endAccess();
  return swift_release();
}

void sub_1BC293784(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  id v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  id v18;
  void *v19;
  void *v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  id v29;
  double v30;
  CGFloat v31;
  double v32;
  CGFloat v33;
  double v34;
  CGFloat v35;
  double v36;
  CGFloat v37;
  id v38;
  id v39;
  double v40;
  CGFloat v41;
  double v42;
  CGFloat v43;
  double v44;
  CGFloat v45;
  double v46;
  CGFloat v47;
  CGFloat v48;
  id v49;
  id v50[5];
  __int128 v51;
  __int128 v52;
  CGRect v53;
  CGRect v54;
  CGRect v55;
  CGRect v56;
  CGRect v57;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1BCCEF478](v2);
  if (!v3)
    return;
  v4 = (void *)v3;
  v5 = sub_1BC2B203C();
  if (!v5)
  {
    v51 = 0u;
    v52 = 0u;
LABEL_14:

    sub_1BC10BA60((uint64_t)&v51);
    return;
  }
  v6 = v5;
  sub_1BC2B4460();
  sub_1BC2B5174();
  if (*(_QWORD *)(v6 + 16) && (v7 = sub_1BC107E0C((uint64_t)v50), (v8 & 1) != 0))
  {
    sub_1BC127E34(*(_QWORD *)(v6 + 56) + 32 * v7, (uint64_t)&v51);
  }
  else
  {
    v51 = 0u;
    v52 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1BC109238((uint64_t)v50);
  if (!*((_QWORD *)&v52 + 1))
    goto LABEL_14;
  sub_1BC0E1D38(0, &qword_1EF401E38);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_15;
  v9 = v50[0];
  objc_msgSend(v50[0], sel_CGRectValue);
  v11 = v10;
  v13 = v12;
  v15 = v14;
  v17 = v16;

  v18 = objc_msgSend(v4, sel_contentView);
  v19 = sub_1BC140408();

  if (v19)
  {
    sub_1BC2B2030();
    if (v50[3])
    {
      sub_1BC0E1D38(0, &qword_1EF401E40);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v20 = (void *)v51;
        objc_msgSend(v19, sel_bounds);
        v22 = v21;
        v24 = v23;
        v26 = v25;
        v28 = v27;
        v29 = objc_msgSend(v4, sel_scrollView);
        objc_msgSend(v19, sel_convertRect_toCoordinateSpace_, v29, v22, v24, v26, v28);
        v31 = v30;
        v33 = v32;
        v35 = v34;
        v37 = v36;

        v38 = objc_msgSend(v20, sel_coordinateSpace);
        v39 = objc_msgSend(v4, sel_scrollView);
        objc_msgSend(v38, sel_convertRect_toCoordinateSpace_, v39, v11, v13, v15, v17);
        v41 = v40;
        v43 = v42;
        v45 = v44;
        v47 = v46;
        swift_unknownObjectRelease();

        v53.origin.x = v41;
        v53.origin.y = v43;
        v53.size.width = v45;
        v53.size.height = v47;
        v57.origin.x = v31;
        v57.origin.y = v33;
        v57.size.width = v35;
        v57.size.height = v37;
        v54 = CGRectIntersection(v53, v57);
        v48 = CGRectGetHeight(v54) * 0.5;
        v49 = objc_msgSend(v4, sel_scrollView);
        v55.origin.x = v31;
        v55.origin.y = v33;
        v55.size.width = v35;
        v55.size.height = v37;
        v56 = CGRectOffset(v55, 0.0, v48);
        objc_msgSend(v49, sel_scrollRectToVisible_animated_, 1, v56.origin.x, v56.origin.y, v56.size.width, v56.size.height);

      }
      else
      {

      }
    }
    else
    {

      sub_1BC10BA60((uint64_t)v50);
    }
  }
  else
  {
LABEL_15:

  }
}

uint64_t sub_1BC293B18()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v12;
  void (*v13)(uint64_t);
  int v14;
  uint64_t v15;
  void (*v16)(uint64_t);
  id v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v1 = v0;
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v22 - v3;
  sub_1BC0E1C64(0, &qword_1EF3F8958, (void (*)(uint64_t))MEMORY[0x1E0D2C6F0]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v22 - v6;
  sub_1BC29573C();
  sub_1BC296330();
  v8 = &v0[qword_1EF3FAA58];
  v9 = v8[*(int *)(type metadata accessor for MedicationOnboardingFlowManager(0) + 28)];
  v10 = v9 >> 5;
  if ((_DWORD)v9 != 96 && v10 == 3)
  {
    sub_1BC2B3ED8();
    v12 = sub_1BC2B3350();
    v13 = (void (*)(uint64_t))MEMORY[0x1E0D2C6F0];
    v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v7, 1, v12);
    sub_1BC0E1CFC((uint64_t)v7, &qword_1EF3F8958, v13);
    if (v14 == 1)
    {
      v15 = sub_1BC2B3608();
      v16 = (void (*)(uint64_t))MEMORY[0x1E0D2C950];
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v4, 1, 1, v15);
      sub_1BC28EC70((uint64_t)v4);
      sub_1BC0E1CFC((uint64_t)v4, (unint64_t *)&qword_1EDA0ECC0, v16);
    }
  }
  if (MedicationOnboardingFlowManager.isAtFinalStep.getter())
  {
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v17 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();
    swift_bridgeObjectRelease();

    sub_1BC2B2FC0();
    swift_bridgeObjectRelease();
  }
  if ((sub_1BC23E0B4(v9, (uint64_t)&unk_1E74AF9E8) & 1) != 0)
    objc_msgSend(v1, sel_setShouldAdjustScrollViewInsetForKeyboard_, 1);
  if ((_DWORD)v9 != 64 && v10 == 2)
    objc_msgSend(v1, sel_setShouldAdjustButtonTrayForKeyboard_, 1);
  v19 = *(_QWORD *)&v1[qword_1EF3FAA50];
  v20 = *(_QWORD *)&v1[qword_1EF3FAA50 + 8];
  swift_bridgeObjectRetain();
  sub_1BC29A1D0(v19, v20);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC293DE4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v12;
  void (*v13)(uint64_t);
  int v14;
  uint64_t v15;
  void (*v16)(uint64_t);
  id v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v1 = v0;
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v22 - v3;
  sub_1BC0E1C64(0, &qword_1EF3F8958, (void (*)(uint64_t))MEMORY[0x1E0D2C6F0]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v22 - v6;
  sub_1BC29573C();
  sub_1BC296330();
  v8 = &v0[qword_1EF3FAA58];
  v9 = v8[*(int *)(type metadata accessor for MedicationOnboardingFlowManager(0) + 28)];
  v10 = v9 >> 5;
  if ((_DWORD)v9 != 96 && v10 == 3)
  {
    sub_1BC2B3ED8();
    v12 = sub_1BC2B3350();
    v13 = (void (*)(uint64_t))MEMORY[0x1E0D2C6F0];
    v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v7, 1, v12);
    sub_1BC0E1CFC((uint64_t)v7, &qword_1EF3F8958, v13);
    if (v14 == 1)
    {
      v15 = sub_1BC2B3608();
      v16 = (void (*)(uint64_t))MEMORY[0x1E0D2C950];
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v4, 1, 1, v15);
      sub_1BC28EC70((uint64_t)v4);
      sub_1BC0E1CFC((uint64_t)v4, (unint64_t *)&qword_1EDA0ECC0, v16);
    }
  }
  if (MedicationOnboardingFlowManager.isAtFinalStep.getter())
  {
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v17 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();
    swift_bridgeObjectRelease();

    sub_1BC2B2FC0();
    swift_bridgeObjectRelease();
  }
  if ((sub_1BC23E0B4(v9, (uint64_t)&unk_1E74AFAC8) & 1) != 0)
    objc_msgSend(v1, sel_setShouldAdjustScrollViewInsetForKeyboard_, 1);
  if ((_DWORD)v9 != 64 && v10 == 2)
    objc_msgSend(v1, sel_setShouldAdjustButtonTrayForKeyboard_, 1);
  v19 = *(_QWORD *)&v1[qword_1EF3FAA50];
  v20 = *(_QWORD *)&v1[qword_1EF3FAA50 + 8];
  swift_bridgeObjectRetain();
  sub_1BC29A1D0(v19, v20);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC2940B0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v12;
  void (*v13)(uint64_t);
  int v14;
  uint64_t v15;
  void (*v16)(uint64_t);
  id v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v1 = v0;
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v22 - v3;
  sub_1BC0E1C64(0, &qword_1EF3F8958, (void (*)(uint64_t))MEMORY[0x1E0D2C6F0]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v22 - v6;
  sub_1BC29573C();
  sub_1BC296330();
  v8 = &v0[qword_1EF3FAA58];
  v9 = v8[*(int *)(type metadata accessor for MedicationOnboardingFlowManager(0) + 28)];
  v10 = v9 >> 5;
  if ((_DWORD)v9 != 96 && v10 == 3)
  {
    sub_1BC2B3ED8();
    v12 = sub_1BC2B3350();
    v13 = (void (*)(uint64_t))MEMORY[0x1E0D2C6F0];
    v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v7, 1, v12);
    sub_1BC0E1CFC((uint64_t)v7, &qword_1EF3F8958, v13);
    if (v14 == 1)
    {
      v15 = sub_1BC2B3608();
      v16 = (void (*)(uint64_t))MEMORY[0x1E0D2C950];
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v4, 1, 1, v15);
      sub_1BC28EC70((uint64_t)v4);
      sub_1BC0E1CFC((uint64_t)v4, (unint64_t *)&qword_1EDA0ECC0, v16);
    }
  }
  if (MedicationOnboardingFlowManager.isAtFinalStep.getter())
  {
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v17 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();
    swift_bridgeObjectRelease();

    sub_1BC2B2FC0();
    swift_bridgeObjectRelease();
  }
  if ((sub_1BC23E0B4(v9, (uint64_t)&unk_1E74AFA78) & 1) != 0)
    objc_msgSend(v1, sel_setShouldAdjustScrollViewInsetForKeyboard_, 1);
  if ((_DWORD)v9 != 64 && v10 == 2)
    objc_msgSend(v1, sel_setShouldAdjustButtonTrayForKeyboard_, 1);
  v19 = *(_QWORD *)&v1[qword_1EF3FAA50];
  v20 = *(_QWORD *)&v1[qword_1EF3FAA50 + 8];
  swift_bridgeObjectRetain();
  sub_1BC29A1D0(v19, v20);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC29437C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v12;
  void (*v13)(uint64_t);
  int v14;
  uint64_t v15;
  void (*v16)(uint64_t);
  id v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v1 = v0;
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v22 - v3;
  sub_1BC0E1C64(0, &qword_1EF3F8958, (void (*)(uint64_t))MEMORY[0x1E0D2C6F0]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v22 - v6;
  sub_1BC29573C();
  sub_1BC296330();
  v8 = &v0[qword_1EF3FAA58];
  v9 = v8[*(int *)(type metadata accessor for MedicationOnboardingFlowManager(0) + 28)];
  v10 = v9 >> 5;
  if ((_DWORD)v9 != 96 && v10 == 3)
  {
    sub_1BC2B3ED8();
    v12 = sub_1BC2B3350();
    v13 = (void (*)(uint64_t))MEMORY[0x1E0D2C6F0];
    v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v7, 1, v12);
    sub_1BC0E1CFC((uint64_t)v7, &qword_1EF3F8958, v13);
    if (v14 == 1)
    {
      v15 = sub_1BC2B3608();
      v16 = (void (*)(uint64_t))MEMORY[0x1E0D2C950];
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v4, 1, 1, v15);
      sub_1BC28EC70((uint64_t)v4);
      sub_1BC0E1CFC((uint64_t)v4, (unint64_t *)&qword_1EDA0ECC0, v16);
    }
  }
  if (MedicationOnboardingFlowManager.isAtFinalStep.getter())
  {
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v17 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();
    swift_bridgeObjectRelease();

    sub_1BC2B2FC0();
    swift_bridgeObjectRelease();
  }
  if ((sub_1BC23E0B4(v9, (uint64_t)&unk_1E74AFB68) & 1) != 0)
    objc_msgSend(v1, sel_setShouldAdjustScrollViewInsetForKeyboard_, 1);
  if ((_DWORD)v9 != 64 && v10 == 2)
    objc_msgSend(v1, sel_setShouldAdjustButtonTrayForKeyboard_, 1);
  v19 = *(_QWORD *)&v1[qword_1EF3FAA50];
  v20 = *(_QWORD *)&v1[qword_1EF3FAA50 + 8];
  swift_bridgeObjectRetain();
  sub_1BC29A1D0(v19, v20);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC294648()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v12;
  void (*v13)(uint64_t);
  int v14;
  uint64_t v15;
  void (*v16)(uint64_t);
  id v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v1 = v0;
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v22 - v3;
  sub_1BC0E1C64(0, &qword_1EF3F8958, (void (*)(uint64_t))MEMORY[0x1E0D2C6F0]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v22 - v6;
  sub_1BC29573C();
  sub_1BC296330();
  v8 = &v0[qword_1EF3FAA58];
  v9 = v8[*(int *)(type metadata accessor for MedicationOnboardingFlowManager(0) + 28)];
  v10 = v9 >> 5;
  if ((_DWORD)v9 != 96 && v10 == 3)
  {
    sub_1BC2B3ED8();
    v12 = sub_1BC2B3350();
    v13 = (void (*)(uint64_t))MEMORY[0x1E0D2C6F0];
    v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v7, 1, v12);
    sub_1BC0E1CFC((uint64_t)v7, &qword_1EF3F8958, v13);
    if (v14 == 1)
    {
      v15 = sub_1BC2B3608();
      v16 = (void (*)(uint64_t))MEMORY[0x1E0D2C950];
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v4, 1, 1, v15);
      sub_1BC28EC70((uint64_t)v4);
      sub_1BC0E1CFC((uint64_t)v4, (unint64_t *)&qword_1EDA0ECC0, v16);
    }
  }
  if (MedicationOnboardingFlowManager.isAtFinalStep.getter())
  {
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v17 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();
    swift_bridgeObjectRelease();

    sub_1BC2B2FC0();
    swift_bridgeObjectRelease();
  }
  if ((sub_1BC23E0B4(v9, (uint64_t)&unk_1E74AFB18) & 1) != 0)
    objc_msgSend(v1, sel_setShouldAdjustScrollViewInsetForKeyboard_, 1);
  if ((_DWORD)v9 != 64 && v10 == 2)
    objc_msgSend(v1, sel_setShouldAdjustButtonTrayForKeyboard_, 1);
  v19 = *(_QWORD *)&v1[qword_1EF3FAA50];
  v20 = *(_QWORD *)&v1[qword_1EF3FAA50 + 8];
  swift_bridgeObjectRetain();
  sub_1BC29A1D0(v19, v20);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC294914()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v12;
  void (*v13)(uint64_t);
  int v14;
  uint64_t v15;
  void (*v16)(uint64_t);
  id v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v1 = v0;
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v22 - v3;
  sub_1BC0E1C64(0, &qword_1EF3F8958, (void (*)(uint64_t))MEMORY[0x1E0D2C6F0]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v22 - v6;
  sub_1BC29573C();
  sub_1BC296330();
  v8 = &v0[qword_1EF3FAA58];
  v9 = v8[*(int *)(type metadata accessor for MedicationOnboardingFlowManager(0) + 28)];
  v10 = v9 >> 5;
  if ((_DWORD)v9 != 96 && v10 == 3)
  {
    sub_1BC2B3ED8();
    v12 = sub_1BC2B3350();
    v13 = (void (*)(uint64_t))MEMORY[0x1E0D2C6F0];
    v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v7, 1, v12);
    sub_1BC0E1CFC((uint64_t)v7, &qword_1EF3F8958, v13);
    if (v14 == 1)
    {
      v15 = sub_1BC2B3608();
      v16 = (void (*)(uint64_t))MEMORY[0x1E0D2C950];
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v4, 1, 1, v15);
      sub_1BC28EC70((uint64_t)v4);
      sub_1BC0E1CFC((uint64_t)v4, (unint64_t *)&qword_1EDA0ECC0, v16);
    }
  }
  if (MedicationOnboardingFlowManager.isAtFinalStep.getter())
  {
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v17 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();
    swift_bridgeObjectRelease();

    sub_1BC2B2FC0();
    swift_bridgeObjectRelease();
  }
  if ((sub_1BC23E0B4(v9, (uint64_t)&unk_1E74AFBB8) & 1) != 0)
    objc_msgSend(v1, sel_setShouldAdjustScrollViewInsetForKeyboard_, 1);
  if ((_DWORD)v9 != 64 && v10 == 2)
    objc_msgSend(v1, sel_setShouldAdjustButtonTrayForKeyboard_, 1);
  v19 = *(_QWORD *)&v1[qword_1EF3FAA50];
  v20 = *(_QWORD *)&v1[qword_1EF3FAA50 + 8];
  swift_bridgeObjectRetain();
  sub_1BC29A1D0(v19, v20);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC294BE0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v12;
  void (*v13)(uint64_t);
  int v14;
  uint64_t v15;
  void (*v16)(uint64_t);
  id v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v1 = v0;
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v22 - v3;
  sub_1BC0E1C64(0, &qword_1EF3F8958, (void (*)(uint64_t))MEMORY[0x1E0D2C6F0]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v22 - v6;
  sub_1BC29573C();
  sub_1BC296330();
  v8 = &v0[qword_1EF3FAA58];
  v9 = v8[*(int *)(type metadata accessor for MedicationOnboardingFlowManager(0) + 28)];
  v10 = v9 >> 5;
  if ((_DWORD)v9 != 96 && v10 == 3)
  {
    sub_1BC2B3ED8();
    v12 = sub_1BC2B3350();
    v13 = (void (*)(uint64_t))MEMORY[0x1E0D2C6F0];
    v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v7, 1, v12);
    sub_1BC0E1CFC((uint64_t)v7, &qword_1EF3F8958, v13);
    if (v14 == 1)
    {
      v15 = sub_1BC2B3608();
      v16 = (void (*)(uint64_t))MEMORY[0x1E0D2C950];
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v4, 1, 1, v15);
      sub_1BC28EC70((uint64_t)v4);
      sub_1BC0E1CFC((uint64_t)v4, (unint64_t *)&qword_1EDA0ECC0, v16);
    }
  }
  if (MedicationOnboardingFlowManager.isAtFinalStep.getter())
  {
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v17 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();
    swift_bridgeObjectRelease();

    sub_1BC2B2FC0();
    swift_bridgeObjectRelease();
  }
  if ((sub_1BC23E0B4(v9, (uint64_t)&unk_1E74AFC08) & 1) != 0)
    objc_msgSend(v1, sel_setShouldAdjustScrollViewInsetForKeyboard_, 1);
  if ((_DWORD)v9 != 64 && v10 == 2)
    objc_msgSend(v1, sel_setShouldAdjustButtonTrayForKeyboard_, 1);
  v19 = *(_QWORD *)&v1[qword_1EF3FAA50];
  v20 = *(_QWORD *)&v1[qword_1EF3FAA50 + 8];
  swift_bridgeObjectRetain();
  sub_1BC29A1D0(v19, v20);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC294EAC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v12;
  void (*v13)(uint64_t);
  int v14;
  uint64_t v15;
  void (*v16)(uint64_t);
  id v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v1 = v0;
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v22 - v3;
  sub_1BC0E1C64(0, &qword_1EF3F8958, (void (*)(uint64_t))MEMORY[0x1E0D2C6F0]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v22 - v6;
  sub_1BC29573C();
  sub_1BC296330();
  v8 = &v0[qword_1EF3FAA58];
  v9 = v8[*(int *)(type metadata accessor for MedicationOnboardingFlowManager(0) + 28)];
  v10 = v9 >> 5;
  if ((_DWORD)v9 != 96 && v10 == 3)
  {
    sub_1BC2B3ED8();
    v12 = sub_1BC2B3350();
    v13 = (void (*)(uint64_t))MEMORY[0x1E0D2C6F0];
    v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v7, 1, v12);
    sub_1BC0E1CFC((uint64_t)v7, &qword_1EF3F8958, v13);
    if (v14 == 1)
    {
      v15 = sub_1BC2B3608();
      v16 = (void (*)(uint64_t))MEMORY[0x1E0D2C950];
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v4, 1, 1, v15);
      sub_1BC28EC70((uint64_t)v4);
      sub_1BC0E1CFC((uint64_t)v4, (unint64_t *)&qword_1EDA0ECC0, v16);
    }
  }
  if (MedicationOnboardingFlowManager.isAtFinalStep.getter())
  {
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v17 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();
    swift_bridgeObjectRelease();

    sub_1BC2B2FC0();
    swift_bridgeObjectRelease();
  }
  if ((sub_1BC23E0B4(v9, (uint64_t)&unk_1E74AFC58) & 1) != 0)
    objc_msgSend(v1, sel_setShouldAdjustScrollViewInsetForKeyboard_, 1);
  if ((_DWORD)v9 != 64 && v10 == 2)
    objc_msgSend(v1, sel_setShouldAdjustButtonTrayForKeyboard_, 1);
  v19 = *(_QWORD *)&v1[qword_1EF3FAA50];
  v20 = *(_QWORD *)&v1[qword_1EF3FAA50 + 8];
  swift_bridgeObjectRetain();
  sub_1BC29A1D0(v19, v20);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC295178()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v12;
  void (*v13)(uint64_t);
  int v14;
  uint64_t v15;
  void (*v16)(uint64_t);
  id v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v1 = v0;
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v22 - v3;
  sub_1BC0E1C64(0, &qword_1EF3F8958, (void (*)(uint64_t))MEMORY[0x1E0D2C6F0]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v22 - v6;
  sub_1BC29573C();
  sub_1BC296330();
  v8 = &v0[qword_1EF3FAA58];
  v9 = v8[*(int *)(type metadata accessor for MedicationOnboardingFlowManager(0) + 28)];
  v10 = v9 >> 5;
  if ((_DWORD)v9 != 96 && v10 == 3)
  {
    sub_1BC2B3ED8();
    v12 = sub_1BC2B3350();
    v13 = (void (*)(uint64_t))MEMORY[0x1E0D2C6F0];
    v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v7, 1, v12);
    sub_1BC0E1CFC((uint64_t)v7, &qword_1EF3F8958, v13);
    if (v14 == 1)
    {
      v15 = sub_1BC2B3608();
      v16 = (void (*)(uint64_t))MEMORY[0x1E0D2C950];
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v4, 1, 1, v15);
      sub_1BC28EC70((uint64_t)v4);
      sub_1BC0E1CFC((uint64_t)v4, (unint64_t *)&qword_1EDA0ECC0, v16);
    }
  }
  if (MedicationOnboardingFlowManager.isAtFinalStep.getter())
  {
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v17 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();
    swift_bridgeObjectRelease();

    sub_1BC2B2FC0();
    swift_bridgeObjectRelease();
  }
  if ((sub_1BC23E0B4(v9, (uint64_t)&unk_1E74AFCA8) & 1) != 0)
    objc_msgSend(v1, sel_setShouldAdjustScrollViewInsetForKeyboard_, 1);
  if ((_DWORD)v9 != 64 && v10 == 2)
    objc_msgSend(v1, sel_setShouldAdjustButtonTrayForKeyboard_, 1);
  v19 = *(_QWORD *)&v1[qword_1EF3FAA50];
  v20 = *(_QWORD *)&v1[qword_1EF3FAA50 + 8];
  swift_bridgeObjectRetain();
  sub_1BC29A1D0(v19, v20);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC295444()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v12;
  void (*v13)(uint64_t);
  int v14;
  uint64_t v15;
  void (*v16)(uint64_t);
  id v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v1 = v0;
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v22 - v3;
  sub_1BC0E1C64(0, &qword_1EF3F8958, (void (*)(uint64_t))MEMORY[0x1E0D2C6F0]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v22 - v6;
  sub_1BC29573C();
  sub_1BC296330();
  v8 = &v0[qword_1EF3FAA58];
  v9 = v8[*(int *)(type metadata accessor for MedicationOnboardingFlowManager(0) + 28)];
  v10 = v9 >> 5;
  if ((_DWORD)v9 != 96 && v10 == 3)
  {
    sub_1BC2B3ED8();
    v12 = sub_1BC2B3350();
    v13 = (void (*)(uint64_t))MEMORY[0x1E0D2C6F0];
    v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v7, 1, v12);
    sub_1BC0E1CFC((uint64_t)v7, &qword_1EF3F8958, v13);
    if (v14 == 1)
    {
      v15 = sub_1BC2B3608();
      v16 = (void (*)(uint64_t))MEMORY[0x1E0D2C950];
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v4, 1, 1, v15);
      sub_1BC28EC70((uint64_t)v4);
      sub_1BC0E1CFC((uint64_t)v4, (unint64_t *)&qword_1EDA0ECC0, v16);
    }
  }
  if (MedicationOnboardingFlowManager.isAtFinalStep.getter())
  {
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v17 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();
    swift_bridgeObjectRelease();

    sub_1BC2B2FC0();
    swift_bridgeObjectRelease();
  }
  if ((sub_1BC23E0B4(v9, (uint64_t)&unk_1E74AFD30) & 1) != 0)
    objc_msgSend(v1, sel_setShouldAdjustScrollViewInsetForKeyboard_, 1);
  if ((_DWORD)v9 != 64 && v10 == 2)
    objc_msgSend(v1, sel_setShouldAdjustButtonTrayForKeyboard_, 1);
  v19 = *(_QWORD *)&v1[qword_1EF3FAA50];
  v20 = *(_QWORD *)&v1[qword_1EF3FAA50 + 8];
  swift_bridgeObjectRetain();
  sub_1BC29A1D0(v19, v20);
  return swift_bridgeObjectRelease();
}

uint64_t MedicationOnboardingFlowManager.listManager.getter()
{
  type metadata accessor for MedicationOnboardingFlowManager(0);
  return sub_1BC2B3254();
}

void sub_1BC29573C()
{
  char *v0;
  void *v1;
  char *v2;
  uint64_t v3;
  int v4;
  id v5;
  double v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;

  v1 = v0;
  v2 = &v0[qword_1EF3FAA58];
  MedicationOnboardingFlowManager.title.getter();
  if (v3)
  {
    v4 = v2[*(int *)(type metadata accessor for MedicationOnboardingFlowManager(0) + 28)];
    if (v4 == 128 || (v4 & 0xE0) != 0x80)
    {
      v7 = objc_msgSend(v1, sel_navigationItem);
      sub_1BC2B2D38();
      MedicationOnboardingFlowManager.subtitle.getter();
      v10 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
      v9 = (void *)sub_1BC2B2D2C();
      objc_msgSend(v7, sel_setTitleView_, v9, v13);
    }
    else
    {
      swift_bridgeObjectRelease();
      objc_msgSend(v1, sel_setShouldMoveHeaderViewTitleToNavigationTitleWhenScrolledOffScreen_, 0);
      v5 = objc_msgSend(v1, sel_headerView);
      LODWORD(v6) = 1036831949;
      objc_msgSend(v5, sel_setTitleHyphenationFactor_, v6);

      v7 = objc_msgSend(v1, sel_navigationItem);
      if (qword_1EDA0FEE8 != -1)
        swift_once();
      v8 = (id)qword_1EDA0FEF8;
      swift_bridgeObjectRetain();
      sub_1BC2B2144();
      swift_bridgeObjectRelease();

      v9 = (void *)sub_1BC2B4430();
      swift_bridgeObjectRelease();
      objc_msgSend(v7, sel_setTitle_, v9, 0xE000000000000000);
    }

  }
  v11 = objc_msgSend(v1, sel_navigationItem);
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v12 = (id)qword_1EDA0FEF8;
  swift_bridgeObjectRetain();
  sub_1BC2B2144();
  swift_bridgeObjectRelease();

  v14 = (id)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_setBackButtonTitle_, v14, 0xE000000000000000);

}

void MedicationOnboardingFlowManager.title.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;

  v10 = type metadata accessor for MedicationOnboardingFlowManager(0);
  v1 = MEMORY[0x1E0C80A78](v10);
  v11 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v1);
  v9 = sub_1BC2B34A0();
  MEMORY[0x1E0C80A78](v9);
  v3 = type metadata accessor for MedicationSearchItem.Source(0);
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for MedicationOnboardingFlowManager.EntryMode(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MedicationSearchItem(0);
  MEMORY[0x1E0C80A78](v7);
  sub_1BC0FC574(v0, (uint64_t)v6, type metadata accessor for MedicationOnboardingFlowManager.EntryMode);
  v8 = (char *)sub_1BC295C00 + 4 * byte_1BC2C65B0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BC295C00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  sub_1BC0E8594(v2, type metadata accessor for MedicationOnboardingFlowManager.EntryMode);
  v4 = *(_QWORD *)(v3 - 112);
  sub_1BC0FC574(v0, v1, type metadata accessor for MedicationOnboardingFlowManager);
  swift_retain();
  sub_1BC2B3ED8();
  swift_release();
  v6 = *(_QWORD *)(v3 - 96);
  v5 = *(_QWORD *)(v3 - 88);
  sub_1BC0FC574(v1, v4, type metadata accessor for MedicationOnboardingFlowManager);
  if (!v5)
  {
    sub_1BC2B3ED8();
    v7 = *(void **)(v3 - 104);
    if (!v7)
    {
      sub_1BC0E8594(v1, type metadata accessor for MedicationOnboardingFlowManager);

      v6 = 0;
      goto LABEL_5;
    }
    v6 = sub_1BC2B4F04();

  }
  sub_1BC0E8594(v1, type metadata accessor for MedicationOnboardingFlowManager);
LABEL_5:
  sub_1BC0E8594(v4, type metadata accessor for MedicationOnboardingFlowManager);
  return v6;
}

uint64_t MedicationOnboardingFlowManager.subtitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  double v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t inited;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  unint64_t v43;
  unint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v48;
  _QWORD *v49;

  v1 = sub_1BC2B3530();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FormStepResult();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v48 - v10;
  sub_1BC0E1C64(0, &qword_1EF3FB840, v12);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v48 - v14;
  type metadata accessor for MedicationOnboardingFlowManager(0);
  v48 = v0;
  sub_1BC2B3ED8();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v15, 1, v5))
  {
    sub_1BC0E1CFC((uint64_t)v15, &qword_1EF3FB840, (void (*)(uint64_t))type metadata accessor for FormStepResult);
    v16 = 0;
    v17 = 0;
  }
  else
  {
    sub_1BC0FC574((uint64_t)v15, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FormStepResult);
    sub_1BC0E1CFC((uint64_t)v15, &qword_1EF3FB840, (void (*)(uint64_t))type metadata accessor for FormStepResult);
    sub_1BC0FC574((uint64_t)v11, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormStepResult);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v16 = sub_1BC2B4C10();
      v17 = v18;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v9, v1);
      v16 = sub_1BC2B350C();
      v17 = v19;
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }
    sub_1BC0E8594((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FormStepResult);
  }
  v20 = sub_1BC29B734();
  if ((v21 & 1) == 0)
  {
    v22 = *(double *)&v20;
    sub_1BC2B3ED8();
    v23 = v49;
    if (v49)
    {
      v24 = objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v49, v22);

      if (v24)
      {
        v25 = objc_msgSend((id)objc_opt_self(), sel_medicationDoseEventTypeForIdentifier_, *MEMORY[0x1E0CB5418]);
        if (v25)
        {
          v26 = v25;
          sub_1BC0E1D38(0, &qword_1EF401C68);
          v27 = objc_msgSend(v24, sel__unit);
          v28 = (void *)sub_1BC2B4BF8();

          v29 = objc_msgSend(v24, sel_localizedStringForType_parameters_, v26, v28);
          v30 = sub_1BC2B4460();
          v32 = v31;

          goto LABEL_14;
        }

      }
    }
  }
  v30 = 0;
  v32 = 0;
LABEL_14:
  sub_1BC152758();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC2B92C0;
  *(_QWORD *)(inited + 32) = v16;
  *(_QWORD *)(inited + 40) = v17;
  sub_1BC2B3ED8();
  v34 = v49;
  if (v49)
  {
    v30 = sub_1BC2B4F40();
    v36 = v35;

    swift_bridgeObjectRelease();
    v32 = v36;
  }
  *(_QWORD *)(inited + 48) = v30;
  *(_QWORD *)(inited + 56) = v32;
  v37 = *(_QWORD *)(inited + 40);
  if (!v37)
  {
    v39 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if (!v32)
      goto LABEL_27;
    goto LABEL_22;
  }
  v38 = *(_QWORD *)(inited + 32);
  swift_bridgeObjectRetain();
  v39 = sub_1BC0FA054(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v41 = v39[2];
  v40 = v39[3];
  if (v41 >= v40 >> 1)
    v39 = sub_1BC0FA054((_QWORD *)(v40 > 1), v41 + 1, 1, v39);
  v39[2] = v41 + 1;
  v42 = &v39[2 * v41];
  v42[4] = v38;
  v42[5] = v37;
  v30 = *(_QWORD *)(inited + 48);
  v32 = *(_QWORD *)(inited + 56);
  if (v32)
  {
LABEL_22:
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v39 = sub_1BC0FA054(0, v39[2] + 1, 1, v39);
    v44 = v39[2];
    v43 = v39[3];
    if (v44 >= v43 >> 1)
      v39 = sub_1BC0FA054((_QWORD *)(v43 > 1), v44 + 1, 1, v39);
    v39[2] = v44 + 1;
    v45 = &v39[2 * v44];
    v45[4] = v30;
    v45[5] = v32;
  }
LABEL_27:
  swift_bridgeObjectRelease();
  v49 = v39;
  sub_1BC0E2130(0, (unint64_t *)&qword_1EF3FA018, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC11BF0C();
  v46 = sub_1BC2B440C();
  swift_bridgeObjectRelease();
  return v46;
}

void sub_1BC296330()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;

  v1 = v0 + qword_1EF3FAA58;
  v2 = (char *)&loc_1BC296374
     + *((int *)qword_1BC296598
       + (*(unsigned __int8 *)(v1 + *(int *)(type metadata accessor for MedicationOnboardingFlowManager(0) + 28)) >> 5));
  __asm { BR              X11 }
}

void sub_1BC296384(char a1@<W8>)
{
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  if ((a1 & 1) != 0 && !MedicationOnboardingFlowManager.isAtFinalStep.getter())
  {
    v2 = objc_msgSend((id)objc_opt_self(), sel_linkButton);
    objc_msgSend(v2, sel_addTarget_action_forControlEvents_, v1, sel_skipButtonTapped_, 64);
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v3 = (id)qword_1EDA0FEF8;
    swift_bridgeObjectRetain();
    sub_1BC2B2144();
    swift_bridgeObjectRelease();

    v4 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_setTitle_forState_, v4, 0, 0xE000000000000000);

    swift_bridgeObjectRetain();
    sub_1BC2B44FC();
    v5 = v2;
    v6 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_setAccessibilityIdentifier_, v6);

    v7 = objc_msgSend(v1, sel_buttonTray);
    objc_msgSend(v7, sel_addButton_, v5);

  }
}

BOOL MedicationOnboardingFlowManager.isAtFinalStep.getter()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char *v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v17;

  v1 = v0;
  v2 = (void (*)(uint64_t))MEMORY[0x1E0D2C6F0];
  sub_1BC0E1C64(0, &qword_1EF3F8958, (void (*)(uint64_t))MEMORY[0x1E0D2C6F0]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v17 - v4;
  v6 = sub_1BC29B398();
  v7 = type metadata accessor for MedicationOnboardingFlowManager(0);
  sub_1BC2B3ED8();
  v8 = sub_1BC2B3350();
  v9 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v5, 1, v8) == 1;
  sub_1BC0E1CFC((uint64_t)v5, &qword_1EF3F8958, v2);
  v10 = _s19HealthMedicationsUI17SpecificationStepO10finalSteps16shouldDisplayDDI17skipVisualizationSayACGSb_SbtFZ_0(v6 & 1, v9);
  v11 = sub_1BC29A7F4(*(unsigned __int8 *)(v1 + *(int *)(v7 + 28)), (uint64_t)v10);
  v13 = v12;
  v14 = *((_QWORD *)v10 + 2);
  swift_bridgeObjectRelease();
  return (v13 & 1) == 0 && v11 == v14 - 1;
}

uint64_t MedicationOnboardingFlowManager.currentShape.getter()
{
  type metadata accessor for MedicationOnboardingFlowManager(0);
  return sub_1BC2B3ED8();
}

id MedicationOnboardingFlowManager.currentScheduleType.getter()
{
  id v0;
  id v2;

  type metadata accessor for MedicationOnboardingFlowManager(0);
  sub_1BC2B3ED8();
  if (!v2)
    return 0;
  v0 = objc_msgSend(v2, sel_scheduleType);

  return v0;
}

void sub_1BC296770()
{
  char *v0;
  uint64_t ObjectType;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  ObjectType = swift_getObjectType();
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EF3F9218, (void (*)(uint64_t))MEMORY[0x1E0DF0750]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v14 - v3;
  v5 = &v0[qword_1EF3FAA58];
  MedicationOnboardingFlowManager.makeNextViewControllerForStep()((UIViewController_optional *)qword_1EF3FAA58);
  if (v6)
  {
    v7 = v6;
    v8 = type metadata accessor for MedicationOnboardingFlowManager(0);
    sub_1BC2B3ED8();
    if (v14)
      __asm { BR              X11 }
    objc_msgSend(v0, sel_showViewController_sender_, v7, v0);

  }
  else
  {
    sub_1BC2B4664();
    v9 = sub_1BC2B467C();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 0, 1, v9);
    sub_1BC2B4658();
    v10 = v0;
    v11 = sub_1BC2B464C();
    v12 = (_QWORD *)swift_allocObject();
    v13 = MEMORY[0x1E0DF06E8];
    v12[2] = v11;
    v12[3] = v13;
    v12[4] = v10;
    v12[5] = ObjectType;
    sub_1BC1393A8((uint64_t)v4, (uint64_t)&unk_1EF401E58, (uint64_t)v12);
    swift_release();
  }
}

void sub_1BC296A14()
{
  char *v0;
  uint64_t ObjectType;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  ObjectType = swift_getObjectType();
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EF3F9218, (void (*)(uint64_t))MEMORY[0x1E0DF0750]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v14 - v3;
  v5 = &v0[qword_1EF3FAA58];
  MedicationOnboardingFlowManager.makeNextViewControllerForStep()((UIViewController_optional *)qword_1EF3FAA58);
  if (v6)
  {
    v7 = v6;
    v8 = type metadata accessor for MedicationOnboardingFlowManager(0);
    sub_1BC2B3ED8();
    if (v14)
      __asm { BR              X11 }
    objc_msgSend(v0, sel_showViewController_sender_, v7, v0);

  }
  else
  {
    sub_1BC2B4664();
    v9 = sub_1BC2B467C();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 0, 1, v9);
    sub_1BC2B4658();
    v10 = v0;
    v11 = sub_1BC2B464C();
    v12 = (_QWORD *)swift_allocObject();
    v13 = MEMORY[0x1E0DF06E8];
    v12[2] = v11;
    v12[3] = v13;
    v12[4] = v10;
    v12[5] = ObjectType;
    sub_1BC1393A8((uint64_t)v4, (uint64_t)&unk_1EF401E80, (uint64_t)v12);
    swift_release();
  }
}

void sub_1BC296CB8()
{
  char *v0;
  uint64_t ObjectType;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  ObjectType = swift_getObjectType();
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EF3F9218, (void (*)(uint64_t))MEMORY[0x1E0DF0750]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v14 - v3;
  v5 = &v0[qword_1EF3FAA58];
  MedicationOnboardingFlowManager.makeNextViewControllerForStep()((UIViewController_optional *)qword_1EF3FAA58);
  if (v6)
  {
    v7 = v6;
    v8 = type metadata accessor for MedicationOnboardingFlowManager(0);
    sub_1BC2B3ED8();
    if (v14)
      __asm { BR              X11 }
    objc_msgSend(v0, sel_showViewController_sender_, v7, v0);

  }
  else
  {
    sub_1BC2B4664();
    v9 = sub_1BC2B467C();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 0, 1, v9);
    sub_1BC2B4658();
    v10 = v0;
    v11 = sub_1BC2B464C();
    v12 = (_QWORD *)swift_allocObject();
    v13 = MEMORY[0x1E0DF06E8];
    v12[2] = v11;
    v12[3] = v13;
    v12[4] = v10;
    v12[5] = ObjectType;
    sub_1BC1393A8((uint64_t)v4, (uint64_t)&unk_1EF401EA8, (uint64_t)v12);
    swift_release();
  }
}

void sub_1BC296F5C()
{
  char *v0;
  uint64_t ObjectType;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  ObjectType = swift_getObjectType();
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EF3F9218, (void (*)(uint64_t))MEMORY[0x1E0DF0750]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v14 - v3;
  v5 = &v0[qword_1EF3FAA58];
  MedicationOnboardingFlowManager.makeNextViewControllerForStep()((UIViewController_optional *)qword_1EF3FAA58);
  if (v6)
  {
    v7 = v6;
    v8 = type metadata accessor for MedicationOnboardingFlowManager(0);
    sub_1BC2B3ED8();
    if (v14)
      __asm { BR              X11 }
    objc_msgSend(v0, sel_showViewController_sender_, v7, v0);

  }
  else
  {
    sub_1BC2B4664();
    v9 = sub_1BC2B467C();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 0, 1, v9);
    sub_1BC2B4658();
    v10 = v0;
    v11 = sub_1BC2B464C();
    v12 = (_QWORD *)swift_allocObject();
    v13 = MEMORY[0x1E0DF06E8];
    v12[2] = v11;
    v12[3] = v13;
    v12[4] = v10;
    v12[5] = ObjectType;
    sub_1BC1393A8((uint64_t)v4, (uint64_t)&unk_1EF401EF8, (uint64_t)v12);
    swift_release();
  }
}

void sub_1BC297200()
{
  char *v0;
  uint64_t ObjectType;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  ObjectType = swift_getObjectType();
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EF3F9218, (void (*)(uint64_t))MEMORY[0x1E0DF0750]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v14 - v3;
  v5 = &v0[qword_1EF3FAA58];
  MedicationOnboardingFlowManager.makeNextViewControllerForStep()((UIViewController_optional *)qword_1EF3FAA58);
  if (v6)
  {
    v7 = v6;
    v8 = type metadata accessor for MedicationOnboardingFlowManager(0);
    sub_1BC2B3ED8();
    if (v14)
      __asm { BR              X11 }
    objc_msgSend(v0, sel_showViewController_sender_, v7, v0);

  }
  else
  {
    sub_1BC2B4664();
    v9 = sub_1BC2B467C();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 0, 1, v9);
    sub_1BC2B4658();
    v10 = v0;
    v11 = sub_1BC2B464C();
    v12 = (_QWORD *)swift_allocObject();
    v13 = MEMORY[0x1E0DF06E8];
    v12[2] = v11;
    v12[3] = v13;
    v12[4] = v10;
    v12[5] = ObjectType;
    sub_1BC1393A8((uint64_t)v4, (uint64_t)&unk_1EF401ED0, (uint64_t)v12);
    swift_release();
  }
}

void sub_1BC2974A4()
{
  char *v0;
  uint64_t ObjectType;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  ObjectType = swift_getObjectType();
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EF3F9218, (void (*)(uint64_t))MEMORY[0x1E0DF0750]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v14 - v3;
  v5 = &v0[qword_1EF3FAA58];
  MedicationOnboardingFlowManager.makeNextViewControllerForStep()((UIViewController_optional *)qword_1EF3FAA58);
  if (v6)
  {
    v7 = v6;
    v8 = type metadata accessor for MedicationOnboardingFlowManager(0);
    sub_1BC2B3ED8();
    if (v14)
      __asm { BR              X11 }
    objc_msgSend(v0, sel_showViewController_sender_, v7, v0);

  }
  else
  {
    sub_1BC2B4664();
    v9 = sub_1BC2B467C();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 0, 1, v9);
    sub_1BC2B4658();
    v10 = v0;
    v11 = sub_1BC2B464C();
    v12 = (_QWORD *)swift_allocObject();
    v13 = MEMORY[0x1E0DF06E8];
    v12[2] = v11;
    v12[3] = v13;
    v12[4] = v10;
    v12[5] = ObjectType;
    sub_1BC1393A8((uint64_t)v4, (uint64_t)&unk_1EF401F18, (uint64_t)v12);
    swift_release();
  }
}

void sub_1BC297748()
{
  char *v0;
  uint64_t ObjectType;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  ObjectType = swift_getObjectType();
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EF3F9218, (void (*)(uint64_t))MEMORY[0x1E0DF0750]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v14 - v3;
  v5 = &v0[qword_1EF3FAA58];
  MedicationOnboardingFlowManager.makeNextViewControllerForStep()((UIViewController_optional *)qword_1EF3FAA58);
  if (v6)
  {
    v7 = v6;
    v8 = type metadata accessor for MedicationOnboardingFlowManager(0);
    sub_1BC2B3ED8();
    if (v14)
      __asm { BR              X11 }
    objc_msgSend(v0, sel_showViewController_sender_, v7, v0);

  }
  else
  {
    sub_1BC2B4664();
    v9 = sub_1BC2B467C();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 0, 1, v9);
    sub_1BC2B4658();
    v10 = v0;
    v11 = sub_1BC2B464C();
    v12 = (_QWORD *)swift_allocObject();
    v13 = MEMORY[0x1E0DF06E8];
    v12[2] = v11;
    v12[3] = v13;
    v12[4] = v10;
    v12[5] = ObjectType;
    sub_1BC1393A8((uint64_t)v4, (uint64_t)&unk_1EF401F30, (uint64_t)v12);
    swift_release();
  }
}

void sub_1BC2979EC()
{
  char *v0;
  uint64_t ObjectType;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  ObjectType = swift_getObjectType();
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EF3F9218, (void (*)(uint64_t))MEMORY[0x1E0DF0750]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v14 - v3;
  v5 = &v0[qword_1EF3FAA58];
  MedicationOnboardingFlowManager.makeNextViewControllerForStep()((UIViewController_optional *)qword_1EF3FAA58);
  if (v6)
  {
    v7 = v6;
    v8 = type metadata accessor for MedicationOnboardingFlowManager(0);
    sub_1BC2B3ED8();
    if (v14)
      __asm { BR              X11 }
    objc_msgSend(v0, sel_showViewController_sender_, v7, v0);

  }
  else
  {
    sub_1BC2B4664();
    v9 = sub_1BC2B467C();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 0, 1, v9);
    sub_1BC2B4658();
    v10 = v0;
    v11 = sub_1BC2B464C();
    v12 = (_QWORD *)swift_allocObject();
    v13 = MEMORY[0x1E0DF06E8];
    v12[2] = v11;
    v12[3] = v13;
    v12[4] = v10;
    v12[5] = ObjectType;
    sub_1BC1393A8((uint64_t)v4, (uint64_t)&unk_1EF401F48, (uint64_t)v12);
    swift_release();
  }
}

void sub_1BC297C90()
{
  char *v0;
  uint64_t ObjectType;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  ObjectType = swift_getObjectType();
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EF3F9218, (void (*)(uint64_t))MEMORY[0x1E0DF0750]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v14 - v3;
  v5 = &v0[qword_1EF3FAA58];
  MedicationOnboardingFlowManager.makeNextViewControllerForStep()((UIViewController_optional *)qword_1EF3FAA58);
  if (v6)
  {
    v7 = v6;
    v8 = type metadata accessor for MedicationOnboardingFlowManager(0);
    sub_1BC2B3ED8();
    if (v14)
      __asm { BR              X11 }
    objc_msgSend(v0, sel_showViewController_sender_, v7, v0);

  }
  else
  {
    sub_1BC2B4664();
    v9 = sub_1BC2B467C();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 0, 1, v9);
    sub_1BC2B4658();
    v10 = v0;
    v11 = sub_1BC2B464C();
    v12 = (_QWORD *)swift_allocObject();
    v13 = MEMORY[0x1E0DF06E8];
    v12[2] = v11;
    v12[3] = v13;
    v12[4] = v10;
    v12[5] = ObjectType;
    sub_1BC1393A8((uint64_t)v4, (uint64_t)&unk_1EF401F70, (uint64_t)v12);
    swift_release();
  }
}

void sub_1BC297F34()
{
  char *v0;
  uint64_t ObjectType;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  ObjectType = swift_getObjectType();
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EF3F9218, (void (*)(uint64_t))MEMORY[0x1E0DF0750]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v14 - v3;
  v5 = &v0[qword_1EF3FAA58];
  MedicationOnboardingFlowManager.makeNextViewControllerForStep()((UIViewController_optional *)qword_1EF3FAA58);
  if (v6)
  {
    v7 = v6;
    v8 = type metadata accessor for MedicationOnboardingFlowManager(0);
    sub_1BC2B3ED8();
    if (v14)
      __asm { BR              X11 }
    objc_msgSend(v0, sel_showViewController_sender_, v7, v0);

  }
  else
  {
    sub_1BC2B4664();
    v9 = sub_1BC2B467C();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 0, 1, v9);
    sub_1BC2B4658();
    v10 = v0;
    v11 = sub_1BC2B464C();
    v12 = (_QWORD *)swift_allocObject();
    v13 = MEMORY[0x1E0DF06E8];
    v12[2] = v11;
    v12[3] = v13;
    v12[4] = v10;
    v12[5] = ObjectType;
    sub_1BC1393A8((uint64_t)v4, (uint64_t)&unk_1EF401F90, (uint64_t)v12);
    swift_release();
  }
}

void __swiftcall MedicationOnboardingFlowManager.makeNextViewControllerForStep()(UIViewController_optional *__return_ptr retstr)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int v7;
  uint64_t v8;
  unsigned __int8 v9;
  unsigned __int8 v10;
  unsigned __int8 v11;

  sub_1BC0E1C64(0, (unint64_t *)&qword_1EF3F8980, (void (*)(uint64_t))type metadata accessor for MedicationSearchItem);
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for MedicationOnboardingFlowManager(0);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_BYTE *)(v1 + *(int *)(v4 + 28));
  sub_1BC29C424(&v10, (uint64_t)&v11);
  v7 = v11;
  if (v11 <= 0xFDu)
  {
    v9 = v11;
    sub_1BC29CBE4(&v9, (uint64_t)v6);
    __asm { BR              X10 }
  }
}

uint64_t sub_1BC2983D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[6] = a4;
  v5[7] = a5;
  v6 = sub_1BC2B39E0();
  v5[8] = v6;
  v5[9] = *(_QWORD *)(v6 - 8);
  v5[10] = swift_task_alloc();
  sub_1BC2B4658();
  v5[11] = sub_1BC2B464C();
  v5[12] = sub_1BC2B461C();
  v5[13] = v7;
  return swift_task_switch();
}

uint64_t sub_1BC29846C()
{
  uint64_t v0;
  id v1;
  _QWORD *v2;

  v1 = objc_msgSend(*(id *)(v0 + 48), sel_buttonTray);
  objc_msgSend(v1, sel_showButtonsBusy);

  *(_QWORD *)(v0 + 112) = sub_1BC2B3278();
  sub_1BC2B326C();
  sub_1BC2B3254();
  swift_release();
  *(_QWORD *)(v0 + 120) = sub_1BC2B3938();
  swift_release();
  *(_QWORD *)(v0 + 128) = qword_1EF3FAA58;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 136) = v2;
  *v2 = v0;
  v2[1] = sub_1BC298534;
  return sub_1BC298B40();
}

uint64_t sub_1BC298534()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BC298594(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[6] = a4;
  v5[7] = a5;
  v6 = sub_1BC2B39E0();
  v5[8] = v6;
  v5[9] = *(_QWORD *)(v6 - 8);
  v5[10] = swift_task_alloc();
  sub_1BC2B4658();
  v5[11] = sub_1BC2B464C();
  v5[12] = sub_1BC2B461C();
  v5[13] = v7;
  return swift_task_switch();
}

uint64_t sub_1BC298628()
{
  uint64_t v0;
  id v1;
  _QWORD *v2;

  v1 = objc_msgSend(*(id *)(v0 + 48), sel_buttonTray);
  objc_msgSend(v1, sel_showButtonsBusy);

  *(_QWORD *)(v0 + 112) = sub_1BC2B3278();
  sub_1BC2B326C();
  sub_1BC2B3254();
  swift_release();
  *(_QWORD *)(v0 + 120) = sub_1BC2B3938();
  swift_release();
  *(_QWORD *)(v0 + 128) = qword_1EF3FAA58;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 136) = v2;
  *v2 = v0;
  v2[1] = sub_1BC2986F0;
  return sub_1BC298B40();
}

uint64_t sub_1BC2986F0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BC298750()
{
  uint64_t v0;
  unint64_t v1;
  void *v2;
  id v3;

  swift_release();
  sub_1BC29A4B4();
  sub_1BC2B326C();
  sub_1BC2B3248();
  swift_release();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FC98);
  sub_1BC2B48EC();
  sub_1BC2B31F4();
  swift_allocObject();
  sub_1BC2B314C();
  if ((sub_1BC2B3188() & 1) == 0)
  {
    type metadata accessor for MedicationOnboardingFlowManager(0);
    sub_1BC2B3194();
  }
  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(void **)(v0 + 48);
  swift_release();
  sub_1BC141940(v1);
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_dismissViewControllerAnimated_completion_, 1, 0);
  v3 = objc_msgSend(v2, sel_buttonTray);
  objc_msgSend(v3, sel_showButtonsAvailable);

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC298898()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(void **)(v0 + 144);
  swift_release();
  swift_bridgeObjectRelease();
  sub_1BC2B39A4();
  v2 = v1;
  v3 = v1;
  v4 = sub_1BC2B39D4();
  v5 = sub_1BC2B48C8();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 144);
    v19 = *(_QWORD *)(v0 + 72);
    v20 = *(_QWORD *)(v0 + 64);
    v21 = *(_QWORD *)(v0 + 80);
    v7 = swift_slowAlloc();
    v8 = swift_slowAlloc();
    v22 = v8;
    *(_DWORD *)v7 = 136446722;
    v9 = sub_1BC2B54F8();
    *(_QWORD *)(v0 + 16) = sub_1BC12540C(v9, v10, &v22);
    sub_1BC2B4FD0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2082;
    *(_QWORD *)(v0 + 24) = sub_1BC12540C(0xD000000000000023, 0x80000001BC2CAFF0, &v22);
    sub_1BC2B4FD0();
    *(_WORD *)(v7 + 22) = 2080;
    *(_QWORD *)(v0 + 32) = v6;
    v11 = v6;
    sub_1BC0E8778(0, (unint64_t *)&qword_1EDA0FEA0);
    v12 = sub_1BC2B4478();
    *(_QWORD *)(v0 + 40) = sub_1BC12540C(v12, v13, &v22);
    sub_1BC2B4FD0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BC0DC000, v4, v5, "[%{public}s.%{public}s]: Failed to save medication with %s", (uint8_t *)v7, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v8, -1, -1);
    MEMORY[0x1BCCEF3A0](v7, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v21, v20);
  }
  else
  {
    v14 = *(void **)(v0 + 144);
    v16 = *(_QWORD *)(v0 + 72);
    v15 = *(_QWORD *)(v0 + 80);
    v17 = *(_QWORD *)(v0 + 64);

    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC298B40()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[35] = v0;
  v2 = sub_1BC2B39E0();
  v1[36] = v2;
  v1[37] = *(_QWORD *)(v2 - 8);
  v1[38] = swift_task_alloc();
  v1[39] = swift_task_alloc();
  v1[40] = swift_task_alloc();
  v1[41] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BC298BC8()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;

  type metadata accessor for MedicationOnboardingFlowManager(0);
  v1 = (void *)sub_1BC2B323C();
  v0[42] = v1;
  v0[43] = sub_1BC2B3254();
  MedicationOnboardingFlowManager.currentMedicationUDC.getter();
  v3 = v2;
  v0[44] = v2;
  MedicationOnboardingFlowManager.currentMedicationUDC.getter();
  v5 = v4;
  sub_1BC29F0A0();

  v6 = objc_msgSend(v3, sel_firstConceptIdentifier);
  v0[45] = v6;
  if (v6)
  {
    v7 = v6;
    v8 = objc_msgSend(v3, sel_propertyCollection);
    v9 = v8;
    if (v8)
    {
      v10 = objc_msgSend(v8, sel_properties);

      sub_1BC0E1D38(0, (unint64_t *)&qword_1EF3F8A00);
      sub_1BC2B458C();

      v9 = (void *)sub_1BC2B4580();
      swift_bridgeObjectRelease();
    }
    v0[46] = v9;
    v11 = objc_msgSend((id)objc_opt_self(), sel_medicationUserDomainConceptTypeIdentifier);
    v0[47] = v11;
    v0[15] = v0 + 28;
    v0[10] = v0;
    v0[11] = sub_1BC298E00;
    v12 = swift_continuation_init();
    v0[23] = MEMORY[0x1E0C809B0];
    v13 = v0 + 23;
    v13[1] = 0x40000000;
    v13[2] = sub_1BC29F708;
    v13[3] = &block_descriptor_3;
    v13[4] = v12;
    objc_msgSend(v1, sel_insertNewUserDomainConceptBackedByOntologyConceptWithIdentifier_supplementaryProperties_userDomainConceptTypeIdentifier_completion_, v7, v9, v11, v13);
  }
  else
  {
    v0[2] = v0;
    v0[3] = sub_1BC299294;
    v14 = swift_continuation_init();
    v0[18] = MEMORY[0x1E0C809B0];
    v15 = v0 + 18;
    v15[1] = 0x40000000;
    v15[2] = sub_1BC2311D4;
    v15[3] = &block_descriptor_31;
    v15[4] = v14;
    objc_msgSend(v1, sel_saveOrUpdateUserDomainConcept_completion_, v3, v15);
  }
  return swift_continuation_await();
}

uint64_t sub_1BC298E00()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 384) = *(_QWORD *)(*(_QWORD *)v0 + 112);
  return swift_task_switch();
}

uint64_t sub_1BC298E60()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v1 = (void *)v0[28];
  v3 = (void *)v0[46];
  v2 = (void *)v0[47];
  v0[49] = v1;
  objc_opt_self();
  v4 = swift_dynamicCastObjCClass();
  v0[50] = v4;

  if (v4)
  {
    v5 = v0[43];
    v6 = swift_task_alloc();
    v0[51] = v6;
    *(_QWORD *)(v6 + 16) = v5;
    *(_QWORD *)(v6 + 24) = v4;
    v7 = (_QWORD *)swift_task_alloc();
    v0[52] = v7;
    *v7 = v0;
    v7[1] = sub_1BC298FC0;
    return sub_1BC2B53B4();
  }
  else
  {

    return sub_1BC2B52B8();
  }
}

uint64_t sub_1BC298FC0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BC29901C()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  _BOOL4 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;

  if ((*(_BYTE *)(v0 + 480) & 1) == 0)
  {
    sub_1BC2B39C8();
    v1 = sub_1BC2B39D4();
    v2 = sub_1BC2B48C8();
    v3 = os_log_type_enabled(v1, v2);
    v4 = *(_QWORD *)(v0 + 328);
    v5 = *(_QWORD *)(v0 + 288);
    v6 = *(_QWORD *)(v0 + 296);
    if (v3)
    {
      v7 = (uint8_t *)swift_slowAlloc();
      v8 = swift_slowAlloc();
      v11 = v8;
      *(_DWORD *)v7 = 136315138;
      *(_QWORD *)(v0 + 240) = sub_1BC12540C(0xD00000000000001FLL, 0x80000001BC2C6670, &v11);
      sub_1BC2B4FD0();
      _os_log_impl(&dword_1BC0DC000, v1, v2, "[%s] Failed to add medication to active list", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v8, -1, -1);
      MEMORY[0x1BCCEF3A0](v7, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 424) = v9;
  *v9 = v0;
  v9[1] = sub_1BC2991B4;
  return sub_1BC29F7A4(*(_QWORD *)(v0 + 400));
}

uint64_t sub_1BC2991B4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 432) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BC299218()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;

  v1 = *(void **)(v0 + 392);
  v2 = *(void **)(v0 + 352);
  v3 = *(void **)(v0 + 336);

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC299294()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 440) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1BC2992F4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = swift_task_alloc();
  *(_QWORD *)(v0 + 448) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 344);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 456) = v2;
  *v2 = v0;
  v2[1] = sub_1BC2993A0;
  return sub_1BC2B53B4();
}

uint64_t sub_1BC2993A0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BC2993FC()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  _BOOL4 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;

  if ((*(_BYTE *)(v0 + 481) & 1) == 0)
  {
    sub_1BC2B39C8();
    v1 = sub_1BC2B39D4();
    v2 = sub_1BC2B48C8();
    v3 = os_log_type_enabled(v1, v2);
    v4 = *(_QWORD *)(v0 + 320);
    v5 = *(_QWORD *)(v0 + 288);
    v6 = *(_QWORD *)(v0 + 296);
    if (v3)
    {
      v7 = (uint8_t *)swift_slowAlloc();
      v8 = swift_slowAlloc();
      v11 = v8;
      *(_DWORD *)v7 = 136315138;
      *(_QWORD *)(v0 + 232) = sub_1BC12540C(0xD00000000000001FLL, 0x80000001BC2C6670, &v11);
      sub_1BC2B4FD0();
      _os_log_impl(&dword_1BC0DC000, v1, v2, "[%s] Failed to add medication to active list", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v8, -1, -1);
      MEMORY[0x1BCCEF3A0](v7, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 464) = v9;
  *v9 = v0;
  v9[1] = sub_1BC299594;
  return sub_1BC29F7A4(*(_QWORD *)(v0 + 352));
}

uint64_t sub_1BC299594()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 472) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BC2995F8()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 352);
  v2 = *(void **)(v0 + 336);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC299664()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(void **)(v0 + 376);
  v2 = *(void **)(v0 + 368);
  swift_willThrow();

  v3 = *(void **)(v0 + 384);
  sub_1BC2B39C8();
  v4 = v3;
  v5 = v3;
  v6 = sub_1BC2B39D4();
  v7 = sub_1BC2B48C8();
  if (os_log_type_enabled(v6, v7))
  {
    v19 = *(void **)(v0 + 360);
    v23 = *(void **)(v0 + 352);
    v24 = *(_QWORD *)(v0 + 312);
    v20 = *(void **)(v0 + 336);
    v21 = *(_QWORD *)(v0 + 296);
    v22 = *(_QWORD *)(v0 + 288);
    v8 = swift_slowAlloc();
    v9 = (_QWORD *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v25 = v10;
    *(_DWORD *)v8 = 136315394;
    *(_QWORD *)(v0 + 264) = sub_1BC12540C(0xD00000000000001FLL, 0x80000001BC2C6670, &v25);
    sub_1BC2B4FD0();
    *(_WORD *)(v8 + 12) = 2112;
    v11 = v3;
    v12 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 272) = v12;
    sub_1BC2B4FD0();
    *v9 = v12;

    _os_log_impl(&dword_1BC0DC000, v6, v7, "[%s] Failed to save ontology-backed medication with error: '%@'", (uint8_t *)v8, 0x16u);
    sub_1BC106304(0, (unint64_t *)&qword_1EF3F90B8, (unint64_t *)&qword_1EF3FBD20, 0x1E0DE7910, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v9, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v10, -1, -1);
    MEMORY[0x1BCCEF3A0](v8, -1, -1);

    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v24, v22);
  }
  else
  {
    v13 = *(void **)(v0 + 360);
    v14 = *(void **)(v0 + 336);
    v15 = *(_QWORD *)(v0 + 312);
    v16 = *(_QWORD *)(v0 + 288);
    v17 = *(_QWORD *)(v0 + 296);

    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC299954()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(void **)(v0 + 432);
  sub_1BC2B39C8();
  v2 = v1;
  v3 = v1;
  v4 = sub_1BC2B39D4();
  v5 = sub_1BC2B48C8();
  if (os_log_type_enabled(v4, v5))
  {
    v17 = *(void **)(v0 + 360);
    v21 = *(void **)(v0 + 352);
    v22 = *(_QWORD *)(v0 + 312);
    v18 = *(void **)(v0 + 336);
    v19 = *(_QWORD *)(v0 + 296);
    v20 = *(_QWORD *)(v0 + 288);
    v6 = swift_slowAlloc();
    v7 = (_QWORD *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v23 = v8;
    *(_DWORD *)v6 = 136315394;
    *(_QWORD *)(v0 + 264) = sub_1BC12540C(0xD00000000000001FLL, 0x80000001BC2C6670, &v23);
    sub_1BC2B4FD0();
    *(_WORD *)(v6 + 12) = 2112;
    v9 = v1;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 272) = v10;
    sub_1BC2B4FD0();
    *v7 = v10;

    _os_log_impl(&dword_1BC0DC000, v4, v5, "[%s] Failed to save ontology-backed medication with error: '%@'", (uint8_t *)v6, 0x16u);
    sub_1BC106304(0, (unint64_t *)&qword_1EF3F90B8, (unint64_t *)&qword_1EF3FBD20, 0x1E0DE7910, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v7, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v8, -1, -1);
    MEMORY[0x1BCCEF3A0](v6, -1, -1);

    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v22, v20);
  }
  else
  {
    v11 = *(void **)(v0 + 360);
    v12 = *(void **)(v0 + 336);
    v13 = *(_QWORD *)(v0 + 312);
    v14 = *(_QWORD *)(v0 + 288);
    v15 = *(_QWORD *)(v0 + 296);

    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC299C38()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  swift_willThrow();
  v1 = *(void **)(v0 + 440);
  sub_1BC2B39C8();
  v2 = v1;
  v3 = v1;
  v4 = sub_1BC2B39D4();
  v5 = sub_1BC2B48C8();
  if (os_log_type_enabled(v4, v5))
  {
    v16 = *(void **)(v0 + 336);
    v17 = *(void **)(v0 + 352);
    v18 = *(_QWORD *)(v0 + 296);
    v19 = *(_QWORD *)(v0 + 288);
    v20 = *(_QWORD *)(v0 + 304);
    v6 = swift_slowAlloc();
    v7 = (_QWORD *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v21 = v8;
    *(_DWORD *)v6 = 136315394;
    *(_QWORD *)(v0 + 256) = sub_1BC12540C(0xD00000000000001FLL, 0x80000001BC2C6670, &v21);
    sub_1BC2B4FD0();
    *(_WORD *)(v6 + 12) = 2112;
    v9 = v1;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 248) = v10;
    sub_1BC2B4FD0();
    *v7 = v10;

    _os_log_impl(&dword_1BC0DC000, v4, v5, "[%s] Failed to save manual medication with error: '%@'", (uint8_t *)v6, 0x16u);
    sub_1BC106304(0, (unint64_t *)&qword_1EF3F90B8, (unint64_t *)&qword_1EF3FBD20, 0x1E0DE7910, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v7, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v8, -1, -1);
    MEMORY[0x1BCCEF3A0](v6, -1, -1);
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v20, v19);
  }
  else
  {
    v11 = *(void **)(v0 + 336);
    v13 = *(_QWORD *)(v0 + 296);
    v12 = *(_QWORD *)(v0 + 304);
    v14 = *(_QWORD *)(v0 + 288);

    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC299F08()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = *(void **)(v0 + 472);
  sub_1BC2B39C8();
  v2 = v1;
  v3 = v1;
  v4 = sub_1BC2B39D4();
  v5 = sub_1BC2B48C8();
  if (os_log_type_enabled(v4, v5))
  {
    v16 = *(void **)(v0 + 336);
    v17 = *(void **)(v0 + 352);
    v18 = *(_QWORD *)(v0 + 296);
    v19 = *(_QWORD *)(v0 + 288);
    v20 = *(_QWORD *)(v0 + 304);
    v6 = swift_slowAlloc();
    v7 = (_QWORD *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v21 = v8;
    *(_DWORD *)v6 = 136315394;
    *(_QWORD *)(v0 + 256) = sub_1BC12540C(0xD00000000000001FLL, 0x80000001BC2C6670, &v21);
    sub_1BC2B4FD0();
    *(_WORD *)(v6 + 12) = 2112;
    v9 = v1;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 248) = v10;
    sub_1BC2B4FD0();
    *v7 = v10;

    _os_log_impl(&dword_1BC0DC000, v4, v5, "[%s] Failed to save manual medication with error: '%@'", (uint8_t *)v6, 0x16u);
    sub_1BC106304(0, (unint64_t *)&qword_1EF3F90B8, (unint64_t *)&qword_1EF3FBD20, 0x1E0DE7910, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v7, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v8, -1, -1);
    MEMORY[0x1BCCEF3A0](v6, -1, -1);
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v20, v19);
  }
  else
  {
    v11 = *(void **)(v0 + 336);
    v13 = *(_QWORD *)(v0 + 296);
    v12 = *(_QWORD *)(v0 + 304);
    v14 = *(_QWORD *)(v0 + 288);

    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC29A1D0(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  void *v16;

  v3 = v2;
  v6 = objc_msgSend(v2, sel_navigationItem);
  v7 = objc_msgSend(v6, sel_rightBarButtonItem);

  if (v7)
  {
    swift_bridgeObjectRetain();
    sub_1BC2B44FC();
    v8 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setAccessibilityIdentifier_, v8, a1, a2);

  }
  v9 = objc_msgSend(v3, sel_navigationItem);
  v10 = objc_msgSend(v9, sel_backBarButtonItem);

  if (v10)
  {
    swift_bridgeObjectRetain();
    sub_1BC2B44FC();
    v11 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    objc_msgSend(v10, sel_setAccessibilityIdentifier_, v11, a1, a2);

  }
  v12 = objc_msgSend(v3, sel_navigationItem);
  v13 = objc_msgSend(v12, sel_leftBarButtonItem);

  if (v13)
  {
    swift_bridgeObjectRetain();
    sub_1BC2B44FC();
    v14 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    objc_msgSend(v13, sel_setAccessibilityIdentifier_, v14, a1, a2);

  }
  v15 = objc_msgSend(v3, sel_editButtonItem);
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  v16 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v15, sel_setAccessibilityIdentifier_, v16, a1, a2);

  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  sub_1BC2B2FB4();
  return swift_bridgeObjectRelease();
}

void sub_1BC29A4B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;
  _QWORD v21[2];
  uint64_t v22[2];

  swift_getObjectType();
  v0 = sub_1BC2B39E0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B39A4();
  v4 = sub_1BC2B39D4();
  v5 = sub_1BC2B48B0();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v22[0] = v7;
    *(_DWORD *)v6 = 136446210;
    v8 = sub_1BC2B54F8();
    v21[1] = sub_1BC12540C(v8, v9, v22);
    sub_1BC2B4FD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC0DC000, v4, v5, "[%{public}s]: Submitting Tips Discoverability Signal", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v7, -1, -1);
    MEMORY[0x1BCCEF3A0](v6, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v10 = objc_msgSend((id)BiomeLibrary(), sel_Discoverability);
  swift_unknownObjectRelease();
  v11 = objc_msgSend(v10, sel_Signals);
  swift_unknownObjectRelease();
  v12 = objc_msgSend(v11, sel_source);
  sub_1BC2B4460();
  v13 = (void *)sub_1BC2B4430();
  v14 = MGGetStringAnswer();
  if (v14)
  {
    v15 = (void *)v14;
    sub_1BC2B4460();

    v22[0] = 760434537;
    v22[1] = 0xE400000000000000;
    sub_1BC2B44FC();

    swift_bridgeObjectRelease();
    v16 = objc_allocWithZone(MEMORY[0x1E0D01FF0]);
    v17 = (void *)sub_1BC2B4430();
    v18 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    v19 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    v20 = objc_msgSend(v16, sel_initWithContentIdentifier_context_osBuild_userInfo_, v17, v18, v19, 0);

    objc_msgSend(v12, sel_sendEvent_, v20);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1BC29A7F4(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    return ((uint64_t (*)(void))((char *)&loc_1BC29A81C + 4 * byte_1BC2C65F6[*(unsigned __int8 *)(a2 + 32) >> 5]))();
  else
    return 0;
}

uint64_t MedicationOnboardingFlowManager.init(entryMode:currentStep:didShowLifeStyleFactors:analyticsContext:analyticsEntryMode:)@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  void (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v43[12];
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  __int128 v49;
  __int128 v50;

  v46 = a4;
  v47 = a5;
  v48 = a3;
  v45 = a1;
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v43[-v9];
  sub_1BC0E1C64(0, &qword_1EF3F8958, (void (*)(uint64_t))MEMORY[0x1E0D2C6F0]);
  MEMORY[0x1E0C80A78](v11);
  v13 = &v43[-v12];
  sub_1BC0E1C64(0, &qword_1EF3FB840, (void (*)(uint64_t))type metadata accessor for FormStepResult);
  MEMORY[0x1E0C80A78](v14);
  v16 = &v43[-v15];
  v17 = (void (*)(uint64_t))MEMORY[0x1E0CB0998];
  sub_1BC0E1C64(0, &qword_1EF400C68, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  MEMORY[0x1E0C80A78](v18);
  v20 = &v43[-v19];
  v44 = *a2;
  v21 = (int *)type metadata accessor for MedicationOnboardingFlowManager(0);
  v22 = v21[9];
  v23 = sub_1BC2B2438();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v20, 1, 1, v23);
  sub_1BC2A2DD0(0, &qword_1EF401C70, &qword_1EF400C68, v17);
  swift_allocObject();
  *(_QWORD *)(a6 + v22) = sub_1BC2B3EF0();
  v24 = v21[10];
  *(_QWORD *)&v49 = 0;
  sub_1BC2A2E34(0, &qword_1EF401C78, &qword_1EF3F9730, (unint64_t *)&qword_1EF400130, 0x1E0CB64A0);
  swift_allocObject();
  *(_QWORD *)(a6 + v24) = sub_1BC2B3EF0();
  v25 = v21[11];
  LOBYTE(v49) = 0;
  sub_1BC252694(0, (unint64_t *)&qword_1EF3F8778, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))MEMORY[0x1E0C95F88]);
  swift_allocObject();
  *(_QWORD *)(a6 + v25) = sub_1BC2B3EF0();
  v26 = v21[12];
  v27 = type metadata accessor for FormStepResult();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v16, 1, 1, v27);
  sub_1BC2A2DD0(0, (unint64_t *)&qword_1EF3FB848, &qword_1EF3FB840, (void (*)(uint64_t))type metadata accessor for FormStepResult);
  swift_allocObject();
  *(_QWORD *)(a6 + v26) = sub_1BC2B3EF0();
  v28 = v21[13];
  sub_1BC26465C(0, (unint64_t *)&qword_1EF3F93F8, (unint64_t *)&qword_1EF3FB1D0, MEMORY[0x1E0DEA968]);
  v49 = 0uLL;
  swift_allocObject();
  *(_QWORD *)(a6 + v28) = sub_1BC2B3EF0();
  v29 = v21[14];
  v49 = 0uLL;
  swift_allocObject();
  swift_retain();
  *(_QWORD *)(a6 + v29) = sub_1BC2B3EF0();
  v30 = v21[15];
  *(_QWORD *)&v49 = 0;
  sub_1BC2A2E34(0, &qword_1EF3FD530, &qword_1EF3FD538, (unint64_t *)&qword_1EF3FD540, 0x1E0CB6CD0);
  swift_allocObject();
  *(_QWORD *)(a6 + v30) = sub_1BC2B3EF0();
  v31 = v21[16];
  v32 = sub_1BC2B3350();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v13, 1, 1, v32);
  sub_1BC2A2DD0(0, (unint64_t *)&qword_1EF3F8978, &qword_1EF3F8958, (void (*)(uint64_t))MEMORY[0x1E0D2C6F0]);
  swift_allocObject();
  *(_QWORD *)(a6 + v31) = sub_1BC2B3EF0();
  v33 = v21[17];
  v34 = sub_1BC2B3608();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v10, 1, 1, v34);
  sub_1BC2A2DD0(0, &qword_1EF3FB540, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
  swift_allocObject();
  *(_QWORD *)(a6 + v33) = sub_1BC2B3EF0();
  v35 = v21[18];
  sub_1BC26465C(0, (unint64_t *)&qword_1EF400C58, (unint64_t *)&qword_1EF400C60, (uint64_t)&type metadata for MedicationNicknameNotes);
  v49 = 0u;
  v50 = 0u;
  swift_allocObject();
  *(_QWORD *)(a6 + v35) = sub_1BC2B3EF0();
  v36 = v21[19];
  *(_QWORD *)&v49 = 0;
  sub_1BC2A2E34(0, (unint64_t *)&qword_1EF3F9DA0, (unint64_t *)&qword_1EDA0FD00, &qword_1EDA0FCF8, 0x1E0D2C480);
  swift_allocObject();
  *(_QWORD *)(a6 + v36) = sub_1BC2B3EF0();
  v37 = v21[20];
  sub_1BC2B3278();
  *(_QWORD *)(a6 + v37) = sub_1BC2B326C();
  v38 = v45;
  sub_1BC0FC574(v45, a6, type metadata accessor for MedicationOnboardingFlowManager.EntryMode);
  *(_BYTE *)(a6 + v21[7]) = v44;
  *(_QWORD *)(a6 + v21[5]) = v46;
  swift_retain();
  v39 = v47;
  sub_1BC2B3680();
  *(_QWORD *)(a6 + v21[6]) = v39;
  *(_BYTE *)(a6 + v21[8]) = v48 & 1;
  sub_1BC29AEA0();
  *(_QWORD *)&v49 = v40;
  *((_QWORD *)&v49 + 1) = v41;
  sub_1BC2B3EC0();
  swift_release();
  swift_release();
  sub_1BC0E8594(v38, type metadata accessor for MedicationOnboardingFlowManager.EntryMode);
  return swift_bridgeObjectRelease();
}

void sub_1BC29AEA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  char *v8;
  uint64_t v9;
  uint64_t v10;

  v10 = sub_1BC2B34A0();
  MEMORY[0x1E0C80A78](v10);
  v1 = type metadata accessor for MedicationSearchItem.Source(0);
  v2 = MEMORY[0x1E0C80A78](v1);
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for MedicationSearchItem(0);
  v4 = MEMORY[0x1E0C80A78](v3);
  MEMORY[0x1E0C80A78](v4);
  v5 = type metadata accessor for MedicationOnboardingFlowManager.EntryMode(0);
  MEMORY[0x1E0C80A78](v5);
  sub_1BC0FC574(v0, (uint64_t)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  v8 = (char *)sub_1BC29B014 + 4 * byte_1BC2C65FC[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BC29B014()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void **v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;

  sub_1BC0F1B94(v4, v2, type metadata accessor for MedicationSearchItem);
  sub_1BC0FC574(v2, (uint64_t)v3, type metadata accessor for MedicationSearchItem.Source);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = *(_QWORD *)(v5 - 88);
    (*(void (**)(uint64_t, void **, uint64_t))(v0 + 32))(v1, v3, v6);
    v7 = sub_1BC2B3470();
    (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v1, v6);
  }
  else
  {
    v8 = *v3;
    sub_1BC0F223C();
    v10 = (char *)v3 + *(int *)(v9 + 48);
    v7 = sub_1BC2B4F04();

    v11 = sub_1BC2B3530();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  sub_1BC0E8594(v2, type metadata accessor for MedicationSearchItem);
  return v7;
}

uint64_t MedicationOnboardingFlowManager.analyticsContext.getter()
{
  type metadata accessor for MedicationOnboardingFlowManager(0);
  return swift_retain();
}

uint64_t MedicationOnboardingFlowManager.analyticsContext.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for MedicationOnboardingFlowManager(0) + 20);
  result = swift_release();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*MedicationOnboardingFlowManager.analyticsContext.modify())()
{
  type metadata accessor for MedicationOnboardingFlowManager(0);
  return nullsub_1;
}

uint64_t MedicationOnboardingFlowManager.analyticsEntryMode.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for MedicationOnboardingFlowManager(0) + 24));
}

uint64_t MedicationOnboardingFlowManager.analyticsEntryMode.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for MedicationOnboardingFlowManager(0);
  *(_QWORD *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*MedicationOnboardingFlowManager.analyticsEntryMode.modify())()
{
  type metadata accessor for MedicationOnboardingFlowManager(0);
  return nullsub_1;
}

uint64_t MedicationOnboardingFlowManager.currentStep.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for MedicationOnboardingFlowManager(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t MedicationOnboardingFlowManager.didShowLifeStyleFactors.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for MedicationOnboardingFlowManager(0) + 32));
}

uint64_t MedicationOnboardingFlowManager.conceptPublisher.getter()
{
  type metadata accessor for MedicationOnboardingFlowManager(0);
  return swift_retain();
}

uint64_t MedicationOnboardingFlowManager.proceededManuallyPublisher.getter()
{
  type metadata accessor for MedicationOnboardingFlowManager(0);
  return swift_retain();
}

uint64_t sub_1BC29B398()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char v5;
  char v6;
  unsigned __int8 v7;
  unint64_t v8;
  uint64_t v9;
  unsigned int v10;
  char v11;
  char v12;
  uint64_t v14;
  id v15;

  v1 = v0;
  v2 = type metadata accessor for MedicationOnboardingFlowManager(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC2B3278();
  sub_1BC2B326C();
  sub_1BC2B3248();
  swift_release();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FC98);
  sub_1BC2B48EC();
  sub_1BC2B31F4();
  swift_allocObject();
  sub_1BC2B314C();
  v5 = sub_1BC2B31A0();
  v6 = sub_1BC2B31DC();
  v7 = sub_1BC2B31B8();
  sub_1BC2B3254();
  v8 = sub_1BC2B3938();
  swift_release();
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    v9 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  v10 = objc_msgSend((id)objc_opt_self(), sel_supportsOntologyBackedMedications);
  sub_1BC0FC574(v1, (uint64_t)v4, type metadata accessor for MedicationOnboardingFlowManager);
  if (v10 && (sub_1BC2B3ED8(), v15))
  {

    sub_1BC0E8594((uint64_t)v4, type metadata accessor for MedicationOnboardingFlowManager);
    if ((((v5 | v6) | v7) & 1) != 0 || (sub_1BC2B3188() & 1) != 0)
    {
      v11 = sub_1BC2B31D0();
      swift_release();
      v12 = v11 | (v9 == 0);
    }
    else
    {
      swift_release();
      v12 = 1;
    }
  }
  else
  {
    sub_1BC0E8594((uint64_t)v4, type metadata accessor for MedicationOnboardingFlowManager);
    swift_release();
    v12 = 0;
  }
  return v12 & 1;
}

void sub_1BC29B5E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  char *v4;
  uint64_t v5;

  v1 = type metadata accessor for MedicationOnboardingFlowManager.EntryMode(0);
  MEMORY[0x1E0C80A78](v1);
  sub_1BC0FC574(v0, (uint64_t)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  v4 = (char *)sub_1BC29B66C + 4 * byte_1BC2C6600[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BC29B66C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1BC0E8594(v1, type metadata accessor for MedicationOnboardingFlowManager.EntryMode);
  v2 = type metadata accessor for MedicationSearchItem(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v0, 1, 1, v2);
}

uint64_t type metadata accessor for MedicationOnboardingFlowManager.EntryMode(uint64_t a1)
{
  return sub_1BC0E5428(a1, qword_1EF401DC0);
}

uint64_t sub_1BC29B734()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];

  v0 = sub_1BC2B24A4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MedicationOnboardingFlowManager(0);
  sub_1BC2B3ED8();
  if (v11[1])
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37F0]), sel_init);
    sub_1BC2B2468();
    v5 = (void *)sub_1BC2B245C();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    objc_msgSend(v4, sel_setLocale_, v5);

    v6 = (void *)sub_1BC2B4430();
    v7 = objc_msgSend(v4, sel_numberFromString_, v6);

    if (v7)
    {
      objc_msgSend(v7, sel_doubleValue);
      v9 = v8;
      swift_bridgeObjectRelease();

      return v9;
    }
    swift_bridgeObjectRelease();
  }
  return 0;
}

void MedicationOnboardingFlowManager.currentMedicationUDC.getter()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v1 = v0;
  v9 = sub_1BC2B3608();
  MEMORY[0x1E0C80A78](v9);
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0ECC0, v2);
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for MedicationOnboardingFlowManager.EntryMode(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(swift_allocObject() + 16) = 0;
  sub_1BC0FC574(v1, (uint64_t)v6, type metadata accessor for MedicationOnboardingFlowManager.EntryMode);
  v7 = (char *)&loc_1BC29B9C0 + dword_1BC29BC64[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

id sub_1BC29B9D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;

  *(_QWORD *)(v5 - 128) = v3;
  sub_1BC0E8594(v1, type metadata accessor for MedicationOnboardingFlowManager.EntryMode);
  type metadata accessor for MedicationOnboardingFlowManager(0);
  sub_1BC2B3ED8();
  v6 = *(void **)(v5 - 112);
  if (v6)
  {
    v7 = (void *)objc_opt_self();
    v8 = objc_msgSend(v6, sel_identifier);
    *(_QWORD *)(v5 - 136) = objc_msgSend(v7, sel_appleOntologyCodingWithIdentifier_, v8);

    sub_1BC2B3ED8();
    v9 = *(_QWORD *)(v5 - 104);
    *(_QWORD *)(v5 - 152) = v4;
    if (v9 == 1)
    {
      *(_QWORD *)(v5 - 144) = 0;
      v9 = 0;
    }
    else
    {
      v11 = *(_QWORD *)(v5 - 112);
      swift_bridgeObjectRetain();
      *(_QWORD *)(v5 - 144) = v11;
      sub_1BC1E1930(v11, v9);
    }
    sub_1BC2B3ED8();
    v12 = *(_QWORD *)(v5 - 104);
    if (v12 == 1)
    {
      v13 = 0;
      v14 = 0;
    }
    else
    {
      v15 = *(_QWORD *)(v5 - 96);
      v14 = *(_QWORD *)(v5 - 88);
      v16 = *(_QWORD *)(v5 - 112);
      swift_bridgeObjectRetain();
      v17 = v16;
      v13 = v15;
      sub_1BC1E1930(v17, v12);
    }
    sub_1BC2B3ED8();
    v18 = *(_QWORD *)(v5 - 128);
    if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(v18 + 48))(v2, 1, *(_QWORD *)(v5 - 120)))
    {
      sub_1BC0E1CFC(v2, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
      v19 = 0;
      v20 = 0;
    }
    else
    {
      v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
      v22 = *(_QWORD *)(v5 - 152);
      *(_QWORD *)(v5 - 160) = v13;
      v23 = *(_QWORD *)(v5 - 120);
      v21(v22, v2, v23);
      sub_1BC0E1CFC(v2, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
      v19 = sub_1BC2B35C0();
      v20 = v24;
      v25 = v23;
      v13 = *(_QWORD *)(v5 - 160);
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v22, v25);
    }
    v26 = objc_allocWithZone(MEMORY[0x1E0D2C4D8]);
    v10 = sub_1BC2A2204(*(void **)(v5 - 136), *(_QWORD *)(v5 - 144), v9, v13, v14, v19, v20, 0);
    swift_release();

  }
  else
  {
    v10 = sub_1BC29BC74(v0);
    swift_release();
  }
  return v10;
}

id sub_1BC29BC74(uint64_t a1)
{
  void *v1;
  void **v2;
  id v3;
  void *v4;
  void *v5;
  id v6;

  v2 = (void **)(a1 + 16);
  v1 = *(void **)(a1 + 16);
  if (v1)
  {
    v3 = *(id *)(a1 + 16);
  }
  else
  {
    v4 = (void *)sub_1BC29BCF0();
    swift_beginAccess();
    v5 = *v2;
    *v2 = v4;
    v3 = v4;

    v1 = 0;
  }
  v6 = v1;
  return v3;
}

uint64_t sub_1BC29BCF0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  void *v10;
  uint64_t v11;
  char v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  void *v30;
  id v31;
  uint64_t v32;
  id v33;
  id v34;
  uint64_t result;
  char *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v43 = sub_1BC2B3608();
  v0 = *(_QWORD *)(v43 - 8);
  MEMORY[0x1E0C80A78](v43);
  v2 = (char *)&v36 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0ECC0, v3);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v36 - v5;
  sub_1BC0E1C64(0, &qword_1EF3FB840, (void (*)(uint64_t))type metadata accessor for FormStepResult);
  MEMORY[0x1E0C80A78](v7);
  v9 = (uint64_t *)((char *)&v36 - v8);
  type metadata accessor for MedicationOnboardingFlowManager(0);
  sub_1BC2B3ED8();
  v10 = v44;
  v42 = v0;
  if (v44)
  {
    v11 = sub_1BC29B734();
    if ((v12 & 1) == 0)
    {
      v13 = objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v10, *(double *)&v11);

      goto LABEL_6;
    }

  }
  v13 = 0;
LABEL_6:
  sub_1BC2B3ED8();
  if (!v45)
  {

LABEL_22:
    result = sub_1BC2B52B8();
    __break(1u);
    return result;
  }
  v14 = v44;
  sub_1BC2B3ED8();
  v15 = type metadata accessor for FormStepResult();
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v9, 1, v15) == 1)
  {

    sub_1BC0E1CFC((uint64_t)v9, &qword_1EF3FB840, (void (*)(uint64_t))type metadata accessor for FormStepResult);
    goto LABEL_22;
  }
  v36 = v2;
  if (swift_getEnumCaseMultiPayload() != 1)
  {

    sub_1BC0E8594((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormStepResult);
    goto LABEL_22;
  }
  v39 = *v9;
  sub_1BC2B3ED8();
  v16 = v45;
  v41 = v14;
  if (v45 == 1)
  {
    v40 = 0;
    v16 = 0;
  }
  else
  {
    v17 = (uint64_t)v44;
    swift_bridgeObjectRetain();
    v40 = v17;
    sub_1BC1E1930(v17, v16);
  }
  sub_1BC2B3ED8();
  v18 = v45;
  v37 = v13;
  if (v45 == 1)
  {
    v38 = 0;
    v19 = 0;
  }
  else
  {
    v20 = v46;
    v19 = v47;
    v21 = (uint64_t)v44;
    swift_bridgeObjectRetain();
    v38 = v20;
    sub_1BC1E1930(v21, v18);
  }
  sub_1BC2B3ED8();
  v22 = v42;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v6, 1, v43))
  {
    sub_1BC0E1CFC((uint64_t)v6, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
    v23 = 0;
    v24 = 0;
  }
  else
  {
    v25 = v36;
    v26 = v43;
    (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v36, v6, v43);
    sub_1BC0E1CFC((uint64_t)v6, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
    v23 = sub_1BC2B35C0();
    v24 = v27;
    (*(void (**)(char *, uint64_t))(v22 + 8))(v25, v26);
  }
  v28 = (void *)objc_opt_self();
  v29 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  v30 = v37;
  v31 = objc_msgSend(v28, sel_userDomainConceptPropertyListWithFreeTextMedicationName_freeTextFormCode_freeTextStrengthQuantity_, v29, v39, v37);

  sub_1BC0E1D38(0, (unint64_t *)&qword_1EF3F8A00);
  v32 = sub_1BC2B458C();

  v33 = objc_allocWithZone(MEMORY[0x1E0D2C4D8]);
  v34 = sub_1BC2A2204(0, v40, v16, v38, v19, v23, v24, v32);

  return (uint64_t)v34;
}

uint64_t static MedicationOnboardingFlowManager.makeInitialOnboardingViewController(manualEntryText:analyticsContext:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  void *v12;
  uint64_t v13;
  id v14;
  char *v15;
  UIViewController_optional *v16;
  char *v17;
  uint64_t result;
  _BYTE v19[15];
  unsigned __int8 v20;

  v6 = type metadata accessor for MedicationOnboardingFlowManager.EntryMode(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for MedicationOnboardingFlowManager(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = &v19[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BC2B3278();
  swift_retain();
  sub_1BC2B326C();
  sub_1BC2B3248();
  swift_release();
  sub_1BC2B3638();
  swift_allocObject();
  sub_1BC2B362C();
  sub_1BC2B36D4();
  sub_1BC2B36C8();
  if (objc_msgSend((id)objc_opt_self(), sel_supportsOntologyBackedMedications))
  {
    sub_1BC2B326C();
    v12 = (void *)sub_1BC2B3248();
    swift_release();
    sub_1BC2B326C();
    v13 = sub_1BC2B3254();
    swift_release();
    v14 = objc_allocWithZone((Class)type metadata accessor for NewMedicationOnboardingViewController());
    swift_retain();
    v15 = NewMedicationOnboardingViewController.init(healthStore:listManager:analyticsContext:)(v12, v13, a3);
LABEL_4:
    swift_release();
    return (uint64_t)v15;
  }
  *v8 = a1;
  v8[1] = a2;
  swift_storeEnumTagMultiPayload();
  v20 = 64;
  swift_bridgeObjectRetain();
  swift_retain();
  MedicationOnboardingFlowManager.init(entryMode:currentStep:didShowLifeStyleFactors:analyticsContext:analyticsEntryMode:)((uint64_t)v8, &v20, 0, a3, 1, (uint64_t)v11);
  MedicationOnboardingFlowManager.makeNextViewControllerForStep()(v16);
  v15 = v17;
  result = sub_1BC0E8594((uint64_t)v11, type metadata accessor for MedicationOnboardingFlowManager);
  if (v15)
    goto LABEL_4;
  __break(1u);
  return result;
}

void sub_1BC29C424(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  char *v21;
  int v22;
  char v23;
  uint64_t v24;
  _QWORD v25[13];

  v25[12] = a2;
  sub_1BC0E1C64(0, &qword_1EF400C68, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  MEMORY[0x1E0C80A78](v3);
  v25[3] = (char *)v25 - v4;
  v5 = sub_1BC2B2438();
  v25[7] = *(_QWORD *)(v5 - 8);
  v25[8] = v5;
  MEMORY[0x1E0C80A78](v5);
  v25[6] = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BC2B3530();
  v25[4] = *(_QWORD *)(v7 - 8);
  v25[5] = v7;
  MEMORY[0x1E0C80A78](v7);
  v25[1] = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E1C64(0, &qword_1EF3FDF08, v9);
  v11 = MEMORY[0x1E0C80A78](v10);
  MEMORY[0x1E0C80A78](v11);
  v25[9] = (char *)v25 - v12;
  sub_1BC0E1C64(0, &qword_1EF3FB840, (void (*)(uint64_t))type metadata accessor for FormStepResult);
  MEMORY[0x1E0C80A78](v13);
  v25[2] = (char *)v25 - v14;
  v15 = type metadata accessor for MedicationSearchItem(0);
  MEMORY[0x1E0C80A78](v15);
  v25[10] = (char *)v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for MedicationOnboardingFlowManager.EntryMode(0);
  MEMORY[0x1E0C80A78](v17);
  v18 = (void (*)(uint64_t))MEMORY[0x1E0D2C6F0];
  sub_1BC0E1C64(0, &qword_1EF3F8958, (void (*)(uint64_t))MEMORY[0x1E0D2C6F0]);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)v25 - v20;
  v22 = *a1;
  v23 = sub_1BC29B398();
  v25[11] = type metadata accessor for MedicationOnboardingFlowManager(0);
  sub_1BC2B3ED8();
  v24 = sub_1BC2B3350();
  LOBYTE(a1) = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v21, 1, v24) == 1;
  sub_1BC0E1CFC((uint64_t)v21, &qword_1EF3F8958, v18);
  if (*((_QWORD *)_s19HealthMedicationsUI17SpecificationStepO10finalSteps16shouldDisplayDDI17skipVisualizationSayACGSb_SbtFZ_0(v23 & 1, (char)a1)+ 2))
    __asm { BR              X12 }
  __break(1u);
  JUMPOUT(0x1BC29CB80);
}

uint64_t sub_1BC29CBE4@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  unsigned int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  char *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v3 = v2;
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
  MEMORY[0x1E0C80A78](v6);
  v33 = (char *)&v32 - v7;
  sub_1BC0E1C64(0, &qword_1EF3F8958, (void (*)(uint64_t))MEMORY[0x1E0D2C6F0]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v32 - v9;
  sub_1BC0E1C64(0, &qword_1EF400C68, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v32 - v12;
  sub_1BC0E1C64(0, &qword_1EF3FB840, (void (*)(uint64_t))type metadata accessor for FormStepResult);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v32 - v15;
  v17 = type metadata accessor for MedicationOnboardingFlowManager.EntryMode(0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *a1;
  if (v20 > 0x9F)
    v21 = 1;
  else
    v21 = *(unsigned __int8 *)(v3 + *(int *)(type metadata accessor for MedicationOnboardingFlowManager(0) + 32));
  sub_1BC0FC574(v3, (uint64_t)v19, type metadata accessor for MedicationOnboardingFlowManager.EntryMode);
  LOBYTE(v38) = v20;
  v22 = type metadata accessor for MedicationOnboardingFlowManager(0);
  v23 = *(_QWORD *)(v3 + *(int *)(v22 + 20));
  v24 = *(_QWORD *)(v3 + *(int *)(v22 + 24));
  swift_retain();
  MedicationOnboardingFlowManager.init(entryMode:currentStep:didShowLifeStyleFactors:analyticsContext:analyticsEntryMode:)((uint64_t)v19, (unsigned __int8 *)&v38, v21, v23, v24, a2);
  swift_retain();
  sub_1BC2B3ED8();
  v34 = v38;
  v35 = v39;
  sub_1BC2B3EC0();
  swift_release();
  swift_bridgeObjectRelease();
  swift_retain();
  sub_1BC2B3ED8();
  sub_1BC2B3EC0();
  swift_release();
  sub_1BC0E1CFC((uint64_t)v16, &qword_1EF3FB840, (void (*)(uint64_t))type metadata accessor for FormStepResult);
  swift_retain();
  sub_1BC2B3ED8();
  v34 = v38;
  v35 = v39;
  sub_1BC2B3EC0();
  swift_release();
  swift_bridgeObjectRelease();
  swift_retain();
  sub_1BC2B3ED8();
  v25 = v38;
  v34 = v38;
  sub_1BC2B3EC0();
  swift_release();

  swift_retain();
  sub_1BC2B3ED8();
  v26 = v38;
  v34 = v38;
  sub_1BC2B3EC0();
  swift_release();

  swift_retain();
  sub_1BC2B3ED8();
  sub_1BC2B3EC0();
  swift_release();
  sub_1BC0E1CFC((uint64_t)v13, &qword_1EF400C68, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  swift_retain();
  sub_1BC2B3ED8();
  v27 = v38;
  v34 = v38;
  sub_1BC2B3EC0();
  swift_release();

  swift_retain();
  sub_1BC2B3ED8();
  sub_1BC2B3EC0();
  swift_release();
  sub_1BC0E1CFC((uint64_t)v10, &qword_1EF3F8958, (void (*)(uint64_t))MEMORY[0x1E0D2C6F0]);
  swift_retain();
  v28 = (uint64_t)v33;
  sub_1BC2B3ED8();
  sub_1BC2B3EC0();
  swift_release();
  sub_1BC0E1CFC(v28, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
  swift_retain();
  sub_1BC2B3ED8();
  v29 = (uint64_t)v38;
  v30 = v39;
  v34 = v38;
  v35 = v39;
  v36 = v40;
  v37 = v41;
  sub_1BC2B3EC0();
  swift_release();
  sub_1BC1E1930(v29, v30);
  swift_retain();
  sub_1BC2B3ED8();
  LOBYTE(v34) = (_BYTE)v38;
  sub_1BC2B3EC0();
  return swift_release();
}

id sub_1BC29D0C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  _QWORD v14[4];

  sub_1BC0E1C64(0, (unint64_t *)&qword_1EF3F8980, (void (*)(uint64_t))type metadata accessor for MedicationSearchItem);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v14 - v3;
  type metadata accessor for MedicationOnboardingFlowManager(0);
  v5 = sub_1BC2B3254();
  sub_1BC2B3ED8();
  v6 = v14[2];
  v7 = v14[3];
  objc_allocWithZone((Class)type metadata accessor for ManualNameStepViewController());
  v14[0] = v6;
  v14[1] = v7;
  sub_1BC26465C(0, (unint64_t *)&qword_1EF3F93F8, (unint64_t *)&qword_1EF3FB1D0, MEMORY[0x1E0DEA968]);
  swift_allocObject();
  v8 = sub_1BC2B3EF0();
  type metadata accessor for ManualNameDataSource();
  swift_allocObject();
  v9 = sub_1BC195798(v8);
  v10 = type metadata accessor for MedicationSearchItem(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v4, 1, 1, v10);
  v11 = (void *)sub_1BC2A2C74((uint64_t)v4, v9, v5, &qword_1EF401E60, (uint64_t (*)(uint64_t))type metadata accessor for ManualNameDataSource, (uint64_t)&off_1EF3FCB48, &qword_1EF3FCAE0);
  swift_release();
  swift_release();
  v12 = sub_1BC2A0264(65, a1, v11);

  return v12;
}

void sub_1BC29D27C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  char *v27;
  _QWORD v28[6];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v30 = a1;
  v2 = type metadata accessor for MedicationSearchItem(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v28[3] = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v28[5] = (char *)v28 - v6;
  v31 = type metadata accessor for MedicationOnboardingFlowManager.EntryMode(0);
  MEMORY[0x1E0C80A78](v31);
  v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EF3F8980, (void (*)(uint64_t))type metadata accessor for MedicationSearchItem);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v28 - v10;
  sub_1BC0E1C64(0, &qword_1EF3FB840, (void (*)(uint64_t))type metadata accessor for FormStepResult);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)v28 - v16;
  v18 = type metadata accessor for MedicationOnboardingFlowManager(0);
  v19 = *(int *)(v18 + 80);
  v29 = v1;
  v28[2] = v19;
  v20 = sub_1BC2B3254();
  v28[4] = v18;
  v28[1] = *(int *)(v18 + 48);
  sub_1BC2B3ED8();
  objc_allocWithZone((Class)type metadata accessor for ManualFormStepViewController(0));
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
  v21(v11, 1, 1, v2);
  sub_1BC0E1CB0((uint64_t)v17, (uint64_t)v15, &qword_1EF3FB840, (void (*)(uint64_t))type metadata accessor for FormStepResult);
  sub_1BC2A2DD0(0, (unint64_t *)&qword_1EF3FB848, &qword_1EF3FB840, (void (*)(uint64_t))type metadata accessor for FormStepResult);
  swift_allocObject();
  v22 = sub_1BC2B3EF0();
  type metadata accessor for ManaulFormsDataSource();
  swift_allocObject();
  v23 = sub_1BC230FB0((uint64_t)v11, v22);
  swift_release();
  v21(v11, 1, 1, v2);
  v24 = v30;
  v25 = (void *)sub_1BC2A29F0((uint64_t)v11, (uint64_t)v23, v20, sub_1BC2A5EE4);
  swift_release();
  v26 = v29;
  swift_release();
  sub_1BC0E1CFC((uint64_t)v17, &qword_1EF3FB840, (void (*)(uint64_t))type metadata accessor for FormStepResult);
  sub_1BC2A052C(1, v24, v25);
  sub_1BC0FC574(v26, (uint64_t)v8, type metadata accessor for MedicationOnboardingFlowManager.EntryMode);
  v27 = (char *)sub_1BC29D580 + 4 * byte_1BC2C6604[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

id sub_1BC29D580()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;

  v6 = v2;
  v7 = *(_QWORD *)(v5 - 120);
  sub_1BC0F1B94(v6, v7, type metadata accessor for MedicationSearchItem);
  sub_1BC2B3ED8();
  if (*(_BYTE *)(v5 - 81) == 1)
  {
    sub_1BC0E8594(v7, type metadata accessor for MedicationSearchItem);

  }
  else
  {
    v8 = *(_QWORD *)(v5 - 136);
    sub_1BC0FC574(v7, v8, type metadata accessor for MedicationSearchItem);
    v9 = sub_1BC2B3254();
    sub_1BC2B3ED8();
    v10 = (void *)sub_1BC16E940(v8, v9, v3);
    v11 = sub_1BC2A07D4(0, v4, v10);

    sub_1BC0E8594(v7, type metadata accessor for MedicationSearchItem);
    return v11;
  }
  return v0;
}

uint64_t sub_1BC29D6EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  char *v36;
  _QWORD v37[6];
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;

  v44 = a1;
  v2 = sub_1BC2B39E0();
  v42 = *(_QWORD *)(v2 - 8);
  v43 = v2;
  MEMORY[0x1E0C80A78](v2);
  v45 = (char *)v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BC2B3530();
  v40 = *(_QWORD *)(v4 - 8);
  v41 = v4;
  v5 = MEMORY[0x1E0C80A78](v4);
  v37[2] = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v39 = (char *)v37 - v7;
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EF3F8980, (void (*)(uint64_t))type metadata accessor for MedicationSearchItem);
  MEMORY[0x1E0C80A78](v8);
  v37[5] = (char *)v37 - v9;
  v10 = type metadata accessor for MedicationSearchItem(0);
  v37[3] = *(_QWORD *)(v10 - 8);
  v37[4] = v10;
  v11 = MEMORY[0x1E0C80A78](v10);
  v37[1] = (char *)v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v37 - v13;
  v38 = type metadata accessor for MedicationOnboardingFlowManager.EntryMode(0);
  MEMORY[0x1E0C80A78](v38);
  v16 = (char *)v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E1C64(0, &qword_1EF3FB840, (void (*)(uint64_t))type metadata accessor for FormStepResult);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v37 - v18;
  v20 = type metadata accessor for FormStepResult();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = MEMORY[0x1E0C80A78](v20);
  v24 = (char *)v37 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v26 = (char *)v37 - v25;
  v27 = type metadata accessor for MedicationOnboardingFlowManager(0);
  sub_1BC2B3ED8();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) != 1)
  {
    v42 = v27;
    v43 = v20;
    v45 = v24;
    v37[0] = v14;
    sub_1BC0F1B94((uint64_t)v19, (uint64_t)v26, (uint64_t (*)(_QWORD))type metadata accessor for FormStepResult);
    sub_1BC0FC574(v1, (uint64_t)v16, type metadata accessor for MedicationOnboardingFlowManager.EntryMode);
    v36 = (char *)sub_1BC29DB1C + 4 * byte_1BC2C6608[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v29 = v42;
  v28 = v43;
  sub_1BC0E1CFC((uint64_t)v19, &qword_1EF3FB840, (void (*)(uint64_t))type metadata accessor for FormStepResult);
  v30 = v45;
  sub_1BC2B39A4();
  v31 = sub_1BC2B39D4();
  v32 = sub_1BC2B48C8();
  if (os_log_type_enabled(v31, v32))
  {
    v33 = (uint8_t *)swift_slowAlloc();
    v34 = swift_slowAlloc();
    v47 = v34;
    *(_DWORD *)v33 = 136315138;
    v46 = sub_1BC12540C(0xD00000000000001FLL, 0x80000001BC2C6670, &v47);
    sub_1BC2B4FD0();
    _os_log_impl(&dword_1BC0DC000, v31, v32, "[%s] Failed to create strength view controller, route form is nil!", v33, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v34, -1, -1);
    MEMORY[0x1BCCEF3A0](v33, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v29 + 8))(v30, v28);
  return 0;
}

void sub_1BC29DB1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;

  sub_1BC0E8594(v0, type metadata accessor for MedicationOnboardingFlowManager.EntryMode);
  sub_1BC29B5E0();
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v7 - 184) + 48))(v4, 1, *(_QWORD *)(v7 - 176)) == 1)
  {
    sub_1BC0E8594(v2, (uint64_t (*)(_QWORD))type metadata accessor for FormStepResult);
    sub_1BC0E1CFC(v4, (unint64_t *)&qword_1EF3F8980, (void (*)(uint64_t))type metadata accessor for MedicationSearchItem);
    JUMPOUT(0x1BC29DA80);
  }
  v8 = *(_QWORD *)(v7 - 208);
  sub_1BC0F1B94(v4, v8, type metadata accessor for MedicationSearchItem);
  v9 = *(_QWORD *)(v7 - 104);
  sub_1BC0FC574(v2, v9, (uint64_t (*)(_QWORD))type metadata accessor for FormStepResult);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BC0E8594(v9, (uint64_t (*)(_QWORD))type metadata accessor for FormStepResult);
    sub_1BC2A1D34(v5);
    sub_1BC0E8594(v8, type metadata accessor for MedicationSearchItem);
    sub_1BC0E8594(v2, (uint64_t (*)(_QWORD))type metadata accessor for FormStepResult);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v3, v9, v1);
    v10 = *(_QWORD *)(v7 - 200);
    sub_1BC0FC574(v8, v10, type metadata accessor for MedicationSearchItem);
    *(_QWORD *)(v7 - 120) = sub_1BC2B3254();
    sub_1BC2B3ED8();
    *(_QWORD *)(v7 - 104) = v2;
    v11 = *(void **)(v7 - 88);
    v12 = *(_QWORD *)(v7 - 192);
    v13 = v1;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v12, v3, v1);
    v14 = objc_allocWithZone((Class)type metadata accessor for StrengthStepViewController(0));
    v15 = (void *)sub_1BC128840(v10, *(_QWORD *)(v7 - 120), v11, v12);

    sub_1BC2A0D24(32, v5, v15);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v3, v13);
    sub_1BC0E8594(*(_QWORD *)(v7 - 208), type metadata accessor for MedicationSearchItem);
    sub_1BC0E8594(*(_QWORD *)(v7 - 104), (uint64_t (*)(_QWORD))type metadata accessor for FormStepResult);
  }
  JUMPOUT(0x1BC29DA84);
}

id sub_1BC29DD88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;

  sub_1BC0E1C64(0, (unint64_t *)&qword_1EF3F8980, (void (*)(uint64_t))type metadata accessor for MedicationSearchItem);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v24 - v4;
  v6 = type metadata accessor for MedicationSearchItem(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = type metadata accessor for MedicationOnboardingFlowManager(0);
  v8 = sub_1BC2B3254();
  v9 = *(_QWORD *)(v1 + *(int *)(v7 + 76));
  swift_retain();
  MedicationOnboardingFlowManager.currentMedicationUDC.getter();
  v11 = v10;
  sub_1BC2B3ED8();
  v12 = (void *)v24;
  if ((_QWORD)v24)
  {
    v13 = (void *)sub_1BC2B4F34();

  }
  else
  {
    v13 = 0;
  }
  MedicationOnboardingFlowManager.title.getter();
  if (v15)
    v16 = v14;
  else
    v16 = 0;
  if (v15)
    v17 = v15;
  else
    v17 = 0xE000000000000000;
  v18 = MedicationOnboardingFlowManager.subtitle.getter();
  *(_QWORD *)&v24 = v16;
  *((_QWORD *)&v24 + 1) = v17;
  v25 = v18;
  v26 = v19;
  v20 = objc_allocWithZone((Class)type metadata accessor for ScheduleStepViewController());
  v21 = (void *)sub_1BC267430((uint64_t)v5, v8, v9, v11, v13, &v24);
  swift_release();

  v22 = sub_1BC2A0FCC(96, a1, v21);
  return v22;
}

uint64_t sub_1BC29DF1C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  uint64_t result;
  uint64_t v20;

  sub_1BC0E1C64(0, (unint64_t *)&qword_1EF3F8980, (void (*)(uint64_t))type metadata accessor for MedicationSearchItem);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v20 - v3;
  sub_1BC0E1C64(0, &qword_1EF3F8958, (void (*)(uint64_t))MEMORY[0x1E0D2C6F0]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v20 - v6;
  v8 = sub_1BC2B3350();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v20 - v13;
  type metadata accessor for MedicationOnboardingFlowManager(0);
  sub_1BC2B3ED8();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_1BC0E1CFC((uint64_t)v7, &qword_1EF3F8958, (void (*)(uint64_t))MEMORY[0x1E0D2C6F0]);
    result = sub_1BC2B52B8();
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v7, v8);
    sub_1BC29B5E0();
    v15 = sub_1BC2B3254();
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
    v16 = objc_allocWithZone((Class)type metadata accessor for VisualizationModificationStepViewController());
    v17 = (void *)sub_1BC13ED00((uint64_t)v4, v15, (uint64_t)v12);
    v18 = sub_1BC2A151C(128, a1, v17);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    return (uint64_t)v18;
  }
  return result;
}

id sub_1BC29E174(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  id v23;
  __int128 v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned __int8 v38;
  uint64_t v39;
  unsigned __int8 v40;
  void *v41;
  void *v42;
  _QWORD v43[7];

  v2 = v1;
  v30 = a1;
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EF3F8980, (void (*)(uint64_t))type metadata accessor for MedicationSearchItem);
  v4 = MEMORY[0x1E0C80A78](v3);
  v29 = (uint64_t)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v25 - v6;
  type metadata accessor for MedicationOnboardingFlowManager(0);
  sub_1BC2B3ED8();
  if ((_QWORD)v34)
  {
    v8 = (id)v34;
    sub_1BC2A1FE8(v8, (uint64_t)&v37);
    v9 = v37;
    v10 = v38;
    v11 = v39;
    v12 = v40;
    v14 = v41;
    v13 = v42;

  }
  else
  {
    v9 = 0;
    v10 = 0;
    v11 = 0;
    v12 = 0;
    v14 = 0;
    v13 = 0;
  }
  v43[0] = v9;
  v43[1] = v10;
  v43[2] = v11;
  v43[3] = v12;
  v43[4] = v14;
  v43[5] = v13;
  sub_1BC29B5E0();
  v27 = sub_1BC2B3254();
  sub_1BC1E1A88(v9, v10, v11, v12, v14, v13);
  sub_1BC2B3ED8();
  v25 = v34;
  v28 = v2;
  v15 = v35;
  v16 = v36;
  v26 = objc_allocWithZone((Class)type metadata accessor for NicknameNotesStepViewController());
  v31 = v25;
  v32 = v15;
  v33 = v16;
  sub_1BC26465C(0, (unint64_t *)&qword_1EF400C58, (unint64_t *)&qword_1EF400C60, (uint64_t)&type metadata for MedicationNicknameNotes);
  swift_allocObject();
  v17 = sub_1BC2B3EF0();
  type metadata accessor for NicknameAndNotesDataSource();
  swift_allocObject();
  sub_1BC1E1A88(v9, v10, v11, v12, v14, v13);
  v18 = sub_1BC1E0214(v17, v43);
  v19 = v29;
  sub_1BC0E1CB0((uint64_t)v7, v29, (unint64_t *)&qword_1EF3F8980, (void (*)(uint64_t))type metadata accessor for MedicationSearchItem);
  v20 = (void *)sub_1BC2A2B34(v19, v18, v27, sub_1BC2A69AC, &qword_1EF3FE8D0);
  swift_release();
  swift_release();
  v21 = v13;
  sub_1BC1E1850(v9, v10, v11, v12, v14, v13);
  sub_1BC0E1CFC((uint64_t)v7, (unint64_t *)&qword_1EF3F8980, (void (*)(uint64_t))type metadata accessor for MedicationSearchItem);
  v22 = v20;
  v23 = sub_1BC2A17C4(129, v30, v20);
  sub_1BC1E1850(v9, v10, v11, v12, v14, v21);

  return v23;
}

id sub_1BC29E49C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v13;
  char v14;

  v13 = a1;
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EF3F8980, (void (*)(uint64_t))type metadata accessor for MedicationSearchItem);
  v2 = MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v13 - v5;
  sub_1BC29B5E0();
  type metadata accessor for MedicationOnboardingFlowManager(0);
  v7 = sub_1BC2B3254();
  objc_allocWithZone((Class)type metadata accessor for DDIStepViewController());
  sub_1BC0E1CB0((uint64_t)v6, (uint64_t)v4, (unint64_t *)&qword_1EF3F8980, (void (*)(uint64_t))type metadata accessor for MedicationSearchItem);
  v14 = 1;
  sub_1BC26465C(0, (unint64_t *)&qword_1EF3FE530, (unint64_t *)&qword_1EF3F9040, MEMORY[0x1E0DEAFA0]);
  swift_allocObject();
  v8 = sub_1BC2B3EF0();
  type metadata accessor for DDIOnboardingDataSource();
  swift_allocObject();
  v9 = sub_1BC1D7244((uint64_t)v4, v8);
  swift_release();
  sub_1BC0E1CB0((uint64_t)v6, (uint64_t)v4, (unint64_t *)&qword_1EF3F8980, (void (*)(uint64_t))type metadata accessor for MedicationSearchItem);
  v10 = (void *)sub_1BC2A2C74((uint64_t)v4, v9, v7, &qword_1EF401F98, (uint64_t (*)(uint64_t))type metadata accessor for DDIOnboardingDataSource, (uint64_t)&off_1EF3FE4F0, &qword_1EF3FE488);
  swift_release();
  swift_release();
  sub_1BC0E1CFC((uint64_t)v6, (unint64_t *)&qword_1EF3F8980, (void (*)(uint64_t))type metadata accessor for MedicationSearchItem);
  v11 = sub_1BC2A1A6C(160, v13, v10);

  return v11;
}

uint64_t sub_1BC29E69C@<X0>(unsigned __int8 *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  unsigned int v32;
  uint64_t v33;
  int EnumCaseMultiPayload;
  uint64_t result;
  char *v36;
  _QWORD *v37;
  uint64_t v38;
  _BYTE *v39;
  uint64_t v40;
  unsigned int v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int (*v45)(uint64_t, uint64_t, uint64_t);
  unint64_t *v46;
  void (*v47)(uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  _BYTE *v79;
  char v80;
  uint64_t v81;
  char v82;

  v79 = a2;
  v4 = type metadata accessor for FormStepResult();
  v72 = *(_QWORD *)(v4 - 8);
  v73 = v4;
  MEMORY[0x1E0C80A78](v4);
  v78 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = type metadata accessor for MedicationOnboardingFlowManager(0);
  MEMORY[0x1E0C80A78](v77);
  v76 = (uint64_t)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_1BC2B3530();
  v68 = *(_QWORD *)(v70 - 8);
  MEMORY[0x1E0C80A78](v70);
  v67 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E1C64(0, &qword_1EF3FDF08, v8);
  v10 = MEMORY[0x1E0C80A78](v9);
  v69 = (uint64_t)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v75 = (char *)&v65 - v12;
  sub_1BC0E1C64(0, &qword_1EF3FB840, (void (*)(uint64_t))type metadata accessor for FormStepResult);
  v14 = MEMORY[0x1E0C80A78](v13);
  v71 = (uint64_t)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v74 = (char *)&v65 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v65 - v19;
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v65 - v21;
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EF3F8980, (void (*)(uint64_t))type metadata accessor for MedicationSearchItem);
  v24 = MEMORY[0x1E0C80A78](v23);
  v26 = (char *)&v65 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v28 = (char *)&v65 - v27;
  v29 = type metadata accessor for MedicationOnboardingFlowManager.EntryMode(0);
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v65 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = *a1;
  v33 = v2;
  sub_1BC0FC574(v2, (uint64_t)v31, type metadata accessor for MedicationOnboardingFlowManager.EntryMode);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  result = sub_1BC0E8594((uint64_t)v31, type metadata accessor for MedicationOnboardingFlowManager.EntryMode);
  if (!EnumCaseMultiPayload)
  {
    v36 = v20;
    v65 = v22;
    v66 = v26;
    v37 = v74;
    v38 = (uint64_t)v75;
    v40 = (uint64_t)v78;
    v39 = v79;
    v41 = v32 >> 5;
    if (v32 >> 5)
    {
      v42 = v32;
      if (v41 != 1)
      {
        if (v41 != 2 || v32 != 64)
        {
          *v79 = -2;
          return result;
        }
        v43 = (uint64_t)v28;
        sub_1BC29B5E0();
        v44 = type metadata accessor for MedicationSearchItem(0);
        v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 48);
        if (v45(v43, 1, v44) == 1)
        {
          v46 = (unint64_t *)&qword_1EF3F8980;
          v47 = (void (*)(uint64_t))type metadata accessor for MedicationSearchItem;
          v48 = v43;
        }
        else
        {
          v56 = sub_1BC1C27A4();
          result = sub_1BC0E8594(v43, type metadata accessor for MedicationSearchItem);
          if ((v56 & 1) == 0)
          {
LABEL_31:
            *v39 = 0;
            return result;
          }
          v57 = (uint64_t)v66;
          sub_1BC29B5E0();
          if (v45(v57, 1, v44) == 1)
          {
            sub_1BC0E1CFC(v57, (unint64_t *)&qword_1EF3F8980, (void (*)(uint64_t))type metadata accessor for MedicationSearchItem);
            v58 = (uint64_t)v65;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v72 + 56))(v65, 1, 1, v73);
          }
          else
          {
            sub_1BC1C2B18(v38);
            sub_1BC0E8594(v57, type metadata accessor for MedicationSearchItem);
            v60 = v69;
            sub_1BC0E1CB0(v38, v69, &qword_1EF3FDF08, (void (*)(uint64_t))MEMORY[0x1E0D2C890]);
            v61 = v68;
            v62 = v70;
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v68 + 48))(v60, 1, v70) == 1)
            {
              v58 = (uint64_t)v65;
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v72 + 56))(v65, 1, 1, v73);
            }
            else
            {
              v63 = v67;
              (*(void (**)(char *, uint64_t, uint64_t))(v61 + 32))(v67, v60, v62);
              v58 = (uint64_t)v65;
              (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v65, v63, v62);
              v64 = v73;
              swift_storeEnumTagMultiPayload();
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v72 + 56))(v58, 0, 1, v64);
              (*(void (**)(char *, uint64_t))(v61 + 8))(v63, v62);
            }
            sub_1BC0E1CFC(v38, &qword_1EF3FDF08, (void (*)(uint64_t))MEMORY[0x1E0D2C890]);
          }
          sub_1BC2B3EC0();
          v46 = &qword_1EF3FB840;
          v47 = (void (*)(uint64_t))type metadata accessor for FormStepResult;
          v48 = v58;
        }
        result = sub_1BC0E1CFC(v48, v46, v47);
        goto LABEL_31;
      }
      v50 = v76;
      sub_1BC0FC574(v33, v76, type metadata accessor for MedicationOnboardingFlowManager);
      if ((v42 & 1) != 0)
      {
        result = sub_1BC0E8594(v50, type metadata accessor for MedicationOnboardingFlowManager);
      }
      else
      {
        sub_1BC2B3ED8();
        v51 = v82;
        result = sub_1BC0E8594(v50, type metadata accessor for MedicationOnboardingFlowManager);
        if ((v51 & 1) != 0)
        {
          v52 = (uint64_t)v37;
          sub_1BC29EDE8(v37);
          v53 = v72;
          v54 = v73;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48))(v52, 1, v73) == 1)
          {
            sub_1BC0E1CFC(v52, &qword_1EF3FB840, (void (*)(uint64_t))type metadata accessor for FormStepResult);
            v55 = v71;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 56))(v71, 1, 1, v54);
            sub_1BC2B3EC0();
            result = sub_1BC0E1CFC(v55, &qword_1EF3FB840, (void (*)(uint64_t))type metadata accessor for FormStepResult);
            *v39 = 1;
            return result;
          }
          sub_1BC0F1B94(v52, v40, (uint64_t (*)(_QWORD))type metadata accessor for FormStepResult);
          v81 = 0;
          sub_1BC2B3EC0();
          v59 = v71;
          sub_1BC0FC574(v40, v71, (uint64_t (*)(_QWORD))type metadata accessor for FormStepResult);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v53 + 56))(v59, 0, 1, v54);
          sub_1BC2B3EC0();
          sub_1BC0E1CFC(v59, &qword_1EF3FB840, (void (*)(uint64_t))type metadata accessor for FormStepResult);
          result = sub_1BC0E8594(v40, (uint64_t (*)(_QWORD))type metadata accessor for FormStepResult);
          goto LABEL_24;
        }
      }
      *v39 = 96;
      return result;
    }
    v49 = (uint64_t)v36;
    sub_1BC2B3ED8();
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v72 + 48))(v49, 1, v73);
    if ((_DWORD)result != 1)
    {
      result = swift_getEnumCaseMultiPayload();
      if ((_DWORD)result != 1)
      {
        sub_1BC2B3ED8();
        *v39 = v80 | 0x20;
        return sub_1BC0E8594(v49, (uint64_t (*)(_QWORD))type metadata accessor for FormStepResult);
      }
    }
LABEL_24:
    *v39 = 33;
    return result;
  }
  *v79 = -2;
  return result;
}

uint64_t sub_1BC29EDE8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  sub_1BC0E1C64(0, &qword_1EF3FB840, (void (*)(uint64_t))type metadata accessor for FormStepResult);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v25 - v3;
  v5 = sub_1BC2B3530();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MedicationOnboardingFlowManager(0);
  sub_1BC2B3ED8();
  v9 = type metadata accessor for FormStepResult();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v4, 1, v9) == 1)
  {
    sub_1BC0E1CFC((uint64_t)v4, &qword_1EF3FB840, (void (*)(uint64_t))type metadata accessor for FormStepResult);
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v10 + 56))(a1, 1, 1, v9);
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BC0E8594((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for FormStepResult);
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v10 + 56))(a1, 1, 1, v9);
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  v11 = *(_QWORD *)(sub_1BC2B4C1C() + 16);
  if (!v11)
  {
    swift_bridgeObjectRelease();
LABEL_15:
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v10 + 56))(a1, 1, 1, v9);
  }
  v26 = v6;
  v27 = v5;
  v28 = v10;
  v29 = v9;
  v30 = a1;
  v25 = swift_bridgeObjectRetain();
  v12 = v25 + 48;
  while (1)
  {
    v13 = *(_QWORD *)(v12 - 16);
    v14 = sub_1BC2B4484();
    v16 = v15;
    swift_bridgeObjectRetain();
    sub_1BC2B350C();
    v17 = sub_1BC2B4484();
    v19 = v18;
    swift_bridgeObjectRelease();
    if (v14 == v17 && v16 == v19)
      break;
    v21 = sub_1BC2B53CC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v21 & 1) != 0)
      goto LABEL_19;
    v12 += 24;
    swift_bridgeObjectRelease();
    if (!--v11)
    {
      swift_bridgeObjectRelease_n();
      v9 = v29;
      a1 = v30;
      v5 = v27;
      v10 = v28;
      v6 = v26;
      goto LABEL_15;
    }
  }
  swift_bridgeObjectRelease_n();
LABEL_19:
  swift_bridgeObjectRelease_n();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v8, v27);
  swift_bridgeObjectRelease();
  v24 = v29;
  v23 = v30;
  *v30 = v13;
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v23, 0, 1, v24);
}

uint64_t sub_1BC29F0A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(char *, uint64_t, uint64_t);
  int v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  int v35;
  uint64_t v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  id v53;

  v1 = sub_1BC2B39E0();
  v50 = *(_QWORD *)(v1 - 8);
  v51 = v1;
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0E710, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  v5 = MEMORY[0x1E0C80A78](v4);
  v47 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v48 = (uint64_t)&v44 - v7;
  sub_1BC0E1C64(0, &qword_1EF400C68, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v44 - v9;
  sub_1BC0E1C64(0, &qword_1EF401E08, (void (*)(uint64_t))MEMORY[0x1E0D2CE18]);
  v12 = MEMORY[0x1E0C80A78](v11);
  v49 = (uint64_t)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v44 - v15;
  v17 = MEMORY[0x1E0C80A78](v14);
  v19 = (char *)&v44 - v18;
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v44 - v20;
  sub_1BC2B30C8();
  sub_1BC2B30BC();
  v22 = type metadata accessor for MedicationOnboardingFlowManager(0);
  sub_1BC2B3ED8();
  v52 = v21;
  sub_1BC2B30A4();
  swift_release();
  sub_1BC0E1CFC((uint64_t)v10, &qword_1EF400C68, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  v23 = *(_QWORD *)(v0 + *(int *)(v22 + 20));
  v24 = sub_1BC2B3650();
  if (v24 == 2 || (v25 = v24, v26 = sub_1BC2B3674(), (v27 & 1) != 0) || v26 != 4)
  {
    sub_1BC2B39C8();
    v32 = sub_1BC2B39D4();
    v33 = sub_1BC2B48C8();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v34 = 0;
      _os_log_impl(&dword_1BC0DC000, v32, v33, "Wasn't able to send medication analytics in save because entry point type or suggestionsFromCHR was nil.", v34, 2u);
      MEMORY[0x1BCCEF3A0](v34, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v50 + 8))(v3, v51);
  }
  else
  {
    sub_1BC0E1CB0((uint64_t)v52, (uint64_t)v19, &qword_1EF401E08, (void (*)(uint64_t))MEMORY[0x1E0D2CE18]);
    v28 = sub_1BC2B30F8();
    v29 = *(_QWORD *)(v28 - 8);
    v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 48);
    v31 = v30(v19, 1, v28);
    swift_retain();
    LODWORD(v50) = v31;
    if (v31 == 1)
    {
      sub_1BC0E1CFC((uint64_t)v19, &qword_1EF401E08, (void (*)(uint64_t))MEMORY[0x1E0D2CE18]);
      v45 = 0;
    }
    else
    {
      v45 = sub_1BC2B30E0();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v19, v28);
    }
    sub_1BC0E1CB0((uint64_t)v52, (uint64_t)v16, &qword_1EF401E08, (void (*)(uint64_t))MEMORY[0x1E0D2CE18]);
    v35 = v30(v16, 1, v28);
    v46 = v23;
    if (v35 == 1)
    {
      sub_1BC0E1CFC((uint64_t)v16, &qword_1EF401E08, (void (*)(uint64_t))MEMORY[0x1E0D2CE18]);
    }
    else
    {
      sub_1BC2B30D4();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v28);
    }
    LODWORD(v51) = v25 & 1;
    v36 = v49;
    sub_1BC0E1CB0((uint64_t)v52, v49, &qword_1EF401E08, (void (*)(uint64_t))MEMORY[0x1E0D2CE18]);
    if (v30((char *)v36, 1, v28) == 1)
    {
      sub_1BC0E1CFC(v36, &qword_1EF401E08, (void (*)(uint64_t))MEMORY[0x1E0D2CE18]);
    }
    else
    {
      sub_1BC2B30EC();
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v36, v28);
    }
    sub_1BC2B3248();
    sub_1BC2B3ED8();
    v37 = v53;
    if (v53)
    {
      v38 = objc_msgSend(v53, sel_endDateTime);

      if (v38)
      {
        v39 = (uint64_t)v47;
        sub_1BC2B23A8();

        v40 = sub_1BC2B23F0();
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v39, 0, 1, v40);
      }
      else
      {
        v40 = sub_1BC2B23F0();
        v39 = (uint64_t)v47;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v47, 1, 1, v40);
      }
      v42 = v48;
      sub_1BC141D44(v39, v48);
      sub_1BC2B23F0();
      (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 48))(v42, 1, v40);
    }
    else
    {
      v41 = sub_1BC2B23F0();
      v42 = v48;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v48, 1, 1, v41);
    }
    sub_1BC0E1CFC(v42, (unint64_t *)&qword_1EDA0E710, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    sub_1BC2B3638();
    swift_allocObject();
    sub_1BC2B362C();
    sub_1BC2B36D4();
    sub_1BC2B36C8();
    swift_release();
  }
  return sub_1BC0E1CFC((uint64_t)v52, &qword_1EF401E08, (void (*)(uint64_t))MEMORY[0x1E0D2CE18]);
}

uint64_t sub_1BC29F708(uint64_t result, void *a2, void *a3)
{
  _QWORD *v4;
  id v5;
  id v6;

  if (a3)
  {
    sub_1BC0E8778(0, (unint64_t *)&qword_1EDA0FEA0);
    swift_allocError();
    *v4 = a3;
    v5 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else if (a2)
  {
    **(_QWORD **)(*(_QWORD *)(*(_QWORD *)(result + 32) + 64) + 40) = a2;
    v6 = a2;
    return swift_continuation_throwingResume();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC29F7A4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[18] = a1;
  v2[19] = v1;
  v3 = sub_1BC2B39E0();
  v2[20] = v3;
  v2[21] = *(_QWORD *)(v3 - 8);
  v2[22] = swift_task_alloc();
  v2[23] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BC29F814()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  uint64_t v22;
  id v23;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint8_t *v34;
  void *v35;
  uint64_t v36;
  _QWORD *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;

  type metadata accessor for MedicationOnboardingFlowManager(0);
  sub_1BC2B3ED8();
  v1 = *(id *)(v0 + 120);
  *(_QWORD *)(v0 + 192) = v1;
  if (v1)
  {
    v2 = objc_msgSend(v1, sel_medicationIdentifier);
    if (v2)
    {
      v3 = v2;
      v4 = sub_1BC2B4460();
      v6 = v5;

    }
    else
    {
      v4 = 0;
      v6 = 0;
    }
    v15 = objc_msgSend(*(id *)(v0 + 144), sel_semanticIdentifier);
    v16 = objc_msgSend(v15, sel_stringValue);

    v17 = sub_1BC2B4460();
    v19 = v18;

    if (v6)
    {
      if (v4 == v17 && v6 == v19)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_19:
        v23 = 0;
        goto LABEL_20;
      }
      v21 = sub_1BC2B53CC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v21 & 1) != 0)
        goto LABEL_19;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v22 = *(_QWORD *)(v0 + 144);
    sub_1BC0E1D38(0, &qword_1EDA0FCF8);
    v1 = sub_1BC29FE28(v1, v22);
    v23 = v1;
LABEL_20:
    *(_QWORD *)(v0 + 200) = v1;
    *(_QWORD *)(v0 + 208) = v23;
    v25 = v1;
    sub_1BC2B39A4();
    v26 = sub_1BC2B39D4();
    v27 = sub_1BC2B48B0();
    v28 = os_log_type_enabled(v26, v27);
    v29 = *(_QWORD *)(v0 + 184);
    v31 = *(_QWORD *)(v0 + 160);
    v30 = *(_QWORD *)(v0 + 168);
    if (v28)
    {
      v38 = v25;
      v32 = (uint8_t *)swift_slowAlloc();
      v33 = swift_slowAlloc();
      v40 = v33;
      *(_DWORD *)v32 = 136315138;
      *(_QWORD *)(v0 + 136) = sub_1BC12540C(0xD00000000000001FLL, 0x80000001BC2C6670, &v40);
      sub_1BC2B4FD0();
      _os_log_impl(&dword_1BC0DC000, v26, v27, "[%s] Attempting to save medication schedule", v32, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v33, -1, -1);
      v34 = v32;
      v25 = v38;
      MEMORY[0x1BCCEF3A0](v34, -1, -1);

    }
    else
    {

    }
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v31);
    v35 = (void *)sub_1BC2B3260();
    *(_QWORD *)(v0 + 216) = v35;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_1BC29FCF4;
    v36 = swift_continuation_init();
    *(_QWORD *)(v0 + 80) = MEMORY[0x1E0C809B0];
    v37 = (_QWORD *)(v0 + 80);
    v37[1] = 0x40000000;
    v37[2] = sub_1BC2311D4;
    v37[3] = &block_descriptor_7_1;
    v37[4] = v36;
    objc_msgSend(v35, sel_saveSchedule_completion_, v25, v37);
    return swift_continuation_await();
  }
  sub_1BC2B39A4();
  v7 = sub_1BC2B39D4();
  v8 = sub_1BC2B48C8();
  v9 = os_log_type_enabled(v7, v8);
  v10 = *(_QWORD *)(v0 + 168);
  v11 = *(_QWORD *)(v0 + 176);
  v12 = *(_QWORD *)(v0 + 160);
  if (v9)
  {
    v39 = *(_QWORD *)(v0 + 176);
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v40 = v14;
    *(_DWORD *)v13 = 136315138;
    *(_QWORD *)(v0 + 128) = sub_1BC12540C(0xD00000000000001FLL, 0x80000001BC2C6670, &v40);
    sub_1BC2B4FD0();
    _os_log_impl(&dword_1BC0DC000, v7, v8, "[%s] Unable to save medication schedule. Schedule was nil.", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v14, -1, -1);
    MEMORY[0x1BCCEF3A0](v13, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v39, v12);
  }
  else
  {

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v12);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC29FCF4()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 224) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1BC29FD54()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;

  v1 = *(void **)(v0 + 216);
  v3 = *(void **)(v0 + 192);
  v2 = *(void **)(v0 + 200);

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC29FDB0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v1 = *(void **)(v0 + 216);
  v3 = *(void **)(v0 + 200);
  v2 = *(void **)(v0 + 208);
  v4 = *(void **)(v0 + 192);
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_1BC29FE28(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  void (*v26)(char *, uint64_t);
  id v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  id v35;
  void *v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v3 = v2;
  v6 = sub_1BC2B39E0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v43 - v11;
  sub_1BC2B39A4();
  v13 = a1;
  v14 = sub_1BC2B39D4();
  v15 = sub_1BC2B48B0();
  v16 = os_log_type_enabled(v14, v15);
  v47 = v10;
  v48 = v6;
  v46 = v3;
  if (v16)
  {
    v44 = v7;
    v45 = a2;
    v17 = swift_slowAlloc();
    v18 = swift_slowAlloc();
    v50 = v18;
    *(_DWORD *)v17 = 136315394;
    v19 = sub_1BC2B54F8();
    v49 = sub_1BC12540C(v19, v20, &v50);
    sub_1BC2B4FD0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2080;
    v21 = objc_msgSend(v13, sel_medicationIdentifier);
    if (v21)
    {
      v22 = v21;
      v23 = sub_1BC2B4460();
      v25 = v24;

    }
    else
    {
      v23 = 0;
      v25 = 0xE000000000000000;
    }
    v49 = sub_1BC12540C(v23, v25, &v50);
    sub_1BC2B4FD0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC0DC000, v14, v15, "[%s] Attempting to create new schedule. Old schedule medication identifier = %s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v18, -1, -1);
    MEMORY[0x1BCCEF3A0](v17, -1, -1);

    v26 = *(void (**)(char *, uint64_t))(v44 + 8);
    v6 = v48;
    v26(v12, v48);
    v10 = v47;
    a2 = v45;
  }
  else
  {

    v26 = *(void (**)(char *, uint64_t))(v7 + 8);
    v26(v12, v6);
  }
  v27 = objc_msgSend(v13, sel_copyScheduleForMedication_, a2);
  sub_1BC2B39A4();
  v28 = v27;
  v29 = sub_1BC2B39D4();
  v30 = sub_1BC2B48B0();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = swift_slowAlloc();
    v32 = swift_slowAlloc();
    v50 = v32;
    *(_DWORD *)v31 = 136315394;
    v33 = sub_1BC2B54F8();
    v49 = sub_1BC12540C(v33, v34, &v50);
    sub_1BC2B4FD0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 12) = 2080;
    v35 = objc_msgSend(v28, sel_medicationIdentifier);
    if (v35)
    {
      v36 = v35;
      v37 = sub_1BC2B4460();
      v39 = v38;

    }
    else
    {
      v37 = 0;
      v39 = 0xE000000000000000;
    }
    v49 = sub_1BC12540C(v37, v39, &v50);
    sub_1BC2B4FD0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC0DC000, v29, v30, "[%s] Created new schedule with medication identifier = %s", (uint8_t *)v31, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v32, -1, -1);
    MEMORY[0x1BCCEF3A0](v31, -1, -1);

    v40 = v47;
    v41 = v48;
  }
  else
  {

    v40 = v10;
    v41 = v6;
  }
  v26(v40, v41);
  return v28;
}

id sub_1BC2A0264(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  Class v28;
  id v29;
  id v30;
  uint64_t v32;
  int v33;
  id v34;
  char v35;
  char v36;

  v4 = v3;
  v34 = a3;
  v7 = a1;
  v8 = type metadata accessor for MedicationOnboardingFlowManager(0);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v32 - v12;
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v32 - v15;
  v33 = sub_1BC23E0B4(a1, (uint64_t)&unk_1E74AFA10);
  if (v7 == 128 || (a1 & 0xE0) != 0x80)
  {
    v36 = a1;
    SpecificationStep.headerImage.getter();
    v17 = v20;
    v32 = 0;
    v19 = 0;
  }
  else
  {
    sub_1BC2B3ED8();
    v17 = (void *)sub_1BC11C0F4(80.0, 80.0, 1, (uint64_t)v16);
    sub_1BC0E1CFC((uint64_t)v16, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
    v32 = MedicationOnboardingFlowManager.subtitle.getter();
    v19 = v18;
  }
  sub_1BC0FC574(a2, (uint64_t)v13, type metadata accessor for MedicationOnboardingFlowManager);
  v35 = a1;
  SpecificationStep.title.getter();
  v22 = v21;
  v24 = v23;
  sub_1BC0FC574(v4, (uint64_t)v11, type metadata accessor for MedicationOnboardingFlowManager);
  if (v24)
  {
    sub_1BC0E8594((uint64_t)v11, type metadata accessor for MedicationOnboardingFlowManager);
  }
  else
  {
    MedicationOnboardingFlowManager.title.getter();
    v22 = v25;
    v24 = v26;
    sub_1BC0E8594((uint64_t)v11, type metadata accessor for MedicationOnboardingFlowManager);
    if (!v24)
    {
      v22 = 0;
      v24 = 0xE000000000000000;
    }
  }
  v27 = *(_QWORD *)(v4 + *(int *)(v8 + 20));
  sub_1BC2A6B8C(0, &qword_1EF401E18, (uint64_t (*)(uint64_t))type metadata accessor for ManualNameDataSource, (uint64_t)&off_1EF3FCB48, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for OnboardingStepViewController);
  objc_allocWithZone(v28);
  swift_retain();
  v29 = v34;
  v30 = sub_1BC2A5880(v29, (uint64_t)v13, v22, v24, v32, v19, v17, (v33 & 1) == 0, v27, (void (*)(uint64_t))sub_1BC28F074, (uint64_t)&unk_1E74BBAA8, (uint64_t)sub_1BC2A5770, (void (*)(uint64_t))sub_1BC293B18);

  swift_release();
  return v30;
}

id sub_1BC2A052C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  Class v28;
  id v29;
  id v30;
  uint64_t v32;
  int v33;
  id v34;
  char v35;
  char v36;

  v4 = v3;
  v34 = a3;
  v32 = a2;
  v6 = a1;
  v7 = type metadata accessor for MedicationOnboardingFlowManager(0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v32 - v11;
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v32 - v14;
  v33 = sub_1BC23E0B4(a1, (uint64_t)&unk_1E74AFAA0);
  if (v6 == 128 || (a1 & 0xE0) != 0x80)
  {
    v36 = a1;
    SpecificationStep.headerImage.getter();
    v16 = v20;
    v17 = 0;
    v19 = 0;
  }
  else
  {
    sub_1BC2B3ED8();
    v16 = (void *)sub_1BC11C0F4(80.0, 80.0, 1, (uint64_t)v15);
    sub_1BC0E1CFC((uint64_t)v15, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
    v17 = MedicationOnboardingFlowManager.subtitle.getter();
    v19 = v18;
  }
  sub_1BC0FC574(v32, (uint64_t)v12, type metadata accessor for MedicationOnboardingFlowManager);
  v35 = a1;
  SpecificationStep.title.getter();
  v22 = v21;
  v24 = v23;
  sub_1BC0FC574(v4, (uint64_t)v10, type metadata accessor for MedicationOnboardingFlowManager);
  if (v24)
  {
    sub_1BC0E8594((uint64_t)v10, type metadata accessor for MedicationOnboardingFlowManager);
  }
  else
  {
    MedicationOnboardingFlowManager.title.getter();
    v22 = v25;
    v24 = v26;
    sub_1BC0E8594((uint64_t)v10, type metadata accessor for MedicationOnboardingFlowManager);
    if (!v24)
    {
      v22 = 0;
      v24 = 0xE000000000000000;
    }
  }
  v27 = *(_QWORD *)(v4 + *(int *)(v7 + 20));
  sub_1BC2A5D9C(0);
  objc_allocWithZone(v28);
  swift_retain();
  v29 = v34;
  v30 = sub_1BC2A5880(v29, (uint64_t)v12, v22, v24, v17, v19, v16, (v33 & 1) == 0, v27, (void (*)(uint64_t))sub_1BC28F7C4, (uint64_t)&unk_1E74BBC38, (uint64_t)sub_1BC2A5770, (void (*)(uint64_t))sub_1BC2940B0);

  swift_release();
  return v30;
}

id sub_1BC2A07D4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  Class v28;
  id v29;
  id v30;
  uint64_t v32;
  int v33;
  id v34;
  char v35;
  char v36;

  v4 = v3;
  v34 = a3;
  v32 = a2;
  v6 = a1;
  v7 = type metadata accessor for MedicationOnboardingFlowManager(0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v32 - v11;
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v32 - v14;
  v33 = sub_1BC23E0B4(a1, (uint64_t)&unk_1E74AFAF0);
  if (v6 == 128 || (a1 & 0xE0) != 0x80)
  {
    v36 = a1;
    SpecificationStep.headerImage.getter();
    v16 = v20;
    v17 = 0;
    v19 = 0;
  }
  else
  {
    sub_1BC2B3ED8();
    v16 = (void *)sub_1BC11C0F4(80.0, 80.0, 1, (uint64_t)v15);
    sub_1BC0E1CFC((uint64_t)v15, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
    v17 = MedicationOnboardingFlowManager.subtitle.getter();
    v19 = v18;
  }
  sub_1BC0FC574(v32, (uint64_t)v12, type metadata accessor for MedicationOnboardingFlowManager);
  v35 = a1;
  SpecificationStep.title.getter();
  v22 = v21;
  v24 = v23;
  sub_1BC0FC574(v4, (uint64_t)v10, type metadata accessor for MedicationOnboardingFlowManager);
  if (v24)
  {
    sub_1BC0E8594((uint64_t)v10, type metadata accessor for MedicationOnboardingFlowManager);
  }
  else
  {
    MedicationOnboardingFlowManager.title.getter();
    v22 = v25;
    v24 = v26;
    sub_1BC0E8594((uint64_t)v10, type metadata accessor for MedicationOnboardingFlowManager);
    if (!v24)
    {
      v22 = 0;
      v24 = 0xE000000000000000;
    }
  }
  v27 = *(_QWORD *)(v4 + *(int *)(v7 + 20));
  sub_1BC2A5BC4(0);
  objc_allocWithZone(v28);
  swift_retain();
  v29 = v34;
  v30 = sub_1BC2A5880(v29, (uint64_t)v12, v22, v24, v17, v19, v16, (v33 & 1) == 0, v27, (void (*)(uint64_t))sub_1BC28F40C, (uint64_t)&unk_1E74BBB70, (uint64_t)sub_1BC2A5770, (void (*)(uint64_t))sub_1BC293DE4);

  swift_release();
  return v30;
}

id sub_1BC2A0A7C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  Class v28;
  id v29;
  id v30;
  uint64_t v32;
  int v33;
  id v34;
  char v35;
  char v36;

  v4 = v3;
  v34 = a3;
  v32 = a2;
  v6 = a1;
  v7 = type metadata accessor for MedicationOnboardingFlowManager(0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v32 - v11;
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v32 - v14;
  v33 = sub_1BC23E0B4(a1, (uint64_t)&unk_1E74AFB90);
  if (v6 == 128 || (a1 & 0xE0) != 0x80)
  {
    v36 = a1;
    SpecificationStep.headerImage.getter();
    v16 = v20;
    v17 = 0;
    v19 = 0;
  }
  else
  {
    sub_1BC2B3ED8();
    v16 = (void *)sub_1BC11C0F4(80.0, 80.0, 1, (uint64_t)v15);
    sub_1BC0E1CFC((uint64_t)v15, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
    v17 = MedicationOnboardingFlowManager.subtitle.getter();
    v19 = v18;
  }
  sub_1BC0FC574(v32, (uint64_t)v12, type metadata accessor for MedicationOnboardingFlowManager);
  v35 = a1;
  SpecificationStep.title.getter();
  v22 = v21;
  v24 = v23;
  sub_1BC0FC574(v4, (uint64_t)v10, type metadata accessor for MedicationOnboardingFlowManager);
  if (v24)
  {
    sub_1BC0E8594((uint64_t)v10, type metadata accessor for MedicationOnboardingFlowManager);
  }
  else
  {
    MedicationOnboardingFlowManager.title.getter();
    v22 = v25;
    v24 = v26;
    sub_1BC0E8594((uint64_t)v10, type metadata accessor for MedicationOnboardingFlowManager);
    if (!v24)
    {
      v22 = 0;
      v24 = 0xE000000000000000;
    }
  }
  v27 = *(_QWORD *)(v4 + *(int *)(v7 + 20));
  sub_1BC2A6148(0);
  objc_allocWithZone(v28);
  swift_retain();
  v29 = v34;
  v30 = sub_1BC2A5880(v29, (uint64_t)v12, v22, v24, v17, v19, v16, (v33 & 1) == 0, v27, (void (*)(uint64_t))sub_1BC28FB7C, (uint64_t)&unk_1E74BBDF0, (uint64_t)sub_1BC2A5770, (void (*)(uint64_t))sub_1BC29437C);

  swift_release();
  return v30;
}

id sub_1BC2A0D24(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  Class v28;
  id v29;
  id v30;
  uint64_t v32;
  int v33;
  id v34;
  char v35;
  char v36;

  v4 = v3;
  v34 = a3;
  v32 = a2;
  v6 = a1;
  v7 = type metadata accessor for MedicationOnboardingFlowManager(0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v32 - v11;
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v32 - v14;
  v33 = sub_1BC23E0B4(a1, (uint64_t)&unk_1E74AFB40);
  if (v6 == 128 || (a1 & 0xE0) != 0x80)
  {
    v36 = a1;
    SpecificationStep.headerImage.getter();
    v16 = v20;
    v17 = 0;
    v19 = 0;
  }
  else
  {
    sub_1BC2B3ED8();
    v16 = (void *)sub_1BC11C0F4(80.0, 80.0, 1, (uint64_t)v15);
    sub_1BC0E1CFC((uint64_t)v15, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
    v17 = MedicationOnboardingFlowManager.subtitle.getter();
    v19 = v18;
  }
  sub_1BC0FC574(v32, (uint64_t)v12, type metadata accessor for MedicationOnboardingFlowManager);
  v35 = a1;
  SpecificationStep.title.getter();
  v22 = v21;
  v24 = v23;
  sub_1BC0FC574(v4, (uint64_t)v10, type metadata accessor for MedicationOnboardingFlowManager);
  if (v24)
  {
    sub_1BC0E8594((uint64_t)v10, type metadata accessor for MedicationOnboardingFlowManager);
  }
  else
  {
    MedicationOnboardingFlowManager.title.getter();
    v22 = v25;
    v24 = v26;
    sub_1BC0E8594((uint64_t)v10, type metadata accessor for MedicationOnboardingFlowManager);
    if (!v24)
    {
      v22 = 0;
      v24 = 0xE000000000000000;
    }
  }
  v27 = *(_QWORD *)(v4 + *(int *)(v7 + 20));
  sub_1BC2A5F5C(0);
  objc_allocWithZone(v28);
  swift_retain();
  v29 = v34;
  v30 = sub_1BC2A5880(v29, (uint64_t)v12, v22, v24, v17, v19, v16, (v33 & 1) == 0, v27, (void (*)(uint64_t))sub_1BC28FF14, (uint64_t)&unk_1E74BBD00, (uint64_t)sub_1BC2A5770, (void (*)(uint64_t))sub_1BC294648);

  swift_release();
  return v30;
}

id sub_1BC2A0FCC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  Class v28;
  id v29;
  id v30;
  uint64_t v32;
  int v33;
  id v34;
  char v35;
  char v36;

  v4 = v3;
  v34 = a3;
  v32 = a2;
  v6 = a1;
  v7 = type metadata accessor for MedicationOnboardingFlowManager(0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v32 - v11;
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v32 - v14;
  v33 = sub_1BC23E0B4(a1, (uint64_t)&unk_1E74AFBE0);
  if (v6 == 128 || (a1 & 0xE0) != 0x80)
  {
    v36 = a1;
    SpecificationStep.headerImage.getter();
    v16 = v20;
    v17 = 0;
    v19 = 0;
  }
  else
  {
    sub_1BC2B3ED8();
    v16 = (void *)sub_1BC11C0F4(80.0, 80.0, 1, (uint64_t)v15);
    sub_1BC0E1CFC((uint64_t)v15, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
    v17 = MedicationOnboardingFlowManager.subtitle.getter();
    v19 = v18;
  }
  sub_1BC0FC574(v32, (uint64_t)v12, type metadata accessor for MedicationOnboardingFlowManager);
  v35 = a1;
  SpecificationStep.title.getter();
  v22 = v21;
  v24 = v23;
  sub_1BC0FC574(v4, (uint64_t)v10, type metadata accessor for MedicationOnboardingFlowManager);
  if (v24)
  {
    sub_1BC0E8594((uint64_t)v10, type metadata accessor for MedicationOnboardingFlowManager);
  }
  else
  {
    MedicationOnboardingFlowManager.title.getter();
    v22 = v25;
    v24 = v26;
    sub_1BC0E8594((uint64_t)v10, type metadata accessor for MedicationOnboardingFlowManager);
    if (!v24)
    {
      v22 = 0;
      v24 = 0xE000000000000000;
    }
  }
  v27 = *(_QWORD *)(v4 + *(int *)(v7 + 20));
  sub_1BC2A635C(0);
  objc_allocWithZone(v28);
  swift_retain();
  v29 = v34;
  v30 = sub_1BC2A5880(v29, (uint64_t)v12, v22, v24, v17, v19, v16, (v33 & 1) == 0, v27, (void (*)(uint64_t))sub_1BC2902AC, (uint64_t)&unk_1E74BBEB8, (uint64_t)sub_1BC2A5770, (void (*)(uint64_t))sub_1BC294914);

  swift_release();
  return v30;
}

id sub_1BC2A1274(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  Class v28;
  id v29;
  id v30;
  uint64_t v32;
  int v33;
  id v34;
  char v35;
  char v36;

  v4 = v3;
  v34 = a3;
  v32 = a2;
  v6 = a1;
  v7 = type metadata accessor for MedicationOnboardingFlowManager(0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v32 - v11;
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v32 - v14;
  v33 = sub_1BC23E0B4(a1, (uint64_t)&unk_1E74AFC30);
  if (v6 == 128 || (a1 & 0xE0) != 0x80)
  {
    v36 = a1;
    SpecificationStep.headerImage.getter();
    v16 = v20;
    v17 = 0;
    v19 = 0;
  }
  else
  {
    sub_1BC2B3ED8();
    v16 = (void *)sub_1BC11C0F4(80.0, 80.0, 1, (uint64_t)v15);
    sub_1BC0E1CFC((uint64_t)v15, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
    v17 = MedicationOnboardingFlowManager.subtitle.getter();
    v19 = v18;
  }
  sub_1BC0FC574(v32, (uint64_t)v12, type metadata accessor for MedicationOnboardingFlowManager);
  v35 = a1;
  SpecificationStep.title.getter();
  v22 = v21;
  v24 = v23;
  sub_1BC0FC574(v4, (uint64_t)v10, type metadata accessor for MedicationOnboardingFlowManager);
  if (v24)
  {
    sub_1BC0E8594((uint64_t)v10, type metadata accessor for MedicationOnboardingFlowManager);
  }
  else
  {
    MedicationOnboardingFlowManager.title.getter();
    v22 = v25;
    v24 = v26;
    sub_1BC0E8594((uint64_t)v10, type metadata accessor for MedicationOnboardingFlowManager);
    if (!v24)
    {
      v22 = 0;
      v24 = 0xE000000000000000;
    }
  }
  v27 = *(_QWORD *)(v4 + *(int *)(v7 + 20));
  sub_1BC2A64B0(0);
  objc_allocWithZone(v28);
  swift_retain();
  v29 = v34;
  v30 = sub_1BC2A5880(v29, (uint64_t)v12, v22, v24, v17, v19, v16, (v33 & 1) == 0, v27, (void (*)(uint64_t))sub_1BC29064C, (uint64_t)&unk_1E74BBF80, (uint64_t)sub_1BC2A5770, (void (*)(uint64_t))sub_1BC294BE0);

  swift_release();
  return v30;
}

id sub_1BC2A151C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  Class v28;
  id v29;
  id v30;
  uint64_t v32;
  int v33;
  id v34;
  char v35;
  char v36;

  v4 = v3;
  v34 = a3;
  v32 = a2;
  v6 = a1;
  v7 = type metadata accessor for MedicationOnboardingFlowManager(0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v32 - v11;
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v32 - v14;
  v33 = sub_1BC23E0B4(a1, (uint64_t)&unk_1E74AFC80);
  if (v6 == 128 || (a1 & 0xE0) != 0x80)
  {
    v36 = a1;
    SpecificationStep.headerImage.getter();
    v16 = v20;
    v17 = 0;
    v19 = 0;
  }
  else
  {
    sub_1BC2B3ED8();
    v16 = (void *)sub_1BC11C0F4(80.0, 80.0, 1, (uint64_t)v15);
    sub_1BC0E1CFC((uint64_t)v15, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
    v17 = MedicationOnboardingFlowManager.subtitle.getter();
    v19 = v18;
  }
  sub_1BC0FC574(v32, (uint64_t)v12, type metadata accessor for MedicationOnboardingFlowManager);
  v35 = a1;
  SpecificationStep.title.getter();
  v22 = v21;
  v24 = v23;
  sub_1BC0FC574(v4, (uint64_t)v10, type metadata accessor for MedicationOnboardingFlowManager);
  if (v24)
  {
    sub_1BC0E8594((uint64_t)v10, type metadata accessor for MedicationOnboardingFlowManager);
  }
  else
  {
    MedicationOnboardingFlowManager.title.getter();
    v22 = v25;
    v24 = v26;
    sub_1BC0E8594((uint64_t)v10, type metadata accessor for MedicationOnboardingFlowManager);
    if (!v24)
    {
      v22 = 0;
      v24 = 0xE000000000000000;
    }
  }
  v27 = *(_QWORD *)(v4 + *(int *)(v7 + 20));
  sub_1BC2A6600(0);
  objc_allocWithZone(v28);
  swift_retain();
  v29 = v34;
  v30 = sub_1BC2A5880(v29, (uint64_t)v12, v22, v24, v17, v19, v16, (v33 & 1) == 0, v27, (void (*)(uint64_t))sub_1BC290A04, (uint64_t)&unk_1E74BC048, (uint64_t)sub_1BC2A5770, (void (*)(uint64_t))sub_1BC294EAC);

  swift_release();
  return v30;
}

id sub_1BC2A17C4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  Class v28;
  id v29;
  id v30;
  uint64_t v32;
  int v33;
  id v34;
  char v35;
  char v36;

  v4 = v3;
  v34 = a3;
  v32 = a2;
  v6 = a1;
  v7 = type metadata accessor for MedicationOnboardingFlowManager(0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v32 - v11;
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v32 - v14;
  v33 = sub_1BC23E0B4(a1, (uint64_t)&unk_1E74AFCD0);
  if (v6 == 128 || (a1 & 0xE0) != 0x80)
  {
    v36 = a1;
    SpecificationStep.headerImage.getter();
    v16 = v20;
    v17 = 0;
    v19 = 0;
  }
  else
  {
    sub_1BC2B3ED8();
    v16 = (void *)sub_1BC11C0F4(80.0, 80.0, 1, (uint64_t)v15);
    sub_1BC0E1CFC((uint64_t)v15, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
    v17 = MedicationOnboardingFlowManager.subtitle.getter();
    v19 = v18;
  }
  sub_1BC0FC574(v32, (uint64_t)v12, type metadata accessor for MedicationOnboardingFlowManager);
  v35 = a1;
  SpecificationStep.title.getter();
  v22 = v21;
  v24 = v23;
  sub_1BC0FC574(v4, (uint64_t)v10, type metadata accessor for MedicationOnboardingFlowManager);
  if (v24)
  {
    sub_1BC0E8594((uint64_t)v10, type metadata accessor for MedicationOnboardingFlowManager);
  }
  else
  {
    MedicationOnboardingFlowManager.title.getter();
    v22 = v25;
    v24 = v26;
    sub_1BC0E8594((uint64_t)v10, type metadata accessor for MedicationOnboardingFlowManager);
    if (!v24)
    {
      v22 = 0;
      v24 = 0xE000000000000000;
    }
  }
  v27 = *(_QWORD *)(v4 + *(int *)(v7 + 20));
  sub_1BC2A6790(0);
  objc_allocWithZone(v28);
  swift_retain();
  v29 = v34;
  v30 = sub_1BC2A5880(v29, (uint64_t)v12, v22, v24, v17, v19, v16, (v33 & 1) == 0, v27, (void (*)(uint64_t))sub_1BC290DBC, (uint64_t)&unk_1E74BC110, (uint64_t)sub_1BC2A5770, (void (*)(uint64_t))sub_1BC295178);

  swift_release();
  return v30;
}

id sub_1BC2A1A6C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  Class v28;
  id v29;
  id v30;
  uint64_t v32;
  int v33;
  id v34;
  char v35;
  char v36;

  v4 = v3;
  v34 = a3;
  v7 = a1;
  v8 = type metadata accessor for MedicationOnboardingFlowManager(0);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v32 - v12;
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v32 - v15;
  v33 = sub_1BC23E0B4(a1, (uint64_t)&unk_1E74AFD58);
  if (v7 == 128 || (a1 & 0xE0) != 0x80)
  {
    v36 = a1;
    SpecificationStep.headerImage.getter();
    v17 = v20;
    v32 = 0;
    v19 = 0;
  }
  else
  {
    sub_1BC2B3ED8();
    v17 = (void *)sub_1BC11C0F4(80.0, 80.0, 1, (uint64_t)v16);
    sub_1BC0E1CFC((uint64_t)v16, (unint64_t *)&qword_1EDA0ECC0, (void (*)(uint64_t))MEMORY[0x1E0D2C950]);
    v32 = MedicationOnboardingFlowManager.subtitle.getter();
    v19 = v18;
  }
  sub_1BC0FC574(a2, (uint64_t)v13, type metadata accessor for MedicationOnboardingFlowManager);
  v35 = a1;
  SpecificationStep.title.getter();
  v22 = v21;
  v24 = v23;
  sub_1BC0FC574(v4, (uint64_t)v11, type metadata accessor for MedicationOnboardingFlowManager);
  if (v24)
  {
    sub_1BC0E8594((uint64_t)v11, type metadata accessor for MedicationOnboardingFlowManager);
  }
  else
  {
    MedicationOnboardingFlowManager.title.getter();
    v22 = v25;
    v24 = v26;
    sub_1BC0E8594((uint64_t)v11, type metadata accessor for MedicationOnboardingFlowManager);
    if (!v24)
    {
      v22 = 0;
      v24 = 0xE000000000000000;
    }
  }
  v27 = *(_QWORD *)(v4 + *(int *)(v8 + 20));
  sub_1BC2A6B8C(0, &qword_1EF401F80, (uint64_t (*)(uint64_t))type metadata accessor for DDIOnboardingDataSource, (uint64_t)&off_1EF3FE4F0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for OnboardingStepViewController);
  objc_allocWithZone(v28);
  swift_retain();
  v29 = v34;
  v30 = sub_1BC2A5880(v29, (uint64_t)v13, v22, v24, v32, v19, v17, (v33 & 1) == 0, v27, (void (*)(uint64_t))sub_1BC291154, (uint64_t)&unk_1E74BC200, (uint64_t)sub_1BC2A5770, (void (*)(uint64_t))sub_1BC295444);

  swift_release();
  return v30;
}

uint64_t sub_1BC2A1D34(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t result;
  _QWORD v17[3];
  char v18;

  sub_1BC0E1C64(0, (unint64_t *)&qword_1EF3F8980, (void (*)(uint64_t))type metadata accessor for MedicationSearchItem);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v17 - v3;
  sub_1BC0E1C64(0, &qword_1EF3FB840, (void (*)(uint64_t))type metadata accessor for FormStepResult);
  MEMORY[0x1E0C80A78](v5);
  v7 = (_QWORD *)((char *)v17 - v6);
  type metadata accessor for MedicationOnboardingFlowManager(0);
  sub_1BC2B3ED8();
  v8 = type metadata accessor for FormStepResult();
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8) == 1)
  {
    sub_1BC0E1CFC((uint64_t)v7, &qword_1EF3FB840, (void (*)(uint64_t))type metadata accessor for FormStepResult);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = *v7;
      v10 = sub_1BC2B3254();
      objc_allocWithZone((Class)type metadata accessor for ManualStrengthStepViewController(0));
      memset(v17, 0, sizeof(v17));
      v18 = -1;
      sub_1BC26465C(0, (unint64_t *)&qword_1EF3FA3B0, (unint64_t *)&qword_1EF3FA3B8, (uint64_t)&type metadata for StrengthStepResult);
      swift_allocObject();
      v11 = sub_1BC2B3EF0();
      type metadata accessor for ManualStrengthDataSource();
      swift_allocObject();
      v12 = sub_1BC1ABAE4(v11, v9);
      v13 = type metadata accessor for MedicationSearchItem(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v4, 1, 1, v13);
      v14 = (void *)sub_1BC2A2B34((uint64_t)v4, v12, v10, sub_1BC2A62E4, &qword_1EF3FD460);
      swift_release();
      swift_release();
      v15 = sub_1BC2A0A7C(33, a1, v14);

      return (uint64_t)v15;
    }
    sub_1BC0E8594((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormStepResult);
  }
  result = sub_1BC2B52B8();
  __break(1u);
  return result;
}

id sub_1BC2A1FE8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  char *v10;
  void (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  BOOL v16;
  int EnumCaseMultiPayload;
  void *v18;
  void *v19;
  uint64_t v20;
  char v21;
  char v22;
  void *v23;
  uint64_t v24;
  id result;
  uint64_t v26;
  void *v27;

  v4 = type metadata accessor for FormStepResult();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)((char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v26 - v9;
  sub_1BC0E1C64(0, &qword_1EF3FB840, v11);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v26 - v13;
  type metadata accessor for MedicationOnboardingFlowManager(0);
  sub_1BC2B3ED8();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v14, 1, v4))
  {
    sub_1BC0E1CFC((uint64_t)v14, &qword_1EF3FB840, (void (*)(uint64_t))type metadata accessor for FormStepResult);
    v15 = 0;
    v16 = 1;
  }
  else
  {
    sub_1BC0FC574((uint64_t)v14, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormStepResult);
    sub_1BC0E1CFC((uint64_t)v14, &qword_1EF3FB840, (void (*)(uint64_t))type metadata accessor for FormStepResult);
    sub_1BC0FC574((uint64_t)v10, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormStepResult);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v16 = EnumCaseMultiPayload != 1;
    if (EnumCaseMultiPayload == 1)
    {
      v15 = *v8;
    }
    else
    {
      sub_1BC0E8594((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormStepResult);
      v15 = 0;
    }
    sub_1BC0E8594((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormStepResult);
  }
  MedicationOnboardingFlowManager.currentMedicationUDC.getter();
  v19 = v18;
  v20 = sub_1BC2B4BBC();
  v22 = v21;

  sub_1BC2B3ED8();
  v23 = v27;
  if (v27)
  {
    v24 = sub_1BC2B4F34();

  }
  else
  {
    v24 = 0;
  }
  result = a1;
  *(_QWORD *)a2 = v15;
  *(_BYTE *)(a2 + 8) = v16;
  *(_QWORD *)(a2 + 16) = v20;
  *(_BYTE *)(a2 + 24) = v22 & 1;
  *(_QWORD *)(a2 + 32) = v24;
  *(_QWORD *)(a2 + 40) = result;
  return result;
}

id sub_1BC2A2204(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void *v8;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;

  if (a3)
  {
    v13 = (void *)sub_1BC2B4430();
    swift_bridgeObjectRelease();
    if (a5)
      goto LABEL_3;
  }
  else
  {
    v13 = 0;
    if (a5)
    {
LABEL_3:
      v14 = (void *)sub_1BC2B4430();
      swift_bridgeObjectRelease();
      if (a7)
        goto LABEL_4;
LABEL_8:
      v15 = 0;
      if (a8)
        goto LABEL_5;
LABEL_9:
      v16 = 0;
      goto LABEL_10;
    }
  }
  v14 = 0;
  if (!a7)
    goto LABEL_8;
LABEL_4:
  v15 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  if (!a8)
    goto LABEL_9;
LABEL_5:
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EF3F8A00);
  v16 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
LABEL_10:
  v17 = objc_msgSend(v8, sel_initWithOntologyCoding_userSpecifiedName_userSpecifiedNotes_medicationVisualizationConfig_freeTextProperties_, a1, v13, v14, v15, v16);

  return v17;
}

void sub_1BC2A2340(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1BCCEF478](v2);
  if (v3)
  {
    v4 = (void *)v3;
    sub_1BC2B2FCC();

  }
}

void _s19HealthMedicationsUI31MedicationOnboardingFlowManagerV9EntryModeO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  _QWORD v20[5];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v4 = sub_1BC2B2438();
  v22 = *(_QWORD *)(v4 - 8);
  v23 = v4;
  v5 = MEMORY[0x1E0C80A78](v4);
  v20[3] = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v20[4] = (char *)v20 - v7;
  v21 = type metadata accessor for MedicationSearchItem(0);
  v8 = MEMORY[0x1E0C80A78](v21);
  v20[2] = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v20[1] = (char *)v20 - v10;
  v11 = type metadata accessor for MedicationOnboardingFlowManager.EntryMode(0);
  v12 = MEMORY[0x1E0C80A78](v11);
  v13 = MEMORY[0x1E0C80A78](v12);
  v14 = MEMORY[0x1E0C80A78](v13);
  MEMORY[0x1E0C80A78](v14);
  sub_1BC2A55E0();
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v20 + *(int *)(v16 + 48) - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0FC574(a1, (uint64_t)v20 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for MedicationOnboardingFlowManager.EntryMode);
  sub_1BC0FC574(a2, (uint64_t)v18, type metadata accessor for MedicationOnboardingFlowManager.EntryMode);
  v19 = (char *)sub_1BC2A2590 + 4 * byte_1BC2C660C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BC2A2590()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  sub_1BC0FC574(v0, v2, type metadata accessor for MedicationOnboardingFlowManager.EntryMode);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_1BC0E8594(v2, type metadata accessor for MedicationSearchItem);
    v4 = 0;
    v5 = (uint64_t (*)(_QWORD))sub_1BC2A55E0;
  }
  else
  {
    v6 = *(_QWORD *)(v3 - 136);
    sub_1BC0F1B94(v1, v6, type metadata accessor for MedicationSearchItem);
    if ((_s19HealthMedicationsUI20MedicationSearchItemV6SourceO2eeoiySbAE_AEtFZ_0(v2, v6) & 1) == 0)
      goto LABEL_12;
    v7 = *(int *)(*(_QWORD *)(v3 - 104) + 20);
    if (*(_QWORD *)(v2 + v7) != *(_QWORD *)(v6 + v7))
      goto LABEL_12;
    v8 = *(int *)(*(_QWORD *)(v3 - 104) + 24);
    v9 = *(_QWORD *)(v2 + v8);
    v10 = *(_QWORD *)(v2 + v8 + 8);
    v11 = (_QWORD *)(v6 + v8);
    if ((v9 != *v11 || v10 != v11[1]) && (sub_1BC2B53CC() & 1) == 0)
      goto LABEL_12;
    if ((v12 = *(int *)(*(_QWORD *)(v3 - 104) + 28),
          v13 = *(_QWORD *)(v2 + v12),
          v14 = *(_QWORD *)(v2 + v12 + 8),
          v15 = (_QWORD *)(v6 + v12),
          v13 == *v15)
      && v14 == v15[1]
      || (sub_1BC2B53CC() & 1) != 0)
    {
      sub_1BC0E8594(v6, type metadata accessor for MedicationSearchItem);
      sub_1BC0E8594(v2, type metadata accessor for MedicationSearchItem);
      v4 = 1;
    }
    else
    {
LABEL_12:
      sub_1BC0E8594(v6, type metadata accessor for MedicationSearchItem);
      sub_1BC0E8594(v2, type metadata accessor for MedicationSearchItem);
      v4 = 0;
    }
    v5 = type metadata accessor for MedicationOnboardingFlowManager.EntryMode;
  }
  sub_1BC0E8594(v0, v5);
  return v4 & 1;
}

uint64_t sub_1BC2A29D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BC2A29F0(a1, a2, a3, sub_1BC2A5D24);
}

uint64_t sub_1BC2A29E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BC2A29F0(a1, a2, a3, sub_1BC2A60D0);
}

uint64_t sub_1BC2A29F0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = v4;
  sub_1BC0E1CB0(a1, v6 + qword_1EF402658, (unint64_t *)&qword_1EF3F8980, (void (*)(uint64_t))type metadata accessor for MedicationSearchItem);
  a4(0);
  v10 = swift_allocObject();
  v11 = *(_QWORD *)(a2 + qword_1EF3FB588);
  *(_QWORD *)(v6 + qword_1EF3FAD98) = v10;
  *(_QWORD *)(v10 + 16) = a2;
  *(_QWORD *)(v10 + 24) = v11;
  *(_QWORD *)(v6 + qword_1EF3FADA0) = a3;
  sub_1BC2B2DEC();
  sub_1BC0E8710();
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1BC2B92D0;
  v13 = MEMORY[0x1E0D2B148];
  *(_QWORD *)(v12 + 32) = a2;
  *(_QWORD *)(v12 + 40) = v13;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_1BC2B2E10();
  v14 = sub_1BC2B2FE4();
  sub_1BC0E1CFC(a1, (unint64_t *)&qword_1EF3F8980, (void (*)(uint64_t))type metadata accessor for MedicationSearchItem);
  return v14;
}

uint64_t sub_1BC2A2B34(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD), _QWORD *a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v8 = v5;
  sub_1BC0E1CB0(a1, v8 + qword_1EF402658, (unint64_t *)&qword_1EF3F8980, (void (*)(uint64_t))type metadata accessor for MedicationSearchItem);
  a4(0);
  v12 = swift_allocObject();
  v13 = *(_QWORD *)(a2 + *a5);
  *(_QWORD *)(v8 + qword_1EF3FAD98) = v12;
  *(_QWORD *)(v12 + 16) = a2;
  *(_QWORD *)(v12 + 24) = v13;
  *(_QWORD *)(v8 + qword_1EF3FADA0) = a3;
  sub_1BC2B2DEC();
  sub_1BC0E8710();
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1BC2B92D0;
  v15 = MEMORY[0x1E0D2B148];
  *(_QWORD *)(v14 + 32) = a2;
  *(_QWORD *)(v14 + 40) = v15;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_1BC2B2E10();
  v16 = sub_1BC2B2FE4();
  sub_1BC0E1CFC(a1, (unint64_t *)&qword_1EF3F8980, (void (*)(uint64_t))type metadata accessor for MedicationSearchItem);
  return v16;
}

uint64_t sub_1BC2A2C74(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t (*a5)(uint64_t), uint64_t a6, _QWORD *a7)
{
  uint64_t v7;
  uint64_t v12;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v12 = v7;
  sub_1BC0E1CB0(a1, v12 + qword_1EF402658, (unint64_t *)&qword_1EF3F8980, (void (*)(uint64_t))type metadata accessor for MedicationSearchItem);
  sub_1BC2A6B8C(0, a4, a5, a6, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for SpecificationStepViewController.MedicationOnboardingStepObservableDataSource);
  v16 = swift_allocObject();
  v17 = *(_QWORD *)(a2 + *a7);
  *(_QWORD *)(v12 + qword_1EF3FAD98) = v16;
  *(_QWORD *)(v16 + 16) = a2;
  *(_QWORD *)(v16 + 24) = v17;
  *(_QWORD *)(v12 + qword_1EF3FADA0) = a3;
  sub_1BC2B2DEC();
  sub_1BC0E8710();
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1BC2B92D0;
  v19 = MEMORY[0x1E0D2B148];
  *(_QWORD *)(v18 + 32) = a2;
  *(_QWORD *)(v18 + 40) = v19;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_1BC2B2E10();
  v20 = sub_1BC2B2FE4();
  sub_1BC0E1CFC(a1, (unint64_t *)&qword_1EF3F8980, (void (*)(uint64_t))type metadata accessor for MedicationSearchItem);
  return v20;
}

void sub_1BC2A2DD0(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_1BC0E1C64(255, a3, a4);
    v5 = sub_1BC2B3EE4();
    if (!v6)
      atomic_store(v5, a2);
  }
}

void sub_1BC2A2E34(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    sub_1BC106304(255, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v6 = sub_1BC2B3EE4();
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1BC2A2EA8()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t initializeBufferWithCopyOfBuffer for MedicationOnboardingFlowManager(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v3 & 0x20000) == 0)
  {
    type metadata accessor for MedicationOnboardingFlowManager.EntryMode(0);
    v4 = (char *)&loc_1BC2A2F38 + 4 * byte_1BC2C6610[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v5 = *a2;
  *a1 = *a2;
  v6 = v5 + ((v3 + 16) & ~(unint64_t)v3);
  swift_retain();
  return v6;
}

uint64_t destroy for MedicationOnboardingFlowManager(id *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;

  type metadata accessor for MedicationOnboardingFlowManager.EntryMode(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
      type metadata accessor for MedicationSearchItem.Source(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v2 = sub_1BC2B34A0();
        (*(void (**)(id *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
      }
      else
      {

        sub_1BC0F223C();
        v7 = (char *)a1 + *(int *)(v6 + 48);
        v8 = sub_1BC2B3530();
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
      }
      type metadata accessor for MedicationSearchItem(0);
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 2u:

      sub_1BC236560();
      v4 = (char *)a1 + *(int *)(v3 + 48);
      v5 = sub_1BC2B2438();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
      break;
    case 3u:
LABEL_7:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

void initializeWithCopy for MedicationOnboardingFlowManager()
{
  char *v0;

  type metadata accessor for MedicationOnboardingFlowManager.EntryMode(0);
  v0 = (char *)sub_1BC2A3528 + 4 * byte_1BC2C6618[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void **sub_1BC2A3528()
{
  void **v0;
  void **v1;
  int *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  id v11;
  int *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  type metadata accessor for MedicationSearchItem.Source(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v3 = sub_1BC2B34A0();
    (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(v0, v1, v3);
  }
  else
  {
    v4 = *v1;
    *v0 = *v1;
    sub_1BC0F223C();
    v6 = *(int *)(v5 + 48);
    v7 = (char *)v0 + v6;
    v8 = (char *)v1 + v6;
    v9 = sub_1BC2B3530();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    v11 = v4;
    v10(v7, v8, v9);
  }
  swift_storeEnumTagMultiPayload();
  v12 = (int *)type metadata accessor for MedicationSearchItem(0);
  *(void **)((char *)v0 + v12[5]) = *(void **)((char *)v1 + v12[5]);
  v13 = v12[6];
  v14 = (void **)((char *)v0 + v13);
  v15 = (uint64_t *)((char *)v1 + v13);
  v17 = *v15;
  v16 = v15[1];
  *v14 = v17;
  v14[1] = v16;
  v18 = v12[7];
  v19 = (void **)((char *)v0 + v18);
  v20 = (void **)((char *)v1 + v18);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  v22 = v2[6];
  *(void **)((char *)v0 + v2[5]) = *(void **)((char *)v1 + v2[5]);
  *(void **)((char *)v0 + v22) = *(void **)((char *)v1 + v22);
  v23 = v2[8];
  *((_BYTE *)v0 + v2[7]) = *((_BYTE *)v1 + v2[7]);
  *((_BYTE *)v0 + v23) = *((_BYTE *)v1 + v23);
  v24 = v2[10];
  *(void **)((char *)v0 + v2[9]) = *(void **)((char *)v1 + v2[9]);
  *(void **)((char *)v0 + v24) = *(void **)((char *)v1 + v24);
  v25 = v2[12];
  *(void **)((char *)v0 + v2[11]) = *(void **)((char *)v1 + v2[11]);
  *(void **)((char *)v0 + v25) = *(void **)((char *)v1 + v25);
  v26 = v2[14];
  *(void **)((char *)v0 + v2[13]) = *(void **)((char *)v1 + v2[13]);
  *(void **)((char *)v0 + v26) = *(void **)((char *)v1 + v26);
  v27 = v2[16];
  *(void **)((char *)v0 + v2[15]) = *(void **)((char *)v1 + v2[15]);
  *(void **)((char *)v0 + v27) = *(void **)((char *)v1 + v27);
  v28 = v2[18];
  *(void **)((char *)v0 + v2[17]) = *(void **)((char *)v1 + v2[17]);
  *(void **)((char *)v0 + v28) = *(void **)((char *)v1 + v28);
  v29 = v2[20];
  *(void **)((char *)v0 + v2[19]) = *(void **)((char *)v1 + v2[19]);
  *(void **)((char *)v0 + v29) = *(void **)((char *)v1 + v29);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return v0;
}

uint64_t assignWithCopy for MedicationOnboardingFlowManager(uint64_t a1, uint64_t a2, int *a3)
{
  char *v6;

  if (a1 != a2)
  {
    sub_1BC0E8594(a1, type metadata accessor for MedicationOnboardingFlowManager.EntryMode);
    type metadata accessor for MedicationOnboardingFlowManager.EntryMode(0);
    v6 = (char *)&loc_1BC2A3940 + 4 * byte_1BC2C661C[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + a3[16]) = *(_QWORD *)(a2 + a3[16]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + a3[17]) = *(_QWORD *)(a2 + a3[17]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + a3[18]) = *(_QWORD *)(a2 + a3[18]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + a3[19]) = *(_QWORD *)(a2 + a3[19]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + a3[20]) = *(_QWORD *)(a2 + a3[20]);
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *initializeWithTake for MedicationOnboardingFlowManager(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = type metadata accessor for MedicationOnboardingFlowManager.EntryMode(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      *a1 = *a2;
      sub_1BC236560();
      v10 = *(int *)(v9 + 48);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_1BC2B2438();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
LABEL_12:
      swift_storeEnumTagMultiPayload();
      goto LABEL_13;
    case 1:
      type metadata accessor for MedicationSearchItem.Source(0);
      if (swift_getEnumCaseMultiPayload() == 1)
        goto LABEL_5;
      goto LABEL_10;
    case 0:
      type metadata accessor for MedicationSearchItem.Source(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
LABEL_5:
        v8 = sub_1BC2B34A0();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
LABEL_11:
        swift_storeEnumTagMultiPayload();
        v19 = (int *)type metadata accessor for MedicationSearchItem(0);
        *(_QWORD *)((char *)a1 + v19[5]) = *(_QWORD *)((char *)a2 + v19[5]);
        *(_OWORD *)((char *)a1 + v19[6]) = *(_OWORD *)((char *)a2 + v19[6]);
        *(_OWORD *)((char *)a1 + v19[7]) = *(_OWORD *)((char *)a2 + v19[7]);
        goto LABEL_12;
      }
LABEL_10:
      *a1 = *a2;
      sub_1BC0F223C();
      v15 = *(int *)(v14 + 48);
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      v18 = sub_1BC2B3530();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
      goto LABEL_11;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
LABEL_13:
  v20 = a3[6];
  *(_QWORD *)((char *)a1 + a3[5]) = *(_QWORD *)((char *)a2 + a3[5]);
  *(_QWORD *)((char *)a1 + v20) = *(_QWORD *)((char *)a2 + v20);
  v21 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *((_BYTE *)a1 + v21) = *((_BYTE *)a2 + v21);
  v22 = a3[10];
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  *(_QWORD *)((char *)a1 + v22) = *(_QWORD *)((char *)a2 + v22);
  v23 = a3[12];
  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
  *(_QWORD *)((char *)a1 + v23) = *(_QWORD *)((char *)a2 + v23);
  v24 = a3[14];
  *(_QWORD *)((char *)a1 + a3[13]) = *(_QWORD *)((char *)a2 + a3[13]);
  *(_QWORD *)((char *)a1 + v24) = *(_QWORD *)((char *)a2 + v24);
  v25 = a3[16];
  *(_QWORD *)((char *)a1 + a3[15]) = *(_QWORD *)((char *)a2 + a3[15]);
  *(_QWORD *)((char *)a1 + v25) = *(_QWORD *)((char *)a2 + v25);
  v26 = a3[18];
  *(_QWORD *)((char *)a1 + a3[17]) = *(_QWORD *)((char *)a2 + a3[17]);
  *(_QWORD *)((char *)a1 + v26) = *(_QWORD *)((char *)a2 + v26);
  v27 = a3[20];
  *(_QWORD *)((char *)a1 + a3[19]) = *(_QWORD *)((char *)a2 + a3[19]);
  *(_QWORD *)((char *)a1 + v27) = *(_QWORD *)((char *)a2 + v27);
  return a1;
}

_QWORD *assignWithTake for MedicationOnboardingFlowManager(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;

  if (a1 != a2)
  {
    sub_1BC0E8594((uint64_t)a1, type metadata accessor for MedicationOnboardingFlowManager.EntryMode);
    v6 = type metadata accessor for MedicationOnboardingFlowManager.EntryMode(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        *a1 = *a2;
        sub_1BC236560();
        v9 = *(int *)(v8 + 48);
        v10 = (char *)a1 + v9;
        v11 = (char *)a2 + v9;
        v12 = sub_1BC2B2438();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
LABEL_13:
        swift_storeEnumTagMultiPayload();
        goto LABEL_14;
      case 1:
        type metadata accessor for MedicationSearchItem.Source(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
LABEL_9:
          v13 = sub_1BC2B34A0();
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
LABEL_12:
          swift_storeEnumTagMultiPayload();
          v19 = (int *)type metadata accessor for MedicationSearchItem(0);
          *(_QWORD *)((char *)a1 + v19[5]) = *(_QWORD *)((char *)a2 + v19[5]);
          *(_OWORD *)((char *)a1 + v19[6]) = *(_OWORD *)((char *)a2 + v19[6]);
          *(_OWORD *)((char *)a1 + v19[7]) = *(_OWORD *)((char *)a2 + v19[7]);
          goto LABEL_13;
        }
LABEL_11:
        *a1 = *a2;
        sub_1BC0F223C();
        v15 = *(int *)(v14 + 48);
        v16 = (char *)a1 + v15;
        v17 = (char *)a2 + v15;
        v18 = sub_1BC2B3530();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
        goto LABEL_12;
      case 0:
        type metadata accessor for MedicationSearchItem.Source(0);
        if (swift_getEnumCaseMultiPayload() == 1)
          goto LABEL_9;
        goto LABEL_11;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
LABEL_14:
  *(_QWORD *)((char *)a1 + a3[5]) = *(_QWORD *)((char *)a2 + a3[5]);
  swift_release();
  v20 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *((_BYTE *)a1 + v20) = *((_BYTE *)a2 + v20);
  v21 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *(_QWORD *)((char *)a1 + v21) = *(_QWORD *)((char *)a2 + v21);
  swift_release();
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  swift_release();
  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
  swift_release();
  *(_QWORD *)((char *)a1 + a3[12]) = *(_QWORD *)((char *)a2 + a3[12]);
  swift_release();
  *(_QWORD *)((char *)a1 + a3[13]) = *(_QWORD *)((char *)a2 + a3[13]);
  swift_release();
  *(_QWORD *)((char *)a1 + a3[14]) = *(_QWORD *)((char *)a2 + a3[14]);
  swift_release();
  *(_QWORD *)((char *)a1 + a3[15]) = *(_QWORD *)((char *)a2 + a3[15]);
  swift_release();
  *(_QWORD *)((char *)a1 + a3[16]) = *(_QWORD *)((char *)a2 + a3[16]);
  swift_release();
  *(_QWORD *)((char *)a1 + a3[17]) = *(_QWORD *)((char *)a2 + a3[17]);
  swift_release();
  *(_QWORD *)((char *)a1 + a3[18]) = *(_QWORD *)((char *)a2 + a3[18]);
  swift_release();
  *(_QWORD *)((char *)a1 + a3[19]) = *(_QWORD *)((char *)a2 + a3[19]);
  swift_release();
  *(_QWORD *)((char *)a1 + a3[20]) = *(_QWORD *)((char *)a2 + a3[20]);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for MedicationOnboardingFlowManager()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC2A446C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for MedicationOnboardingFlowManager.EntryMode(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for MedicationOnboardingFlowManager()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC2A44F4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for MedicationOnboardingFlowManager.EntryMode(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_1BC2A456C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for MedicationOnboardingFlowManager.EntryMode(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for MedicationOnboardingFlowManager.EntryMode(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_1BC2A4678 + 4 * byte_1BC2C6620[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for MedicationOnboardingFlowManager.EntryMode(id *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
      type metadata accessor for MedicationSearchItem.Source(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v3 = sub_1BC2B34A0();
        (*(void (**)(id *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      }
      else
      {

        sub_1BC0F223C();
        v8 = (char *)a1 + *(int *)(v7 + 48);
        v9 = sub_1BC2B3530();
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
      }
      type metadata accessor for MedicationSearchItem(0);
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 2:

      sub_1BC236560();
      v5 = (char *)a1 + *(int *)(v4 + 48);
      v6 = sub_1BC2B2438();
      result = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
      break;
    case 3:
LABEL_7:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

void initializeWithCopy for MedicationOnboardingFlowManager.EntryMode()
{
  char *v0;

  v0 = (char *)sub_1BC2A4AA0 + 4 * byte_1BC2C6628[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void **sub_1BC2A4AA0()
{
  void **v0;
  void **v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  id v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;

  type metadata accessor for MedicationSearchItem.Source(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v2 = sub_1BC2B34A0();
    (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v0, v1, v2);
  }
  else
  {
    v3 = *v1;
    *v0 = *v1;
    sub_1BC0F223C();
    v5 = *(int *)(v4 + 48);
    v6 = (char *)v0 + v5;
    v7 = (char *)v1 + v5;
    v8 = sub_1BC2B3530();
    v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
    v10 = v3;
    v9(v6, v7, v8);
  }
  swift_storeEnumTagMultiPayload();
  v11 = (int *)type metadata accessor for MedicationSearchItem(0);
  *(void **)((char *)v0 + v11[5]) = *(void **)((char *)v1 + v11[5]);
  v12 = v11[6];
  v13 = (void **)((char *)v0 + v12);
  v14 = (uint64_t *)((char *)v1 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  v17 = v11[7];
  v18 = (void **)((char *)v0 + v17);
  v19 = (void **)((char *)v1 + v17);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithCopy for MedicationOnboardingFlowManager.EntryMode(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_1BC0E8594(result, type metadata accessor for MedicationOnboardingFlowManager.EntryMode);
    v2 = (char *)&loc_1BC2A4D98 + 4 * byte_1BC2C662C[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

_QWORD *initializeWithTake for MedicationOnboardingFlowManager.EntryMode(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  int *v18;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      *a1 = *a2;
      sub_1BC236560();
      v9 = *(int *)(v8 + 48);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_1BC2B2438();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
LABEL_12:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 1:
      type metadata accessor for MedicationSearchItem.Source(0);
      if (swift_getEnumCaseMultiPayload() == 1)
        goto LABEL_5;
      goto LABEL_10;
    case 0:
      type metadata accessor for MedicationSearchItem.Source(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
LABEL_5:
        v7 = sub_1BC2B34A0();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
LABEL_11:
        swift_storeEnumTagMultiPayload();
        v18 = (int *)type metadata accessor for MedicationSearchItem(0);
        *(_QWORD *)((char *)a1 + v18[5]) = *(_QWORD *)((char *)a2 + v18[5]);
        *(_OWORD *)((char *)a1 + v18[6]) = *(_OWORD *)((char *)a2 + v18[6]);
        *(_OWORD *)((char *)a1 + v18[7]) = *(_OWORD *)((char *)a2 + v18[7]);
        goto LABEL_12;
      }
LABEL_10:
      *a1 = *a2;
      sub_1BC0F223C();
      v14 = *(int *)(v13 + 48);
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      v17 = sub_1BC2B3530();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
      goto LABEL_11;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_QWORD *assignWithTake for MedicationOnboardingFlowManager.EntryMode(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  int *v18;

  if (a1 != a2)
  {
    sub_1BC0E8594((uint64_t)a1, type metadata accessor for MedicationOnboardingFlowManager.EntryMode);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        *a1 = *a2;
        sub_1BC236560();
        v8 = *(int *)(v7 + 48);
        v9 = (char *)a1 + v8;
        v10 = (char *)a2 + v8;
        v11 = sub_1BC2B2438();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
LABEL_13:
        swift_storeEnumTagMultiPayload();
        return a1;
      case 1:
        type metadata accessor for MedicationSearchItem.Source(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
LABEL_9:
          v12 = sub_1BC2B34A0();
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
LABEL_12:
          swift_storeEnumTagMultiPayload();
          v18 = (int *)type metadata accessor for MedicationSearchItem(0);
          *(_QWORD *)((char *)a1 + v18[5]) = *(_QWORD *)((char *)a2 + v18[5]);
          *(_OWORD *)((char *)a1 + v18[6]) = *(_OWORD *)((char *)a2 + v18[6]);
          *(_OWORD *)((char *)a1 + v18[7]) = *(_OWORD *)((char *)a2 + v18[7]);
          goto LABEL_13;
        }
LABEL_11:
        *a1 = *a2;
        sub_1BC0F223C();
        v14 = *(int *)(v13 + 48);
        v15 = (char *)a1 + v14;
        v16 = (char *)a2 + v14;
        v17 = sub_1BC2B3530();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
        goto LABEL_12;
      case 0:
        type metadata accessor for MedicationSearchItem.Source(0);
        if (swift_getEnumCaseMultiPayload() == 1)
          goto LABEL_9;
        goto LABEL_11;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1BC2A5540()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  void *v7;

  result = type metadata accessor for MedicationSearchItem(319);
  if (v1 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    v5 = v4;
    result = sub_1BC2B2438();
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      v6 = &v3;
      v7 = &unk_1BC2C66F0;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

void sub_1BC2A55E0()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF401E10)
  {
    type metadata accessor for MedicationOnboardingFlowManager.EntryMode(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF401E10);
  }
}

void sub_1BC2A5640()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EF401E28)
  {
    sub_1BC2B4A84();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1F30];
    sub_1BC0E1D38(255, &qword_1EDA0FE20);
    sub_1BC0E519C((unint64_t *)&qword_1EF3FFCC8, v0, MEMORY[0x1E0CB1F20]);
    sub_1BC2A56F4();
    v1 = sub_1BC2B3E0C();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EF401E28);
  }
}

unint64_t sub_1BC2A56F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDA0FE18;
  if (!qword_1EDA0FE18)
  {
    v1 = sub_1BC0E1D38(255, &qword_1EDA0FE20);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0CB2358], v1);
    atomic_store(result, (unint64_t *)&qword_1EDA0FE18);
  }
  return result;
}

uint64_t sub_1BC2A574C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BC2A5770(uint64_t a1)
{
  uint64_t v1;

  sub_1BC293784(a1, v1);
}

uint64_t sub_1BC2A5788(uint64_t *a1)
{
  uint64_t v1;

  return sub_1BC2914EC(*a1, a1[1], v1);
}

void sub_1BC2A5798(uint64_t a1)
{
  uint64_t v1;

  sub_1BC2A2340(a1, v1);
}

void sub_1BC2A57B0(char *a1)
{
  uint64_t v1;

  sub_1BC2931A4(*a1, v1, sub_1BC296770);
}

void sub_1BC2A57D4(void **a1)
{
  uint64_t v1;

  sub_1BC2932C8(*a1, v1, (uint64_t)&unk_1E74BBAA8, (uint64_t)sub_1BC2A5868);
}

unint64_t sub_1BC2A5800()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF401E48;
  if (!qword_1EF401E48)
  {
    sub_1BC2A2E34(255, &qword_1EF401C78, &qword_1EF3F9730, (unint64_t *)&qword_1EF400130, 0x1E0CB64A0);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C95FB8], v1);
    atomic_store(result, &qword_1EF401E48);
  }
  return result;
}

void sub_1BC2A5868(uint64_t a1)
{
  uint64_t v1;

  sub_1BC11D104(a1, v1);
}

id sub_1BC2A5880(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, int a8, uint64_t a9, void (*a10)(uint64_t), uint64_t a11, uint64_t a12, void (*a13)(uint64_t))
{
  char *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  void *v30;
  id v31;
  id v32;
  uint64_t v33;
  unsigned int *v34;
  id v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  id v43;
  uint64_t v44;
  void *v45;
  int v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t);
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t);
  uint64_t v57;
  uint64_t v58;

  v46 = a8;
  v44 = a2;
  v45 = a7;
  v51 = a5;
  v52 = a6;
  v49 = a3;
  v50 = a4;
  v55 = a12;
  v56 = a13;
  v53 = a10;
  v54 = a11;
  v47 = sub_1BC2B3068();
  v15 = *(_QWORD *)(v47 - 8);
  v16 = MEMORY[0x1E0C80A78](v47);
  v48 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v42 - v18;
  v20 = (uint64_t *)&v13[qword_1EF3FAA50];
  v57 = sub_1BC2B4460();
  v58 = v21;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  v22 = v57;
  v23 = v58;
  v24 = v13;
  swift_bridgeObjectRelease();
  *v20 = v22;
  v20[1] = v23;
  v25 = v44;
  v26 = v45;
  *(_QWORD *)&v24[qword_1EF3FAA60] = MEMORY[0x1E0DEE9E8];
  v27 = qword_1EF3FAA68;
  *(_QWORD *)&v24[qword_1EF3FAA68] = 0;
  v28 = qword_1EF3FAA70;
  v24[qword_1EF3FAA70] = 0;
  *(_QWORD *)&v24[qword_1EF3FAA80] = 0;
  sub_1BC0FC574(v25, (uint64_t)&v24[qword_1EF3FAA58], type metadata accessor for MedicationOnboardingFlowManager);
  v29 = v46;
  v24[v28] = v46;
  v30 = *(void **)&v24[v27];
  *(_QWORD *)&v24[v27] = v26;
  v43 = v26;

  *(_QWORD *)&v24[qword_1EF3FAA78] = a9;
  swift_retain();
  v31 = objc_msgSend(a1, sel_traitCollection);
  v32 = objc_msgSend(v31, sel_horizontalSizeClass);

  v33 = v47;
  v34 = (unsigned int *)MEMORY[0x1E0D2BA08];
  if (v32 != (id)2)
    v34 = (unsigned int *)MEMORY[0x1E0D2BA10];
  (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v19, *v34, v47);
  *(_QWORD *)&v24[qword_1EF3FAA88] = a1;
  v35 = a1;

  if ((v29 & 1) == 0)
    v36 = v43;
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v48, v19, v33);
  v37 = v35;
  v38 = (id)sub_1BC2B305C();
  v39 = sub_1BC2B2FCC();
  v53(v39);
  v40 = sub_1BC2933E4(v54, v55);
  v56(v40);

  sub_1BC0E8594(v25, type metadata accessor for MedicationOnboardingFlowManager);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v19, v33);
  return v38;
}

uint64_t sub_1BC2A5B48(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1BC0FEBF4;
  return sub_1BC2983D8(a1, v4, v5, v7, v6);
}

void sub_1BC2A5BC4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1EF401E68)
  {
    v2 = type metadata accessor for MedicationFormsDataSource();
    v3 = sub_1BC0E519C(&qword_1EF401E70, (uint64_t (*)(uint64_t))type metadata accessor for MedicationFormsDataSource, (uint64_t)&protocol conformance descriptor for MedicationOptionsDataSource<A>);
    v5 = type metadata accessor for OnboardingStepViewController(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1EF401E68);
  }
}

uint64_t sub_1BC2A5C3C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC2915E4(a1, v1);
}

void sub_1BC2A5C54(char *a1)
{
  uint64_t v1;

  sub_1BC2931A4(*a1, v1, sub_1BC296A14);
}

void sub_1BC2A5C78(void **a1)
{
  uint64_t v1;

  sub_1BC2932C8(*a1, v1, (uint64_t)&unk_1E74BBB70, (uint64_t)sub_1BC2A5868);
}

uint64_t sub_1BC2A5CA8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1BC0FEBF4;
  return sub_1BC2983D8(a1, v4, v5, v7, v6);
}

void sub_1BC2A5D24(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1EF401E88)
  {
    v2 = type metadata accessor for MedicationFormsDataSource();
    v3 = sub_1BC0E519C(&qword_1EF401E70, (uint64_t (*)(uint64_t))type metadata accessor for MedicationFormsDataSource, (uint64_t)&protocol conformance descriptor for MedicationOptionsDataSource<A>);
    v5 = type metadata accessor for SpecificationStepViewController.MedicationOnboardingStepObservableDataSource(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1EF401E88);
  }
}

void sub_1BC2A5D9C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1EF401E90)
  {
    v2 = type metadata accessor for ManaulFormsDataSource();
    v3 = sub_1BC0E519C(&qword_1EF401E98, (uint64_t (*)(uint64_t))type metadata accessor for ManaulFormsDataSource, (uint64_t)&protocol conformance descriptor for MedicationOptionsDataSource<A>);
    v5 = type metadata accessor for OnboardingStepViewController(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1EF401E90);
  }
}

void sub_1BC2A5E14(char *a1)
{
  uint64_t v1;

  sub_1BC2931A4(*a1, v1, sub_1BC296CB8);
}

void sub_1BC2A5E38(void **a1)
{
  uint64_t v1;

  sub_1BC2932C8(*a1, v1, (uint64_t)&unk_1E74BBC38, (uint64_t)sub_1BC2A5868);
}

uint64_t sub_1BC2A5E68(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1BC0FEBF4;
  return sub_1BC2983D8(a1, v4, v5, v7, v6);
}

void sub_1BC2A5EE4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1EF401EB0)
  {
    v2 = type metadata accessor for ManaulFormsDataSource();
    v3 = sub_1BC0E519C(&qword_1EF401E98, (uint64_t (*)(uint64_t))type metadata accessor for ManaulFormsDataSource, (uint64_t)&protocol conformance descriptor for MedicationOptionsDataSource<A>);
    v5 = type metadata accessor for SpecificationStepViewController.MedicationOnboardingStepObservableDataSource(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1EF401EB0);
  }
}

void sub_1BC2A5F5C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1EF401EB8)
  {
    v2 = type metadata accessor for MedicationStrengthsDataSource();
    v3 = sub_1BC0E519C(&qword_1EF401EC0, (uint64_t (*)(uint64_t))type metadata accessor for MedicationStrengthsDataSource, (uint64_t)&protocol conformance descriptor for MedicationOptionsDataSource<A>);
    v5 = type metadata accessor for OnboardingStepViewController(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1EF401EB8);
  }
}

void sub_1BC2A5FD4(char *a1)
{
  uint64_t v1;

  sub_1BC2931A4(*a1, v1, sub_1BC297200);
}

void sub_1BC2A5FF8(void **a1)
{
  uint64_t v1;

  sub_1BC2932C8(*a1, v1, (uint64_t)&unk_1E74BBD00, (uint64_t)sub_1BC2A5868);
}

uint64_t sub_1BC2A6028(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1BC0FEBF4;
  return sub_1BC2983D8(a1, v4, v5, v7, v6);
}

uint64_t sub_1BC2A60A4()
{
  uint64_t v0;

  sub_1BC10228C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_BYTE *)(v0 + 40));
  return swift_deallocObject();
}

void sub_1BC2A60D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1EF401ED8)
  {
    v2 = type metadata accessor for MedicationStrengthsDataSource();
    v3 = sub_1BC0E519C(&qword_1EF401EC0, (uint64_t (*)(uint64_t))type metadata accessor for MedicationStrengthsDataSource, (uint64_t)&protocol conformance descriptor for MedicationOptionsDataSource<A>);
    v5 = type metadata accessor for SpecificationStepViewController.MedicationOnboardingStepObservableDataSource(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1EF401ED8);
  }
}

void sub_1BC2A6148(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1EF401EE0)
  {
    v2 = type metadata accessor for ManualStrengthDataSource();
    v3 = sub_1BC0E519C(&qword_1EF401EE8, (uint64_t (*)(uint64_t))type metadata accessor for ManualStrengthDataSource, (uint64_t)&unk_1BC2BF818);
    v5 = type metadata accessor for OnboardingStepViewController(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1EF401EE0);
  }
}

uint64_t sub_1BC2A61C0(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC29177C(*(void **)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(_BYTE *)(a1 + 24), v1);
}

void sub_1BC2A61E8(char *a1)
{
  uint64_t v1;

  sub_1BC2931A4(*a1, v1, sub_1BC296F5C);
}

void sub_1BC2A620C(void **a1)
{
  uint64_t v1;

  sub_1BC2932C8(*a1, v1, (uint64_t)&unk_1E74BBDF0, (uint64_t)sub_1BC2A5868);
}

uint64_t sub_1BC2A623C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1BC0FEBF4;
  return sub_1BC2983D8(a1, v4, v5, v7, v6);
}

uint64_t sub_1BC2A62B4()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1BC2A62E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1EF401F00)
  {
    v2 = type metadata accessor for ManualStrengthDataSource();
    v3 = sub_1BC0E519C(&qword_1EF401EE8, (uint64_t (*)(uint64_t))type metadata accessor for ManualStrengthDataSource, (uint64_t)&unk_1BC2BF818);
    v5 = type metadata accessor for SpecificationStepViewController.MedicationOnboardingStepObservableDataSource(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1EF401F00);
  }
}

void sub_1BC2A635C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1EF401F08)
  {
    v2 = type metadata accessor for MedicationScheduleDataSource();
    v3 = sub_1BC0E519C(&qword_1EF401018, (uint64_t (*)(uint64_t))type metadata accessor for MedicationScheduleDataSource, (uint64_t)&protocol conformance descriptor for MedicationScheduleDataSource);
    v5 = type metadata accessor for OnboardingStepViewController(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, &qword_1EF401F08);
  }
}

uint64_t sub_1BC2A63D4(void **a1)
{
  uint64_t v1;

  return sub_1BC2918C0(*a1, v1);
}

void sub_1BC2A63E0(char *a1)
{
  uint64_t v1;

  sub_1BC2931A4(*a1, v1, sub_1BC2974A4);
}

void sub_1BC2A6404(void **a1)
{
  uint64_t v1;

  sub_1BC2932C8(*a1, v1, (uint64_t)&unk_1E74BBEB8, (uint64_t)sub_1BC2A5868);
}

uint64_t sub_1BC2A6434(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1BC0FEBF4;
  return sub_1BC2983D8(a1, v4, v5, v7, v6);
}

void sub_1BC2A64B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1EF401F20)
  {
    v2 = type metadata accessor for VisualizationShapeDataSource();
    v3 = sub_1BC0E519C(&qword_1EF3F8990, (uint64_t (*)(uint64_t))type metadata accessor for VisualizationShapeDataSource, (uint64_t)&protocol conformance descriptor for VisualizationShapeDataSource);
    v5 = type metadata accessor for OnboardingStepViewController(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, &qword_1EF401F20);
  }
}

uint64_t sub_1BC2A6528(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC2919C0(a1, v1);
}

void sub_1BC2A6530(char *a1)
{
  uint64_t v1;

  sub_1BC2931A4(*a1, v1, sub_1BC297748);
}

void sub_1BC2A6554(void **a1)
{
  uint64_t v1;

  sub_1BC2932C8(*a1, v1, (uint64_t)&unk_1E74BBF80, (uint64_t)sub_1BC2A5868);
}

uint64_t sub_1BC2A6584(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1BC0FEBF4;
  return sub_1BC2983D8(a1, v4, v5, v7, v6);
}

void sub_1BC2A6600(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1EF401F38)
  {
    v2 = type metadata accessor for VisualizationModificationDataSource();
    v3 = sub_1BC0E519C(&qword_1EF3FAA48, (uint64_t (*)(uint64_t))type metadata accessor for VisualizationModificationDataSource, (uint64_t)&protocol conformance descriptor for VisualizationModificationDataSource);
    v5 = type metadata accessor for OnboardingStepViewController(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, &qword_1EF401F38);
  }
}

uint64_t sub_1BC2A6678(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC292194(a1, v1);
}

uint64_t sub_1BC2A6680(unint64_t *a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    sub_1BC2A2DD0(255, a2, a3, a4);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C95FB8], v6);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BC2A66C0(char *a1)
{
  uint64_t v1;

  sub_1BC2931A4(*a1, v1, sub_1BC2979EC);
}

void sub_1BC2A66E4(void **a1)
{
  uint64_t v1;

  sub_1BC2932C8(*a1, v1, (uint64_t)&unk_1E74BC048, (uint64_t)sub_1BC2A5868);
}

uint64_t sub_1BC2A6714(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1BC0FEBF4;
  return sub_1BC2983D8(a1, v4, v5, v7, v6);
}

void sub_1BC2A6790(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1EF401F50)
  {
    v2 = type metadata accessor for NicknameAndNotesDataSource();
    v3 = sub_1BC0E519C(&qword_1EF401F58, (uint64_t (*)(uint64_t))type metadata accessor for NicknameAndNotesDataSource, (uint64_t)&unk_1BC2C1730);
    v5 = type metadata accessor for OnboardingStepViewController(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1EF401F50);
  }
}

uint64_t sub_1BC2A6808(uint64_t *a1)
{
  uint64_t v1;

  return sub_1BC2924C8(*a1, a1[1], a1[2], a1[3], v1);
}

unint64_t sub_1BC2A681C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF401F60;
  if (!qword_1EF401F60)
  {
    sub_1BC26465C(255, (unint64_t *)&qword_1EF400C58, (unint64_t *)&qword_1EF400C60, (uint64_t)&type metadata for MedicationNicknameNotes);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C95FB8], v1);
    atomic_store(result, &qword_1EF401F60);
  }
  return result;
}

void sub_1BC2A687C(char *a1)
{
  uint64_t v1;

  sub_1BC2931A4(*a1, v1, sub_1BC297C90);
}

void sub_1BC2A68A0(void **a1)
{
  uint64_t v1;

  sub_1BC2932C8(*a1, v1, (uint64_t)&unk_1E74BC110, (uint64_t)sub_1BC2A5868);
}

uint64_t sub_1BC2A68D0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1BC0FEB64;
  return sub_1BC298594(a1, v4, v5, v7, v6);
}

uint64_t sub_1BC2A694C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1BC2A6980()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BC2A69AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1EF401F78)
  {
    v2 = type metadata accessor for NicknameAndNotesDataSource();
    v3 = sub_1BC0E519C(&qword_1EF401F58, (uint64_t (*)(uint64_t))type metadata accessor for NicknameAndNotesDataSource, (uint64_t)&unk_1BC2C1730);
    v5 = type metadata accessor for SpecificationStepViewController.MedicationOnboardingStepObservableDataSource(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1EF401F78);
  }
}

uint64_t sub_1BC2A6A24(char *a1)
{
  uint64_t v1;

  return sub_1BC292600(*a1, v1);
}

unint64_t sub_1BC2A6A30()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3FE538;
  if (!qword_1EF3FE538)
  {
    sub_1BC26465C(255, (unint64_t *)&qword_1EF3FE530, (unint64_t *)&qword_1EF3F9040, MEMORY[0x1E0DEAFA0]);
    result = MEMORY[0x1BCCEF2BC](MEMORY[0x1E0C95FB8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF3FE538);
  }
  return result;
}

void sub_1BC2A6A90(char *a1)
{
  uint64_t v1;

  sub_1BC2931A4(*a1, v1, sub_1BC297F34);
}

void sub_1BC2A6AB4(void **a1)
{
  uint64_t v1;

  sub_1BC2932C8(*a1, v1, (uint64_t)&unk_1E74BC200, (uint64_t)sub_1BC2A5868);
}

uint64_t objectdestroy_18Tm()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1BC2A6B10(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1BC0FEBF4;
  return sub_1BC2983D8(a1, v4, v5, v7, v6);
}

void sub_1BC2A6B8C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (!*a2)
  {
    v9 = a3(255);
    v10 = a5(a1, v9, a4);
    if (!v11)
      atomic_store(v10, a2);
  }
}

void __swiftcall CollectionViewTextItem.init(text:)(HealthMedicationsUI::CollectionViewTextItem *__return_ptr retstr, Swift::String text)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  objc_class *v14;
  _QWORD v15[2];
  uint64_t v16;
  unint64_t v17;

  v15[1] = text._countAndFlagsBits;
  v3 = sub_1BC2B2438();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CollectionViewTextCell();
  sub_1BC2A6E08();
  v7 = sub_1BC2B2930();
  v9 = v8;
  v16 = 0x74497265746F6F46;
  v17 = 0xEB000000005F6D65;
  sub_1BC2B242C();
  sub_1BC2B23FC();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v10 = v16;
  v11 = (void *)v17;
  v12 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v13 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  v14 = (objc_class *)objc_msgSend(v12, sel_initWithString_, v13);

  retstr->reuseIdentifier._countAndFlagsBits = v7;
  retstr->reuseIdentifier._object = v9;
  retstr->uniqueIdentifier._countAndFlagsBits = v10;
  retstr->uniqueIdentifier._object = v11;
  retstr->attributedText.super.isa = v14;
}

uint64_t type metadata accessor for CollectionViewTextCell()
{
  return objc_opt_self();
}

unint64_t sub_1BC2A6E08()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3F8E98;
  if (!qword_1EF3F8E98)
  {
    v1 = type metadata accessor for CollectionViewTextCell();
    result = MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for CollectionViewTextCell, v1);
    atomic_store(result, (unint64_t *)&qword_1EF3F8E98);
  }
  return result;
}

uint64_t CollectionViewTextItem.reuseIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CollectionViewTextItem.reuseIdentifier.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*CollectionViewTextItem.reuseIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t CollectionViewTextItem.uniqueIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CollectionViewTextItem.uniqueIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*CollectionViewTextItem.uniqueIdentifier.modify())()
{
  return nullsub_1;
}

id CollectionViewTextItem.attributedText.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 32);
}

void __swiftcall CollectionViewTextItem.init(attributedText:)(HealthMedicationsUI::CollectionViewTextItem *__return_ptr retstr, NSAttributedString attributedText)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;

  v4 = sub_1BC2B2438();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CollectionViewTextCell();
  sub_1BC2A6E08();
  v8 = sub_1BC2B2930();
  v10 = v9;
  v13 = 0x74497265746F6F46;
  v14 = 0xEB000000005F6D65;
  sub_1BC2B242C();
  sub_1BC2B23FC();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v11 = v13;
  v12 = (void *)v14;
  retstr->reuseIdentifier._countAndFlagsBits = v8;
  retstr->reuseIdentifier._object = v10;
  retstr->uniqueIdentifier._countAndFlagsBits = v11;
  retstr->uniqueIdentifier._object = v12;
  retstr->attributedText = attributedText;
}

uint64_t sub_1BC2A7044(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _BYTE v5[40];

  sub_1BC0E1CB0(a1, (uint64_t)v5, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
  v3 = *a2 + OBJC_IVAR____TtC19HealthMedicationsUI22CollectionViewTextCell_item;
  swift_beginAccess();
  sub_1BC0F3E44((uint64_t)v5, v3);
  swift_endAccess();
  sub_1BC2A7AA0();
  return sub_1BC0E1CFC((uint64_t)v5, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
}

uint64_t sub_1BC2A70DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI22CollectionViewTextCell_item;
  swift_beginAccess();
  return sub_1BC0E1CB0(v3, a1, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
}

uint64_t sub_1BC2A713C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI22CollectionViewTextCell_item;
  swift_beginAccess();
  sub_1BC0F3E44(a1, v3);
  swift_endAccess();
  sub_1BC2A7AA0();
  return sub_1BC0E1CFC(a1, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
}

void (*sub_1BC2A71B8(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC2A7200;
}

void sub_1BC2A7200(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    sub_1BC2A7AA0();
}

id sub_1BC2A7230()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI22CollectionViewTextCell____lazy_storage___label;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI22CollectionViewTextCell____lazy_storage___label);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI22CollectionViewTextCell____lazy_storage___label);
  }
  else
  {
    v4 = sub_1BC2A728C();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BC2A728C()
{
  id v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v6;
  uint64_t v7;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  v6 = sub_1BC2B4460();
  v7 = v1;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  v2 = v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  v3 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setAccessibilityIdentifier_, v3, v6, v7);

  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v2, sel_setNumberOfLines_, 0);
  objc_msgSend(v2, sel_setAdjustsFontForContentSizeCategory_, 1);
  v4 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
  objc_msgSend(v2, sel_setFont_, v4);

  objc_msgSend(v2, sel_setClipsToBounds_, 0);
  objc_msgSend(v2, sel_setTextAlignment_, 1);
  objc_msgSend(v2, sel_setLineBreakMode_, 0);
  return v2;
}

void sub_1BC2A75A8()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;

  v1 = objc_msgSend(v0, sel_contentView);
  v2 = sub_1BC2A7230();
  objc_msgSend(v1, sel_addSubview_, v2);

  v3 = (void *)objc_opt_self();
  sub_1BC0E7940();
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BC2BA730;
  v5 = sub_1BC2A7230();
  v6 = objc_msgSend(v5, sel_topAnchor);

  v7 = objc_msgSend(v0, sel_contentView);
  v8 = objc_msgSend(v7, sel_topAnchor);

  v9 = objc_msgSend(v6, sel_constraintEqualToAnchor_constant_, v8, -10.0);
  *(_QWORD *)(v4 + 32) = v9;
  v10 = sub_1BC2A7230();
  v11 = objc_msgSend(v10, sel_bottomAnchor);

  v12 = objc_msgSend(v0, sel_contentView);
  v13 = objc_msgSend(v12, sel_bottomAnchor);

  v14 = objc_msgSend(v11, sel_constraintEqualToAnchor_constant_, v13, -26.0);
  *(_QWORD *)(v4 + 40) = v14;
  v15 = sub_1BC2A7230();
  v16 = objc_msgSend(v15, sel_leadingAnchor);

  v17 = objc_msgSend(v0, sel_contentView);
  v18 = objc_msgSend(v17, sel_leadingAnchor);

  v19 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v18);
  *(_QWORD *)(v4 + 48) = v19;
  v20 = sub_1BC2A7230();
  v21 = objc_msgSend(v20, sel_trailingAnchor);

  v22 = objc_msgSend(v0, sel_contentView);
  v23 = objc_msgSend(v22, sel_trailingAnchor);

  v24 = objc_msgSend(v21, sel_constraintEqualToAnchor_, v23);
  *(_QWORD *)(v4 + 56) = v24;
  sub_1BC2B45A4();
  sub_1BC11BF6C();
  v25 = (id)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_activateConstraints_, v25);

}

uint64_t sub_1BC2A789C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  void *v8;
  objc_class *v9;
  uint64_t v10;
  void (*v11)(uint64_t);
  id v13;
  objc_super v14;

  v1 = v0;
  sub_1BC0E1C64(0, &qword_1EDA0FAF0, (void (*)(uint64_t))MEMORY[0x1E0DC2130]);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v14 - v6;
  v8 = (void *)sub_1BC2B3AE8();
  v9 = (objc_class *)type metadata accessor for CollectionViewTextCell();
  v14.receiver = v1;
  v14.super_class = v9;
  objc_msgSendSuper2(&v14, sel__bridgedUpdateConfigurationUsingState_, v8);

  MEMORY[0x1BCCEE230]();
  v10 = sub_1BC2B3B48();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v7, 1, v10))
  {
    v11 = (void (*)(uint64_t))MEMORY[0x1E0DC2130];
    sub_1BC0E1CB0((uint64_t)v7, (uint64_t)v5, &qword_1EDA0FAF0, (void (*)(uint64_t))MEMORY[0x1E0DC2130]);
    MEMORY[0x1BCCEE23C](v5);
    return sub_1BC0E1CFC((uint64_t)v7, &qword_1EDA0FAF0, v11);
  }
  else
  {
    v13 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
    sub_1BC2B3B18();
    return MEMORY[0x1BCCEE23C](v7);
  }
}

void sub_1BC2A7AA0()
{
  uint64_t v0;
  uint64_t ObjectType;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16[5];
  _QWORD v17[5];

  ObjectType = swift_getObjectType();
  v2 = sub_1BC2B39E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v16[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI22CollectionViewTextCell_item;
  swift_beginAccess();
  sub_1BC0E1CB0(v6, (uint64_t)v17, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
  if (v17[3])
  {
    sub_1BC0E1B94();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v7 = (void *)v16[4];
      v8 = sub_1BC2A7230();
      objc_msgSend(v8, sel_setAttributedText_, v7);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
  }
  else
  {
    sub_1BC0E1CFC((uint64_t)v17, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
  }
  sub_1BC2B39BC();
  v9 = sub_1BC2B39D4();
  v10 = sub_1BC2B48C8();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v16[0] = v12;
    *(_DWORD *)v11 = 136446210;
    v17[0] = ObjectType;
    swift_getMetatypeMetadata();
    v13 = sub_1BC2B4478();
    v17[0] = sub_1BC12540C(v13, v14, v16);
    sub_1BC2B4FD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC0DC000, v9, v10, "[%{public}s] item is not an CollectionViewTextItem", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v12, -1, -1);
    MEMORY[0x1BCCEF3A0](v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

id CollectionViewTextCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CollectionViewTextCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC2A7D7C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI22CollectionViewTextCell_item;
  swift_beginAccess();
  return sub_1BC0E1CB0(v3, a2, (unint64_t *)&qword_1EDA0F7D0, (void (*)(uint64_t))sub_1BC0E1B94);
}

void destroy for CollectionViewTextItem(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

_QWORD *initializeWithCopy for CollectionViewTextItem(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = (void *)a2[4];
  a1[4] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = v5;
  return a1;
}

_QWORD *assignWithCopy for CollectionViewTextItem(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a2[4];
  v5 = (void *)a1[4];
  a1[4] = v4;
  v6 = v4;

  return a1;
}

uint64_t assignWithTake for CollectionViewTextItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  return a1;
}

ValueMetadata *type metadata accessor for CollectionViewTextItem()
{
  return &type metadata for CollectionViewTextItem;
}

uint64_t method lookup function for CollectionViewTextCell()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CollectionViewTextCell.item.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of CollectionViewTextCell.item.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of CollectionViewTextCell.item.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

HealthMedicationsUI::InteractionsOnboardingEducationItem __swiftcall InteractionsOnboardingEducationItem.init(text:)(Swift::String text)
{
  uint64_t *v1;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  HealthMedicationsUI::InteractionsOnboardingEducationItem result;

  object = text._object;
  countAndFlagsBits = text._countAndFlagsBits;
  v4 = v1;
  type metadata accessor for InteractionsOnboardingEducationCell();
  sub_1BC2A8014();
  v5 = sub_1BC2B2930();
  *v4 = countAndFlagsBits;
  v4[1] = (uint64_t)object;
  v4[2] = v5;
  v4[3] = (uint64_t)v6;
  result.reuseIdentifier._object = v8;
  result.reuseIdentifier._countAndFlagsBits = v7;
  result.text._object = v6;
  result.text._countAndFlagsBits = v5;
  return result;
}

uint64_t type metadata accessor for InteractionsOnboardingEducationCell()
{
  return objc_opt_self();
}

unint64_t sub_1BC2A8014()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF3FE520;
  if (!qword_1EF3FE520)
  {
    v1 = type metadata accessor for InteractionsOnboardingEducationCell();
    result = MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for InteractionsOnboardingEducationCell, v1);
    atomic_store(result, (unint64_t *)&qword_1EF3FE520);
  }
  return result;
}

uint64_t OnboardingLifestyleInteractionSwitchItem.__allocating_init(factor:settingsManager:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_allocObject();
  v4 = sub_1BC2A9598(a1, a2);
  swift_release();
  return v4;
}

uint64_t InteractionsOnboardingEducationItem.reuseIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InteractionsOnboardingEducationItem.uniqueIdentifier.getter()
{
  uint64_t v0;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t InteractionsOnboardingEducationItem.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1BC2B44D8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC2B44D8();
  return swift_bridgeObjectRelease();
}

uint64_t InteractionsOnboardingEducationItem.hashValue.getter()
{
  sub_1BC2B5450();
  sub_1BC2B44D8();
  sub_1BC2B44D8();
  return sub_1BC2B548C();
}

uint64_t sub_1BC2A8220()
{
  uint64_t v0;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1BC2A828C()
{
  sub_1BC2B5450();
  sub_1BC2B44D8();
  sub_1BC2B44D8();
  return sub_1BC2B548C();
}

uint64_t sub_1BC2A82F0()
{
  sub_1BC2B44D8();
  return sub_1BC2B44D8();
}

uint64_t sub_1BC2A832C()
{
  sub_1BC2B5450();
  sub_1BC2B44D8();
  sub_1BC2B44D8();
  return sub_1BC2B548C();
}

uint64_t OnboardingLifestyleInteractionSwitchItem.baseIdentifier.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + qword_1EF401FD8);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t OnboardingLifestyleInteractionSwitchItem.baseIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + qword_1EF401FD8);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*OnboardingLifestyleInteractionSwitchItem.baseIdentifier.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t OnboardingLifestyleInteractionSwitchItem.init(factor:settingsManager:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = sub_1BC2A9598(a1, a2);
  swift_release();
  return v2;
}

uint64_t OnboardingLifestyleInteractionSwitchItem.isOn.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  v1 = *(_QWORD *)(v0 + qword_1EF401FE0);
  switch(v1)
  {
    case 3:
      v2 = sub_1BC2B31B8();
      return v2 & 1;
    case 2:
      v2 = sub_1BC2B31DC();
      return v2 & 1;
    case 1:
      v2 = sub_1BC2B31A0();
      return v2 & 1;
  }
  return 0;
}

uint64_t OnboardingLifestyleInteractionSwitchItem.handleSwitchValueChanged(_:for:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + qword_1EF401FE0);
  switch(v1)
  {
    case 3:
      return sub_1BC2B31C4();
    case 2:
      return sub_1BC2B31E8();
    case 1:
      return sub_1BC2B31AC();
  }
  return result;
}

void OnboardingLifestyleInteractionSwitchItem.__allocating_init(image:text:detailText:backgroundColor:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void OnboardingLifestyleInteractionSwitchItem.init(image:text:detailText:backgroundColor:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC2A8608()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t OnboardingLifestyleInteractionSwitchItem.deinit()
{
  uint64_t v0;

  v0 = _s19HealthMedicationsUI38InteractionFactorsLifestyleOptionsItemCfd_0();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t OnboardingLifestyleInteractionSwitchItem.__deallocating_deinit()
{
  _s19HealthMedicationsUI38InteractionFactorsLifestyleOptionsItemCfd_0();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC2A86D0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  v1 = *(_QWORD *)(v0 + qword_1EF401FE0);
  switch(v1)
  {
    case 3:
      v2 = sub_1BC2B31B8();
      return v2 & 1;
    case 2:
      v2 = sub_1BC2B31DC();
      return v2 & 1;
    case 1:
      v2 = sub_1BC2B31A0();
      return v2 & 1;
  }
  return 0;
}

uint64_t sub_1BC2A8750()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + qword_1EF401FE0);
  switch(v1)
  {
    case 3:
      return sub_1BC2B31C4();
    case 2:
      return sub_1BC2B31E8();
    case 1:
      return sub_1BC2B31AC();
  }
  return result;
}

uint64_t sub_1BC2A87D0()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(*v0 + qword_1EF401FD8);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1BC2A8828(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v5;

  v5 = (_QWORD *)(*v2 + qword_1EF401FD8);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1BC2A8888())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

double sub_1BC2A88D0()
{
  double result;

  result = 0.0;
  xmmword_1EF402D40 = xmmword_1BC2C6810;
  unk_1EF402D50 = xmmword_1BC2C6810;
  return result;
}

uint64_t InteractionsOnboardingEducationCell.item.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI35InteractionsOnboardingEducationCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a1);
}

uint64_t sub_1BC2A8938(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _BYTE v5[40];

  sub_1BC0E5774(a1, (uint64_t)v5);
  v3 = *a2 + OBJC_IVAR____TtC19HealthMedicationsUI35InteractionsOnboardingEducationCell_item;
  swift_beginAccess();
  sub_1BC0F3E44((uint64_t)v5, v3);
  swift_endAccess();
  sub_1BC2A8A14();
  return sub_1BC0F7954((uint64_t)v5);
}

uint64_t InteractionsOnboardingEducationCell.item.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI35InteractionsOnboardingEducationCell_item;
  swift_beginAccess();
  sub_1BC0F3E44(a1, v3);
  swift_endAccess();
  sub_1BC2A8A14();
  return sub_1BC0F7954(a1);
}

void sub_1BC2A8A14()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48[4];
  _QWORD v49[5];

  v1 = v0;
  v2 = sub_1BC2B39E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI35InteractionsOnboardingEducationCell_item;
  swift_beginAccess();
  sub_1BC0E5774(v6, (uint64_t)v49);
  if (!v49[3])
  {
    sub_1BC0F7954((uint64_t)v49);
LABEL_7:
    sub_1BC2B39A4();
    v36 = v1;
    v37 = sub_1BC2B39D4();
    v38 = sub_1BC2B48C8();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = swift_slowAlloc();
      v47 = v2;
      v40 = (uint8_t *)v39;
      v41 = swift_slowAlloc();
      v48[0] = v41;
      *(_DWORD *)v40 = 136446210;
      sub_1BC0E5774(v6, (uint64_t)v49);
      sub_1BC0E84E8();
      v42 = sub_1BC2B4490();
      v49[0] = sub_1BC12540C(v42, v43, v48);
      sub_1BC2B4FD0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v37, v38, "Incorrect view model for InteractionsOnboardingEducationItem: %{public}s", v40, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v41, -1, -1);
      MEMORY[0x1BCCEF3A0](v40, -1, -1);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v47);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
    return;
  }
  sub_1BC0E1B94();
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_7;
  v46 = v48[0];
  v47 = v48[3];
  v7 = objc_msgSend(v1, sel_contentView);
  v8 = objc_msgSend((id)objc_opt_self(), sel_systemBackgroundColor);
  objc_msgSend(v7, sel_setBackgroundColor_, v8);

  v9 = objc_msgSend(v1, sel_contentView);
  v10 = sub_1BC2A90A8();
  objc_msgSend(v9, sel_addSubview_, v10);

  v45 = (id)objc_opt_self();
  sub_1BC0E7940();
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1BC2BA730;
  v12 = sub_1BC2A90A8();
  v13 = objc_msgSend(v12, sel_topAnchor);

  v14 = objc_msgSend(v1, sel_contentView);
  v15 = objc_msgSend(v14, sel_topAnchor);

  v16 = objc_msgSend(v13, sel_constraintEqualToAnchor_, v15);
  *(_QWORD *)(v11 + 32) = v16;
  v17 = sub_1BC2A90A8();
  v18 = objc_msgSend(v17, sel_leadingAnchor);

  v19 = objc_msgSend(v1, sel_contentView);
  v20 = objc_msgSend(v19, sel_leadingAnchor);

  if (qword_1EF3F81A8 != -1)
    swift_once();
  v21 = objc_msgSend(v18, sel_constraintEqualToAnchor_constant_, v20, *((double *)&xmmword_1EF402D40 + 1));

  *(_QWORD *)(v11 + 40) = v21;
  v22 = sub_1BC2A90A8();
  v23 = objc_msgSend(v22, sel_trailingAnchor);

  v24 = objc_msgSend(v1, sel_contentView);
  v25 = objc_msgSend(v24, sel_trailingAnchor);

  v26 = objc_msgSend(v23, sel_constraintEqualToAnchor_constant_, v25, -*(double *)&qword_1EF402D58);
  *(_QWORD *)(v11 + 48) = v26;
  v27 = sub_1BC2A90A8();
  v28 = objc_msgSend(v27, sel_bottomAnchor);

  v29 = objc_msgSend(v1, sel_contentView);
  v30 = objc_msgSend(v29, sel_bottomAnchor);

  v31 = objc_msgSend(v28, sel_constraintEqualToAnchor_, v30);
  *(_QWORD *)(v11 + 56) = v31;
  v49[0] = v11;
  sub_1BC2B45A4();
  sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FCE0);
  v32 = (void *)sub_1BC2B4580();
  swift_bridgeObjectRelease();
  objc_msgSend(v45, sel_activateConstraints_, v32);

  v33 = sub_1BC2A90A8();
  v34 = (void *)sub_1BC2B4430();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  objc_msgSend(v33, sel_setText_, v34);

  v35 = sub_1BC2A90A8();
  objc_msgSend(v35, sel_setTextAlignment_, 1);

}

void (*InteractionsOnboardingEducationCell.item.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC2A9078;
}

void sub_1BC2A9078(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    sub_1BC2A8A14();
}

id sub_1BC2A90A8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI35InteractionsOnboardingEducationCell____lazy_storage___labelView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI35InteractionsOnboardingEducationCell____lazy_storage___labelView);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI35InteractionsOnboardingEducationCell____lazy_storage___labelView);
  }
  else
  {
    v4 = v0;
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
    objc_msgSend(v5, sel_setNumberOfLines_, 0);
    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    sub_1BC0E1D38(0, (unint64_t *)&qword_1EDA0FDC0);
    v6 = (void *)sub_1BC2B4C64();
    objc_msgSend(v5, sel_setFont_, v6);

    v7 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

id InteractionsOnboardingEducationCell.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

id InteractionsOnboardingEducationCell.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  char *v10;
  objc_super v12;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI35InteractionsOnboardingEducationCell_item];
  *(_OWORD *)v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  *((_QWORD *)v10 + 4) = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI35InteractionsOnboardingEducationCell____lazy_storage___labelView] = 0;
  v12.receiver = v4;
  v12.super_class = ObjectType;
  return objc_msgSendSuper2(&v12, sel_initWithFrame_, a1, a2, a3, a4);
}

id InteractionsOnboardingEducationCell.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id InteractionsOnboardingEducationCell.init(coder:)(void *a1)
{
  char *v1;
  objc_class *ObjectType;
  char *v4;
  id v5;
  objc_super v7;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = &v1[OBJC_IVAR____TtC19HealthMedicationsUI35InteractionsOnboardingEducationCell_item];
  *(_OWORD *)v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  *((_QWORD *)v4 + 4) = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI35InteractionsOnboardingEducationCell____lazy_storage___labelView] = 0;
  v7.receiver = v1;
  v7.super_class = ObjectType;
  v5 = objc_msgSendSuper2(&v7, sel_initWithCoder_, a1);

  return v5;
}

id InteractionsOnboardingEducationCell.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC2A9494@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI35InteractionsOnboardingEducationCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a1);
}

uint64_t sub_1BC2A94E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI35InteractionsOnboardingEducationCell_item;
  swift_beginAccess();
  sub_1BC0F3E44(a1, v3);
  swift_endAccess();
  sub_1BC2A8A14();
  return sub_1BC0F7954(a1);
}

void (*sub_1BC2A9550(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC2A9078;
}

uint64_t sub_1BC2A9598(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  char v12;
  uint64_t v13;
  uint64_t v14;

  v4 = (uint64_t *)(v2 + qword_1EF401FD8);
  *v4 = 0;
  v4[1] = 0;
  *(_QWORD *)(v2 + qword_1EF401FE8) = a2;
  *(_QWORD *)(v2 + qword_1EF401FE0) = a1;
  v13 = sub_1BC2B4460();
  v14 = v5;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  v6 = v13;
  v7 = v14;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  LOBYTE(v13) = 0;
  HKDrugInteractionLifestyleFactor.localizedString(variant:)((uint64_t)&v13, a1);
  v13 = v6;
  v14 = v7;
  swift_bridgeObjectRetain();
  sub_1BC2B44FC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8 = v13;
  v9 = v14;
  swift_beginAccess();
  *v4 = v8;
  v4[1] = v9;
  swift_release();
  swift_bridgeObjectRelease();
  v12 = 0;
  HKDrugInteractionLifestyleFactor.localizedString(variant:)((uint64_t)&v12, a1);
  v10 = objc_msgSend((id)objc_opt_self(), sel_tertiarySystemGroupedBackgroundColor);
  return sub_1BC2B2DB0();
}

unint64_t sub_1BC2A9730()
{
  unint64_t result;

  result = qword_1EF402000;
  if (!qword_1EF402000)
  {
    result = MEMORY[0x1BCCEF2BC](&protocol conformance descriptor for InteractionsOnboardingEducationItem, &type metadata for InteractionsOnboardingEducationItem);
    atomic_store(result, (unint64_t *)&qword_1EF402000);
  }
  return result;
}

uint64_t sub_1BC2A9774@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI35InteractionsOnboardingEducationCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a2);
}

ValueMetadata *type metadata accessor for InteractionsOnboardingEducationItem()
{
  return &type metadata for InteractionsOnboardingEducationItem;
}

uint64_t type metadata accessor for OnboardingLifestyleInteractionSwitchItem()
{
  uint64_t result;

  result = qword_1EF402008;
  if (!qword_1EF402008)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC2A9818()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for OnboardingLifestyleInteractionSwitchItem()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of OnboardingLifestyleInteractionSwitchItem.__allocating_init(factor:settingsManager:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(class metadata base offset for OnboardingLifestyleInteractionSwitchItem + v0 + 24))();
}

uint64_t sub_1BC2A989C()
{
  return type metadata accessor for OnboardingLifestyleInteractionSwitchItem();
}

id sub_1BC2A98A4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryCell____lazy_storage___historyView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryCell____lazy_storage___historyView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryCell____lazy_storage___historyView);
  }
  else
  {
    type metadata accessor for MedicationsDayHistoryView();
    v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t sub_1BC2A992C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  int v16;
  _BYTE *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[5];

  v1 = sub_1BC2B39E0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0E710, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v34 - v6;
  sub_1BC0E1C64(0, &qword_1EF4020B8, (void (*)(uint64_t))type metadata accessor for MedicationsDayHistoryItem);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v34 - v9;
  v11 = (int *)type metadata accessor for MedicationsDayHistoryItem();
  v12 = *((_QWORD *)v11 - 1);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (uint64_t)v0 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryCell_item;
  swift_beginAccess();
  sub_1BC0E5774(v15, (uint64_t)v36);
  if (v36[3])
  {
    sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0F7C0);
    v16 = swift_dynamicCast();
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v12 + 56))(v10, v16 ^ 1u, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11) != 1)
    {
      sub_1BC2AA810((uint64_t)v10, (uint64_t)v14);
      v17 = sub_1BC2A98A4();
      v18 = (uint64_t *)&v14[v11[5]];
      v20 = *v18;
      v19 = v18[1];
      v21 = *(_QWORD *)&v14[v11[6]];
      v22 = &v14[v11[9]];
      v23 = sub_1BC2B23F0();
      v24 = *(_QWORD *)(v23 - 8);
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v7, v22, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v7, 0, 1, v23);
      v25 = v14[v11[10]];
      v17[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_previousDisplayContext] = v25;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((sub_1BC1D4484(v20, v19, v21) & 1) != 0)
      {
        if ((v25 & 1) != 0)
        {
          sub_1BC1D29E4(v20, v19, (uint64_t)v7);
          sub_1BC1D34EC(v21);
LABEL_15:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          sub_1BC0E1CFC((uint64_t)v7, (unint64_t *)&qword_1EDA0E710, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
          return sub_1BC1438A4((uint64_t)v14);
        }
      }
      else
      {
        if ((sub_1BC1D42D8((uint64_t)v7) & 1) == 0)
          goto LABEL_15;
        if (v25)
        {
          sub_1BC1D29E4(v20, v19, (uint64_t)v7);
          goto LABEL_15;
        }
      }
      sub_1BC1D2F1C(v20, v19, (uint64_t)v7, v21);
      goto LABEL_15;
    }
  }
  else
  {
    sub_1BC0F7954((uint64_t)v36);
    (*(void (**)(char *, uint64_t, uint64_t, int *))(v12 + 56))(v10, 1, 1, v11);
  }
  sub_1BC0E1CFC((uint64_t)v10, &qword_1EF4020B8, (void (*)(uint64_t))type metadata accessor for MedicationsDayHistoryItem);
  sub_1BC2B39A4();
  v26 = v0;
  v27 = sub_1BC2B39D4();
  v28 = sub_1BC2B48C8();
  if (os_log_type_enabled(v27, v28))
  {
    v34 = v1;
    v29 = (uint8_t *)swift_slowAlloc();
    v30 = swift_slowAlloc();
    v35 = v30;
    *(_DWORD *)v29 = 136315138;
    sub_1BC0E5774(v15, (uint64_t)v36);
    sub_1BC0F1278(0, (unint64_t *)&qword_1EDA0F7D0, (unint64_t *)&qword_1EDA0F7C0, MEMORY[0x1E0D2A060], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v31 = sub_1BC2B4490();
    v36[0] = sub_1BC12540C(v31, v32, &v35);
    sub_1BC2B4FD0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC0DC000, v27, v28, "Incorrect view model for MedicationsDayHistoryItem: %s", v29, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCEF3A0](v30, -1, -1);
    MEMORY[0x1BCCEF3A0](v29, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v34);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
}

id sub_1BC2A9DD8(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  objc_class *v14;
  id v15;
  id v16;
  id v17;
  double v18;
  double v19;
  double v20;
  double v21;
  id v22;
  id v23;
  objc_super v25;

  v9 = sub_1BC2B3CD4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryCell____lazy_storage___historyView] = 0;
  v13 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryCell_item];
  v14 = (objc_class *)type metadata accessor for MedicationsDayHistoryCell();
  *(_OWORD *)v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  *((_QWORD *)v13 + 4) = 0;
  v25.receiver = v4;
  v25.super_class = v14;
  v15 = objc_msgSendSuper2(&v25, sel_initWithFrame_, a1, a2, a3, a4);
  v16 = objc_msgSend(v15, sel_contentView);
  v17 = sub_1BC2A98A4();
  objc_msgSend(v16, sel_addSubview_, v17);

  sub_1BC2B3C80();
  sub_1BC2B3C44();
  v19 = v18;
  v21 = v20;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v22 = sub_1BC2A98A4();
  v23 = objc_msgSend(v15, sel_contentView);
  objc_msgSend(v22, sel_hk_alignConstraintsWithView_insets_, v23, 12.0, v19, 12.0, v21);

  return v15;
}

uint64_t sub_1BC2AA028()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  objc_class *v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  void (*v25)(uint64_t);
  uint64_t v26;
  uint64_t v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  int v39;
  void *v40;
  char **v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[5];
  objc_super v48;

  v1 = v0;
  v2 = sub_1BC2B39E0();
  v44 = *(_QWORD *)(v2 - 8);
  v45 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC0E1C64(0, &qword_1EDA0FAF0, (void (*)(uint64_t))MEMORY[0x1E0DC2130]);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v6);
  v43 = (uint64_t)&v43 - v10;
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v43 - v11;
  sub_1BC0E1C64(0, &qword_1EF4020B8, (void (*)(uint64_t))type metadata accessor for MedicationsDayHistoryItem);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v43 - v14;
  v16 = type metadata accessor for MedicationsDayHistoryItem();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (void *)sub_1BC2B3AE8();
  v21 = (objc_class *)type metadata accessor for MedicationsDayHistoryCell();
  v48.receiver = v1;
  v48.super_class = v21;
  objc_msgSendSuper2(&v48, sel__bridgedUpdateConfigurationUsingState_, v20);

  v22 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryCell_item;
  swift_beginAccess();
  sub_1BC0E5774(v22, (uint64_t)v47);
  if (!v47[3])
  {
    sub_1BC0F7954((uint64_t)v47);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, 1, 1, v16);
    goto LABEL_7;
  }
  sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0F7C0);
  v23 = swift_dynamicCast();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v15, v23 ^ 1u, 1, v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
LABEL_7:
    sub_1BC0E1CFC((uint64_t)v15, &qword_1EF4020B8, (void (*)(uint64_t))type metadata accessor for MedicationsDayHistoryItem);
    sub_1BC2B39A4();
    v28 = v1;
    v29 = sub_1BC2B39D4();
    v30 = sub_1BC2B48C8();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc();
      v32 = swift_slowAlloc();
      v46 = v32;
      *(_DWORD *)v31 = 136315138;
      sub_1BC0E5774(v22, (uint64_t)v47);
      sub_1BC0F1278(0, (unint64_t *)&qword_1EDA0F7D0, (unint64_t *)&qword_1EDA0F7C0, MEMORY[0x1E0D2A060], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      v33 = sub_1BC2B4490();
      v47[0] = sub_1BC12540C(v33, v34, &v46);
      sub_1BC2B4FD0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v29, v30, "Incorrect view model for MedicationsDayHistoryItem: %s", v31, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v32, -1, -1);
      MEMORY[0x1BCCEF3A0](v31, -1, -1);

    }
    else
    {

    }
    return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v4, v45);
  }
  sub_1BC2AA810((uint64_t)v15, (uint64_t)v19);
  if (objc_msgSend(v1, sel_isHighlighted))
  {
    MEMORY[0x1BCCEE230]();
    v24 = sub_1BC2B3B48();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v12, 1, v24))
    {
      v25 = (void (*)(uint64_t))MEMORY[0x1E0DC2130];
      v26 = v43;
      sub_1BC0E1CB0((uint64_t)v12, v43, &qword_1EDA0FAF0, (void (*)(uint64_t))MEMORY[0x1E0DC2130]);
      MEMORY[0x1BCCEE23C](v26);
      sub_1BC1438A4((uint64_t)v19);
      v27 = (uint64_t)v12;
      return sub_1BC0E1CFC(v27, &qword_1EDA0FAF0, v25);
    }
    sub_1BC12A328();
    sub_1BC2B4D00();
    sub_1BC2B3B18();
    v38 = v12;
  }
  else
  {
    MEMORY[0x1BCCEE230]();
    v36 = sub_1BC2B3B48();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 48))(v8, 1, v36))
    {
      v25 = (void (*)(uint64_t))MEMORY[0x1E0DC2130];
      v37 = v43;
      sub_1BC0E1CB0((uint64_t)v8, v43, &qword_1EDA0FAF0, (void (*)(uint64_t))MEMORY[0x1E0DC2130]);
      MEMORY[0x1BCCEE23C](v37);
      sub_1BC1438A4((uint64_t)v19);
      v27 = (uint64_t)v8;
      return sub_1BC0E1CFC(v27, &qword_1EDA0FAF0, v25);
    }
    v39 = v19[*(int *)(v16 + 40)];
    v40 = (void *)objc_opt_self();
    v41 = &selRef_secondarySystemBackgroundColor;
    if (!v39)
      v41 = &selRef_quaternarySystemFillColor;
    v42 = objc_msgSend(v40, *v41);
    sub_1BC2B3B18();
    v38 = v8;
  }
  MEMORY[0x1BCCEE23C](v38);
  return sub_1BC1438A4((uint64_t)v19);
}

id sub_1BC2AA630()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationsDayHistoryCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for MedicationsDayHistoryCell()
{
  return objc_opt_self();
}

uint64_t sub_1BC2AA6B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryCell_item;
  swift_beginAccess();
  return sub_1BC0E5774(v3, a1);
}

uint64_t sub_1BC2AA708(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryCell_item;
  swift_beginAccess();
  sub_1BC0F3E44(a1, v3);
  swift_endAccess();
  sub_1BC2A992C();
  return sub_1BC0F7954(a1);
}

uint64_t (*sub_1BC2AA774(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1BC2AA7BC;
}

uint64_t sub_1BC2AA7BC(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_1BC2A992C();
  return result;
}

uint64_t sub_1BC2AA7EC(uint64_t a1, void *a2)
{
  return sub_1BC2AA854(a2);
}

uint64_t sub_1BC2AA810(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MedicationsDayHistoryItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC2AA854(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  int v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  void *v38;
  char *v39;
  double *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  id v45;
  id v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char *v54;
  id v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  void *v68;
  void *v69;
  id v70;
  uint64_t v71;
  void (*v72)(char *, char *, uint64_t);
  void *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  void *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t *v103;
  uint64_t v104;
  void *v105;
  id v106;
  id v107;
  _QWORD *v108;
  void *v109;
  id v110;
  uint64_t v111;
  uint64_t v112;
  void *v113;
  uint64_t v114;
  char *v115;
  char *v116;
  char *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  void (*v125)(char *, uint64_t, uint64_t);
  unint64_t v126;
  _QWORD v127[6];

  v125 = (void (*)(char *, uint64_t, uint64_t))sub_1BC2B39E0();
  v122 = *((_QWORD *)v125 - 1);
  v3 = MEMORY[0x1E0C80A78](v125);
  v5 = (char *)&v112 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v121 = (char *)&v112 - v6;
  v7 = sub_1BC2B23F0();
  v120 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v117 = (char *)&v112 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v116 = (char *)&v112 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v119 = (char *)&v112 - v13;
  MEMORY[0x1E0C80A78](v12);
  v123 = (char *)&v112 - v14;
  sub_1BC0E1C64(0, (unint64_t *)&qword_1EDA0E710, v15);
  v17 = MEMORY[0x1E0C80A78](v16);
  v118 = (uint64_t)&v112 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v112 - v20;
  MEMORY[0x1E0C80A78](v19);
  v124 = (uint64_t)&v112 - v22;
  sub_1BC0E1C64(0, &qword_1EF4020B8, (void (*)(uint64_t))type metadata accessor for MedicationsDayHistoryItem);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v112 - v24;
  v26 = type metadata accessor for MedicationsDayHistoryItem();
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v29 = (char *)&v112 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryCell_item;
  swift_beginAccess();
  sub_1BC0E5774(v30, (uint64_t)v127);
  if (!v127[3])
  {
    sub_1BC0F7954((uint64_t)v127);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56))(v25, 1, 1, v26);
    goto LABEL_24;
  }
  sub_1BC0E7AD8(0, (unint64_t *)&qword_1EDA0F7C0);
  v31 = swift_dynamicCast();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v25, v31 ^ 1u, 1, v26);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26) == 1)
  {
LABEL_24:
    sub_1BC0E1CFC((uint64_t)v25, &qword_1EF4020B8, (void (*)(uint64_t))type metadata accessor for MedicationsDayHistoryItem);
    sub_1BC2B39A4();
    v46 = v1;
    v47 = sub_1BC2B39D4();
    v48 = sub_1BC2B48C8();
    if (os_log_type_enabled(v47, v48))
    {
      v49 = (uint8_t *)swift_slowAlloc();
      v50 = swift_slowAlloc();
      v126 = v50;
      *(_DWORD *)v49 = 136315138;
      sub_1BC0E5774(v30, (uint64_t)v127);
      sub_1BC0F1278(0, (unint64_t *)&qword_1EDA0F7D0, (unint64_t *)&qword_1EDA0F7C0, MEMORY[0x1E0D2A060], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      v51 = sub_1BC2B4490();
      v127[0] = sub_1BC12540C(v51, v52, (uint64_t *)&v126);
      sub_1BC2B4FD0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v47, v48, "Incorrect view model for MedicationsDayHistoryItem: %s", v49, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v50, -1, -1);
      MEMORY[0x1BCCEF3A0](v49, -1, -1);

    }
    else
    {

    }
    return (*(uint64_t (**)(char *, void (*)(char *, uint64_t, uint64_t)))(v122 + 8))(v5, v125);
  }
  v113 = a1;
  sub_1BC2AA810((uint64_t)v25, (uint64_t)v29);
  v32 = *(_QWORD *)&v29[*(int *)(v26 + 28)];
  if (!v32)
  {
    v54 = v121;
    sub_1BC2B39A4();
    v55 = v1;
    v56 = sub_1BC2B39D4();
    v57 = sub_1BC2B48C8();
    if (os_log_type_enabled(v56, v57))
    {
      v58 = (uint8_t *)swift_slowAlloc();
      v59 = swift_slowAlloc();
      v126 = v59;
      *(_DWORD *)v58 = 136315138;
      sub_1BC0E5774(v30, (uint64_t)v127);
      sub_1BC0F1278(0, (unint64_t *)&qword_1EDA0F7D0, (unint64_t *)&qword_1EDA0F7C0, MEMORY[0x1E0D2A060], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      v60 = sub_1BC2B4490();
      v127[0] = sub_1BC12540C(v60, v61, (uint64_t *)&v126);
      sub_1BC2B4FD0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC0DC000, v56, v57, "doseEvents do not exist on MedicationsDayHistoryItem: %s", v58, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCEF3A0](v59, -1, -1);
      MEMORY[0x1BCCEF3A0](v58, -1, -1);
    }
    else
    {

    }
    (*(void (**)(char *, void (*)(char *, uint64_t, uint64_t)))(v122 + 8))(v54, v125);
    return sub_1BC1438A4((uint64_t)v29);
  }
  v114 = v26;
  v127[0] = MEMORY[0x1E0DEE9D8];
  v126 = MEMORY[0x1E0DEE9D8];
  v33 = v124;
  v121 = *(char **)(v120 + 56);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v121)(v124, 1, 1, v7);
  v115 = v29;
  if (v32 >> 62)
  {
    swift_bridgeObjectRetain();
    v34 = sub_1BC2B52D0();
    v122 = v7;
    if (v34)
      goto LABEL_6;
  }
  else
  {
    v34 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v122 = v7;
    if (v34)
    {
LABEL_6:
      if (v34 >= 1)
      {
        v35 = 0;
        v125 = (void (*)(char *, uint64_t, uint64_t))(v32 & 0xC000000000000001);
        while (1)
        {
          if (v125)
            MEMORY[0x1BCCEE950](v35, v32);
          else
            swift_retain();
          v36 = (void *)sub_1BC2B33A4();
          if (v36)
            break;
          swift_release();
LABEL_9:
          if (v34 == ++v35)
            goto LABEL_33;
        }
        v37 = v36;
        v38 = (void *)sub_1BC2B3398();
        v39 = v123;
        sub_1BC2B23B4();
        type metadata accessor for MedicationsDoseLogViewModel(0);
        swift_allocObject();
        v40 = MedicationsDoseLogViewModel.init(medication:doseEvent:scheduleItem:logDate:dosage:index:)(v37, v38, 0, v39, v35, 1.0);
        v41 = (void *)*((_QWORD *)v40 + 3);
        if (v41)
        {
          if (objc_msgSend(v41, sel_logOrigin) != (id)2)
            goto LABEL_16;
        }
        else if (!*((_QWORD *)v40 + 4))
        {
LABEL_16:
          v42 = swift_retain();
          MEMORY[0x1BCCEDCF0](v42);
          if (*(_QWORD *)((v127[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v127[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1BC2B45C8();
LABEL_22:
          sub_1BC2B4604();
          sub_1BC2B45A4();
          v44 = (void *)sub_1BC2B3398();
          v45 = objc_msgSend(v44, sel_startDate);

          sub_1BC2B23A8();
          swift_release();

          swift_release();
          v33 = v124;
          sub_1BC0E1CFC(v124, (unint64_t *)&qword_1EDA0E710, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
          v7 = v122;
          ((void (*)(char *, _QWORD, uint64_t, uint64_t))v121)(v21, 0, 1, v122);
          sub_1BC141D44((uint64_t)v21, v33);
          goto LABEL_9;
        }
        v43 = swift_retain();
        MEMORY[0x1BCCEDCF0](v43);
        if (*(_QWORD *)((v126 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v126 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BC2B45C8();
        goto LABEL_22;
      }
      __break(1u);
      goto LABEL_56;
    }
  }
LABEL_33:
  swift_bridgeObjectRelease();
  v62 = v118;
  sub_1BC0E1CB0(v33, v118, (unint64_t *)&qword_1EDA0E710, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  v27 = v120;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v120 + 48))(v62, 1, v7) == 1)
  {
    v63 = (void (*)(uint64_t))MEMORY[0x1E0CB0870];
    sub_1BC0E1CFC(v33, (unint64_t *)&qword_1EDA0E710, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BC1438A4((uint64_t)v115);
    return sub_1BC0E1CFC(v62, (unint64_t *)&qword_1EDA0E710, v63);
  }
  v125 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 32);
  v125(v119, v62, v7);
  v25 = v115;
  if (!(v126 >> 62))
  {
    v64 = *(_QWORD *)((v126 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_37;
  }
LABEL_56:
  swift_bridgeObjectRetain();
  v64 = sub_1BC2B52D0();
  swift_bridgeObjectRelease();
LABEL_37:
  v65 = v127[0];
  v66 = v127[0] >> 62;
  if (!v64)
  {
    if (v66)
    {
      swift_bridgeObjectRetain();
      v111 = sub_1BC2B52D0();
      swift_bridgeObjectRelease();
      if (v111)
        goto LABEL_40;
    }
    else if (*(_QWORD *)((v127[0] & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_40;
    }
    (*(void (**)(char *, uint64_t))(v27 + 8))(v119, v7);
    sub_1BC0E1CFC(v124, (unint64_t *)&qword_1EDA0E710, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_1BC1438A4((uint64_t)v25);
  }
LABEL_40:
  v67 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
  objc_msgSend(v67, sel_setDateStyle_, 0);
  objc_msgSend(v67, sel_setTimeStyle_, 1);
  v68 = (void *)sub_1BC2B4430();
  v69 = (void *)sub_1BC2B2360();
  v70 = objc_msgSend(v67, sel_hm_localizableTimeStringKeyWithPrefix_date_, v68, v69);

  v123 = (char *)sub_1BC2B4460();
  if (v66)
  {
    swift_bridgeObjectRetain();
    v71 = sub_1BC2B52D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v71 = *(_QWORD *)((v65 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v72 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
  if (v71)
  {
    v72(v116, v119, v7);
    if (qword_1EDA0FEE8 != -1)
      swift_once();
    v73 = (void *)qword_1EDA0FEF8;
    sub_1BC0F1278(0, qword_1EDA0ED40, (unint64_t *)&qword_1EDA0FED0, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v74 = swift_allocObject();
    *(_OWORD *)(v74 + 16) = xmmword_1BC2B92D0;
    v75 = &v115[*(int *)(v114 + 20)];
    v77 = *(_QWORD *)v75;
    v76 = *((_QWORD *)v75 + 1);
    *(_QWORD *)(v74 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v74 + 64) = sub_1BC0F2748();
    *(_QWORD *)(v74 + 32) = v77;
    *(_QWORD *)(v74 + 40) = v76;
    v78 = v73;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v79 = sub_1BC2B2144();
    v81 = v80;
    if (*(_QWORD *)(v74 + 16))
    {
      v79 = sub_1BC2B443C();
      v83 = v82;
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v81 = v83;
    }
    else
    {
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
    }
    v84 = v127[0];
    type metadata accessor for MedicationDoseLogListViewModel(0);
    v71 = swift_allocObject();
    v85 = v122;
    v125((char *)(v71 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationDoseLogListViewModel_date), (uint64_t)v116, v122);
    v86 = (uint64_t *)(v71 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationDoseLogListViewModel_title);
    *v86 = v79;
    v86[1] = v81;
    v7 = v85;
    *(_QWORD *)(v71 + 16) = v84;
    swift_bridgeObjectRetain();
  }
  v72(v117, v119, v7);
  if (qword_1EDA0FEE8 != -1)
    swift_once();
  v87 = (void *)qword_1EDA0FEF8;
  sub_1BC0F1278(0, qword_1EDA0ED40, (unint64_t *)&qword_1EDA0FED0, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v88 = swift_allocObject();
  *(_OWORD *)(v88 + 16) = xmmword_1BC2B92D0;
  v89 = &v115[*(int *)(v114 + 20)];
  v90 = *(_QWORD *)v89;
  v91 = *((_QWORD *)v89 + 1);
  *(_QWORD *)(v88 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v88 + 64) = sub_1BC0F2748();
  *(_QWORD *)(v88 + 32) = v90;
  *(_QWORD *)(v88 + 40) = v91;
  v92 = v87;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v93 = sub_1BC2B2144();
  v95 = v94;
  if (*(_QWORD *)(v88 + 16))
  {
    v93 = sub_1BC2B443C();
    v97 = v96;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v95 = v97;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v98 = v113;
  v99 = v120;
  swift_bridgeObjectRelease();

  v100 = v126;
  type metadata accessor for MedicationDoseLogListViewModel(0);
  v101 = swift_allocObject();
  v102 = v122;
  v125((char *)(v101 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationDoseLogListViewModel_date), (uint64_t)v117, v122);
  v103 = (uint64_t *)(v101 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationDoseLogListViewModel_title);
  *v103 = v93;
  v103[1] = v95;
  *(_QWORD *)(v101 + 16) = v100;
  v104 = (uint64_t)v115;
  v105 = *(void **)&v115[*(int *)(v114 + 32)];
  v106 = objc_allocWithZone((Class)type metadata accessor for MedicationsLogViewController());
  swift_retain();
  v107 = v105;
  v108 = (_QWORD *)swift_retain();
  v109 = (void *)MedicationsLogViewController.init(medicationDoseLogList:asNeededMedicationDoseLogList:healthStore:showRecordAll:provenance:context:)(v108, v71, v107, 0, 2, 0, 3, 0);
  v110 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F7B8]), sel_initWithRootViewController_, v109);
  objc_msgSend(v110, sel_setModalPresentationStyle_, 2);
  objc_msgSend(v110, sel_setModalInPresentation_, 1);
  objc_msgSend(v98, sel_presentViewController_animated_completion_, v110, 1, 0);
  swift_release();
  swift_release();

  (*(void (**)(char *, uint64_t))(v99 + 8))(v119, v102);
  sub_1BC0E1CFC(v124, (unint64_t *)&qword_1EDA0E710, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  swift_bridgeObjectRelease();
  return sub_1BC1438A4(v104);
}

